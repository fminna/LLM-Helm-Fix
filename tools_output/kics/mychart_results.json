{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 142,
	"files_parsed": 1,
	"lines_parsed": 135,
	"lines_ignored": 7,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 4,
		"INFO": 0,
		"LOW": 28,
		"MEDIUM": 21,
		"TRACE": 0
	},
	"total_counter": 53,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:32:16.644299+02:00",
	"end": "2024-05-17T23:32:18.567398+02:00",
	"paths": [
		"templates/mychart_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "588be6029b9dc0a280e8ae3cfc8287b53450bef145e50b0576dbcd25678388ad",
					"line": 25,
					"resource_type": "PersistentVolume",
					"resource_name": "mysql-pv",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{mysql-pv}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "PersistentVolume name 'mysql-pv' of kind 'PersistentVolume' in non kube-system namespace 'default' should not mount a host sensitive OS directory '/mysqldata' with hostPath",
					"actual_value": "PersistentVolume name 'mysql-pv' of kind 'PersistentVolume' in non kube-system namespace 'default' is mounting a host sensitive OS directory '/mysqldata' with hostPath"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "d69f48148a4b28e0a5a9d2ef965824be7f87e905bd02cc1f6f330c6090658932",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "b51f69f6fe5a56a33107b9ffd41b92bf988adb8e4bf1c92b5119e6b31d9858ea",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "5bc6a18bfe7865f21ff2f911e3a9a332b0c66b1daba48fb5ae2a3737cac7e04e",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.volumeMounts.name={{mysqlpod-pvc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.volumeMounts.name={{mysqlpod-pvc}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.volumeMounts.name={{mysqlpod-pvc}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "fe2127a6e1a41b25026a8aeada9b7ce79fe7608b26e15e47b68b17baa7397d9d",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "7331092e6a9df473064befe47365bd441a197b237e988acb6b8610e3249b5151",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "b8f19d7d482bd608ccb50051c659cef8a3932060d74732a12a62581792f7b9cf",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "c3296ef7805abdf8f497f2c0b674346cd638a38bc5f0c1e00ad0ee08507a4d08",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "6265f07b363dd9ee382b42588ab57f51c7f720ab1238da0d7be0b0b40d38a4ef",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "1104cf1d4bfa7588c32f0554e1c2baa66c38bac788f48567de6360fb9d1458bd",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "867987744ad6983ddfc4133b16994cdb5bd2852eb5c9d814324d4acf4fb62444",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "201a1345e57d891ab888e32f94d6fce49df146d8a88f9a25031b8dad47e5ef75",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "72cf946067c68f5733087997690be8ebcdd82d1373bcec14c9748ad9f83f05a2",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "d3c34277ba8d10881e5320772fbb2561efcfeba9e43a14a3d9837aa88084192c",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "2932f0b95bb04ea78e70669b3706b3395a46978cd2c80be980c930a14f975750",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "2823ee8436cecabeecf17be1df9c877997d2638e2f1b6b1b94ff6e902806007e",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "6b1e5af362942877e3101e27cdfa94262c5204110ae8567a016ce1e0c1ddaa37",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "bce54bf147f6870249f55603bead9390f0e8ee5dd03d8c228491d33323a97009",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "b25526de70ef52c898b10f9ff85f4a18d38f8543ad28ce184f6e564d50b8d1a6",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{mysql}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "4d831e3181ae7a534f3a01084069650baf33087ace14017b6a4e436bea0f0bfc",
					"line": 138,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "d552be17a6727a6816c17083c489f633f27ef2e89a2be164fae47616900d5773",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{mysql}}",
					"search_line": 79,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "f6f1b30ea59ce8b379c4a95eb254ecd5b5febfa438e87ceaa707e6edd4e70949",
					"line": 128,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{wordpress}}",
					"search_line": 128,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Secret",
					"resource_name": "mysecret",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{mysecret}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "e2949dcdaf37eca1c04800119ebb3108fd635dfd56e447b93f707ca7bfb40230",
					"line": 47,
					"resource_type": "Service",
					"resource_name": "mysql-service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{mysql-service}}",
					"search_line": 47,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "929066354a87a485dd81723a61437ba3434df5cf452c6cee32ccd8a94b83c671",
					"line": 63,
					"resource_type": "Service",
					"resource_name": "wordpress-service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{wordpress-service}}",
					"search_line": 63,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "12c34d46c6d44a30cf95cbf1d9a597e79f1d848b9254d87b6177fe9fe3953f5a",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}.spec.template.spec.containers.name=mysql",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mysql has resources defined",
					"actual_value": "spec.template.spec.containers.name=mysql doesn't have resources defined"
				},
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "e84d776e1345e15580aec0e00371f66ed6d81205cb0805870b386fb76ebddb2a",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name=wordpress",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=wordpress has resources defined",
					"actual_value": "spec.template.spec.containers.name=wordpress doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "04fa088b38bb321830a8734a4e24853882169fa8ce75eb7d57e84b8e81718bf0",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name=wordpress",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=wordpress should have resources defined",
					"actual_value": "spec.template.spec.containers.name=wordpress doesn't have resources defined"
				},
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "9ccc182b88597a94c139ee71e030eb146ad8fe89f567224e7045858ceedc2705",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}.spec.template.spec.containers.name=mysql",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mysql should have resources defined",
					"actual_value": "spec.template.spec.containers.name=mysql doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "79a6ca985e184c96979f99a917a84db9e0f2087425d3e8d0fc876f0cd0c458e6",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "mysql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "7b2e2809cc2b306fae5ef37e9d002296ff15816456e03eda4231b54360ad6ae2",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "f312bca81992689375540fc6cc805b3f59b4dfa6ec84f1d6ac4e63af06169e77",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{mysql}}",
					"actual_value": "metadata.name={{mysql}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{mysql}}"
				},
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "289a128bde771382f0afaa3a96b1ba2938f2f17b148382d8ec90c59f39f44a9c",
					"line": 135,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{wordpress}}",
					"actual_value": "metadata.name={{wordpress}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{wordpress}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "c47b6426a05043cbcb9965df422ddf6c81bf0ece8a2db2a41a66f2a6c8d41a4a",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.containers.name=wordpress",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.containers.name=wordpress.securityContext should be set",
					"actual_value": "metadata.name={{wordpress}}.spec.containers.name=wordpress.securityContext is undefined"
				},
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "29fc3e1e49bb2bfae546185025f39ae06e1c5144be9b0f6fb598103548c787e4",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}.spec.containers.name=mysql",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}}.spec.containers.name=mysql.securityContext should be set",
					"actual_value": "metadata.name={{mysql}}.spec.containers.name=mysql.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "3bdeda3fb27787eae3f42ecc032378330a09db3b7f0c535cc0e47d457e17f21e",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{mysql}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "3166dec868b24da669c2886537dd821b743c074c0fe29b459235ce02ef48bacc",
					"line": 128,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{wordpress}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "b8eb60276cbe7e3de73eeaad04f850617769b54917f3e51aaa974f612bda1ba3",
					"line": 31,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "mysql-pvc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql-pvc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql-pvc}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{mysql-pvc}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "2e73c4592b8fde796af82bc46eac1cf87a1b422a903851ddd37fa4d60f8fec12",
					"line": 128,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{wordpress}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "65996ef039d61359ad80ff408d6f2ecc44a97d7578aaba8939e72901fd36a907",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{mysql}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "187f45e1a43e0cdeab58e2f791d650ec2750d8785430e7ca2378e56097df09d1",
					"line": 31,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "mysql-pvc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql-pvc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql-pvc}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{mysql-pvc}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "565f547850a783963eb2401324d5508e1a7b1cd930cbd94abb7fe32f0e8c8f49",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}.spec.template.spec.containers.name=mysql",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mysql has a security context",
					"actual_value": "spec.template.spec.containers.name=mysql does not have a security context"
				},
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "f5edf6c964bebd48a2e8a984e42ec84f31a498ba93d619a51ea35a058bf1d632",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name=wordpress",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=wordpress has a security context",
					"actual_value": "spec.template.spec.containers.name=wordpress does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "35d37428e64017903aeb6c8144ac2d8e6fd8d9300681747a699d7c71c83e01d9",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "da37d8cbfe885dd5d43a0bc6b904511e2a0f87f4bccaeead0393b1a7a3b0c11e",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "c02db84c8359206e392f1b2d6d12802608df44614fcf0cef9bbfaf3126f1c0bc",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "mysql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{mysql}}.spec.template.spec.containers.env.name={{MYSQL_USER}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{mysql}}.env.name={{MYSQL_USER}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{mysql}}.env.name={{MYSQL_USER}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "a17b868908c2eb976be885e99385254dc9991e01ce9176d69777ccaebb972a92",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "mysql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{mysql}}.spec.template.spec.containers.env.name={{MYSQL_ROOT_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{mysql}}.env.name={{MYSQL_ROOT_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{mysql}}.env.name={{MYSQL_ROOT_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "0d05be52a4fec2aa38d953d8452f6039ccc695dd66c446e9bfafc97b6ff0f238",
					"line": 118,
					"resource_type": "Deployment",
					"resource_name": "mysql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{mysql}}.spec.template.spec.containers.env.name={{MYSQL_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{mysql}}.env.name={{MYSQL_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{mysql}}.env.name={{MYSQL_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "f0e0970fc447b72e7d18fc5d15b0328a7114ec342d0a021c6b1f623eaf3557ce",
					"line": 108,
					"resource_type": "Deployment",
					"resource_name": "mysql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{mysql}}.spec.template.spec.containers.env.name={{MYSQL_DATABASE}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{mysql}}.env.name={{MYSQL_DATABASE}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{mysql}}.env.name={{MYSQL_DATABASE}}.valueFrom.secretKeyRef' is defined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "0c753736d2b87883ac55713b52841c12995f01e1e64aa1274713886f11e308d7",
					"line": 50,
					"resource_type": "Service",
					"resource_name": "mysql-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{mysql-service}}.spec.ports.port={{3306}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql-service}}.spec.ports.port={{3306}} has a Pod port",
					"actual_value": "metadata.name={{mysql-service}}.spec.ports.port={{3306}} does not have a Pod port"
				},
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "0b1d86940355bca3e87c561c1de5bddac5a740c221a878491d25eae2c57d5ce0",
					"line": 66,
					"resource_type": "Service",
					"resource_name": "wordpress-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{wordpress-service}}.spec.ports.port={{80}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress-service}}.spec.ports.port={{80}} has a Pod port",
					"actual_value": "metadata.name={{wordpress-service}}.spec.ports.port={{80}} does not have a Pod port"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "a8376ed58704b433e72ef2336697d64af8074d9db362f9d8387cadee6acab8c0",
					"line": 71,
					"resource_type": "Service",
					"resource_name": "wordpress-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{wordpress-service}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				},
				{
					"file_name": "templates/mychart_template.yaml",
					"similarity_id": "f4398b22ac3a68ad07f6501fb3f37915d342db4ba8c6a76b59c53676cf6d9720",
					"line": 55,
					"resource_type": "Service",
					"resource_name": "mysql-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{mysql-service}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
