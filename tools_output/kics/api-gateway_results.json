{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 483,
	"files_parsed": 1,
	"lines_parsed": 476,
	"lines_ignored": 7,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 16,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:07:37.559738+02:00",
	"end": "2024-05-17T22:07:39.485837+02:00",
	"paths": [
		"templates/api-gateway_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/api-gateway_template.yaml",
					"similarity_id": "d09f11f01904e421c2798587ef6f3266b7c6ab88cc08eb372d5f4c8232d43d3b",
					"line": 466,
					"resource_type": "Deployment",
					"resource_name": "api-gateway-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{api-gateway-release-name}}.spec.template.spec.containers.name={{api-gateway-release-name}}.volumeMounts.name={{release-name-base-config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{api-gateway-release-name}}.spec.template.spec.containers.name={{api-gateway-release-name}}.volumeMounts.name={{release-name-base-config}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{api-gateway-release-name}}.spec.template.spec.containers.name={{api-gateway-release-name}}.volumeMounts.name={{release-name-base-config}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/api-gateway_template.yaml",
					"similarity_id": "b558867e334c1f127c00f5f2a1044d81a527805edb358cdf444192367cc55216",
					"line": 468,
					"resource_type": "Deployment",
					"resource_name": "api-gateway-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{api-gateway-release-name}}.spec.template.spec.containers.name={{api-gateway-release-name}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{api-gateway-release-name}}.spec.template.spec.containers.name={{api-gateway-release-name}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{api-gateway-release-name}}.spec.template.spec.containers.name={{api-gateway-release-name}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/api-gateway_template.yaml",
					"similarity_id": "725ea08beb71749b9f9a336f8552ef22dd5a01ca836b3e915ebbde41eb88c662",
					"line": 445,
					"resource_type": "Deployment",
					"resource_name": "api-gateway-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{api-gateway-release-name}}.spec.template.spec.containers.name={{api-gateway-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{api-gateway-release-name}}.spec.template.spec.containers.name={{api-gateway-release-name}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{api-gateway-release-name}}.spec.template.spec.containers.name={{api-gateway-release-name}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/api-gateway_template.yaml",
					"similarity_id": "0c36f95ae81b7ecb9c5933316027437a273bea9e5a571da168dbfe706db2916a",
					"line": 442,
					"resource_type": "Deployment",
					"resource_name": "api-gateway-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{api-gateway-release-name}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{api-gateway-release-name}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{api-gateway-release-name}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/api-gateway_template.yaml",
					"similarity_id": "e6a9e891f82a3a30854338285f78ed67736b2e6c2577a1a48744c56dc24d66d4",
					"line": 28,
					"resource_type": "Secret",
					"resource_name": "api-gateway-release-name-secret-config",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{api-gateway-release-name-secret-config}}",
					"search_line": 28,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/api-gateway_template.yaml",
					"similarity_id": "e5d9cad5bb948d6b221a9b30d4ea358743d01646629fe4521137dd85c5725b1c",
					"line": 40,
					"resource_type": "ConfigMap",
					"resource_name": "api-gateway-release-name-base-config",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{api-gateway-release-name-base-config}}",
					"search_line": 40,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/api-gateway_template.yaml",
					"similarity_id": "ebaf49818cb8b263e122fa42819131d2a714eb5bb266653205d33c3059f0da35",
					"line": 396,
					"resource_type": "Service",
					"resource_name": "api-gateway-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{api-gateway-release-name}}",
					"search_line": 396,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/api-gateway_template.yaml",
					"similarity_id": "2dccd7e684fff2f21e941335ba5747dd908068bb6e87023ef9671c1faa211854",
					"line": 363,
					"resource_type": "ConfigMap",
					"resource_name": "api-gateway-release-name-ratelimit-config",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{api-gateway-release-name-ratelimit-config}}",
					"search_line": 363,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/api-gateway_template.yaml",
					"similarity_id": "1704f1d94b070c2440e40799939973c3abb4ce1068d0b56ec0901b60aa0a2268",
					"line": 417,
					"resource_type": "Deployment",
					"resource_name": "api-gateway-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{api-gateway-release-name}}",
					"search_line": 417,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/api-gateway_template.yaml",
					"similarity_id": "f3757d09a9c26a1b420a82039a4064c0370ff80d42a347f91a9ff476b642c7b8",
					"line": 446,
					"resource_type": "Deployment",
					"resource_name": "api-gateway-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{api-gateway-release-name}}.spec.template.spec.containers.name={{api-gateway-release-name}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{api-gateway-release-name}}.spec.template.spec.containers.name={{api-gateway-release-name}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{api-gateway-release-name}}.spec.template.spec.containers.name={{api-gateway-release-name}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/api-gateway_template.yaml",
					"similarity_id": "4bf55e22cb41d6091dc182380bc82ab4f38c262d153aabbc9bca9b3af689cfa7",
					"line": 435,
					"resource_type": "Deployment",
					"resource_name": "api-gateway-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{api-gateway-release-name}}.spec.template.metadata",
					"search_line": 435,
					"search_value": "",
					"expected_value": "metadata.name={{api-gateway-release-name}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{api-gateway-release-name}}",
					"actual_value": "metadata.name={{api-gateway-release-name}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{api-gateway-release-name}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/api-gateway_template.yaml",
					"similarity_id": "9889150d2ced15e3f7fdf451bed70b2f5ca0858aea029835d229e14c750fa11f",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "api-gateway-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{api-gateway-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{api-gateway-release-name}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{api-gateway-release-name}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/api-gateway_template.yaml",
					"similarity_id": "e24d78ebbe038f90c348c9bb8a33958b2c4a25776dd3617595f5225030e82384",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "api-gateway-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{api-gateway-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{api-gateway-release-name}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{api-gateway-release-name}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/api-gateway_template.yaml",
					"similarity_id": "112a92a5121e5e47e8597f718d2764bc8d69b84cc27bc0cf17cc3a7f22ad69c1",
					"line": 468,
					"resource_type": "Deployment",
					"resource_name": "api-gateway-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{api-gateway-release-name}}.spec.template.spec.containers.name={{api-gateway-release-name}}",
					"search_line": 468,
					"search_value": "",
					"expected_value": "metadata.name={{api-gateway-release-name}}.spec.template.spec.containers.name={{api-gateway-release-name}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{api-gateway-release-name}}.spec.template.spec.containers.name={{api-gateway-release-name}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/api-gateway_template.yaml",
					"similarity_id": "96dd92019f565639b30c9a057f9e0290a036e2bc1b7ed228fb925f9720f2e36d",
					"line": 404,
					"resource_type": "Service",
					"resource_name": "api-gateway-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{api-gateway-release-name}}.spec.selector",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{api-gateway-release-name}}.spec.selector label refers to a Pod label",
					"actual_value": "metadata.name={{api-gateway-release-name}}.spec.selector label does not match with any Pod label"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/api-gateway_template.yaml",
					"similarity_id": "7dfa1ab6dd739e1745c6fa8ecbed782ecc1e693f3442c9fe8db0ab75cc520b81",
					"line": 34,
					"resource_type": "Service",
					"resource_name": "api-gateway-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{api-gateway-release-name}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
