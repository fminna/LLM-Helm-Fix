{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 192,
	"files_parsed": 1,
	"lines_parsed": 185,
	"lines_ignored": 7,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 22,
		"MEDIUM": 22,
		"TRACE": 0
	},
	"total_counter": 47,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:47:19.086363+02:00",
	"end": "2024-06-26T01:47:21.244915+02:00",
	"paths": [
		"templates/homechart_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "f1876079043d431b47ea9aedf75e1e52f8e707f4dd31279c18ffa51bf6bb18fe",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "homechart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{homechart}}.spec.template.spec.containers.name={{homechart}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{homechart}}.spec.template.spec.containers.name={{homechart}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{homechart}}.spec.template.spec.containers.name={{homechart}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "7f4d1523dabdb56ec655d0ec857e996b571f0c30268fdeb141a556cfc2aea922",
					"line": 122,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "cd085abb6db55b7c4d1817c6fc996a558cbd652b6997c56be36aa222fcd7801c",
					"line": 159,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{postgresql}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{postgresql}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "092f6a1993bd15c1e94885bd56d104598415e762b48871a7d67c86a0d4464c32",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "homechart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{homechart}}.spec.template.spec.containers.name={{homechart}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{homechart}}.spec.template.spec.containers.name={{homechart}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{homechart}}.spec.template.spec.containers.name={{homechart}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "a94ccb4e641fcc9cad42124af644b4b30ed97bb15d28bbe6f51037c4f5fb7195",
					"line": 122,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "1b8f392b7d36e594d1b912f994e5bcdc901726438691ed6e2a30716a4f05aa00",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "homechart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{homechart}}.spec.template.spec.containers.name={{homechart}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{homechart}}.spec.template.spec.containers.name={{homechart}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{homechart}}.spec.template.spec.containers.name={{homechart}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "bf9120d16deb11560fad63ce32f748428803924ade1bf7489350495c25ebae6b",
					"line": 122,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "a9935b09068bb7999883352c0b549cf2ed9a6fa6f360b0e4c070c5a11142c312",
					"line": 122,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "2527b71a077fe0143c7b34785cfd9082a4d2fb065641007ec748cd9275fe055a",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "homechart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{homechart}}.spec.template.spec.containers.name={{homechart}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{homechart}}.spec.template.spec.containers.name={{homechart}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{homechart}}.spec.template.spec.containers.name={{homechart}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "e7c3f81bc26a435b0a714a9a12432609380a89914ca6c1a4b68deed3e3c0611b",
					"line": 122,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "eece135fa5bc17e3befc32ec7d496f82c3dc3c32ee22029bd76143e4d0a8ca5e",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "homechart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{homechart}}.spec.template.spec.containers.name={{homechart}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{homechart}}.spec.template.spec.containers.name={{homechart}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{homechart}}.spec.template.spec.containers.name={{homechart}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "a4dbc26064bd05469f1a4656fd129decf39a79bb225b837f4820a78409ad1fee",
					"line": 122,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "e71bed0b53a507f4b6997a32c33c1fda07dff28df9b8d4e495e582e297d46068",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "homechart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{homechart}}.spec.template.spec.containers.name={{homechart}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{homechart}}.spec.template.spec.containers.name={{homechart}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{homechart}}.spec.template.spec.containers.name={{homechart}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "f6043684f3df141553702bffd9d1b0d1d339d16daafaec3e4f38739ffc26d037",
					"line": 122,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "289f2d63d7adbade90ac138d3f0c75b3c73c9a2bdfab8e9bc79239ede040900e",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "homechart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{homechart}}.spec.template.spec.containers.name={{homechart}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{homechart}}.spec.template.spec.containers.name={{homechart}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{homechart}}.spec.template.spec.containers.name={{homechart}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "28d64e396d69bf25a990d12cf9f0606c4052b84f0e5826764f98779fef632cae",
					"line": 122,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "5b7f26a40fc86e00a4acff3a4b29a4dc67d27ea7107b74d608b4a22e004ed405",
					"line": 84,
					"resource_type": "Deployment",
					"resource_name": "homechart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{homechart}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{homechart}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{homechart}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "0dd33392c2df4e02a9a1d668f8e98ce9515b472e33b076296807cfa0a59ff06a",
					"line": 84,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "a762c30bcf108857d0006871a31eb39da3f96bda188ede559396067c8c3cf5c1",
					"line": 122,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{StatefulSet}}.metadata.name={{postgresql}}",
					"search_line": 122,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "b01958f75892dc5b0941e397b71bc22e952c1c8c1fbc5c1f2eda1021bd413d9e",
					"line": 175,
					"resource_type": "Ingress",
					"resource_name": "homechart",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Ingress}}.metadata.name={{homechart}}",
					"search_line": 175,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "f530e49b86f8da46a2a22a8ebf91e3e61db0d016943696e5b8e9564c582e09d1",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "homechart",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{homechart}}",
					"search_line": 69,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Secret",
					"resource_name": "homechart",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{homechart}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "8c0aea17f3c1306c1a1bcef958c07ffdd33924d69e6a3ab4ab681cebc7b71c1a",
					"line": 20,
					"resource_type": "Secret",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{postgresql}}",
					"search_line": 20,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "90f4f6707fef51cbeabbc0b49e9a566ec8e7e76173106638d257da9f1b5d8051",
					"line": 51,
					"resource_type": "Service",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{postgresql}}",
					"search_line": 51,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "11b84907faba6951dd6886301edf575b96f0d5a021ff820f3fc894ba89233d12",
					"line": 33,
					"resource_type": "Service",
					"resource_name": "homechart",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{homechart}}",
					"search_line": 33,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "22df20bde82546141e5a757eb6677075ac754b79ee356e9212ec531789fa7de4",
					"line": 115,
					"resource_type": "Deployment",
					"resource_name": "homechart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{homechart}}.spec.template.spec.containers.name={{homechart}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=homechart has limits defined",
					"actual_value": "spec.template.spec.containers.name=homechart doesn't have limits defined"
				},
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "7f272be103c7237f772eb8c70565916c98021f8740ba3141d25f2dfc0292e718",
					"line": 122,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name=postgresql",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgresql has resources defined",
					"actual_value": "spec.template.spec.containers.name=postgresql doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "83e6b3e3cc672bd2587f38a2af44eb982844917c328adb2e5faa121191f1b9c6",
					"line": 122,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name=postgresql",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgresql should have resources defined",
					"actual_value": "spec.template.spec.containers.name=postgresql doesn't have resources defined"
				},
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "bf830b99ba4f91e2f301df1688dc61def67c7f9c412cad2557f22b56aaccd23c",
					"line": 115,
					"resource_type": "Deployment",
					"resource_name": "homechart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{homechart}}.spec.template.spec.containers.name={{homechart}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=homechart.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=homechart.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "0639f1ea4e83c5fd3a88c50e95d46c19c08d9f723607089c601362b7fc32ac3d",
					"line": 101,
					"resource_type": "Deployment",
					"resource_name": "homechart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{homechart}}.spec.template.spec.containers.name={{homechart}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{homechart}}.spec.template.spec.containers.name={{homechart}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{homechart}}.spec.template.spec.containers.name={{homechart}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "b6c7b73bd6c6389653aee3f0db9304ed9ae0d1765ca62eb8d017766c386ef8d0",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "homechart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{homechart}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{homechart}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{homechart}}",
					"actual_value": "metadata.name={{homechart}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{homechart}}"
				},
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "720821a7b5f81cb8ce8f90ce4245e950384a4ab49709ad17b6959807852340b6",
					"line": 80,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{postgresql}}",
					"actual_value": "metadata.name={{postgresql}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{postgresql}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "f937cb7e8fe205614beca6e897a39eaf0facbf9acfa52c6dc540f8a3d0539daf",
					"line": 122,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.containers.name=postgresql",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.containers.name=postgresql.securityContext should be set",
					"actual_value": "metadata.name={{postgresql}}.spec.containers.name=postgresql.securityContext is undefined"
				},
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "387d6f51416a8256c3f606dcbd1586c40b166201e790d78b3286b043c06bf518",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "homechart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{homechart}}.spec.containers.name=homechart",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{homechart}}.spec.containers.name=homechart.securityContext should be set",
					"actual_value": "metadata.name={{homechart}}.spec.containers.name=homechart.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "1b082f5dc0c93db4dd937cccdab8b28c17ccdbc4cd6ab1b0adf989833191c215",
					"line": 20,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{postgresql}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "07a67c62524e0fe63884aa6e216aeeb8040ae947ff18028678c6ef12fb470ccc",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "homechart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{homechart}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{homechart}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{homechart}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "444725d1ac12d32eb106ef969139f4570fe9638b68df0414a551497690bceca9",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "homechart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{homechart}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{homechart}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{homechart}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "14c3472f2ef561287ef09109f7405283ec078456f180aef2134f40347085e68e",
					"line": 20,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{postgresql}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "dbd63cb430fdea770365cdcea321cd4794124a4815687127ae083325499a5e53",
					"line": 122,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name=postgresql",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgresql has a security context",
					"actual_value": "spec.template.spec.containers.name=postgresql does not have a security context"
				},
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "3e2c7d1aa7a175c378c7b466adee2c8326668ee9463d8b5e941ff8ec3fb2ee0f",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "homechart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{homechart}}.spec.template.spec.containers.name=homechart",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=homechart has a security context",
					"actual_value": "spec.template.spec.containers.name=homechart does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "bc01071b548a946705a30d16b99b84a27e6cad4c29fd11af49e1f29c4320ffd7",
					"line": 122,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "7e8758e78d64a46b3101d74a17e2d3386aa15b96af6a3e0095265223774659ac",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "homechart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{homechart}}.spec.template.spec.containers.name={{homechart}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{homechart}}.spec.template.spec.containers.name={{homechart}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{homechart}}.spec.template.spec.containers.name={{homechart}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "022408c05c728f64dab6d59201e2b77b56c7b8f01fcea4edffa59087667f67f2",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "homechart",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{homechart}}.spec.template.spec.containers.env.name={{HOMECHART_POSTGRESQL_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{homechart}}.env.name={{HOMECHART_POSTGRESQL_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{homechart}}.env.name={{HOMECHART_POSTGRESQL_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "b6710a52b18ea1787deff1f5280c37d24682ffda8aa5392f1f920c021da24587",
					"line": 145,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{postgresql}}.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{postgresql}}.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "ee96a40dea75a65f7e7dac108220ffa1d061150f24a6891fbb004d78fe4351c8",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "homechart",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{homechart}}.spec.template.spec.containers.env.name={{HOMECHART_POSTGRESQL_USERNAME}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{homechart}}.env.name={{HOMECHART_POSTGRESQL_USERNAME}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{homechart}}.env.name={{HOMECHART_POSTGRESQL_USERNAME}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "342d2780697cfc7f0976f5e0b7d60e582c2838782806951d649a4b75d70894bd",
					"line": 150,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.env.name={{POSTGRES_USER}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{postgresql}}.env.name={{POSTGRES_USER}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{postgresql}}.env.name={{POSTGRES_USER}}.valueFrom.secretKeyRef' is defined"
				}
			]
		},
		{
			"query_name": "StatefulSet Requests Storage",
			"query_id": "8cf4671a-cf3d-46fc-8389-21e7405063a2",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "A StatefulSet requests volume storage.",
			"description_id": "6210afe6",
			"files": [
				{
					"file_name": "templates/homechart_template.yaml",
					"similarity_id": "d79c07cedae242574d20feaf53cf0367ebd1023ff2ea16770d133d58c1ff12d7",
					"line": 169,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgresql}}.spec.volumeClaimTemplates.spec.resources.requests.storage=1Gi",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.volumeClaimTemplates.spec.resources.requests.storage should not be set",
					"actual_value": "metadata.name={{postgresql}}.spec.volumeClaimTemplates.spec.resources.requests.storage is set to 1Gi"
				}
			]
		}
	]
}
