{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 120,
	"files_parsed": 1,
	"lines_parsed": 105,
	"lines_ignored": 15,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:54:53.605708+02:00",
	"end": "2024-05-17T20:54:55.51267+02:00",
	"paths": [
		"templates/kubernetes_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/kubernetes_template.yaml",
					"similarity_id": "a461d2d7e8b372973417b47e2a7ab3294a3592d51acc77580b1aaa55986108df",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubernetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/kubernetes_template.yaml",
					"similarity_id": "5836bead83c62836c5c7339ebff92b06b5f539575323aa9280094ba3aa50d063",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubernetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}.volumeMounts.name={{certchain-volume}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}.volumeMounts.name={{certchain-volume}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}.volumeMounts.name={{certchain-volume}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/kubernetes_template.yaml",
					"similarity_id": "f83d490f0f6f11ba10b62e3e3ee28fd44d9fc0cd6ca3e6babdee2bfa3ebdebb1",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubernetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/kubernetes_template.yaml",
					"similarity_id": "f1ce6eee34c4c2e7fd33f083a44d16589a3a6ca6e2a98a2da2a269b4ff611599",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubernetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/kubernetes_template.yaml",
					"similarity_id": "2c3a1e1d8b9e4f0771861ecd40161f4f03b4abef14b3445ed92e88a502b5d710",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubernetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/kubernetes_template.yaml",
					"similarity_id": "a0cc893f17b37ebf2e2e991aeae85d83fe73543fcec16381b5bf83e6010cb6c3",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubernetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/kubernetes_template.yaml",
					"similarity_id": "2bc736fc84d6281d66ad38954684f7d6db19d152313bbfe62909ef31cfa75996",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubernetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/kubernetes_template.yaml",
					"similarity_id": "308c1b5d03c1387e468647d92f815cdabc27f7eb6b65d51673e77991fce8d574",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubernetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/kubernetes_template.yaml",
					"similarity_id": "1ae8ab4d292533ae8c1e11e17d4ec000e2c05e83c09f339fa3c82bffff806863",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubernetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/kubernetes_template.yaml",
					"similarity_id": "6499f82e180ca6a26073284924db67b2fd677681deec2076b4f6a9524a130d6a",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubernetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubernetes}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubernetes}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-kubernetes}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/kubernetes_template.yaml",
					"similarity_id": "94d1e151e77bdd9b6002e991f0d6cbc6f33cb948fcdfe8b7bc582d3886a8abdd",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubernetes",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-kubernetes}}",
					"search_line": 73,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kubernetes_template.yaml",
					"similarity_id": "8c0aea17f3c1306c1a1bcef958c07ffdd33924d69e6a3ab4ab681cebc7b71c1a",
					"line": 20,
					"resource_type": "ConfigMap",
					"resource_name": "kubernetes",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{kubernetes}}",
					"search_line": 20,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/kubernetes_template.yaml",
					"similarity_id": "2937b691168c3f65cca892f8caf459510ae49dd59f71d5244c944dadf9dc2407",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubernetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kubernetes has limits defined",
					"actual_value": "spec.template.spec.containers.name=kubernetes doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/kubernetes_template.yaml",
					"similarity_id": "535a2bafc51bc28a1d573e986facef44edbacd503d23df635aa788f896639aa8",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubernetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kubernetes.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=kubernetes.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/kubernetes_template.yaml",
					"similarity_id": "17601b35f7a81983000550a30e2bd7b8764ea6eff27be364da2ed8e39be06b8f",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubernetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubernetes}}.spec.template.metadata",
					"search_line": 90,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubernetes}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{kubernetes}}",
					"actual_value": "metadata.name={{release-name-kubernetes}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{kubernetes}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/kubernetes_template.yaml",
					"similarity_id": "9c0acb204f4d0a64ac85c4ae563ffcad942168a4b9178e4286c4086229e228e8",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubernetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubernetes}}.spec.containers.name=kubernetes",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubernetes}}.spec.containers.name=kubernetes.securityContext should be set",
					"actual_value": "metadata.name={{release-name-kubernetes}}.spec.containers.name=kubernetes.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/kubernetes_template.yaml",
					"similarity_id": "b117d9f0a1e3877a9d4d1988b91a3cc566f204f9c40f5c32f966bc0464747fde",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubernetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubernetes}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubernetes}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-kubernetes}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/kubernetes_template.yaml",
					"similarity_id": "6de7a15549c2b8b721977ddfe6d0ca80f57fe3e870943880e902f766b5a713ba",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubernetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubernetes}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubernetes}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-kubernetes}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/kubernetes_template.yaml",
					"similarity_id": "5457d25d0d6520064fd707a5d9dd773df8a89a667854333554370d3d6f2cce67",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubernetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name=kubernetes",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kubernetes has a security context",
					"actual_value": "spec.template.spec.containers.name=kubernetes does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/kubernetes_template.yaml",
					"similarity_id": "f8895374a7e1cec5669f19446d1e690e4bac9c9b51b090528da12fd231897225",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubernetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-kubernetes}}.spec.template.spec.containers.name={{kubernetes}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
