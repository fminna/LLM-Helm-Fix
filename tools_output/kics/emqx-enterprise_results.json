{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 209,
	"files_parsed": 1,
	"lines_parsed": 204,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:45:13.912765+02:00",
	"end": "2024-06-26T02:45:16.027225+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/emqx-enterprise_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/emqx-enterprise_template.yaml",
					"similarity_id": "16bf75b41ad30232f2aba1a5845badca387eccf2cad7856c3ba96d81b76d7e6b",
					"line": 165,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx-enterprise",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec.containers.name={{emqx}}",
					"search_line": 165,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec.containers.name={{emqx}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec.containers.name={{emqx}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/emqx-enterprise_template.yaml",
					"similarity_id": "3e2f9c6c0d1ebb2cba6fc21dad0f334816d0489bccf6536c54a42b68c2f7e5ee",
					"line": 167,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx-enterprise",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec.containers.name={{emqx}}.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec.containers.name={{emqx}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec.containers.name={{emqx}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/emqx-enterprise_template.yaml",
					"similarity_id": "a6cf443423f93a4264b15ec08a2a827ae24d390490f2adaac69f54fb4ef99a9f",
					"line": 162,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx-enterprise",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec.containers.name={{emqx}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec.containers.name={{emqx}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec.containers.name={{emqx}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/emqx-enterprise_template.yaml",
					"similarity_id": "d68f89101d5e09dfd1e3510eb016926f9c6e3dfd6e5334721f9123c22de6e1ef",
					"line": 162,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx-enterprise",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec.containers.name={{emqx}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec.containers.name={{emqx}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec.containers.name={{emqx}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/emqx-enterprise_template.yaml",
					"similarity_id": "ba28f07fbe802a756d69c7c5821dd643c1228945388234d9ce15fc7dff7b18a6",
					"line": 162,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx-enterprise",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec.containers.name={{emqx}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec.containers.name={{emqx}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec.containers.name={{emqx}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/emqx-enterprise_template.yaml",
					"similarity_id": "ce4fe748db1cd30c0d8455832f7e2817d8f9a552775b4467a99cc7e079a5495c",
					"line": 165,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx-enterprise",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec.containers.name={{emqx}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec.containers.name={{emqx}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec.containers.name={{emqx}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/emqx-enterprise_template.yaml",
					"similarity_id": "2e78db0c666dad288fdf5bf0315e4ef325de9f473713f300026301f99a9f11fa",
					"line": 150,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx-enterprise",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/emqx-enterprise_template.yaml",
					"similarity_id": "98334e610701d89e37ac70f28225e682729fa8c7e086a483e516a9e2a646795e",
					"line": 81,
					"resource_type": "Service",
					"resource_name": "release-name-emqx-enterprise-headless",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-emqx-enterprise-headless}}.namespace",
					"search_line": 81,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/emqx-enterprise_template.yaml",
					"similarity_id": "6c949637ae1bcedc80607b9ab1969ab87067a7d507a54d12f25b993cb54ae914",
					"line": 19,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-emqx-enterprise-env",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-emqx-enterprise-env}}.namespace",
					"search_line": 19,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/emqx-enterprise_template.yaml",
					"similarity_id": "dd237f5745eb3edf3c3d74f8addb44e226ed905062fa9ecc472eee3915ff39d6",
					"line": 38,
					"resource_type": "Service",
					"resource_name": "release-name-emqx-enterprise",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-emqx-enterprise}}.namespace",
					"search_line": 38,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/emqx-enterprise_template.yaml",
					"similarity_id": "b5f051f2df85ecf5f311bf6c863ff9bbc869584819defe982d0a4ca4348cd5e9",
					"line": 126,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx-enterprise",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-emqx-enterprise}}.namespace",
					"search_line": 126,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/emqx-enterprise_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-emqx-enterprise",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-emqx-enterprise}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/emqx-enterprise_template.yaml",
					"similarity_id": "5f890e442669dbc60d07cf6306d3114c59f0ad230f21541324a83e86f17c32da",
					"line": 186,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx-enterprise",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec.containers.name={{emqx}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=emqx has limits defined",
					"actual_value": "spec.template.spec.containers.name=emqx doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/emqx-enterprise_template.yaml",
					"similarity_id": "eeb63efb6737f4a763cd8f8e29c2d4f0fa79d129851364307b7cd4a9b4847a75",
					"line": 186,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx-enterprise",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec.containers.name={{emqx}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=emqx.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=emqx.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/emqx-enterprise_template.yaml",
					"similarity_id": "419072232f12aa23f33eba59da668ef2565a5c69b7f7cccd17d331e3a088ff05",
					"line": 164,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx-enterprise",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec.containers.name={{emqx}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec.containers.name={{emqx}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec.containers.name={{emqx}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/emqx-enterprise_template.yaml",
					"similarity_id": "50f34f534d3577c3e69783072971d9561bc1babe63992080d997ff46827b19b8",
					"line": 149,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx-enterprise",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx-enterprise}}.spec.template.metadata",
					"search_line": 149,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-emqx-enterprise}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{emqx}}",
					"actual_value": "metadata.name={{release-name-emqx-enterprise}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{emqx}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/emqx-enterprise_template.yaml",
					"similarity_id": "2444cd0c1ccc4c2d0246e721d1504645f487d3ef6538af9207e1bf5c97e85688",
					"line": 165,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx-enterprise",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx-enterprise}}.spec.containers.name={{emqx}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-emqx-enterprise}}.spec.containers.name={{emqx}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-emqx-enterprise}}.spec.containers.name={{emqx}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/emqx-enterprise_template.yaml",
					"similarity_id": "8554dd42780302ade036bea4b8ad4fbee22dd2d9a1522dd2b20d4f654e7721b9",
					"line": 126,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx-enterprise",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx-enterprise}}",
					"search_line": 126,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-emqx-enterprise}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-emqx-enterprise}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/emqx-enterprise_template.yaml",
					"similarity_id": "658c059318cb448c5a96b472bd7e02f83098f3b18dbae2c50b2671f6f76da5ad",
					"line": 126,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx-enterprise",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx-enterprise}}",
					"search_line": 126,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-emqx-enterprise}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-emqx-enterprise}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/emqx-enterprise_template.yaml",
					"similarity_id": "3ef94e6080c40946c150c6a5105b41705e0f53eab61798a2b56f005ccbd1cd29",
					"line": 165,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx-enterprise",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec.containers.name={{emqx}}",
					"search_line": 165,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec.containers.name={{emqx}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec.containers.name={{emqx}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "StatefulSet Has No PodAntiAffinity",
			"query_id": "d740d048-8ed3-49d3-b77b-6f072f3b669e",
			"query_url": "https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Check if StatefulSet resources don't have a podAntiAffinity policy, which prevents multiple pods from being scheduled on the same node.",
			"description_id": "f0d30dd9",
			"files": [
				{
					"file_name": "templates/emqx-enterprise_template.yaml",
					"similarity_id": "930bce6ca29f677804d4bf873cc9a228ab41a4b2423041b8cfe8f4fb0d444b26",
					"line": 150,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx-enterprise",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx-enterprise}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.affinity' should be set",
					"actual_value": "'spec.template.spec.affinity' is undefined"
				}
			]
		},
		{
			"query_name": "StatefulSet Without PodDisruptionBudget",
			"query_id": "1db3a5a5-bf75-44e5-9e44-c56cfc8b1ac5",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "StatefulSets should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "f3c77130",
			"files": [
				{
					"file_name": "templates/emqx-enterprise_template.yaml",
					"similarity_id": "c7a34b841707fbde9b0d4ff291d8bb4471ad44711c02b46dd661ff8d5c28325e",
					"line": 139,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx-enterprise",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx-enterprise}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-emqx-enterprise is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=release-name-emqx-enterprise is not targeted by a PodDisruptionBudget"
				}
			]
		}
	]
}
