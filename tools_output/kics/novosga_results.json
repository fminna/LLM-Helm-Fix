{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 194,
	"files_parsed": 1,
	"lines_parsed": 184,
	"lines_ignored": 10,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 19,
		"MEDIUM": 20,
		"TRACE": 0
	},
	"total_counter": 42,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:47:16.855478+02:00",
	"end": "2024-06-26T01:47:18.996251+02:00",
	"paths": [
		"templates/novosga_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "2de6059f6dc97da160bce1660dc74948da4bd8be0d3d1eb415dfbbcf7d2d3ebd",
					"line": 134,
					"resource_type": "Deployment",
					"resource_name": "release-name-app-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-app-deployment}}.spec.template.spec.containers.name={{novosga-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-app-deployment}}.spec.template.spec.containers.name={{novosga-container}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-app-deployment}}.spec.template.spec.containers.name={{novosga-container}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "ac5c27575e630b168ad8bd007ed2f6c651dc01dd020f212cf7579c0204ec8506",
					"line": 170,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-db-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.containers.name={{db-sga-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.containers.name={{db-sga-container}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.containers.name={{db-sga-container}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "d8535062ab5fbc96f9be956afec397b1a4b280a6f85b2a832de690d9ca71e17e",
					"line": 183,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-db-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.containers.name={{db-sga-container}}.volumeMounts.name={{mysql-vol}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.containers.name={{db-sga-container}}.volumeMounts.name={{mysql-vol}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.containers.name={{db-sga-container}}.volumeMounts.name={{mysql-vol}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "55d8d8a098ead3706485b835944a1e5dfbf709e831417a37097b70544c4f4e34",
					"line": 134,
					"resource_type": "Deployment",
					"resource_name": "release-name-app-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-app-deployment}}.spec.template.spec.containers.name={{novosga-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-app-deployment}}.spec.template.spec.containers.name={{novosga-container}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-app-deployment}}.spec.template.spec.containers.name={{novosga-container}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "b2169c7ddaf85c06da142c14fec82e2281fe158932f9ab76dc44caaf17d942ae",
					"line": 170,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-db-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.containers.name={{db-sga-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.containers.name={{db-sga-container}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.containers.name={{db-sga-container}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "1e11e2584ad2a6d0cddf52d1b0a8401e702c910ab9d49d0475a87fffb445e4e0",
					"line": 170,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-db-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.containers.name={{db-sga-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.containers.name={{db-sga-container}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.containers.name={{db-sga-container}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "a932e0668e0724db69578edf67737b00618e8fc727170fb5f5fc571c0cdbcd24",
					"line": 134,
					"resource_type": "Deployment",
					"resource_name": "release-name-app-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-app-deployment}}.spec.template.spec.containers.name={{novosga-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-app-deployment}}.spec.template.spec.containers.name={{novosga-container}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-app-deployment}}.spec.template.spec.containers.name={{novosga-container}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "fd44152265540f7484f0c6d30b8703bd875e589969eed646087085300d23b0d0",
					"line": 134,
					"resource_type": "Deployment",
					"resource_name": "release-name-app-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-app-deployment}}.spec.template.spec.containers.name={{novosga-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-app-deployment}}.spec.template.spec.containers.name={{novosga-container}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-app-deployment}}.spec.template.spec.containers.name={{novosga-container}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "87c02ee65c3b3de46e393674bb4365aa3b1b498d145f9701b9ae052a4f48da8f",
					"line": 170,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-db-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.containers.name={{db-sga-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.containers.name={{db-sga-container}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.containers.name={{db-sga-container}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "61fe29bfff814f59371a8feb933b1819b2961f532dd27ac279166acb75ccf0b4",
					"line": 170,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-db-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.containers.name={{db-sga-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.containers.name={{db-sga-container}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.containers.name={{db-sga-container}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "91441d2d277375fc8c41c3a99b3585a0a502113b8adbdc84568a02a027d54adf",
					"line": 134,
					"resource_type": "Deployment",
					"resource_name": "release-name-app-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-app-deployment}}.spec.template.spec.containers.name={{novosga-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-app-deployment}}.spec.template.spec.containers.name={{novosga-container}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-app-deployment}}.spec.template.spec.containers.name={{novosga-container}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "ff61cc6ac7ebfe82dee0562b2bd3bc76baadb3b2ac1b4d690930209bb20d27c5",
					"line": 134,
					"resource_type": "Deployment",
					"resource_name": "release-name-app-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-app-deployment}}.spec.template.spec.containers.name={{novosga-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-app-deployment}}.spec.template.spec.containers.name={{novosga-container}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-app-deployment}}.spec.template.spec.containers.name={{novosga-container}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "cf00990cf7e0a799baae62c9e0220fe3d33c49620fc4577b7c9c83b7778495bc",
					"line": 170,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-db-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.containers.name={{db-sga-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.containers.name={{db-sga-container}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.containers.name={{db-sga-container}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "f225ac943eb61214b429f3a8d50bae7b43d93910a19bcda8192f19d27cf9538c",
					"line": 168,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-db-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-statefulset}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "5d2f45fa0276b4d7a5f7d28ed7e28109f07f87595eef1ed18816efe6bdae74ae",
					"line": 132,
					"resource_type": "Deployment",
					"resource_name": "release-name-app-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-app-deployment}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-app-deployment}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-app-deployment}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "f2b8fff96925bd9420b0464a3eedc0b1121e88f78346ca31f2a40edee74dff15",
					"line": 29,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-app-configmap",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-app-configmap}}",
					"search_line": 29,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "29895e763cad8002756d6cad487a02a65c47ca19e4945214e5b29ff0f7e4b393",
					"line": 46,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-db-configmap",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-db-configmap}}",
					"search_line": 46,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Secret",
					"resource_name": "release-name-app-secret",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-app-secret}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "0fb3e6f623dee5a9b9c7ef52d39359eb43aa224fac6e03773c701a8d9efbd459",
					"line": 157,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-db-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{StatefulSet}}.metadata.name={{release-name-db-statefulset}}",
					"search_line": 157,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Secret",
					"resource_name": "release-name-db-secret",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-db-secret}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "8ec473b89a3d27c6c7fcb9239e49adb0786ddc9cc45d89d624a1db3b1cc58d20",
					"line": 107,
					"resource_type": "Service",
					"resource_name": "release-name-db-service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-db-service}}",
					"search_line": 107,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "e62ceca1c4aa8886c59ed149cc6fe493f7b5a4fa8aaef4da33e6754d07062b56",
					"line": 92,
					"resource_type": "Service",
					"resource_name": "release-name-app-service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-app-service}}",
					"search_line": 92,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "7db2ca57d8d39ec6c0f97339eb9c24cb9d4d957b862672706c40d69878de263e",
					"line": 121,
					"resource_type": "Deployment",
					"resource_name": "release-name-app-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-app-deployment}}",
					"search_line": 121,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "ef4d723e3e0331f923160dc39e9da60324d70e1efb464de714d4911da782b316",
					"line": 170,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-db-statefulset",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.containers.name={{db-sga-container}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.containers.name={{db-sga-container}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.containers.name={{db-sga-container}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "d68e9a6e85d5d59f242dd954d4860fe314125517e8b7850f20a95858671aa057",
					"line": 135,
					"resource_type": "Deployment",
					"resource_name": "release-name-app-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-app-deployment}}.spec.template.spec.containers.name={{novosga-container}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-app-deployment}}.spec.template.spec.containers.name={{novosga-container}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-app-deployment}}.spec.template.spec.containers.name={{novosga-container}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "bd183558a49caff926e943bd8bb3374874f595e6de044b09f19eaa16d8d779f4",
					"line": 164,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-db-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-statefulset}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-statefulset}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{db-sga-container}}",
					"actual_value": "metadata.name={{release-name-db-statefulset}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{db-sga-container}}"
				},
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "0e93ed12673397b4d6249d46ed6c0f87b65d0c8ff91e6ea39ad54f69067f18e6",
					"line": 128,
					"resource_type": "Deployment",
					"resource_name": "release-name-app-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-app-deployment}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-app-deployment}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{novosga-container}}",
					"actual_value": "metadata.name={{release-name-app-deployment}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{novosga-container}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "151c848c9158d13bcedfe7b72fab71ec2e16b9660a3fc94185a01d047ecb9294",
					"line": 134,
					"resource_type": "Deployment",
					"resource_name": "release-name-app-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-app-deployment}}.spec.containers.name=novosga-container",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-app-deployment}}.spec.containers.name=novosga-container.securityContext should be set",
					"actual_value": "metadata.name={{release-name-app-deployment}}.spec.containers.name=novosga-container.securityContext is undefined"
				},
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "317b6f43a0fb15153c1c3fb7753b829a6cd07bd902b13517ca3ea2eb6d245fdf",
					"line": 170,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-db-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-statefulset}}.spec.containers.name=db-sga-container",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-statefulset}}.spec.containers.name=db-sga-container.securityContext should be set",
					"actual_value": "metadata.name={{release-name-db-statefulset}}.spec.containers.name=db-sga-container.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "1addec9776581960cb21781f3dae78cc557212fb63be30942a58528cd45b04b9",
					"line": 121,
					"resource_type": "Deployment",
					"resource_name": "release-name-app-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-app-deployment}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-app-deployment}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-app-deployment}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "71de2b45a66b4cc333323bec06967dffd9caf3d75b4ddbf9f126950efda42305",
					"line": 157,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-db-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-statefulset}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-statefulset}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-db-statefulset}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "ecb8cbab2905cd6f79e4d201da0bfea0ad35d2ed23f62247501c9cf38e58c79c",
					"line": 78,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "pvc-slow",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pvc-slow}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{pvc-slow}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{pvc-slow}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "abe9b2f368b234197a3d1c7d2763ce58e09fa1f0f3c5001e1918ee195696a15c",
					"line": 121,
					"resource_type": "Deployment",
					"resource_name": "release-name-app-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-app-deployment}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-app-deployment}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-app-deployment}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "fcd36d71cc3f301798f6efc150223b9d2c4a1593cf9cd06987c189ef0010bd85",
					"line": 78,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "pvc-slow",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pvc-slow}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{pvc-slow}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{pvc-slow}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "9caf107b64ecd9464cbb0732cf57a2487832e8422eabb4ddc998db2b3ab71641",
					"line": 157,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-db-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-statefulset}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-statefulset}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-db-statefulset}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "a347d51b899449c3f33e20dcdb23e96fc10bdf858e28296410d337b015974607",
					"line": 134,
					"resource_type": "Deployment",
					"resource_name": "release-name-app-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-app-deployment}}.spec.template.spec.containers.name=novosga-container",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=novosga-container has a security context",
					"actual_value": "spec.template.spec.containers.name=novosga-container does not have a security context"
				},
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "6d866b0d2c4d31b6c0f8b406c539239f8a462970887bf6c51e8476575f84ce66",
					"line": 170,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-db-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.containers.name=db-sga-container",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=db-sga-container has a security context",
					"actual_value": "spec.template.spec.containers.name=db-sga-container does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "102d980a470749b332c87c283b58473409db9980755c1820f2cc7063c4d5b1bc",
					"line": 170,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-db-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.containers.name={{db-sga-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.containers.name={{db-sga-container}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.containers.name={{db-sga-container}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "dbb2d0501c69e44a07288b33b7450fd4158aa4337cb593aca00053d7094409f3",
					"line": 134,
					"resource_type": "Deployment",
					"resource_name": "release-name-app-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-app-deployment}}.spec.template.spec.containers.name={{novosga-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-app-deployment}}.spec.template.spec.containers.name={{novosga-container}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-app-deployment}}.spec.template.spec.containers.name={{novosga-container}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "a15e8dbdda000cfa8d3cbf7790232977cd3233add53fb7ea2910f523671a6da0",
					"line": 146,
					"resource_type": "Deployment",
					"resource_name": "release-name-app-deployment",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-app-deployment}}.spec.template.spec.containers.name={{novosga-container}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{novosga-container}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{novosga-container}}.envFrom.secretRef' is defined"
				},
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "40ae8329beb2b8e510e9d33cfc92df627555e7c8ee132a1b571896619a8a24bb",
					"line": 184,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-db-statefulset",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-db-statefulset}}.spec.template.spec.containers.name={{db-sga-container}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{db-sga-container}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{db-sga-container}}.envFrom.secretRef' is defined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/novosga_template.yaml",
					"similarity_id": "42033f1085baf6766d10309b98d197f24bfa238ac2a548f2b706aac10d502bcf",
					"line": 96,
					"resource_type": "Service",
					"resource_name": "release-name-app-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-app-service}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
