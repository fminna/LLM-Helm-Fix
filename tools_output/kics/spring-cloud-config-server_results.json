{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 102,
	"files_parsed": 1,
	"lines_parsed": 99,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:10:50.046125+02:00",
	"end": "2024-05-17T22:10:52.011218+02:00",
	"paths": [
		"templates/spring-cloud-config-server_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/spring-cloud-config-server_template.yaml",
					"similarity_id": "461914dcdb6fe6cb16f501cae42612aaf16e1a34e3269f25afdc22e5479a1ce9",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-spring-cloud-config-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name={{spring-cloud-config-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name={{spring-cloud-config-server}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name={{spring-cloud-config-server}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/spring-cloud-config-server_template.yaml",
					"similarity_id": "d2814c3a557d030d157e61b1010a8252b8baa8266404628fc015d7a5888fdb4f",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-spring-cloud-config-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name={{spring-cloud-config-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name={{spring-cloud-config-server}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name={{spring-cloud-config-server}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/spring-cloud-config-server_template.yaml",
					"similarity_id": "69f89cb7862d317846cbadce78f61952de54a2daa495c34a75fa776906c0ab64",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-spring-cloud-config-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name={{spring-cloud-config-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name={{spring-cloud-config-server}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name={{spring-cloud-config-server}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/spring-cloud-config-server_template.yaml",
					"similarity_id": "825ba6daf8df311e82fc2acaf66187b9d1583a419126283d2100339f0b354596",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-spring-cloud-config-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name={{spring-cloud-config-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name={{spring-cloud-config-server}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name={{spring-cloud-config-server}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/spring-cloud-config-server_template.yaml",
					"similarity_id": "01b7d08203341b1bab75ec1677f57f9a5b2ed13ebc94402ad6682bfd8329d2e2",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-spring-cloud-config-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name={{spring-cloud-config-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name={{spring-cloud-config-server}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name={{spring-cloud-config-server}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/spring-cloud-config-server_template.yaml",
					"similarity_id": "b8d3b067a7a490740d32253457587eaffa73650c8f1b8d69362f6a697c6c09d0",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-spring-cloud-config-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name={{spring-cloud-config-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name={{spring-cloud-config-server}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name={{spring-cloud-config-server}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/spring-cloud-config-server_template.yaml",
					"similarity_id": "a49d0df0568ab65a8b12231b41502fc37ac22d5706be47b93aeba979f2018382",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-spring-cloud-config-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name={{spring-cloud-config-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name={{spring-cloud-config-server}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name={{spring-cloud-config-server}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/spring-cloud-config-server_template.yaml",
					"similarity_id": "fdcb3b594036b32ee1971c489fd710266d12c2fe4e959ddd3fa465af101c4df3",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-spring-cloud-config-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/spring-cloud-config-server_template.yaml",
					"similarity_id": "c4f5532e87f8140c669bcfb76eecdcc6a891c163116374e6e7c9a28559b8393e",
					"line": 22,
					"resource_type": "Service",
					"resource_name": "release-name-spring-cloud-config-server",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-spring-cloud-config-server}}",
					"search_line": 22,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/spring-cloud-config-server_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "Secret",
					"resource_name": "release-name-spring-cloud-config-server",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-spring-cloud-config-server}}",
					"search_line": 7,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/spring-cloud-config-server_template.yaml",
					"similarity_id": "810a04c3a482b2c78415fcb7d1a35336638459b611e30d00db88f8180d2ac4bc",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "release-name-spring-cloud-config-server",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-spring-cloud-config-server}}",
					"search_line": 44,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/spring-cloud-config-server_template.yaml",
					"similarity_id": "c874b04b271001ea8067812ec1f7eecce114ce9308a648b3834a288b3a88e01d",
					"line": 100,
					"resource_type": "Deployment",
					"resource_name": "release-name-spring-cloud-config-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name={{spring-cloud-config-server}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=spring-cloud-config-server has limits defined",
					"actual_value": "spec.template.spec.containers.name=spring-cloud-config-server doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/spring-cloud-config-server_template.yaml",
					"similarity_id": "29396c136576fae7073bdb18abb2151a3ba4a07881537fb04f6c86a13105e4a1",
					"line": 100,
					"resource_type": "Deployment",
					"resource_name": "release-name-spring-cloud-config-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name={{spring-cloud-config-server}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=spring-cloud-config-server.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=spring-cloud-config-server.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/spring-cloud-config-server_template.yaml",
					"similarity_id": "1c49dd28a06868be5f7c483eaad68092c11052354b00afb045cb861b0f64565c",
					"line": 72,
					"resource_type": "Deployment",
					"resource_name": "release-name-spring-cloud-config-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name={{spring-cloud-config-server}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name={{spring-cloud-config-server}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name={{spring-cloud-config-server}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/spring-cloud-config-server_template.yaml",
					"similarity_id": "0b4425820c32eb0d041865896e2d7f1c0973c95b9a4c211bf013f718a8394b67",
					"line": 61,
					"resource_type": "Deployment",
					"resource_name": "release-name-spring-cloud-config-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{spring-cloud-config-server}}",
					"actual_value": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{spring-cloud-config-server}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/spring-cloud-config-server_template.yaml",
					"similarity_id": "5ab700ac4d6d1b98aca96be5dd03fe87b39a6f94300f8bf82f99591aa9fcba24",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-spring-cloud-config-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spring-cloud-config-server}}.spec.containers.name=spring-cloud-config-server",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spring-cloud-config-server}}.spec.containers.name=spring-cloud-config-server.securityContext should be set",
					"actual_value": "metadata.name={{release-name-spring-cloud-config-server}}.spec.containers.name=spring-cloud-config-server.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/spring-cloud-config-server_template.yaml",
					"similarity_id": "8609a482f1cdef68b1f5d84614dbfc127e868d20a32adf1021acb20ac09403c1",
					"line": 7,
					"resource_type": "Deployment",
					"resource_name": "release-name-spring-cloud-config-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spring-cloud-config-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spring-cloud-config-server}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-spring-cloud-config-server}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/spring-cloud-config-server_template.yaml",
					"similarity_id": "732a2b246d3541720cc223ad6dbea0cf1e9101758ad7685b40b1ed585566e518",
					"line": 7,
					"resource_type": "Deployment",
					"resource_name": "release-name-spring-cloud-config-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spring-cloud-config-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spring-cloud-config-server}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-spring-cloud-config-server}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/spring-cloud-config-server_template.yaml",
					"similarity_id": "ad5bffde1773150557505409fcc41294a64dfcd9cb38c3275904cac0de176ccb",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-spring-cloud-config-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name=spring-cloud-config-server",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=spring-cloud-config-server has a security context",
					"actual_value": "spec.template.spec.containers.name=spring-cloud-config-server does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/spring-cloud-config-server_template.yaml",
					"similarity_id": "993955dc7b6af242ba486cf01026efa8f3bca2438ccbaf60ab8a25150c67aaa8",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-spring-cloud-config-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name={{spring-cloud-config-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name={{spring-cloud-config-server}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.name={{spring-cloud-config-server}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/spring-cloud-config-server_template.yaml",
					"similarity_id": "82786cdd8d7aedc5cc0a03665d8bc937a398c200a85f86f7a7a80cd15b3a488e",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "release-name-spring-cloud-config-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.env.name={{SPRING_CLOUD_CONFIG_SERVER_GIT_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{spring-cloud-config-server}}.env.name={{SPRING_CLOUD_CONFIG_SERVER_GIT_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{spring-cloud-config-server}}.env.name={{SPRING_CLOUD_CONFIG_SERVER_GIT_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/spring-cloud-config-server_template.yaml",
					"similarity_id": "e387ae5bca8e95522d2f1d157700d70abba6f77e7e4988ea6bfe87fd7234d99c",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-spring-cloud-config-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-spring-cloud-config-server}}.spec.template.spec.containers.env.name={{SPRING_CLOUD_CONFIG_SERVER_GIT_USERNAME}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{spring-cloud-config-server}}.env.name={{SPRING_CLOUD_CONFIG_SERVER_GIT_USERNAME}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{spring-cloud-config-server}}.env.name={{SPRING_CLOUD_CONFIG_SERVER_GIT_USERNAME}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
