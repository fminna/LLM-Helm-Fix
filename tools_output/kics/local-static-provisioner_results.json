{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 148,
	"files_parsed": 1,
	"lines_parsed": 143,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 6,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 25,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:20:05.701973+02:00",
	"end": "2024-06-26T03:20:07.76372+02:00",
	"paths": [
		"templates/local-static-provisioner_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Is Privileged",
			"query_id": "dd29336b-fe57-445b-a26e-e6aa867ae609",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/#privileged-mode-for-containers",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Privileged containers lack essential security restrictions and should be avoided by removing the 'privileged' flag or by changing its value to false",
			"description_id": "55f59030",
			"files": [
				{
					"file_name": "templates/local-static-provisioner_template.yaml",
					"similarity_id": "be451c69f5dbd6f54fd89ed62aefdb0c56a580399d01d87cff302176b9035f07",
					"line": 114,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-local-static-provisioner",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}.securityContext.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}.securityContext.privileged is unset or false",
					"actual_value": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}.securityContext.privileged is true"
				}
			]
		},
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/local-static-provisioner_template.yaml",
					"similarity_id": "abf7e76bf306767709a5b21b6a0b797a6074d1a36cde854c9e3398f54beb2595",
					"line": 147,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-local-static-provisioner",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.volumes.name={{fast-disks}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-local-static-provisioner' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/mnt/fast-disks' mounted",
					"actual_value": "Resource name 'release-name-local-static-provisioner' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/mnt/fast-disks' mounted"
				},
				{
					"file_name": "templates/local-static-provisioner_template.yaml",
					"similarity_id": "59d5e27820a0298fda1d4367c92082c7fcc4625512dd659e2e5f4a8fe20fb7d0",
					"line": 144,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-local-static-provisioner",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.volumes.name={{provisioner-dev}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-local-static-provisioner' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/dev' mounted",
					"actual_value": "Resource name 'release-name-local-static-provisioner' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/dev' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/local-static-provisioner_template.yaml",
					"similarity_id": "e2f93155b493aa218930b6795e5d7471e9f70f709d8c7c2cb45302c181a63123",
					"line": 113,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-local-static-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}",
					"search_line": 113,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/local-static-provisioner_template.yaml",
					"similarity_id": "7c8ca0375b38ad1e55c1137b22249b23d3bd8d7d06bf5fc44698339a745074ab",
					"line": 133,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-local-static-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}.volumeMounts.name={{provisioner-dev}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}.volumeMounts.name={{provisioner-dev}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}.volumeMounts.name={{provisioner-dev}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/local-static-provisioner_template.yaml",
					"similarity_id": "8274f341abef5bd7cc6da38b98bc96c88573694fd3e39d0d72d0c6a78b86f5a4",
					"line": 144,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-local-static-provisioner",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.volumes.name={{provisioner-dev}}.hostPath.path",
					"search_line": 144,
					"search_value": "",
					"expected_value": "Workload name 'release-name-local-static-provisioner' of kind 'DaemonSet' should not mount a host sensitive OS directory '/dev' with hostPath",
					"actual_value": "Workload name 'release-name-local-static-provisioner' of kind 'DaemonSet' is mounting a host sensitive OS directory '/dev' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/local-static-provisioner_template.yaml",
					"similarity_id": "97f5d4926048968915d29d65780bfb573fad7b43741a65a0881f67aef42e83e2",
					"line": 113,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-local-static-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}",
					"search_line": 113,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/local-static-provisioner_template.yaml",
					"similarity_id": "f76fa869b542e38da6fbf99fc217546e7cea75e209045b92b135aae9da5aeb76",
					"line": 113,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-local-static-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/local-static-provisioner_template.yaml",
					"similarity_id": "a3577f6a6231feea844c4e40d6d21234ef77f7b72d9d5a79b647583f14e46508",
					"line": 111,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-local-static-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/local-static-provisioner_template.yaml",
					"similarity_id": "ec86ec6451afac4d25cdbd56e033e8c8161d797cb59298604e6e87930a743d80",
					"line": 111,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-local-static-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/local-static-provisioner_template.yaml",
					"similarity_id": "483803765922b66e70e9c3b97872e75c7d6e4806b390e40b90c6fd366b7458ae",
					"line": 111,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-local-static-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/local-static-provisioner_template.yaml",
					"similarity_id": "65137cf404e99003fd3c39fb796648c3afde5619ea7c1ac37c0de3c4b1de19c6",
					"line": 111,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-local-static-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/local-static-provisioner_template.yaml",
					"similarity_id": "bf637e64bcc217b3384293d0e75828dab38f8469755cc8f1dbbd3d5f8bcf7e38",
					"line": 113,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-local-static-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/local-static-provisioner_template.yaml",
					"similarity_id": "9f6fd5c088811da9997a5013ad2027b3ffa40f2d74ff28285d8a9d0458f51f27",
					"line": 106,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-local-static-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/local-static-provisioner_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-local-static-provisioner",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-local-static-provisioner}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/local-static-provisioner_template.yaml",
					"similarity_id": "61a35fa328c63e176bb8ca12b312509e8d8273dc3b5e41139c8bbe012bda198c",
					"line": 88,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-local-static-provisioner",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-local-static-provisioner}}.namespace",
					"search_line": 88,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/local-static-provisioner_template.yaml",
					"similarity_id": "6c949637ae1bcedc80607b9ab1969ab87067a7d507a54d12f25b993cb54ae914",
					"line": 19,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-local-static-provisioner-config",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-local-static-provisioner-config}}.namespace",
					"search_line": 19,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/local-static-provisioner_template.yaml",
					"similarity_id": "95fbfeaae848b06bc4999dbbb0e679497aaaf1d804c6caafc2b260687865e859",
					"line": 111,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-local-static-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name=provisioner",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=provisioner has resources defined",
					"actual_value": "spec.template.spec.containers.name=provisioner doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/local-static-provisioner_template.yaml",
					"similarity_id": "3f43bfbac686ef9fd449b5a783bf9f63031052c076881078780e4d651913ea33",
					"line": 111,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-local-static-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name=provisioner",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=provisioner should have resources defined",
					"actual_value": "spec.template.spec.containers.name=provisioner doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/local-static-provisioner_template.yaml",
					"similarity_id": "922e00003c6a10cdded144a830eba9c015adfec5a48c226d296d2b69dddd47a5",
					"line": 111,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-local-static-provisioner",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/local-static-provisioner_template.yaml",
					"similarity_id": "6cd57f62518f236cd1e6728079d802d87be1ec3a8d676ec9ab4c87a3b70d9f90",
					"line": 104,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-local-static-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-local-static-provisioner}}.spec.template.metadata",
					"search_line": 104,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-local-static-provisioner}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{provisioner}}",
					"actual_value": "metadata.name={{release-name-local-static-provisioner}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{provisioner}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/local-static-provisioner_template.yaml",
					"similarity_id": "490512c806c34dce122b8fbd7e983ef5d16bb59493e670788351b1bfaea20ab9",
					"line": 113,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-local-static-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-local-static-provisioner}}.spec.containers.name={{provisioner}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-local-static-provisioner}}.spec.containers.name={{provisioner}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-local-static-provisioner}}.spec.containers.name={{provisioner}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/local-static-provisioner_template.yaml",
					"similarity_id": "fb4f9a261cdf89ee54d454fcbd340a81856448745be0c99826c9a6a0f2541e39",
					"line": 88,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-local-static-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-local-static-provisioner}}",
					"search_line": 88,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-local-static-provisioner}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-local-static-provisioner}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/local-static-provisioner_template.yaml",
					"similarity_id": "4d7a85cb62a09b0c8cdcf90a4003050903a8b050439a5c0613fccd9207e54763",
					"line": 88,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-local-static-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-local-static-provisioner}}",
					"search_line": 88,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-local-static-provisioner}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-local-static-provisioner}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/local-static-provisioner_template.yaml",
					"similarity_id": "0bfd55473dd1172013c8665d25897a0326c34c86e17f2cb71ead1c6028f2aba7",
					"line": 113,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-local-static-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}",
					"search_line": 113,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-local-static-provisioner}}.spec.template.spec.containers.name={{provisioner}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
