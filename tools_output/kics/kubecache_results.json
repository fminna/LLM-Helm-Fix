{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 223,
	"files_parsed": 1,
	"lines_parsed": 212,
	"lines_ignored": 11,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 17,
		"MEDIUM": 21,
		"TRACE": 0
	},
	"total_counter": 40,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:19:30.370567+02:00",
	"end": "2024-05-17T20:19:32.273333+02:00",
	"paths": [
		"templates/kubecache_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "2542943458816aa35a17c9ab5efc0c4265d0b350187aee3cbe310952d1eb3b99",
					"line": 218,
					"resource_type": "Pod",
					"resource_name": "release-name-kubecache-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "3aa94033f2def83fadb802410fbf639c9b45e8d4e340837cd9c58e416ba83d83",
					"line": 129,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubecache",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache}}.spec.template.spec.containers.name={{release-name}}",
					"search_line": 129,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubecache}}.spec.template.spec.containers.name={{release-name}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-kubecache}}.spec.template.spec.containers.name={{release-name}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "7c9c4a133c46d2ec0b2d9fda39e7e3b1d1517b39449af5254fe6237d1ba63b84",
					"line": 218,
					"resource_type": "Pod",
					"resource_name": "release-name-kubecache-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "b42f515125050afa95cc097d5f6715e5329bcd4e43b71b96366f34417d2fda64",
					"line": 129,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubecache",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache}}.spec.template.spec.containers.name={{release-name}}",
					"search_line": 129,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubecache}}.spec.template.spec.containers.name={{release-name}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-kubecache}}.spec.template.spec.containers.name={{release-name}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "abc99821945f6b8a50ef3130235de223af1bd532aeb09b0ff90b951feeb6cab4",
					"line": 129,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubecache",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache}}.spec.template.spec.containers.name={{release-name}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubecache}}.spec.template.spec.containers.name={{release-name}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-kubecache}}.spec.template.spec.containers.name={{release-name}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "7ab11d92a4cefdf24ddbb163636904e497efcf495004925e2044f07835b536c0",
					"line": 218,
					"resource_type": "Pod",
					"resource_name": "release-name-kubecache-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "008a3ea2dceeb4121b3c73faea29cb32ab9644f7356e40c643896a95ff0d71d6",
					"line": 218,
					"resource_type": "Pod",
					"resource_name": "release-name-kubecache-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "33c8bdc40b70fa961db5c0e1167bdf16f1393cc78aaa8a30b8406bd37aa5b8d4",
					"line": 218,
					"resource_type": "Pod",
					"resource_name": "release-name-kubecache-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "a16da3cf1e506eb5874e7a6e4f902c97a52e7721c6db8a9ccbc5efb252cc8a56",
					"line": 128,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubecache",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache}}.spec.template.spec.containers.name={{release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubecache}}.spec.template.spec.containers.name={{release-name}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-kubecache}}.spec.template.spec.containers.name={{release-name}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "e2a60cd4436990f952832581306c415a5725b2ae0a316a96013660f69871dcbf",
					"line": 218,
					"resource_type": "Pod",
					"resource_name": "release-name-kubecache-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "c41e28f1a531b8d78d9e7d0e55c62d2676b4cfd307e9fcd72036f224358d6416",
					"line": 218,
					"resource_type": "Pod",
					"resource_name": "release-name-kubecache-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "f77081bcd402bc06887f55f7e69187e9accee67b5254a0a7ac5e8c94928a524b",
					"line": 218,
					"resource_type": "Pod",
					"resource_name": "release-name-kubecache-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "6f3584a1a259bdabf21839efe617bef0c0d096035a28ef6a138d5de5d096edc3",
					"line": 129,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubecache",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache}}.spec.template.spec.containers.name={{release-name}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubecache}}.spec.template.spec.containers.name={{release-name}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-kubecache}}.spec.template.spec.containers.name={{release-name}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "1b6522d5b982d1103a618cfccf025cef3386b6faf563dbdbffd5cd7d4d80ce0f",
					"line": 216,
					"resource_type": "Pod",
					"resource_name": "release-name-kubecache-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-kubecache-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-kubecache-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "4c7a5b21bc7ac90994afd744d5340fa866a5e89a9e48ed16d1ab65fccc8f91ea",
					"line": 216,
					"resource_type": "Pod",
					"resource_name": "release-name-kubecache-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubecache-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-kubecache-test-connection}}.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "381cd61cd14385d156c7fc703c63b1319a7abab0a0fffcbf9663c974a0ec9d69",
					"line": 108,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubecache",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubecache}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-kubecache}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-kubecache",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-kubecache}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "ba95e16cc9b71b9d33f1ba5a817b7dc0636b317c187e81911c57e0f115bb07fb",
					"line": 61,
					"resource_type": "Service",
					"resource_name": "release-name-kubecache",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-kubecache}}",
					"search_line": 61,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "868580e3c8be97e647938e9aedf53fe09ec0a72ab60886348324188b3aac5be5",
					"line": 83,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubecache",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-kubecache}}",
					"search_line": 83,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "37ef1d20c3d6f99bce67d2dc6927d1d6bee6eac885937e2caeec80965ed5d01a",
					"line": 32,
					"resource_type": "Role",
					"resource_name": "release-name-kubecache",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Role}}.metadata.name={{release-name-kubecache}}",
					"search_line": 32,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "e2949dcdaf37eca1c04800119ebb3108fd635dfd56e447b93f707ca7bfb40230",
					"line": 47,
					"resource_type": "RoleBinding",
					"resource_name": "release-name-kubecache",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{RoleBinding}}.metadata.name={{release-name-kubecache}}",
					"search_line": 47,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "1ce63569ec42e5dff8f62842cac96840a17fc12eff39e034aa8e4ebd900c1ec0",
					"line": 207,
					"resource_type": "Pod",
					"resource_name": "release-name-kubecache-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-kubecache-test-connection}}",
					"search_line": 207,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-kubecache",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-kubecache}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "eba22470d9bcae099e74d4252e5d87ea539e1bea4b51cf36dea71618168176a1",
					"line": 218,
					"resource_type": "Pod",
					"resource_name": "release-name-kubecache-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "39c2f5d997fcaf0ac10872a62a4544f1999f305a9001cda3ffc7ca89d84c28d5",
					"line": 218,
					"resource_type": "Pod",
					"resource_name": "release-name-kubecache-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "26acfba1a370cc09d4bb4a8f7058032274002db7917089d0a4baa5c09fe3ce95",
					"line": 132,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubecache",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kubecache}}.spec.template.spec.containers.name={{release-name}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubecache}}.spec.template.spec.containers.name={{release-name}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-kubecache}}.spec.template.spec.containers.name={{release-name}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "13ada39cd923a5624a601df13355f3ef236191f557784b01fcb510a6d21d0373",
					"line": 219,
					"resource_type": "Pod",
					"resource_name": "release-name-kubecache-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "743b1b73f78d13660d1e8ebebaa4607b76eda2dd3e792b15f26495790ab3c898",
					"line": 207,
					"resource_type": "Pod",
					"resource_name": "release-name-kubecache-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubecache-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-kubecache-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				},
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "ad4fde5b80c96764df0a1b73ce28cbdf93e38efe62775c8cd8f9c207fbc2e4d8",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubecache",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache}}.spec.template.metadata",
					"search_line": 97,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubecache}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name}}",
					"actual_value": "metadata.name={{release-name-kubecache}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "83ed2a4a2159700ec5cec531d9c957b3665664a318e894bdb300fb7ec5a0480f",
					"line": 129,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubecache",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache}}.spec.containers.name={{release-name}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubecache}}.spec.containers.name={{release-name}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-kubecache}}.spec.containers.name={{release-name}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "290fe6a24446eb31cbcc009193c95e5e4b360cc7d203cf8a1ddcb4034787829b",
					"line": 218,
					"resource_type": "Pod",
					"resource_name": "release-name-kubecache-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "257e4599cf59a0ffe2b468089f51a201c101272bd2d2230473deddf5a209345a",
					"line": 207,
					"resource_type": "Pod",
					"resource_name": "release-name-kubecache-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubecache-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-kubecache-test-connection}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "a5ee6d30650599f5999168f88245c2395999b0c1662e694b88b5f2318712fd60",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubecache",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubecache}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-kubecache}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "0edec5de9a2e41bfecf3fa2b45a459a743ed7fc7252375bc3c4b0ea00e34ab41",
					"line": 207,
					"resource_type": "Pod",
					"resource_name": "release-name-kubecache-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubecache-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-kubecache-test-connection}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "cbb3cae77052fbebf8bc86c9cddbb40b62037d9af543f4e54961c9cdea0a6a20",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubecache",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubecache}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-kubecache}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "90d9f551f1f1dc3c8448f143932d82eebb1173f379d24aab38566c96652689e6",
					"line": 218,
					"resource_type": "Pod",
					"resource_name": "release-name-kubecache-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				},
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "59b2fd464def2c1afdcd2d5e7559de012fbb7307f2585961a9e0f2cfc301798e",
					"line": 216,
					"resource_type": "Pod",
					"resource_name": "release-name-kubecache-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubecache-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-kubecache-test-connection}}.spec does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "c73a93af565790322dcd5a926787bd186e1f6d3c0efa0626c61bd82ccb224805",
					"line": 129,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubecache",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache}}.spec.template.spec.containers.name={{release-name}}",
					"search_line": 129,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubecache}}.spec.template.spec.containers.name={{release-name}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-kubecache}}.spec.template.spec.containers.name={{release-name}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "9838f1e263011b861290fdabceab481ce95aa396469ed79c9000a2bd0f981429",
					"line": 218,
					"resource_type": "Pod",
					"resource_name": "release-name-kubecache-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-kubecache-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/kubecache_template.yaml",
					"similarity_id": "afc3aee7333e608da13cc4fe7e95a4a87a2bbaf04bd77af6a7e89df56429a66d",
					"line": 71,
					"resource_type": "Service",
					"resource_name": "release-name-kubecache",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kubecache}}.spec.ports.port={{9000}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubecache}}.spec.ports.port={{9000}} has a Pod port",
					"actual_value": "metadata.name={{release-name-kubecache}}.spec.ports.port={{9000}} does not have a Pod port"
				}
			]
		}
	]
}
