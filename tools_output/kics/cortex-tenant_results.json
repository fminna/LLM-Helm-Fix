{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 124,
	"files_parsed": 1,
	"lines_parsed": 120,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 17,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:01:36.376427+02:00",
	"end": "2024-05-17T23:01:38.27496+02:00",
	"paths": [
		"templates/cortex-tenant_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/cortex-tenant_template.yaml",
					"similarity_id": "c933aa4195deb438284dd468f0b837a349380fc0ebcceb882d0bd963097d0e3e",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-tenant",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cortex-tenant}}.spec.template.spec.containers.name={{cortex-tenant}}",
					"search_line": 103,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cortex-tenant}}.spec.template.spec.containers.name={{cortex-tenant}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-cortex-tenant}}.spec.template.spec.containers.name={{cortex-tenant}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/cortex-tenant_template.yaml",
					"similarity_id": "61d5815af2947fbe27d100d0461c761c0b3340d32a27a9e818c5a45d65e9c6d8",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-tenant",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cortex-tenant}}.spec.template.spec.containers.name={{cortex-tenant}}",
					"search_line": 103,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cortex-tenant}}.spec.template.spec.containers.name={{cortex-tenant}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-cortex-tenant}}.spec.template.spec.containers.name={{cortex-tenant}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/cortex-tenant_template.yaml",
					"similarity_id": "6c6907f7203792f76dcb4a6626667dbecec6b9705629a6f6eba5dc9483614301",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-tenant",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cortex-tenant}}.spec.template.spec.containers.name={{cortex-tenant}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cortex-tenant}}.spec.template.spec.containers.name={{cortex-tenant}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-cortex-tenant}}.spec.template.spec.containers.name={{cortex-tenant}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/cortex-tenant_template.yaml",
					"similarity_id": "d0a224be4a6224e42b1e4109615e719ca31e1f2bd8a3fd1d28ba6f1fa128dbd9",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-tenant",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cortex-tenant}}.spec.template.spec.containers.name={{cortex-tenant}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cortex-tenant}}.spec.template.spec.containers.name={{cortex-tenant}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-cortex-tenant}}.spec.template.spec.containers.name={{cortex-tenant}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/cortex-tenant_template.yaml",
					"similarity_id": "34d1725e4f1b74a28678bac399bcfd1db59840e3ffacec25351894bcc870e6f4",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-tenant",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cortex-tenant}}.spec.template.spec.containers.name={{cortex-tenant}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cortex-tenant}}.spec.template.spec.containers.name={{cortex-tenant}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-cortex-tenant}}.spec.template.spec.containers.name={{cortex-tenant}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/cortex-tenant_template.yaml",
					"similarity_id": "2a4fa75d16156f397cbd4f26ca2165f35ac031884fc0b10907b4ab84aecd325b",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-tenant",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cortex-tenant}}.spec.template.spec.containers.name={{cortex-tenant}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cortex-tenant}}.spec.template.spec.containers.name={{cortex-tenant}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-cortex-tenant}}.spec.template.spec.containers.name={{cortex-tenant}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/cortex-tenant_template.yaml",
					"similarity_id": "9e888e7f2a852543996f94de44251adde2d6559b55b1a15ec5424dae72fbea54",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-tenant",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cortex-tenant}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cortex-tenant}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-cortex-tenant}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/cortex-tenant_template.yaml",
					"similarity_id": "929066354a87a485dd81723a61437ba3434df5cf452c6cee32ccd8a94b83c671",
					"line": 63,
					"resource_type": "Service",
					"resource_name": "release-name-cortex-tenant",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-cortex-tenant}}",
					"search_line": 63,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/cortex-tenant_template.yaml",
					"similarity_id": "ef57df79460dde3d8044103a001f938a3e42f9a20b1cf7f93423649cc3f20fe3",
					"line": 24,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-cortex-tenant-configmap",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-cortex-tenant-configmap}}",
					"search_line": 24,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/cortex-tenant_template.yaml",
					"similarity_id": "10e4c519fdaf84f913cff96cc5a20a45427aede4da64fa0e250766ae9a37ca24",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-tenant",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-cortex-tenant}}",
					"search_line": 85,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/cortex-tenant_template.yaml",
					"similarity_id": "7036b7291d9e071b3f0ab5be9ad7f9ca8eb3cb094d980e25e2bcce4ef98cb135",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-tenant",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cortex-tenant}}.spec.template.spec.containers.name={{cortex-tenant}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=cortex-tenant has CPU limits",
					"actual_value": "spec.template.spec.containers.name=cortex-tenant doesn't have CPU limits"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/cortex-tenant_template.yaml",
					"similarity_id": "4e58bf9bdc199002a7ff21c95721c40d36a00eb1874cfab70bf9c07c38cf7247",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-tenant",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-cortex-tenant}}.spec.template.spec.containers.name={{cortex-tenant}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cortex-tenant}}.spec.template.spec.containers.name={{cortex-tenant}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-cortex-tenant}}.spec.template.spec.containers.name={{cortex-tenant}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/cortex-tenant_template.yaml",
					"similarity_id": "918fee757869b46072f14c0c171a8a050df0fa0656757bf0181967f56ce20b47",
					"line": 94,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-tenant",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cortex-tenant}}.spec.template.metadata",
					"search_line": 94,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cortex-tenant}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{cortex-tenant}}",
					"actual_value": "metadata.name={{release-name-cortex-tenant}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{cortex-tenant}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/cortex-tenant_template.yaml",
					"similarity_id": "0dd813bca2297e384d4c300dc03c24bde5a2da1d37d723366b55e373bed38a11",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-tenant",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cortex-tenant}}.spec.containers.name={{cortex-tenant}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cortex-tenant}}.spec.containers.name={{cortex-tenant}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-cortex-tenant}}.spec.containers.name={{cortex-tenant}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/cortex-tenant_template.yaml",
					"similarity_id": "377ece62e7751ee38250d662c55f2e90c82dd0892ab0aea5fa48d1eb46f25fd2",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-tenant",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cortex-tenant}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cortex-tenant}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-cortex-tenant}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/cortex-tenant_template.yaml",
					"similarity_id": "323c183b3ace0c9aad8df4824b5ff2d921832e382dced42f1cd97a4a4a58e463",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-tenant",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cortex-tenant}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cortex-tenant}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-cortex-tenant}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/cortex-tenant_template.yaml",
					"similarity_id": "f089c5ea90fce8e32c9b77cc014886c950432e1dac3f7d90a640532128a59fdd",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-tenant",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cortex-tenant}}.spec.template.spec.containers.name={{cortex-tenant}}",
					"search_line": 103,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cortex-tenant}}.spec.template.spec.containers.name={{cortex-tenant}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-cortex-tenant}}.spec.template.spec.containers.name={{cortex-tenant}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
