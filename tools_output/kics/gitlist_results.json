{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 163,
	"files_parsed": 1,
	"lines_parsed": 160,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-05-18T00:01:33.040214+02:00",
	"end": "2024-05-18T00:01:35.036161+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/gitlist_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/gitlist_template.yaml",
					"similarity_id": "bb85753ff39904be29eb3dcbb88c6a983cd341fb81e80120dbaede50a0dc3b0f",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-gitlist",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/gitlist_template.yaml",
					"similarity_id": "ab286c1037650fb69d3a010cf3048c9532de59aaf511f3355abaf413df385745",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-gitlist",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/gitlist_template.yaml",
					"similarity_id": "15842d569e08e73e3d77bafd1faba101b4412018bb40283b4f05c68ede5b4064",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-gitlist",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/gitlist_template.yaml",
					"similarity_id": "c974afdf0fa93f459e1eafa516af11c6bd6869f956dbd0fd394f9016f3fdd064",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-gitlist",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/gitlist_template.yaml",
					"similarity_id": "c4baf334242ee661e6559fd5679fc543a085eeda67286a793595739d7946a069",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-gitlist",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/gitlist_template.yaml",
					"similarity_id": "ae0322a4d7aa2cde4fabf6b151888ac88fa75e62a7c76c6af069a9684bdef381",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-gitlist",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/gitlist_template.yaml",
					"similarity_id": "4c5ca12fad383101f3a41606f7f6cd37aa8039d7b4b2580cbebb658078a7b22a",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-gitlist",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/gitlist_template.yaml",
					"similarity_id": "fcfdf9c001df52ca500392d342810a29cc1e9c0faca62d4829e431a951b31602",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-gitlist",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/gitlist_template.yaml",
					"similarity_id": "4df246dc58aa1efaca595e880187c04717b97f485cd8b06d749fdb803dc37477",
					"line": 61,
					"resource_type": "Deployment",
					"resource_name": "release-name-gitlist",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gitlist}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gitlist}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-gitlist}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/gitlist_template.yaml",
					"similarity_id": "2d88d762a97116080d8415a00a9279a8b87e1165a042193acecbd31f61501e9f",
					"line": 147,
					"resource_type": "Ingress",
					"resource_name": "gitlist-ingress",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Ingress}}.metadata.name={{gitlist-ingress}}",
					"search_line": 147,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/gitlist_template.yaml",
					"similarity_id": "47ca45a10301dd9a1c2bc5047ed78c9170831c3033ed4519328afd35845d1840",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "release-name-gitlist",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-gitlist}}",
					"search_line": 35,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/gitlist_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "gitlist",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{gitlist}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/gitlist_template.yaml",
					"similarity_id": "51e450dd9ebb4d2a27aeb160131c0fd00fcf091e104ee1d798d1034b560f69f1",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-gitlist",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name=gitlist",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=gitlist has resources defined",
					"actual_value": "spec.template.spec.containers.name=gitlist doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/gitlist_template.yaml",
					"similarity_id": "91b6f37a706b1ca703a467ec806e4fd5c1af8fefb035e8d8b97edd92d35c6e9a",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-gitlist",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name=gitlist",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=gitlist should have resources defined",
					"actual_value": "spec.template.spec.containers.name=gitlist doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/gitlist_template.yaml",
					"similarity_id": "59ef38bcf540e5bd2cb102042dede5c6009fe9d32c86ac995d100d337f8cc390",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-gitlist",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gitlist}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-gitlist is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=release-name-gitlist is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/gitlist_template.yaml",
					"similarity_id": "fba6be3b1847607ed724c2495c3e2b43e8f45a21a65986f3918382fb2671e048",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-gitlist",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/gitlist_template.yaml",
					"similarity_id": "8196a12b4c73da64f0a632d4ec652fad9d598e350476ad08a963b0c2479d2c84",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-gitlist",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gitlist}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gitlist}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{gitlist}}",
					"actual_value": "metadata.name={{release-name-gitlist}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{gitlist}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/gitlist_template.yaml",
					"similarity_id": "3681ed401bb1e75c48d2490d790bb7975b2e62f080c7060f32fb257b2183856b",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-gitlist",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gitlist}}.spec.containers.name=gitlist",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gitlist}}.spec.containers.name=gitlist.securityContext should be set",
					"actual_value": "metadata.name={{release-name-gitlist}}.spec.containers.name=gitlist.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/gitlist_template.yaml",
					"similarity_id": "fb7390b1c8d52773e3124f29dac4f2eb45ab78fccfe5115c42a4e77dd980fbea",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "release-name-gitlist",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gitlist}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gitlist}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-gitlist}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/gitlist_template.yaml",
					"similarity_id": "7b7658ca43d2c7a5cab58083a0060a3ae11349351d735a21000fea3c8d34857c",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "release-name-gitlist",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gitlist}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gitlist}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-gitlist}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/gitlist_template.yaml",
					"similarity_id": "796f1cc28c2100151a3e78afaf6bf8c844b271bf6e52f84cce32834065571a4c",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-gitlist",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name=gitlist",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=gitlist has a security context",
					"actual_value": "spec.template.spec.containers.name=gitlist does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/gitlist_template.yaml",
					"similarity_id": "5baa36953f4ee1325158dcea328bfb7fd6d2432a2914a6d4e8ebaa33135ad383",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-gitlist",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-gitlist}}.spec.template.spec.containers.name={{gitlist}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
