{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 65,
	"files_parsed": 1,
	"lines_parsed": 63,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 18,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:51:01.409677+02:00",
	"end": "2024-06-26T01:51:03.548526+02:00",
	"paths": [
		"templates/mysql-check_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/mysql-check_template.yaml",
					"similarity_id": "d88f968d477ed574775cf5b874d695861e572dd6eaf20a7c7de697710cf5bee5",
					"line": 46,
					"resource_type": "CronJob",
					"resource_name": "release-name-mysql-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.spec.containers.name={{mysql-check}}",
					"search_line": 46,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.spec.containers.name={{mysql-check}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.spec.containers.name={{mysql-check}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/mysql-check_template.yaml",
					"similarity_id": "71497e7c563670c696c197837edad93f71c87a0b2cc5e58c492f6625d9d4296b",
					"line": 64,
					"resource_type": "CronJob",
					"resource_name": "release-name-mysql-check",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.spec.securityContext.runAsUser=16",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.spec.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.spec.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/mysql-check_template.yaml",
					"similarity_id": "7da7e8c9a9ac4b10d79374ac1142a18971917520b56c8dcf2c93d0c9ad3b54d5",
					"line": 45,
					"resource_type": "CronJob",
					"resource_name": "release-name-mysql-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.spec.containers.name={{mysql-check}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.spec.containers.name={{mysql-check}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.spec.containers.name={{mysql-check}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/mysql-check_template.yaml",
					"similarity_id": "ae744102b2bdced7f72e6c108d3c24d93e31d53d6a3d26d8693d094d25eb2ef1",
					"line": 45,
					"resource_type": "CronJob",
					"resource_name": "release-name-mysql-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.spec.containers.name={{mysql-check}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.spec.containers.name={{mysql-check}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.spec.containers.name={{mysql-check}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/mysql-check_template.yaml",
					"similarity_id": "a19ba07e96b396b17a136fb0dcbbeed7c9226b63f76b8e036cf184a28ab641d6",
					"line": 45,
					"resource_type": "CronJob",
					"resource_name": "release-name-mysql-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.spec.containers.name={{mysql-check}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.spec.containers.name={{mysql-check}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.spec.containers.name={{mysql-check}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/mysql-check_template.yaml",
					"similarity_id": "5fa697bdac4a1e6d68bfdf43a8912a7201d7b6646bde9dc258c38d866fbb697e",
					"line": 46,
					"resource_type": "CronJob",
					"resource_name": "release-name-mysql-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.spec.containers.name={{mysql-check}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.spec.containers.name={{mysql-check}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.spec.containers.name={{mysql-check}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/mysql-check_template.yaml",
					"similarity_id": "5e5845f89c01d91bbe516b25724d48f8512501e1cba0a798f157fb3d315fcaf3",
					"line": 43,
					"resource_type": "CronJob",
					"resource_name": "release-name-mysql-check",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.spec.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.spec.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.spec.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/mysql-check_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Secret",
					"resource_name": "release-name-mysql-check-secret-env",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-mysql-check-secret-env}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mysql-check_template.yaml",
					"similarity_id": "0458da1b4dae3d086c44596bc4cce8a40e08199d471b3c658aca86dcef617746",
					"line": 17,
					"resource_type": "CronJob",
					"resource_name": "release-name-mysql-check",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{CronJob}}.metadata.name={{release-name-mysql-check}}",
					"search_line": 17,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/mysql-check_template.yaml",
					"similarity_id": "a93c1e4f9016858817a1aedbf9009bd73c8ca4b6c485b13e19adcb4f7cbcb1be",
					"line": 61,
					"resource_type": "CronJob",
					"resource_name": "release-name-mysql-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.spec.containers.name={{mysql-check}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=mysql-check has limits defined",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=mysql-check doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/mysql-check_template.yaml",
					"similarity_id": "74cf16e6eca01200a9658685acebb128f050aa6c64c3a8ccee310fa874e1a495",
					"line": 61,
					"resource_type": "CronJob",
					"resource_name": "release-name-mysql-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.spec.containers.name={{mysql-check}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=mysql-check.resources should have requests defined",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=mysql-check.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "CronJob Deadline Not Configured",
			"query_id": "192fe40b-b1c3-448a-aba2-6cc19a300fe3",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Cronjobs must have a configured deadline, which means the attribute 'startingDeadlineSeconds' must be defined",
			"description_id": "285952e5",
			"files": [
				{
					"file_name": "templates/mysql-check_template.yaml",
					"similarity_id": "49e8096c66ec39f5dc9e95bc8028da51634ccae413dc6f1a0705431fdf2920ff",
					"line": 23,
					"resource_type": "CronJob",
					"resource_name": "release-name-mysql-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mysql-check}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.startingDeadlineSeconds should be defined",
					"actual_value": "spec.startingDeadlineSeconds is not defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/mysql-check_template.yaml",
					"similarity_id": "86783a7c10558b979402ece07c2c62fc90afb9bbabb8ed4d66bf2f345916f224",
					"line": 49,
					"resource_type": "CronJob",
					"resource_name": "release-name-mysql-check",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.spec.containers.name={{mysql-check}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.spec.containers.name={{mysql-check}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.spec.containers.name={{mysql-check}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/mysql-check_template.yaml",
					"similarity_id": "047b6831c78912072295d6eb8c2ccfc7974a8ca90d47b8d69797f06d88ac01f2",
					"line": 36,
					"resource_type": "CronJob",
					"resource_name": "release-name-mysql-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.metadata.annotations should specify an AppArmor profile for container {{mysql-check}}",
					"actual_value": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.metadata.annotations does not specify an AppArmor profile for container {{mysql-check}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/mysql-check_template.yaml",
					"similarity_id": "b0bd97227fe3e04b65dfc053fa0063f60898f148beb809c8bf5a998cb13ba966",
					"line": 46,
					"resource_type": "CronJob",
					"resource_name": "release-name-mysql-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mysql-check}}.spec.containers.name={{mysql-check}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mysql-check}}.spec.containers.name={{mysql-check}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-mysql-check}}.spec.containers.name={{mysql-check}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/mysql-check_template.yaml",
					"similarity_id": "8b74572c49492247b85c196e97ee55dbab0f15cd8f79fcb9242c0c61fd4603b4",
					"line": 17,
					"resource_type": "CronJob",
					"resource_name": "release-name-mysql-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mysql-check}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mysql-check}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-mysql-check}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/mysql-check_template.yaml",
					"similarity_id": "bd2d5f2ce0efe78ad2eeac07d88a8912232b8712a21adacb12afc593261af7e5",
					"line": 17,
					"resource_type": "CronJob",
					"resource_name": "release-name-mysql-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mysql-check}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mysql-check}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-mysql-check}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/mysql-check_template.yaml",
					"similarity_id": "df7b510a815a95098462d5c5240cd8e33453ca57cd8d675ae959cfe4a8d3833a",
					"line": 57,
					"resource_type": "CronJob",
					"resource_name": "release-name-mysql-check",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mysql-check}}.spec.jobTemplate.spec.template.spec.containers.name={{mysql-check}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.jobTemplate.spec.template.spec.containers.name={{mysql-check}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.jobTemplate.spec.template.spec.containers.name={{mysql-check}}.envFrom.secretRef' is defined"
				}
			]
		}
	]
}
