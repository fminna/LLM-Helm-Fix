{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 142,
	"files_parsed": 1,
	"lines_parsed": 139,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 17,
		"MEDIUM": 17,
		"TRACE": 0
	},
	"total_counter": 36,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:28:04.514212+02:00",
	"end": "2024-05-17T20:28:06.409942+02:00",
	"paths": [
		"templates/carbonio_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "3ce148ca6a81428eb49f567c75c7261f26adc73cd509f686d29412d906d71268",
					"line": 132,
					"resource_type": "Pod",
					"resource_name": "release-name-server-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "955c5e7ce7d2c61624cc59a4ffe28e9fa82def857986b23df8bdb88179cd15bd",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-carbonio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-carbonio}}.spec.template.spec.containers.name={{carbonio}}",
					"search_line": 67,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-carbonio}}.spec.template.spec.containers.name={{carbonio}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-carbonio}}.spec.template.spec.containers.name={{carbonio}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "2d8b167e67920d673ad906e7d6bae6eb2ae3ae5c721b5029b0276ebc01a2c3cd",
					"line": 132,
					"resource_type": "Pod",
					"resource_name": "release-name-server-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "6258efbd0589b22f994352bd56beaf2a8fefb4170e2e4725ddfbb55993dd1ea1",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-carbonio",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-carbonio}}.spec.template.spec.containers.name={{carbonio}}.securityContext.runAsUser",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-carbonio}}.spec.template.spec.containers.name={{carbonio}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-carbonio}}.spec.template.spec.containers.name={{carbonio}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "ae1642212eba1c13850cc596b02ff3f4523f28e97a58164fbbb24d9d1e4bdc27",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-carbonio",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-carbonio}}.spec.template.spec.containers.name={{carbonio}}.securityContext.runAsUser=0",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-carbonio}}.spec.template.spec.containers.name={{carbonio}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-carbonio}}.spec.template.spec.containers.name={{carbonio}}.securityContext.runAsUser is set to a low UID"
				},
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "f4febaccab0f6505b6d6058456787cc44b7ac0c166774d4cb7118580ef4dba1a",
					"line": 132,
					"resource_type": "Pod",
					"resource_name": "release-name-server-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "43dcc70de925d72e9a85d198712d12c3ab61c27d3a65131d78455d8141e56ce4",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-carbonio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-carbonio}}.spec.template.spec.containers.name={{carbonio}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-carbonio}}.spec.template.spec.containers.name={{carbonio}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-carbonio}}.spec.template.spec.containers.name={{carbonio}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "9ff397e18cd077d5128310173759f409edd8e2600717e2e46f7b664255d28559",
					"line": 132,
					"resource_type": "Pod",
					"resource_name": "release-name-server-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "3080af3a05717500f4e783d6916dbc1eef40a6e555053d643bf1e12b6a57b0d0",
					"line": 132,
					"resource_type": "Pod",
					"resource_name": "release-name-server-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "2c6175654897f65071768aa684d8f42dfba0dbf6ea0347434acfa46446e16ae7",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-carbonio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-carbonio}}.spec.template.spec.containers.name={{carbonio}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-carbonio}}.spec.template.spec.containers.name={{carbonio}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-carbonio}}.spec.template.spec.containers.name={{carbonio}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "cf40f63b7ff25efba8a33b5df85a06dd1d514750b5888dfbdd2c0b0442ab45f7",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-carbonio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-carbonio}}.spec.template.spec.containers.name={{carbonio}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-carbonio}}.spec.template.spec.containers.name={{carbonio}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-carbonio}}.spec.template.spec.containers.name={{carbonio}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "8420eabaf6f38a49b47c6ffc5e9d3dd411a694eb643aa597ba15b6063cc4857e",
					"line": 132,
					"resource_type": "Pod",
					"resource_name": "release-name-server-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "470c419329ed86aebbb4eb9d6663bd884c1df964ade43e71e6026c493265f22c",
					"line": 132,
					"resource_type": "Pod",
					"resource_name": "release-name-server-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "302af4f32a5c1438c8200b09ad3da983c391d4ec527b6e2eca2f8c657dcbcea2",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-carbonio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-carbonio}}.spec.template.spec.containers.name={{carbonio}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-carbonio}}.spec.template.spec.containers.name={{carbonio}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-carbonio}}.spec.template.spec.containers.name={{carbonio}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "048718bd2ada0b361f29f6cd142291b5c0fd95bcc5bbe3db91f551bf7de5d228",
					"line": 132,
					"resource_type": "Pod",
					"resource_name": "release-name-server-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "0aef0743146abfed13154adf647b2ad63ef59759113c47e498c0d6c1211f65bf",
					"line": 126,
					"resource_type": "Pod",
					"resource_name": "release-name-server-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-server-test}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-server-test}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-server-test}}.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "b7e106cadf5e4e7d445762a1b7dcb93cf6e334b4abbe7ef86d52c9d8e3ee6ccd",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-carbonio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-carbonio}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-carbonio}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-carbonio}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Shared Service Account",
			"query_id": "c1032cf7-3628-44e2-bd53-38c17cf31b6b",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "A Service Account token is shared between workloads",
			"description_id": "f1c94544",
			"files": [
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "ae180f8e21c924bbcb6c51c69b60d7c44f54a9f57fb865ef78b4cb6e253c024f",
					"line": 127,
					"resource_type": "Pod",
					"resource_name": "release-name-server-test",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-server-test}}.spec.serviceAccountName",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.serviceAccountName' should not be shared with other workloads",
					"actual_value": "'spec.serviceAccountName' is shared with other workloads"
				},
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "34efc0d12de5e37a658641441f23af39efa01cb339fd6dba4d6d36597ed10a3e",
					"line": 59,
					"resource_type": "Deployment",
					"resource_name": "release-name-carbonio",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-carbonio}}.spec.template.spec.serviceAccountName",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.serviceAccountName' should not be shared with other workloads",
					"actual_value": "'spec.template.spec.serviceAccountName' is shared with other workloads"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "08dd8d4862d19d692631dfbd439a41a3c07dd67f7817ad83b2acdea0e235d837",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-carbonio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-carbonio}}.spec.template.spec.containers.name={{carbonio}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=carbonio has limits defined",
					"actual_value": "spec.template.spec.containers.name=carbonio doesn't have limits defined"
				},
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "de1a184a3d0300da26151313da3b53602a32892c5486c939a3f397922b1c5c25",
					"line": 132,
					"resource_type": "Pod",
					"resource_name": "release-name-server-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-server-test}}.spec.containers.name=release-name-server-test",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=release-name-server-test has resources defined",
					"actual_value": "spec.containers.name=release-name-server-test doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "2d4edeed6d06a9f234192979422ad7bc2656223256f66bb2395e9feb4b3588ce",
					"line": 132,
					"resource_type": "Pod",
					"resource_name": "release-name-server-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-server-test}}.spec.containers.name=release-name-server-test",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=release-name-server-test should have resources defined",
					"actual_value": "spec.containers.name=release-name-server-test doesn't have resources defined"
				},
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "4d6f46ec37adb398e56c97eeaee663e752755bd57b0e8cf84cd4e7af3e9cfec5",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-carbonio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-carbonio}}.spec.template.spec.containers.name={{carbonio}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=carbonio.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=carbonio.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "61ed56be0b5edc0ba1ce1eacaeb11d690b417f18043a9eadb923d78d843903f2",
					"line": 134,
					"resource_type": "Pod",
					"resource_name": "release-name-server-test",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "dd54bc50f18f50dc9a93b3f0a11c2879bcfaf8ec9cf505a3a7f224bf6473ff16",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-carbonio",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-carbonio}}.spec.template.spec.containers.name={{carbonio}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-carbonio}}.spec.template.spec.containers.name={{carbonio}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-carbonio}}.spec.template.spec.containers.name={{carbonio}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "64f379643533d18a38bbdc7352e3a393020e763a81a55dd6a52f94ca7b978833",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-carbonio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-carbonio}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-carbonio}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{carbonio}}",
					"actual_value": "metadata.name={{release-name-carbonio}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{carbonio}}"
				},
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "e983623eeabe36d7e610cdf0c7564ef97a3bbcbc8731c1213aa8e11f31da3f74",
					"line": 116,
					"resource_type": "Pod",
					"resource_name": "release-name-server-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-server-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-server-test}}.annotations should specify an AppArmor profile for container {{release-name-server-test}}",
					"actual_value": "metadata.name={{release-name-server-test}}.annotations does not specify an AppArmor profile for container {{release-name-server-test}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "1301bc1fdddfe27f394239cc0034308f468e65e71bb300c1e2903691ce20c604",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-carbonio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-carbonio}}.spec.containers.name={{carbonio}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-carbonio}}.spec.containers.name={{carbonio}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-carbonio}}.spec.containers.name={{carbonio}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "abcc225c0c36ccd7bb606d95c9d4e50f2d9c016420c70520fc36d0c4dc6de71b",
					"line": 132,
					"resource_type": "Pod",
					"resource_name": "release-name-server-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-server-test}}.spec.containers.name=release-name-server-test",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-server-test}}.spec.containers.name=release-name-server-test.securityContext should be set",
					"actual_value": "metadata.name={{release-name-server-test}}.spec.containers.name=release-name-server-test.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "5ab0365a4d07d7ef06059c4f06863f4bec03b391b99b309a1705b665bff0643c",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "release-name-carbonio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-carbonio}}",
					"search_line": 46,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-carbonio}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-carbonio}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "41c630d593e96e0b41515bb87b4d01c7338f50d653430808acbb286eb68709c9",
					"line": 123,
					"resource_type": "Pod",
					"resource_name": "release-name-server-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-server-test}}",
					"search_line": 123,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-server-test}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-server-test}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "d7ef3a5582ff18cc8d4b24fb8857be4ac30f0571302f50a2864dbd136398670c",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "release-name-carbonio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-carbonio}}",
					"search_line": 46,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-carbonio}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-carbonio}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "e837e03a10ed2e7e5fa4fed57c8c61022bc16f6a63b7495d642d132dadd76b11",
					"line": 123,
					"resource_type": "Pod",
					"resource_name": "release-name-server-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-server-test}}",
					"search_line": 123,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-server-test}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-server-test}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "d83cd5b0278c4a8c02876a2bedc30b6ae13b647cc22d0a7707cd3b7c7e46f949",
					"line": 132,
					"resource_type": "Pod",
					"resource_name": "release-name-server-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-server-test}}.spec.containers.name=release-name-server-test",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=release-name-server-test has a security context",
					"actual_value": "spec.containers.name=release-name-server-test does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "47002bfe75842c515dd66605102e5889e2e01571432e848b2d6283ec9264b134",
					"line": 132,
					"resource_type": "Pod",
					"resource_name": "release-name-server-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-server-test}}.spec.containers.name={{release-name-server-test}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/carbonio_template.yaml",
					"similarity_id": "2d6da327d31f94112394c85f7c8222a33c80eea6bc40a00bd84b8365571c567e",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-carbonio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-carbonio}}.spec.template.spec.containers.name={{carbonio}}",
					"search_line": 67,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-carbonio}}.spec.template.spec.containers.name={{carbonio}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-carbonio}}.spec.template.spec.containers.name={{carbonio}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
