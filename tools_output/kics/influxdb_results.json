{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 106,
	"files_parsed": 1,
	"lines_parsed": 101,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 12,
		"MEDIUM": 6,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-05-03T16:32:10.328796+02:00",
	"end": "2024-05-03T16:32:12.243143+02:00",
	"paths": [
		"templates/influxdb_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/influxdb_template.yaml",
					"similarity_id": "57a639b3b0ab5e2de4254b91bb9ecb6264a9d47ec233cacecc85392d9ee8fcca",
					"line": 30,
					"resource_type": "PersistentVolume",
					"resource_name": "influxdb-perv",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{influxdb-perv}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "PersistentVolume name 'influxdb-perv' of kind 'PersistentVolume' in non kube-system namespace 'default' should not mount a host sensitive OS directory '/mnt/data/influxdb' with hostPath",
					"actual_value": "PersistentVolume name 'influxdb-perv' of kind 'PersistentVolume' in non kube-system namespace 'default' is mounting a host sensitive OS directory '/mnt/data/influxdb' with hostPath"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/influxdb_template.yaml",
					"similarity_id": "167d95b3c4f2e987347905fbe26d3ee0920c1443151b1c26b97a4909715f1977",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "influxdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{influxdb}}.spec.template.spec.containers.name={{influxdb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{influxdb}}.spec.template.spec.containers.name={{influxdb}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{influxdb}}.spec.template.spec.containers.name={{influxdb}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/influxdb_template.yaml",
					"similarity_id": "d64c07d9cb0ad0d1b1ac70ad0996671fd592a28fb9e5a2c63350946fc5252382",
					"line": 101,
					"resource_type": "Deployment",
					"resource_name": "influxdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{influxdb}}.spec.template.spec.containers.name={{influxdb}}.volumeMounts.name={{var-lib-influxdb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{influxdb}}.spec.template.spec.containers.name={{influxdb}}.volumeMounts.name={{var-lib-influxdb}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{influxdb}}.spec.template.spec.containers.name={{influxdb}}.volumeMounts.name={{var-lib-influxdb}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/influxdb_template.yaml",
					"similarity_id": "c9e59408d393ff3d3b6e893c0afeb19ee33270d4ca4908fa0e377070ca5d2290",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "influxdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{influxdb}}.spec.template.spec.containers.name={{influxdb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{influxdb}}.spec.template.spec.containers.name={{influxdb}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{influxdb}}.spec.template.spec.containers.name={{influxdb}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/influxdb_template.yaml",
					"similarity_id": "cee84672ae394fb0932a3a9174e665f5b37ec364a7ae5d97398581feadd44ee4",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "influxdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{influxdb}}.spec.template.spec.containers.name={{influxdb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{influxdb}}.spec.template.spec.containers.name={{influxdb}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{influxdb}}.spec.template.spec.containers.name={{influxdb}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/influxdb_template.yaml",
					"similarity_id": "9c516e47523cd754df7f0ee2699606d8a230e85ec6c5c1d254c132ce498c457d",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "influxdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{influxdb}}.spec.template.spec.containers.name={{influxdb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{influxdb}}.spec.template.spec.containers.name={{influxdb}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{influxdb}}.spec.template.spec.containers.name={{influxdb}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/influxdb_template.yaml",
					"similarity_id": "0c69cf7c23324942853640e8466e7948210b88dbe8ca2c51775c58c07def2cc5",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "influxdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{influxdb}}.spec.template.spec.containers.name={{influxdb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{influxdb}}.spec.template.spec.containers.name={{influxdb}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{influxdb}}.spec.template.spec.containers.name={{influxdb}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/influxdb_template.yaml",
					"similarity_id": "e1e28784a4b52828c29327395e30dacdbac9aa148cbcd2e2bd52af4be1339780",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "influxdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{influxdb}}.spec.template.spec.containers.name={{influxdb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{influxdb}}.spec.template.spec.containers.name={{influxdb}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{influxdb}}.spec.template.spec.containers.name={{influxdb}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/influxdb_template.yaml",
					"similarity_id": "faf2dfc639a87b23446d664cc7ee113ffc3e6b8bd99e3e85791da37dfa2a4bcd",
					"line": 82,
					"resource_type": "Deployment",
					"resource_name": "influxdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{influxdb}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{influxdb}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{influxdb}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/influxdb_template.yaml",
					"similarity_id": "3a93c4fec8b71be6f69a3ec17bfd336f252f1127b08802bc6d6e7b6ae0f3aff9",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "influxdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{influxdb}}.spec.template.spec.containers.name={{influxdb}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{influxdb}}.spec.template.spec.containers.name={{influxdb}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{influxdb}}.spec.template.spec.containers.name={{influxdb}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/influxdb_template.yaml",
					"similarity_id": "4cfc0ee47f9bacc78dbc9574aee7dad3b6a9d7a2018ba007bfb2c966b2e4bdd1",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "influxdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{influxdb}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{influxdb}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{influxdb}}",
					"actual_value": "metadata.name={{influxdb}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{influxdb}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/influxdb_template.yaml",
					"similarity_id": "c2f60cf9830fb7ddd0e0573ba1413c19baa9145eecd1de81121c397942d6aa43",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "influxdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{influxdb}}.spec.containers.name=influxdb",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{influxdb}}.spec.containers.name=influxdb.securityContext should be set",
					"actual_value": "metadata.name={{influxdb}}.spec.containers.name=influxdb.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/influxdb_template.yaml",
					"similarity_id": "49903cf999a81e7b9cdd6692a186727e6b8d1986c4a611e13255d04b4e6f5f3e",
					"line": 72,
					"resource_type": "Deployment",
					"resource_name": "influxdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{influxdb}}",
					"search_line": 72,
					"search_value": "",
					"expected_value": "metadata.name={{influxdb}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{influxdb}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/influxdb_template.yaml",
					"similarity_id": "31b8366db3fac684971caddee1645d7de5ec936947aeec7551dd799134dc8154",
					"line": 37,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "influxdb-perv-claim",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{influxdb-perv-claim}}",
					"search_line": 37,
					"search_value": "",
					"expected_value": "metadata.name={{influxdb-perv-claim}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{influxdb-perv-claim}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/influxdb_template.yaml",
					"similarity_id": "511a97ac5e30abe38f8caf9a333de1910e0eb4707f7ac3db61b93dc651027113",
					"line": 37,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "influxdb-perv-claim",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{influxdb-perv-claim}}",
					"search_line": 37,
					"search_value": "",
					"expected_value": "metadata.name={{influxdb-perv-claim}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{influxdb-perv-claim}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/influxdb_template.yaml",
					"similarity_id": "6af0c52ac6faa91146c581d8c0f09b37e7852440eec091d2475c1f661b68b292",
					"line": 72,
					"resource_type": "Deployment",
					"resource_name": "influxdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{influxdb}}",
					"search_line": 72,
					"search_value": "",
					"expected_value": "metadata.name={{influxdb}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{influxdb}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/influxdb_template.yaml",
					"similarity_id": "3364d2ed68cb6661ce395fa82c3e94bb0c3ee6a533ce9f83b4354305dafb582a",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "influxdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{influxdb}}.spec.template.spec.containers.name=influxdb",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=influxdb has a security context",
					"actual_value": "spec.template.spec.containers.name=influxdb does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/influxdb_template.yaml",
					"similarity_id": "e3864bbf54ab5ed616d2f0fa6a7a34085c731d84b4a651433a57f4fc189dd48e",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "influxdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{influxdb}}.spec.template.spec.containers.name={{influxdb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{influxdb}}.spec.template.spec.containers.name={{influxdb}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{influxdb}}.spec.template.spec.containers.name={{influxdb}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/influxdb_template.yaml",
					"similarity_id": "2f7dc498f7e4c9eeb4735c6b48c21c22a5f35b162c27ae039bbac52e2504b438",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "influxdb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{influxdb}}.spec.template.spec.containers.name={{influxdb}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{influxdb}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{influxdb}}.envFrom.secretRef' is defined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/influxdb_template.yaml",
					"similarity_id": "4d5da1af5731779208b6b9d53ea206e86d7574254d6dc398159160d33399839a",
					"line": 58,
					"resource_type": "Service",
					"resource_name": "influxdb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{influxdb}}.spec.ports.port={{8086}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{influxdb}}.spec.ports.port={{8086}} has a Pod port",
					"actual_value": "metadata.name={{influxdb}}.spec.ports.port={{8086}} does not have a Pod port"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/influxdb_template.yaml",
					"similarity_id": "e7655aa6e5b77d6eecb57c4711835ad720cffc109594caad8f7fcc468b806b51",
					"line": 56,
					"resource_type": "Service",
					"resource_name": "influxdb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{influxdb}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
