{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 132,
	"files_parsed": 1,
	"lines_parsed": 127,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 18,
		"MEDIUM": 21,
		"TRACE": 0
	},
	"total_counter": 41,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:21:29.492528+02:00",
	"end": "2024-05-17T23:21:31.402959+02:00",
	"paths": [
		"templates/element-im_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "0d45608f9128088eb8af40391aef4e5994a483b1076a4819bd2202a72e63834a",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-element-im",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im}}.spec.template.spec.containers.name={{element-im}}",
					"search_line": 79,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im}}.spec.template.spec.containers.name={{element-im}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-element-im}}.spec.template.spec.containers.name={{element-im}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "723feec9f1315f120b8778802cef7624f21de551c1fdc0539a957f93e66c46d3",
					"line": 127,
					"resource_type": "Pod",
					"resource_name": "release-name-element-im-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "52d31fa0a2a4f85758718cb4d19e13fe3e015e3a505eace9e0e630d2134130a5",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-element-im",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im}}.spec.template.spec.containers.name={{element-im}}",
					"search_line": 79,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im}}.spec.template.spec.containers.name={{element-im}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-element-im}}.spec.template.spec.containers.name={{element-im}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "0cb77f6244ecd17c6c855e895633b0481d17db48d5f0e835a283923a02c717d6",
					"line": 127,
					"resource_type": "Pod",
					"resource_name": "release-name-element-im-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "f641fc93a45568e58b6b12b24da03c1f744c51b72a0644313930da9dd9b74e84",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-element-im",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im}}.spec.template.spec.containers.name={{element-im}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im}}.spec.template.spec.containers.name={{element-im}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-element-im}}.spec.template.spec.containers.name={{element-im}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "03c78853737f0601a536ed1b4b75168bf964bb49a5db472240d51e606ea6e490",
					"line": 127,
					"resource_type": "Pod",
					"resource_name": "release-name-element-im-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "f8de62acc375945efc10eb27dc6a4e929da677e38c46dafcc50587db67fac7f6",
					"line": 127,
					"resource_type": "Pod",
					"resource_name": "release-name-element-im-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "8df7dd23ff931edfb5b46096b55f7118ffd2700340f357a5d79a555904fa4fc6",
					"line": 78,
					"resource_type": "Deployment",
					"resource_name": "release-name-element-im",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im}}.spec.template.spec.containers.name={{element-im}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im}}.spec.template.spec.containers.name={{element-im}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-element-im}}.spec.template.spec.containers.name={{element-im}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "7dbe12cc49eeadb9c6e56229cc543384eb157058ac0961a37681767b2885a647",
					"line": 127,
					"resource_type": "Pod",
					"resource_name": "release-name-element-im-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "fed7972a31889dd1b7a3b40b5c53b563f42119415caab1866d641bd8f67c2d1c",
					"line": 78,
					"resource_type": "Deployment",
					"resource_name": "release-name-element-im",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im}}.spec.template.spec.containers.name={{element-im}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im}}.spec.template.spec.containers.name={{element-im}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-element-im}}.spec.template.spec.containers.name={{element-im}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "03cdddaee1704a830845c6880eb5fc1716952896470889466f2c76c7aefbf3d0",
					"line": 127,
					"resource_type": "Pod",
					"resource_name": "release-name-element-im-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "c3361fe3e29d37c563da42b99a3b4676e58ce4970e78ed5bdaa3b6f08a8a22a2",
					"line": 78,
					"resource_type": "Deployment",
					"resource_name": "release-name-element-im",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im}}.spec.template.spec.containers.name={{element-im}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im}}.spec.template.spec.containers.name={{element-im}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-element-im}}.spec.template.spec.containers.name={{element-im}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "f6338de7e234a8a1d510fbdfb9880bfc18bfd0c35496cc3fe86a7bf21baa60ca",
					"line": 127,
					"resource_type": "Pod",
					"resource_name": "release-name-element-im-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "fcea442655dcb3085a3022df0ec4d4461b32d295449fea91408422132719ec97",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-element-im",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im}}.spec.template.spec.containers.name={{element-im}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im}}.spec.template.spec.containers.name={{element-im}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-element-im}}.spec.template.spec.containers.name={{element-im}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "ef9e4aa5ef28aa19e425b2ed2512dbe26286dae013f8ce729852d6be2a75351f",
					"line": 127,
					"resource_type": "Pod",
					"resource_name": "release-name-element-im-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "5132b4585d48f74882437b13ed9909e0b780a4cfd2633535b7d08abab4b6f22e",
					"line": 125,
					"resource_type": "Pod",
					"resource_name": "release-name-element-im-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-element-im-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-element-im-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "fa8d52fbf81ba09c9eeffb43e7bac6ddb52596e3a2d00badcd4543bbf01f428c",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "release-name-element-im",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-element-im}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "f85c921de40be3c1e818da7e4df9759ebc71b7f08b5a87b3558a8211def0071d",
					"line": 125,
					"resource_type": "Pod",
					"resource_name": "release-name-element-im-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-element-im-test-connection}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "e947cf965e7c677aa6222deedf7b7b85e2cc0e869f3a24a6e7111e0e1b317168",
					"line": 116,
					"resource_type": "Pod",
					"resource_name": "release-name-element-im-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-element-im-test-connection}}",
					"search_line": 116,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "11b84907faba6951dd6886301edf575b96f0d5a021ff820f3fc894ba89233d12",
					"line": 33,
					"resource_type": "Service",
					"resource_name": "release-name-element-im",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-element-im}}",
					"search_line": 33,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-element-im",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-element-im}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Secret",
					"resource_name": "release-name-element-im",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-element-im}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "e2b9cc8a256befb5fabd67e8395db38264f81e70bcad4392d4a8c552d5717ac8",
					"line": 55,
					"resource_type": "Deployment",
					"resource_name": "release-name-element-im",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-element-im}}",
					"search_line": 55,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "44c19d474a1d6374f074137766657815b66eb2698e95797b9d01ea71a9eebcbf",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-element-im",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im}}.spec.template.spec.containers.name={{element-im}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=element-im has limits defined",
					"actual_value": "spec.template.spec.containers.name=element-im doesn't have limits defined"
				},
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "4db1453cb4ed64e78b8b85616104df6b0e70303876aff96c958bf356712e3094",
					"line": 127,
					"resource_type": "Pod",
					"resource_name": "release-name-element-im-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "52cd61bf54213083f64d7633d101506f0a27d697c3837ddd35924ab9c0acca97",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-element-im",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im}}.spec.template.spec.containers.name={{element-im}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=element-im.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=element-im.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "0deb54d6f56deacec3a65177285fa920858afc2f09dec3b4278d3223fcad2498",
					"line": 127,
					"resource_type": "Pod",
					"resource_name": "release-name-element-im-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "656eae9dbbe7323cae81cbe380cb1ddf124435d4ca711915a87cfdbeada26c8c",
					"line": 82,
					"resource_type": "Deployment",
					"resource_name": "release-name-element-im",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-element-im}}.spec.template.spec.containers.name={{element-im}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im}}.spec.template.spec.containers.name={{element-im}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-element-im}}.spec.template.spec.containers.name={{element-im}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "25facccdc26033c2db731c39d18c3e9b1da870afc0fa6f0d60c090ffa810f557",
					"line": 128,
					"resource_type": "Pod",
					"resource_name": "release-name-element-im-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "20bf4163f62a597d149d86d46526c8459a1f2483a4bcc44eaa5969250fb34f71",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "release-name-element-im",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{element-im}}",
					"actual_value": "metadata.name={{release-name-element-im}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{element-im}}"
				},
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "c4524ed83b2c2f687db3ad2710d380d40436eef9cbe3d4943f19f2443f19dc31",
					"line": 116,
					"resource_type": "Pod",
					"resource_name": "release-name-element-im-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-element-im-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "ba48ec084d56e651bda8289dfba4974c94b7d0ce2bfe968e32e987cba46d6825",
					"line": 127,
					"resource_type": "Pod",
					"resource_name": "release-name-element-im-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				},
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "3aa21d9da555d0f8745c702955ace3cbcb627dd04d7df864b0da5f8bfd4a8159",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-element-im",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im}}.spec.containers.name={{element-im}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im}}.spec.containers.name={{element-im}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-element-im}}.spec.containers.name={{element-im}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "68c922a50e4367d4afb0ef7f42caa1096655eb09dc1ee59caf7c8f2bbbe7d75e",
					"line": 116,
					"resource_type": "Pod",
					"resource_name": "release-name-element-im-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-element-im-test-connection}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "597bfdef7fc2a8ebb62dcafd7f966da89a5be87d93dfe7387949348a1ec0db3c",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-element-im",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-element-im}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "4b63d20b772024e29ae19c4a8cb7982c0a32a4e1eb6620e4071973ee0dd58f23",
					"line": 116,
					"resource_type": "Pod",
					"resource_name": "release-name-element-im-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-element-im-test-connection}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "0e67da8aab2a8cfb645f42fd85c1950214bff44f730975d35abaf9066993f198",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-element-im",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-element-im}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "b8c162ee1ee372f493324863182a5dbe3f8d860223a4f60944df8b2660c9eda4",
					"line": 127,
					"resource_type": "Pod",
					"resource_name": "release-name-element-im-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				},
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "00a33db9626bc661520d3c68905a274b30f254ade31377a0594c5369ebca6bee",
					"line": 125,
					"resource_type": "Pod",
					"resource_name": "release-name-element-im-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-element-im-test-connection}}.spec does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "c5a179c731928ea5f6ab2cadb5d86de166435160f1c5614ae837b6b78a789389",
					"line": 127,
					"resource_type": "Pod",
					"resource_name": "release-name-element-im-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-element-im-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/element-im_template.yaml",
					"similarity_id": "9c6c11b2ba019fe8ad5f6d994acf61141f046fa19d135b6cc16b4df9c57a2515",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-element-im",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-element-im}}.spec.template.spec.containers.name={{element-im}}",
					"search_line": 79,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-element-im}}.spec.template.spec.containers.name={{element-im}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-element-im}}.spec.template.spec.containers.name={{element-im}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
