{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 265,
	"files_parsed": 1,
	"lines_parsed": 262,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 6,
		"MEDIUM": 5,
		"TRACE": 0
	},
	"total_counter": 14,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:40:32.713724+02:00",
	"end": "2024-06-26T00:40:34.778943+02:00",
	"paths": [
		"templates/qinglong_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/qinglong_template.yaml",
					"similarity_id": "3a7635e0d70a4c908ec2a33638dd5c70f9a9c8e4b52e349d9db5b34266abd8ce",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "release-name-qinglong",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-qinglong}}.spec.template.spec.containers.name={{release-name-qinglong}}.volumeMounts.name={{devshm}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-qinglong}}.spec.template.spec.containers.name={{release-name-qinglong}}.volumeMounts.name={{devshm}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-qinglong}}.spec.template.spec.containers.name={{release-name-qinglong}}.volumeMounts.name={{devshm}}.readOnly is false"
				},
				{
					"file_name": "templates/qinglong_template.yaml",
					"similarity_id": "4c479ad6be3ba8d0373b67a75a29b3687390ced7d62446395c0b423e0ca8006f",
					"line": 166,
					"resource_type": "Deployment",
					"resource_name": "release-name-qinglong",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-qinglong}}.spec.template.spec.containers.name={{release-name-qinglong}}.volumeMounts.name={{varrun}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-qinglong}}.spec.template.spec.containers.name={{release-name-qinglong}}.volumeMounts.name={{varrun}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-qinglong}}.spec.template.spec.containers.name={{release-name-qinglong}}.volumeMounts.name={{varrun}}.readOnly is false"
				},
				{
					"file_name": "templates/qinglong_template.yaml",
					"similarity_id": "25699a963c1714433057cc2a0d37dec605153dcaeae0811856ffb4e4ec89186c",
					"line": 163,
					"resource_type": "Deployment",
					"resource_name": "release-name-qinglong",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-qinglong}}.spec.template.spec.containers.name={{release-name-qinglong}}.volumeMounts.name={{varlogs}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-qinglong}}.spec.template.spec.containers.name={{release-name-qinglong}}.volumeMounts.name={{varlogs}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-qinglong}}.spec.template.spec.containers.name={{release-name-qinglong}}.volumeMounts.name={{varlogs}}.readOnly is false"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/qinglong_template.yaml",
					"similarity_id": "8ea3dc71d0b82637dda39f50b1ee71b68bb35560ac03a46d35a59eeb07396ff6",
					"line": 206,
					"resource_type": "Deployment",
					"resource_name": "release-name-qinglong",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-qinglong}}.spec.template.spec.containers.name={{release-name-qinglong}}.securityContext.runAsUser",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-qinglong}}.spec.template.spec.containers.name={{release-name-qinglong}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-qinglong}}.spec.template.spec.containers.name={{release-name-qinglong}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/qinglong_template.yaml",
					"similarity_id": "459c6fe1ab83841a15c2e64f600b5f69f24fcb9a753790d0ad92f6fac2c6c0f6",
					"line": 206,
					"resource_type": "Deployment",
					"resource_name": "release-name-qinglong",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-qinglong}}.spec.template.spec.containers.name={{release-name-qinglong}}.securityContext.runAsUser=0",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-qinglong}}.spec.template.spec.containers.name={{release-name-qinglong}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-qinglong}}.spec.template.spec.containers.name={{release-name-qinglong}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Containers With Added Capabilities",
			"query_id": "19ebaa28-fc86-4a58-bcfa-015c9e22fe40",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not have extra capabilities allowed",
			"description_id": "719acefd",
			"files": [
				{
					"file_name": "templates/qinglong_template.yaml",
					"similarity_id": "dcf100c707ba69fb8bfaeb7322f5389b6adec819408f93061ae7969f6935c3e6",
					"line": 214,
					"resource_type": "Deployment",
					"resource_name": "release-name-qinglong",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-qinglong}}.spec.template.spec.containers.name={{release-name-qinglong}}.securityContext.capabilities.add",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-qinglong}}.spec.template.spec.containers.name={{release-name-qinglong}} has no capability added other than NET_BIND_SERVICE",
					"actual_value": "metadata.name={{release-name-qinglong}}.spec.template.spec.containers.name={{release-name-qinglong}} has a capability added other than NET_BIND_SERVICE"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/qinglong_template.yaml",
					"similarity_id": "b9eb42e5d6318ebbbf08e0762182193a387e26abb01d462e9f74cb7ef1740fd8",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-qinglong",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-qinglong}}.namespace",
					"search_line": 58,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/qinglong_template.yaml",
					"similarity_id": "f2b8fff96925bd9420b0464a3eedc0b1121e88f78346ca31f2a40edee74dff15",
					"line": 29,
					"resource_type": "Service",
					"resource_name": "release-name-qinglong",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-qinglong}}.namespace",
					"search_line": 29,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/qinglong_template.yaml",
					"similarity_id": "db87c6ce8385dbafa70897bbf1936ded4da64859898730a9f71d2d4263c81c99",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "release-name-qinglong",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-qinglong}}.spec.template.metadata",
					"search_line": 91,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-qinglong}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-qinglong}}",
					"actual_value": "metadata.name={{release-name-qinglong}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-qinglong}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/qinglong_template.yaml",
					"similarity_id": "d4fe9bcda79c5ab184b647fa45201ef01c3793b72c3c38c220c6e5523e0a9dcc",
					"line": 7,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-qinglong-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-qinglong-data}}",
					"search_line": 7,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-qinglong-data}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-qinglong-data}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/qinglong_template.yaml",
					"similarity_id": "164c63a4017391c10ff1a1834481a8ecc4cd3b86b88e39efaa09c2cfd3773033",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-qinglong",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-qinglong}}",
					"search_line": 58,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-qinglong}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-qinglong}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/qinglong_template.yaml",
					"similarity_id": "d7a396da5d014f0cfd69c62bbdac22590e2d55535fa7f99959fb5668f95f0e07",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-qinglong",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-qinglong}}",
					"search_line": 58,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-qinglong}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-qinglong}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/qinglong_template.yaml",
					"similarity_id": "696e4d4f6e8ebaf8017bb0710fc1dedb1fcd43aabf2280d90ec3a0452c8ac974",
					"line": 7,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-qinglong-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-qinglong-data}}",
					"search_line": 7,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-qinglong-data}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-qinglong-data}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/qinglong_template.yaml",
					"similarity_id": "6c46f16d6fe2acfa5cd25f3bae596c5182823f319bcd69b601336a5913eed594",
					"line": 208,
					"resource_type": "Deployment",
					"resource_name": "release-name-qinglong",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-qinglong}}.spec.template.spec.containers.name={{release-name-qinglong}}.securityContext.readOnlyRootFilesystem",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-qinglong}}.spec.template.spec.containers.name={{release-name-qinglong}}.securityContext.readOnlyRootFilesystem is true",
					"actual_value": "metadata.name={{release-name-qinglong}}.spec.template.spec.containers.name={{release-name-qinglong}}.securityContext.readOnlyRootFilesystem is false"
				}
			]
		}
	]
}
