{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 466,
	"files_parsed": 1,
	"lines_parsed": 370,
	"lines_ignored": 96,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 18,
	"total_bom_resources": 0,
	"start": "2024-05-18T00:08:30.883652+02:00",
	"end": "2024-05-18T00:08:32.803639+02:00",
	"paths": [
		"templates/vald-benchmark-operator_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/vald-benchmark-operator_template.yaml",
					"similarity_id": "67b7e425fa87910087e224753ab3eebb22900b2a9d03f7c9162cf050f980cfa2",
					"line": 397,
					"resource_type": "Deployment",
					"resource_name": "vald-benchmark-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vald-benchmark-operator}}.spec.template.spec.containers.name={{vald-benchmark-operator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vald-benchmark-operator}}.spec.template.spec.containers.name={{vald-benchmark-operator}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{vald-benchmark-operator}}.spec.template.spec.containers.name={{vald-benchmark-operator}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/vald-benchmark-operator_template.yaml",
					"similarity_id": "5541fcc6d1e9001dcbb04a7a6177bb73ff64ae3f7801c1291da4a3a8354c1822",
					"line": 451,
					"resource_type": "Deployment",
					"resource_name": "vald-benchmark-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vald-benchmark-operator}}.spec.template.spec.containers.name={{vald-benchmark-operator}}.volumeMounts.name={{vald-benchmark-operator-config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vald-benchmark-operator}}.spec.template.spec.containers.name={{vald-benchmark-operator}}.volumeMounts.name={{vald-benchmark-operator-config}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{vald-benchmark-operator}}.spec.template.spec.containers.name={{vald-benchmark-operator}}.volumeMounts.name={{vald-benchmark-operator-config}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/vald-benchmark-operator_template.yaml",
					"similarity_id": "b33e34fd3bb17b1dda6a955e795400f934272e33d530bd2735420faff38fcc85",
					"line": 397,
					"resource_type": "Deployment",
					"resource_name": "vald-benchmark-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vald-benchmark-operator}}.spec.template.spec.containers.name={{vald-benchmark-operator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vald-benchmark-operator}}.spec.template.spec.containers.name={{vald-benchmark-operator}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{vald-benchmark-operator}}.spec.template.spec.containers.name={{vald-benchmark-operator}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/vald-benchmark-operator_template.yaml",
					"similarity_id": "76cd991ad3152a919569558e0b4d42508d95c0ad43d2132f71f0724838cf3670",
					"line": 397,
					"resource_type": "Deployment",
					"resource_name": "vald-benchmark-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vald-benchmark-operator}}.spec.template.spec.containers.name={{vald-benchmark-operator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vald-benchmark-operator}}.spec.template.spec.containers.name={{vald-benchmark-operator}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{vald-benchmark-operator}}.spec.template.spec.containers.name={{vald-benchmark-operator}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/vald-benchmark-operator_template.yaml",
					"similarity_id": "c537b83d9dd2e70ece17d995f97daab0f4a43938addfd40337e6a105477aa1d2",
					"line": 397,
					"resource_type": "Deployment",
					"resource_name": "vald-benchmark-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vald-benchmark-operator}}.spec.template.spec.containers.name={{vald-benchmark-operator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vald-benchmark-operator}}.spec.template.spec.containers.name={{vald-benchmark-operator}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{vald-benchmark-operator}}.spec.template.spec.containers.name={{vald-benchmark-operator}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/vald-benchmark-operator_template.yaml",
					"similarity_id": "c48b3713a1dd572a939266e187beb47a972d059118c986e68d1cd1d4704862ab",
					"line": 397,
					"resource_type": "Deployment",
					"resource_name": "vald-benchmark-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vald-benchmark-operator}}.spec.template.spec.containers.name={{vald-benchmark-operator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vald-benchmark-operator}}.spec.template.spec.containers.name={{vald-benchmark-operator}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{vald-benchmark-operator}}.spec.template.spec.containers.name={{vald-benchmark-operator}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/vald-benchmark-operator_template.yaml",
					"similarity_id": "cd0bf1a6cfc1c8d8c99900c53158776141ef277a1c2a91d3ce7f194c6a2d5bd7",
					"line": 394,
					"resource_type": "Deployment",
					"resource_name": "vald-benchmark-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vald-benchmark-operator}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vald-benchmark-operator}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{vald-benchmark-operator}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/vald-benchmark-operator_template.yaml",
					"similarity_id": "3d697c1d79e2825dd0edb3bf40b2c5a6c4058020bdb5239adb13741637798040",
					"line": 373,
					"resource_type": "Deployment",
					"resource_name": "vald-benchmark-operator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{vald-benchmark-operator}}.namespace",
					"search_line": 373,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/vald-benchmark-operator_template.yaml",
					"similarity_id": "6da7878077dc4c1a53976921c39692ae6269c99a07fabc1063f065ed87e09ef9",
					"line": 43,
					"resource_type": "ConfigMap",
					"resource_name": "vald-benchmark-operator-config",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{vald-benchmark-operator-config}}",
					"search_line": 43,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/vald-benchmark-operator_template.yaml",
					"similarity_id": "c4f5532e87f8140c669bcfb76eecdcc6a891c163116374e6e7c9a28559b8393e",
					"line": 22,
					"resource_type": "ServiceAccount",
					"resource_name": "vald-benchmark-operator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{vald-benchmark-operator}}.namespace",
					"search_line": 22,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/vald-benchmark-operator_template.yaml",
					"similarity_id": "e16373df47df8f71e06692c575fecb6d7b354739fc4cd4efecb3c8696b550f44",
					"line": 333,
					"resource_type": "Service",
					"resource_name": "vald-benchmark-operator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{vald-benchmark-operator}}",
					"search_line": 333,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/vald-benchmark-operator_template.yaml",
					"similarity_id": "862758a947b9a1de0b7ade0974f86068f499f7128b665cfa526564e0c5b07360",
					"line": 388,
					"resource_type": "Deployment",
					"resource_name": "vald-benchmark-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vald-benchmark-operator}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vald-benchmark-operator}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{vald-benchmark-operator}}",
					"actual_value": "metadata.name={{vald-benchmark-operator}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{vald-benchmark-operator}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/vald-benchmark-operator_template.yaml",
					"similarity_id": "0d7fb0b6bffee9319f06b65f5d1487d862d8c9e859aad181fc2cefa7d603d7e6",
					"line": 397,
					"resource_type": "Deployment",
					"resource_name": "vald-benchmark-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vald-benchmark-operator}}.spec.containers.name=vald-benchmark-operator",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vald-benchmark-operator}}.spec.containers.name=vald-benchmark-operator.securityContext should be set",
					"actual_value": "metadata.name={{vald-benchmark-operator}}.spec.containers.name=vald-benchmark-operator.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/vald-benchmark-operator_template.yaml",
					"similarity_id": "a1bb73e70dfb9d1cc01df51e509d53b69073347f5947514fa24ad494be2e913a",
					"line": 373,
					"resource_type": "Deployment",
					"resource_name": "vald-benchmark-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vald-benchmark-operator}}",
					"search_line": 373,
					"search_value": "",
					"expected_value": "metadata.name={{vald-benchmark-operator}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{vald-benchmark-operator}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/vald-benchmark-operator_template.yaml",
					"similarity_id": "d44f096be7b931c213bf9a700e2361b7b59ecefb6e4124a30f7b03f18bf2cd18",
					"line": 373,
					"resource_type": "Deployment",
					"resource_name": "vald-benchmark-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vald-benchmark-operator}}",
					"search_line": 373,
					"search_value": "",
					"expected_value": "metadata.name={{vald-benchmark-operator}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{vald-benchmark-operator}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/vald-benchmark-operator_template.yaml",
					"similarity_id": "5ff88cbd5ba22cda3f43c446861fe6032b8be285fed28e7638892556e07b1fe3",
					"line": 397,
					"resource_type": "Deployment",
					"resource_name": "vald-benchmark-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vald-benchmark-operator}}.spec.template.spec.containers.name=vald-benchmark-operator",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=vald-benchmark-operator has a security context",
					"actual_value": "spec.template.spec.containers.name=vald-benchmark-operator does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/vald-benchmark-operator_template.yaml",
					"similarity_id": "527e1716ed6ff449f1a188c05aa84e19e02ad9432002484c3d0a95f441123e0b",
					"line": 397,
					"resource_type": "Deployment",
					"resource_name": "vald-benchmark-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vald-benchmark-operator}}.spec.template.spec.containers.name={{vald-benchmark-operator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vald-benchmark-operator}}.spec.template.spec.containers.name={{vald-benchmark-operator}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{vald-benchmark-operator}}.spec.template.spec.containers.name={{vald-benchmark-operator}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/vald-benchmark-operator_template.yaml",
					"similarity_id": "542a76fc957dfad346f0796f27fafca361847ded005cd406b2704a5bff42d827",
					"line": 347,
					"resource_type": "Service",
					"resource_name": "vald-benchmark-operator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{vald-benchmark-operator}}.spec.selector",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vald-benchmark-operator}}.spec.selector label refers to a Pod label",
					"actual_value": "metadata.name={{vald-benchmark-operator}}.spec.selector label does not match with any Pod label"
				}
			]
		}
	]
}
