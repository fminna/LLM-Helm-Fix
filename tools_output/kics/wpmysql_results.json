{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 74,
	"files_parsed": 1,
	"lines_parsed": 71,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 23,
		"MEDIUM": 19,
		"TRACE": 0
	},
	"total_counter": 44,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:55:09.941442+02:00",
	"end": "2024-06-26T00:55:12.013854+02:00",
	"paths": [
		"templates/wpmysql_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "3e3fc5a1ac815fcfa4c0e952256c48cef79b692892f980e79053719eff241c5d",
					"line": 56,
					"resource_type": "Deployment",
					"resource_name": "mywp1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "9ac623289f88418afddc9993b37ea429c8493e91afce44f60d3e2515154e5773",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "mydb1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "615e81f28c0dfee30ff4e7db72c8cbf0ef8a1e9058a74b4f0747d4c6b08dadec",
					"line": 56,
					"resource_type": "Deployment",
					"resource_name": "mywp1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "6eae1ee6e3e0e233213f1947e2ae2c7223943950147bc4d768ab061063dc3ee1",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "mydb1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "b3d6fa27b10442f9059a4336f9fce9fe1fdb6da30983a3e929214641cef0fa83",
					"line": 56,
					"resource_type": "Deployment",
					"resource_name": "mywp1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "cd2dc77a753c55f045defd111f21a51bc1390fa1f5adafd0d5a2dbbe1728f6ae",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "mydb1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "ac4cb6c0a79a96701fc4158fb71a63c33aed86b70432d22708f40f96a558ca26",
					"line": 56,
					"resource_type": "Deployment",
					"resource_name": "mywp1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "7f990fdbd75c6a5c2c46349ecd1a15aea0cc6dac09e1a5c834a8572716488c75",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "mydb1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "e6c25560de49cee0a8fbacad9a596d23d7d2192b8ad4af8047eb9f9528e7ec5a",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "mydb1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "46b2e2a4212ce29e0109392723d8d6291ca2e37c75b73118322e1fd05db06edb",
					"line": 56,
					"resource_type": "Deployment",
					"resource_name": "mywp1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "2f798b6dd84d8c7d66b8ce7c8716f21fe256c8314217a9a03ecc31ac8c04df8d",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "mydb1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "01663b1139d1b92892943437b3e1bf98cbcb3c2b6c15ef4114ce8db0b725fcda",
					"line": 56,
					"resource_type": "Deployment",
					"resource_name": "mywp1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "428056e9ff82e8bb80a0b9bc6d47e621e0ae5b184462171ee6cff84e7fe6ea33",
					"line": 56,
					"resource_type": "Deployment",
					"resource_name": "mywp1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "d52eaff1ac98edbfa0114bdf61731f085bf3627ab7672c636f6f436d44aea94c",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "mydb1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "6c874e92227d34be75470d8e494e2e7d83405f8276ee88432d11796e8c75843d",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "mydb1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "0f16c29b6259b9ceb33d0153a699b77143512254598abc974317e78ffca64460",
					"line": 56,
					"resource_type": "Deployment",
					"resource_name": "mywp1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "9f14d23e5824b0834df8e24d2f5ed6112ed4eeb005c75d0ef8f630dcc6af6a86",
					"line": 38,
					"resource_type": "Deployment",
					"resource_name": "mywp1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mywp1}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mywp1}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{mywp1}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "40a54afdf8abe6364279b4bb7161f4264455788749a23bae1a00ec633566e4b8",
					"line": 38,
					"resource_type": "Deployment",
					"resource_name": "mydb1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydb1}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydb1}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{mydb1}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "69e13d7c5e1a9d07a57a9f92f7c5af4bd53adf776e2512e3522cd59d61e20d0f",
					"line": 10,
					"resource_type": "Service",
					"resource_name": "mywp1",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{mywp1}}",
					"search_line": 10,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "b981e200d0349480c47e09ace6009816f97ba69776f9eff7aa1919fc47724f2c",
					"line": 56,
					"resource_type": "Deployment",
					"resource_name": "mywp1",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{mywp1}}",
					"search_line": 56,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "8f2e7e68edee857966f6443a72feb813aa2d78eccecf0579b725661aea5c8b61",
					"line": 26,
					"resource_type": "Deployment",
					"resource_name": "mydb1",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{mydb1}}",
					"search_line": 26,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "15cb66bb8e58b045538ede03fbb7569194622e9d839af46bbae52621c6af1638",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "mydb1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydb1}}.spec.template.spec.containers.name=mydb1",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mydb1 has resources defined",
					"actual_value": "spec.template.spec.containers.name=mydb1 doesn't have resources defined"
				},
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "48be34fb498a22dacd8ea3efb04332f77bc4369798d3d426330e58950a972274",
					"line": 56,
					"resource_type": "Deployment",
					"resource_name": "mywp1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mywp1}}.spec.template.spec.containers.name=mywp1",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mywp1 has resources defined",
					"actual_value": "spec.template.spec.containers.name=mywp1 doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "c5c53ccef91083437beeb46e03efd484064761bdbfa7974dd4e669991864b20f",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "mydb1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydb1}}.spec.template.spec.containers.name=mydb1",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mydb1 should have resources defined",
					"actual_value": "spec.template.spec.containers.name=mydb1 doesn't have resources defined"
				},
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "e56d4d5d886e3badbc3df0cf23f0877a8dfbb8a03d604ac522f21ef959c0ef96",
					"line": 56,
					"resource_type": "Deployment",
					"resource_name": "mywp1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mywp1}}.spec.template.spec.containers.name=mywp1",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mywp1 should have resources defined",
					"actual_value": "spec.template.spec.containers.name=mywp1 doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Deployment Has No PodAntiAffinity",
			"query_id": "a31b7b82-d994-48c4-bd21-3bab6c31827a",
			"query_url": "https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Check if Deployment resources don't have a podAntiAffinity policy, which prevents multiple pods from being scheduled on the same node.",
			"description_id": "22146f41",
			"files": [
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "bd013f7750f97d3fb7e6cc3ab63de9900f2ce3a54f8b5774ea79685dec04205e",
					"line": 38,
					"resource_type": "Deployment",
					"resource_name": "mydb1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydb1}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.affinity' should be set",
					"actual_value": "'spec.template.spec.affinity' is undefined"
				},
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "877edba7e0311512117e8d1e8e496c5000be4c3debcd40f7145e334d088d16c3",
					"line": 38,
					"resource_type": "Deployment",
					"resource_name": "mywp1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mywp1}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.affinity' should be set",
					"actual_value": "'spec.template.spec.affinity' is undefined"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "e1d8acd7fdd786d7b896c156aaf0237e46fc1c5c0636593accc6a385e3a7570d",
					"line": 32,
					"resource_type": "Deployment",
					"resource_name": "mywp1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mywp1}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=mywp1 is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=mywp1 is not targeted by a PodDisruptionBudget"
				},
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "b3460e4471a37a4984c41b7eaad578c1bb2493a5e4d64dfe9ed88bb41165ffd7",
					"line": 32,
					"resource_type": "Deployment",
					"resource_name": "mydb1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydb1}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=mydb1 is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=mydb1 is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "a552add112681049b803d797ff6d10eeae699d08d0cf69556e674119a4f6b23b",
					"line": 56,
					"resource_type": "Deployment",
					"resource_name": "mywp1",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "8b52b103b8345e6523434747190974f227efd4616ca393d42eec204843131e5d",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "mydb1",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "8c550994a4944bf4d1a3e1f58d14c62a4767aedf30db64df36f894af67211c5e",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "mydb1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydb1}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydb1}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{mydb1}}",
					"actual_value": "metadata.name={{mydb1}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{mydb1}}"
				},
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "bf6dc32f4c49b0883271d9b8969052de1306b49ed7d96dc8013a12709ed75224",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "mywp1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mywp1}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mywp1}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{mywp1}}",
					"actual_value": "metadata.name={{mywp1}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{mywp1}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "a6ddc538f075ad2c4319e3ae98bb7fa296a7b69463268579b53b87bc2134c5c9",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "mydb1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydb1}}.spec.containers.name=mydb1",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydb1}}.spec.containers.name=mydb1.securityContext should be set",
					"actual_value": "metadata.name={{mydb1}}.spec.containers.name=mydb1.securityContext is undefined"
				},
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "e1b874435730e89221535c7308b5162dff813341d531b6e3f1a9a300021da2e9",
					"line": 56,
					"resource_type": "Deployment",
					"resource_name": "mywp1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mywp1}}.spec.containers.name=mywp1",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mywp1}}.spec.containers.name=mywp1.securityContext should be set",
					"actual_value": "metadata.name={{mywp1}}.spec.containers.name=mywp1.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "4e34241dc7e41381731f92461cd8ad97b83e8625ed3301cade96e78e22c10053",
					"line": 26,
					"resource_type": "Deployment",
					"resource_name": "mydb1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydb1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydb1}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{mydb1}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "7b2457f69cca7762e24778ed3e22234b08ece6a2447795629e330e376cf43e77",
					"line": 10,
					"resource_type": "Deployment",
					"resource_name": "mywp1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mywp1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mywp1}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{mywp1}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "b0f1b5d5ddb352f8a9169d0efd7eb11f335b95cf1b48e2f99a965d1c983d5491",
					"line": 26,
					"resource_type": "Deployment",
					"resource_name": "mydb1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydb1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydb1}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{mydb1}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "f8eb0afb71042f404aa90964e997c573e4470d3e6d47aeb58cd54ee2a828b4a7",
					"line": 10,
					"resource_type": "Deployment",
					"resource_name": "mywp1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mywp1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mywp1}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{mywp1}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "65a8d48d30163ffef77565683b8ed17380d9e22e676b3b43f47bf05b51f3f34d",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "mydb1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydb1}}.spec.template.spec.containers.name=mydb1",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mydb1 has a security context",
					"actual_value": "spec.template.spec.containers.name=mydb1 does not have a security context"
				},
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "f9358813b66d87683d6f262f4632b2d442296a41b598354d82dbce5c98f460c5",
					"line": 56,
					"resource_type": "Deployment",
					"resource_name": "mywp1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mywp1}}.spec.template.spec.containers.name=mywp1",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mywp1 has a security context",
					"actual_value": "spec.template.spec.containers.name=mywp1 does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "1603f53eb099daef535cb48bd55141f1355c718b3a128df07d5efbe4558a4e8b",
					"line": 56,
					"resource_type": "Deployment",
					"resource_name": "mywp1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{mywp1}}.spec.template.spec.containers.name={{mywp1}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "9c9e3fd72c96222d1bfea4c0bd01218e1592d3a9e3cea5cab02909f10c351467",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "mydb1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{mydb1}}.spec.template.spec.containers.name={{mydb1}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/wpmysql_template.yaml",
					"similarity_id": "f78c32d5c862862c80ce68a4a5741e825d8f018c3dd21d918eb299c4ade1b594",
					"line": 18,
					"resource_type": "Service",
					"resource_name": "mywp1",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{mywp1}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
