{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 43,
	"files_parsed": 1,
	"lines_parsed": 41,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 7,
		"TRACE": 0
	},
	"total_counter": 18,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:23:30.195578+02:00",
	"end": "2024-06-26T03:23:32.32574+02:00",
	"paths": [
		"templates/migration-incluster-cd_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/migration-incluster-cd_template.yaml",
					"similarity_id": "9734f7fde2b93f1c2da16f2c1d40d5943d1832bdbb51c5f25ec6e11f380c4acc",
					"line": 23,
					"resource_type": "Job",
					"resource_name": "in-clustercd-migration-job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name={{inclustercd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name={{inclustercd}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name={{inclustercd}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/migration-incluster-cd_template.yaml",
					"similarity_id": "90a2e58a96e27372d8072e1253829feb8f70c9439a98e1d96a6af33d180e7408",
					"line": 23,
					"resource_type": "Job",
					"resource_name": "in-clustercd-migration-job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name={{inclustercd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name={{inclustercd}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name={{inclustercd}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/migration-incluster-cd_template.yaml",
					"similarity_id": "f0410da24dabdc48a447ea08803b07dd05342a106c430fa054964155475586cd",
					"line": 23,
					"resource_type": "Job",
					"resource_name": "in-clustercd-migration-job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name={{inclustercd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name={{inclustercd}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name={{inclustercd}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/migration-incluster-cd_template.yaml",
					"similarity_id": "8c61aa977be8d379f039eabe228dcf99c6bb379ec34321f7cbcfe0fe30222862",
					"line": 23,
					"resource_type": "Job",
					"resource_name": "in-clustercd-migration-job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name={{inclustercd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name={{inclustercd}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name={{inclustercd}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/migration-incluster-cd_template.yaml",
					"similarity_id": "b7539f8b7cea212e8df642b4e7f2415c1536d9e97746584a46363f7b8a5972ac",
					"line": 23,
					"resource_type": "Job",
					"resource_name": "in-clustercd-migration-job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name={{inclustercd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name={{inclustercd}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name={{inclustercd}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/migration-incluster-cd_template.yaml",
					"similarity_id": "8d394c42f665eb9a6b0286649b8c674030c47e9e7d5409919e88af8cf698340d",
					"line": 23,
					"resource_type": "Job",
					"resource_name": "in-clustercd-migration-job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name={{inclustercd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name={{inclustercd}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name={{inclustercd}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/migration-incluster-cd_template.yaml",
					"similarity_id": "bd94e89013b7d55159c10ef71f60636724ab6b6d76d22660b14a5489b2af3e71",
					"line": 23,
					"resource_type": "Job",
					"resource_name": "in-clustercd-migration-job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name={{inclustercd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name={{inclustercd}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name={{inclustercd}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/migration-incluster-cd_template.yaml",
					"similarity_id": "5026d8854b384701aac1be2fa6593c395a4173cd420b00d08df3e36e3b73d985",
					"line": 21,
					"resource_type": "Job",
					"resource_name": "in-clustercd-migration-job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/migration-incluster-cd_template.yaml",
					"similarity_id": "2f345ec9ee92e9e430166fc8fff743ff68ebb09446a85dfbeb1053d1994f0235",
					"line": 23,
					"resource_type": "Job",
					"resource_name": "in-clustercd-migration-job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name=inclustercd",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=inclustercd has resources defined",
					"actual_value": "spec.template.spec.containers.name=inclustercd doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/migration-incluster-cd_template.yaml",
					"similarity_id": "aa2907a74626fddd429ca323e8df01d33499bc33ace6e0318da25dca8f213b51",
					"line": 23,
					"resource_type": "Job",
					"resource_name": "in-clustercd-migration-job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name=inclustercd",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=inclustercd should have resources defined",
					"actual_value": "spec.template.spec.containers.name=inclustercd doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/migration-incluster-cd_template.yaml",
					"similarity_id": "75568781c433fd57047c9ded57390a66e39c62c4c5dfa6019ae5cc9aa3073288",
					"line": 23,
					"resource_type": "Job",
					"resource_name": "in-clustercd-migration-job-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name={{inclustercd}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name={{inclustercd}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name={{inclustercd}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/migration-incluster-cd_template.yaml",
					"similarity_id": "6a6ad33351af11180e55cd4b91d5be4847836550cda920466853505ccf4cec48",
					"line": 17,
					"resource_type": "Job",
					"resource_name": "in-clustercd-migration-job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{in-clustercd-migration-job-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{in-clustercd-migration-job-release-name}}.annotations should specify an AppArmor profile for container {{inclustercd}}",
					"actual_value": "metadata.name={{in-clustercd-migration-job-release-name}}.annotations does not specify an AppArmor profile for container {{inclustercd}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/migration-incluster-cd_template.yaml",
					"similarity_id": "ac482321ea57d837b09f4052fd3f2ac4395afea86ef2a79db6e1a5c2deb7d8a3",
					"line": 23,
					"resource_type": "Job",
					"resource_name": "in-clustercd-migration-job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.containers.name=inclustercd",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.containers.name=inclustercd.securityContext should be set",
					"actual_value": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.containers.name=inclustercd.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/migration-incluster-cd_template.yaml",
					"similarity_id": "d10c152e249bd4db3df2e91aa482fa72af0531e7e437876725b18ef283ba0e77",
					"line": 18,
					"resource_type": "Job",
					"resource_name": "in-clustercd-migration-job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{in-clustercd-migration-job-release-name}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.name={{in-clustercd-migration-job-release-name}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{in-clustercd-migration-job-release-name}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/migration-incluster-cd_template.yaml",
					"similarity_id": "c735ee79ae0e5e2d7af1087a817cbc22a113ce447e680e16795230c84acf79cb",
					"line": 18,
					"resource_type": "Job",
					"resource_name": "in-clustercd-migration-job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{in-clustercd-migration-job-release-name}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.name={{in-clustercd-migration-job-release-name}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{in-clustercd-migration-job-release-name}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/migration-incluster-cd_template.yaml",
					"similarity_id": "beba348366851b808a55a2c19343b03868380d7c4e78b377d4a5e4ea03d1ce26",
					"line": 23,
					"resource_type": "Job",
					"resource_name": "in-clustercd-migration-job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name=inclustercd",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=inclustercd has a security context",
					"actual_value": "spec.template.spec.containers.name=inclustercd does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/migration-incluster-cd_template.yaml",
					"similarity_id": "e4c7a772f71dac8e3e655a4ef73af4ccd505311599f11010bcb97b0134d5f757",
					"line": 23,
					"resource_type": "Job",
					"resource_name": "in-clustercd-migration-job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name={{inclustercd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name={{inclustercd}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.name={{inclustercd}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/migration-incluster-cd_template.yaml",
					"similarity_id": "e34fbaf78f1c0040143f3113dc4da19579bf047cd53f6cb5fbae181f9c72ed63",
					"line": 28,
					"resource_type": "Job",
					"resource_name": "in-clustercd-migration-job-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{in-clustercd-migration-job-release-name}}.spec.template.spec.containers.env.name={{PGPASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{inclustercd}}.env.name={{PGPASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{inclustercd}}.env.name={{PGPASSWORD}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
