{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 171,
	"files_parsed": 1,
	"lines_parsed": 166,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:18:17.33256+02:00",
	"end": "2024-06-26T03:18:19.464188+02:00",
	"paths": [
		"templates/vcbackend_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/vcbackend_template.yaml",
					"similarity_id": "f82b0ea6d12d9960538dce2b5a170db0862cea6d4ccb0264c3dd6e500ffe17e9",
					"line": 147,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcbackend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcbackend}}.spec.template.spec.containers.name={{vcbackend}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vcbackend}}.spec.template.spec.containers.name={{vcbackend}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-vcbackend}}.spec.template.spec.containers.name={{vcbackend}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/vcbackend_template.yaml",
					"similarity_id": "1879070a75d2d033fab5f1ddb3b7e1bf1e0ce5494c06d07340614815566576b2",
					"line": 147,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcbackend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcbackend}}.spec.template.spec.containers.name={{vcbackend}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vcbackend}}.spec.template.spec.containers.name={{vcbackend}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-vcbackend}}.spec.template.spec.containers.name={{vcbackend}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/vcbackend_template.yaml",
					"similarity_id": "4b98ca312778f7edc4b75017a72e5e82c8d27b704d0ea5939b493d39f618d0c2",
					"line": 147,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcbackend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcbackend}}.spec.template.spec.containers.name={{vcbackend}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vcbackend}}.spec.template.spec.containers.name={{vcbackend}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-vcbackend}}.spec.template.spec.containers.name={{vcbackend}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/vcbackend_template.yaml",
					"similarity_id": "78a4b1157094b5f8eba71e23c1c9aec5b08316d559a4f4e6c88e3b0ac75a1c67",
					"line": 147,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcbackend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcbackend}}.spec.template.spec.containers.name={{vcbackend}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vcbackend}}.spec.template.spec.containers.name={{vcbackend}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-vcbackend}}.spec.template.spec.containers.name={{vcbackend}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/vcbackend_template.yaml",
					"similarity_id": "ec9c3ad8dec3b19b0c44461dff27108930cd737655e602ea81529de85e9d2606",
					"line": 147,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcbackend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcbackend}}.spec.template.spec.containers.name={{vcbackend}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vcbackend}}.spec.template.spec.containers.name={{vcbackend}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-vcbackend}}.spec.template.spec.containers.name={{vcbackend}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/vcbackend_template.yaml",
					"similarity_id": "93af8219bd19aec96f4564812d5caa67eea256bd2bfd41f7b359798c7b6c3265",
					"line": 147,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcbackend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcbackend}}.spec.template.spec.containers.name={{vcbackend}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vcbackend}}.spec.template.spec.containers.name={{vcbackend}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-vcbackend}}.spec.template.spec.containers.name={{vcbackend}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/vcbackend_template.yaml",
					"similarity_id": "05d826fba22a91e7e300d0485b7ed10b130d4466584ac69e419e2c492a0aaa6a",
					"line": 144,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcbackend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcbackend}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vcbackend}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-vcbackend}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/vcbackend_template.yaml",
					"similarity_id": "e62ceca1c4aa8886c59ed149cc6fe493f7b5a4fa8aaef4da33e6754d07062b56",
					"line": 92,
					"resource_type": "Service",
					"resource_name": "release-name-vcbackend",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-vcbackend}}",
					"search_line": 92,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/vcbackend_template.yaml",
					"similarity_id": "4e9aeb2c199e2ee054b61199ec2c628ab2303cd4dd67f0409aa7eabd6c234967",
					"line": 115,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcbackend",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-vcbackend}}",
					"search_line": 115,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/vcbackend_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-vcbackend",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-vcbackend}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/vcbackend_template.yaml",
					"similarity_id": "0e6bd82e3ffe31bb29fd99a9120b5a87ded7c77b1e357901b1690a4ea795d83b",
					"line": 156,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcbackend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcbackend}}.spec.template.spec.containers.name={{vcbackend}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=vcbackend has limits defined",
					"actual_value": "spec.template.spec.containers.name=vcbackend doesn't have limits defined"
				},
				{
					"file_name": "templates/vcbackend_template.yaml",
					"similarity_id": "14e8c41e4d1705d41bd9629a2dc441ce16489c69f66751059bdc9e218cba5e9b",
					"line": 147,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcbackend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcbackend}}.spec.template.spec.containers.name=vcbackend",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=vcbackend has resources defined",
					"actual_value": "spec.template.spec.containers.name=vcbackend doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/vcbackend_template.yaml",
					"similarity_id": "7a2dfde5ff531d288a03eebcef817178f6afe543d042512bd462209928c5e1b5",
					"line": 156,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcbackend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcbackend}}.spec.template.spec.containers.name={{vcbackend}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=vcbackend.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=vcbackend.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/vcbackend_template.yaml",
					"similarity_id": "4390d0d96758f25fee96f8436ddb009096c229b87f8639861ba01bb80721ebb5",
					"line": 147,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcbackend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcbackend}}.spec.template.spec.containers.name=vcbackend",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=vcbackend should have resources defined",
					"actual_value": "spec.template.spec.containers.name=vcbackend doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/vcbackend_template.yaml",
					"similarity_id": "30aeaccfc2933ce75519daeb516014c7c5554f40f844851cfbeb4b879a188bba",
					"line": 149,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcbackend",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vcbackend}}.spec.template.spec.containers.name={{vcbackend}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vcbackend}}.spec.template.spec.containers.name={{vcbackend}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-vcbackend}}.spec.template.spec.containers.name={{vcbackend}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/vcbackend_template.yaml",
					"similarity_id": "4a5154deef4602b6da70c1012cdb6fc1deac82694d12c98a44478bd1fa915a35",
					"line": 136,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcbackend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcbackend}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vcbackend}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{vcbackend}}",
					"actual_value": "metadata.name={{release-name-vcbackend}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{vcbackend}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/vcbackend_template.yaml",
					"similarity_id": "2de9e31481b6ba0bc9bef9a8a57e74b9947a26645cdd2ebd8aec5b0367272c2c",
					"line": 147,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcbackend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcbackend}}.spec.containers.name=vcbackend",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vcbackend}}.spec.containers.name=vcbackend.securityContext should be set",
					"actual_value": "metadata.name={{release-name-vcbackend}}.spec.containers.name=vcbackend.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/vcbackend_template.yaml",
					"similarity_id": "5093db4e4a724a13af7d0fbbab12df9481529a6558252269e2d56c0139868e73",
					"line": 6,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-vcbackend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcbackend}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vcbackend}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-vcbackend}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/vcbackend_template.yaml",
					"similarity_id": "abcd47232f02e5baddfb2f07cf62fb97443034f064ef596ed04c00e61ce6bdd6",
					"line": 6,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-vcbackend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcbackend}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vcbackend}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-vcbackend}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/vcbackend_template.yaml",
					"similarity_id": "6e7824c7f04e803bb127a1ae8a48ae7523f5c0f31ae2d8a9318e6596a203355d",
					"line": 147,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcbackend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcbackend}}.spec.template.spec.containers.name=vcbackend",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=vcbackend has a security context",
					"actual_value": "spec.template.spec.containers.name=vcbackend does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/vcbackend_template.yaml",
					"similarity_id": "9605e357f2c3173e08b440c4f23f52fb8b685c936f09204414f1e02464a7f1b0",
					"line": 147,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcbackend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcbackend}}.spec.template.spec.containers.name={{vcbackend}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vcbackend}}.spec.template.spec.containers.name={{vcbackend}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-vcbackend}}.spec.template.spec.containers.name={{vcbackend}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
