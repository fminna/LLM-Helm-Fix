{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 125,
	"files_parsed": 1,
	"lines_parsed": 120,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 15,
		"MEDIUM": 17,
		"TRACE": 0
	},
	"total_counter": 34,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:22:12.757053+02:00",
	"end": "2024-06-26T02:22:14.882884+02:00",
	"paths": [
		"templates/nginx-default-backend_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "e991e051a3d390c1773267b90b82bc7bb2918f5ba6ac5e0431cc30a1ab62dc89",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-default-backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-default-backend}}.spec.template.spec.containers.name={{nginx-default-backend}}",
					"search_line": 77,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-default-backend}}.spec.template.spec.containers.name={{nginx-default-backend}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-nginx-default-backend}}.spec.template.spec.containers.name={{nginx-default-backend}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "f48aa88fc756a9e1cb64d9c7804c3436fc244d627737c2e40ca86df5456df4b8",
					"line": 121,
					"resource_type": "Job",
					"resource_name": "release-name-nginx-default-backend-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "6a73444d508869439d8c6dbad6dd670a1061270462dce0b9cd0708d565366929",
					"line": 121,
					"resource_type": "Job",
					"resource_name": "release-name-nginx-default-backend-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "0f791f2895bfcde69effc9ca3d3b619c3fca0950e8880fae86b2d9512dff6cfc",
					"line": 83,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-default-backend",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-nginx-default-backend}}.spec.template.spec.containers.name={{nginx-default-backend}}.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-default-backend}}.spec.template.spec.containers.name={{nginx-default-backend}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-nginx-default-backend}}.spec.template.spec.containers.name={{nginx-default-backend}}.securityContext.runAsUser is set to a low UID"
				},
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "3c65d0b29e024200fff40b1610749c3eebc80b6bf566584ac8bdd901b550b18c",
					"line": 121,
					"resource_type": "Job",
					"resource_name": "release-name-nginx-default-backend-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "541ea587373a68d218e03b49ad9145fb47c0cfce2897e72fff6c14cc125fc1dd",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-default-backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-default-backend}}.spec.template.spec.containers.name={{nginx-default-backend}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-default-backend}}.spec.template.spec.containers.name={{nginx-default-backend}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-nginx-default-backend}}.spec.template.spec.containers.name={{nginx-default-backend}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "546d8c7cfe13cca9381699d37563be44ef7f4222d959007ae781f64daaa7d39c",
					"line": 121,
					"resource_type": "Job",
					"resource_name": "release-name-nginx-default-backend-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "2ca158151d07787d2efdf8d34219fdc029a37b0c7cecd83cf7ee144d68dfbc5b",
					"line": 121,
					"resource_type": "Job",
					"resource_name": "release-name-nginx-default-backend-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "d8265d29d6213888642f5bb1177c8aad6f8eff13947b49d9e846fdc1a918fb34",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-default-backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-default-backend}}.spec.template.spec.containers.name={{nginx-default-backend}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-default-backend}}.spec.template.spec.containers.name={{nginx-default-backend}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-nginx-default-backend}}.spec.template.spec.containers.name={{nginx-default-backend}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "53c7dd9a2e6e68ae67e5068c1d7515f98f042436974f13bdd4fd1624f58201c5",
					"line": 121,
					"resource_type": "Job",
					"resource_name": "release-name-nginx-default-backend-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "408f2d04f56656df93e67c06f724a947f17359f5e6a980cd224d2fc0ee080f84",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-default-backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-default-backend}}.spec.template.spec.containers.name={{nginx-default-backend}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-default-backend}}.spec.template.spec.containers.name={{nginx-default-backend}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-nginx-default-backend}}.spec.template.spec.containers.name={{nginx-default-backend}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "d7bb8c310f4b192e4db5e91444e57b99c0a597d9b57d8d6cde62c19bea9608ee",
					"line": 121,
					"resource_type": "Job",
					"resource_name": "release-name-nginx-default-backend-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "af804fb96efc15274a75dba68fb0402fcfd49911da8ed1ec73c58f2595bd59f1",
					"line": 118,
					"resource_type": "Job",
					"resource_name": "release-name-nginx-default-backend-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "a989336018ba670a353681ca8c0400cf86d2e3715f520d206edfa60988dff964",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-default-backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-default-backend}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-default-backend}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-nginx-default-backend}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-nginx-default-backend",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-nginx-default-backend}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "0e667173d8438ef37dbca8a46e1b4705a26eb64d998482b8193984930761bacc",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-default-backend",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-nginx-default-backend}}",
					"search_line": 53,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "c836eafa757524be611073638754ce6b64d2a536d12242ef75e8918b48112a68",
					"line": 31,
					"resource_type": "Service",
					"resource_name": "release-name-nginx-default-backend",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-nginx-default-backend}}",
					"search_line": 31,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-nginx-default-backend-config",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-nginx-default-backend-config}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "3f1e235c2a80860a7ceda70df1bf75d02e6202dd1371d3cd8dc9c0db8a3f33d5",
					"line": 105,
					"resource_type": "Job",
					"resource_name": "release-name-nginx-default-backend-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Job}}.metadata.name={{release-name-nginx-default-backend-test-connection}}",
					"search_line": 105,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "b2f04ce75d775afc5e4a9146253da5a1cf2811f0d1084a5aa9d912fb7d6baf99",
					"line": 121,
					"resource_type": "Job",
					"resource_name": "release-name-nginx-default-backend-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=wget has resources defined",
					"actual_value": "spec.template.spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "3d2dd0a8470df8b239bc490c286d61dfe3b17c1edd7eea043fe809c131696042",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-default-backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-default-backend}}.spec.template.spec.containers.name={{nginx-default-backend}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=nginx-default-backend has limits defined",
					"actual_value": "spec.template.spec.containers.name=nginx-default-backend doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "827369b2c7fdadb892b8f439cf736edac58641ae510f626014f22abbeeca04c1",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-default-backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-default-backend}}.spec.template.spec.containers.name={{nginx-default-backend}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=nginx-default-backend.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=nginx-default-backend.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "a05779a3c3996a71a0ac90814f63b75fe0fc727794616ef2fd22af6f11fd8f08",
					"line": 121,
					"resource_type": "Job",
					"resource_name": "release-name-nginx-default-backend-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=wget should have resources defined",
					"actual_value": "spec.template.spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "a15c28c8ba861fdf0d36947d699cf8869ae55c8cfe28fe2e74afb6673d3ccf80",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-default-backend",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-nginx-default-backend}}.spec.template.spec.containers.name={{nginx-default-backend}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-default-backend}}.spec.template.spec.containers.name={{nginx-default-backend}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-nginx-default-backend}}.spec.template.spec.containers.name={{nginx-default-backend}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "e5b392d31cb1f11b6f0f77d7dfb2febcb090c07c42bf68c2a6028c718e62c75e",
					"line": 122,
					"resource_type": "Job",
					"resource_name": "release-name-nginx-default-backend-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "c9ca9c576d5f6c37821104cca0d9c256aecaa3c8e27df5bcc82ee19a1e641165",
					"line": 105,
					"resource_type": "Job",
					"resource_name": "release-name-nginx-default-backend-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-default-backend-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-default-backend-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-nginx-default-backend-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				},
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "819a8c3279b5722474c84980e06e1807abbc64dcd9fa49f03602918c04f16628",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-default-backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-default-backend}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-default-backend}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{nginx-default-backend}}",
					"actual_value": "metadata.name={{release-name-nginx-default-backend}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{nginx-default-backend}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "dd101054d6b9e89fcb78f7e40a9599e2bbca443dff60cf294adf12b7feb6b0a6",
					"line": 121,
					"resource_type": "Job",
					"resource_name": "release-name-nginx-default-backend-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "2a6be467af0b1bdfad8d41bd5a9ed0a6765d691245762184419138c8e414d733",
					"line": 105,
					"resource_type": "Job",
					"resource_name": "release-name-nginx-default-backend-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-default-backend-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-default-backend-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-nginx-default-backend-test-connection}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "df035a0024c980a705cf8320207dc94f3be365dc7da3825c1797499728714bb1",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-default-backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-default-backend}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-default-backend}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-nginx-default-backend}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "5c0239f3717aa0cc79c2e4a99d546c75d5903d22495c94b55ad9a6884fd0e727",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-default-backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-default-backend}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-default-backend}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-nginx-default-backend}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "54cb94773574af29b9d5d31fff782c4f12744c52ce83689372c845f101160fca",
					"line": 105,
					"resource_type": "Job",
					"resource_name": "release-name-nginx-default-backend-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-default-backend-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-default-backend-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-nginx-default-backend-test-connection}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "2e8c29d1f6e54b5c74c8c20d77afd4f7cf3c8e4e2148ba79dc0da1ea624763df",
					"line": 121,
					"resource_type": "Job",
					"resource_name": "release-name-nginx-default-backend-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=wget has a security context",
					"actual_value": "spec.template.spec.containers.name=wget does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/nginx-default-backend_template.yaml",
					"similarity_id": "7e1c90bf66e681b0009c35919842734e757d12fef6eaae02c89c083de9b0616c",
					"line": 121,
					"resource_type": "Job",
					"resource_name": "release-name-nginx-default-backend-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-nginx-default-backend-test-connection}}.spec.template.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
