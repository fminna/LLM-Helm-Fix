{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 148,
	"files_parsed": 1,
	"lines_parsed": 142,
	"lines_ignored": 6,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 16,
		"MEDIUM": 17,
		"TRACE": 0
	},
	"total_counter": 35,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:39:04.659103+02:00",
	"end": "2024-05-17T20:39:06.584957+02:00",
	"paths": [
		"templates/function-orchestrator_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "827b187fbae09bb1f6ea42c03187eb62b55a9c1fd15925ebb10e8c7c4f51c1c9",
					"line": 142,
					"resource_type": "Pod",
					"resource_name": "function-orchestrator-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "2914fa17897cc0545bb1957546216d7d4b1bd2e6e9481424ef2023fb250e7484",
					"line": 101,
					"resource_type": "Deployment",
					"resource_name": "function-orchestrator-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{function-orchestrator-release-name}}.spec.template.spec.containers.name={{function-orchestrator-release-name}}",
					"search_line": 101,
					"search_value": "",
					"expected_value": "metadata.name={{function-orchestrator-release-name}}.spec.template.spec.containers.name={{function-orchestrator-release-name}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{function-orchestrator-release-name}}.spec.template.spec.containers.name={{function-orchestrator-release-name}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "7340af3afd551e71ac80d4b7f45d6e7daac63669b53b3eba4eee98edd976b2e1",
					"line": 101,
					"resource_type": "Deployment",
					"resource_name": "function-orchestrator-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{function-orchestrator-release-name}}.spec.template.spec.containers.name={{function-orchestrator-release-name}}",
					"search_line": 101,
					"search_value": "",
					"expected_value": "metadata.name={{function-orchestrator-release-name}}.spec.template.spec.containers.name={{function-orchestrator-release-name}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{function-orchestrator-release-name}}.spec.template.spec.containers.name={{function-orchestrator-release-name}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "1af3b094f010b50945c3f0fee2476dfa5fc58706c000a621381b45839b36a8da",
					"line": 142,
					"resource_type": "Pod",
					"resource_name": "function-orchestrator-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "25bd6889431bb06ed3c298a1eb41341d387b00aebe617baf21583b2d6253edc1",
					"line": 142,
					"resource_type": "Pod",
					"resource_name": "function-orchestrator-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "8dbf778a971ad39cbd42d0fee9d2271b072eb395cb97e3c1c9a4d24dc84e395c",
					"line": 101,
					"resource_type": "Deployment",
					"resource_name": "function-orchestrator-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{function-orchestrator-release-name}}.spec.template.spec.containers.name={{function-orchestrator-release-name}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{function-orchestrator-release-name}}.spec.template.spec.containers.name={{function-orchestrator-release-name}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{function-orchestrator-release-name}}.spec.template.spec.containers.name={{function-orchestrator-release-name}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "31fbc55f227ed9b3156afc519885fca3f233699f61bd79ab5b00f3ec03a56cc2",
					"line": 142,
					"resource_type": "Pod",
					"resource_name": "function-orchestrator-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "ec751a2332d084a28ed9f08e735d50681ef3dfb9a3111ba9a94c0bcca7020bcd",
					"line": 142,
					"resource_type": "Pod",
					"resource_name": "function-orchestrator-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "2bbf1fb7bc90974246f3d7e72c86a8c3ef0bd45de5520deae75562828e54847d",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "function-orchestrator-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{function-orchestrator-release-name}}.spec.template.spec.containers.name={{function-orchestrator-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{function-orchestrator-release-name}}.spec.template.spec.containers.name={{function-orchestrator-release-name}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{function-orchestrator-release-name}}.spec.template.spec.containers.name={{function-orchestrator-release-name}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "9698cd9e83c8028f8ab6732d3621a5d152117d22238513e8cafaf1aa9f242fa2",
					"line": 142,
					"resource_type": "Pod",
					"resource_name": "function-orchestrator-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "2748036ee55da77b6811868eae392d5f47186ef2a55be21e1a93fd6dc2d513f0",
					"line": 142,
					"resource_type": "Pod",
					"resource_name": "function-orchestrator-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "7225d63d48388f5263ed29ad345aef74c0a1d7c89f65dae14e540a1756255d9a",
					"line": 101,
					"resource_type": "Deployment",
					"resource_name": "function-orchestrator-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{function-orchestrator-release-name}}.spec.template.spec.containers.name={{function-orchestrator-release-name}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{function-orchestrator-release-name}}.spec.template.spec.containers.name={{function-orchestrator-release-name}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{function-orchestrator-release-name}}.spec.template.spec.containers.name={{function-orchestrator-release-name}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "dd1869bc9ad26f7051faa07d94c6dafc7af8d2e43293a92c777b4171cacc9eab",
					"line": 142,
					"resource_type": "Pod",
					"resource_name": "function-orchestrator-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "9ee89d6c7ae22e9b91ab1a65bb829965965b60665c6025347b6d4fded4476a38",
					"line": 140,
					"resource_type": "Pod",
					"resource_name": "function-orchestrator-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=function-orchestrator-release-name-service-checker.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=function-orchestrator-release-name-service-checker.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "d3da7f4c22bb22894654da70fe1a29f462b3c39ca3042da13dabe899dacba810",
					"line": 140,
					"resource_type": "Pod",
					"resource_name": "function-orchestrator-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "c60cc3aff40f4972fbfd7a093e1cf2d86ae004d86bb755e4d03cbb86834d79cc",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "function-orchestrator-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{function-orchestrator-release-name}}",
					"search_line": 71,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "fbb5037e87048fb67f186e9ecb72cca4997235bbcce54730346608f0cbdb5941",
					"line": 39,
					"resource_type": "Secret",
					"resource_name": "function-orchestrator-release-name-secret-config",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{function-orchestrator-release-name-secret-config}}",
					"search_line": 39,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "90f4f6707fef51cbeabbc0b49e9a566ec8e7e76173106638d257da9f1b5d8051",
					"line": 51,
					"resource_type": "Service",
					"resource_name": "function-orchestrator-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{function-orchestrator-release-name}}",
					"search_line": 51,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "b6806acb7ae8c96f759d390e7d8e25c148e07a1a26ab695dea9c878e8731cda9",
					"line": 136,
					"resource_type": "Pod",
					"resource_name": "function-orchestrator-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{function-orchestrator-release-name-service-checker}}",
					"search_line": 136,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "fb8317995679e017f2bb1189fe09d365dc810099fc1aa9ba39de30518b484aa6",
					"line": 142,
					"resource_type": "Pod",
					"resource_name": "function-orchestrator-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name=function-orchestrator-release-name-service-checker",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=function-orchestrator-release-name-service-checker has resources defined",
					"actual_value": "spec.containers.name=function-orchestrator-release-name-service-checker doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "20485bb0491349755d2ed3d326cc66a430bb9451d2ad0295eb3df18cbb3026b7",
					"line": 142,
					"resource_type": "Pod",
					"resource_name": "function-orchestrator-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name=function-orchestrator-release-name-service-checker",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=function-orchestrator-release-name-service-checker should have resources defined",
					"actual_value": "spec.containers.name=function-orchestrator-release-name-service-checker doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "5a408fe9b4b1c5a21073d6cb9fe43a7ee202b7cb377c7323ff2424324d5f9f30",
					"line": 100,
					"resource_type": "Deployment",
					"resource_name": "function-orchestrator-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{function-orchestrator-release-name}}.spec.template.spec.containers.name={{function-orchestrator-release-name}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{function-orchestrator-release-name}}.spec.template.spec.containers.name={{function-orchestrator-release-name}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{function-orchestrator-release-name}}.spec.template.spec.containers.name={{function-orchestrator-release-name}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "679b63a48a29fb31919184d7823ba5140b9ad0b753ea7dd4f5818d14655e2119",
					"line": 143,
					"resource_type": "Pod",
					"resource_name": "function-orchestrator-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "be4a0879db0cd70efd3fa7d76d73e3dc0ca0bf7995f1c94b2cb3800e53729c82",
					"line": 136,
					"resource_type": "Pod",
					"resource_name": "function-orchestrator-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{function-orchestrator-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{function-orchestrator-release-name-service-checker}}.annotations should specify an AppArmor profile for container {{function-orchestrator-release-name-service-checker}}",
					"actual_value": "metadata.name={{function-orchestrator-release-name-service-checker}}.annotations does not specify an AppArmor profile for container {{function-orchestrator-release-name-service-checker}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "0104ac557f12714219f891c40ed72d2be66d9d5d5c741c0daabeb822b33a1e9e",
					"line": 142,
					"resource_type": "Pod",
					"resource_name": "function-orchestrator-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name=function-orchestrator-release-name-service-checker",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name=function-orchestrator-release-name-service-checker.securityContext should be set",
					"actual_value": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name=function-orchestrator-release-name-service-checker.securityContext is undefined"
				},
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "122b0442fdbb3279cba4d40bb65ca977cb627517ca62b986e52fe5585e1f4a09",
					"line": 101,
					"resource_type": "Deployment",
					"resource_name": "function-orchestrator-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{function-orchestrator-release-name}}.spec.containers.name={{function-orchestrator-release-name}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{function-orchestrator-release-name}}.spec.containers.name={{function-orchestrator-release-name}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{function-orchestrator-release-name}}.spec.containers.name={{function-orchestrator-release-name}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "99517fe09d89db142a18d0dff29b8dab9e7278c492b4a3b4c2277b56b9d5af56",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "function-orchestrator-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{function-orchestrator-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{function-orchestrator-release-name}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{function-orchestrator-release-name}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "59a39d52b744b7427bf5fea488d98850984973c0e0983cc9b4a39d8406085a2e",
					"line": 136,
					"resource_type": "Pod",
					"resource_name": "function-orchestrator-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{function-orchestrator-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{function-orchestrator-release-name-service-checker}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{function-orchestrator-release-name-service-checker}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "b24087b69bcc87dcb2f8bec0da04b60140a885c61e63f60ea81e3b415edd7cf0",
					"line": 136,
					"resource_type": "Pod",
					"resource_name": "function-orchestrator-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{function-orchestrator-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{function-orchestrator-release-name-service-checker}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{function-orchestrator-release-name-service-checker}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "e1cdc74986414de8e9c729e350aca9c9acc29672e035fb55e096f91d1578297f",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "function-orchestrator-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{function-orchestrator-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{function-orchestrator-release-name}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{function-orchestrator-release-name}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "42e5f53b52639145c3636559ee547ff28a1d79952cb02b658c77250b446c2143",
					"line": 140,
					"resource_type": "Pod",
					"resource_name": "function-orchestrator-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec has a security context",
					"actual_value": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec does not have a security context"
				},
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "6d09a39cad669e28a9a474557802284225ff170a22b87413c15dba02c87f4808",
					"line": 142,
					"resource_type": "Pod",
					"resource_name": "function-orchestrator-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name=function-orchestrator-release-name-service-checker",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=function-orchestrator-release-name-service-checker has a security context",
					"actual_value": "spec.containers.name=function-orchestrator-release-name-service-checker does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "39d52033d0b6bcc3a5ff94eff058d7a716d1e3f463eef4c35d21f4cf8534d25f",
					"line": 142,
					"resource_type": "Pod",
					"resource_name": "function-orchestrator-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{function-orchestrator-release-name-service-checker}}.spec.containers.name={{function-orchestrator-release-name-service-checker}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "ffd5839042f991dd676f11fbbfe1ec6ef67eb766015dfbbf1a6fc7db17e6d9bb",
					"line": 59,
					"resource_type": "Service",
					"resource_name": "function-orchestrator-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{function-orchestrator-release-name}}.spec.selector",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{function-orchestrator-release-name}}.spec.selector label refers to a Pod label",
					"actual_value": "metadata.name={{function-orchestrator-release-name}}.spec.selector label does not match with any Pod label"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/function-orchestrator_template.yaml",
					"similarity_id": "acf0eb5ddc02acf213f790c0cdc296d36641df6d39bda5b66d8075d2b407b88e",
					"line": 45,
					"resource_type": "Service",
					"resource_name": "function-orchestrator-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{function-orchestrator-release-name}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
