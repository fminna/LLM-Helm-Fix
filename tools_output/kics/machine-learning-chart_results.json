{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 37,
	"files_parsed": 1,
	"lines_parsed": 35,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 13,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 24,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:55:17.36536+02:00",
	"end": "2024-05-17T20:55:19.275187+02:00",
	"paths": [
		"templates/machine-learning-chart_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/machine-learning-chart_template.yaml",
					"similarity_id": "2cfc4ad0e32e979f850f240f549eda221d29cc468f6cda350874e861fad1668e",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "machine-learning-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/machine-learning-chart_template.yaml",
					"similarity_id": "0f32d0076253e09d597a1b1862bc2c6e4bcdbef70f0dab9c55faa7692322a89f",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "machine-learning-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/machine-learning-chart_template.yaml",
					"similarity_id": "45800387bf80d444dc28797a117a8db2488f9657a4d740c7d6d0051859dd4214",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "machine-learning-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/machine-learning-chart_template.yaml",
					"similarity_id": "288cf83b1a437a834e821b2db81749de83e55777a12f2fad2ccb735fc1847db7",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "machine-learning-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/machine-learning-chart_template.yaml",
					"similarity_id": "717d498351fc5f3c23e43e73409180cc2aaea899862c1117fc7346ea75abdc10",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "machine-learning-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/machine-learning-chart_template.yaml",
					"similarity_id": "403dd7ecc11d409cd443f4cd66d013300608a48c344fe829862ab0b1eb6446eb",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "machine-learning-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/machine-learning-chart_template.yaml",
					"similarity_id": "72b1568f783bb37c640226f67d50e22ee522f281d8ef2908fec7d95a2b76a9cb",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "machine-learning-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/machine-learning-chart_template.yaml",
					"similarity_id": "205a59b9e34469a8d6ad6baa4a1657e1235d98d0235899ce72e27e31f1eb8798",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "machine-learning-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/machine-learning-chart_template.yaml",
					"similarity_id": "98bd195824d5d2e8404c2e6dabe28f1a10936e7651cd4c89b547ba372eb9590c",
					"line": 33,
					"resource_type": "Deployment",
					"resource_name": "machine-learning-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{machine-learning-deployment}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{machine-learning-deployment}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{machine-learning-deployment}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/machine-learning-chart_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "machine-learning-service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{machine-learning-service}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/machine-learning-chart_template.yaml",
					"similarity_id": "6b3dadf62e36f9de05061ac5d18116f0869dad41a0e62154151afe7797bbd6ac",
					"line": 21,
					"resource_type": "Deployment",
					"resource_name": "machine-learning-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{machine-learning-deployment}}",
					"search_line": 21,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/machine-learning-chart_template.yaml",
					"similarity_id": "268a88a5dc2d867803fdbf29734dfa084588101c5a8d5a7e42a3036dd7528402",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "machine-learning-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name=my-container",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=my-container has resources defined",
					"actual_value": "spec.template.spec.containers.name=my-container doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/machine-learning-chart_template.yaml",
					"similarity_id": "515ebf58e18442b2738ac0b0d1d82be32655dd500f2a3b45af111d99671911a8",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "machine-learning-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name=my-container",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=my-container should have resources defined",
					"actual_value": "spec.template.spec.containers.name=my-container doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Deployment Has No PodAntiAffinity",
			"query_id": "a31b7b82-d994-48c4-bd21-3bab6c31827a",
			"query_url": "https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Check if Deployment resources don't have a podAntiAffinity policy, which prevents multiple pods from being scheduled on the same node.",
			"description_id": "22146f41",
			"files": [
				{
					"file_name": "templates/machine-learning-chart_template.yaml",
					"similarity_id": "6b815e2a387d037a462ef136cdc88b94b38cc70a5ccee6e627d28568ac61c1f8",
					"line": 33,
					"resource_type": "Deployment",
					"resource_name": "machine-learning-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{machine-learning-deployment}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.affinity' should be set",
					"actual_value": "'spec.template.spec.affinity' is undefined"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/machine-learning-chart_template.yaml",
					"similarity_id": "4227be8521385582dcccd1324c1b9141e5be69466a21f29e51a3bfc549c98ea3",
					"line": 27,
					"resource_type": "Deployment",
					"resource_name": "machine-learning-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{machine-learning-deployment}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=machine-learning-deployment is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=machine-learning-deployment is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/machine-learning-chart_template.yaml",
					"similarity_id": "7d50e0a332b8cebe41e966047969d3470012fcd5c631577f88e4eb06a1502b76",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "machine-learning-deployment",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/machine-learning-chart_template.yaml",
					"similarity_id": "9b8e3f0043a54d377aae3f3cb3357b2a84f8188ce174eac3c6a683fc607ef9a9",
					"line": 30,
					"resource_type": "Deployment",
					"resource_name": "machine-learning-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{machine-learning-deployment}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{machine-learning-deployment}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{my-container}}",
					"actual_value": "metadata.name={{machine-learning-deployment}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{my-container}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/machine-learning-chart_template.yaml",
					"similarity_id": "a58aba46c123dd499ec7484c005a6a30b0dbf5975e5736ceefff8521f30d8126",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "machine-learning-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{machine-learning-deployment}}.spec.containers.name=my-container",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{machine-learning-deployment}}.spec.containers.name=my-container.securityContext should be set",
					"actual_value": "metadata.name={{machine-learning-deployment}}.spec.containers.name=my-container.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/machine-learning-chart_template.yaml",
					"similarity_id": "ca7d1c77324889d95316d5de7edc7be270b527f665f35038b02e04bcafecb1e8",
					"line": 21,
					"resource_type": "Deployment",
					"resource_name": "machine-learning-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{machine-learning-deployment}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{machine-learning-deployment}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{machine-learning-deployment}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/machine-learning-chart_template.yaml",
					"similarity_id": "45ac12cfd20b343aac91c63adf4d167a34ce8ef9d13103ddd309b4082e436fbd",
					"line": 21,
					"resource_type": "Deployment",
					"resource_name": "machine-learning-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{machine-learning-deployment}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{machine-learning-deployment}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{machine-learning-deployment}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/machine-learning-chart_template.yaml",
					"similarity_id": "d8b08e3f97ba4a0deb9ed555c9fbb72e746af1e95d010dc4121615cb836415cd",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "machine-learning-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name=my-container",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=my-container has a security context",
					"actual_value": "spec.template.spec.containers.name=my-container does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/machine-learning-chart_template.yaml",
					"similarity_id": "caaa7059253f282c34cdb58a55083987bcb8a3fbb0ecc09b8d0b9378152621b1",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "machine-learning-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{machine-learning-deployment}}.spec.template.spec.containers.name={{my-container}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/machine-learning-chart_template.yaml",
					"similarity_id": "86678f27b6062c0f810d0cb9bbec00f8d39bcc88f5b3b8ce40006ef30b1c4f85",
					"line": 10,
					"resource_type": "Service",
					"resource_name": "machine-learning-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{machine-learning-service}}.spec.ports.port={{5000}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{machine-learning-service}}.spec.ports.port={{5000}} has a Pod port",
					"actual_value": "metadata.name={{machine-learning-service}}.spec.ports.port={{5000}} does not have a Pod port"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/machine-learning-chart_template.yaml",
					"similarity_id": "0b0c3e274027679af2781676a5771779d87fa9fccadfad64b31efe9eb9999e59",
					"line": 15,
					"resource_type": "Service",
					"resource_name": "machine-learning-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{machine-learning-service}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
