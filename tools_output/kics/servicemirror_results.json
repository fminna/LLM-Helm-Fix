{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 164,
	"files_parsed": 1,
	"lines_parsed": 157,
	"lines_ignored": 7,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 14,
		"TRACE": 0
	},
	"total_counter": 26,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:56:25.484895+02:00",
	"end": "2024-06-26T00:56:27.562114+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/servicemirror_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/servicemirror_template.yaml",
					"similarity_id": "ba5160205e09a751b7de24222fedbdb831597082d5e7dd800d9702f1433dcbbe",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "servicemirror-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/servicemirror_template.yaml",
					"similarity_id": "8382f016be32a614011f2b542a59e9f284de9543b56406b9682e7a8ce2649643",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "servicemirror-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/servicemirror_template.yaml",
					"similarity_id": "680a6e22a07817e9611f0de88d407ee4e60c76c7167af6a53b9cee1929acbe42",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "servicemirror-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/servicemirror_template.yaml",
					"similarity_id": "dca8212bf54b192123b5fb72c1169eff51de3bbf7c26c55feec2f98f84716e9b",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "servicemirror-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/servicemirror_template.yaml",
					"similarity_id": "695e636ff99b1654e45c8d64de5c58ca6275a0b2a9f4173e1b0725ad3ff4f820",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "servicemirror-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/servicemirror_template.yaml",
					"similarity_id": "4b2d105f8346c280a8d06c3688e3c93fac421ec0d71efbed68f7f298ca3254e3",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "servicemirror-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/servicemirror_template.yaml",
					"similarity_id": "bcd9d47deec9da1ecb405895e7ca4ed200738713fee7d40694b19ba0c2f154b7",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "servicemirror-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/servicemirror_template.yaml",
					"similarity_id": "6bfb2b31f5710785742d0005160fac7ff7b95b8c214dd5fee2582f102cc75ce4",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "servicemirror-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/servicemirror_template.yaml",
					"similarity_id": "6324e3824473a5ab51675d424ca3ca41ab0d5f486a4009a6b713662f713e58aa",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "servicemirror-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{servicemirror-server}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{servicemirror-server}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{servicemirror-server}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Service With External Load Balancer",
			"query_id": "26763a1c-5dda-4772-b507-5fca7fb5f165",
			"query_url": "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service has an external load balancer, which may cause accessibility from other networks and the Internet",
			"description_id": "2e090344",
			"files": [
				{
					"file_name": "templates/servicemirror_template.yaml",
					"similarity_id": "c2f21a60dc277e5dcc26809e54a225fd6f4f28b45ae262e83f67b48c334eb1df",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "servicemirror-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{servicemirror-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'metadata.annotations' should be set",
					"actual_value": "'metadata.annotations' is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/servicemirror_template.yaml",
					"similarity_id": "f737aa0202886875337755a2710775e0d194f4be331a99bf7d67787cd3a409a6",
					"line": 86,
					"resource_type": "Service",
					"resource_name": "servicemirror-server",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{servicemirror-server}}",
					"search_line": 86,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/servicemirror_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "servicemirror-server",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{servicemirror-server}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/servicemirror_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Secret",
					"resource_name": "servicemirror-server",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{servicemirror-server}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/servicemirror_template.yaml",
					"similarity_id": "770f748f5468afe96903d306ee736b06b50d9eae4b1a2a1b4ff53acb2f031f23",
					"line": 123,
					"resource_type": "Deployment",
					"resource_name": "servicemirror-server",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{servicemirror-server}}",
					"search_line": 123,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/servicemirror_template.yaml",
					"similarity_id": "84f0ec91532b033d09dab35cc45086ba2a1acb40ae68471221d0ca9608c9ad22",
					"line": 104,
					"resource_type": "Service",
					"resource_name": "servicemirror-server-api",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{servicemirror-server-api}}",
					"search_line": 104,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/servicemirror_template.yaml",
					"similarity_id": "d7eb4385d2fa1d7eca28dc6c921bf2dd121aa1d0d32f12e16986fa74d603a1c4",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "servicemirror-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name=servicemirror",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=servicemirror has resources defined",
					"actual_value": "spec.template.spec.containers.name=servicemirror doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/servicemirror_template.yaml",
					"similarity_id": "edb09627f0106f206f4c21c4844f40755c9b3c8416431137fabdb8fd981719a3",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "servicemirror-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name=servicemirror",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=servicemirror should have resources defined",
					"actual_value": "spec.template.spec.containers.name=servicemirror doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/servicemirror_template.yaml",
					"similarity_id": "566b39ea41f7743b37570f945d1e054b0e2412cba5dec06d891533b0b30adbb8",
					"line": 145,
					"resource_type": "Deployment",
					"resource_name": "servicemirror-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/servicemirror_template.yaml",
					"similarity_id": "375fe0694c3168f0714dfd60b8eb03206ce0b54c97ef086be91b2fb265f00eb9",
					"line": 136,
					"resource_type": "Deployment",
					"resource_name": "servicemirror-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{servicemirror-server}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{servicemirror-server}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{servicemirror}}",
					"actual_value": "metadata.name={{servicemirror-server}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{servicemirror}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/servicemirror_template.yaml",
					"similarity_id": "d7982eddfe16b07117f74f81c955e1b98ae818e9c8d4eec3ccd08dcfc4100773",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "servicemirror-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{servicemirror-server}}.spec.containers.name=servicemirror",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{servicemirror-server}}.spec.containers.name=servicemirror.securityContext should be set",
					"actual_value": "metadata.name={{servicemirror-server}}.spec.containers.name=servicemirror.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/servicemirror_template.yaml",
					"similarity_id": "4198fd73030930a9c850786863d86b76934a825eb69ba7a61535749e3b363281",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "servicemirror-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{servicemirror-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{servicemirror-server}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{servicemirror-server}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/servicemirror_template.yaml",
					"similarity_id": "df409dd37fc5974238b18a480881a998191d92949896396b0223f9075c48a4fc",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "servicemirror-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{servicemirror-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{servicemirror-server}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{servicemirror-server}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/servicemirror_template.yaml",
					"similarity_id": "3d3385921e03e2b86943f62e40bf89cd988e79ca7af1d14472b923974678b923",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "servicemirror-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name=servicemirror",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=servicemirror has a security context",
					"actual_value": "spec.template.spec.containers.name=servicemirror does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/servicemirror_template.yaml",
					"similarity_id": "91fa87aea5867906494f565cee338a174230713e02740fb33dab643f73533d19",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "servicemirror-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{servicemirror-server}}.spec.template.spec.containers.name={{servicemirror}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/servicemirror_template.yaml",
					"similarity_id": "4d6b4310b5e3fc709ed9b185a1095732ae112481b9c7430dab2a0859441c39bc",
					"line": 115,
					"resource_type": "Service",
					"resource_name": "servicemirror-server-api",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{servicemirror-server-api}}.spec.ports.port={{80}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{servicemirror-server-api}}.spec.ports.port={{80}} has a Pod port",
					"actual_value": "metadata.name={{servicemirror-server-api}}.spec.ports.port={{80}} does not have a Pod port"
				},
				{
					"file_name": "templates/servicemirror_template.yaml",
					"similarity_id": "6c6b7ded388bbcca36480158ade8dc813ea6cd97e077d2dec90b86be6652bfb2",
					"line": 97,
					"resource_type": "Service",
					"resource_name": "servicemirror-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{servicemirror-server}}.spec.ports.port={{9876}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{servicemirror-server}}.spec.ports.port={{9876}} has a Pod port",
					"actual_value": "metadata.name={{servicemirror-server}}.spec.ports.port={{9876}} does not have a Pod port"
				}
			]
		}
	]
}
