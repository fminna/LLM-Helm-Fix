{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 177,
	"files_parsed": 1,
	"lines_parsed": 170,
	"lines_ignored": 7,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 4,
		"MEDIUM": 5,
		"TRACE": 0
	},
	"total_counter": 9,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:51:52.10966+02:00",
	"end": "2024-05-17T20:51:54.083757+02:00",
	"paths": [
		"templates/azure-keyvault-exporter_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/azure-keyvault-exporter_template.yaml",
					"similarity_id": "392a5cae6b28ca5c4a07d01d5d6db8dd72b69ba40f4b16537d9842f7fe5adbbd",
					"line": 123,
					"resource_type": "Deployment",
					"resource_name": "release-name-azure-keyvaul",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-azure-keyvaul}}.spec.template.spec.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-azure-keyvaul}}.spec.template.spec.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-azure-keyvaul}}.spec.template.spec.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/azure-keyvault-exporter_template.yaml",
					"similarity_id": "d418ec00d552db7017c39717fe0be0085b23da2b114ce45fc18dbef0b4afea33",
					"line": 115,
					"resource_type": "Deployment",
					"resource_name": "release-name-azure-keyvaul",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-azure-keyvaul}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-azure-keyvaul}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-azure-keyvaul}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/azure-keyvault-exporter_template.yaml",
					"similarity_id": "e8379519129fd4b44bb9dd5f230465e5584ebe270208396db6f0e44610f386f7",
					"line": 87,
					"resource_type": "Deployment",
					"resource_name": "release-name-azure-keyvaul",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-azure-keyvaul}}.namespace",
					"search_line": 87,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/azure-keyvault-exporter_template.yaml",
					"similarity_id": "b3bdd3322b694908ea148b5dfe48aa00eb8269fe8e1074cfa3f81b3f6b420f16",
					"line": 59,
					"resource_type": "Service",
					"resource_name": "release-name-azure-keyvaul",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-azure-keyvaul}}.namespace",
					"search_line": 59,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/azure-keyvault-exporter_template.yaml",
					"similarity_id": "6da7878077dc4c1a53976921c39692ae6269c99a07fabc1063f065ed87e09ef9",
					"line": 43,
					"resource_type": "ServiceAccount",
					"resource_name": "azure-keyvault-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{azure-keyvault-exporter}}.namespace",
					"search_line": 43,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/azure-keyvault-exporter_template.yaml",
					"similarity_id": "8e5eb83c26ec3452eedaf82588a2494424edd7c08322a6e1e14e774b795c630b",
					"line": 136,
					"resource_type": "Deployment",
					"resource_name": "release-name-azure-keyvaul",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-azure-keyvaul}}.spec.template.spec.containers.name={{azure-keyvault-exporter}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-azure-keyvaul}}.spec.template.spec.containers.name={{azure-keyvault-exporter}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-azure-keyvaul}}.spec.template.spec.containers.name={{azure-keyvault-exporter}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/azure-keyvault-exporter_template.yaml",
					"similarity_id": "e6668230bed78362e0e9494e00f8290a4366b9937d80c1846753410a86dff2f2",
					"line": 112,
					"resource_type": "Deployment",
					"resource_name": "release-name-azure-keyvaul",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-azure-keyvaul}}.spec.template.metadata",
					"search_line": 112,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-azure-keyvaul}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{azure-keyvault-exporter}}",
					"actual_value": "metadata.name={{release-name-azure-keyvaul}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{azure-keyvault-exporter}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/azure-keyvault-exporter_template.yaml",
					"similarity_id": "fe5fd4f98b5c83f3d0a809c791d4b22e90a198c8a3423a80a11f51890b9681fd",
					"line": 87,
					"resource_type": "Deployment",
					"resource_name": "release-name-azure-keyvaul",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-azure-keyvaul}}",
					"search_line": 87,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-azure-keyvaul}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-azure-keyvaul}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/azure-keyvault-exporter_template.yaml",
					"similarity_id": "5c22faf41c0f793e20e7dea793d8737a66dd7ffa364c9813f24688014925ce58",
					"line": 87,
					"resource_type": "Deployment",
					"resource_name": "release-name-azure-keyvaul",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-azure-keyvaul}}",
					"search_line": 87,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-azure-keyvaul}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-azure-keyvaul}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
