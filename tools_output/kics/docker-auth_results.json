{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 123,
	"files_parsed": 1,
	"lines_parsed": 118,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 18,
		"MEDIUM": 21,
		"TRACE": 0
	},
	"total_counter": 41,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:23:30.050903+02:00",
	"end": "2024-06-26T02:23:32.203657+02:00",
	"paths": [
		"templates/docker-auth_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "de81c9d28cfcbf2acc846f23b7cb6453135f9e7dfd9dec2f191cb34bbeb2f330",
					"line": 118,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-auth-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "acc541c16b96aca25d6ddef3ae626217c28062dcf492d3e4b1cc999041fbc4fe",
					"line": 74,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-auth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth}}.spec.template.spec.containers.name={{docker-auth}}",
					"search_line": 74,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth}}.spec.template.spec.containers.name={{docker-auth}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-docker-auth}}.spec.template.spec.containers.name={{docker-auth}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "59e03d241ea3adbe73d600d72c9d9b6acd7164e953a46fb19db08801c678bee9",
					"line": 118,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-auth-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "2e927c710f1e046ac4e732a37241e1c58dbbb8924c0ade07e887bb26bb39a081",
					"line": 74,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-auth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth}}.spec.template.spec.containers.name={{docker-auth}}",
					"search_line": 74,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth}}.spec.template.spec.containers.name={{docker-auth}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-docker-auth}}.spec.template.spec.containers.name={{docker-auth}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "f12557b49b4d7d051183ba8261d0723de8620d5f71b13513857f3a4a7e6ce9c4",
					"line": 74,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-auth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth}}.spec.template.spec.containers.name={{docker-auth}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth}}.spec.template.spec.containers.name={{docker-auth}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-docker-auth}}.spec.template.spec.containers.name={{docker-auth}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "4acca272deebf6f992c82bf5cda708bf4e3e38342bf7716f658f1d53e1fee0a4",
					"line": 118,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-auth-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "2cb2522bc72d146bd4e8ecc636c610aa1090c87e56488c741c528ae80cb29596",
					"line": 118,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-auth-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "35771c3cd6a23081b22a689e7084035bc84e6a271b0afadd80d2822c6064e984",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-auth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth}}.spec.template.spec.containers.name={{docker-auth}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth}}.spec.template.spec.containers.name={{docker-auth}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-docker-auth}}.spec.template.spec.containers.name={{docker-auth}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "599981ae776c53d58272f5be5f35b7fb89c1622a96424d43587b36c32aa8a2cf",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-auth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth}}.spec.template.spec.containers.name={{docker-auth}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth}}.spec.template.spec.containers.name={{docker-auth}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-docker-auth}}.spec.template.spec.containers.name={{docker-auth}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "9cb79ad3c308fe83f1a6b4de7f2aaf1e9686b447f43df88c51b025b6fee4614a",
					"line": 118,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-auth-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "8b55caae04526e2992d870cbbd5ba453a68e8fad3bee4e4c354c70194216cb14",
					"line": 118,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-auth-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "c9c0f1d64eefbe85851d86eb5d8daacb9a86eb096d2e8ac8e290c236323f12dc",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-auth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth}}.spec.template.spec.containers.name={{docker-auth}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth}}.spec.template.spec.containers.name={{docker-auth}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-docker-auth}}.spec.template.spec.containers.name={{docker-auth}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "594874ae083a7b9aa3a06d578dd83147db6d6606f5cec945a17870dce8f39f7e",
					"line": 118,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-auth-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "bb039d3d9decd8fece91e2bc01da16e305a68b22718e97fc7ceb43b42279cab9",
					"line": 118,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-auth-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "f47b2a99cc6bd5acb387d198c1f78bcb169538f72064fdb4a8eee2513a15de0a",
					"line": 74,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-auth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth}}.spec.template.spec.containers.name={{docker-auth}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth}}.spec.template.spec.containers.name={{docker-auth}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-docker-auth}}.spec.template.spec.containers.name={{docker-auth}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "6a72c7d9a16c8de411a4bb1551a33ac3292f6b08863e7d9512da99a965f2164f",
					"line": 116,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-auth-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-docker-auth-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-docker-auth-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "e539e57ff75f37e57e38c2b15d674f3d200c35e2ac5ddda79052045190681030",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-auth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-docker-auth}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "914541a551872343b8a6153bf81acb7f343b3c5fc40b5f3373f8723c4b6e56cd",
					"line": 116,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-auth-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-docker-auth-test-connection}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "3d245361eb8e2f528907e46b644bb889f98ea442f521ec836ef1ab746a4e7cd7",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-auth",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-docker-auth}}",
					"search_line": 48,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Secret",
					"resource_name": "docker-auth",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{docker-auth}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "8ec473b89a3d27c6c7fcb9239e49adb0786ddc9cc45d89d624a1db3b1cc58d20",
					"line": 107,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-auth-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-docker-auth-test-connection}}",
					"search_line": 107,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "8f2e7e68edee857966f6443a72feb813aa2d78eccecf0579b725661aea5c8b61",
					"line": 26,
					"resource_type": "Service",
					"resource_name": "release-name-docker-auth",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-docker-auth}}",
					"search_line": 26,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-docker-auth",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-docker-auth}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "5d911d777c57eacaf753ba2b5731300f527f53c523fd6b0080b6d4dc089ec90b",
					"line": 118,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-auth-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "3f87606b2b8b98bd162768dbc4197262fb6d59e09ecc4a2235c21ab7aef8bae1",
					"line": 93,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-auth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth}}.spec.template.spec.containers.name={{docker-auth}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=docker-auth has limits defined",
					"actual_value": "spec.template.spec.containers.name=docker-auth doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "bf6682f563c73bc86aa52c7b7029f0230317088c53f7734e962ab28669f98585",
					"line": 93,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-auth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth}}.spec.template.spec.containers.name={{docker-auth}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=docker-auth.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=docker-auth.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "efad1a98e58f7bdb7541718c68ec8eb8ec7653061027e3b3e1feb2555f6ce641",
					"line": 118,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-auth-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "87710ed499d6e96838dec07c337518e892c53cfcc4d5d6fd7d5234492773a894",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-auth",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-docker-auth}}.spec.template.spec.containers.name={{docker-auth}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth}}.spec.template.spec.containers.name={{docker-auth}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-docker-auth}}.spec.template.spec.containers.name={{docker-auth}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "fdfc1bef2c477063011a5ccde1a1cf9c6d4491b9b74b2856a8ee7dee5e88398d",
					"line": 119,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-auth-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "87e20dff573d0759ee7ce8807b9bd9c5d3c877b73278ca93a1c1b1792c0f230f",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-auth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth}}.spec.template.metadata",
					"search_line": 66,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{docker-auth}}",
					"actual_value": "metadata.name={{release-name-docker-auth}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{docker-auth}}"
				},
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "19181565a7b7946cbed32e36d94f1ca07bc3c4c920136a9b286a511a6624ec06",
					"line": 107,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-auth-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-docker-auth-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "fe044a4af2080387cf39f37c4605f310478638be0c9ba012742f1a7ecaedde62",
					"line": 74,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-auth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth}}.spec.containers.name={{docker-auth}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth}}.spec.containers.name={{docker-auth}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-docker-auth}}.spec.containers.name={{docker-auth}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "cc7fb66bd1cb3ed3a4f6572fd05462c6020302d0076a26457dbebd6deb98d9ec",
					"line": 118,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-auth-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "9b2340d6702304805dd62d8790fdaff5d4bf8028e5bfbb142c33e50ab7f49b90",
					"line": 107,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-auth-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-docker-auth-test-connection}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "5c6592d001e8bf78ac802592965d68a0914bfbe679cfc734ea05d30b678942e8",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-auth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-docker-auth}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "db89f529f875fc4e843a3c4cb90241caffefaae037ab39b69151cd17b01ad2ae",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-auth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-docker-auth}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "012e5fcf2f1cd9227a6d5754b7e1ad1136cfbb0be6c4afdf85ee148b72900d61",
					"line": 107,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-auth-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-docker-auth-test-connection}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "59faf19d2b99714932f7ddb0c6b63e81367dc9b6fbf61af85f160e0702708f10",
					"line": 118,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-auth-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				},
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "1552babaad9e87ec85d20401df77b728185c7551dfe9db032ec152b56d6480c2",
					"line": 116,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-auth-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-docker-auth-test-connection}}.spec does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "b34937c284fde3ab2c40d110d0be906b219602e44b0b88cce6810f480d9d833a",
					"line": 118,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-auth-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-docker-auth-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/docker-auth_template.yaml",
					"similarity_id": "39a4f4fffd8e5c5d02e3d1aaf12b5ee5815a755b05dc207c0d1dfe645bd4a323",
					"line": 74,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-auth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-auth}}.spec.template.spec.containers.name={{docker-auth}}",
					"search_line": 74,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-auth}}.spec.template.spec.containers.name={{docker-auth}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-docker-auth}}.spec.template.spec.containers.name={{docker-auth}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
