{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 128,
	"files_parsed": 1,
	"lines_parsed": 123,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:43:46.861918+02:00",
	"end": "2024-05-17T21:43:48.796545+02:00",
	"paths": [
		"templates/jwt-to-rbac_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/jwt-to-rbac_template.yaml",
					"similarity_id": "d0fa2e0f9c663345f3cad3c64b4d58f6eef971299cd4e9b0ddbb32aac23e32a2",
					"line": 117,
					"resource_type": "Deployment",
					"resource_name": "release-name-jwt-to-rbac",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.spec.containers.name={{jwt-to-rbac}}.volumeMounts.name={{config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.spec.containers.name={{jwt-to-rbac}}.volumeMounts.name={{config}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.spec.containers.name={{jwt-to-rbac}}.volumeMounts.name={{config}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/jwt-to-rbac_template.yaml",
					"similarity_id": "56765f91b7cd8ee19c88c27a4199e75a0c9775783d2e39cb883a214b26752bb8",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "release-name-jwt-to-rbac",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.spec.containers.name={{jwt-to-rbac}}.securityContext.runAsUser=2",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.spec.containers.name={{jwt-to-rbac}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.spec.containers.name={{jwt-to-rbac}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/jwt-to-rbac_template.yaml",
					"similarity_id": "d5aa1df62adae44d78d3ff19944157f23b2dde65558bb1941a9c74eee7e0ced0",
					"line": 94,
					"resource_type": "Deployment",
					"resource_name": "release-name-jwt-to-rbac",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.spec.containers.name={{jwt-to-rbac}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.spec.containers.name={{jwt-to-rbac}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.spec.containers.name={{jwt-to-rbac}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/jwt-to-rbac_template.yaml",
					"similarity_id": "8645db2b5a0d19f8d51230b2e60e65a59968296c1b10d7af0cb0550bec69ed64",
					"line": 94,
					"resource_type": "Deployment",
					"resource_name": "release-name-jwt-to-rbac",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.spec.containers.name={{jwt-to-rbac}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.spec.containers.name={{jwt-to-rbac}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.spec.containers.name={{jwt-to-rbac}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/jwt-to-rbac_template.yaml",
					"similarity_id": "a5aa95b2ce3ead3053a5326f7b8feeb82b4342a0d0fb3d84140d8de86289d085",
					"line": 94,
					"resource_type": "Deployment",
					"resource_name": "release-name-jwt-to-rbac",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.spec.containers.name={{jwt-to-rbac}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.spec.containers.name={{jwt-to-rbac}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.spec.containers.name={{jwt-to-rbac}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/jwt-to-rbac_template.yaml",
					"similarity_id": "542efd854638e5f8a9f230239e79190dd91ad0d357a44def9818270bbd9da7fb",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "release-name-jwt-to-rbac",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.spec.containers.name={{jwt-to-rbac}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.spec.containers.name={{jwt-to-rbac}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.spec.containers.name={{jwt-to-rbac}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/jwt-to-rbac_template.yaml",
					"similarity_id": "330e6d57dd0345bf733be69ce3ff1ebe50171a7615be5635eb50dfa61d7e0466",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "release-name-jwt-to-rbac",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/jwt-to-rbac_template.yaml",
					"similarity_id": "b18b61b158f5590b519ba5acfb81754e754c84dec86b5fda7b207815540726f0",
					"line": 12,
					"resource_type": "ConfigMap",
					"resource_name": "jwt-to-rbac",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{jwt-to-rbac}}",
					"search_line": 12,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/jwt-to-rbac_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "jwt-to-rbac",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{jwt-to-rbac}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/jwt-to-rbac_template.yaml",
					"similarity_id": "13dd733df14a877fee100030648ead2c23c77e3c24fa47da75b6752efddbe960",
					"line": 72,
					"resource_type": "Deployment",
					"resource_name": "release-name-jwt-to-rbac",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-jwt-to-rbac}}",
					"search_line": 72,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/jwt-to-rbac_template.yaml",
					"similarity_id": "90f4f6707fef51cbeabbc0b49e9a566ec8e7e76173106638d257da9f1b5d8051",
					"line": 51,
					"resource_type": "Service",
					"resource_name": "release-name-jwt-to-rbac",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-jwt-to-rbac}}",
					"search_line": 51,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/jwt-to-rbac_template.yaml",
					"similarity_id": "26c47af612389abe5913440e145c20cd6ba65867c1937cf491fcab0116dc86f4",
					"line": 118,
					"resource_type": "Deployment",
					"resource_name": "release-name-jwt-to-rbac",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.spec.containers.name={{jwt-to-rbac}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=jwt-to-rbac has limits defined",
					"actual_value": "spec.template.spec.containers.name=jwt-to-rbac doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/jwt-to-rbac_template.yaml",
					"similarity_id": "60300d5f35f322db4b5e10a809eab5ebc97efa18d3f9da84d1c8bae5a3fa3143",
					"line": 118,
					"resource_type": "Deployment",
					"resource_name": "release-name-jwt-to-rbac",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.spec.containers.name={{jwt-to-rbac}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=jwt-to-rbac.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=jwt-to-rbac.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Cluster Admin Rolebinding With Superuser Permissions",
			"query_id": "249328b8-5f0f-409f-b1dd-029f07882e11",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Ensure that the cluster-admin role is only used where required (RBAC)",
			"description_id": "567eee7e",
			"files": [
				{
					"file_name": "templates/jwt-to-rbac_template.yaml",
					"similarity_id": "e1383fece9cb7ccb55bd83d962de8230fe28c9146dac0c3b4cdbb8099de45501",
					"line": 41,
					"resource_type": "ClusterRoleBinding",
					"resource_name": "jwt-to-rbac-binding",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{jwt-to-rbac-binding}}.roleRef.name=cluster-admin",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'jwt-to-rbac-binding' of kind 'ClusterRoleBinding' isn't binding 'cluster-admin' role with superuser permissions",
					"actual_value": "Resource name 'jwt-to-rbac-binding' of kind 'ClusterRoleBinding' is binding 'cluster-admin' role with superuser permissions"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/jwt-to-rbac_template.yaml",
					"similarity_id": "ae347c6905dd9b0d5d3c7d2c0176cae5f0f4d114734e6cd26e815559aeb4761b",
					"line": 96,
					"resource_type": "Deployment",
					"resource_name": "release-name-jwt-to-rbac",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.spec.containers.name={{jwt-to-rbac}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.spec.containers.name={{jwt-to-rbac}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.spec.containers.name={{jwt-to-rbac}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/jwt-to-rbac_template.yaml",
					"similarity_id": "cd33a2971a05e1e2b042bef44d2e191e2ba6b91efc58b2d23b6f58349aeb36b1",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "release-name-jwt-to-rbac",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.metadata",
					"search_line": 86,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{jwt-to-rbac}}",
					"actual_value": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{jwt-to-rbac}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/jwt-to-rbac_template.yaml",
					"similarity_id": "48228cc1fb04af5cf441815f2c7341bf9586bac1cf355f5def4496248037908d",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "release-name-jwt-to-rbac",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-jwt-to-rbac}}.spec.containers.name={{jwt-to-rbac}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-jwt-to-rbac}}.spec.containers.name={{jwt-to-rbac}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-jwt-to-rbac}}.spec.containers.name={{jwt-to-rbac}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/jwt-to-rbac_template.yaml",
					"similarity_id": "23646f198084eecf0ebd7b15ccd86a663d313af2f26231f001e47d2370877773",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-jwt-to-rbac",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-jwt-to-rbac}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-jwt-to-rbac}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-jwt-to-rbac}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/jwt-to-rbac_template.yaml",
					"similarity_id": "607736160da2f3434e616f3fae2757c85660cb3b15ea552cf6fb39b90380f98f",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-jwt-to-rbac",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-jwt-to-rbac}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-jwt-to-rbac}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-jwt-to-rbac}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/jwt-to-rbac_template.yaml",
					"similarity_id": "54f87fb2c184ec66b1a65e6f320305607ac699d02096f26befb2f2a9df127688",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "release-name-jwt-to-rbac",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.spec.containers.name={{jwt-to-rbac}}",
					"search_line": 97,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.spec.containers.name={{jwt-to-rbac}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-jwt-to-rbac}}.spec.template.spec.containers.name={{jwt-to-rbac}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
