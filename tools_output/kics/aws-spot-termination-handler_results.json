{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 62,
	"files_parsed": 1,
	"lines_parsed": 59,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 17,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:37:24.400237+02:00",
	"end": "2024-06-26T01:37:26.54868+02:00",
	"paths": [
		"templates/aws-spot-termination-handler_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/aws-spot-termination-handler_template.yaml",
					"similarity_id": "b6b9f7798795058166ed45042f263a624cd831aa5b1edb826d3993925924db35",
					"line": 44,
					"resource_type": "DaemonSet",
					"resource_name": "aws-spot-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{aws-spot-termination-handler}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{aws-spot-termination-handler}}.spec.template.spec.containers.name={{main}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{aws-spot-termination-handler}}.spec.template.spec.containers.name={{main}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/aws-spot-termination-handler_template.yaml",
					"similarity_id": "b57ffc134fc834e006c65bcc94d931e34d38ef592923753128283d76a8984192",
					"line": 44,
					"resource_type": "DaemonSet",
					"resource_name": "aws-spot-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{aws-spot-termination-handler}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{aws-spot-termination-handler}}.spec.template.spec.containers.name={{main}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{aws-spot-termination-handler}}.spec.template.spec.containers.name={{main}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/aws-spot-termination-handler_template.yaml",
					"similarity_id": "14828c2d761912c9cd328b44f4fb130fae1eaecacc9ef81b3b403315c569d531",
					"line": 44,
					"resource_type": "DaemonSet",
					"resource_name": "aws-spot-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{aws-spot-termination-handler}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{aws-spot-termination-handler}}.spec.template.spec.containers.name={{main}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{aws-spot-termination-handler}}.spec.template.spec.containers.name={{main}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/aws-spot-termination-handler_template.yaml",
					"similarity_id": "9ababee6b74ae7b8755fcfa2858d9ec98ca27e3cedc61a4c9b603185e938344d",
					"line": 44,
					"resource_type": "DaemonSet",
					"resource_name": "aws-spot-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{aws-spot-termination-handler}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{aws-spot-termination-handler}}.spec.template.spec.containers.name={{main}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{aws-spot-termination-handler}}.spec.template.spec.containers.name={{main}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/aws-spot-termination-handler_template.yaml",
					"similarity_id": "8494ffe4e1452211a9a58b8c6dcde22652914957f35bceeb10c0f1154cac05fb",
					"line": 44,
					"resource_type": "DaemonSet",
					"resource_name": "aws-spot-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{aws-spot-termination-handler}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{aws-spot-termination-handler}}.spec.template.spec.containers.name={{main}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{aws-spot-termination-handler}}.spec.template.spec.containers.name={{main}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/aws-spot-termination-handler_template.yaml",
					"similarity_id": "1ad76a071efbf247451114fe1ea916a9c43c6d325fcc33c3668ccdedef23308e",
					"line": 44,
					"resource_type": "DaemonSet",
					"resource_name": "aws-spot-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{aws-spot-termination-handler}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{aws-spot-termination-handler}}.spec.template.spec.containers.name={{main}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{aws-spot-termination-handler}}.spec.template.spec.containers.name={{main}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/aws-spot-termination-handler_template.yaml",
					"similarity_id": "982f2657df49a8e17d9323b7733f2f7bc4b417864b8b2fed0357905a01e23bdb",
					"line": 37,
					"resource_type": "DaemonSet",
					"resource_name": "aws-spot-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{aws-spot-termination-handler}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{aws-spot-termination-handler}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{aws-spot-termination-handler}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/aws-spot-termination-handler_template.yaml",
					"similarity_id": "e6a9e891f82a3a30854338285f78ed67736b2e6c2577a1a48744c56dc24d66d4",
					"line": 28,
					"resource_type": "DaemonSet",
					"resource_name": "aws-spot-termination-handler",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{aws-spot-termination-handler}}.namespace",
					"search_line": 28,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/aws-spot-termination-handler_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "aws-spot-termination-handler",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{aws-spot-termination-handler}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Cluster Admin Rolebinding With Superuser Permissions",
			"query_id": "249328b8-5f0f-409f-b1dd-029f07882e11",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Ensure that the cluster-admin role is only used where required (RBAC)",
			"description_id": "567eee7e",
			"files": [
				{
					"file_name": "templates/aws-spot-termination-handler_template.yaml",
					"similarity_id": "3635e21914d085b406e0f281582ea372e6870c671b6e05dac3ec8b3402a3c0a3",
					"line": 17,
					"resource_type": "ClusterRoleBinding",
					"resource_name": "aws-spot-termination-handler-rb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{aws-spot-termination-handler-rb}}.roleRef.name=cluster-admin",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'aws-spot-termination-handler-rb' of kind 'ClusterRoleBinding' isn't binding 'cluster-admin' role with superuser permissions",
					"actual_value": "Resource name 'aws-spot-termination-handler-rb' of kind 'ClusterRoleBinding' is binding 'cluster-admin' role with superuser permissions"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/aws-spot-termination-handler_template.yaml",
					"similarity_id": "23a3be9a5c943ff31bf4b842e541ffeaef03f491f9f1ad026ffd39a14576d2f2",
					"line": 46,
					"resource_type": "DaemonSet",
					"resource_name": "aws-spot-termination-handler",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{aws-spot-termination-handler}}.spec.template.spec.containers.name={{main}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{aws-spot-termination-handler}}.spec.template.spec.containers.name={{main}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{aws-spot-termination-handler}}.spec.template.spec.containers.name={{main}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/aws-spot-termination-handler_template.yaml",
					"similarity_id": "5707f1c5bf409d3f87d828a3df8e97776379806c658e970aaab440a2db0e63d2",
					"line": 34,
					"resource_type": "DaemonSet",
					"resource_name": "aws-spot-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{aws-spot-termination-handler}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{aws-spot-termination-handler}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{main}}",
					"actual_value": "metadata.name={{aws-spot-termination-handler}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{main}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/aws-spot-termination-handler_template.yaml",
					"similarity_id": "5a16adb8e5d0534e8639ba368f4bc8cb3f03ca26f109a97fb283290417538128",
					"line": 44,
					"resource_type": "DaemonSet",
					"resource_name": "aws-spot-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{aws-spot-termination-handler}}.spec.containers.name=main",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{aws-spot-termination-handler}}.spec.containers.name=main.securityContext should be set",
					"actual_value": "metadata.name={{aws-spot-termination-handler}}.spec.containers.name=main.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/aws-spot-termination-handler_template.yaml",
					"similarity_id": "5da7d837b9bbf170530af59c1a44a7833e46ca6de602ebe7eee7d8e9f59d5a31",
					"line": 28,
					"resource_type": "DaemonSet",
					"resource_name": "aws-spot-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{aws-spot-termination-handler}}",
					"search_line": 28,
					"search_value": "",
					"expected_value": "metadata.name={{aws-spot-termination-handler}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{aws-spot-termination-handler}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/aws-spot-termination-handler_template.yaml",
					"similarity_id": "9cefa8aab4870fa98085fca1de7a540e22af6c41eefbbd1c49cc5903cfae9b65",
					"line": 28,
					"resource_type": "DaemonSet",
					"resource_name": "aws-spot-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{aws-spot-termination-handler}}",
					"search_line": 28,
					"search_value": "",
					"expected_value": "metadata.name={{aws-spot-termination-handler}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{aws-spot-termination-handler}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/aws-spot-termination-handler_template.yaml",
					"similarity_id": "d3e91725a6b32770ee098f735ed4ba2f96da37e9d3745e53adda292157737a05",
					"line": 44,
					"resource_type": "DaemonSet",
					"resource_name": "aws-spot-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{aws-spot-termination-handler}}.spec.template.spec.containers.name=main",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=main has a security context",
					"actual_value": "spec.template.spec.containers.name=main does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/aws-spot-termination-handler_template.yaml",
					"similarity_id": "8fb4c4aee96caa58a9226f7145cd767cf8bc8187a5411343fbbc591dfde27654",
					"line": 44,
					"resource_type": "DaemonSet",
					"resource_name": "aws-spot-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{aws-spot-termination-handler}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{aws-spot-termination-handler}}.spec.template.spec.containers.name={{main}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{aws-spot-termination-handler}}.spec.template.spec.containers.name={{main}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
