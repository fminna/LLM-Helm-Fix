{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 191,
	"files_parsed": 1,
	"lines_parsed": 187,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 6,
		"TRACE": 0
	},
	"total_counter": 14,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:02:20.993556+02:00",
	"end": "2024-05-17T21:02:22.913202+02:00",
	"paths": [
		"templates/akeyless-secrets-injection_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/akeyless-secrets-injection_template.yaml",
					"similarity_id": "652b4c4aa25b51fbd5bc3163b245f77155af422c9d8ddd5b6300d746ae480e73",
					"line": 118,
					"resource_type": "Deployment",
					"resource_name": "release-name-akeyless-secrets-injection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-akeyless-secrets-injection}}.spec.template.spec.containers.name={{akeyless-secrets-injection}}.volumeMounts.name={{serving-cert}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-akeyless-secrets-injection}}.spec.template.spec.containers.name={{akeyless-secrets-injection}}.volumeMounts.name={{serving-cert}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-akeyless-secrets-injection}}.spec.template.spec.containers.name={{akeyless-secrets-injection}}.volumeMounts.name={{serving-cert}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/akeyless-secrets-injection_template.yaml",
					"similarity_id": "ac5b39712b25cac5749a3984a002b96f7e9e893c57b10bf4ea774f6cf8e62f69",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-akeyless-secrets-injection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-akeyless-secrets-injection}}.spec.template.spec.containers.name={{akeyless-secrets-injection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-akeyless-secrets-injection}}.spec.template.spec.containers.name={{akeyless-secrets-injection}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-akeyless-secrets-injection}}.spec.template.spec.containers.name={{akeyless-secrets-injection}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/akeyless-secrets-injection_template.yaml",
					"similarity_id": "20a609890166e13e93a6cc6eafa2e64fb60b05c55f41c26e1bfd5a361be5f373",
					"line": 119,
					"resource_type": "Deployment",
					"resource_name": "release-name-akeyless-secrets-injection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-akeyless-secrets-injection}}.spec.template.spec.containers.name={{akeyless-secrets-injection}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-akeyless-secrets-injection}}.spec.template.spec.containers.name={{akeyless-secrets-injection}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-akeyless-secrets-injection}}.spec.template.spec.containers.name={{akeyless-secrets-injection}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/akeyless-secrets-injection_template.yaml",
					"similarity_id": "a1e64db11acb43d9b1c2b190356ce9a907c0c623098cd00ae7c762a0b02315b6",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-akeyless-secrets-injection",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-akeyless-secrets-injection}}.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-akeyless-secrets-injection}}.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{release-name-akeyless-secrets-injection}}.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/akeyless-secrets-injection_template.yaml",
					"similarity_id": "cd056504dcccdf788dd9dea8fb840520ae19d1c9cd7b93c84491d36fa0a7bb02",
					"line": 42,
					"resource_type": "Deployment",
					"resource_name": "release-name-akeyless-secrets-injection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-akeyless-secrets-injection}}",
					"search_line": 42,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/akeyless-secrets-injection_template.yaml",
					"similarity_id": "8c0aea17f3c1306c1a1bcef958c07ffdd33924d69e6a3ab4ab681cebc7b71c1a",
					"line": 20,
					"resource_type": "Service",
					"resource_name": "release-name-akeyless-secrets-injection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-akeyless-secrets-injection}}",
					"search_line": 20,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/akeyless-secrets-injection_template.yaml",
					"similarity_id": "faeaace0de0e24386a5925a9109835697e67973498c7afc586226869c1e6d28a",
					"line": 8,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-akeyless-secrets-injection",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-akeyless-secrets-injection}}.namespace",
					"search_line": 8,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/akeyless-secrets-injection_template.yaml",
					"similarity_id": "2df4b1a7b4b8a209d2e8330bbbc4958210a76a0747877b29d7b441fc93ad1121",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "release-name-akeyless-secrets-injection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-akeyless-secrets-injection}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-akeyless-secrets-injection is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=release-name-akeyless-secrets-injection is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/akeyless-secrets-injection_template.yaml",
					"similarity_id": "9df5bb8467892cf27e9670ae8fa7415eb2f4d03d26c177d794ee9a7ff998b9ef",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "release-name-akeyless-secrets-injection",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-akeyless-secrets-injection}}.spec.template.spec.containers.name={{akeyless-secrets-injection}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-akeyless-secrets-injection}}.spec.template.spec.containers.name={{akeyless-secrets-injection}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-akeyless-secrets-injection}}.spec.template.spec.containers.name={{akeyless-secrets-injection}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/akeyless-secrets-injection_template.yaml",
					"similarity_id": "1951108008e1eae5bf0a32eb83e3b67734261ea5ce7ed5e6da7399771f2c884b",
					"line": 60,
					"resource_type": "Deployment",
					"resource_name": "release-name-akeyless-secrets-injection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-akeyless-secrets-injection}}.spec.template.metadata",
					"search_line": 60,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-akeyless-secrets-injection}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{akeyless-secrets-injection}}",
					"actual_value": "metadata.name={{release-name-akeyless-secrets-injection}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{akeyless-secrets-injection}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/akeyless-secrets-injection_template.yaml",
					"similarity_id": "5ef0c0e962e409095ee5946202861a2d2a0c08edded6d0149aa92c5455cf9a19",
					"line": 119,
					"resource_type": "Deployment",
					"resource_name": "release-name-akeyless-secrets-injection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-akeyless-secrets-injection}}.spec.containers.name={{akeyless-secrets-injection}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-akeyless-secrets-injection}}.spec.containers.name={{akeyless-secrets-injection}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-akeyless-secrets-injection}}.spec.containers.name={{akeyless-secrets-injection}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/akeyless-secrets-injection_template.yaml",
					"similarity_id": "63cff1c36465206e6a3a9a621af3481073b819ba34f43a6119c19e6c772a8b1f",
					"line": 7,
					"resource_type": "Deployment",
					"resource_name": "release-name-akeyless-secrets-injection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-akeyless-secrets-injection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-akeyless-secrets-injection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-akeyless-secrets-injection}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/akeyless-secrets-injection_template.yaml",
					"similarity_id": "52b2e3befcdeb3a69646bb41328ba503ea46ecc239bb2b27bf88cdaccd9006b2",
					"line": 7,
					"resource_type": "Deployment",
					"resource_name": "release-name-akeyless-secrets-injection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-akeyless-secrets-injection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-akeyless-secrets-injection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-akeyless-secrets-injection}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/akeyless-secrets-injection_template.yaml",
					"similarity_id": "c37edc2ed9f70e16461957227783c76eba0159da8615d5f9693bd43f7942436a",
					"line": 119,
					"resource_type": "Deployment",
					"resource_name": "release-name-akeyless-secrets-injection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-akeyless-secrets-injection}}.spec.template.spec.containers.name={{akeyless-secrets-injection}}",
					"search_line": 119,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-akeyless-secrets-injection}}.spec.template.spec.containers.name={{akeyless-secrets-injection}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-akeyless-secrets-injection}}.spec.template.spec.containers.name={{akeyless-secrets-injection}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
