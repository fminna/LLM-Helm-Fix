{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 98,
	"files_parsed": 1,
	"lines_parsed": 97,
	"lines_ignored": 1,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 17,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:05:50.698653+02:00",
	"end": "2024-06-26T02:05:52.763718+02:00",
	"paths": [
		"templates/postgres-connector_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/postgres-connector_template.yaml",
					"similarity_id": "8f97d713049fabd4f70ef178684d15b7fe6a5b53a94cf496f10c22239ba96539",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-connector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.containers.name={{connector}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.containers.name={{connector}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.containers.name={{connector}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/postgres-connector_template.yaml",
					"similarity_id": "dd701ffdc11cd8bb1ffea44398e135ede1c7357e6b6d55b1c2acfb50ac76c1cf",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-connector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.containers.name={{connector}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.containers.name={{connector}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.containers.name={{connector}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/postgres-connector_template.yaml",
					"similarity_id": "4526be1fa9c5c91e1fce79f572213145797866d840e08ff9961570b04448fa13",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-connector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.containers.name={{connector}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.containers.name={{connector}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.containers.name={{connector}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/postgres-connector_template.yaml",
					"similarity_id": "2e37c77bf6647e60e92a1bdc11b6f1610eebba2b9d145d71f39609111add706c",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-connector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.containers.name={{connector}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.containers.name={{connector}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.containers.name={{connector}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/postgres-connector_template.yaml",
					"similarity_id": "0126f4a76a5d9301cb7539f5b57410e47011162a2ed8fb49a4b4af790d839d75",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-connector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.containers.name={{connector}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.containers.name={{connector}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.containers.name={{connector}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/postgres-connector_template.yaml",
					"similarity_id": "0541998f599ea0c4bc2ce5d9e582522b7f37c2727f7dbc5564ed296efe44ad0e",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-connector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.containers.name={{connector}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.containers.name={{connector}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.containers.name={{connector}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/postgres-connector_template.yaml",
					"similarity_id": "e27460d8b0cdbc83d62fe3ecb574d5119c2a7f2abed8971dd07882c44d5556e5",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-connector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.containers.name={{connector}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.containers.name={{connector}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.containers.name={{connector}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/postgres-connector_template.yaml",
					"similarity_id": "9e874d203bef42fc2eefa6d5e8acbe9dcb38f2b5006643d53152b618f396f2bb",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-connector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-connector}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/postgres-connector_template.yaml",
					"similarity_id": "8c0aea17f3c1306c1a1bcef958c07ffdd33924d69e6a3ab4ab681cebc7b71c1a",
					"line": 20,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-connector",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgres-connector}}.namespace",
					"search_line": 20,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/postgres-connector_template.yaml",
					"similarity_id": "c0dfa5087834aaf6834f4619b09285ff308373bea0dd0c24ba3797627d0c9dd0",
					"line": 84,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-connector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.containers.name={{connector}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=connector has limits defined",
					"actual_value": "spec.template.spec.containers.name=connector doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/postgres-connector_template.yaml",
					"similarity_id": "403f81b122b537995123bb4a507354c9fa2bc8b66eda9b45706e5e207535e2b2",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-connector",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.containers.name={{connector}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.containers.name={{connector}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.containers.name={{connector}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/postgres-connector_template.yaml",
					"similarity_id": "12bbf73574dca983d2bbc4553516bbb6d645e8037f96bb1a9418c4e40416432b",
					"line": 30,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-connector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-connector}}.spec.template.metadata",
					"search_line": 30,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-connector}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{connector}}",
					"actual_value": "metadata.name={{release-name-postgres-connector}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{connector}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/postgres-connector_template.yaml",
					"similarity_id": "6ff6af9f0b5ca4b6350edc60ad082de62e9f4039d0b101620d099feb64134848",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-connector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-connector}}.spec.containers.name=connector",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-connector}}.spec.containers.name=connector.securityContext should be set",
					"actual_value": "metadata.name={{release-name-postgres-connector}}.spec.containers.name=connector.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/postgres-connector_template.yaml",
					"similarity_id": "862ea9d93698618101f0110015d8182cf80a9f7e950ee097c0a8c04226718f71",
					"line": 20,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-connector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-connector}}",
					"search_line": 20,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-connector}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-postgres-connector}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/postgres-connector_template.yaml",
					"similarity_id": "aa6ae155240b773c81a02d4e42ff24f9497afe32281215bb8a70f45e8e958bac",
					"line": 20,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-connector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-connector}}",
					"search_line": 20,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-connector}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-postgres-connector}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/postgres-connector_template.yaml",
					"similarity_id": "b49b7f6bd12d8327170667ff7b8e83e94e94d01f1fd0356d22038af1fbf4c173",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-connector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.containers.name=connector",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=connector has a security context",
					"actual_value": "spec.template.spec.containers.name=connector does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/postgres-connector_template.yaml",
					"similarity_id": "92713d73789aa7dda2626ff3676cc3bb0c6d5d1b1623ef11a4d2bd4aa4eb36b3",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-connector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.containers.name={{connector}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.containers.name={{connector}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-postgres-connector}}.spec.template.spec.containers.name={{connector}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
