{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 58,
	"files_parsed": 1,
	"lines_parsed": 51,
	"lines_ignored": 7,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 6,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 15,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:51:37.116097+02:00",
	"end": "2024-06-26T00:51:39.163245+02:00",
	"paths": [
		"templates/proto-app_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/proto-app_template.yaml",
					"similarity_id": "3bfe69fa9250af4d338fde88cae2c1dc42dd78bdc9095ab263c77c90c35cd5f4",
					"line": 21,
					"resource_type": "Service",
					"resource_name": "proto-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proto-app}}.spec.template.spec.containers.name={{user-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{proto-app}}.spec.template.spec.containers.name={{user-container}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{proto-app}}.spec.template.spec.containers.name={{user-container}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/proto-app_template.yaml",
					"similarity_id": "0090df78b2b70e09f1c48ae6c5ce6573de0eb0d86ef85fd16b2d8b591e5a2fd4",
					"line": 21,
					"resource_type": "Service",
					"resource_name": "proto-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proto-app}}.spec.template.spec.containers.name={{user-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{proto-app}}.spec.template.spec.containers.name={{user-container}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{proto-app}}.spec.template.spec.containers.name={{user-container}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/proto-app_template.yaml",
					"similarity_id": "316a3e0a20cca045222881a463863617928c7fe9471769df59d1b9b50f8b37da",
					"line": 21,
					"resource_type": "Service",
					"resource_name": "proto-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proto-app}}.spec.template.spec.containers.name={{user-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{proto-app}}.spec.template.spec.containers.name={{user-container}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{proto-app}}.spec.template.spec.containers.name={{user-container}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/proto-app_template.yaml",
					"similarity_id": "2bcd6ec4c7cabf1018f4bbf0e3036940df75bf9323558c47e05b534a20d269cf",
					"line": 21,
					"resource_type": "Service",
					"resource_name": "proto-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proto-app}}.spec.template.spec.containers.name={{user-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{proto-app}}.spec.template.spec.containers.name={{user-container}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{proto-app}}.spec.template.spec.containers.name={{user-container}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/proto-app_template.yaml",
					"similarity_id": "0bab6cbeb1933d8a149b83d57ab3f6a6264b1a61c188dc885373ad93d02dd2ea",
					"line": 21,
					"resource_type": "Service",
					"resource_name": "proto-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proto-app}}.spec.template.spec.containers.name={{user-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{proto-app}}.spec.template.spec.containers.name={{user-container}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{proto-app}}.spec.template.spec.containers.name={{user-container}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/proto-app_template.yaml",
					"similarity_id": "11bcb66fad4a315b4dd10cdd0bd7c51ece5ef5faebeaac62736fd326b3a47644",
					"line": 21,
					"resource_type": "Service",
					"resource_name": "proto-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proto-app}}.spec.template.spec.containers.name={{user-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{proto-app}}.spec.template.spec.containers.name={{user-container}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{proto-app}}.spec.template.spec.containers.name={{user-container}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/proto-app_template.yaml",
					"similarity_id": "afd307eee4a312c958002db5a8c505f0d2b179abbaf8763f6dfbacd0029279e7",
					"line": 21,
					"resource_type": "Service",
					"resource_name": "proto-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proto-app}}.spec.template.spec.containers.name={{user-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{proto-app}}.spec.template.spec.containers.name={{user-container}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{proto-app}}.spec.template.spec.containers.name={{user-container}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/proto-app_template.yaml",
					"similarity_id": "ee4fbde3785cb3fb22b2068059bf36ccaab8c2726190da3d79b176dad74c355f",
					"line": 17,
					"resource_type": "Service",
					"resource_name": "proto-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proto-app}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{proto-app}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{proto-app}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/proto-app_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "proto-app",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{proto-app}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/proto-app_template.yaml",
					"similarity_id": "99f3fdf6051a67d16ed10a85e926cbb478a95d5770f4a5604b84ab323ee0bcd0",
					"line": 21,
					"resource_type": "Service",
					"resource_name": "proto-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proto-app}}.spec.template.spec.containers.name=user-container",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=user-container has resources defined",
					"actual_value": "spec.template.spec.containers.name=user-container doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/proto-app_template.yaml",
					"similarity_id": "81b9709b7b9bd0487a1557b8ef5179dc0717e3626e08a852764b6bc052653374",
					"line": 21,
					"resource_type": "Service",
					"resource_name": "proto-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proto-app}}.spec.template.spec.containers.name=user-container",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=user-container should have resources defined",
					"actual_value": "spec.template.spec.containers.name=user-container doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/proto-app_template.yaml",
					"similarity_id": "001a56eaecf0e7a1c464e579cb22a0026b2f5500843c289102ce43335d75d1de",
					"line": 10,
					"resource_type": "Service",
					"resource_name": "proto-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proto-app}}.spec.template.metadata",
					"search_line": 10,
					"search_value": "",
					"expected_value": "metadata.name={{proto-app}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{user-container}}",
					"actual_value": "metadata.name={{proto-app}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{user-container}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/proto-app_template.yaml",
					"similarity_id": "62d4f4419be30210002f6f6690a25b2d703a4f870786f305eb0c592d6a59c1bb",
					"line": 21,
					"resource_type": "Service",
					"resource_name": "proto-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proto-app}}.spec.containers.name=user-container",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{proto-app}}.spec.containers.name=user-container.securityContext should be set",
					"actual_value": "metadata.name={{proto-app}}.spec.containers.name=user-container.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/proto-app_template.yaml",
					"similarity_id": "9be2d509a18282557369863085cbc7537e97e6e9038d2b8beb90cf37dd3c582c",
					"line": 21,
					"resource_type": "Service",
					"resource_name": "proto-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proto-app}}.spec.template.spec.containers.name=user-container",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=user-container has a security context",
					"actual_value": "spec.template.spec.containers.name=user-container does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/proto-app_template.yaml",
					"similarity_id": "41a88d532d7d60d336cd25cd7ae29a1402ec56c8b779b806f56f8468e1a3bb36",
					"line": 21,
					"resource_type": "Service",
					"resource_name": "proto-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proto-app}}.spec.template.spec.containers.name={{user-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{proto-app}}.spec.template.spec.containers.name={{user-container}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{proto-app}}.spec.template.spec.containers.name={{user-container}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
