{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 73,
	"files_parsed": 1,
	"lines_parsed": 71,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 18,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:44:19.571034+02:00",
	"end": "2024-06-26T02:44:21.625631+02:00",
	"paths": [
		"templates/tavern_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/tavern_template.yaml",
					"similarity_id": "af6a2b1023679ce30b4008bf57788b5674c21f25b41e5eac9188712fa98b9585",
					"line": 42,
					"resource_type": "Job",
					"resource_name": "release-name-tavern",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tavern}}.spec.template.spec.containers.name={{tavern}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tavern}}.spec.template.spec.containers.name={{tavern}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-tavern}}.spec.template.spec.containers.name={{tavern}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/tavern_template.yaml",
					"similarity_id": "b791351ddcddf8a119e856f3d1499dea1105d4aa7b77a2dac2815a87e331b160",
					"line": 38,
					"resource_type": "Job",
					"resource_name": "release-name-tavern",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-tavern}}.spec.template.spec.securityContext.runAsUser=1500",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tavern}}.spec.template.spec.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-tavern}}.spec.template.spec.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/tavern_template.yaml",
					"similarity_id": "01066116e31218f76201719f9b73cefcf2b9c10437ff3409d0b327af55b04732",
					"line": 42,
					"resource_type": "Job",
					"resource_name": "release-name-tavern",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tavern}}.spec.template.spec.containers.name={{tavern}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tavern}}.spec.template.spec.containers.name={{tavern}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-tavern}}.spec.template.spec.containers.name={{tavern}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/tavern_template.yaml",
					"similarity_id": "0c3b0439cc1bcafdafceafdbfb80993da19aebafc90e5374248943442cab3ab1",
					"line": 42,
					"resource_type": "Job",
					"resource_name": "release-name-tavern",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tavern}}.spec.template.spec.containers.name={{tavern}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tavern}}.spec.template.spec.containers.name={{tavern}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-tavern}}.spec.template.spec.containers.name={{tavern}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/tavern_template.yaml",
					"similarity_id": "6fb23792e0074f459b9999de78d35de12f041e6d89d0ebfd56b2142516c0d3cc",
					"line": 42,
					"resource_type": "Job",
					"resource_name": "release-name-tavern",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tavern}}.spec.template.spec.containers.name={{tavern}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tavern}}.spec.template.spec.containers.name={{tavern}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-tavern}}.spec.template.spec.containers.name={{tavern}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/tavern_template.yaml",
					"similarity_id": "15e64d477b4016ed618b0c07463b91942fe1a2a717b6b4cddf14a499c890cfb9",
					"line": 42,
					"resource_type": "Job",
					"resource_name": "release-name-tavern",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tavern}}.spec.template.spec.containers.name={{tavern}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tavern}}.spec.template.spec.containers.name={{tavern}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-tavern}}.spec.template.spec.containers.name={{tavern}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/tavern_template.yaml",
					"similarity_id": "29574b6580e680110db586fa72a6e64a3ab09af57107779e706a6e116dd76ee8",
					"line": 33,
					"resource_type": "Job",
					"resource_name": "release-name-tavern",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tavern}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tavern}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-tavern}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/tavern_template.yaml",
					"similarity_id": "6b3dadf62e36f9de05061ac5d18116f0869dad41a0e62154151afe7797bbd6ac",
					"line": 21,
					"resource_type": "Job",
					"resource_name": "release-name-tavern",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Job}}.metadata.name={{release-name-tavern}}",
					"search_line": 21,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/tavern_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Secret",
					"resource_name": "release-name-vanilla-test",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-vanilla-test}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/tavern_template.yaml",
					"similarity_id": "156cbbe24e3659ae5728c178a22010f9190ca1931e47c1b6777d30b17ccaa298",
					"line": 42,
					"resource_type": "Job",
					"resource_name": "release-name-tavern",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tavern}}.spec.template.spec.containers.name=tavern",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=tavern has resources defined",
					"actual_value": "spec.template.spec.containers.name=tavern doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/tavern_template.yaml",
					"similarity_id": "cd80b17b5ac1434eddfc8d5b41a552d3b17a2d6a9d104c81b49464e55e5cb824",
					"line": 42,
					"resource_type": "Job",
					"resource_name": "release-name-tavern",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tavern}}.spec.template.spec.containers.name=tavern",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=tavern should have resources defined",
					"actual_value": "spec.template.spec.containers.name=tavern doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/tavern_template.yaml",
					"similarity_id": "80e91d111e76ed438d646de756f3a3722c10891283f9bbcf1c36236b331d2878",
					"line": 44,
					"resource_type": "Job",
					"resource_name": "release-name-tavern",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-tavern}}.spec.template.spec.containers.name={{tavern}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tavern}}.spec.template.spec.containers.name={{tavern}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-tavern}}.spec.template.spec.containers.name={{tavern}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/tavern_template.yaml",
					"similarity_id": "b2b7c3588bcfa5b41a507acd3386032ac0c4b0ab4f3858aef4333befc8e92250",
					"line": 28,
					"resource_type": "Job",
					"resource_name": "release-name-tavern",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tavern}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tavern}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{tavern}}",
					"actual_value": "metadata.name={{release-name-tavern}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{tavern}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/tavern_template.yaml",
					"similarity_id": "a097295b7682aded66d218b6948645b3de49516e65f92ecdbc6601b01222d45c",
					"line": 42,
					"resource_type": "Job",
					"resource_name": "release-name-tavern",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tavern}}.spec.containers.name=tavern",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tavern}}.spec.containers.name=tavern.securityContext should be set",
					"actual_value": "metadata.name={{release-name-tavern}}.spec.containers.name=tavern.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/tavern_template.yaml",
					"similarity_id": "43ddf9a8d8f6355b5526d621f15d993ee481f213d3352c078259fe6faab52a85",
					"line": 21,
					"resource_type": "Job",
					"resource_name": "release-name-tavern",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tavern}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tavern}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-tavern}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/tavern_template.yaml",
					"similarity_id": "64ce40c865c01acedd66604a6b6dba437cdb11f06cecce5c4ac6a675580b8754",
					"line": 21,
					"resource_type": "Job",
					"resource_name": "release-name-tavern",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tavern}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tavern}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-tavern}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/tavern_template.yaml",
					"similarity_id": "ddada8b1966c1a371205d799bfd0fdd977f0debbde8dfb1c155716e67c3abe63",
					"line": 42,
					"resource_type": "Job",
					"resource_name": "release-name-tavern",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tavern}}.spec.template.spec.containers.name=tavern",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=tavern has a security context",
					"actual_value": "spec.template.spec.containers.name=tavern does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/tavern_template.yaml",
					"similarity_id": "b878f68a41dbf530d99f7ac3deb33c1099ff58fe28d93534d410afb4001cb58e",
					"line": 42,
					"resource_type": "Job",
					"resource_name": "release-name-tavern",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tavern}}.spec.template.spec.containers.name={{tavern}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tavern}}.spec.template.spec.containers.name={{tavern}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-tavern}}.spec.template.spec.containers.name={{tavern}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
