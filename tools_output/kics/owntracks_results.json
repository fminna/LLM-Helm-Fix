{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 301,
	"files_parsed": 1,
	"lines_parsed": 296,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 4,
		"TRACE": 0
	},
	"total_counter": 15,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:56:30.847209+02:00",
	"end": "2024-05-17T23:56:32.79919+02:00",
	"paths": [
		"templates/owntracks_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/owntracks_template.yaml",
					"similarity_id": "24eecda7515556d59542bdf00758851eefe2eca19654218212e3a2dd22d34994",
					"line": 216,
					"resource_type": "Deployment",
					"resource_name": "release-name-owntracks",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-owntracks}}.spec.template.spec.containers.name={{release-name-owntracks}}.volumeMounts.name={{varrun}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-owntracks}}.spec.template.spec.containers.name={{release-name-owntracks}}.volumeMounts.name={{varrun}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-owntracks}}.spec.template.spec.containers.name={{release-name-owntracks}}.volumeMounts.name={{varrun}}.readOnly is false"
				},
				{
					"file_name": "templates/owntracks_template.yaml",
					"similarity_id": "91ec6c886a21b29add41ecc8e61e981cb3e8871819e85c6f19de95277e99608f",
					"line": 201,
					"resource_type": "Deployment",
					"resource_name": "release-name-owntracks",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-owntracks}}.spec.template.spec.containers.name={{release-name-owntracks}}.volumeMounts.name={{devshm}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-owntracks}}.spec.template.spec.containers.name={{release-name-owntracks}}.volumeMounts.name={{devshm}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-owntracks}}.spec.template.spec.containers.name={{release-name-owntracks}}.volumeMounts.name={{devshm}}.readOnly is false"
				},
				{
					"file_name": "templates/owntracks_template.yaml",
					"similarity_id": "8da6e8cb6392f2e8eb913871a0badb12ed9977be874d764aea48d33f25f574c3",
					"line": 213,
					"resource_type": "Deployment",
					"resource_name": "release-name-owntracks",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-owntracks}}.spec.template.spec.containers.name={{release-name-owntracks}}.volumeMounts.name={{varlogs}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-owntracks}}.spec.template.spec.containers.name={{release-name-owntracks}}.volumeMounts.name={{varlogs}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-owntracks}}.spec.template.spec.containers.name={{release-name-owntracks}}.volumeMounts.name={{varlogs}}.readOnly is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/owntracks_template.yaml",
					"similarity_id": "1da54363a754240ffaf6e82e12953499006a5e32b0530e1f8e31db1519b7a2cd",
					"line": 253,
					"resource_type": "Deployment",
					"resource_name": "release-name-owntracks",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-owntracks}}.spec.template.spec.containers.name={{release-name-owntracks}}.securityContext.runAsUser=568",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-owntracks}}.spec.template.spec.containers.name={{release-name-owntracks}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-owntracks}}.spec.template.spec.containers.name={{release-name-owntracks}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/owntracks_template.yaml",
					"similarity_id": "e63655551f9cfc8b80092d7963c5d4cd066df1908aaaa40b5e537f99e0660e79",
					"line": 74,
					"resource_type": "Service",
					"resource_name": "release-name-owntracks",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-owntracks}}.namespace",
					"search_line": 74,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/owntracks_template.yaml",
					"similarity_id": "faeaace0de0e24386a5925a9109835697e67973498c7afc586226869c1e6d28a",
					"line": 8,
					"resource_type": "Secret",
					"resource_name": "release-name-owntracks-secret",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-owntracks-secret}}.namespace",
					"search_line": 8,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/owntracks_template.yaml",
					"similarity_id": "049009b4f284758e9e351b3a22557ea5c262618faf725679a663b892e34ce065",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "release-name-owntracks",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-owntracks}}.namespace",
					"search_line": 103,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/owntracks_template.yaml",
					"similarity_id": "c6536d4e7f15145befa3939e679190b9202398f77967614720b008985fdd5049",
					"line": 136,
					"resource_type": "Deployment",
					"resource_name": "release-name-owntracks",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-owntracks}}.spec.template.metadata",
					"search_line": 136,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-owntracks}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-owntracks}}",
					"actual_value": "metadata.name={{release-name-owntracks}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-owntracks}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/owntracks_template.yaml",
					"similarity_id": "35fc32878d67e7c43bed79bc92d3f6a39d1d537205c7c40533d7c4d38da73e72",
					"line": 52,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-owntracks-store",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-owntracks-store}}",
					"search_line": 52,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-owntracks-store}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-owntracks-store}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/owntracks_template.yaml",
					"similarity_id": "320a077b68c06f1183f43065e943f2b8987c435046ac5d1b037071bfb4af6a83",
					"line": 30,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-owntracks-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-owntracks-config}}",
					"search_line": 30,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-owntracks-config}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-owntracks-config}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/owntracks_template.yaml",
					"similarity_id": "7d2171a74be3ed9333f7c11bd8b105b776342170d039d56c91fab1d3ba1bc50e",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "release-name-owntracks",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-owntracks}}",
					"search_line": 103,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-owntracks}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-owntracks}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/owntracks_template.yaml",
					"similarity_id": "515afcfcc393a18aeb44ae8408c3e424e79191b6e00aeb69000a74e415e41ec5",
					"line": 30,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-owntracks-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-owntracks-config}}",
					"search_line": 30,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-owntracks-config}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-owntracks-config}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/owntracks_template.yaml",
					"similarity_id": "2476557258dfba6119e1772cbb837a8cd144313944de4d8eb28a25d7126da637",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "release-name-owntracks",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-owntracks}}",
					"search_line": 103,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-owntracks}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-owntracks}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/owntracks_template.yaml",
					"similarity_id": "de5a2cdcf018b279e1b044d1b8c6b6f4f807c9e6649c75116155cd11474ba4f5",
					"line": 52,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-owntracks-store",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-owntracks-store}}",
					"search_line": 52,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-owntracks-store}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-owntracks-store}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/owntracks_template.yaml",
					"similarity_id": "d6e0c9fb810aa8b9b76dc79ffd21b42cb79f922b37419b90fc44b2b7317a9c9e",
					"line": 264,
					"resource_type": "Deployment",
					"resource_name": "release-name-owntracks",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-owntracks}}.spec.template.spec.containers.name={{release-name-owntracks}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{release-name-owntracks}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{release-name-owntracks}}.envFrom.secretRef' is defined"
				}
			]
		}
	]
}
