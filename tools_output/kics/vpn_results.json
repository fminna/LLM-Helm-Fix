{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 131,
	"files_parsed": 1,
	"lines_parsed": 127,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:25:38.931889+02:00",
	"end": "2024-05-17T22:25:40.846609+02:00",
	"paths": [
		"templates/vpn_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Is Privileged",
			"query_id": "dd29336b-fe57-445b-a26e-e6aa867ae609",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/#privileged-mode-for-containers",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Privileged containers lack essential security restrictions and should be avoided by removing the 'privileged' flag or by changing its value to false",
			"description_id": "55f59030",
			"files": [
				{
					"file_name": "templates/vpn_template.yaml",
					"similarity_id": "c398079cd755dea647a3602b6e183185460f38c9b7aecd90639c3394a992b291",
					"line": 130,
					"resource_type": "Deployment",
					"resource_name": "release-name-vpn-api",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}.securityContext.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}.securityContext.privileged is unset or false",
					"actual_value": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}.securityContext.privileged is true"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/vpn_template.yaml",
					"similarity_id": "2adacad8c347013950387b158ab48808b0e3cbfc08c7807976269d9a2ea9885c",
					"line": 125,
					"resource_type": "Deployment",
					"resource_name": "release-name-vpn-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}",
					"search_line": 125,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/vpn_template.yaml",
					"similarity_id": "f1b7941f996c6ab31ddd43ad2b8221f4c1cf9c7eec288803b904755bda07cf12",
					"line": 125,
					"resource_type": "Deployment",
					"resource_name": "release-name-vpn-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}",
					"search_line": 125,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/vpn_template.yaml",
					"similarity_id": "7b77a2e0d3fdcbdfddae7d58233c463072c6743e37a627ae8623b82b58f2e554",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-vpn-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Containers With Added Capabilities",
			"query_id": "19ebaa28-fc86-4a58-bcfa-015c9e22fe40",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not have extra capabilities allowed",
			"description_id": "719acefd",
			"files": [
				{
					"file_name": "templates/vpn_template.yaml",
					"similarity_id": "9adbe64c07b19113e11b0b2f0a4a930ee0ad68350a306e2af3704c16ebb2a1ee",
					"line": 127,
					"resource_type": "Deployment",
					"resource_name": "release-name-vpn-api",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}.securityContext.capabilities.add",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}} has no capability added other than NET_BIND_SERVICE",
					"actual_value": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}} has a capability added other than NET_BIND_SERVICE"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/vpn_template.yaml",
					"similarity_id": "8a1f1a065bf2fcaa16c5f729932bca130b3745b05a778035e3bab3221b4dcf4f",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-vpn-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/vpn_template.yaml",
					"similarity_id": "781b03ae92c71c89804c0cb605fb9412c0b41448acb8046a1e98cd93282fbba4",
					"line": 126,
					"resource_type": "Deployment",
					"resource_name": "release-name-vpn-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}",
					"search_line": 126,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/vpn_template.yaml",
					"similarity_id": "33100bebb4b9450ba18e1d9060143db2ded12c7e7698ed5ea0b2970706d1e7b2",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-vpn-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/vpn_template.yaml",
					"similarity_id": "440c30384493af43d7209d69ee68a56bec7ac5e44b7fefe592b16e9e76a45c17",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-vpn-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/vpn_template.yaml",
					"similarity_id": "3dd98211f9fe30ca910774c4780edeff2f60f4edd12555e928aa3207e1569511",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "release-name-vpn-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vpn-api}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vpn-api}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-vpn-api}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/vpn_template.yaml",
					"similarity_id": "6da7878077dc4c1a53976921c39692ae6269c99a07fabc1063f065ed87e09ef9",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "release-name-vpn-api",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vpn-api}}.namespace",
					"search_line": 43,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/vpn_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "Service",
					"resource_name": "release-name-vpn-api",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vpn-api}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/vpn_template.yaml",
					"similarity_id": "4865562da86e5a2567f970bfe568ed72311dee778a5e50ea7e8e95e37ca91d22",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-vpn-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=api has limits defined",
					"actual_value": "spec.template.spec.containers.name=api doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/vpn_template.yaml",
					"similarity_id": "a66b116f5c31f7a37207e3465308659d8a4a5740cf44f2f1f60e8cdb9dd31727",
					"line": 84,
					"resource_type": "Deployment",
					"resource_name": "release-name-vpn-api",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/vpn_template.yaml",
					"similarity_id": "a1d0af34a387755be0f479273b65315357a58e9ff7ecd05fd7aa04463680b035",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-vpn-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vpn-api}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vpn-api}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{api}}",
					"actual_value": "metadata.name={{release-name-vpn-api}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{api}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/vpn_template.yaml",
					"similarity_id": "096ae5f3450df40de55bc0c5df468d77b08cb619c011b36c2c302bc071de9afa",
					"line": 126,
					"resource_type": "Deployment",
					"resource_name": "release-name-vpn-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vpn-api}}.spec.containers.name={{api}}.securityContext.capabilities",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers[api].securityContext.capabilities.drop should be defined",
					"actual_value": "spec.containers[api].securityContext.capabilities.drop is not defined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/vpn_template.yaml",
					"similarity_id": "f1a7d4b2eae3b28c2e52ebbf9c9a640af0beb2ab75126f20fa287879bbd65bb7",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "release-name-vpn-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vpn-api}}",
					"search_line": 43,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vpn-api}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-vpn-api}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/vpn_template.yaml",
					"similarity_id": "4e24c2fe5773f11cd6a50a8d46812ddf618cf0a9091e85e552088f9757043dce",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "release-name-vpn-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vpn-api}}",
					"search_line": 43,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vpn-api}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-vpn-api}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/vpn_template.yaml",
					"similarity_id": "d37300bcd2d77222f75265689dcf839163ce874d36234cddb645116ca71e65e5",
					"line": 125,
					"resource_type": "Deployment",
					"resource_name": "release-name-vpn-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}",
					"search_line": 125,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-vpn-api}}.spec.template.spec.containers.name={{api}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/vpn_template.yaml",
					"similarity_id": "8f51f311317cd860b4d5cea0ec0941d0a608505a0f458460f894f686096728ba",
					"line": 20,
					"resource_type": "Service",
					"resource_name": "release-name-vpn-api",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vpn-api}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
