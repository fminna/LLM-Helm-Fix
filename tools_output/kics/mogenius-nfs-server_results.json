{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 36,
	"files_parsed": 1,
	"lines_parsed": 35,
	"lines_ignored": 1,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 18,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:41:41.614941+02:00",
	"end": "2024-05-17T23:41:43.490136+02:00",
	"paths": [
		"templates/mogenius-nfs-server_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Is Privileged",
			"query_id": "dd29336b-fe57-445b-a26e-e6aa867ae609",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/#privileged-mode-for-containers",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Privileged containers lack essential security restrictions and should be avoided by removing the 'privileged' flag or by changing its value to false",
			"description_id": "55f59030",
			"files": [
				{
					"file_name": "templates/mogenius-nfs-server_template.yaml",
					"similarity_id": "740f2ca13c0494745bfda74693fe60b83bec02e263fe965a5b301aff239db243",
					"line": 28,
					"resource_type": "Deployment",
					"resource_name": "mogenius-nfs-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}.securityContext.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}.securityContext.privileged is unset or false",
					"actual_value": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}.securityContext.privileged is true"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/mogenius-nfs-server_template.yaml",
					"similarity_id": "4174b9e4eecbc8714ef4cc1376566a9af1f3c0299f6d76b219772578c8e47460",
					"line": 27,
					"resource_type": "Deployment",
					"resource_name": "mogenius-nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}",
					"search_line": 27,
					"search_value": "",
					"expected_value": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/mogenius-nfs-server_template.yaml",
					"similarity_id": "f97788d7baefad55a4b7e76192a1b7f3fb7aaec1247156cbed7c71448f5747ed",
					"line": 27,
					"resource_type": "Deployment",
					"resource_name": "mogenius-nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}",
					"search_line": 27,
					"search_value": "",
					"expected_value": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/mogenius-nfs-server_template.yaml",
					"similarity_id": "dd8cdc997e5da81584345a690931ceb0b257e1775551030a20ac410f5f39dc2a",
					"line": 27,
					"resource_type": "Deployment",
					"resource_name": "mogenius-nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/mogenius-nfs-server_template.yaml",
					"similarity_id": "2eb944bf6fab373f78ba80aa6a1fd1ce35844e9d539ba95abc3a81d3852a4f0e",
					"line": 18,
					"resource_type": "Deployment",
					"resource_name": "mogenius-nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/mogenius-nfs-server_template.yaml",
					"similarity_id": "e5da155f400633e71faf044238a2fbc9c405479f8631a6b06f4be5bd5ff0f405",
					"line": 18,
					"resource_type": "Deployment",
					"resource_name": "mogenius-nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/mogenius-nfs-server_template.yaml",
					"similarity_id": "113b674ca6187a88a002712ee92597f8554b9754717654cab62adc273127cda0",
					"line": 18,
					"resource_type": "Deployment",
					"resource_name": "mogenius-nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/mogenius-nfs-server_template.yaml",
					"similarity_id": "372b4eceb29ff8933052d08cf188ab763edc07482bc99e04419f4431034864ae",
					"line": 18,
					"resource_type": "Deployment",
					"resource_name": "mogenius-nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/mogenius-nfs-server_template.yaml",
					"similarity_id": "e5ef98230ae4e68af27d048c37f903e24ec74328528b964c9be1056dc4ef3bee",
					"line": 27,
					"resource_type": "Deployment",
					"resource_name": "mogenius-nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/mogenius-nfs-server_template.yaml",
					"similarity_id": "60adad4a48c08389601355e54128f0260fa05b94f685803e0b13001baa3404a0",
					"line": 16,
					"resource_type": "Deployment",
					"resource_name": "mogenius-nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mogenius-nfs-server}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/mogenius-nfs-server_template.yaml",
					"similarity_id": "5baeddc1e601e8f7b4f09bfe078a9d0ab57bfafbc6fc95d7814a9845b2bd94e9",
					"line": 18,
					"resource_type": "Deployment",
					"resource_name": "mogenius-nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name=nfs-server",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=nfs-server has resources defined",
					"actual_value": "spec.template.spec.containers.name=nfs-server doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/mogenius-nfs-server_template.yaml",
					"similarity_id": "5db21b679277be9f6af5eb3efebbe6f9fcd5b7a015c30c50dc0bc4a6b0a866b7",
					"line": 18,
					"resource_type": "Deployment",
					"resource_name": "mogenius-nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name=nfs-server",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=nfs-server should have resources defined",
					"actual_value": "spec.template.spec.containers.name=nfs-server doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/mogenius-nfs-server_template.yaml",
					"similarity_id": "e0f3d51f8e1c5d5d24288c3505d0f4c32d499962ac85807efce94b563174fb61",
					"line": 18,
					"resource_type": "Deployment",
					"resource_name": "mogenius-nfs-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/mogenius-nfs-server_template.yaml",
					"similarity_id": "42e50e7995f1012f71a78a8af009c76bf1a04ee33f3bbdc09b0ac34b4efbd4c5",
					"line": 13,
					"resource_type": "Deployment",
					"resource_name": "mogenius-nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mogenius-nfs-server}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mogenius-nfs-server}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{nfs-server}}",
					"actual_value": "metadata.name={{mogenius-nfs-server}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{nfs-server}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/mogenius-nfs-server_template.yaml",
					"similarity_id": "8054338625567263229711f50add373bb54fce68826824ccc797abc5463f79fa",
					"line": 27,
					"resource_type": "Deployment",
					"resource_name": "mogenius-nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mogenius-nfs-server}}.spec.containers.name={{nfs-server}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mogenius-nfs-server}}.spec.containers.name={{nfs-server}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{mogenius-nfs-server}}.spec.containers.name={{nfs-server}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/mogenius-nfs-server_template.yaml",
					"similarity_id": "d4fe9bcda79c5ab184b647fa45201ef01c3793b72c3c38c220c6e5523e0a9dcc",
					"line": 7,
					"resource_type": "Deployment",
					"resource_name": "mogenius-nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mogenius-nfs-server}}",
					"search_line": 7,
					"search_value": "",
					"expected_value": "metadata.name={{mogenius-nfs-server}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{mogenius-nfs-server}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/mogenius-nfs-server_template.yaml",
					"similarity_id": "696e4d4f6e8ebaf8017bb0710fc1dedb1fcd43aabf2280d90ec3a0452c8ac974",
					"line": 7,
					"resource_type": "Deployment",
					"resource_name": "mogenius-nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mogenius-nfs-server}}",
					"search_line": 7,
					"search_value": "",
					"expected_value": "metadata.name={{mogenius-nfs-server}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{mogenius-nfs-server}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/mogenius-nfs-server_template.yaml",
					"similarity_id": "a2af6422e0953e07b5c9dce216a423b1d6c08996c049db54d63b636f4ca40c9f",
					"line": 27,
					"resource_type": "Deployment",
					"resource_name": "mogenius-nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}",
					"search_line": 27,
					"search_value": "",
					"expected_value": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{mogenius-nfs-server}}.spec.template.spec.containers.name={{nfs-server}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
