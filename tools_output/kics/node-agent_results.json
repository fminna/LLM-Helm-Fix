{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 75,
	"files_parsed": 1,
	"lines_parsed": 74,
	"lines_ignored": 1,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 9,
		"INFO": 0,
		"LOW": 6,
		"MEDIUM": 7,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:57:04.662757+02:00",
	"end": "2024-06-26T01:57:06.804196+02:00",
	"paths": [
		"templates/node-agent_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Is Privileged",
			"query_id": "dd29336b-fe57-445b-a26e-e6aa867ae609",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/#privileged-mode-for-containers",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Privileged containers lack essential security restrictions and should be avoided by removing the 'privileged' flag or by changing its value to false",
			"description_id": "55f59030",
			"files": [
				{
					"file_name": "templates/node-agent_template.yaml",
					"similarity_id": "83d6ea0ece086e6e968864f760c431f901cc6ed03e303f8c718cd9ff64bfff97",
					"line": 49,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-agent}}.spec.template.spec.containers.name={{node-agent}}.securityContext.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-agent}}.spec.template.spec.containers.name={{node-agent}}.securityContext.privileged is unset or false",
					"actual_value": "metadata.name={{release-name-node-agent}}.spec.template.spec.containers.name={{node-agent}}.securityContext.privileged is true"
				}
			]
		},
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/node-agent_template.yaml",
					"similarity_id": "e409f3bcc9a235f21e8963a4375e748180c7df0a12977f4eb8512a3fef33f084",
					"line": 72,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-agent}}.spec.template.spec.volumes.name={{debugfs}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-node-agent' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/sys/kernel/debug' mounted",
					"actual_value": "Resource name 'release-name-node-agent' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/sys/kernel/debug' mounted"
				},
				{
					"file_name": "templates/node-agent_template.yaml",
					"similarity_id": "34e3fff22c3119ad644c0e5a0833b7fadea3f3403154606234094d41a8733646",
					"line": 71,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-agent}}.spec.template.spec.volumes.name={{tracefs}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-node-agent' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/sys/kernel/tracing' mounted",
					"actual_value": "Resource name 'release-name-node-agent' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/sys/kernel/tracing' mounted"
				},
				{
					"file_name": "templates/node-agent_template.yaml",
					"similarity_id": "686268d08555dc770cfb00056c7c08430be1aba8eab8d6386960818539408a5f",
					"line": 68,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-agent}}.spec.template.spec.volumes.name={{cgroupfs}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-node-agent' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/sys/fs/cgroup' mounted",
					"actual_value": "Resource name 'release-name-node-agent' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/sys/fs/cgroup' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/node-agent_template.yaml",
					"similarity_id": "2fd4e09a647bd214b0c99dc064c8488003ec0b194cb49920ce9ebc576fc0630c",
					"line": 48,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-agent}}.spec.template.spec.containers.name={{node-agent}}",
					"search_line": 48,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-agent}}.spec.template.spec.containers.name={{node-agent}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-node-agent}}.spec.template.spec.containers.name={{node-agent}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Shared Host PID Namespace",
			"query_id": "302736f4-b16c-41b8-befe-c0baffa0bd9d",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Container should not share the host process ID namespace",
			"description_id": "c34092eb",
			"files": [
				{
					"file_name": "templates/node-agent_template.yaml",
					"similarity_id": "019c841a32ae5eb04af7efe78c3e043c3c4c650ce860f45fcb31d6d385ead73a",
					"line": 31,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-agent}}.spec.template.spec.hostPID",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.hostPID' should be set to false or undefined",
					"actual_value": "'spec.template.spec.hostPID' is true"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/node-agent_template.yaml",
					"similarity_id": "05f304517f438f89ef03216891aaadd23cfe83e9465b73e99619a79bf7b1d4c4",
					"line": 71,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-agent}}.spec.template.spec.volumes.name={{debugfs}}.hostPath.path",
					"search_line": 71,
					"search_value": "",
					"expected_value": "Workload name 'release-name-node-agent' of kind 'DaemonSet' should not mount a host sensitive OS directory '/sys/kernel/debug' with hostPath",
					"actual_value": "Workload name 'release-name-node-agent' of kind 'DaemonSet' is mounting a host sensitive OS directory '/sys/kernel/debug' with hostPath"
				},
				{
					"file_name": "templates/node-agent_template.yaml",
					"similarity_id": "892508aeb9b0676a7d49dc0469b2ba080703f9f12df91afe82514c36757792a1",
					"line": 65,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-agent}}.spec.template.spec.volumes.name={{cgroupfs}}.hostPath.path",
					"search_line": 65,
					"search_value": "",
					"expected_value": "Workload name 'release-name-node-agent' of kind 'DaemonSet' should not mount a host sensitive OS directory '/sys/fs/cgroup' with hostPath",
					"actual_value": "Workload name 'release-name-node-agent' of kind 'DaemonSet' is mounting a host sensitive OS directory '/sys/fs/cgroup' with hostPath"
				},
				{
					"file_name": "templates/node-agent_template.yaml",
					"similarity_id": "560a8f828df3ed311b68c1f5f3fe05567b11d47ebfe6306a464f253c78bfb3ca",
					"line": 68,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-agent}}.spec.template.spec.volumes.name={{tracefs}}.hostPath.path",
					"search_line": 68,
					"search_value": "",
					"expected_value": "Workload name 'release-name-node-agent' of kind 'DaemonSet' should not mount a host sensitive OS directory '/sys/kernel/tracing' with hostPath",
					"actual_value": "Workload name 'release-name-node-agent' of kind 'DaemonSet' is mounting a host sensitive OS directory '/sys/kernel/tracing' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/node-agent_template.yaml",
					"similarity_id": "43d0b1685ea7e1d596c0f452350b9a771a21c63172d2b286026c07a1a1a6be69",
					"line": 48,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-agent}}.spec.template.spec.containers.name={{node-agent}}",
					"search_line": 48,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-agent}}.spec.template.spec.containers.name={{node-agent}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-node-agent}}.spec.template.spec.containers.name={{node-agent}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/node-agent_template.yaml",
					"similarity_id": "74e3e9296346aa6b71d1f6cc1f460b8e74ca7bfc483da49f44784c2ef80a3b4b",
					"line": 48,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-agent}}.spec.template.spec.containers.name={{node-agent}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-agent}}.spec.template.spec.containers.name={{node-agent}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-node-agent}}.spec.template.spec.containers.name={{node-agent}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/node-agent_template.yaml",
					"similarity_id": "eb0e35ce63046e055c12512281f05b4665fc97a2ae9d7ca78f797405271f691f",
					"line": 33,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-agent}}.spec.template.spec.containers.name={{node-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-agent}}.spec.template.spec.containers.name={{node-agent}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-node-agent}}.spec.template.spec.containers.name={{node-agent}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/node-agent_template.yaml",
					"similarity_id": "454cc7e0f64807e6680d393b5e7a6efbb7e01d65cb6e94de97c827d921e12986",
					"line": 33,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-agent}}.spec.template.spec.containers.name={{node-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-agent}}.spec.template.spec.containers.name={{node-agent}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-node-agent}}.spec.template.spec.containers.name={{node-agent}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/node-agent_template.yaml",
					"similarity_id": "e50f2e9114128ff1aba862acd544e9a7b66545cf18d145a41d20aa24b3ba8bed",
					"line": 48,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-agent}}.spec.template.spec.containers.name={{node-agent}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-agent}}.spec.template.spec.containers.name={{node-agent}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-node-agent}}.spec.template.spec.containers.name={{node-agent}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/node-agent_template.yaml",
					"similarity_id": "6ac8049037ce6e0ff3cc8f87cc659bb95b720511b55a8372f33b4b624ffa6d87",
					"line": 27,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-agent}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-agent}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-node-agent}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/node-agent_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{DaemonSet}}.metadata.name={{release-name-node-agent}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/node-agent_template.yaml",
					"similarity_id": "4db54d5da8f2c4e282604cf44250731be2ac72befec1b25b073b1746f605ca8e",
					"line": 36,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-agent}}.spec.template.spec.containers.name={{node-agent}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-agent}}.spec.template.spec.containers.name={{node-agent}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-node-agent}}.spec.template.spec.containers.name={{node-agent}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/node-agent_template.yaml",
					"similarity_id": "95101a97a46ae6dad7c7e9807a30a8681af33326769bc707def5f9be5d25682a",
					"line": 24,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-agent}}.spec.template.metadata",
					"search_line": 24,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-agent}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{node-agent}}",
					"actual_value": "metadata.name={{release-name-node-agent}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{node-agent}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/node-agent_template.yaml",
					"similarity_id": "614537d4682c1ff0b3b8cd1adbfae8d6db6dab758799b0c8fd13c8f837f6acd8",
					"line": 48,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-agent}}.spec.containers.name={{node-agent}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-agent}}.spec.containers.name={{node-agent}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-node-agent}}.spec.containers.name={{node-agent}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/node-agent_template.yaml",
					"similarity_id": "67c9fa152c677d5ae5452a236df8410aa6801348072212e96c828c97b8c6801f",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-agent}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-node-agent}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/node-agent_template.yaml",
					"similarity_id": "f3b342e22cdd4adac15f55323e7c0e46da3ab688650cd1b2e872d05a94447dad",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-agent}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-node-agent}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/node-agent_template.yaml",
					"similarity_id": "60e0fb1fe1ea0e8acd87a3444109b62e6d6527b60e1a0999f10b4adafbacbb4d",
					"line": 48,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-agent}}.spec.template.spec.containers.name={{node-agent}}",
					"search_line": 48,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-agent}}.spec.template.spec.containers.name={{node-agent}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-node-agent}}.spec.template.spec.containers.name={{node-agent}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
