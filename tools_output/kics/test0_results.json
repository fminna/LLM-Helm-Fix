{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 161,
	"files_parsed": 1,
	"lines_parsed": 152,
	"lines_ignored": 9,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 18,
		"MEDIUM": 12,
		"TRACE": 0
	},
	"total_counter": 32,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:34:56.294203+02:00",
	"end": "2024-06-26T00:34:58.309379+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/test0_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "9bf40b2d38bab5556291b495940090f608fca7e2913c01d6df8d844ed25db4c8",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "apliakce1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce1}}.spec.template.spec.containers.name={{mycontainer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apliakce1}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{apliakce1}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "e17ba875a0a7baadb533d5653f391e9505cec90c7de7ddafbe7c2b3bb75dbbbb",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "apliakce2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce2}}.spec.template.spec.containers.name={{mycontainer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apliakce2}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{apliakce2}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "f92b74202c1be7ad66e857f669d7db21823af4aa3491a1bbf2c66c9725c55915",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "apliakce2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce2}}.spec.template.spec.containers.name={{mycontainer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apliakce2}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{apliakce2}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "cac95b3f4d03e3a14e6a47588829e354c827812f34a13c51b1c041eac25b0181",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "apliakce1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce1}}.spec.template.spec.containers.name={{mycontainer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apliakce1}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{apliakce1}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "8a897ff95c7ad609a03d0cbc3b543c92e56efbd9b903e01b4ff34ee2528e9c08",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "apliakce2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce2}}.spec.template.spec.containers.name={{mycontainer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apliakce2}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{apliakce2}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "c0ce8cf3d70462a338a0fe3e2d3c6f1f43e826c54ba3e93da2c3d47dbf51dce4",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "apliakce1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce1}}.spec.template.spec.containers.name={{mycontainer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apliakce1}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{apliakce1}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "27b2f9b94347d335c8f9b36b729921c0870fc0944a32464c90658c8a60050da4",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "apliakce2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce2}}.spec.template.spec.containers.name={{mycontainer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apliakce2}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{apliakce2}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "f584de81ed50b168492be4cbaecd360745272f8419370879a44da3cbb647939d",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "apliakce1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce1}}.spec.template.spec.containers.name={{mycontainer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apliakce1}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{apliakce1}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "9f3a9ab6b8b117ad76819462cbe6d0f6c51cd179df24d16c9aed062fb724dc10",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "apliakce1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce1}}.spec.template.spec.containers.name={{mycontainer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apliakce1}}.spec.template.spec.containers.name={{mycontainer}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{apliakce1}}.spec.template.spec.containers.name={{mycontainer}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "e5c32faae502836fec8e874528414b6af70cb276d6d331666df5873dd6445e26",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "apliakce2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce2}}.spec.template.spec.containers.name={{mycontainer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apliakce2}}.spec.template.spec.containers.name={{mycontainer}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{apliakce2}}.spec.template.spec.containers.name={{mycontainer}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "72349f06adc264276d39c80f88485da67a7c8963e1209c1ab211c9543081b65a",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "apliakce2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce2}}.spec.template.spec.containers.name={{mycontainer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apliakce2}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{apliakce2}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "67fb0d7dca5b096a4fa39b2f53835db274791ffa5b5842bd032edffa64d21830",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "apliakce1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce1}}.spec.template.spec.containers.name={{mycontainer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apliakce1}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{apliakce1}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "314e662f02187cde96978c872d9071fc17e8a724d796429611a43d9cddb02b76",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "apliakce2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce2}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apliakce2}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{apliakce2}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "cb192b68ccbe4c77055906699d116649c09988efc23eb149423152a29c5befaf",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "apliakce1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce1}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apliakce1}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{apliakce1}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "c513d45f479518527cbb698cd14c398e48cdefb1d56eaebda9fbb85dfa9c9782",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "apliakce1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce1}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=apliakce1 is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=apliakce1 is not targeted by a PodDisruptionBudget"
				},
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "349be0bfb24461192dd7c2f9ce932809d79251bc76305c2c5e078460eadb9993",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "apliakce2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce2}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=apliakce2 is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=apliakce2 is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "d14657b997d5e0b3bc668251035ef5d7d8965d87a70c1851cf6888679873e0bb",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "apliakce1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce1}}.spec.template.spec.containers.name={{mycontainer}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apliakce1}}.spec.template.spec.containers.name={{mycontainer}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{apliakce1}}.spec.template.spec.containers.name={{mycontainer}}.image tag is not provided or latest"
				},
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "47a6075cba2bd56a7c0e6a798ad7cc576218bc1a960e88a358874c1e8836ffb2",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "apliakce2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce2}}.spec.template.spec.containers.name={{mycontainer}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apliakce2}}.spec.template.spec.containers.name={{mycontainer}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{apliakce2}}.spec.template.spec.containers.name={{mycontainer}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "664bdef63db2224c8701d0e561203369e5fd3c73c4f981f7d6f6af8323a496bd",
					"line": 107,
					"resource_type": "Deployment",
					"resource_name": "apliakce2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce2}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apliakce2}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{mycontainer}}",
					"actual_value": "metadata.name={{apliakce2}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{mycontainer}}"
				},
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "a5fdb4d8da67a7a9bdeaabfdb74bf6f548c50fab9c831d639ba87a8a91263485",
					"line": 107,
					"resource_type": "Deployment",
					"resource_name": "apliakce1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce1}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apliakce1}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{mycontainer}}",
					"actual_value": "metadata.name={{apliakce1}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{mycontainer}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "995ba19c790dcb8981cb7bd3a4bc96cb6b4d284636c5efee76d10bd56297636e",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "apliakce2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce2}}.spec.containers.name=mycontainer",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apliakce2}}.spec.containers.name=mycontainer.securityContext should be set",
					"actual_value": "metadata.name={{apliakce2}}.spec.containers.name=mycontainer.securityContext is undefined"
				},
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "3f5c849b6221104e218bd38508755ae4cf11ea2a0ccb8f5b0d563044d60f2b25",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "apliakce1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce1}}.spec.containers.name=mycontainer",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apliakce1}}.spec.containers.name=mycontainer.securityContext should be set",
					"actual_value": "metadata.name={{apliakce1}}.spec.containers.name=mycontainer.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "9ea9d37a15fd1d108ecf9fd0d41df5855e7fd94931e4b97efb96a8f5c820d08a",
					"line": 133,
					"resource_type": "Deployment",
					"resource_name": "apliakce2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce2}}",
					"search_line": 133,
					"search_value": "",
					"expected_value": "metadata.name={{apliakce2}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{apliakce2}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "28e9e289c283cd61bed4dff609dc516a67617205d8d7d1d3261747f8c5a03220",
					"line": 96,
					"resource_type": "Deployment",
					"resource_name": "apliakce1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce1}}",
					"search_line": 96,
					"search_value": "",
					"expected_value": "metadata.name={{apliakce1}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{apliakce1}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "ed1618d20bfcabb9c7dc2e9837e531b7445b62eff34ffab45f524d62f1cd2698",
					"line": 133,
					"resource_type": "Deployment",
					"resource_name": "apliakce2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce2}}",
					"search_line": 133,
					"search_value": "",
					"expected_value": "metadata.name={{apliakce2}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{apliakce2}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "a335a9feb04df8fd144d23393ed27624e055280b223fc3e7d602b4e620abea08",
					"line": 96,
					"resource_type": "Deployment",
					"resource_name": "apliakce1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce1}}",
					"search_line": 96,
					"search_value": "",
					"expected_value": "metadata.name={{apliakce1}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{apliakce1}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "2cbd40806be0d3c20c1894cde462380d9d7d986d091e83e256e108d26215b918",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "apliakce1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce1}}.spec.template.spec.containers.name=mycontainer",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mycontainer has a security context",
					"actual_value": "spec.template.spec.containers.name=mycontainer does not have a security context"
				},
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "5853ec7ec2f94f0f10e88ee4d52e16aa907419a76ac7cbc59f920ac3e72dfd9e",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "apliakce2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce2}}.spec.template.spec.containers.name=mycontainer",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mycontainer has a security context",
					"actual_value": "spec.template.spec.containers.name=mycontainer does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "7aa40f8b648968b00f359faa5e9da8e287781062b37b347a4fe3d18038f62bf9",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "apliakce1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce1}}.spec.template.spec.containers.name={{mycontainer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apliakce1}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{apliakce1}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "6e5f6eb3ff6a1ede8cd43f1d825bce82cfbacc667a3aa39d38a710be0d2da22b",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "apliakce2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apliakce2}}.spec.template.spec.containers.name={{mycontainer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apliakce2}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{apliakce2}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "5426be10cd9c1af7e0047ea25048060e597e9e4e8e487fd3f6abd1508a274a87",
					"line": 89,
					"resource_type": "Service",
					"resource_name": "apliakce2",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{apliakce2}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				},
				{
					"file_name": "templates/test0_template.yaml",
					"similarity_id": "522b798afc827847399d31b35ee9401f93f8011dce10d82a46e189d6f971faaa",
					"line": 71,
					"resource_type": "Service",
					"resource_name": "apliakce1",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{apliakce1}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
