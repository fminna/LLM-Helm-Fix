{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 88,
	"files_parsed": 1,
	"lines_parsed": 86,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 19,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:51:50.571651+02:00",
	"end": "2024-06-26T02:51:52.618319+02:00",
	"paths": [
		"templates/gaps_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/gaps_template.yaml",
					"similarity_id": "fca709116eba2b5e3b172e53bbe6d5e2aff19a379641cb28f983eb68c8d3a45c",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-gaps",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name={{release-name-gaps}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name={{release-name-gaps}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name={{release-name-gaps}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/gaps_template.yaml",
					"similarity_id": "703162fa70c716bd2b4ffac1e35998be047c2cc432b3ad1e73ee7892316a3540",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-gaps",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name={{release-name-gaps}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name={{release-name-gaps}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name={{release-name-gaps}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/gaps_template.yaml",
					"similarity_id": "91c4e117212d22452a380f57a728ad83514234ad0f030d46f54691a588f46ee2",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-gaps",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name={{release-name-gaps}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name={{release-name-gaps}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name={{release-name-gaps}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/gaps_template.yaml",
					"similarity_id": "d51095bbb9cf9e90bfbbbc6fd4cbbf73a40ef9ff946e7b39f5fd1334f549a9d8",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-gaps",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name={{release-name-gaps}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name={{release-name-gaps}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name={{release-name-gaps}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/gaps_template.yaml",
					"similarity_id": "b776649dbef3abc8e2849866b9d3077a18f5fadee8ccd830946475cb534c87d7",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-gaps",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name={{release-name-gaps}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name={{release-name-gaps}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name={{release-name-gaps}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/gaps_template.yaml",
					"similarity_id": "ad8de61e3bdd9261017208d1d9e6ff67cf697fa92f62f7e792ee3e4fa6b612fb",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-gaps",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name={{release-name-gaps}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name={{release-name-gaps}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name={{release-name-gaps}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/gaps_template.yaml",
					"similarity_id": "3e76b68c248c82eff1fa88500c5f1ca42e7347eac0280e99bdaa1f3c36e435d0",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-gaps",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name={{release-name-gaps}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name={{release-name-gaps}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name={{release-name-gaps}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/gaps_template.yaml",
					"similarity_id": "0bb9cc2b5e04107653ba50301d687a2cfc0a07cdc9470114eb95ac2b757dfc8c",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "release-name-gaps",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-gaps}}.spec.template.spec.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gaps}}.spec.template.spec.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{release-name-gaps}}.spec.template.spec.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/gaps_template.yaml",
					"similarity_id": "f2b8fff96925bd9420b0464a3eedc0b1121e88f78346ca31f2a40edee74dff15",
					"line": 29,
					"resource_type": "Deployment",
					"resource_name": "release-name-gaps",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-gaps}}",
					"search_line": 29,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/gaps_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "release-name-gaps",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-gaps}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/gaps_template.yaml",
					"similarity_id": "a4b50dd3702ecc2b99a5ad0a94f35bf91fe1e2b2bce61b2311d9aed1a4b4e28c",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-gaps",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name=release-name-gaps",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-gaps has resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-gaps doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/gaps_template.yaml",
					"similarity_id": "ef9e6a0ae947aaa468aa277f283d5b1de62d6c54c531e3f657d41596af68f983",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-gaps",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name=release-name-gaps",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-gaps should have resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-gaps doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/gaps_template.yaml",
					"similarity_id": "3bd60774f504c65c5fa7df6c118ad0a9c69d45d2eaeef79b9978635393fb13b2",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-gaps",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name={{release-name-gaps}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name={{release-name-gaps}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name={{release-name-gaps}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/gaps_template.yaml",
					"similarity_id": "19eae94dd36c7af4380d76db4743155355e32b6c592e3b5dbcc7d8b2dd1e3193",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "release-name-gaps",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gaps}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gaps}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-gaps}}",
					"actual_value": "metadata.name={{release-name-gaps}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-gaps}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/gaps_template.yaml",
					"similarity_id": "e44823ae21326d1889bef9963091d2f2b239bec20c907db1f498f7c6e2547d18",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-gaps",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gaps}}.spec.containers.name=release-name-gaps",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gaps}}.spec.containers.name=release-name-gaps.securityContext should be set",
					"actual_value": "metadata.name={{release-name-gaps}}.spec.containers.name=release-name-gaps.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/gaps_template.yaml",
					"similarity_id": "8ba7c4f2e2e3a2c0ec5ea948ec152c85aaa9cd1de1e8b805434ebdfa0eb66bd4",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-gaps",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gaps}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gaps}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-gaps}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/gaps_template.yaml",
					"similarity_id": "3aad7d252f0c9bcd2c29d970ab1f5e9726051f605895de03521dcdf40f9827c4",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-gaps",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gaps}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gaps}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-gaps}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/gaps_template.yaml",
					"similarity_id": "51c91e5280b6f6266e03df5d669407501e8bec48279f5b8724b6d530c4f7a3a0",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-gaps",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name=release-name-gaps",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-gaps has a security context",
					"actual_value": "spec.template.spec.containers.name=release-name-gaps does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/gaps_template.yaml",
					"similarity_id": "52089353d04752fc1acf76489bc01469f93333ee2ebaf6024d7e26f92b01d99f",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-gaps",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name={{release-name-gaps}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name={{release-name-gaps}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-gaps}}.spec.template.spec.containers.name={{release-name-gaps}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
