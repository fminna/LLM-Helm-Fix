{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 61,
	"files_parsed": 1,
	"lines_parsed": 60,
	"lines_ignored": 1,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 6,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:13:23.75116+02:00",
	"end": "2024-06-26T01:13:25.895908+02:00",
	"paths": [
		"templates/eks-local-disk-provisioner_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Is Privileged",
			"query_id": "dd29336b-fe57-445b-a26e-e6aa867ae609",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/#privileged-mode-for-containers",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Privileged containers lack essential security restrictions and should be avoided by removing the 'privileged' flag or by changing its value to false",
			"description_id": "55f59030",
			"files": [
				{
					"file_name": "templates/eks-local-disk-provisioner_template.yaml",
					"similarity_id": "8bcc97cf8465e5e6848b4f3a0eb169a7a5c2dde87171104e0797d632a7193410",
					"line": 38,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-eks-local-disk-provisioner",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.securityContext.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.securityContext.privileged is unset or false",
					"actual_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.securityContext.privileged is true"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/eks-local-disk-provisioner_template.yaml",
					"similarity_id": "63e580ffb5b9df13f66822ffd7c631054cd00fc2d22f69d55860ad7f80ed13cc",
					"line": 37,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-eks-local-disk-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}",
					"search_line": 37,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/eks-local-disk-provisioner_template.yaml",
					"similarity_id": "23f4bb0891bebd01839c5297734881cfef4129557344acddfeb426609152f11d",
					"line": 47,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-eks-local-disk-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.volumeMounts.name={{host-etc-fstab}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.volumeMounts.name={{host-etc-fstab}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.volumeMounts.name={{host-etc-fstab}}.readOnly is undefined"
				},
				{
					"file_name": "templates/eks-local-disk-provisioner_template.yaml",
					"similarity_id": "c3c406ae6e9473a80a4dd3561e1d1bc5cbafb9e7716e60afbe62919383d4855d",
					"line": 41,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-eks-local-disk-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.volumeMounts.name={{host-dev}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.volumeMounts.name={{host-dev}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.volumeMounts.name={{host-dev}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/eks-local-disk-provisioner_template.yaml",
					"similarity_id": "245699bf558d5662b587970fa8d70e2711f28d525f03f8a47b7d30e233b62e3b",
					"line": 54,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-eks-local-disk-provisioner",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.volumes.name={{host-dev}}.hostPath.path",
					"search_line": 54,
					"search_value": "",
					"expected_value": "Workload name 'release-name-eks-local-disk-provisioner' of kind 'DaemonSet' should not mount a host sensitive OS directory '/dev' with hostPath",
					"actual_value": "Workload name 'release-name-eks-local-disk-provisioner' of kind 'DaemonSet' is mounting a host sensitive OS directory '/dev' with hostPath"
				},
				{
					"file_name": "templates/eks-local-disk-provisioner_template.yaml",
					"similarity_id": "92c51cd01cb0347507de407d732df5c0b938470b0bafe93951d39b5e38f5c77f",
					"line": 60,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-eks-local-disk-provisioner",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.volumes.name={{host-etc-fstab}}.hostPath.path",
					"search_line": 60,
					"search_value": "",
					"expected_value": "Workload name 'release-name-eks-local-disk-provisioner' of kind 'DaemonSet' should not mount a host sensitive OS directory '/etc' with hostPath",
					"actual_value": "Workload name 'release-name-eks-local-disk-provisioner' of kind 'DaemonSet' is mounting a host sensitive OS directory '/etc' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/eks-local-disk-provisioner_template.yaml",
					"similarity_id": "8b3bb5c125ae18524bd7a78670c5dea65cdd6efe80c00985409d40c7e0af7ecc",
					"line": 37,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-eks-local-disk-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}",
					"search_line": 37,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/eks-local-disk-provisioner_template.yaml",
					"similarity_id": "e248980b7e1813b1bc4c9e06092f91cf3ac25c372c17de8bc9c9a91e43cf602e",
					"line": 37,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-eks-local-disk-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/eks-local-disk-provisioner_template.yaml",
					"similarity_id": "c8fc86133af927d78daa4fc224dc7a71db8c9d9bb422e24cfebbb50eef8258a8",
					"line": 29,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-eks-local-disk-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/eks-local-disk-provisioner_template.yaml",
					"similarity_id": "74450274adf8ad6399318bca38533039bc94844f17ee1bed8d68aa0ee789e958",
					"line": 29,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-eks-local-disk-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/eks-local-disk-provisioner_template.yaml",
					"similarity_id": "96115d858aa81bee6b1947332ae997e12e021448a955891ce8b02cd55df3a843",
					"line": 29,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-eks-local-disk-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/eks-local-disk-provisioner_template.yaml",
					"similarity_id": "b9132708ebbb5ce32625341b9cdd3a8185855a533c6cb3d35e847398d969fd68",
					"line": 29,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-eks-local-disk-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/eks-local-disk-provisioner_template.yaml",
					"similarity_id": "bfda526b2aac4f4babdb7ce464d9b8d2a5aa0c4718aeebbc71574f480fbe651c",
					"line": 37,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-eks-local-disk-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/eks-local-disk-provisioner_template.yaml",
					"similarity_id": "281e972b043f8898441189d887b4c8d836e96c9d2cbc6ec76da5f3e2f2708e73",
					"line": 13,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-eks-local-disk-provisioner",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-eks-local-disk-provisioner}}.namespace",
					"search_line": 13,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to kube-system"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/eks-local-disk-provisioner_template.yaml",
					"similarity_id": "2231be2f30b6c17c411a2d2b85e10c4822440f7e34b7086565feb09a5e05474b",
					"line": 35,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-eks-local-disk-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=eks-local-disk-provisioner has limits defined",
					"actual_value": "spec.template.spec.containers.name=eks-local-disk-provisioner doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/eks-local-disk-provisioner_template.yaml",
					"similarity_id": "5ad5175fb499b20a716719ac2e0601a7ce9ce705c9f9a7d2957d9d9cd53e54a2",
					"line": 35,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-eks-local-disk-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=eks-local-disk-provisioner.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=eks-local-disk-provisioner.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/eks-local-disk-provisioner_template.yaml",
					"similarity_id": "5b0ea55322f4c7f32be949f191b66792364245ccd7822bf452169f7836715b2d",
					"line": 30,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-eks-local-disk-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/eks-local-disk-provisioner_template.yaml",
					"similarity_id": "d401d4db50486b54e525c19c28d9653e80a2825bbf9717985e599764c828130d",
					"line": 20,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-eks-local-disk-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{eks-local-disk-provisioner}}",
					"actual_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{eks-local-disk-provisioner}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/eks-local-disk-provisioner_template.yaml",
					"similarity_id": "fd838aaf6a8dc22057386300bdd4ef08449ff9b94b211e1ebfbce633dc6fade2",
					"line": 37,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-eks-local-disk-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.containers.name={{eks-local-disk-provisioner}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.containers.name={{eks-local-disk-provisioner}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.containers.name={{eks-local-disk-provisioner}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/eks-local-disk-provisioner_template.yaml",
					"similarity_id": "1d2dc996ae3a8a837176759a5bd3874657b71dad37a4d4273e1a03dbd2a6fe6d",
					"line": 13,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-eks-local-disk-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-eks-local-disk-provisioner}}",
					"search_line": 13,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eks-local-disk-provisioner}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-eks-local-disk-provisioner}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/eks-local-disk-provisioner_template.yaml",
					"similarity_id": "e671f438db4e1c888cedf5371515b31df8de3c9b413793df6f3d92ebfbd9ab5c",
					"line": 13,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-eks-local-disk-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-eks-local-disk-provisioner}}",
					"search_line": 13,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eks-local-disk-provisioner}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-eks-local-disk-provisioner}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/eks-local-disk-provisioner_template.yaml",
					"similarity_id": "9bb715f0f7e5166ba289d3cd05816ba5598fab723e8419145c8061d36fd5bc51",
					"line": 37,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-eks-local-disk-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}",
					"search_line": 37,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-eks-local-disk-provisioner}}.spec.template.spec.containers.name={{eks-local-disk-provisioner}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
