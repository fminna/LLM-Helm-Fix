{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 210,
	"files_parsed": 1,
	"lines_parsed": 198,
	"lines_ignored": 12,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 15,
		"TRACE": 0
	},
	"total_counter": 26,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:57:35.619338+02:00",
	"end": "2024-05-17T20:57:37.517984+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/dagster-user-deployments_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/dagster-user-deployments_template.yaml",
					"similarity_id": "c3ae5d7b6764fb13c4c0f65521cae40c94b845d4240eca108217a57d4ab432e6",
					"line": 164,
					"resource_type": "Deployment",
					"resource_name": "release-name-dagster-user-deployments-k8s-example-user-code-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.containers.name={{dagster-user-deployments}}",
					"search_line": 164,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.containers.name={{dagster-user-deployments}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.containers.name={{dagster-user-deployments}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/dagster-user-deployments_template.yaml",
					"similarity_id": "ad3c21f0cb664d2a069a2208526dbb4b27ab2139a87873edfb430a6e1c17b6c2",
					"line": 164,
					"resource_type": "Deployment",
					"resource_name": "release-name-dagster-user-deployments-k8s-example-user-code-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.containers.name={{dagster-user-deployments}}",
					"search_line": 164,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.containers.name={{dagster-user-deployments}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.containers.name={{dagster-user-deployments}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/dagster-user-deployments_template.yaml",
					"similarity_id": "4eaaa04cd77e3e61f4106416fec6aa2a7c705eee9b3ec15ce3592e3314045b11",
					"line": 164,
					"resource_type": "Deployment",
					"resource_name": "release-name-dagster-user-deployments-k8s-example-user-code-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.containers.name={{dagster-user-deployments}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.containers.name={{dagster-user-deployments}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.containers.name={{dagster-user-deployments}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/dagster-user-deployments_template.yaml",
					"similarity_id": "b8ca54c4629aeb36a92942c59970e450deda81b8996b2d5c762c902fd0701386",
					"line": 163,
					"resource_type": "Deployment",
					"resource_name": "release-name-dagster-user-deployments-k8s-example-user-code-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.containers.name={{dagster-user-deployments}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.containers.name={{dagster-user-deployments}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.containers.name={{dagster-user-deployments}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/dagster-user-deployments_template.yaml",
					"similarity_id": "c246dfcdcf3f8abeec254cf0082ef03076819b2d267605fce425dfa7ae238d06",
					"line": 163,
					"resource_type": "Deployment",
					"resource_name": "release-name-dagster-user-deployments-k8s-example-user-code-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.containers.name={{dagster-user-deployments}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.containers.name={{dagster-user-deployments}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.containers.name={{dagster-user-deployments}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/dagster-user-deployments_template.yaml",
					"similarity_id": "f12b04cac0b19ccc36b6fa73f3f68fc38104b1133403d20e1f942b12b05d3074",
					"line": 163,
					"resource_type": "Deployment",
					"resource_name": "release-name-dagster-user-deployments-k8s-example-user-code-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.containers.name={{dagster-user-deployments}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.containers.name={{dagster-user-deployments}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.containers.name={{dagster-user-deployments}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Permissive Access to Create Pods",
			"query_id": "592ad21d-ad9b-46c6-8d2d-fad09d62a942",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#privilege-escalation-prevention-and-bootstrapping",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "The permission to create pods in a cluster should be restricted because it allows privilege escalation.",
			"description_id": "c78cb1a7",
			"files": [
				{
					"file_name": "templates/dagster-user-deployments_template.yaml",
					"similarity_id": "973f19050f4abaa03c5111cf87ed8ddaae2771c202dc45dd45375a861c8ec8c6",
					"line": 72,
					"resource_type": "Role",
					"resource_name": "release-name-dagster-user-deployments-role",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-dagster-user-deployments-role}}.rules.verbs.create",
					"search_line": 72,
					"search_value": "",
					"expected_value": "metadata.name=release-name-dagster-user-deployments-role.rules.verbs should not contain the value 'create' when metadata.name=release-name-dagster-user-deployments-role.rules.resources contains the value 'pods'",
					"actual_value": "metadata.name=release-name-dagster-user-deployments-role.rules.verbs contains the value 'create' and metadata.name=release-name-dagster-user-deployments-role.rules.resources contains the value 'pods'"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/dagster-user-deployments_template.yaml",
					"similarity_id": "0333479b21d3b51ae46e9645cf6da78ddf27355bec744752c15dd0e22da25ec5",
					"line": 164,
					"resource_type": "Deployment",
					"resource_name": "release-name-dagster-user-deployments-k8s-example-user-code-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.containers.name={{dagster-user-deployments}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.containers.name={{dagster-user-deployments}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.containers.name={{dagster-user-deployments}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/dagster-user-deployments_template.yaml",
					"similarity_id": "b0456acab43fb0f5e487e8a68face1af63b1ca31641ff846de3516d86dc53a23",
					"line": 159,
					"resource_type": "Deployment",
					"resource_name": "release-name-dagster-user-deployments-k8s-example-user-code-1",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/dagster-user-deployments_template.yaml",
					"similarity_id": "98334e610701d89e37ac70f28225e682729fa8c7e086a483e516a9e2a646795e",
					"line": 81,
					"resource_type": "RoleBinding",
					"resource_name": "release-name-dagster-user-deployments-rolebinding",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{RoleBinding}}.metadata.name={{release-name-dagster-user-deployments-rolebinding}}",
					"search_line": 81,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/dagster-user-deployments_template.yaml",
					"similarity_id": "6b3dadf62e36f9de05061ac5d18116f0869dad41a0e62154151afe7797bbd6ac",
					"line": 21,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-dagster-user-deployments-user-deployments-shared-env",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-dagster-user-deployments-user-deployments-shared-env}}",
					"search_line": 21,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/dagster-user-deployments_template.yaml",
					"similarity_id": "0e667173d8438ef37dbca8a46e1b4705a26eb64d998482b8193984930761bacc",
					"line": 53,
					"resource_type": "Role",
					"resource_name": "release-name-dagster-user-deployments-role",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Role}}.metadata.name={{release-name-dagster-user-deployments-role}}",
					"search_line": 53,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/dagster-user-deployments_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-dagster-user-deployments-user-deployments",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-dagster-user-deployments-user-deployments}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/dagster-user-deployments_template.yaml",
					"similarity_id": "96ae0a2e02eeb7312809398cf571513369d723a69eeb385b026b0247469a83a2",
					"line": 127,
					"resource_type": "Deployment",
					"resource_name": "release-name-dagster-user-deployments-k8s-example-user-code-1",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}",
					"search_line": 127,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/dagster-user-deployments_template.yaml",
					"similarity_id": "5f38186f7c3697a57a2413e097d1a55a1dce9e4d34146d4fe02a7ff99a3a054f",
					"line": 101,
					"resource_type": "Service",
					"resource_name": "k8s-example-user-code-1",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{k8s-example-user-code-1}}",
					"search_line": 101,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/dagster-user-deployments_template.yaml",
					"similarity_id": "fbb5037e87048fb67f186e9ecb72cca4997235bbcce54730346608f0cbdb5941",
					"line": 39,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-dagster-user-deployments-k8s-example-user-code-1-user-env",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1-user-env}}",
					"search_line": 39,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/dagster-user-deployments_template.yaml",
					"similarity_id": "8841e7d1a0673ee8c52374c1a6dc3ba4acc8cc45237b4c66b6d463e323b45203",
					"line": 190,
					"resource_type": "Deployment",
					"resource_name": "release-name-dagster-user-deployments-k8s-example-user-code-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.containers.name={{dagster-user-deployments}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=dagster-user-deployments has limits defined",
					"actual_value": "spec.template.spec.containers.name=dagster-user-deployments doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/dagster-user-deployments_template.yaml",
					"similarity_id": "4c9f9441985347038c9b347b41c72382210182420d4412daa3c85d34f2127819",
					"line": 190,
					"resource_type": "Deployment",
					"resource_name": "release-name-dagster-user-deployments-k8s-example-user-code-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.containers.name={{dagster-user-deployments}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=dagster-user-deployments.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=dagster-user-deployments.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/dagster-user-deployments_template.yaml",
					"similarity_id": "7c46848b12a850942d23bb2136044252042a38e45f816f8e1f519564499aaddf",
					"line": 153,
					"resource_type": "Deployment",
					"resource_name": "release-name-dagster-user-deployments-k8s-example-user-code-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.metadata",
					"search_line": 153,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{dagster-user-deployments}}",
					"actual_value": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{dagster-user-deployments}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/dagster-user-deployments_template.yaml",
					"similarity_id": "e514fe4067521b08a91a33ffa2db44b0bf8df46f70e9d090d368585e8f56328c",
					"line": 164,
					"resource_type": "Deployment",
					"resource_name": "release-name-dagster-user-deployments-k8s-example-user-code-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.containers.name={{dagster-user-deployments}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.containers.name={{dagster-user-deployments}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.containers.name={{dagster-user-deployments}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/dagster-user-deployments_template.yaml",
					"similarity_id": "61af4471267b8de03524a297e74364a996bacb0622bff2c022b74b36f2edcedf",
					"line": 127,
					"resource_type": "Deployment",
					"resource_name": "release-name-dagster-user-deployments-k8s-example-user-code-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/dagster-user-deployments_template.yaml",
					"similarity_id": "39761243198bba51787d3ad27f6919885bcd5a3f0de464926089d0a635afeb0b",
					"line": 127,
					"resource_type": "Deployment",
					"resource_name": "release-name-dagster-user-deployments-k8s-example-user-code-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/dagster-user-deployments_template.yaml",
					"similarity_id": "0bab15df0ffb3a77918f14549bced6d5e40e519eddfeecdbe54f65c531a9d426",
					"line": 164,
					"resource_type": "Deployment",
					"resource_name": "release-name-dagster-user-deployments-k8s-example-user-code-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.containers.name={{dagster-user-deployments}}",
					"search_line": 164,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.containers.name={{dagster-user-deployments}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.containers.name={{dagster-user-deployments}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/dagster-user-deployments_template.yaml",
					"similarity_id": "5f5b459cff137fe6705bb9101980a4996f3ba0a2a72594102752fd10b59dea9c",
					"line": 174,
					"resource_type": "Deployment",
					"resource_name": "release-name-dagster-user-deployments-k8s-example-user-code-1",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.containers.env.name={{DAGSTER_PG_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{dagster-user-deployments}}.env.name={{DAGSTER_PG_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{dagster-user-deployments}}.env.name={{DAGSTER_PG_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/dagster-user-deployments_template.yaml",
					"similarity_id": "afe94892bf7dfaa6624b8c0433699d43892fbf80da129b11bb848e5aa8ca2208",
					"line": 182,
					"resource_type": "Deployment",
					"resource_name": "release-name-dagster-user-deployments-k8s-example-user-code-1",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-dagster-user-deployments-k8s-example-user-code-1}}.spec.template.spec.containers.name={{dagster-user-deployments}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{dagster-user-deployments}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{dagster-user-deployments}}.envFrom.secretRef' is defined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/dagster-user-deployments_template.yaml",
					"similarity_id": "529ac963d858d9ef93b39f5115115f726cb398013f5350837cdb4b06dd9ea758",
					"line": 114,
					"resource_type": "Service",
					"resource_name": "k8s-example-user-code-1",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{k8s-example-user-code-1}}.spec.ports.port={{3030}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{k8s-example-user-code-1}}.spec.ports.port={{3030}} has a Pod port",
					"actual_value": "metadata.name={{k8s-example-user-code-1}}.spec.ports.port={{3030}} does not have a Pod port"
				}
			]
		}
	]
}
