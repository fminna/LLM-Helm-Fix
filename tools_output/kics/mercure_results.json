{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 201,
	"files_parsed": 1,
	"lines_parsed": 195,
	"lines_ignored": 6,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 25,
		"MEDIUM": 22,
		"TRACE": 0
	},
	"total_counter": 49,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:28:12.062306+02:00",
	"end": "2024-06-26T02:28:14.260743+02:00",
	"paths": [
		"templates/mercure_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "02d2c71faaf6bcd39f1df7f44196ab5cdd8fd61d0b4e039e5f170c34993c20ac",
					"line": 196,
					"resource_type": "Pod",
					"resource_name": "release-name-mercure-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "2e9488a9f4a6229acd11c41975b7ed86d25f32af562b09beeaa766978f555836",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-mercure",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.name={{mercure}}",
					"search_line": 105,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.name={{mercure}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.name={{mercure}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "a9c4cad37e6b391ed10440124b6faf94daf6c48638556f893ed3d397df808a12",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-mercure",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.name={{mercure}}",
					"search_line": 105,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.name={{mercure}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.name={{mercure}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "2ed47c9473d79fbab68f76bd88ac8a1588dd64c3a38fe5a6a012183331320348",
					"line": 196,
					"resource_type": "Pod",
					"resource_name": "release-name-mercure-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "f6289ec9775e410ca7ca0076224a78a673897d438556d4bf38617601f3836d1a",
					"line": 196,
					"resource_type": "Pod",
					"resource_name": "release-name-mercure-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "20e8a7ba5f7fd65729d168267aa0b90f510a99b6cc2963117f3a3c6ebde57991",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-mercure",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.name={{mercure}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.name={{mercure}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.name={{mercure}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "ee5d874ec940edfcf690c0dfefca2501f7baa94603ab5f0fcf7a72bc71aece59",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "release-name-mercure",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.name={{mercure}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.name={{mercure}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.name={{mercure}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "ffe70d567311dc2b751340beb86635370736a0e30c2a24fe03e5bb20cc2b9aba",
					"line": 196,
					"resource_type": "Pod",
					"resource_name": "release-name-mercure-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "bfa57ed2a2089064ad647df00189be332c9c4cb3b9d9e994c8fd0c196a901533",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "release-name-mercure",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.name={{mercure}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.name={{mercure}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.name={{mercure}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "3e174750d01ec66301e5fa23239a5ee27835988c1241c4090203054bedd6e7b8",
					"line": 196,
					"resource_type": "Pod",
					"resource_name": "release-name-mercure-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "99928ccefad919e6841dce654a61f3b291515145bd4e1449694aac23a41f5a0e",
					"line": 196,
					"resource_type": "Pod",
					"resource_name": "release-name-mercure-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "5108707b7f330216440318adfa835d75587187df00dd448f20e8b83af0cc23c3",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "release-name-mercure",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.name={{mercure}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.name={{mercure}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.name={{mercure}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "f9eedf988c68d8191b5557131c4757c94eed34d7936bda456526bcd19c383ccf",
					"line": 196,
					"resource_type": "Pod",
					"resource_name": "release-name-mercure-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "4545c9155271d498428e2af1ccd224447f66cf95d0058e263079b4646c02508d",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-mercure",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.name={{mercure}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.name={{mercure}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.name={{mercure}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "e7cd769992f9283e501bf0d55f7340e77c2b126d86409fa1b4a1216423e18467",
					"line": 196,
					"resource_type": "Pod",
					"resource_name": "release-name-mercure-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "2776e64ced4d24706f6875f34a9c614af18446e03c9ca77ede14265472d9cac4",
					"line": 194,
					"resource_type": "Pod",
					"resource_name": "release-name-mercure-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-mercure-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-mercure-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "8e2200aa36e42a62a5e64c2979689f70a4e3bb3cd2fb2a0df6d5e9396aa65a52",
					"line": 194,
					"resource_type": "Pod",
					"resource_name": "release-name-mercure-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-mercure-test-connection}}.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "804e32301786a9532b8c8ea4c0761a5abafba51e048ec871b9e007bc5171e642",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "release-name-mercure",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-mercure}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "fbb5037e87048fb67f186e9ecb72cca4997235bbcce54730346608f0cbdb5941",
					"line": 39,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-mercure",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-mercure}}",
					"search_line": 39,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "e2b9cc8a256befb5fabd67e8395db38264f81e70bcad4392d4a8c552d5717ac8",
					"line": 55,
					"resource_type": "Service",
					"resource_name": "release-name-mercure",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-mercure}}",
					"search_line": 55,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "9fb0e1b1e322c18c64a39e41d8210ee53d84519857faebe65ae66bf74cb24e20",
					"line": 185,
					"resource_type": "Pod",
					"resource_name": "release-name-mercure-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-mercure-test-connection}}",
					"search_line": 185,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "a5ac0f727c1216d105b6a08455452170ca0009e014d434cea946b7e4acb8d60d",
					"line": 78,
					"resource_type": "Deployment",
					"resource_name": "release-name-mercure",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-mercure}}",
					"search_line": 78,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Secret",
					"resource_name": "release-name-mercure",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-mercure}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-mercure",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-mercure}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "76513c7b6a778e0b23a29ddcb0c5e7292f6b7131939dfddb2b9e7d6e22f2c453",
					"line": 174,
					"resource_type": "Deployment",
					"resource_name": "release-name-mercure",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.name={{mercure}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mercure has limits defined",
					"actual_value": "spec.template.spec.containers.name=mercure doesn't have limits defined"
				},
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "f2a38bfa57f68388574873d5cd170cea10d64a93ba12037a429193a38b9c5722",
					"line": 196,
					"resource_type": "Pod",
					"resource_name": "release-name-mercure-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "73c66a3febb54a8544d04e3342d815d46c29a530646aae9d7badd0bd1dd2bb4a",
					"line": 174,
					"resource_type": "Deployment",
					"resource_name": "release-name-mercure",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.name={{mercure}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mercure.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=mercure.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "a3aa05034e87ff680455b34a8e787988275b79733f129b2e52bfbd1a25b88621",
					"line": 196,
					"resource_type": "Pod",
					"resource_name": "release-name-mercure-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "d9ab1d90f18050c85c122576aee4dda9d0d189545570e08315ae6b4f672fc71f",
					"line": 108,
					"resource_type": "Deployment",
					"resource_name": "release-name-mercure",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.name={{mercure}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.name={{mercure}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.name={{mercure}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "ac4ae3d6a5293ae7f7f0ac28798dce631b774a751d9141ba7f80438e40ac246d",
					"line": 197,
					"resource_type": "Pod",
					"resource_name": "release-name-mercure-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "84a1812bd0fff3fbbc078167eb6397dcbebb6a946411a7cda9f05530f9036e55",
					"line": 185,
					"resource_type": "Pod",
					"resource_name": "release-name-mercure-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-mercure-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				},
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "c675b59643317894819196c535a1bd07c19b332340cc8729342cb37e8a8b2b2a",
					"line": 93,
					"resource_type": "Deployment",
					"resource_name": "release-name-mercure",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure}}.spec.template.metadata",
					"search_line": 93,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{mercure}}",
					"actual_value": "metadata.name={{release-name-mercure}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{mercure}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "20b645c601cba0ee7ef0233cb7567844fedbf39d713f9539441ac4e373b0c06b",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-mercure",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure}}.spec.containers.name={{mercure}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure}}.spec.containers.name={{mercure}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-mercure}}.spec.containers.name={{mercure}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "2b6c15c4034f01be083249bbd7fb021e9bef31ada80aeb9fae3cd1127f07dd39",
					"line": 196,
					"resource_type": "Pod",
					"resource_name": "release-name-mercure-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "1547f87f2b618967434d56d7fea5e337d7765a23256c979417e30523d7f106ef",
					"line": 185,
					"resource_type": "Pod",
					"resource_name": "release-name-mercure-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-mercure-test-connection}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "82d18ddd3f57bdcaee256266df8f9db2986c9cabe1dbbaadc2d3c7482be9ed7f",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-mercure",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-mercure}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "eda76c74552342f85ff0f7d05a3998e060a9a8c48f8cfd3860270ee7953acc07",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-mercure",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-mercure}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "18ab05776e8d1d83cd9994ee8c20d0e3687b045026c27980ef1076e294b6c175",
					"line": 185,
					"resource_type": "Pod",
					"resource_name": "release-name-mercure-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-mercure-test-connection}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "2cd64da204d8046651f01af032d153774e3d622a350cae07ef38021861a7b191",
					"line": 196,
					"resource_type": "Pod",
					"resource_name": "release-name-mercure-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				},
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "f1965ebc44de271f9a02831832d6e924bb1a8b858411916d8ec52dbb420ea7e9",
					"line": 194,
					"resource_type": "Pod",
					"resource_name": "release-name-mercure-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-mercure-test-connection}}.spec does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "df7112b24e21589ba718e431087494bdd16864e3b9da3b9b44d3dad2af852041",
					"line": 196,
					"resource_type": "Pod",
					"resource_name": "release-name-mercure-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-mercure-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "27812ff4646e6501e7852ff3fa571f867fb561fa4c07ea4e6bfd1b9e0b1e0cfb",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-mercure",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.name={{mercure}}",
					"search_line": 105,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.name={{mercure}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.name={{mercure}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "c84d641c6ff2e9bc411c86ef077b175ad74b17f1ed8ae39b2074868e0fd8a7b9",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "release-name-mercure",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.env.name={{MERCURE_EXTRA_DIRECTIVES}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{mercure}}.env.name={{MERCURE_EXTRA_DIRECTIVES}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{mercure}}.env.name={{MERCURE_EXTRA_DIRECTIVES}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "d57d3fc665c660a31c22ddd05d37a31b6378a4a041a2921fc0bb0ae25f0e5a70",
					"line": 129,
					"resource_type": "Deployment",
					"resource_name": "release-name-mercure",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.env.name={{MERCURE_TRANSPORT_URL}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{mercure}}.env.name={{MERCURE_TRANSPORT_URL}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{mercure}}.env.name={{MERCURE_TRANSPORT_URL}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "1003262c0317d83067f62aca6e32eab2f00bdca81447112ffb005cac5126e69a",
					"line": 144,
					"resource_type": "Deployment",
					"resource_name": "release-name-mercure",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.env.name={{MERCURE_SUBSCRIBER_JWT_KEY}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{mercure}}.env.name={{MERCURE_SUBSCRIBER_JWT_KEY}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{mercure}}.env.name={{MERCURE_SUBSCRIBER_JWT_KEY}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "137431266a6a07bc3e9fd13d9db416d15c29efbd4700a31d7cca21cb424e5d28",
					"line": 119,
					"resource_type": "Deployment",
					"resource_name": "release-name-mercure",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.env.name={{CADDY_EXTRA_CONFIG}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{mercure}}.env.name={{CADDY_EXTRA_CONFIG}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{mercure}}.env.name={{CADDY_EXTRA_CONFIG}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "9317e8f580c68a9aae8f39ba08107304df41a99401385317beea71b5eb1eef8f",
					"line": 124,
					"resource_type": "Deployment",
					"resource_name": "release-name-mercure",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.env.name={{CADDY_SERVER_EXTRA_DIRECTIVES}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{mercure}}.env.name={{CADDY_SERVER_EXTRA_DIRECTIVES}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{mercure}}.env.name={{CADDY_SERVER_EXTRA_DIRECTIVES}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "5d9d5920669efb9f873356ff37e1e47c1d47a31acee3deae948e3e8261592aea",
					"line": 159,
					"resource_type": "Deployment",
					"resource_name": "release-name-mercure",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.env.name={{MERCURE_LICENSE}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{mercure}}.env.name={{MERCURE_LICENSE}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{mercure}}.env.name={{MERCURE_LICENSE}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/mercure_template.yaml",
					"similarity_id": "b31361b9cc3ee1f582b4df9bb8e1f29eb6b65563a978711a34e9c8d3f221bfdb",
					"line": 134,
					"resource_type": "Deployment",
					"resource_name": "release-name-mercure",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mercure}}.spec.template.spec.containers.env.name={{MERCURE_PUBLISHER_JWT_KEY}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{mercure}}.env.name={{MERCURE_PUBLISHER_JWT_KEY}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{mercure}}.env.name={{MERCURE_PUBLISHER_JWT_KEY}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
