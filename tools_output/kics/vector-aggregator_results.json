{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 186,
	"files_parsed": 1,
	"lines_parsed": 175,
	"lines_ignored": 11,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 14,
		"TRACE": 0
	},
	"total_counter": 25,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:29:14.827648+02:00",
	"end": "2024-06-26T01:29:16.891061+02:00",
	"paths": [
		"templates/vector-aggregator_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/vector-aggregator_template.yaml",
					"similarity_id": "0e3cf3493aedc5a5f1a1494260de6baebbaa1bf7ddd786d327a0d2282ec4ce6d",
					"line": 149,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vector-aggregator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}",
					"search_line": 149,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/vector-aggregator_template.yaml",
					"similarity_id": "e476d7dc593f7ec8c9ad3d1ef46a2f1e780b89e2b27d1e0a12efe368a9de3761",
					"line": 149,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vector-aggregator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}",
					"search_line": 149,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/vector-aggregator_template.yaml",
					"similarity_id": "885595325f10693dedd7b37a0418c98f10e42986a903f93b349b460f3f0cd10b",
					"line": 149,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vector-aggregator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Incorrect Volume Claim Access Mode ReadWriteOnce",
			"query_id": "3878dc92-8e5d-47cf-9cdd-7590f71d21b9",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Kubernetes Stateful Sets must have one Volume Claim template with the access mode 'ReadWriteOnce'",
			"description_id": "f4e48914",
			"files": [
				{
					"file_name": "templates/vector-aggregator_template.yaml",
					"similarity_id": "44c41db57aceae8fbc974cb2f9cc7891056d426b53b8b0a3828e44842c9030cd",
					"line": 185,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vector-aggregator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name=release-name-vector-aggregator.spec.volumeClaimTemplates",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-vector-aggregator.spec.volumeClaimTemplates has one template with a 'ReadWriteOnce'",
					"actual_value": "metadata.name=release-name-vector-aggregator.spec.volumeClaimTemplates does not have a template with a 'ReadWriteOnce'"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/vector-aggregator_template.yaml",
					"similarity_id": "50c78a885c4b7ba63addf27cdfee9b08fc3315f183c65bf2d08e9499c117acdc",
					"line": 148,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vector-aggregator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/vector-aggregator_template.yaml",
					"similarity_id": "ec4d9da922459e18a157880411164da7c57d8ba61447f385f1dcf33a3c2d9d67",
					"line": 148,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vector-aggregator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/vector-aggregator_template.yaml",
					"similarity_id": "806531972d7c632c0f5d742c5174d62027e15ef939d9358fe56056f73a486b59",
					"line": 148,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vector-aggregator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/vector-aggregator_template.yaml",
					"similarity_id": "c7a829056f3ad6abb4711439b52c0d70f75182996a2b7193c5420585de6ccbcf",
					"line": 148,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vector-aggregator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/vector-aggregator_template.yaml",
					"similarity_id": "421a1f594c1c168ad54ba23355fb06a63315333dd047436dc963119944b73e3f",
					"line": 149,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vector-aggregator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/vector-aggregator_template.yaml",
					"similarity_id": "8a169e18b9727b545efacf3e80d49cba78f18e37955f8499504d886c4af2d17c",
					"line": 14,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-vector-aggregator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vector-aggregator}}.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vector-aggregator}}.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{release-name-vector-aggregator}}.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/vector-aggregator_template.yaml",
					"similarity_id": "e62ceca1c4aa8886c59ed149cc6fe493f7b5a4fa8aaef4da33e6754d07062b56",
					"line": 92,
					"resource_type": "Service",
					"resource_name": "release-name-vector-aggregator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-vector-aggregator}}",
					"search_line": 92,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/vector-aggregator_template.yaml",
					"similarity_id": "8c0aea17f3c1306c1a1bcef958c07ffdd33924d69e6a3ab4ab681cebc7b71c1a",
					"line": 20,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-vector-aggregator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-vector-aggregator}}",
					"search_line": 20,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/vector-aggregator_template.yaml",
					"similarity_id": "e947cf965e7c677aa6222deedf7b7b85e2cc0e869f3a24a6e7111e0e1b317168",
					"line": 116,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vector-aggregator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{StatefulSet}}.metadata.name={{release-name-vector-aggregator}}",
					"search_line": 116,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/vector-aggregator_template.yaml",
					"similarity_id": "f530e49b86f8da46a2a22a8ebf91e3e61db0d016943696e5b8e9564c582e09d1",
					"line": 69,
					"resource_type": "Service",
					"resource_name": "release-name-vector-aggregator-headless",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-vector-aggregator-headless}}",
					"search_line": 69,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/vector-aggregator_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-vector-aggregator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-vector-aggregator}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/vector-aggregator_template.yaml",
					"similarity_id": "fc8b1ff6730ee1454f274b642a89e581b2cae06c129cfacb027b5c1ef9eee244",
					"line": 162,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vector-aggregator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=vector has limits defined",
					"actual_value": "spec.template.spec.containers.name=vector doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/vector-aggregator_template.yaml",
					"similarity_id": "3d333b1551f7ade6caf98510231eea649e8b4c71b777c07fd28b9c79bd5ce6e2",
					"line": 162,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vector-aggregator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=vector.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=vector.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/vector-aggregator_template.yaml",
					"similarity_id": "aa360e2cb7701fe4adabf2d092ad077d26081fffa0e0f3a70745724a3715c8f8",
					"line": 152,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vector-aggregator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/vector-aggregator_template.yaml",
					"similarity_id": "9fd77ca1e1868c3737b599d04266ba42f64f93e4ac3bdfad64a48148be87ef1e",
					"line": 135,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vector-aggregator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vector-aggregator}}.spec.template.metadata",
					"search_line": 135,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vector-aggregator}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{vector}}",
					"actual_value": "metadata.name={{release-name-vector-aggregator}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{vector}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/vector-aggregator_template.yaml",
					"similarity_id": "5c3e4ec4486d19eb83b100283a28f2cd01e1961c7a5453ee4286c8a82c9f41d1",
					"line": 149,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vector-aggregator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vector-aggregator}}.spec.containers.name={{vector}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vector-aggregator}}.spec.containers.name={{vector}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-vector-aggregator}}.spec.containers.name={{vector}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/vector-aggregator_template.yaml",
					"similarity_id": "b26086486d68f28dac15dc2f8179881ee8c9133a51278dcc4cb492baccd78e0d",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vector-aggregator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vector-aggregator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vector-aggregator}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-vector-aggregator}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/vector-aggregator_template.yaml",
					"similarity_id": "5d27cf362f4464efa922910ededca2bc167ece76a67df9fa1f5ad43bdf9f18ca",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vector-aggregator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vector-aggregator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vector-aggregator}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-vector-aggregator}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/vector-aggregator_template.yaml",
					"similarity_id": "50729a6780bc366d2c80d291ae3b05ae38d42cb8545c3e04961ab54f98e842bb",
					"line": 149,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vector-aggregator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}",
					"search_line": 149,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-vector-aggregator}}.spec.template.spec.containers.name={{vector}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/vector-aggregator_template.yaml",
					"similarity_id": "0e1b7bb4f1f87e419acf3558e5ae914a68c32ec6a9d66068a51adbddbb334111",
					"line": 80,
					"resource_type": "Service",
					"resource_name": "release-name-vector-aggregator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vector-aggregator}}.spec.ports.port={{9000}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vector-aggregator}}.spec.ports.port={{9000}} has a Pod port",
					"actual_value": "metadata.name={{release-name-vector-aggregator}}.spec.ports.port={{9000}} does not have a Pod port"
				},
				{
					"file_name": "templates/vector-aggregator_template.yaml",
					"similarity_id": "dfe5ca261750e000886eb57d3d25063dc55c08076cb74d9aad233debcb05979b",
					"line": 80,
					"resource_type": "Service",
					"resource_name": "release-name-vector-aggregator-headless",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vector-aggregator-headless}}.spec.ports.port={{9000}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vector-aggregator-headless}}.spec.ports.port={{9000}} has a Pod port",
					"actual_value": "metadata.name={{release-name-vector-aggregator-headless}}.spec.ports.port={{9000}} does not have a Pod port"
				}
			]
		}
	]
}
