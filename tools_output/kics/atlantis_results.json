{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 213,
	"files_parsed": 1,
	"lines_parsed": 203,
	"lines_ignored": 10,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 21,
		"MEDIUM": 22,
		"TRACE": 0
	},
	"total_counter": 45,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:51:07.015385+02:00",
	"end": "2024-05-17T22:51:08.946399+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/atlantis_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "5de785c4658d97919ea08a7d5be9bd2235e13a37f9f731011fedf7934f9a4291",
					"line": 125,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-atlantis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-atlantis}}.spec.template.spec.containers.name={{atlantis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-atlantis}}.spec.template.spec.containers.name={{atlantis}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-atlantis}}.spec.template.spec.containers.name={{atlantis}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "afe51bf6565472635e40fd0d375071d2ef5962bdbd4451f6e0155f59c5d72b60",
					"line": 201,
					"resource_type": "Pod",
					"resource_name": "release-name-ui-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "d2f93616d733ac78a57890873fb1b6fcce77d1b50f6ec49bc1d44c91d725faa9",
					"line": 201,
					"resource_type": "Pod",
					"resource_name": "release-name-ui-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "208b20035821c6d4419a66b6273a02eb95a26f83fee66f0702cd30a6f0951438",
					"line": 119,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-atlantis",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-atlantis}}.spec.template.spec.securityContext.runAsUser=100",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-atlantis}}.spec.template.spec.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-atlantis}}.spec.template.spec.securityContext.runAsUser is set to a low UID"
				},
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "033028c3108aa99fd05ba24d7848832661a6df7d6239ba34b810a6311869d168",
					"line": 201,
					"resource_type": "Pod",
					"resource_name": "release-name-ui-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "86ed599d3ec156aa33d62bd24a07884e00fd1a1a39922c909a207b3135b3b2c7",
					"line": 201,
					"resource_type": "Pod",
					"resource_name": "release-name-ui-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "ff7952b7646afc47bcb80b385d45f5be2d2a8e3f593c433918f1036d2300c034",
					"line": 125,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-atlantis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-atlantis}}.spec.template.spec.containers.name={{atlantis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-atlantis}}.spec.template.spec.containers.name={{atlantis}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-atlantis}}.spec.template.spec.containers.name={{atlantis}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "912dfb63b027ef154766e0be732a9b4eb2c30c0e6ebe66e5297e666b0712164c",
					"line": 201,
					"resource_type": "Pod",
					"resource_name": "release-name-ui-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "7f3ea7563136fdf7d1a642d1f96ef938bacf69a9b88f0a6d2710c1d12d064433",
					"line": 125,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-atlantis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-atlantis}}.spec.template.spec.containers.name={{atlantis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-atlantis}}.spec.template.spec.containers.name={{atlantis}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-atlantis}}.spec.template.spec.containers.name={{atlantis}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "d44b64510897424b19d0459f15db3ca10eb6577e699b6fb53ffe14815b308abd",
					"line": 201,
					"resource_type": "Pod",
					"resource_name": "release-name-ui-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "76812a9c268edd45d50de74fb6ae2bfec6d5fa531cd17ab0f86fdb0770c958c7",
					"line": 125,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-atlantis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-atlantis}}.spec.template.spec.containers.name={{atlantis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-atlantis}}.spec.template.spec.containers.name={{atlantis}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-atlantis}}.spec.template.spec.containers.name={{atlantis}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "ec7d618b1cbbdb579f04c39a0e89cffb451880e9f49bbb4357108f9324b80a93",
					"line": 201,
					"resource_type": "Pod",
					"resource_name": "release-name-ui-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "bc170d74371212c7ce121bb0e3171d81746c3452103e1fe48dcd0c6dd0a00f84",
					"line": 125,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-atlantis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-atlantis}}.spec.template.spec.containers.name={{atlantis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-atlantis}}.spec.template.spec.containers.name={{atlantis}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-atlantis}}.spec.template.spec.containers.name={{atlantis}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "870b9767f0a215c51ef4fa45c8f071d1c9ffed529dbe4edd3030bcdf2529332e",
					"line": 201,
					"resource_type": "Pod",
					"resource_name": "release-name-ui-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "608b487872497c4d873dc958427ed27fc8ad5c77fa482aaeed2f36b3d924ffdc",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "release-name-ui-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ui-test}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-ui-test.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-ui-test.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "30fe53360d61e83c24a6e387d585683c1b3023f204be2c71892fa8c9c0a27473",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "release-name-ui-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ui-test}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ui-test}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-ui-test}}.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "996d69b5d8d10dcbbe6fa390b872da90882a72cca843830bdb69a766011c4859",
					"line": 115,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-atlantis",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-atlantis}}.spec.template.spec.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-atlantis}}.spec.template.spec.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{release-name-atlantis}}.spec.template.spec.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "d1515b5a14fee56cee1b430abb60b2648b00c21411943c49e9485984d1d95ad9",
					"line": 196,
					"resource_type": "Pod",
					"resource_name": "release-name-ui-test",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-ui-test}}",
					"search_line": 196,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-atlantis",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-atlantis}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "c836eafa757524be611073638754ce6b64d2a536d12242ef75e8918b48112a68",
					"line": 31,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-atlantis-tests",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-atlantis-tests}}",
					"search_line": 31,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "9f1c7b4a3da948dc42126b64f37fe90d9c2c8b37bc8eb56d6035df361f7d45f4",
					"line": 89,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-atlantis",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{StatefulSet}}.metadata.name={{release-name-atlantis}}",
					"search_line": 89,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "f900e9fdb5c8a0f1591d9299d9d8038e33eb35f626518c56b52602a5328fda49",
					"line": 67,
					"resource_type": "Service",
					"resource_name": "release-name-atlantis",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-atlantis}}",
					"search_line": 67,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "0f369133f0db9f9250578bcd8187c997fb1b5f84bfa90e2c7c74da573f351095",
					"line": 172,
					"resource_type": "Ingress",
					"resource_name": "release-name-atlantis",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Ingress}}.metadata.name={{release-name-atlantis}}",
					"search_line": 172,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Secret",
					"resource_name": "release-name-atlantis-webhook",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-atlantis-webhook}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "b1f860b6edd22bc0cb0b46433fe4a8a34467c86629b00dea153e170cb0e0bfc2",
					"line": 165,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-atlantis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-atlantis}}.spec.template.spec.containers.name={{atlantis}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=atlantis has limits defined",
					"actual_value": "spec.template.spec.containers.name=atlantis doesn't have limits defined"
				},
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "c9129680459692301782da2d46bb3295409d256cff97d94f113d365154e9308f",
					"line": 201,
					"resource_type": "Pod",
					"resource_name": "release-name-ui-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ui-test}}.spec.containers.name=release-name-ui-test",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=release-name-ui-test has resources defined",
					"actual_value": "spec.containers.name=release-name-ui-test doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "a81999089b9ce09e67405e8ac3bf6830228d2644039c48a49afd3acc5b94331f",
					"line": 165,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-atlantis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-atlantis}}.spec.template.spec.containers.name={{atlantis}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=atlantis.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=atlantis.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "6f8dc9b9388252c2cacc08b5e1a655df595d8aafd8b4da90bbe3bc30e9b53d31",
					"line": 201,
					"resource_type": "Pod",
					"resource_name": "release-name-ui-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ui-test}}.spec.containers.name=release-name-ui-test",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=release-name-ui-test should have resources defined",
					"actual_value": "spec.containers.name=release-name-ui-test doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "42246407f0a6d159554daad7c07c39b3e1505aae2483796f023eb26438d6331c",
					"line": 201,
					"resource_type": "Pod",
					"resource_name": "release-name-ui-test",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "aa84e270d0f01a0766a35f04f06f0c19c06bc55b71a5f1a5df2a4aba668bb431",
					"line": 108,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-atlantis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-atlantis}}.spec.template.metadata",
					"search_line": 108,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-atlantis}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{atlantis}}",
					"actual_value": "metadata.name={{release-name-atlantis}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{atlantis}}"
				},
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "559f0d877aeef63faf5c9325c2a74ee1a7d0b0ccb5a2f6b97c3f92fbfa98fe5f",
					"line": 196,
					"resource_type": "Pod",
					"resource_name": "release-name-ui-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ui-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ui-test}}.annotations should specify an AppArmor profile for container {{release-name-ui-test}}",
					"actual_value": "metadata.name={{release-name-ui-test}}.annotations does not specify an AppArmor profile for container {{release-name-ui-test}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "e8153648e8b235c0120a2fbe55c981eca972632ffd806a1c0c59307150a9c45c",
					"line": 125,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-atlantis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-atlantis}}.spec.containers.name=atlantis",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-atlantis}}.spec.containers.name=atlantis.securityContext should be set",
					"actual_value": "metadata.name={{release-name-atlantis}}.spec.containers.name=atlantis.securityContext is undefined"
				},
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "475a148712de83a08d01e75c1eb05145addfe2020250d9dc08bc5e1b910f5c4c",
					"line": 201,
					"resource_type": "Pod",
					"resource_name": "release-name-ui-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ui-test}}.spec.containers.name=release-name-ui-test",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ui-test}}.spec.containers.name=release-name-ui-test.securityContext should be set",
					"actual_value": "metadata.name={{release-name-ui-test}}.spec.containers.name=release-name-ui-test.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "b597203bcc3b0165938a42d52cb160e867735bad2c2c9c84eb1dc3c42352c974",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-atlantis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-atlantis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-atlantis}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-atlantis}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "314ff56f433e11070ddc9d6ef35f65a63f540bf37df9a41bc41db81f88d77596",
					"line": 47,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-atlantis-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-atlantis-data}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-atlantis-data}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-atlantis-data}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "ad2b2da108e367223e453eff68ca78bda4a737d4117979a324762979d30c219a",
					"line": 196,
					"resource_type": "Pod",
					"resource_name": "release-name-ui-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ui-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ui-test}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-ui-test}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "f65b4633b7e3a564b39fee87e1d5c34244cf9de583e43f11af4827ed99ec1bf2",
					"line": 196,
					"resource_type": "Pod",
					"resource_name": "release-name-ui-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ui-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ui-test}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-ui-test}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "ec0b3b290026dac0bb71d565d18fde7a61456779217b9447829097c0fa3f230c",
					"line": 47,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-atlantis-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-atlantis-data}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-atlantis-data}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-atlantis-data}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "7de16696895eb3c60e8d97eba9b2d83392361c1d94ebd7380f65b03c1d4e520e",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-atlantis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-atlantis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-atlantis}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-atlantis}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "62c12c3f0ff7869d9b41f584748d1866efe58a7e10f422c22637b97e1191c01a",
					"line": 201,
					"resource_type": "Pod",
					"resource_name": "release-name-ui-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ui-test}}.spec.containers.name=release-name-ui-test",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=release-name-ui-test has a security context",
					"actual_value": "spec.containers.name=release-name-ui-test does not have a security context"
				},
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "06fd144d4d0b1a976c46b9f383a0277ede58bd9176234a9631f231b674ea3be4",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "release-name-ui-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ui-test}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ui-test}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-ui-test}}.spec does not have a security context"
				},
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "2e3d0272264f2b439235c5a721c8da92d03156b0a864df3587a1475ec4e8116c",
					"line": 125,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-atlantis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-atlantis}}.spec.template.spec.containers.name=atlantis",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=atlantis has a security context",
					"actual_value": "spec.template.spec.containers.name=atlantis does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "20433c64ec537553904b9d1b3ea7c4055b0f286650b463db517c90c003dca850",
					"line": 125,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-atlantis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-atlantis}}.spec.template.spec.containers.name={{atlantis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-atlantis}}.spec.template.spec.containers.name={{atlantis}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-atlantis}}.spec.template.spec.containers.name={{atlantis}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "8b674fb8652a788222f37f1b36ad97386016313378864c46da23fd5fbd87b791",
					"line": 201,
					"resource_type": "Pod",
					"resource_name": "release-name-ui-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-ui-test}}.spec.containers.name={{release-name-ui-test}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/atlantis_template.yaml",
					"similarity_id": "865a3373b6cec4462afb76a72294db869dede1e545bc849e732baed487f8cf9c",
					"line": 75,
					"resource_type": "Service",
					"resource_name": "release-name-atlantis",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-atlantis}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
