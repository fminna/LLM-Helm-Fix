{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 332,
	"files_parsed": 1,
	"lines_parsed": 314,
	"lines_ignored": 18,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 4,
		"INFO": 0,
		"LOW": 14,
		"MEDIUM": 12,
		"TRACE": 0
	},
	"total_counter": 30,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:44:51.969151+02:00",
	"end": "2024-05-17T23:44:53.771709+02:00",
	"paths": [
		"templates/net-exporter_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "PSP Allows Privilege Escalation",
			"query_id": "87554eef-154d-411d-bdce-9dbd91e56851",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "PodSecurityPolicy should not allow privilege escalation",
			"description_id": "d7c5e3ad",
			"files": [
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "46e0047b3ebbc37b64148662a9a907324d5697684a1a15378b9109a7b265b6eb",
					"line": 16,
					"resource_type": "PodSecurityPolicy",
					"resource_name": "net-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{net-exporter}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Attribute 'allowPrivilegeEscalation' should be set",
					"actual_value": "Attribute 'allowPrivilegeEscalation' is undefined"
				}
			]
		},
		{
			"query_name": "PSP With Unrestricted Access to Host Path",
			"query_id": "de4421f1-4e35-43b4-9783-737dd4e4a47e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "PodSecurityPolicy should set 'readOnly' to true in every host path allowed",
			"description_id": "fc4b7215",
			"files": [
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "3fab9811188f0798fcfc952046e132e9307cd3b8d2c2be07eaa9c1b3d66b3764",
					"line": 16,
					"resource_type": "PodSecurityPolicy",
					"resource_name": "net-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{net-exporter}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.allowedHostPaths' should be defined and not null",
					"actual_value": "'spec.allowedHostPaths' is undefined or null"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "3b2ee6bc551270a0abdd94c07459a7089b1dfb0cb75162ea2128703fb59a8202",
					"line": 288,
					"resource_type": "DaemonSet",
					"resource_name": "net-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{net-exporter}}.spec.template.spec.initContainers.name={{label-kube-system-namespace}}",
					"search_line": 288,
					"search_value": "",
					"expected_value": "metadata.name={{net-exporter}}.spec.template.spec.initContainers.name={{label-kube-system-namespace}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{net-exporter}}.spec.template.spec.initContainers.name={{label-kube-system-namespace}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "2aae4c6b1f2002a8ce9f16f9ef6c976bd15f2b893e584b43f9617628814b2b8d",
					"line": 299,
					"resource_type": "DaemonSet",
					"resource_name": "net-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{net-exporter}}.spec.template.spec.containers.name={{net-exporter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{net-exporter}}.spec.template.spec.containers.name={{net-exporter}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{net-exporter}}.spec.template.spec.containers.name={{net-exporter}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "d747a70033cec07a842b30ecc1c06f00a6b187e2c43f4cc812120090f8ab0b61",
					"line": 289,
					"resource_type": "DaemonSet",
					"resource_name": "net-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{net-exporter}}.spec.template.spec.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{net-exporter}}.spec.template.spec.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{net-exporter}}.spec.template.spec.securityContext.runAsUser is set to a low UID"
				},
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "4d854ba108abbcc20dc80f9e8fb386b54108185b6ef0c43bb2f6ab11a60981bb",
					"line": 289,
					"resource_type": "DaemonSet",
					"resource_name": "net-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{net-exporter}}.spec.template.spec.initContainers.name={{label-kube-system-namespace}}.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{net-exporter}}.spec.template.spec.initContainers.name={{label-kube-system-namespace}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{net-exporter}}.spec.template.spec.initContainers.name={{label-kube-system-namespace}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "92fc9cfd83d1bf7badf4e571b77cce6cbe946da507286bea6014103be922b015",
					"line": 280,
					"resource_type": "DaemonSet",
					"resource_name": "net-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{net-exporter}}.spec.template.spec.initContainers.name={{label-kube-system-namespace}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{net-exporter}}.spec.template.spec.initContainers.name={{label-kube-system-namespace}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{net-exporter}}.spec.template.spec.initContainers.name={{label-kube-system-namespace}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "f3d21cc7973561cf59d7fe296340878cb5d6284ad2b0721cdca33c8be5b96d87",
					"line": 280,
					"resource_type": "DaemonSet",
					"resource_name": "net-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{net-exporter}}.spec.template.spec.initContainers.name={{label-kube-system-namespace}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{net-exporter}}.spec.template.spec.initContainers.name={{label-kube-system-namespace}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{net-exporter}}.spec.template.spec.initContainers.name={{label-kube-system-namespace}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "728d42ec2891d731ac9cf61eecc30ee08bb66de781e7c9a0dfb77f598c96ac40",
					"line": 280,
					"resource_type": "DaemonSet",
					"resource_name": "net-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{net-exporter}}.spec.template.spec.initContainers.name={{label-kube-system-namespace}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{net-exporter}}.spec.template.spec.initContainers.name={{label-kube-system-namespace}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{net-exporter}}.spec.template.spec.initContainers.name={{label-kube-system-namespace}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "9a3d3d872e6f23858722d4ce87fa1237860f946619560bb8b6d8bc1765af93e0",
					"line": 299,
					"resource_type": "DaemonSet",
					"resource_name": "net-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{net-exporter}}.spec.template.spec.containers.name={{net-exporter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{net-exporter}}.spec.template.spec.containers.name={{net-exporter}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{net-exporter}}.spec.template.spec.containers.name={{net-exporter}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "af70a3c3c97e7346b203263598aa2781a733cd24b1a5cf130123648884dd0a99",
					"line": 299,
					"resource_type": "DaemonSet",
					"resource_name": "net-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{net-exporter}}.spec.template.spec.containers.name={{net-exporter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{net-exporter}}.spec.template.spec.containers.name={{net-exporter}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{net-exporter}}.spec.template.spec.containers.name={{net-exporter}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "a09d50e000c2253402d9cf85411635248bc27139190126b614405c372a865a2d",
					"line": 288,
					"resource_type": "DaemonSet",
					"resource_name": "net-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{net-exporter}}.spec.template.spec.initContainers.name={{label-kube-system-namespace}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{net-exporter}}.spec.template.spec.initContainers.name={{label-kube-system-namespace}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{net-exporter}}.spec.template.spec.initContainers.name={{label-kube-system-namespace}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "26645e8f51bb3d98c7bb3e6adba8dc5ed835422aeeb8c5925644554fb3b535e5",
					"line": 278,
					"resource_type": "DaemonSet",
					"resource_name": "net-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{net-exporter}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{net-exporter}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{net-exporter}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "3fad8b12f7d92f4735ccffcdaea172e842a0f1c74302a4a318506131ed05ad60",
					"line": 226,
					"resource_type": "Service",
					"resource_name": "net-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{net-exporter}}.namespace",
					"search_line": 226,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "a355988771e7fcb244dd4e85d01a719034da28c7731631885f598954082b1435",
					"line": 139,
					"resource_type": "ServiceAccount",
					"resource_name": "net-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{net-exporter}}.namespace",
					"search_line": 139,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "07b58e1e179f92ef4d6eeb9162baf28a6949271366c8000692570767db74ab0b",
					"line": 250,
					"resource_type": "DaemonSet",
					"resource_name": "net-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{net-exporter}}.namespace",
					"search_line": 250,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "e88d99a4be2fb721cec8b359511b765487b05420766b96320a7662ed35a81dbe",
					"line": 280,
					"resource_type": "DaemonSet",
					"resource_name": "net-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{net-exporter}}.spec.template.spec.initContainers.name=label-kube-system-namespace",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=label-kube-system-namespace has resources defined",
					"actual_value": "spec.template.spec.initContainers.name=label-kube-system-namespace doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "19515d3f700a0dead1752b67373824645e546f4d2e3a875f0de202043f12796e",
					"line": 280,
					"resource_type": "DaemonSet",
					"resource_name": "net-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{net-exporter}}.spec.template.spec.initContainers.name=label-kube-system-namespace",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=label-kube-system-namespace should have resources defined",
					"actual_value": "spec.template.spec.initContainers.name=label-kube-system-namespace doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "a255550e32efdc652a3edfd7d066b1158f1beac604fba4da7029a262fc947677",
					"line": 299,
					"resource_type": "DaemonSet",
					"resource_name": "net-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{net-exporter}}.spec.template.spec.containers.name={{net-exporter}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{net-exporter}}.spec.template.spec.containers.name={{net-exporter}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{net-exporter}}.spec.template.spec.containers.name={{net-exporter}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "64b72b8e2e744481d4b647441a5f613e530cbed55d70ad12a7e25359fcee379c",
					"line": 280,
					"resource_type": "DaemonSet",
					"resource_name": "net-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{net-exporter}}.spec.template.spec.initContainers.name={{label-kube-system-namespace}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{net-exporter}}.spec.template.spec.initContainers.name={{label-kube-system-namespace}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{net-exporter}}.spec.template.spec.initContainers.name={{label-kube-system-namespace}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "12aed976affd9a3c8c31d2e3844d62569f9338e83aedd7e2a197e6f13a749867",
					"line": 276,
					"resource_type": "DaemonSet",
					"resource_name": "net-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{net-exporter}}.spec.template.metadata",
					"search_line": 276,
					"search_value": "",
					"expected_value": "metadata.name={{net-exporter}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{label-kube-system-namespace}}",
					"actual_value": "metadata.name={{net-exporter}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{label-kube-system-namespace}}"
				},
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "12aed976affd9a3c8c31d2e3844d62569f9338e83aedd7e2a197e6f13a749867",
					"line": 276,
					"resource_type": "DaemonSet",
					"resource_name": "net-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{net-exporter}}.spec.template.metadata",
					"search_line": 276,
					"search_value": "",
					"expected_value": "metadata.name={{net-exporter}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{net-exporter}}",
					"actual_value": "metadata.name={{net-exporter}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{net-exporter}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "9265df769f0c1312202e041b1789ad79507ab5216168500a8df73774e473d2ad",
					"line": 299,
					"resource_type": "DaemonSet",
					"resource_name": "net-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{net-exporter}}.spec.containers.name=net-exporter",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{net-exporter}}.spec.containers.name=net-exporter.securityContext should be set",
					"actual_value": "metadata.name={{net-exporter}}.spec.containers.name=net-exporter.securityContext is undefined"
				},
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "2895d87ab637303f7158401668e8de4aa2a212f25a62fbc8774ae18442ecfa76",
					"line": 288,
					"resource_type": "DaemonSet",
					"resource_name": "net-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{net-exporter}}.spec.initContainers.name={{label-kube-system-namespace}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{net-exporter}}.spec.initContainers.name={{label-kube-system-namespace}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{net-exporter}}.spec.initContainers.name={{label-kube-system-namespace}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "92920aeb044277b8920a75a40135dc1ead45b75b8ff87cd89bf69854fabce719",
					"line": 250,
					"resource_type": "DaemonSet",
					"resource_name": "net-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{net-exporter}}",
					"search_line": 250,
					"search_value": "",
					"expected_value": "metadata.name={{net-exporter}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{net-exporter}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "4ae36676bb245bc41a9efe9f95383422911fdd0ac42bb4d85773530810eae640",
					"line": 250,
					"resource_type": "DaemonSet",
					"resource_name": "net-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{net-exporter}}",
					"search_line": 250,
					"search_value": "",
					"expected_value": "metadata.name={{net-exporter}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{net-exporter}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "cec37cf68f06ad2764c57d09cfe492f35af578bd6a186618c13880f0d5db3d80",
					"line": 299,
					"resource_type": "DaemonSet",
					"resource_name": "net-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{net-exporter}}.spec.template.spec.containers.name=net-exporter",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=net-exporter has a security context",
					"actual_value": "spec.template.spec.containers.name=net-exporter does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "ef538a7d05dffa0e249b058e50a0ed1e4f2f4aef2bcd4c1e506755af4416a109",
					"line": 299,
					"resource_type": "DaemonSet",
					"resource_name": "net-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{net-exporter}}.spec.template.spec.containers.name={{net-exporter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{net-exporter}}.spec.template.spec.containers.name={{net-exporter}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{net-exporter}}.spec.template.spec.containers.name={{net-exporter}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "b1cc25d968129727973b9dcab86ee30a7323ff29d6419bc95924dacf1723cb91",
					"line": 288,
					"resource_type": "DaemonSet",
					"resource_name": "net-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{net-exporter}}.spec.template.spec.initContainers.name={{label-kube-system-namespace}}",
					"search_line": 288,
					"search_value": "",
					"expected_value": "metadata.name={{net-exporter}}.spec.template.spec.initContainers.name={{label-kube-system-namespace}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{net-exporter}}.spec.template.spec.initContainers.name={{label-kube-system-namespace}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/net-exporter_template.yaml",
					"similarity_id": "6a7819c97287cda39891227258b2b743c65dab657d87575f6236ee674f28da02",
					"line": 26,
					"resource_type": "Service",
					"resource_name": "net-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{net-exporter}}.spec.ports.port={{8000}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{net-exporter}}.spec.ports.port={{8000}} has a Pod port",
					"actual_value": "metadata.name={{net-exporter}}.spec.ports.port={{8000}} does not have a Pod port"
				}
			]
		}
	]
}
