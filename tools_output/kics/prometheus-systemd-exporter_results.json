{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 130,
	"files_parsed": 1,
	"lines_parsed": 128,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 6,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 7,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:39:34.631685+02:00",
	"end": "2024-05-17T21:39:36.619851+02:00",
	"paths": [
		"templates/prometheus-systemd-exporter_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/prometheus-systemd-exporter_template.yaml",
					"similarity_id": "8bf1ad6b1908d80e04e21e84a09642cc56995b58a1c20a82b63ff546e7e551e7",
					"line": 129,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prometheus-systemd-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.template.spec.volumes.name={{dbus}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-prometheus-systemd-exporter' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/var/run/dbus' mounted",
					"actual_value": "Resource name 'release-name-prometheus-systemd-exporter' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/var/run/dbus' mounted"
				},
				{
					"file_name": "templates/prometheus-systemd-exporter_template.yaml",
					"similarity_id": "42be15aa12b7ef79d891c8a38a13118cfe35ae3850dc84dc10b7e3c896a9d24c",
					"line": 126,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prometheus-systemd-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.template.spec.volumes.name={{systemd}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-prometheus-systemd-exporter' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/run/systemd' mounted",
					"actual_value": "Resource name 'release-name-prometheus-systemd-exporter' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/run/systemd' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/prometheus-systemd-exporter_template.yaml",
					"similarity_id": "709532e8c897cdfeba60ab71419c13b5bb870849ed1ed260c64b034d3b61e3c7",
					"line": 80,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prometheus-systemd-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.template.spec.containers.name={{systemd-exporter}}",
					"search_line": 80,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.template.spec.containers.name={{systemd-exporter}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.template.spec.containers.name={{systemd-exporter}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Shared Host PID Namespace",
			"query_id": "302736f4-b16c-41b8-befe-c0baffa0bd9d",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Container should not share the host process ID namespace",
			"description_id": "c34092eb",
			"files": [
				{
					"file_name": "templates/prometheus-systemd-exporter_template.yaml",
					"similarity_id": "5b891b318d4deb11c8a64a52380590646c2e80b1da843d7009812e31d171ace0",
					"line": 117,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prometheus-systemd-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.template.spec.hostPID",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.hostPID' should be set to false or undefined",
					"actual_value": "'spec.template.spec.hostPID' is true"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/prometheus-systemd-exporter_template.yaml",
					"similarity_id": "60ce0f216cfdaec2f1b058b05474b50e723760668306a02036855cfa9ee1c6a3",
					"line": 126,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prometheus-systemd-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.template.spec.volumes.name={{systemd}}.hostPath.path",
					"search_line": 126,
					"search_value": "",
					"expected_value": "Workload name 'release-name-prometheus-systemd-exporter' of kind 'DaemonSet' should not mount a host sensitive OS directory '/run/systemd' with hostPath",
					"actual_value": "Workload name 'release-name-prometheus-systemd-exporter' of kind 'DaemonSet' is mounting a host sensitive OS directory '/run/systemd' with hostPath"
				},
				{
					"file_name": "templates/prometheus-systemd-exporter_template.yaml",
					"similarity_id": "3b6141054d997913cdf1974124ac49576ca9bab192812d1d85fcb16def31c306",
					"line": 129,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prometheus-systemd-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.template.spec.volumes.name={{dbus}}.hostPath.path",
					"search_line": 129,
					"search_value": "",
					"expected_value": "Workload name 'release-name-prometheus-systemd-exporter' of kind 'DaemonSet' should not mount a host sensitive OS directory '/var/run/dbus' with hostPath",
					"actual_value": "Workload name 'release-name-prometheus-systemd-exporter' of kind 'DaemonSet' is mounting a host sensitive OS directory '/var/run/dbus' with hostPath"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/prometheus-systemd-exporter_template.yaml",
					"similarity_id": "6b4c8628d245befbc3166372678cb5794f4579cb66503da4e29a5d93e37408c5",
					"line": 74,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prometheus-systemd-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.template.spec.containers.name={{systemd-exporter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.template.spec.containers.name={{systemd-exporter}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.template.spec.containers.name={{systemd-exporter}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/prometheus-systemd-exporter_template.yaml",
					"similarity_id": "910f98697f8a316af145f7c2f9333a64d125922c945e9bb65ea1e336c48123b1",
					"line": 74,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prometheus-systemd-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.template.spec.containers.name={{systemd-exporter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.template.spec.containers.name={{systemd-exporter}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.template.spec.containers.name={{systemd-exporter}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/prometheus-systemd-exporter_template.yaml",
					"similarity_id": "045bf68446dfd06ed6b823782c7881c741305acd80efa6404d4e672f595fbc05",
					"line": 74,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prometheus-systemd-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.template.spec.containers.name={{systemd-exporter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.template.spec.containers.name={{systemd-exporter}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.template.spec.containers.name={{systemd-exporter}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/prometheus-systemd-exporter_template.yaml",
					"similarity_id": "ff9ea4b815a9ef519551deef8104332179fd8cb624a4bbd60b1e9d8f4e9253f5",
					"line": 80,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prometheus-systemd-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.template.spec.containers.name={{systemd-exporter}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.template.spec.containers.name={{systemd-exporter}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.template.spec.containers.name={{systemd-exporter}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Shared Host Network Namespace",
			"query_id": "6b6bdfb3-c3ae-44cb-88e4-7405c1ba2c8a",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Container should not share the host network namespace",
			"description_id": "50e5de80",
			"files": [
				{
					"file_name": "templates/prometheus-systemd-exporter_template.yaml",
					"similarity_id": "e6529142b0bf7c9c9b3e2c643e962854e0a47eb99044c5ea1afc8eade58f9a8b",
					"line": 116,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prometheus-systemd-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.template.spec.hostNetwork",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.hostNetwork' should be set to false or undefined",
					"actual_value": "'spec.template.spec.hostNetwork' is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/prometheus-systemd-exporter_template.yaml",
					"similarity_id": "8a553bf4f3ebcb4cfaffe877593474bf8132b5681ee0b1d00037b0ec0a961b86",
					"line": 34,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prometheus-systemd-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-prometheus-systemd-exporter}}.namespace",
					"search_line": 34,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/prometheus-systemd-exporter_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "Service",
					"resource_name": "release-name-prometheus-systemd-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-prometheus-systemd-exporter}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/prometheus-systemd-exporter_template.yaml",
					"similarity_id": "c9c0f2191bfbcb5395c0fbda3c35c44b43cc47bce413e623d1cb4ffeeabb2107",
					"line": 74,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prometheus-systemd-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.template.spec.containers.name=systemd-exporter",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=systemd-exporter has resources defined",
					"actual_value": "spec.template.spec.containers.name=systemd-exporter doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/prometheus-systemd-exporter_template.yaml",
					"similarity_id": "5d65768631f9cdc7d83d2dac59703793a5129e2fcc928aee49cd6b55fd2593ec",
					"line": 74,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prometheus-systemd-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.template.spec.containers.name=systemd-exporter",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=systemd-exporter should have resources defined",
					"actual_value": "spec.template.spec.containers.name=systemd-exporter doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/prometheus-systemd-exporter_template.yaml",
					"similarity_id": "7b71d4a705fda0ebf612f750c10e48ac6c2dc72c53c6aa4d0d0493a2665bdf2b",
					"line": 76,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prometheus-systemd-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.template.spec.containers.name={{systemd-exporter}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.template.spec.containers.name={{systemd-exporter}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.template.spec.containers.name={{systemd-exporter}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/prometheus-systemd-exporter_template.yaml",
					"similarity_id": "f536d8fc46769a560ac65c30cd3ebefa7ba8bde27a64217a7b60dc0caf753066",
					"line": 55,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prometheus-systemd-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.template.metadata",
					"search_line": 55,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{systemd-exporter}}",
					"actual_value": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{systemd-exporter}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/prometheus-systemd-exporter_template.yaml",
					"similarity_id": "9de366207e07f05340eafbfd9028c4de31ddf66a01ecf22c0ef3cd55b065e353",
					"line": 80,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prometheus-systemd-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.containers.name={{systemd-exporter}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.containers.name={{systemd-exporter}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-prometheus-systemd-exporter}}.spec.containers.name={{systemd-exporter}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/prometheus-systemd-exporter_template.yaml",
					"similarity_id": "52a2c765c267766a0c5a7a8c8ae29321d41401abd71832336bfe497f1ea9413a",
					"line": 34,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prometheus-systemd-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheus-systemd-exporter}}",
					"search_line": 34,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheus-systemd-exporter}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-prometheus-systemd-exporter}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/prometheus-systemd-exporter_template.yaml",
					"similarity_id": "938e961cb29f475abc96957b54dfb45ab5d3b07e6b3f4147d23daf877e208a84",
					"line": 34,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prometheus-systemd-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheus-systemd-exporter}}",
					"search_line": 34,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheus-systemd-exporter}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-prometheus-systemd-exporter}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
