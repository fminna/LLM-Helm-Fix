{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 381,
	"files_parsed": 1,
	"lines_parsed": 374,
	"lines_ignored": 7,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 7,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-05-03T16:32:38.900524+02:00",
	"end": "2024-05-03T16:32:40.90899+02:00",
	"paths": [
		"templates/handbrake_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/handbrake_template.yaml",
					"similarity_id": "947256b6b7b47b720a33538cfce3794aaa3997f871ab7a1fdb711317181fc437",
					"line": 272,
					"resource_type": "Deployment",
					"resource_name": "release-name-handbrake",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-handbrake}}.spec.template.spec.containers.name={{release-name-handbrake}}.volumeMounts.name={{varlogs}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-handbrake}}.spec.template.spec.containers.name={{release-name-handbrake}}.volumeMounts.name={{varlogs}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-handbrake}}.spec.template.spec.containers.name={{release-name-handbrake}}.volumeMounts.name={{varlogs}}.readOnly is false"
				},
				{
					"file_name": "templates/handbrake_template.yaml",
					"similarity_id": "5d32ff937fd2424d5b0c906cb6bd1b17c2d919b3a446980756cfd35fadd11bc6",
					"line": 275,
					"resource_type": "Deployment",
					"resource_name": "release-name-handbrake",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-handbrake}}.spec.template.spec.containers.name={{release-name-handbrake}}.volumeMounts.name={{varrun}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-handbrake}}.spec.template.spec.containers.name={{release-name-handbrake}}.volumeMounts.name={{varrun}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-handbrake}}.spec.template.spec.containers.name={{release-name-handbrake}}.volumeMounts.name={{varrun}}.readOnly is false"
				},
				{
					"file_name": "templates/handbrake_template.yaml",
					"similarity_id": "ecf8491939e895a43a6d5e5da496eb2f9de93d6fc0fa06b048e9cfbace0f79d7",
					"line": 257,
					"resource_type": "Deployment",
					"resource_name": "release-name-handbrake",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-handbrake}}.spec.template.spec.containers.name={{release-name-handbrake}}.volumeMounts.name={{devshm}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-handbrake}}.spec.template.spec.containers.name={{release-name-handbrake}}.volumeMounts.name={{devshm}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-handbrake}}.spec.template.spec.containers.name={{release-name-handbrake}}.volumeMounts.name={{devshm}}.readOnly is false"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/handbrake_template.yaml",
					"similarity_id": "2c7d4ab84b8211edfe112e55839303617d2fc36497a757e13e1f9987fd00cad5",
					"line": 309,
					"resource_type": "Deployment",
					"resource_name": "release-name-handbrake",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-handbrake}}.spec.template.spec.containers.name={{release-name-handbrake}}.securityContext.runAsUser",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-handbrake}}.spec.template.spec.containers.name={{release-name-handbrake}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-handbrake}}.spec.template.spec.containers.name={{release-name-handbrake}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/handbrake_template.yaml",
					"similarity_id": "d250607bfa99e482cb27c4ccbe5280f2ea1adcb017f6030325c6d471e977ae4e",
					"line": 309,
					"resource_type": "Deployment",
					"resource_name": "release-name-handbrake",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-handbrake}}.spec.template.spec.containers.name={{release-name-handbrake}}.securityContext.runAsUser=0",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-handbrake}}.spec.template.spec.containers.name={{release-name-handbrake}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-handbrake}}.spec.template.spec.containers.name={{release-name-handbrake}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Containers With Added Capabilities",
			"query_id": "19ebaa28-fc86-4a58-bcfa-015c9e22fe40",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not have extra capabilities allowed",
			"description_id": "719acefd",
			"files": [
				{
					"file_name": "templates/handbrake_template.yaml",
					"similarity_id": "f472bfaffd0fb650175437be3de1e76d70c7dab1a873bb946fbd52c0abb3782d",
					"line": 317,
					"resource_type": "Deployment",
					"resource_name": "release-name-handbrake",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-handbrake}}.spec.template.spec.containers.name={{release-name-handbrake}}.securityContext.capabilities.add",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-handbrake}}.spec.template.spec.containers.name={{release-name-handbrake}} has no capability added other than NET_BIND_SERVICE",
					"actual_value": "metadata.name={{release-name-handbrake}}.spec.template.spec.containers.name={{release-name-handbrake}} has a capability added other than NET_BIND_SERVICE"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/handbrake_template.yaml",
					"similarity_id": "d7d43356ede8b82924bd47e626921c1594c852944e24bb1b2346e689dec45e93",
					"line": 99,
					"resource_type": "Service",
					"resource_name": "release-name-handbrake",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-handbrake}}.namespace",
					"search_line": 99,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/handbrake_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-handbrake-handbrake",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-handbrake-handbrake}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/handbrake_template.yaml",
					"similarity_id": "f6f1b30ea59ce8b379c4a95eb254ecd5b5febfa438e87ceaa707e6edd4e70949",
					"line": 128,
					"resource_type": "Service",
					"resource_name": "release-name-handbrake-vnc",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-handbrake-vnc}}.namespace",
					"search_line": 128,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/handbrake_template.yaml",
					"similarity_id": "0fb3e6f623dee5a9b9c7ef52d39359eb43aa224fac6e03773c701a8d9efbd459",
					"line": 157,
					"resource_type": "Deployment",
					"resource_name": "release-name-handbrake",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-handbrake}}.namespace",
					"search_line": 157,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/handbrake_template.yaml",
					"similarity_id": "56d8f1177f9e489aea0045054914d5978f611d5b10c3a15a01f8a8ccca8e56d7",
					"line": 190,
					"resource_type": "Deployment",
					"resource_name": "release-name-handbrake",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-handbrake}}.spec.template.metadata",
					"search_line": 190,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-handbrake}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-handbrake}}",
					"actual_value": "metadata.name={{release-name-handbrake}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-handbrake}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/handbrake_template.yaml",
					"similarity_id": "e985b054541fe1ed30ae9f1b37ca690def347329e832de34ea043f15fe9f3942",
					"line": 33,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-handbrake-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-handbrake-config}}",
					"search_line": 33,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-handbrake-config}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-handbrake-config}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/handbrake_template.yaml",
					"similarity_id": "82839d545f33fc02ed935a1978d9036b4ee089afc94a509f99e6eccb98caaf93",
					"line": 77,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-handbrake-storage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-handbrake-storage}}",
					"search_line": 77,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-handbrake-storage}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-handbrake-storage}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/handbrake_template.yaml",
					"similarity_id": "f644aa32a50e7e3a230eba6b7c94b3bfec37b3700ab4c576e1cf096a460783b9",
					"line": 55,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-handbrake-output",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-handbrake-output}}",
					"search_line": 55,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-handbrake-output}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-handbrake-output}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/handbrake_template.yaml",
					"similarity_id": "c7989c28af1bce7110c2047e077377d4c5f77263c02220ff9d39983e46a9888c",
					"line": 157,
					"resource_type": "Deployment",
					"resource_name": "release-name-handbrake",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-handbrake}}",
					"search_line": 157,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-handbrake}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-handbrake}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/handbrake_template.yaml",
					"similarity_id": "c944ad16e95b2f78f6dad0b786dcb4b177daa299daf511bafbd3f7b5a1dad68e",
					"line": 157,
					"resource_type": "Deployment",
					"resource_name": "release-name-handbrake",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-handbrake}}",
					"search_line": 157,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-handbrake}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-handbrake}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/handbrake_template.yaml",
					"similarity_id": "6d1a88d8cceead45870d209403c032d9eded15e717ae8aa700dfb538c81ec31a",
					"line": 55,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-handbrake-output",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-handbrake-output}}",
					"search_line": 55,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-handbrake-output}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-handbrake-output}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/handbrake_template.yaml",
					"similarity_id": "ce47ebb390eacb2fddb656a893e3d0e854b7988defeabbf4a23a9d09f2a9f75b",
					"line": 77,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-handbrake-storage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-handbrake-storage}}",
					"search_line": 77,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-handbrake-storage}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-handbrake-storage}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/handbrake_template.yaml",
					"similarity_id": "03e20b29edee6ec7e4b31cb92e3415d023ad9363034bdf55e99a0d2ba21c766c",
					"line": 33,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-handbrake-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-handbrake-config}}",
					"search_line": 33,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-handbrake-config}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-handbrake-config}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/handbrake_template.yaml",
					"similarity_id": "4a17d41b1249a709aa7a74fad81056644e6ad9610a981aea349dffccf22c63df",
					"line": 311,
					"resource_type": "Deployment",
					"resource_name": "release-name-handbrake",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-handbrake}}.spec.template.spec.containers.name={{release-name-handbrake}}.securityContext.readOnlyRootFilesystem",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-handbrake}}.spec.template.spec.containers.name={{release-name-handbrake}}.securityContext.readOnlyRootFilesystem is true",
					"actual_value": "metadata.name={{release-name-handbrake}}.spec.template.spec.containers.name={{release-name-handbrake}}.securityContext.readOnlyRootFilesystem is false"
				}
			]
		}
	]
}
