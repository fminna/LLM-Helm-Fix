{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 122,
	"files_parsed": 1,
	"lines_parsed": 119,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 24,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:51:47.99311+02:00",
	"end": "2024-05-17T20:51:49.926849+02:00",
	"paths": [
		"templates/clusternet-controller-manager_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/clusternet-controller-manager_template.yaml",
					"similarity_id": "5147143405f29567cd14ba034361e207489628398533ba4ced6ff43756f86e87",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "release-name-clusternet-controller-manager",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.volumes.name={{clusternet}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-clusternet-controller-manager' of kind 'Deployment' in non kube-system namespace 'default' should not have hostPath '/etc/clusternet' mounted",
					"actual_value": "Resource name 'release-name-clusternet-controller-manager' of kind 'Deployment' in non kube-system namespace 'default' has a hostPath '/etc/clusternet' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/clusternet-controller-manager_template.yaml",
					"similarity_id": "19d3e55d74b5408b078e9927dcf277a1f58c2113be2ce36536c46ca2e124d691",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "release-name-clusternet-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/clusternet-controller-manager_template.yaml",
					"similarity_id": "2e4cfd0c22d9c441c223bc125b1ed9d76df25ed9231ffd4cee662583cfdf5e6a",
					"line": 84,
					"resource_type": "Deployment",
					"resource_name": "release-name-clusternet-controller-manager",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.volumes.name={{clusternet}}.hostPath.path",
					"search_line": 84,
					"search_value": "",
					"expected_value": "Workload name 'release-name-clusternet-controller-manager' of kind 'Deployment' should not mount a host sensitive OS directory '/etc/clusternet' with hostPath",
					"actual_value": "Workload name 'release-name-clusternet-controller-manager' of kind 'Deployment' is mounting a host sensitive OS directory '/etc/clusternet' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/clusternet-controller-manager_template.yaml",
					"similarity_id": "0cb8ac69df02580f87a9fd8033f4d1fda5bab305bb4a2ca587855f6aee5cc4cd",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "release-name-clusternet-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/clusternet-controller-manager_template.yaml",
					"similarity_id": "e15f07283ae7a87ca0e8aac64367f7e89549d33261a8b8786788abc046779fef",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "release-name-clusternet-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/clusternet-controller-manager_template.yaml",
					"similarity_id": "44665b88571445e4bf22a67d4361808995310cc3f42f9cea07dc156bbe68dea8",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-clusternet-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}",
					"search_line": 92,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/clusternet-controller-manager_template.yaml",
					"similarity_id": "b80543c24e8bc753c4969c1538500ca5d5714bc69e77e8998aa278ed56054ae8",
					"line": 93,
					"resource_type": "Deployment",
					"resource_name": "release-name-clusternet-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}",
					"search_line": 93,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/clusternet-controller-manager_template.yaml",
					"similarity_id": "2049bf7992eaae6c7bb9d9b448ee7fa6f274a17db44ea3221e5c2147f6d47642",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "release-name-clusternet-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/clusternet-controller-manager_template.yaml",
					"similarity_id": "9b588936f81225131e498a918975e9299380f2781eae69787edae3adfeb6e390",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "release-name-clusternet-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/clusternet-controller-manager_template.yaml",
					"similarity_id": "79443283cc38597b830f4b436ac4cb68a065f951f1bc90786f4fd017f2b491ba",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "release-name-clusternet-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/clusternet-controller-manager_template.yaml",
					"similarity_id": "f6fad5cdf495b5253f545b21da8ff0a1cc956e3c7fa78ed909760c46fe6c1a45",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "release-name-clusternet-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/clusternet-controller-manager_template.yaml",
					"similarity_id": "fbb5037e87048fb67f186e9ecb72cca4997235bbcce54730346608f0cbdb5941",
					"line": 39,
					"resource_type": "Deployment",
					"resource_name": "release-name-clusternet-controller-manager",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-clusternet-controller-manager}}.namespace",
					"search_line": 39,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/clusternet-controller-manager_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "clusternet-controller-manager",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{clusternet-controller-manager}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/clusternet-controller-manager_template.yaml",
					"similarity_id": "179834e27defa4c6f749e610d69de46b3261b7f102104a8c215b708ec8a089d8",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-clusternet-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=clusternet-controller-manager has CPU limits",
					"actual_value": "spec.template.spec.containers.name=clusternet-controller-manager doesn't have CPU limits"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/clusternet-controller-manager_template.yaml",
					"similarity_id": "7284304be1dcead78765996db3ce3d3780f3fceff44b725da62422b8b79171ac",
					"line": 93,
					"resource_type": "Deployment",
					"resource_name": "release-name-clusternet-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}.resources.requests",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name={{clusternet-controller-manager}}.resources.requests should have CPU requests",
					"actual_value": "spec.template.spec.containers.name={{clusternet-controller-manager}}.resources.requests doesn't have CPU requests"
				}
			]
		},
		{
			"query_name": "Cluster Admin Rolebinding With Superuser Permissions",
			"query_id": "249328b8-5f0f-409f-b1dd-029f07882e11",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Ensure that the cluster-admin role is only used where required (RBAC)",
			"description_id": "567eee7e",
			"files": [
				{
					"file_name": "templates/clusternet-controller-manager_template.yaml",
					"similarity_id": "e5c0b8c7c501a3bb612f650602b4b4d66cf1b76f8ce00e4f5ba84eddb4301276",
					"line": 28,
					"resource_type": "ClusterRoleBinding",
					"resource_name": "clusternet:controller-manager",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{clusternet:controller-manager}}.roleRef.name=cluster-admin",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'clusternet:controller-manager' of kind 'ClusterRoleBinding' isn't binding 'cluster-admin' role with superuser permissions",
					"actual_value": "Resource name 'clusternet:controller-manager' of kind 'ClusterRoleBinding' is binding 'cluster-admin' role with superuser permissions"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/clusternet-controller-manager_template.yaml",
					"similarity_id": "6f58b850898c1d6118fef0adda8633f71d853c094e0e47cdc3f9a03dca5e2600",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "release-name-clusternet-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-clusternet-controller-manager}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-clusternet-controller-manager is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=release-name-clusternet-controller-manager is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/clusternet-controller-manager_template.yaml",
					"similarity_id": "bc2dd8e8443d60c9732b1153ba87b5033b594b697929a262e3b3c15ab3939df0",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "release-name-clusternet-controller-manager",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/clusternet-controller-manager_template.yaml",
					"similarity_id": "304f6ce2b987ac2e959a8718a50e74f0fc1dae4621e3f5e9ed47a69feeac8497",
					"line": 55,
					"resource_type": "Deployment",
					"resource_name": "release-name-clusternet-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{clusternet-controller-manager}}",
					"actual_value": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{clusternet-controller-manager}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/clusternet-controller-manager_template.yaml",
					"similarity_id": "87f3b702ab500311e2882a1fef9da558dc39454db658ede6ec1bd5db39a71e93",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "release-name-clusternet-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-clusternet-controller-manager}}.spec.containers.name=clusternet-controller-manager",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-clusternet-controller-manager}}.spec.containers.name=clusternet-controller-manager.securityContext should be set",
					"actual_value": "metadata.name={{release-name-clusternet-controller-manager}}.spec.containers.name=clusternet-controller-manager.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/clusternet-controller-manager_template.yaml",
					"similarity_id": "507c0174c306446950fe8a88d1f2b38f1ecec5faf03a10f0f2d04690bf784ecc",
					"line": 39,
					"resource_type": "Deployment",
					"resource_name": "release-name-clusternet-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-clusternet-controller-manager}}",
					"search_line": 39,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-clusternet-controller-manager}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-clusternet-controller-manager}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/clusternet-controller-manager_template.yaml",
					"similarity_id": "8e060c50f3b70ec034c50b698658fbee0985c7edf4112783b4d741949f5d8ecc",
					"line": 39,
					"resource_type": "Deployment",
					"resource_name": "release-name-clusternet-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-clusternet-controller-manager}}",
					"search_line": 39,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-clusternet-controller-manager}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-clusternet-controller-manager}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/clusternet-controller-manager_template.yaml",
					"similarity_id": "af78856c513916496eb9e7238812c8f44765d43607ae44a528f09686a78a20c4",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "release-name-clusternet-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name=clusternet-controller-manager",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=clusternet-controller-manager has a security context",
					"actual_value": "spec.template.spec.containers.name=clusternet-controller-manager does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/clusternet-controller-manager_template.yaml",
					"similarity_id": "9171a6f2c1f4c2cebc642df5a3d4a4c91258a923a8ac6807ef81d86b2ddb31e2",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "release-name-clusternet-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-clusternet-controller-manager}}.spec.template.spec.containers.name={{clusternet-controller-manager}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
