{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 290,
	"files_parsed": 1,
	"lines_parsed": 271,
	"lines_ignored": 19,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 14,
		"MEDIUM": 17,
		"TRACE": 0
	},
	"total_counter": 34,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:18:36.929912+02:00",
	"end": "2024-06-26T03:18:39.017263+02:00",
	"paths": [
		"templates/garage_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "d9bf5f2f4259137b4835bead6750caa4476ca9c976c12ef7babf351b6c6e5a73",
					"line": 231,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-garage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-garage}}.spec.template.spec.containers.name={{garage}}",
					"search_line": 231,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-garage}}.spec.template.spec.containers.name={{garage}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-garage}}.spec.template.spec.containers.name={{garage}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "79440c91554c8c528228e01d90956c6ee2273ef294718fb337b61e6c6175ec1d",
					"line": 218,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-garage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-garage}}.spec.template.spec.initContainers.name={{garage-init}}",
					"search_line": 218,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-garage}}.spec.template.spec.initContainers.name={{garage-init}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-garage}}.spec.template.spec.initContainers.name={{garage-init}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "d69291543c7206a266455d9fc076c915c19eba1c6d12055613b3997b1105b2a1",
					"line": 255,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-garage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-garage}}.spec.template.spec.containers.name={{garage}}.volumeMounts.name={{etc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-garage}}.spec.template.spec.containers.name={{garage}}.volumeMounts.name={{etc}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-garage}}.spec.template.spec.containers.name={{garage}}.volumeMounts.name={{etc}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "124e464049df2c210a43383fc94eeb432b1ab176be1917030878cfb8be4fed50",
					"line": 205,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-garage",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-garage}}.spec.template.spec.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-garage}}.spec.template.spec.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-garage}}.spec.template.spec.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Incorrect Volume Claim Access Mode ReadWriteOnce",
			"query_id": "3878dc92-8e5d-47cf-9cdd-7590f71d21b9",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Kubernetes Stateful Sets must have one Volume Claim template with the access mode 'ReadWriteOnce'",
			"description_id": "f4e48914",
			"files": [
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "3076609ad2f6691460b65de11b464a956c4fc3eb599169dc7275c9d88dc101ed",
					"line": 275,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-garage",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name=release-name-garage.spec.volumeClaimTemplates",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-garage.spec.volumeClaimTemplates has only one template with a 'ReadWriteOnce'",
					"actual_value": "metadata.name=release-name-garage.spec.volumeClaimTemplates has multiple templates with 'ReadWriteOnce'"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "259e18006c73db0efdc70acd24e714a94931c69c5725c98ca5cc8c063508c946",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-garage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-garage}}.spec.template.spec.initContainers.name={{garage-init}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-garage}}.spec.template.spec.initContainers.name={{garage-init}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-garage}}.spec.template.spec.initContainers.name={{garage-init}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "a3fd9b0ebcd41e9b2a83d01b2d49caa1d192dee6666e700e2f21dc43e641dbe5",
					"line": 230,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-garage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-garage}}.spec.template.spec.containers.name={{garage}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-garage}}.spec.template.spec.containers.name={{garage}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-garage}}.spec.template.spec.containers.name={{garage}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "ba3575934efcf44e888171d489a598346c47f34284543ee74f5ca6c34d6b8ef3",
					"line": 230,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-garage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-garage}}.spec.template.spec.containers.name={{garage}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-garage}}.spec.template.spec.containers.name={{garage}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-garage}}.spec.template.spec.containers.name={{garage}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "c82cdca6271f5709b49c12ea72d9618f8d22a56ef83b3ae4ffe9f709bf9d3636",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-garage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-garage}}.spec.template.spec.initContainers.name={{garage-init}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-garage}}.spec.template.spec.initContainers.name={{garage-init}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-garage}}.spec.template.spec.initContainers.name={{garage-init}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "46658751c72fad04477d1c812ac6766f4947297d648da8fbb63a646953d8b7dc",
					"line": 230,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-garage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-garage}}.spec.template.spec.containers.name={{garage}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-garage}}.spec.template.spec.containers.name={{garage}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-garage}}.spec.template.spec.containers.name={{garage}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "c64c3c319075073a346251d9dfaafca7dd23c4992ec163a16df75fbb2b42376f",
					"line": 231,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-garage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-garage}}.spec.template.spec.containers.name={{garage}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-garage}}.spec.template.spec.containers.name={{garage}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-garage}}.spec.template.spec.containers.name={{garage}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "86ea1b0eeb8c1baba1814ba788865d7a3f6053ce1b09dc870b88de4011b5fffa",
					"line": 218,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-garage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-garage}}.spec.template.spec.initContainers.name={{garage-init}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-garage}}.spec.template.spec.initContainers.name={{garage-init}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-garage}}.spec.template.spec.initContainers.name={{garage-init}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "d52d5bf60cef2722601e94466680c3baded6d4f4bec6c73730cc978cb39eab01",
					"line": 199,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-garage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-garage}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-garage}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-garage}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "07d1c0f65626041fe7938ca0144b1752d18f03671bf60b3e4067f9911562c83a",
					"line": 151,
					"resource_type": "Service",
					"resource_name": "release-name-garage",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-garage}}",
					"search_line": 151,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "47ca45a10301dd9a1c2bc5047ed78c9170831c3033ed4519328afd35845d1840",
					"line": 35,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-garage-env",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-garage-env}}",
					"search_line": 35,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Secret",
					"resource_name": "release-name-garage-rpc-secret",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-garage-rpc-secret}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "6da7878077dc4c1a53976921c39692ae6269c99a07fabc1063f065ed87e09ef9",
					"line": 43,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-garage-config",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-garage-config}}",
					"search_line": 43,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "b3c54aa0b92ef689a0daf57d6910c1b4df8d9df0634b99691d2704fbd71088ce",
					"line": 177,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-garage",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{StatefulSet}}.metadata.name={{release-name-garage}}",
					"search_line": 177,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "b5f051f2df85ecf5f311bf6c863ff9bbc869584819defe982d0a4ca4348cd5e9",
					"line": 126,
					"resource_type": "Service",
					"resource_name": "release-name-garage-headless",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-garage-headless}}",
					"search_line": 126,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-garage",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-garage}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "c79f1f4e8e06b89e0eb97dcba4183d6739456a28cabcfe122a3d97d110f4798b",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-garage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-garage}}.spec.template.spec.initContainers.name=garage-init",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=garage-init has resources defined",
					"actual_value": "spec.template.spec.initContainers.name=garage-init doesn't have resources defined"
				},
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "6f506be8bb42b61573ba63db8216df161cbcf3257ae4498ee4dd33b7285a5173",
					"line": 267,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-garage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-garage}}.spec.template.spec.containers.name={{garage}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=garage has limits defined",
					"actual_value": "spec.template.spec.containers.name=garage doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "28bd3843431fcb07f4e4c9453b915107070aac40dabbf6f1d80730e2691c54ce",
					"line": 267,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-garage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-garage}}.spec.template.spec.containers.name={{garage}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=garage.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=garage.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "894f286893c307c38091ee993643b0fc8d16a1afe1cc75000edf0585604078fd",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-garage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-garage}}.spec.template.spec.initContainers.name=garage-init",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=garage-init should have resources defined",
					"actual_value": "spec.template.spec.initContainers.name=garage-init doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "9444d19a4ad70e3f6dbdd738da6ca1f345ea8ec29a11a2e9f323a4c22d8788ab",
					"line": 237,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-garage",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-garage}}.spec.template.spec.containers.name={{garage}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-garage}}.spec.template.spec.containers.name={{garage}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-garage}}.spec.template.spec.containers.name={{garage}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "7e4e4d0c37c8e7a7fe379ce23ff29af467fb4d85e4c9521073d77ab78064eba8",
					"line": 210,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-garage",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-garage}}.spec.template.spec.initContainers.name={{garage-init}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-garage}}.spec.template.spec.initContainers.name={{garage-init}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-garage}}.spec.template.spec.initContainers.name={{garage-init}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "98221216e4e66b5f7ae5b5fb6aecb8095d02cbe89693a8e4147899e375b60b12",
					"line": 194,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-garage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-garage}}.spec.template.metadata",
					"search_line": 194,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-garage}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{garage}}",
					"actual_value": "metadata.name={{release-name-garage}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{garage}}"
				},
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "98221216e4e66b5f7ae5b5fb6aecb8095d02cbe89693a8e4147899e375b60b12",
					"line": 194,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-garage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-garage}}.spec.template.metadata",
					"search_line": 194,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-garage}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{garage-init}}",
					"actual_value": "metadata.name={{release-name-garage}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{garage-init}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "fdf356550d309d7b3087f819be0d75ba745435cf7ecbb9833fce85768b8d0359",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-garage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-garage}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-garage}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-garage}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "a2854af9659e485510ab9eefbfad43c96f6e3777fec00da3ab66d3003ee951d6",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-garage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-garage}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-garage}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-garage}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "96ce9737532d2b6bfda3e6c3c866e78a7a1f29352d0ad798695703220fba86d5",
					"line": 215,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-garage",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-garage}}.spec.template.spec.initContainers.env.name={{RPC_SECRET}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.initContainers.name={{garage-init}}.env.name={{RPC_SECRET}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.initContainers.name={{garage-init}}.env.name={{RPC_SECRET}}.valueFrom.secretKeyRef' is defined"
				}
			]
		},
		{
			"query_name": "StatefulSet Has No PodAntiAffinity",
			"query_id": "d740d048-8ed3-49d3-b77b-6f072f3b669e",
			"query_url": "https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Check if StatefulSet resources don't have a podAntiAffinity policy, which prevents multiple pods from being scheduled on the same node.",
			"description_id": "f0d30dd9",
			"files": [
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "c8f4fe9a9fe900660fc533879108eddc21a827b873df0a31fc4aeb1665ce5094",
					"line": 199,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-garage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-garage}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.affinity' should be set",
					"actual_value": "'spec.template.spec.affinity' is undefined"
				}
			]
		},
		{
			"query_name": "StatefulSet Requests Storage",
			"query_id": "8cf4671a-cf3d-46fc-8389-21e7405063a2",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "A StatefulSet requests volume storage.",
			"description_id": "6210afe6",
			"files": [
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "0193623df45b216f1f5e4907177cab58df1c7d262b8ad4ef34b9f1b5f1c769dd",
					"line": 282,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-garage",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-garage}}.spec.volumeClaimTemplates.spec.resources.requests.storage=100Mi",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-garage}}.spec.volumeClaimTemplates.spec.resources.requests.storage should not be set",
					"actual_value": "metadata.name={{release-name-garage}}.spec.volumeClaimTemplates.spec.resources.requests.storage is set to 100Mi"
				}
			]
		},
		{
			"query_name": "StatefulSet Without PodDisruptionBudget",
			"query_id": "1db3a5a5-bf75-44e5-9e44-c56cfc8b1ac5",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "StatefulSets should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "f3c77130",
			"files": [
				{
					"file_name": "templates/garage_template.yaml",
					"similarity_id": "4cf856d6dcf2b5caf1e4be0661b172429385a944b0d515f7d56c5c3b346ed971",
					"line": 186,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-garage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-garage}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-garage is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=release-name-garage is not targeted by a PodDisruptionBudget"
				}
			]
		}
	]
}
