{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 116,
	"files_parsed": 1,
	"lines_parsed": 112,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 17,
		"MEDIUM": 20,
		"TRACE": 0
	},
	"total_counter": 39,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:08:51.969577+02:00",
	"end": "2024-06-26T01:08:54.049374+02:00",
	"paths": [
		"templates/consumer_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "7be345b154f8423cbb77c259a8064165a56c2682adfb87738f5ebe60bc27e465",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "release-name-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer}}.spec.template.spec.containers.name={{consumer}}",
					"search_line": 75,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-consumer}}.spec.template.spec.containers.name={{consumer}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-consumer}}.spec.template.spec.containers.name={{consumer}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "6cc57856fdc35e34bcab8050688637f1f0015a5d89e9e603d9fc85cce5591e78",
					"line": 111,
					"resource_type": "Pod",
					"resource_name": "release-name-consumer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "db6f4b1f0f82fddc14542611f82075427ea1d86d91bd8ea243f82bcc709a91be",
					"line": 111,
					"resource_type": "Pod",
					"resource_name": "release-name-consumer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "55c28d2451bb8342765acb714e6a99e2db7185eaa4e059f5e76717f525256023",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "release-name-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer}}.spec.template.spec.containers.name={{consumer}}",
					"search_line": 75,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-consumer}}.spec.template.spec.containers.name={{consumer}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-consumer}}.spec.template.spec.containers.name={{consumer}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "ab44b772866f03be494f1899cf58e390cb013ecf6a458dfb8610a05bdbb91542",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "release-name-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer}}.spec.template.spec.containers.name={{consumer}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-consumer}}.spec.template.spec.containers.name={{consumer}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-consumer}}.spec.template.spec.containers.name={{consumer}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "e4b7650265f21cda852a2be44c46c0dc616c068d97b60dc2c81727394053c6f4",
					"line": 111,
					"resource_type": "Pod",
					"resource_name": "release-name-consumer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "bede42e6c75b26abf0711e4d9bbccf5b84ae8e0e781e71edd837209249e8af03",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer}}.spec.template.spec.containers.name={{consumer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-consumer}}.spec.template.spec.containers.name={{consumer}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-consumer}}.spec.template.spec.containers.name={{consumer}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "f22c6c1e1365d08a912f0d5b0d15bebf9a25243536fb4ef79220527e445c3cc5",
					"line": 111,
					"resource_type": "Pod",
					"resource_name": "release-name-consumer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "1e1576bef3be8b3983158268b7e74c20b3449343c47ed2ccece31e1bd9ac90bd",
					"line": 111,
					"resource_type": "Pod",
					"resource_name": "release-name-consumer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "0b8df9a7585d62bc942e78c4019c8863ce75617dc73eada3c4ae1197ee4e8298",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer}}.spec.template.spec.containers.name={{consumer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-consumer}}.spec.template.spec.containers.name={{consumer}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-consumer}}.spec.template.spec.containers.name={{consumer}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "1b42b98930c2c7409d82475a2209d12916499a1000ad6345a9df9b06476a6b03",
					"line": 111,
					"resource_type": "Pod",
					"resource_name": "release-name-consumer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "7a63a3a8f7260a2ff25ba02fcc19d20b67685165c5f243e730196e8b1bd671de",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer}}.spec.template.spec.containers.name={{consumer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-consumer}}.spec.template.spec.containers.name={{consumer}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-consumer}}.spec.template.spec.containers.name={{consumer}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "1f258f7eb31e1d82c12756beefce1ea9a658f141aacfad63a0ae388b20256ea9",
					"line": 111,
					"resource_type": "Pod",
					"resource_name": "release-name-consumer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "aace202ccc977367e687fbba3a244d3bfa34c3f1d178c4586d104b455bb6740a",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "release-name-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer}}.spec.template.spec.containers.name={{consumer}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-consumer}}.spec.template.spec.containers.name={{consumer}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-consumer}}.spec.template.spec.containers.name={{consumer}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "5da3c04fade46465367907440fcda1feade9bead6b0935c45c82c9d8087bd071",
					"line": 111,
					"resource_type": "Pod",
					"resource_name": "release-name-consumer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "c79aa13ef68898cf7b172cad10144cc634a97df8a97b2573d1376457e22ab525",
					"line": 109,
					"resource_type": "Pod",
					"resource_name": "release-name-consumer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-consumer-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-consumer-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "ccd1c173822a525190f811ea6f076ea6ad94b313b9dde08527d1918888769002",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-consumer}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-consumer}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "fa6903226124f3b831d2f0e0a5b4ea9a08d7555af3fb64962a02a4312b220059",
					"line": 109,
					"resource_type": "Pod",
					"resource_name": "release-name-consumer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-consumer-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-consumer-test-connection}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "e5d9cad5bb948d6b221a9b30d4ea358743d01646629fe4521137dd85c5725b1c",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "release-name-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-consumer}}",
					"search_line": 40,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-consumer}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "0c98c17de0216d9d06cd49849d55474aad0aec3f6da76c5ec070cdd5282ac7ff",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-consumer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-consumer-test-connection}}",
					"search_line": 100,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Service",
					"resource_name": "release-name-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-consumer}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "e939080154ed8be30b9ef43e5e8d626fdb8fbc95fced8d37034739c827f78343",
					"line": 93,
					"resource_type": "Deployment",
					"resource_name": "release-name-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer}}.spec.template.spec.containers.name={{consumer}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=consumer has limits defined",
					"actual_value": "spec.template.spec.containers.name=consumer doesn't have limits defined"
				},
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "2a7a8556198e7b8fa05903549d59758a75859b36f3a9488353d19e57a91532ce",
					"line": 111,
					"resource_type": "Pod",
					"resource_name": "release-name-consumer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "9f0e6167b6a2301101e0d1bc22f991b8359d9ef4081716b5e2d9e20f6fbeec22",
					"line": 111,
					"resource_type": "Pod",
					"resource_name": "release-name-consumer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "c7b11e72c1c777a4233e754bffc6d8f68ae9846c8de01e1ff45ed50b596dd4f7",
					"line": 93,
					"resource_type": "Deployment",
					"resource_name": "release-name-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer}}.spec.template.spec.containers.name={{consumer}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=consumer.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=consumer.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "250b9ba17d32def1dc1a91645215a95afb22d76e13d3635adfb1ba1af681bfa4",
					"line": 112,
					"resource_type": "Pod",
					"resource_name": "release-name-consumer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "f362a0bccf1771b21d9363281432022a08fcfdc262ba88a47038b3c344d41979",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-consumer}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{consumer}}",
					"actual_value": "metadata.name={{release-name-consumer}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{consumer}}"
				},
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "64b6232f4aa475ce4d0f3f7487805eefb0be6b15798b3c154ba47216a3da2763",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-consumer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-consumer-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-consumer-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "ba451f3524f2710d89e473b654816467a923a8fd06048a51b71d00701c828e4f",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "release-name-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer}}.spec.containers.name={{consumer}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-consumer}}.spec.containers.name={{consumer}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-consumer}}.spec.containers.name={{consumer}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "bb8ccb2285ab16c44e5ea0d766d7650273b8de1d9173b49283edb55d7832e8f1",
					"line": 111,
					"resource_type": "Pod",
					"resource_name": "release-name-consumer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "69183d9f466b4305e16936d72e5995ecfcffb6b87a85c38101ca994a7edb521c",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-consumer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-consumer-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-consumer-test-connection}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "dcd88632888107cd7d997e2f0b09314b37f9dd2bcbece1a180e36adb06bbc6e2",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-consumer}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-consumer}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "49c0aef4a091b8d7a6f47b2ec11f47e2268035ad2171fd1368f8df2611bf93a0",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-consumer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-consumer-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-consumer-test-connection}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "cb20b12a51fad0b4b33d039ece2c8d5bd9c4692d56450eebf6dd03d53ba2841a",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-consumer}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-consumer}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "143166e2f5db88347d478d47b2777c86e91fa3b93c2264678c628b2f940739ab",
					"line": 111,
					"resource_type": "Pod",
					"resource_name": "release-name-consumer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				},
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "926781923dfcb03752bd837c647ab7d143a9e2fd7418cbb97f5488012b092679",
					"line": 109,
					"resource_type": "Pod",
					"resource_name": "release-name-consumer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-consumer-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-consumer-test-connection}}.spec does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "b884e7f61cc60be70b367aa86a02b6450ed3ddc4e63fbf51745131b51bf385a9",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "release-name-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer}}.spec.template.spec.containers.name={{consumer}}",
					"search_line": 75,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-consumer}}.spec.template.spec.containers.name={{consumer}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-consumer}}.spec.template.spec.containers.name={{consumer}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/consumer_template.yaml",
					"similarity_id": "af1df515707a008c4854068d2f551154fb33aee4626b6980c2db9350f787aabe",
					"line": 111,
					"resource_type": "Pod",
					"resource_name": "release-name-consumer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-consumer-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
