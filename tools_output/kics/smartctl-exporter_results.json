{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 4014,
	"files_parsed": 1,
	"lines_parsed": 4010,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 7,
		"INFO": 0,
		"LOW": 3,
		"MEDIUM": 6,
		"TRACE": 0
	},
	"total_counter": 16,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:20:09.109658+02:00",
	"end": "2024-05-17T22:20:11.15559+02:00",
	"paths": [
		"templates/smartctl-exporter_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Is Privileged",
			"query_id": "dd29336b-fe57-445b-a26e-e6aa867ae609",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/#privileged-mode-for-containers",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Privileged containers lack essential security restrictions and should be avoided by removing the 'privileged' flag or by changing its value to false",
			"description_id": "55f59030",
			"files": [
				{
					"file_name": "templates/smartctl-exporter_template.yaml",
					"similarity_id": "63b700c819206a360a2f9ed224e345a16d9cd41d02cdb770f2455c774871e14b",
					"line": 3931,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-smartctl-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-smartctl-exporter}}.spec.template.spec.containers.name={{release-name-smartctl-exporter}}.securityContext.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smartctl-exporter}}.spec.template.spec.containers.name={{release-name-smartctl-exporter}}.securityContext.privileged is unset or false",
					"actual_value": "metadata.name={{release-name-smartctl-exporter}}.spec.template.spec.containers.name={{release-name-smartctl-exporter}}.securityContext.privileged is true"
				}
			]
		},
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/smartctl-exporter_template.yaml",
					"similarity_id": "f9f20eb4eaa46c60a3db8ae70a82ab55525dfb554e54b49cf5b0710d83b6e9e1",
					"line": 3973,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-smartctl-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-smartctl-exporter}}.spec.template.spec.volumes.name={{hostdev}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-smartctl-exporter' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/dev' mounted",
					"actual_value": "Resource name 'release-name-smartctl-exporter' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/dev' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/smartctl-exporter_template.yaml",
					"similarity_id": "1c804276f186db592a7c49d1b05af1338c170c5ec63f80947e4ef2015f921bd5",
					"line": 3930,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-smartctl-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-smartctl-exporter}}.spec.template.spec.containers.name={{release-name-smartctl-exporter}}.securityContext.allowPrivilegeEscalation",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smartctl-exporter}}.spec.template.spec.containers.name={{release-name-smartctl-exporter}}.securityContext.allowPrivilegeEscalation should be set to false",
					"actual_value": "metadata.name={{release-name-smartctl-exporter}}.spec.template.spec.containers.name={{release-name-smartctl-exporter}}.securityContext.allowPrivilegeEscalation is true"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/smartctl-exporter_template.yaml",
					"similarity_id": "b00f8f4944952a8e0ef315396f98f27f1b8a480911fedc1b0eb94627704fa5ed",
					"line": 3886,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-smartctl-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-smartctl-exporter}}.spec.template.spec.containers.name={{release-name-smartctl-exporter}}.volumeMounts.name={{varlogs}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smartctl-exporter}}.spec.template.spec.containers.name={{release-name-smartctl-exporter}}.volumeMounts.name={{varlogs}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-smartctl-exporter}}.spec.template.spec.containers.name={{release-name-smartctl-exporter}}.volumeMounts.name={{varlogs}}.readOnly is false"
				},
				{
					"file_name": "templates/smartctl-exporter_template.yaml",
					"similarity_id": "0b459bf8bde46ea8e67910e48dbd902a6b7c6285a5898bc5552a46016d5483ff",
					"line": 3889,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-smartctl-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-smartctl-exporter}}.spec.template.spec.containers.name={{release-name-smartctl-exporter}}.volumeMounts.name={{varrun}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smartctl-exporter}}.spec.template.spec.containers.name={{release-name-smartctl-exporter}}.volumeMounts.name={{varrun}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-smartctl-exporter}}.spec.template.spec.containers.name={{release-name-smartctl-exporter}}.volumeMounts.name={{varrun}}.readOnly is false"
				},
				{
					"file_name": "templates/smartctl-exporter_template.yaml",
					"similarity_id": "dfd3ba9893b88c917f664c7a06f11d8e7f69babba150faef471abe1d31b0189d",
					"line": 3874,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-smartctl-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-smartctl-exporter}}.spec.template.spec.containers.name={{release-name-smartctl-exporter}}.volumeMounts.name={{devshm}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smartctl-exporter}}.spec.template.spec.containers.name={{release-name-smartctl-exporter}}.volumeMounts.name={{devshm}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-smartctl-exporter}}.spec.template.spec.containers.name={{release-name-smartctl-exporter}}.volumeMounts.name={{devshm}}.readOnly is false"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/smartctl-exporter_template.yaml",
					"similarity_id": "78175eb5d27a9ca58f99df1fa6fa16bf3bff1cf7302aa95aacb716041da3cdd6",
					"line": 3973,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-smartctl-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-smartctl-exporter}}.spec.template.spec.volumes.name={{hostdev}}.hostPath.path",
					"search_line": 3973,
					"search_value": "",
					"expected_value": "Workload name 'release-name-smartctl-exporter' of kind 'DaemonSet' should not mount a host sensitive OS directory '/dev' with hostPath",
					"actual_value": "Workload name 'release-name-smartctl-exporter' of kind 'DaemonSet' is mounting a host sensitive OS directory '/dev' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/smartctl-exporter_template.yaml",
					"similarity_id": "dc884b18827ced9c39bffebdb5976beb75b9d186e0307a4a27b207177921ad90",
					"line": 3927,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-smartctl-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-smartctl-exporter}}.spec.template.spec.containers.name={{release-name-smartctl-exporter}}.securityContext.runAsUser",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smartctl-exporter}}.spec.template.spec.containers.name={{release-name-smartctl-exporter}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-smartctl-exporter}}.spec.template.spec.containers.name={{release-name-smartctl-exporter}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/smartctl-exporter_template.yaml",
					"similarity_id": "1abdc3c19833135cf985928f8afcb77f94e468473b1911bdae6175be3a976cd6",
					"line": 3927,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-smartctl-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-smartctl-exporter}}.spec.template.spec.containers.name={{release-name-smartctl-exporter}}.securityContext.runAsUser=0",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smartctl-exporter}}.spec.template.spec.containers.name={{release-name-smartctl-exporter}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-smartctl-exporter}}.spec.template.spec.containers.name={{release-name-smartctl-exporter}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Containers With Added Capabilities",
			"query_id": "19ebaa28-fc86-4a58-bcfa-015c9e22fe40",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not have extra capabilities allowed",
			"description_id": "719acefd",
			"files": [
				{
					"file_name": "templates/smartctl-exporter_template.yaml",
					"similarity_id": "fe730defa20272d7fa65efbb4444519cf57650b3e4cf0f1ad60bf1e23a538827",
					"line": 3935,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-smartctl-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-smartctl-exporter}}.spec.template.spec.containers.name={{release-name-smartctl-exporter}}.securityContext.capabilities.add",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smartctl-exporter}}.spec.template.spec.containers.name={{release-name-smartctl-exporter}} has no capability added other than NET_BIND_SERVICE",
					"actual_value": "metadata.name={{release-name-smartctl-exporter}}.spec.template.spec.containers.name={{release-name-smartctl-exporter}} has a capability added other than NET_BIND_SERVICE"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/smartctl-exporter_template.yaml",
					"similarity_id": "607be62fb29e6cfe1835e086ea39dcdb89b9a10c7df86dcf2b22cf1e4ff88fee",
					"line": 3776,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-smartctl-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-smartctl-exporter}}.namespace",
					"search_line": 3776,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/smartctl-exporter_template.yaml",
					"similarity_id": "d457bf737d9078a89746f5f424402bc709c74f312177a0fdc5c6a5acd0fd9d28",
					"line": 3747,
					"resource_type": "Service",
					"resource_name": "release-name-smartctl-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-smartctl-exporter}}.namespace",
					"search_line": 3747,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/smartctl-exporter_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-smartctl-exporter-dashboard",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-smartctl-exporter-dashboard}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/smartctl-exporter_template.yaml",
					"similarity_id": "119f957fd4f4ff2e7f33a876b92644609fb1b93b08189209040fe1b2a522a4f1",
					"line": 3808,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-smartctl-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smartctl-exporter}}.spec.template.metadata",
					"search_line": 3808,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smartctl-exporter}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-smartctl-exporter}}",
					"actual_value": "metadata.name={{release-name-smartctl-exporter}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-smartctl-exporter}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/smartctl-exporter_template.yaml",
					"similarity_id": "5d8e4034fddaf68ff4947d436119d6c401afe46a44574b40bf95ab8e72f42a6b",
					"line": 3776,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-smartctl-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smartctl-exporter}}",
					"search_line": 3776,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smartctl-exporter}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-smartctl-exporter}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/smartctl-exporter_template.yaml",
					"similarity_id": "9dad918c1b450566a84daf159d0384ba48b9bfc9e6b6b8b30319bd7a62b259a8",
					"line": 3776,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-smartctl-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smartctl-exporter}}",
					"search_line": 3776,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smartctl-exporter}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-smartctl-exporter}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
