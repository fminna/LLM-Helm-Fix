{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 241,
	"files_parsed": 1,
	"lines_parsed": 233,
	"lines_ignored": 8,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 12,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:26:49.358663+02:00",
	"end": "2024-06-26T03:26:51.491775+02:00",
	"paths": [
		"templates/nfs-server-provisioner_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/nfs-server-provisioner_template.yaml",
					"similarity_id": "93694fed53b8112380eddd1632002feea3e288877c5c2aa08d0cd3fa2d21e227",
					"line": 217,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-nfs-server-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}",
					"search_line": 217,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/nfs-server-provisioner_template.yaml",
					"similarity_id": "c890222c1a45f40248dd718f8dc440f2da70f00dbd061ee14e354eef5ef6ce77",
					"line": 217,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-nfs-server-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}",
					"search_line": 217,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/nfs-server-provisioner_template.yaml",
					"similarity_id": "9d2f759adc75d5de66256b0932a23405129d8005e318a0c70470b1d05ad78d7d",
					"line": 217,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-nfs-server-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Containers With Added Capabilities",
			"query_id": "19ebaa28-fc86-4a58-bcfa-015c9e22fe40",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not have extra capabilities allowed",
			"description_id": "719acefd",
			"files": [
				{
					"file_name": "templates/nfs-server-provisioner_template.yaml",
					"similarity_id": "f3751a8098775363d06bbe192f353ca01823f660f34a514587c829bdd247ab87",
					"line": 219,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-nfs-server-provisioner",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}.securityContext.capabilities.add",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}} has no capability added other than NET_BIND_SERVICE",
					"actual_value": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}} has a capability added other than NET_BIND_SERVICE"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/nfs-server-provisioner_template.yaml",
					"similarity_id": "80e7741fb51a1f1ddf0ba1af3500e9bdb230504c73821d093f10a984039063e8",
					"line": 177,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-nfs-server-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/nfs-server-provisioner_template.yaml",
					"similarity_id": "211db95e7c15521aaef4f27de30fe6c159e064df0da3a68ed6f10d8844fd8ee6",
					"line": 177,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-nfs-server-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/nfs-server-provisioner_template.yaml",
					"similarity_id": "4a9ed3d591a266932a6741f47f898a837408b46c402dfd397501075bf650f8d5",
					"line": 218,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-nfs-server-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}",
					"search_line": 218,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/nfs-server-provisioner_template.yaml",
					"similarity_id": "75099caf9e62038d5276b3ce1080836153725317ff8f76a270fbdb73bae23c9f",
					"line": 177,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-nfs-server-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/nfs-server-provisioner_template.yaml",
					"similarity_id": "017c53c2ba8143c8d28c109b2167cd9e805d629bee06d332797b2b74cd917d79",
					"line": 217,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-nfs-server-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/nfs-server-provisioner_template.yaml",
					"similarity_id": "5a8404d5f1649e30ef16ad10cff9dff0d1e9c5fc77e70a94ed39a52d18fceb8f",
					"line": 172,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-nfs-server-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/nfs-server-provisioner_template.yaml",
					"similarity_id": "ab84076330460b372b2682b7bba6bc848eba65c25d5a0e29291c858cd5c64ada",
					"line": 11,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-nfs-server-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-nfs-server-provisioner}}",
					"search_line": 11,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/nfs-server-provisioner_template.yaml",
					"similarity_id": "07d1c0f65626041fe7938ca0144b1752d18f03671bf60b3e4067f9911562c83a",
					"line": 151,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-nfs-server-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{StatefulSet}}.metadata.name={{release-name-nfs-server-provisioner}}",
					"search_line": 151,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/nfs-server-provisioner_template.yaml",
					"similarity_id": "f737aa0202886875337755a2710775e0d194f4be331a99bf7d67787cd3a409a6",
					"line": 86,
					"resource_type": "Service",
					"resource_name": "release-name-nfs-server-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-nfs-server-provisioner}}",
					"search_line": 86,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/nfs-server-provisioner_template.yaml",
					"similarity_id": "db722b9e03ca685607563bca520a05305ea7d4c380be9319c7e2ae3669bc822e",
					"line": 177,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-nfs-server-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name=nfs-server-provisioner",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=nfs-server-provisioner has resources defined",
					"actual_value": "spec.template.spec.containers.name=nfs-server-provisioner doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/nfs-server-provisioner_template.yaml",
					"similarity_id": "07a18c99ff8f9376ea7b38ae9204a7c19532a2199a51cb93e6e009b2598649c9",
					"line": 177,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-nfs-server-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name=nfs-server-provisioner",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=nfs-server-provisioner should have resources defined",
					"actual_value": "spec.template.spec.containers.name=nfs-server-provisioner doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/nfs-server-provisioner_template.yaml",
					"similarity_id": "4cac1094f3bce7d7d5b37a5016d4f7877237d6e1669246945cea22cd80e2cbea",
					"line": 179,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-nfs-server-provisioner",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/nfs-server-provisioner_template.yaml",
					"similarity_id": "416eabe59fd59c102298e24fafbd7bae816819ab83b1dd35e0794275aa86b669",
					"line": 166,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-nfs-server-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{nfs-server-provisioner}}",
					"actual_value": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{nfs-server-provisioner}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/nfs-server-provisioner_template.yaml",
					"similarity_id": "cfdd0fd99d94a548ccc4d6acbf0cf3e77f5124170facb32f007ff9122e64d52f",
					"line": 218,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-nfs-server-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nfs-server-provisioner}}.spec.containers.name={{nfs-server-provisioner}}.securityContext.capabilities",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers[nfs-server-provisioner].securityContext.capabilities.drop should be defined",
					"actual_value": "spec.containers[nfs-server-provisioner].securityContext.capabilities.drop is not defined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/nfs-server-provisioner_template.yaml",
					"similarity_id": "e778c83b9d37d6a483ccd74b3ef2983f8b1794e20fbc70fb5bef9d9f486a36f9",
					"line": 11,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-nfs-server-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nfs-server-provisioner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nfs-server-provisioner}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-nfs-server-provisioner}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/nfs-server-provisioner_template.yaml",
					"similarity_id": "5c63a0cf1c16ec63f593e25ad5fe274818e180aa0ee55276cf130c0cd2dbeacf",
					"line": 11,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-nfs-server-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nfs-server-provisioner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nfs-server-provisioner}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-nfs-server-provisioner}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/nfs-server-provisioner_template.yaml",
					"similarity_id": "a5f33ed96e154625fec28a0bb1ec6ebc83cb8b12bc8ca1d34c783c59941fdc59",
					"line": 217,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-nfs-server-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}",
					"search_line": 217,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-nfs-server-provisioner}}.spec.template.spec.containers.name={{nfs-server-provisioner}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
