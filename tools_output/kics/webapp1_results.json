{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 66,
	"files_parsed": 1,
	"lines_parsed": 63,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 19,
	"total_bom_resources": 0,
	"start": "2024-05-18T00:07:36.45431+02:00",
	"end": "2024-05-18T00:07:38.420887+02:00",
	"paths": [
		"templates/webapp1_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/webapp1_template.yaml",
					"similarity_id": "684869b4336a76bee2285248c49f89e75fe9e2e2fcc6bf7ca4a260c312e86548",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "myhelmapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myhelmapp}}.spec.template.spec.containers.name={{mycontainer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myhelmapp}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{myhelmapp}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/webapp1_template.yaml",
					"similarity_id": "5ae118ac45ce72aa9cf3877041e728edbe128893c5a78cddcf8425b18c23277c",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "myhelmapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myhelmapp}}.spec.template.spec.containers.name={{mycontainer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myhelmapp}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{myhelmapp}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/webapp1_template.yaml",
					"similarity_id": "b8573e26fda593e8b8bd36992c9534d8157b093f8ad5e4800df3125522cbffd0",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "myhelmapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myhelmapp}}.spec.template.spec.containers.name={{mycontainer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myhelmapp}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{myhelmapp}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/webapp1_template.yaml",
					"similarity_id": "39cf3cede0d37b6333699b8333bc4689f69840d32a3ee44694c9795656fe0aa8",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "myhelmapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myhelmapp}}.spec.template.spec.containers.name={{mycontainer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myhelmapp}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{myhelmapp}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/webapp1_template.yaml",
					"similarity_id": "27795d8dc852654e637823757bd5bd1b99de5b764108efdb17e00336d442c218",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "myhelmapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myhelmapp}}.spec.template.spec.containers.name={{mycontainer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myhelmapp}}.spec.template.spec.containers.name={{mycontainer}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{myhelmapp}}.spec.template.spec.containers.name={{mycontainer}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/webapp1_template.yaml",
					"similarity_id": "3d9903233dd587b18fc804222960bf371aba66b0267f9898e16f3dc5a5980002",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "myhelmapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myhelmapp}}.spec.template.spec.containers.name={{mycontainer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myhelmapp}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{myhelmapp}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/webapp1_template.yaml",
					"similarity_id": "6b65b71056d235c36efe33187dafb1ec3d1fc294384aef385889ca05ef7399f7",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "myhelmapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myhelmapp}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myhelmapp}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{myhelmapp}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Service With External Load Balancer",
			"query_id": "26763a1c-5dda-4772-b507-5fca7fb5f165",
			"query_url": "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service has an external load balancer, which may cause accessibility from other networks and the Internet",
			"description_id": "2e090344",
			"files": [
				{
					"file_name": "templates/webapp1_template.yaml",
					"similarity_id": "aed7cc481109aad509cce3e26ec9c2783545132133eafb15735374da04b5c526",
					"line": 17,
					"resource_type": "Service",
					"resource_name": "myhelmapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myhelmapp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'metadata.annotations' should be set",
					"actual_value": "'metadata.annotations' is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/webapp1_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Service",
					"resource_name": "myhelmapp",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{myhelmapp}}.namespace",
					"search_line": 18,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/webapp1_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ConfigMap",
					"resource_name": "helmappcongigmapv1.1",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{helmappcongigmapv1.1}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/webapp1_template.yaml",
					"similarity_id": "dc01837aee8e1524e2a6c2bbc7960233a05cb48993f03d4927b926c90f3999d5",
					"line": 36,
					"resource_type": "Deployment",
					"resource_name": "myhelmapp",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{myhelmapp}}.namespace",
					"search_line": 36,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/webapp1_template.yaml",
					"similarity_id": "2664d579542f8f42a6ab13b555e93385eac286a28e472c6794a16bd797f0c8d0",
					"line": 42,
					"resource_type": "Deployment",
					"resource_name": "myhelmapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myhelmapp}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=myhelmapp is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=myhelmapp is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/webapp1_template.yaml",
					"similarity_id": "4786769e9ee0db9be0f6069704b286792844bcef68d5faaa640b88a7c25940d1",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "myhelmapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myhelmapp}}.spec.template.spec.containers.name={{mycontainer}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myhelmapp}}.spec.template.spec.containers.name={{mycontainer}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{myhelmapp}}.spec.template.spec.containers.name={{mycontainer}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/webapp1_template.yaml",
					"similarity_id": "bb383adbb552cdb8f53b3bb2d0dbcc64fc97529614285769d07529ac44c6113f",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "myhelmapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myhelmapp}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myhelmapp}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{mycontainer}}",
					"actual_value": "metadata.name={{myhelmapp}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{mycontainer}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/webapp1_template.yaml",
					"similarity_id": "4b357702d6136ed076ca2bb4fb035961c53f3af81bf5c3e88b78727c5f0bbdd5",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "myhelmapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myhelmapp}}.spec.containers.name=mycontainer",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myhelmapp}}.spec.containers.name=mycontainer.securityContext should be set",
					"actual_value": "metadata.name={{myhelmapp}}.spec.containers.name=mycontainer.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/webapp1_template.yaml",
					"similarity_id": "989e9f8e05f3abd7351c20b4b34867ec31a0f972583e8f6be80e4fbbd3f74d52",
					"line": 36,
					"resource_type": "Deployment",
					"resource_name": "myhelmapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myhelmapp}}",
					"search_line": 36,
					"search_value": "",
					"expected_value": "metadata.name={{myhelmapp}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{myhelmapp}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/webapp1_template.yaml",
					"similarity_id": "ad878a918fe85fb76f7ad68aa6360b0a6565f90cd5e1f7b180548f92872c7bc1",
					"line": 36,
					"resource_type": "Deployment",
					"resource_name": "myhelmapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myhelmapp}}",
					"search_line": 36,
					"search_value": "",
					"expected_value": "metadata.name={{myhelmapp}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{myhelmapp}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/webapp1_template.yaml",
					"similarity_id": "080b5a6e9be4f847998e3f550fd0121967ac6cc05ccf22020345f8348cbf87f8",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "myhelmapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myhelmapp}}.spec.template.spec.containers.name=mycontainer",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mycontainer has a security context",
					"actual_value": "spec.template.spec.containers.name=mycontainer does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/webapp1_template.yaml",
					"similarity_id": "f75c3f73451ea2bfe7dc6bc61c77fc3d7be128b6feed143dc6a24fb33ce14c88",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "myhelmapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myhelmapp}}.spec.template.spec.containers.name={{mycontainer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myhelmapp}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{myhelmapp}}.spec.template.spec.containers.name={{mycontainer}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
