{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 217,
	"files_parsed": 1,
	"lines_parsed": 210,
	"lines_ignored": 7,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 12,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:59:46.189882+02:00",
	"end": "2024-06-26T01:59:48.194653+02:00",
	"paths": [
		"templates/akash-hostname-operator_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/akash-hostname-operator_template.yaml",
					"similarity_id": "97c4df667eaa8b317fef923303f6b25e574b3cdff38243e0f4ad8746386b6e29",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "operator-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/akash-hostname-operator_template.yaml",
					"similarity_id": "7b26b84f2919c596d4eb6e20dd191328a02aca9edb5fb837011201883f997074",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "operator-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/akash-hostname-operator_template.yaml",
					"similarity_id": "83e8600bc5f01736d406a96c32a1dc412bfbbed5abb44686db1362d78dc80306",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "operator-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/akash-hostname-operator_template.yaml",
					"similarity_id": "be36ea90cbee522320e094ca2877be2492b04c172fded5a0dcc2bb6c0d1c610f",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "operator-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/akash-hostname-operator_template.yaml",
					"similarity_id": "d6b9001678204ecd48fddcd7bda05136710fd10bda71f014aa5a1a77245eefaa",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "operator-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/akash-hostname-operator_template.yaml",
					"similarity_id": "b81384c06de784714aa87c3e363308fe4d8c51c446e6395d0cca76034fd76429",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "operator-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/akash-hostname-operator_template.yaml",
					"similarity_id": "afc5cfa5098054fe3b1afc61c53e7cea7e27d77d6c5eb76b29c11e458146aac8",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "operator-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/akash-hostname-operator_template.yaml",
					"similarity_id": "5b2c9646a7acd018b0500f7281c1161fa6384c61acc519367c451ceea72aba6b",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "operator-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/akash-hostname-operator_template.yaml",
					"similarity_id": "96634f59e185b41043c979aec05d16c2ef53872dca82b9dd997e6e56fbd1c7c6",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "operator-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{operator-hostname}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{operator-hostname}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{operator-hostname}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/akash-hostname-operator_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "operator-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{operator-hostname}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/akash-hostname-operator_template.yaml",
					"similarity_id": "164224c207f73fcf68501ad40220aa1a1b152d19a2b5d2319af9d33f12c2ecde",
					"line": 118,
					"resource_type": "Deployment",
					"resource_name": "operator-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{operator-hostname}}",
					"search_line": 118,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/akash-hostname-operator_template.yaml",
					"similarity_id": "0248f3156c1a9d499989d0179d955a49698d4199c305dd58c45170848c8bd5f6",
					"line": 97,
					"resource_type": "Service",
					"resource_name": "operator-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{operator-hostname}}",
					"search_line": 97,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/akash-hostname-operator_template.yaml",
					"similarity_id": "3aa3fbb5c3e64159c483c555145e89bbd0566545687f1ce5e239344dd0b5fc6f",
					"line": 199,
					"resource_type": "Ingress",
					"resource_name": "akash-hostname-operator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Ingress}}.metadata.name={{akash-hostname-operator}}",
					"search_line": 199,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/akash-hostname-operator_template.yaml",
					"similarity_id": "d9fc586fef1f76f335a791ccad272ade33edce051baa62e7861c3ffef0678f83",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "operator-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name=operator-hostname",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=operator-hostname has resources defined",
					"actual_value": "spec.template.spec.containers.name=operator-hostname doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/akash-hostname-operator_template.yaml",
					"similarity_id": "a7ffd2636b679880fd4b98051b7dafd326c6615034b2a38f0e2c1683dbb192c0",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "operator-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name=operator-hostname",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=operator-hostname should have resources defined",
					"actual_value": "spec.template.spec.containers.name=operator-hostname doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/akash-hostname-operator_template.yaml",
					"similarity_id": "e53434fc65353b287e2d8cc13124927fc31d65105ebaf55db346e3c8656654f6",
					"line": 145,
					"resource_type": "Deployment",
					"resource_name": "operator-hostname",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/akash-hostname-operator_template.yaml",
					"similarity_id": "b76dd8c4da864bf9774520aeffd90a9563d134a03618ab1d462b5ec51a207fb6",
					"line": 134,
					"resource_type": "Deployment",
					"resource_name": "operator-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{operator-hostname}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{operator-hostname}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{operator-hostname}}",
					"actual_value": "metadata.name={{operator-hostname}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{operator-hostname}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/akash-hostname-operator_template.yaml",
					"similarity_id": "90d1ea8b437331cf6b1ecbc530a054a06ac6a6d5f292235eb2176868fbfb2cba",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "operator-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{operator-hostname}}.spec.containers.name=operator-hostname",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{operator-hostname}}.spec.containers.name=operator-hostname.securityContext should be set",
					"actual_value": "metadata.name={{operator-hostname}}.spec.containers.name=operator-hostname.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/akash-hostname-operator_template.yaml",
					"similarity_id": "58ce19fb599062475deb59be8311d88ed34b510ab637e3a1a1e40b9be63b2408",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "operator-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{operator-hostname}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{operator-hostname}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{operator-hostname}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/akash-hostname-operator_template.yaml",
					"similarity_id": "96bea70dbd26cef59c11e9a06fd87581403a1863dfa16c813b0e5420d847dfca",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "operator-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{operator-hostname}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{operator-hostname}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{operator-hostname}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/akash-hostname-operator_template.yaml",
					"similarity_id": "7d5d1a7082ca0597a44c96f0b44a0f8176a5ca321c08fbfd6a1497178440d2e2",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "operator-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name=operator-hostname",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=operator-hostname has a security context",
					"actual_value": "spec.template.spec.containers.name=operator-hostname does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/akash-hostname-operator_template.yaml",
					"similarity_id": "68a766deff2d4f4928bbba21cd6dee30a2da5437107d43404a63db9bb4aabc61",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "operator-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{operator-hostname}}.spec.template.spec.containers.name={{operator-hostname}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
