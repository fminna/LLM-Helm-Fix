{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 89,
	"files_parsed": 1,
	"lines_parsed": 86,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 6,
		"TRACE": 0
	},
	"total_counter": 13,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:35:31.520289+02:00",
	"end": "2024-05-17T21:35:33.487367+02:00",
	"paths": [
		"templates/kloudlite-autoscalers_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/kloudlite-autoscalers_template.yaml",
					"similarity_id": "f194b43470b2e3d6265356259ebdd2773b39d41f46af1ecd0fea5ddce5b9f81f",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "kl-cluster-autoscaler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kl-cluster-autoscaler}}.spec.template.spec.containers.name={{main}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kl-cluster-autoscaler}}.spec.template.spec.containers.name={{main}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{kl-cluster-autoscaler}}.spec.template.spec.containers.name={{main}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/kloudlite-autoscalers_template.yaml",
					"similarity_id": "9a4757acb7044015dbd472c5f7717af5c94e444a2b6c47848a2faf3dd9d29460",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "kl-cluster-autoscaler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kl-cluster-autoscaler}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kl-cluster-autoscaler}}.spec.template.spec.containers.name={{main}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{kl-cluster-autoscaler}}.spec.template.spec.containers.name={{main}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/kloudlite-autoscalers_template.yaml",
					"similarity_id": "f3bc21403ecebc338f4ff3475611e6161837ce235ae071340649ccd69429d74f",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "kl-cluster-autoscaler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kl-cluster-autoscaler}}.spec.template.spec.containers.name={{main}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kl-cluster-autoscaler}}.spec.template.spec.containers.name={{main}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{kl-cluster-autoscaler}}.spec.template.spec.containers.name={{main}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/kloudlite-autoscalers_template.yaml",
					"similarity_id": "72608d9e3af1217efcf3993b12e8929c997f341a3531611d8d3e1164f64fc324",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "kl-cluster-autoscaler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kl-cluster-autoscaler}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kl-cluster-autoscaler}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{kl-cluster-autoscaler}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/kloudlite-autoscalers_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-sa",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-sa}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/kloudlite-autoscalers_template.yaml",
					"similarity_id": "e6a9e891f82a3a30854338285f78ed67736b2e6c2577a1a48744c56dc24d66d4",
					"line": 28,
					"resource_type": "Deployment",
					"resource_name": "kl-cluster-autoscaler",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{kl-cluster-autoscaler}}.namespace",
					"search_line": 28,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Cluster Admin Rolebinding With Superuser Permissions",
			"query_id": "249328b8-5f0f-409f-b1dd-029f07882e11",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Ensure that the cluster-admin role is only used where required (RBAC)",
			"description_id": "567eee7e",
			"files": [
				{
					"file_name": "templates/kloudlite-autoscalers_template.yaml",
					"similarity_id": "b9892bc285d45de7099647e5436ebe6169ab3d998fc77e12c1e34302fa9be285",
					"line": 21,
					"resource_type": "ClusterRoleBinding",
					"resource_name": "default-release-name-sa-rb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{default-release-name-sa-rb}}.roleRef.name=cluster-admin",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'default-release-name-sa-rb' of kind 'ClusterRoleBinding' isn't binding 'cluster-admin' role with superuser permissions",
					"actual_value": "Resource name 'default-release-name-sa-rb' of kind 'ClusterRoleBinding' is binding 'cluster-admin' role with superuser permissions"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/kloudlite-autoscalers_template.yaml",
					"similarity_id": "b6ada4454d0c511e4c319d26d93a91fa27127cc27b52d86f510f5ca701cfd762",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "kl-cluster-autoscaler",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{kl-cluster-autoscaler}}.spec.template.spec.containers.name={{main}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kl-cluster-autoscaler}}.spec.template.spec.containers.name={{main}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{kl-cluster-autoscaler}}.spec.template.spec.containers.name={{main}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/kloudlite-autoscalers_template.yaml",
					"similarity_id": "5de0dbc0b7977594bddc36e28b97ac035e550e4bd4d973d86a7720bd65e02cae",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "kl-cluster-autoscaler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kl-cluster-autoscaler}}.spec.template.metadata",
					"search_line": 37,
					"search_value": "",
					"expected_value": "metadata.name={{kl-cluster-autoscaler}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{main}}",
					"actual_value": "metadata.name={{kl-cluster-autoscaler}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{main}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/kloudlite-autoscalers_template.yaml",
					"similarity_id": "e31d3edbaf714b9293378baf44bb99495c6c701187c31fbd3cbc02d0de00b737",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "kl-cluster-autoscaler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kl-cluster-autoscaler}}.spec.containers.name={{main}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kl-cluster-autoscaler}}.spec.containers.name={{main}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{kl-cluster-autoscaler}}.spec.containers.name={{main}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/kloudlite-autoscalers_template.yaml",
					"similarity_id": "5da7d837b9bbf170530af59c1a44a7833e46ca6de602ebe7eee7d8e9f59d5a31",
					"line": 28,
					"resource_type": "Deployment",
					"resource_name": "kl-cluster-autoscaler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kl-cluster-autoscaler}}",
					"search_line": 28,
					"search_value": "",
					"expected_value": "metadata.name={{kl-cluster-autoscaler}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{kl-cluster-autoscaler}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/kloudlite-autoscalers_template.yaml",
					"similarity_id": "9cefa8aab4870fa98085fca1de7a540e22af6c41eefbbd1c49cc5903cfae9b65",
					"line": 28,
					"resource_type": "Deployment",
					"resource_name": "kl-cluster-autoscaler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kl-cluster-autoscaler}}",
					"search_line": 28,
					"search_value": "",
					"expected_value": "metadata.name={{kl-cluster-autoscaler}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{kl-cluster-autoscaler}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/kloudlite-autoscalers_template.yaml",
					"similarity_id": "64cd59633c0f2fc37f309c3a91ca3192d91fbb794ead33a1aeddc2db7d85e257",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "kl-cluster-autoscaler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kl-cluster-autoscaler}}.spec.template.spec.containers.name={{main}}",
					"search_line": 66,
					"search_value": "",
					"expected_value": "metadata.name={{kl-cluster-autoscaler}}.spec.template.spec.containers.name={{main}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{kl-cluster-autoscaler}}.spec.template.spec.containers.name={{main}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
