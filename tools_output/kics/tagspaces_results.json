{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 254,
	"files_parsed": 1,
	"lines_parsed": 251,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 4,
		"INFO": 0,
		"LOW": 5,
		"MEDIUM": 4,
		"TRACE": 0
	},
	"total_counter": 13,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:17:47.3718+02:00",
	"end": "2024-06-26T01:17:49.537752+02:00",
	"paths": [
		"templates/tagspaces_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/tagspaces_template.yaml",
					"similarity_id": "96a93043a046b29611cde151d730adc5e23443858a2e5b153c87c17489462a76",
					"line": 150,
					"resource_type": "Deployment",
					"resource_name": "release-name-tagspaces",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-tagspaces}}.spec.template.spec.containers.name={{release-name-tagspaces}}.volumeMounts.name={{devshm}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tagspaces}}.spec.template.spec.containers.name={{release-name-tagspaces}}.volumeMounts.name={{devshm}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-tagspaces}}.spec.template.spec.containers.name={{release-name-tagspaces}}.volumeMounts.name={{devshm}}.readOnly is false"
				},
				{
					"file_name": "templates/tagspaces_template.yaml",
					"similarity_id": "0a014a9cb23918cf7123afc8069bbbf74f398ba6edd38d4e840b0d4405d54969",
					"line": 153,
					"resource_type": "Deployment",
					"resource_name": "release-name-tagspaces",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-tagspaces}}.spec.template.spec.containers.name={{release-name-tagspaces}}.volumeMounts.name={{nginx}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tagspaces}}.spec.template.spec.containers.name={{release-name-tagspaces}}.volumeMounts.name={{nginx}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-tagspaces}}.spec.template.spec.containers.name={{release-name-tagspaces}}.volumeMounts.name={{nginx}}.readOnly is false"
				},
				{
					"file_name": "templates/tagspaces_template.yaml",
					"similarity_id": "12e62e6d4e0ad515283296ea277706db9ffcf5594e364055e0e17743106d975b",
					"line": 165,
					"resource_type": "Deployment",
					"resource_name": "release-name-tagspaces",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-tagspaces}}.spec.template.spec.containers.name={{release-name-tagspaces}}.volumeMounts.name={{varrun}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tagspaces}}.spec.template.spec.containers.name={{release-name-tagspaces}}.volumeMounts.name={{varrun}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-tagspaces}}.spec.template.spec.containers.name={{release-name-tagspaces}}.volumeMounts.name={{varrun}}.readOnly is false"
				},
				{
					"file_name": "templates/tagspaces_template.yaml",
					"similarity_id": "d4207eb54936386b1b37467a77dc2e435ae307ca5228e09ab0baa18d842cd7e9",
					"line": 162,
					"resource_type": "Deployment",
					"resource_name": "release-name-tagspaces",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-tagspaces}}.spec.template.spec.containers.name={{release-name-tagspaces}}.volumeMounts.name={{varlogs}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tagspaces}}.spec.template.spec.containers.name={{release-name-tagspaces}}.volumeMounts.name={{varlogs}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-tagspaces}}.spec.template.spec.containers.name={{release-name-tagspaces}}.volumeMounts.name={{varlogs}}.readOnly is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/tagspaces_template.yaml",
					"similarity_id": "6a3872c2d6285f088dd7b24e210960e39790571bf68dc0b69704e46be24b6654",
					"line": 205,
					"resource_type": "Deployment",
					"resource_name": "release-name-tagspaces",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-tagspaces}}.spec.template.spec.containers.name={{release-name-tagspaces}}.securityContext.runAsUser=568",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tagspaces}}.spec.template.spec.containers.name={{release-name-tagspaces}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-tagspaces}}.spec.template.spec.containers.name={{release-name-tagspaces}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/tagspaces_template.yaml",
					"similarity_id": "faeaace0de0e24386a5925a9109835697e67973498c7afc586226869c1e6d28a",
					"line": 8,
					"resource_type": "Secret",
					"resource_name": "release-name-tagspaces-tagspaces-secret",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-tagspaces-tagspaces-secret}}.namespace",
					"search_line": 8,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/tagspaces_template.yaml",
					"similarity_id": "8f2e7e68edee857966f6443a72feb813aa2d78eccecf0579b725661aea5c8b61",
					"line": 26,
					"resource_type": "Service",
					"resource_name": "release-name-tagspaces",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-tagspaces}}.namespace",
					"search_line": 26,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/tagspaces_template.yaml",
					"similarity_id": "e2b9cc8a256befb5fabd67e8395db38264f81e70bcad4392d4a8c552d5717ac8",
					"line": 55,
					"resource_type": "Deployment",
					"resource_name": "release-name-tagspaces",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-tagspaces}}.namespace",
					"search_line": 55,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/tagspaces_template.yaml",
					"similarity_id": "635bb56932e9fb53ddddcf698e5fd2ba8757fabe4d6135547ba4635bb5e430eb",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "release-name-tagspaces",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tagspaces}}.spec.template.metadata",
					"search_line": 88,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tagspaces}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-tagspaces}}",
					"actual_value": "metadata.name={{release-name-tagspaces}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-tagspaces}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/tagspaces_template.yaml",
					"similarity_id": "f644aa32a50e7e3a230eba6b7c94b3bfec37b3700ab4c576e1cf096a460783b9",
					"line": 55,
					"resource_type": "Deployment",
					"resource_name": "release-name-tagspaces",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tagspaces}}",
					"search_line": 55,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tagspaces}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-tagspaces}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/tagspaces_template.yaml",
					"similarity_id": "6d1a88d8cceead45870d209403c032d9eded15e717ae8aa700dfb538c81ec31a",
					"line": 55,
					"resource_type": "Deployment",
					"resource_name": "release-name-tagspaces",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tagspaces}}",
					"search_line": 55,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tagspaces}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-tagspaces}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/tagspaces_template.yaml",
					"similarity_id": "59d250d0ec53ae7985c8b1b14fa797874619ae42442d98f94139ad4bb4f4ba06",
					"line": 207,
					"resource_type": "Deployment",
					"resource_name": "release-name-tagspaces",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-tagspaces}}.spec.template.spec.containers.name={{release-name-tagspaces}}.securityContext.readOnlyRootFilesystem",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tagspaces}}.spec.template.spec.containers.name={{release-name-tagspaces}}.securityContext.readOnlyRootFilesystem is true",
					"actual_value": "metadata.name={{release-name-tagspaces}}.spec.template.spec.containers.name={{release-name-tagspaces}}.securityContext.readOnlyRootFilesystem is false"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/tagspaces_template.yaml",
					"similarity_id": "04a0864982e9c08e519bccc2f5e6704daa64fc11c4a1df3760c1940caa97fb19",
					"line": 230,
					"resource_type": "Deployment",
					"resource_name": "release-name-tagspaces",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-tagspaces}}.spec.template.spec.containers.env.name={{KEY}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{release-name-tagspaces}}.env.name={{KEY}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{release-name-tagspaces}}.env.name={{KEY}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
