{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 127,
	"files_parsed": 1,
	"lines_parsed": 123,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 17,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:12:25.127535+02:00",
	"end": "2024-06-26T01:12:27.129287+02:00",
	"paths": [
		"templates/keycloak-gatekeeper_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/keycloak-gatekeeper_template.yaml",
					"similarity_id": "6883bea430b3bf40f8074b166066f88f60effd5fa9115bb0f09508ec0ad9806b",
					"line": 83,
					"resource_type": "Deployment",
					"resource_name": "release-name-keycloak-gatekeeper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keycloak-gatekeeper}}.spec.template.spec.containers.name={{keycloak-gatekeeper}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keycloak-gatekeeper}}.spec.template.spec.containers.name={{keycloak-gatekeeper}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-keycloak-gatekeeper}}.spec.template.spec.containers.name={{keycloak-gatekeeper}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/keycloak-gatekeeper_template.yaml",
					"similarity_id": "89a5f79eed903c70af912579fba27ca55ff43f95eb6644570d8698b69c410d0f",
					"line": 83,
					"resource_type": "Deployment",
					"resource_name": "release-name-keycloak-gatekeeper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keycloak-gatekeeper}}.spec.template.spec.containers.name={{keycloak-gatekeeper}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keycloak-gatekeeper}}.spec.template.spec.containers.name={{keycloak-gatekeeper}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-keycloak-gatekeeper}}.spec.template.spec.containers.name={{keycloak-gatekeeper}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/keycloak-gatekeeper_template.yaml",
					"similarity_id": "2766d70ba2ac74d1311b65f5248a2585f1b953f8493fbf54b32f260aff515fdc",
					"line": 83,
					"resource_type": "Deployment",
					"resource_name": "release-name-keycloak-gatekeeper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keycloak-gatekeeper}}.spec.template.spec.containers.name={{keycloak-gatekeeper}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keycloak-gatekeeper}}.spec.template.spec.containers.name={{keycloak-gatekeeper}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-keycloak-gatekeeper}}.spec.template.spec.containers.name={{keycloak-gatekeeper}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/keycloak-gatekeeper_template.yaml",
					"similarity_id": "7101e45b0d424d4065361bc34ecf484797017e86453d6709b7a96d3a47537c21",
					"line": 118,
					"resource_type": "Deployment",
					"resource_name": "release-name-keycloak-gatekeeper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keycloak-gatekeeper}}.spec.template.spec.containers.name={{keycloak-gatekeeper}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keycloak-gatekeeper}}.spec.template.spec.containers.name={{keycloak-gatekeeper}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-keycloak-gatekeeper}}.spec.template.spec.containers.name={{keycloak-gatekeeper}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/keycloak-gatekeeper_template.yaml",
					"similarity_id": "07dde1b6544c45fadea4ae656a6752226b05ce50b158de4a7f0e615aafd0104f",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-keycloak-gatekeeper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keycloak-gatekeeper}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keycloak-gatekeeper}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-keycloak-gatekeeper}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/keycloak-gatekeeper_template.yaml",
					"similarity_id": "b981e200d0349480c47e09ace6009816f97ba69776f9eff7aa1919fc47724f2c",
					"line": 56,
					"resource_type": "Deployment",
					"resource_name": "release-name-keycloak-gatekeeper",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-keycloak-gatekeeper}}",
					"search_line": 56,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/keycloak-gatekeeper_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-keycloak-gatekeeper",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-keycloak-gatekeeper}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/keycloak-gatekeeper_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Secret",
					"resource_name": "release-name-keycloak-gatekeeper",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-keycloak-gatekeeper}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/keycloak-gatekeeper_template.yaml",
					"similarity_id": "8a553bf4f3ebcb4cfaffe877593474bf8132b5681ee0b1d00037b0ec0a961b86",
					"line": 34,
					"resource_type": "Service",
					"resource_name": "release-name-keycloak-gatekeeper",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-keycloak-gatekeeper}}",
					"search_line": 34,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/keycloak-gatekeeper_template.yaml",
					"similarity_id": "55dea9a748af2f0cd6b7f430235e4c3b3c810c4d3a13b2afdf780a73e151b28f",
					"line": 125,
					"resource_type": "Deployment",
					"resource_name": "release-name-keycloak-gatekeeper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keycloak-gatekeeper}}.spec.template.spec.containers.name={{keycloak-gatekeeper}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=keycloak-gatekeeper has limits defined",
					"actual_value": "spec.template.spec.containers.name=keycloak-gatekeeper doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/keycloak-gatekeeper_template.yaml",
					"similarity_id": "c99ec8feeb1c9647984461d12038e87943836ab44cff39c184e10ee9db4d9c29",
					"line": 125,
					"resource_type": "Deployment",
					"resource_name": "release-name-keycloak-gatekeeper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keycloak-gatekeeper}}.spec.template.spec.containers.name={{keycloak-gatekeeper}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=keycloak-gatekeeper.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=keycloak-gatekeeper.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/keycloak-gatekeeper_template.yaml",
					"similarity_id": "eba5d5b272e004767d5cf4e40350df68e1b4f8c6cbd9118f2388c74ddea64c0a",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "release-name-keycloak-gatekeeper",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-keycloak-gatekeeper}}.spec.template.spec.containers.name={{keycloak-gatekeeper}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keycloak-gatekeeper}}.spec.template.spec.containers.name={{keycloak-gatekeeper}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-keycloak-gatekeeper}}.spec.template.spec.containers.name={{keycloak-gatekeeper}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/keycloak-gatekeeper_template.yaml",
					"similarity_id": "ec5ef17f5e8959cc2987fb52acf06b42038f59a4b4eb9f9ce7266cbafcacb769",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "release-name-keycloak-gatekeeper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keycloak-gatekeeper}}.spec.template.metadata",
					"search_line": 75,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keycloak-gatekeeper}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{keycloak-gatekeeper}}",
					"actual_value": "metadata.name={{release-name-keycloak-gatekeeper}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{keycloak-gatekeeper}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/keycloak-gatekeeper_template.yaml",
					"similarity_id": "40fec9b89ad0e703ba1dcf2f57ca2733e2fb0207c17e1093e92aa0c4fb89df83",
					"line": 118,
					"resource_type": "Deployment",
					"resource_name": "release-name-keycloak-gatekeeper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keycloak-gatekeeper}}.spec.containers.name={{keycloak-gatekeeper}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keycloak-gatekeeper}}.spec.containers.name={{keycloak-gatekeeper}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-keycloak-gatekeeper}}.spec.containers.name={{keycloak-gatekeeper}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/keycloak-gatekeeper_template.yaml",
					"similarity_id": "f3c181aee8417f89f916c74bdd306de4cbd30c72840cef3d9d3239d7745a5dbc",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-keycloak-gatekeeper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keycloak-gatekeeper}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keycloak-gatekeeper}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-keycloak-gatekeeper}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/keycloak-gatekeeper_template.yaml",
					"similarity_id": "1ca7e79741fcecdff6741116f86bbe1f8c42866562f433b020bf21a016b5e6cb",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-keycloak-gatekeeper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keycloak-gatekeeper}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keycloak-gatekeeper}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-keycloak-gatekeeper}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/keycloak-gatekeeper_template.yaml",
					"similarity_id": "65e4ce591d3078c1bf33c93e14baef399d8eed90e8c9ef942d0705555d0679fb",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-keycloak-gatekeeper",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-keycloak-gatekeeper}}.spec.template.spec.containers.name={{keycloak-gatekeeper}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{keycloak-gatekeeper}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{keycloak-gatekeeper}}.envFrom.secretRef' is defined"
				}
			]
		}
	]
}
