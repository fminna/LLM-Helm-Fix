{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 492,
	"files_parsed": 1,
	"lines_parsed": 465,
	"lines_ignored": 27,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 18,
		"MEDIUM": 20,
		"TRACE": 0
	},
	"total_counter": 39,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:55:03.120162+02:00",
	"end": "2024-05-17T23:55:05.133103+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/vault_template.yaml"
	],
	"queries": [
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "96a9cd3dbcdb66123c8354f9982979770402b84a640b1807ff36a7b82f94fe10",
					"line": 417,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vault",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault}}.spec.template.spec.containers.name={{vault}}.volumeMounts.name={{home}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault}}.spec.template.spec.containers.name={{vault}}.volumeMounts.name={{home}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-vault}}.spec.template.spec.containers.name={{vault}}.volumeMounts.name={{home}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "6dc9fca7cbe04248f53aefb3a8016293c32a3610121ef0f78aede40505b13962",
					"line": 237,
					"resource_type": "Deployment",
					"resource_name": "release-name-vault-agent-injector",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vault-agent-injector}}.spec.template.spec.securityContext.runAsUser=100",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault-agent-injector}}.spec.template.spec.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-vault-agent-injector}}.spec.template.spec.securityContext.runAsUser is set to a low UID"
				},
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "29000dc8e3df3337ec757db9eb2b9651cd9988c5e31a05f94c9d930124ff7653",
					"line": 237,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vault",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vault}}.spec.template.spec.securityContext.runAsUser=100",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault}}.spec.template.spec.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-vault}}.spec.template.spec.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "a6fa7c2d3ca187cb504836de89b2017af6222b98d02fdb3a5a192bdde5d45808",
					"line": 239,
					"resource_type": "Deployment",
					"resource_name": "release-name-vault-agent-injector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault-agent-injector}}.spec.template.spec.containers.name={{sidecar-injector}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault-agent-injector}}.spec.template.spec.containers.name={{sidecar-injector}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-vault-agent-injector}}.spec.template.spec.containers.name={{sidecar-injector}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "7fd1363d664b875bbe9f5a811a0e2fc66161cc36b8ec80fdd4fd06ebdbe7cdeb",
					"line": 349,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vault",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault}}.spec.template.spec.containers.name={{vault}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault}}.spec.template.spec.containers.name={{vault}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-vault}}.spec.template.spec.containers.name={{vault}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "c787c0b6001502e9eb247836d9a240c13a1a9bae7a4ab3974d67a233522f89a7",
					"line": 239,
					"resource_type": "Deployment",
					"resource_name": "release-name-vault-agent-injector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault-agent-injector}}.spec.template.spec.containers.name={{sidecar-injector}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault-agent-injector}}.spec.template.spec.containers.name={{sidecar-injector}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-vault-agent-injector}}.spec.template.spec.containers.name={{sidecar-injector}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "9af7cc07d617871da052c4c098107088b8fc4f07f56225f762e28a902948b8e6",
					"line": 349,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vault",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault}}.spec.template.spec.containers.name={{vault}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault}}.spec.template.spec.containers.name={{vault}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-vault}}.spec.template.spec.containers.name={{vault}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "086505444f92ed28c80aa81d71e1baf33ac14b38ff53edd4f40b0aa513844a24",
					"line": 239,
					"resource_type": "Deployment",
					"resource_name": "release-name-vault-agent-injector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault-agent-injector}}.spec.template.spec.containers.name={{sidecar-injector}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault-agent-injector}}.spec.template.spec.containers.name={{sidecar-injector}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-vault-agent-injector}}.spec.template.spec.containers.name={{sidecar-injector}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "a2ab7672dd8dafd3d0600e6904399ff1b5d4de32933640f1a0f5f59765779740",
					"line": 349,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vault",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault}}.spec.template.spec.containers.name={{vault}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault}}.spec.template.spec.containers.name={{vault}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-vault}}.spec.template.spec.containers.name={{vault}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "86c8025514684bc237c93eda69eee474d716e99330b84f6c97a393502e69270c",
					"line": 367,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vault",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault}}.spec.template.spec.containers.name={{vault}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault}}.spec.template.spec.containers.name={{vault}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-vault}}.spec.template.spec.containers.name={{vault}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "df7deda46befba458e0d9925094da3b6eea135fbffc5f937f7df557f563420e5",
					"line": 243,
					"resource_type": "Deployment",
					"resource_name": "release-name-vault-agent-injector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault-agent-injector}}.spec.template.spec.containers.name={{sidecar-injector}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault-agent-injector}}.spec.template.spec.containers.name={{sidecar-injector}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-vault-agent-injector}}.spec.template.spec.containers.name={{sidecar-injector}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "bc0b098752f137f061efd41a1df3b963c2d75e1d216150d22875c4e8cdb2ee81",
					"line": 219,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vault",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-vault}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "2f97dc0619d4fdd8222adabc9841866670aa8e633f253d0448e894222c9031e0",
					"line": 219,
					"resource_type": "Deployment",
					"resource_name": "release-name-vault-agent-injector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault-agent-injector}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault-agent-injector}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-vault-agent-injector}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "67a12a4488f8caaf5eee5f51cb32fdc64449c53ad43fbbf34e892e5ac5fccd7d",
					"line": 30,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-vault-config",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vault-config}}.namespace",
					"search_line": 30,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-vault-agent-injector",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vault-agent-injector}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-vault",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vault}}.namespace",
					"search_line": 18,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "4e6a8a107c1aac4d0bc7439a816e8c5696559fbea9150ccb9fac7a0540313397",
					"line": 170,
					"resource_type": "Service",
					"resource_name": "release-name-vault",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vault}}.namespace",
					"search_line": 170,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "b51bc26680b78435560610f1a96c1d68c8c0514b5c25545dcd9153028c69dac1",
					"line": 141,
					"resource_type": "Service",
					"resource_name": "release-name-vault-internal",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vault-internal}}.namespace",
					"search_line": 141,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "18bd6d5b1eb240c27528b15e6a79fbde6d5dbed88a41f781c9a219b06448cff8",
					"line": 120,
					"resource_type": "Service",
					"resource_name": "release-name-vault-agent-injector-svc",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vault-agent-injector-svc}}.namespace",
					"search_line": 120,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "e0204cbf6403a94aa64f536a9e7e273a805b36b29a29fbde2e291d26e2c0181f",
					"line": 295,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vault",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vault}}.namespace",
					"search_line": 295,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "31e5f0f9b7c283b596204b0e9b042f6e4c4c68e343eea491a01d50d21da0a2c6",
					"line": 200,
					"resource_type": "Deployment",
					"resource_name": "release-name-vault-agent-injector",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vault-agent-injector}}.namespace",
					"search_line": 200,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "96880ff4ff6c5e63bc379b505705ca005125603c720d1ff3738dfd4488e8ed30",
					"line": 349,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vault",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault}}.spec.template.spec.containers.name=vault",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=vault has resources defined",
					"actual_value": "spec.template.spec.containers.name=vault doesn't have resources defined"
				},
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "dc7927d3f0759c69d96aa57430f0c2129fa74ee160e1ed1816affd41be6ac809",
					"line": 239,
					"resource_type": "Deployment",
					"resource_name": "release-name-vault-agent-injector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault-agent-injector}}.spec.template.spec.containers.name=sidecar-injector",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=sidecar-injector has resources defined",
					"actual_value": "spec.template.spec.containers.name=sidecar-injector doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "5e0eb64867447e68703e3277f187d00acf6f35890b888383e60e311c7e056b7a",
					"line": 239,
					"resource_type": "Deployment",
					"resource_name": "release-name-vault-agent-injector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault-agent-injector}}.spec.template.spec.containers.name=sidecar-injector",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=sidecar-injector should have resources defined",
					"actual_value": "spec.template.spec.containers.name=sidecar-injector doesn't have resources defined"
				},
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "dc580b88a3291112e6e10a62e050647b48cf128ae431ca77ae35c9ace67fd58d",
					"line": 349,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vault",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault}}.spec.template.spec.containers.name=vault",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=vault should have resources defined",
					"actual_value": "spec.template.spec.containers.name=vault doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "0b3e7dfae510888a6325eb123d021b77d4dbfd03bfeeaad090cbd2d4d141ead0",
					"line": 242,
					"resource_type": "Deployment",
					"resource_name": "release-name-vault-agent-injector",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vault-agent-injector}}.spec.template.spec.containers.name={{sidecar-injector}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault-agent-injector}}.spec.template.spec.containers.name={{sidecar-injector}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-vault-agent-injector}}.spec.template.spec.containers.name={{sidecar-injector}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "5bb80205e41e209bb816b3b914f14a953ee669290099c2354a65b7b9f43ed5c9",
					"line": 352,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vault",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vault}}.spec.template.spec.containers.name={{vault}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault}}.spec.template.spec.containers.name={{vault}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-vault}}.spec.template.spec.containers.name={{vault}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "f73f2ef03fbf39d9ee90dfd9245c37c08a34829e2bff1a35988c6ca416501f69",
					"line": 214,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vault",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{vault}}",
					"actual_value": "metadata.name={{release-name-vault}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{vault}}"
				},
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "1d76e13209b601675a33ad133d58c172ea6fcba3f6aee39d076f01ceb7296b38",
					"line": 214,
					"resource_type": "Deployment",
					"resource_name": "release-name-vault-agent-injector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault-agent-injector}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault-agent-injector}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{sidecar-injector}}",
					"actual_value": "metadata.name={{release-name-vault-agent-injector}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{sidecar-injector}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "bec20c6e9d89501b0c9b4b8649fb57840e4598ed4aa8d4e571f7e0e15afe530f",
					"line": 243,
					"resource_type": "Deployment",
					"resource_name": "release-name-vault-agent-injector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault-agent-injector}}.spec.containers.name={{sidecar-injector}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault-agent-injector}}.spec.containers.name={{sidecar-injector}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-vault-agent-injector}}.spec.containers.name={{sidecar-injector}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "88fa90c4cba45321a791c33c7954492aeb8660c9643c77b408e3fd530b5b60b8",
					"line": 367,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vault",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault}}.spec.containers.name={{vault}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault}}.spec.containers.name={{vault}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-vault}}.spec.containers.name={{vault}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "e7e012738c30762ccf5fa531cf5e17ebbc63e2ffdb7514e8874c592e402e4901",
					"line": 295,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vault",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault}}",
					"search_line": 295,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-vault}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "8354d1684173a9c7017f158ae77340f9137a5f33b8fb63a892cd111997067591",
					"line": 200,
					"resource_type": "Deployment",
					"resource_name": "release-name-vault-agent-injector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault-agent-injector}}",
					"search_line": 200,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault-agent-injector}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-vault-agent-injector}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "c50a8b20e7e0695148badf3fb5f94be2a752600e3eceebc92ea71da3c3660064",
					"line": 200,
					"resource_type": "Deployment",
					"resource_name": "release-name-vault-agent-injector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault-agent-injector}}",
					"search_line": 200,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault-agent-injector}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-vault-agent-injector}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "eea8ea6365bca884930881e41d01a2210522e7845311998dfa7436a9861946ce",
					"line": 295,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vault",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault}}",
					"search_line": 295,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-vault}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "d7818a4f2401a88f6dfcb1d408816b0d2d804cf04d973184dcffb612332b9c81",
					"line": 367,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vault",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault}}.spec.template.spec.containers.name={{vault}}",
					"search_line": 367,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault}}.spec.template.spec.containers.name={{vault}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-vault}}.spec.template.spec.containers.name={{vault}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "fb50cdd2ac3d445f059da27b09d562ed1fb4f9eef1cc5032b53ef52a856165c9",
					"line": 243,
					"resource_type": "Deployment",
					"resource_name": "release-name-vault-agent-injector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault-agent-injector}}.spec.template.spec.containers.name={{sidecar-injector}}",
					"search_line": 243,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault-agent-injector}}.spec.template.spec.containers.name={{sidecar-injector}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-vault-agent-injector}}.spec.template.spec.containers.name={{sidecar-injector}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "620225afabf085c99c82d8f7413da25c43b63e4bb376207e0d0359bbe89a3530",
					"line": 128,
					"resource_type": "Service",
					"resource_name": "release-name-vault-agent-injector-svc",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vault-agent-injector-svc}}.spec.ports.port={{443}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault-agent-injector-svc}}.spec.ports.port={{443}} has a Pod port",
					"actual_value": "metadata.name={{release-name-vault-agent-injector-svc}}.spec.ports.port={{443}} does not have a Pod port"
				}
			]
		},
		{
			"query_name": "StatefulSet Requests Storage",
			"query_id": "8cf4671a-cf3d-46fc-8389-21e7405063a2",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "A StatefulSet requests volume storage.",
			"description_id": "6210afe6",
			"files": [
				{
					"file_name": "templates/vault_template.yaml",
					"similarity_id": "48747b3271406dafef60118b0cf4a1722d35ba8cd5207ed9473e2813ecc19709",
					"line": 463,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-vault",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vault}}.spec.volumeClaimTemplates.spec.resources.requests.storage=10Gi",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault}}.spec.volumeClaimTemplates.spec.resources.requests.storage should not be set",
					"actual_value": "metadata.name={{release-name-vault}}.spec.volumeClaimTemplates.spec.resources.requests.storage is set to 10Gi"
				}
			]
		}
	]
}
