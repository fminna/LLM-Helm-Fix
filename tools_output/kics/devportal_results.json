{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 186,
	"files_parsed": 1,
	"lines_parsed": 182,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 19,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:35:14.023828+02:00",
	"end": "2024-05-17T20:35:15.962028+02:00",
	"paths": [
		"templates/devportal_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/devportal_template.yaml",
					"similarity_id": "0dfed41279f56ebc91e6b28781598c9f025ccc9c4b5df08da79f8bac6125afe1",
					"line": 158,
					"resource_type": "Deployment",
					"resource_name": "release-name-devportal",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-devportal}}.spec.template.spec.containers.name={{devportal}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-devportal}}.spec.template.spec.containers.name={{devportal}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-devportal}}.spec.template.spec.containers.name={{devportal}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/devportal_template.yaml",
					"similarity_id": "e350cd6ff4048f392313f09f1272688e507b35cc898ea1491cbd1fe954569f59",
					"line": 158,
					"resource_type": "Deployment",
					"resource_name": "release-name-devportal",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-devportal}}.spec.template.spec.containers.name={{devportal}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-devportal}}.spec.template.spec.containers.name={{devportal}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-devportal}}.spec.template.spec.containers.name={{devportal}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/devportal_template.yaml",
					"similarity_id": "dae31a5da4e3082824e6e6f0f8cc4912aa77d7d11107a8de9b8cd12d846112cf",
					"line": 158,
					"resource_type": "Deployment",
					"resource_name": "release-name-devportal",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-devportal}}.spec.template.spec.containers.name={{devportal}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-devportal}}.spec.template.spec.containers.name={{devportal}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-devportal}}.spec.template.spec.containers.name={{devportal}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/devportal_template.yaml",
					"similarity_id": "fdc74690b74f37df4c45acbc76c6577bbe283882c8b0c63e77fcdbd44638c6ee",
					"line": 158,
					"resource_type": "Deployment",
					"resource_name": "release-name-devportal",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-devportal}}.spec.template.spec.containers.name={{devportal}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-devportal}}.spec.template.spec.containers.name={{devportal}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-devportal}}.spec.template.spec.containers.name={{devportal}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/devportal_template.yaml",
					"similarity_id": "4e17b34bf1aaabb8ea8f01dc10239cfe69dafb93365164e19ad3b6ebcc086686",
					"line": 158,
					"resource_type": "Deployment",
					"resource_name": "release-name-devportal",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-devportal}}.spec.template.spec.containers.name={{devportal}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-devportal}}.spec.template.spec.containers.name={{devportal}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-devportal}}.spec.template.spec.containers.name={{devportal}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/devportal_template.yaml",
					"similarity_id": "fcfaa4bee20d3d1c796721ad37ed95733950519544dc27de231a191aeafe92ae",
					"line": 158,
					"resource_type": "Deployment",
					"resource_name": "release-name-devportal",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-devportal}}.spec.template.spec.containers.name={{devportal}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-devportal}}.spec.template.spec.containers.name={{devportal}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-devportal}}.spec.template.spec.containers.name={{devportal}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/devportal_template.yaml",
					"similarity_id": "84370e833a00ce6759193cd1af8d9d19486e188517b781d08d004e3fedae29d8",
					"line": 156,
					"resource_type": "Deployment",
					"resource_name": "release-name-devportal",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-devportal}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-devportal}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-devportal}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/devportal_template.yaml",
					"similarity_id": "611cf28f72e46e78f6e36ff9563bad2d8e498316d884a66ac63a4f6e990749ff",
					"line": 16,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-devportal-app-env",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-devportal-app-env}}",
					"search_line": 16,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/devportal_template.yaml",
					"similarity_id": "be4bd01ceb08821632f0f913de3b4de80b7f649d893f9b3978203562e4d514a5",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "release-name-devportal",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-devportal}}",
					"search_line": 143,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/devportal_template.yaml",
					"similarity_id": "a3ee2873017c4307c1b274e5a11cc1455ada2379930e0220aedfbf80de1bc599",
					"line": 130,
					"resource_type": "Service",
					"resource_name": "release-name-devportal",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-devportal}}",
					"search_line": 130,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/devportal_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Secret",
					"resource_name": "release-name-devportal-credentials",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-devportal-credentials}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/devportal_template.yaml",
					"similarity_id": "f4d66f4834bdef7f59889e41c2b161a465703c8314411b050dfc15a1a632ff6f",
					"line": 160,
					"resource_type": "Deployment",
					"resource_name": "release-name-devportal",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-devportal}}.spec.template.spec.containers.name={{devportal}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-devportal}}.spec.template.spec.containers.name={{devportal}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-devportal}}.spec.template.spec.containers.name={{devportal}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/devportal_template.yaml",
					"similarity_id": "7c46848b12a850942d23bb2136044252042a38e45f816f8e1f519564499aaddf",
					"line": 153,
					"resource_type": "Deployment",
					"resource_name": "release-name-devportal",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-devportal}}.spec.template.metadata",
					"search_line": 153,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-devportal}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{devportal}}",
					"actual_value": "metadata.name={{release-name-devportal}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{devportal}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/devportal_template.yaml",
					"similarity_id": "b098fae62862229757393eaa2708e4337050cead3f65fb06460f03dfcc01bcb6",
					"line": 158,
					"resource_type": "Deployment",
					"resource_name": "release-name-devportal",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-devportal}}.spec.containers.name=devportal",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-devportal}}.spec.containers.name=devportal.securityContext should be set",
					"actual_value": "metadata.name={{release-name-devportal}}.spec.containers.name=devportal.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/devportal_template.yaml",
					"similarity_id": "d62ad303a50cbd8bbdba79a7a485524228ae8e12216975c335db5479880e3513",
					"line": 130,
					"resource_type": "Deployment",
					"resource_name": "release-name-devportal",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-devportal}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-devportal}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-devportal}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/devportal_template.yaml",
					"similarity_id": "4bb1f5f532bd7bfa5b9d09b58e30957a082773f704e5424109cae5c5d07f6c90",
					"line": 130,
					"resource_type": "Deployment",
					"resource_name": "release-name-devportal",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-devportal}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-devportal}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-devportal}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/devportal_template.yaml",
					"similarity_id": "b36c1d38a637581b4fef72e27b890572a1ebcdbd5c17385200d389922b059d1e",
					"line": 158,
					"resource_type": "Deployment",
					"resource_name": "release-name-devportal",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-devportal}}.spec.template.spec.containers.name=devportal",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=devportal has a security context",
					"actual_value": "spec.template.spec.containers.name=devportal does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/devportal_template.yaml",
					"similarity_id": "9c6fb893c8fa91680501a553bf464d2fdc9796007315fdd431a6589729777b98",
					"line": 158,
					"resource_type": "Deployment",
					"resource_name": "release-name-devportal",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-devportal}}.spec.template.spec.containers.name={{devportal}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-devportal}}.spec.template.spec.containers.name={{devportal}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-devportal}}.spec.template.spec.containers.name={{devportal}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/devportal_template.yaml",
					"similarity_id": "8d6d700f37e67726dade9ac0a233e85a38584267bd0f2d4b4c9d7a13c6987734",
					"line": 170,
					"resource_type": "Deployment",
					"resource_name": "release-name-devportal",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-devportal}}.spec.template.spec.containers.name={{devportal}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{devportal}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{devportal}}.envFrom.secretRef' is defined"
				}
			]
		}
	]
}
