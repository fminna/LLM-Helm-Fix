{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 188,
	"files_parsed": 1,
	"lines_parsed": 178,
	"lines_ignored": 10,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 3,
		"MEDIUM": 2,
		"TRACE": 0
	},
	"total_counter": 5,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:59:25.217973+02:00",
	"end": "2024-05-17T22:59:27.150278+02:00",
	"paths": [
		"templates/nirmata-aws-adapter_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/nirmata-aws-adapter_template.yaml",
					"similarity_id": "e29e08b5d89be5c309e6a72de9799b5394a444f9a7a48e8c9c710534c7a22fbd",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "release-name-nirmata-aws-adapter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nirmata-aws-adapter}}.spec.template.spec.containers.name={{manager}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nirmata-aws-adapter}}.spec.template.spec.containers.name={{manager}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-nirmata-aws-adapter}}.spec.template.spec.containers.name={{manager}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/nirmata-aws-adapter_template.yaml",
					"similarity_id": "74559269aaf507ae6839809e56f44b2d4a774a344f9ef34f79a57d566fbb599c",
					"line": 129,
					"resource_type": "Deployment",
					"resource_name": "release-name-nirmata-aws-adapter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nirmata-aws-adapter}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nirmata-aws-adapter}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-nirmata-aws-adapter}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/nirmata-aws-adapter_template.yaml",
					"similarity_id": "87d42f84a81488d34ce66e1fc3f6011247ad152c7c092b00ed69015f3a636cb9",
					"line": 125,
					"resource_type": "Deployment",
					"resource_name": "release-name-nirmata-aws-adapter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nirmata-aws-adapter}}.spec.template.metadata",
					"search_line": 125,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nirmata-aws-adapter}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{manager}}",
					"actual_value": "metadata.name={{release-name-nirmata-aws-adapter}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{manager}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/nirmata-aws-adapter_template.yaml",
					"similarity_id": "23ce90896b68f088f220b7325a2e44c794c01e613a6c2ef2e3e403b01cb9b461",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-nirmata-aws-adapter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nirmata-aws-adapter}}",
					"search_line": 110,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nirmata-aws-adapter}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-nirmata-aws-adapter}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/nirmata-aws-adapter_template.yaml",
					"similarity_id": "30374d298f6d03987cd71969c60e26754052f1136d98da06823fe1ec78bb2b87",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-nirmata-aws-adapter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nirmata-aws-adapter}}",
					"search_line": 110,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nirmata-aws-adapter}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-nirmata-aws-adapter}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
