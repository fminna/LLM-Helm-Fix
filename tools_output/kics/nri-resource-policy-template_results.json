{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 220,
	"files_parsed": 1,
	"lines_parsed": 213,
	"lines_ignored": 7,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 11,
		"INFO": 0,
		"LOW": 6,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 27,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:33:42.101283+02:00",
	"end": "2024-05-17T22:33:44.065252+02:00",
	"paths": [
		"templates/nri-resource-policy-template_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/nri-resource-policy-template_template.yaml",
					"similarity_id": "09ef9cd2d9a23aa89a2dfe1ae2b5836a9f7c6885343c66de6e095f125672ac9f",
					"line": 189,
					"resource_type": "DaemonSet",
					"resource_name": "nri-resource-policy-template",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.volumes.name={{hostsysfs}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'nri-resource-policy-template' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/sys' mounted",
					"actual_value": "Resource name 'nri-resource-policy-template' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/sys' mounted"
				},
				{
					"file_name": "templates/nri-resource-policy-template_template.yaml",
					"similarity_id": "c4ddaffa0cc714bca6cc0c12404dbb734e7711cf2e0a20d5d9c66c82fe8ffb6d",
					"line": 196,
					"resource_type": "DaemonSet",
					"resource_name": "nri-resource-policy-template",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.volumes.name={{nrisockets}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'nri-resource-policy-template' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/var/run/nri' mounted",
					"actual_value": "Resource name 'nri-resource-policy-template' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/var/run/nri' mounted"
				},
				{
					"file_name": "templates/nri-resource-policy-template_template.yaml",
					"similarity_id": "3e142bab8834209e178266bf40aa5f906d09a7f558c47e7e67be0d7aa6c5c9e4",
					"line": 193,
					"resource_type": "DaemonSet",
					"resource_name": "nri-resource-policy-template",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.volumes.name={{resource-policysockets}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'nri-resource-policy-template' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/var/run/nri-resource-policy' mounted",
					"actual_value": "Resource name 'nri-resource-policy-template' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/var/run/nri-resource-policy' mounted"
				},
				{
					"file_name": "templates/nri-resource-policy-template_template.yaml",
					"similarity_id": "68fd7299990dff240229da3f77980fc1a9e34474fbcf90b45d8d80c7d021a9fb",
					"line": 185,
					"resource_type": "DaemonSet",
					"resource_name": "nri-resource-policy-template",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.volumes.name={{resource-policydata}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'nri-resource-policy-template' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/var/lib/nri-resource-policy' mounted",
					"actual_value": "Resource name 'nri-resource-policy-template' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/var/lib/nri-resource-policy' mounted"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/nri-resource-policy-template_template.yaml",
					"similarity_id": "c2b5131b5bad94835bc1754ed9240c94c061172e45787af24f8f0dd82a0f6c84",
					"line": 174,
					"resource_type": "DaemonSet",
					"resource_name": "nri-resource-policy-template",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}.volumeMounts.name={{resource-policydata}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}.volumeMounts.name={{resource-policydata}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}.volumeMounts.name={{resource-policydata}}.readOnly is undefined"
				},
				{
					"file_name": "templates/nri-resource-policy-template_template.yaml",
					"similarity_id": "eddc4fe37aa82705442091a6e44217ddddcbfe115df85c3773c9c594933d0b33",
					"line": 180,
					"resource_type": "DaemonSet",
					"resource_name": "nri-resource-policy-template",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}.volumeMounts.name={{nrisockets}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}.volumeMounts.name={{nrisockets}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}.volumeMounts.name={{nrisockets}}.readOnly is undefined"
				},
				{
					"file_name": "templates/nri-resource-policy-template_template.yaml",
					"similarity_id": "753f9f02d4ce741c0d81bd842e2e056c12a1f4074157f3e0399a3155a2f94b9e",
					"line": 178,
					"resource_type": "DaemonSet",
					"resource_name": "nri-resource-policy-template",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}.volumeMounts.name={{resource-policysockets}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}.volumeMounts.name={{resource-policysockets}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}.volumeMounts.name={{resource-policysockets}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/nri-resource-policy-template_template.yaml",
					"similarity_id": "daf0ab49bbaf28a83d42184d7ce14a0f353f47c9d50b08e18ac7b84e34b3b83d",
					"line": 185,
					"resource_type": "DaemonSet",
					"resource_name": "nri-resource-policy-template",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.volumes.name={{resource-policydata}}.hostPath.path",
					"search_line": 185,
					"search_value": "",
					"expected_value": "Workload name 'nri-resource-policy-template' of kind 'DaemonSet' should not mount a host sensitive OS directory '/var/lib/nri-resource-policy' with hostPath",
					"actual_value": "Workload name 'nri-resource-policy-template' of kind 'DaemonSet' is mounting a host sensitive OS directory '/var/lib/nri-resource-policy' with hostPath"
				},
				{
					"file_name": "templates/nri-resource-policy-template_template.yaml",
					"similarity_id": "27565c4b3baa294f94a1fbdce9354cbc1b3fbc49e61b4bb482c232c4ca92544b",
					"line": 196,
					"resource_type": "DaemonSet",
					"resource_name": "nri-resource-policy-template",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.volumes.name={{nrisockets}}.hostPath.path",
					"search_line": 196,
					"search_value": "",
					"expected_value": "Workload name 'nri-resource-policy-template' of kind 'DaemonSet' should not mount a host sensitive OS directory '/var/run/nri' with hostPath",
					"actual_value": "Workload name 'nri-resource-policy-template' of kind 'DaemonSet' is mounting a host sensitive OS directory '/var/run/nri' with hostPath"
				},
				{
					"file_name": "templates/nri-resource-policy-template_template.yaml",
					"similarity_id": "4b2e8b87174d7410c54bfcf049b37db1ec10beed5bedecaf2cf532cb3a01acc5",
					"line": 193,
					"resource_type": "DaemonSet",
					"resource_name": "nri-resource-policy-template",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.volumes.name={{resource-policysockets}}.hostPath.path",
					"search_line": 193,
					"search_value": "",
					"expected_value": "Workload name 'nri-resource-policy-template' of kind 'DaemonSet' should not mount a host sensitive OS directory '/var/run/nri-resource-policy' with hostPath",
					"actual_value": "Workload name 'nri-resource-policy-template' of kind 'DaemonSet' is mounting a host sensitive OS directory '/var/run/nri-resource-policy' with hostPath"
				},
				{
					"file_name": "templates/nri-resource-policy-template_template.yaml",
					"similarity_id": "5ebbe43e4c9933190e6f6a9fd94c63e7c86add8137566573c56027cbb4a122d2",
					"line": 189,
					"resource_type": "DaemonSet",
					"resource_name": "nri-resource-policy-template",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.volumes.name={{hostsysfs}}.hostPath.path",
					"search_line": 189,
					"search_value": "",
					"expected_value": "Workload name 'nri-resource-policy-template' of kind 'DaemonSet' should not mount a host sensitive OS directory '/sys' with hostPath",
					"actual_value": "Workload name 'nri-resource-policy-template' of kind 'DaemonSet' is mounting a host sensitive OS directory '/sys' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/nri-resource-policy-template_template.yaml",
					"similarity_id": "740716c08ad0e1377167ba554d282f146e99240cf08afcc9ecfbeea18b72cb20",
					"line": 165,
					"resource_type": "DaemonSet",
					"resource_name": "nri-resource-policy-template",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}",
					"search_line": 165,
					"search_value": "",
					"expected_value": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/nri-resource-policy-template_template.yaml",
					"similarity_id": "a28f559be73457b6dabccc416394fa819cee37af1b038c04bd252d183239af1e",
					"line": 165,
					"resource_type": "DaemonSet",
					"resource_name": "nri-resource-policy-template",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/nri-resource-policy-template_template.yaml",
					"similarity_id": "623a20ea2fda4fd8c308b0cf3e9c4385ec25a55ad67961d6e9b4aba2822f1d78",
					"line": 139,
					"resource_type": "DaemonSet",
					"resource_name": "nri-resource-policy-template",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/nri-resource-policy-template_template.yaml",
					"similarity_id": "0aca324f80628f95297c52304953df5ab122f8b3fcb39b32ef9caf8aebda8949",
					"line": 139,
					"resource_type": "DaemonSet",
					"resource_name": "nri-resource-policy-template",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/nri-resource-policy-template_template.yaml",
					"similarity_id": "86c37fa5a1ebfa555b9f5dd77d79fce909483738f525c911bf5b23557a7dc3b8",
					"line": 165,
					"resource_type": "DaemonSet",
					"resource_name": "nri-resource-policy-template",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/nri-resource-policy-template_template.yaml",
					"similarity_id": "56d740e3abab323e9278ccd0037d62a3cf9933cef536ad3f0c7096b412a624a9",
					"line": 134,
					"resource_type": "DaemonSet",
					"resource_name": "nri-resource-policy-template",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-resource-policy-template}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/nri-resource-policy-template_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "nri-resource-policy-template",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nri-resource-policy-template}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/nri-resource-policy-template_template.yaml",
					"similarity_id": "fd3b7afd157d4532561cf995a7d723691e96f31f8acf53d702ec461bdc420a78",
					"line": 96,
					"resource_type": "RoleBinding",
					"resource_name": "nri-resource-policy-template",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nri-resource-policy-template}}.namespace",
					"search_line": 96,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/nri-resource-policy-template_template.yaml",
					"similarity_id": "f900e9fdb5c8a0f1591d9299d9d8038e33eb35f626518c56b52602a5328fda49",
					"line": 67,
					"resource_type": "Role",
					"resource_name": "nri-resource-policy-template",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nri-resource-policy-template}}.namespace",
					"search_line": 67,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/nri-resource-policy-template_template.yaml",
					"similarity_id": "7db2ca57d8d39ec6c0f97339eb9c24cb9d4d957b862672706c40d69878de263e",
					"line": 121,
					"resource_type": "DaemonSet",
					"resource_name": "nri-resource-policy-template",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nri-resource-policy-template}}.namespace",
					"search_line": 121,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/nri-resource-policy-template_template.yaml",
					"similarity_id": "80535c39ae111d7d50f3a09df08c85c5824a4050daa32dd8cee1194b9ab49f05",
					"line": 169,
					"resource_type": "DaemonSet",
					"resource_name": "nri-resource-policy-template",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=nri-resource-policy-template has limits defined",
					"actual_value": "spec.template.spec.containers.name=nri-resource-policy-template doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/nri-resource-policy-template_template.yaml",
					"similarity_id": "52b102251e6b4279865ae18d730aea0414735ca9069fbab8d8763a6c8705ad06",
					"line": 164,
					"resource_type": "DaemonSet",
					"resource_name": "nri-resource-policy-template",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/nri-resource-policy-template_template.yaml",
					"similarity_id": "1284a3b00c226af7b6bbc23a77715122a9d2554f7a9a4dd662f7eab376576c2a",
					"line": 128,
					"resource_type": "DaemonSet",
					"resource_name": "nri-resource-policy-template",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-resource-policy-template}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nri-resource-policy-template}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{nri-resource-policy-template}}",
					"actual_value": "metadata.name={{nri-resource-policy-template}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{nri-resource-policy-template}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/nri-resource-policy-template_template.yaml",
					"similarity_id": "b31fed287a454b097e9fd553aa74d0967d1e736f2995df5b231d867d34639e83",
					"line": 121,
					"resource_type": "DaemonSet",
					"resource_name": "nri-resource-policy-template",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-resource-policy-template}}",
					"search_line": 121,
					"search_value": "",
					"expected_value": "metadata.name={{nri-resource-policy-template}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{nri-resource-policy-template}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/nri-resource-policy-template_template.yaml",
					"similarity_id": "ea78a2cea3c7c3601823147b6bce8c63e53b3bed6f3128c9ad66cddeb93c7404",
					"line": 121,
					"resource_type": "DaemonSet",
					"resource_name": "nri-resource-policy-template",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-resource-policy-template}}",
					"search_line": 121,
					"search_value": "",
					"expected_value": "metadata.name={{nri-resource-policy-template}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{nri-resource-policy-template}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/nri-resource-policy-template_template.yaml",
					"similarity_id": "3ef94e6080c40946c150c6a5105b41705e0f53eab61798a2b56f005ccbd1cd29",
					"line": 165,
					"resource_type": "DaemonSet",
					"resource_name": "nri-resource-policy-template",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}",
					"search_line": 165,
					"search_value": "",
					"expected_value": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{nri-resource-policy-template}}.spec.template.spec.containers.name={{nri-resource-policy-template}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
