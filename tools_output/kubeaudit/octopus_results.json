{"checks": [{"AuditResultName":"MissingDefaultDenyIngressAndEgressNetworkPolicy","Namespace":"seldon-system","ResourceApiVersion":"v1","ResourceKind":"Namespace","ResourceName":"seldon-system","level":"error","msg":"Namespace is missing a default deny ingress and egress NetworkPolicy.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"node-driver-registrar","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/node-driver-registrar","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"csi-nodeplugin-fluid","ResourceNamespace":"fluid-system","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/node-driver-registrar' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"plugins","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/plugins","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"csi-nodeplugin-fluid","ResourceNamespace":"fluid-system","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/plugins' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"node-driver-registrar","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"csi-nodeplugin-fluid","ResourceNamespace":"fluid-system","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityShouldDropAll","Container":"plugins","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"csi-nodeplugin-fluid","ResourceNamespace":"fluid-system","level":"error","msg":"Capability Drop list should be set to ALL. Add the specific ones you need to the Add list and set an override label.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityAdded","Container":"plugins","Metadata":"SYS_ADMIN","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"csi-nodeplugin-fluid","ResourceNamespace":"fluid-system","level":"error","msg":"Capability \"SYS_ADMIN\" added. It should be removed from the capability add list. If you need this capability, add an override label such as 'container.kubeaudit.io/plugins.allow-capability-sys-admin: SomeReason'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"NamespaceHostPIDTrue","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"csi-nodeplugin-fluid","ResourceNamespace":"fluid-system","level":"error","msg":"hostPID is set to 'true' in PodSpec. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SensitivePathsMounted","Container":"node-driver-registrar","MountName":"kubelet-dir","MountPath":"/var/lib/kubelet","MountReadOnly":"false","MountVolume":"kubelet-dir","MountVolumeHostPath":"/var/lib/kubelet","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"csi-nodeplugin-fluid","ResourceNamespace":"fluid-system","level":"error","msg":"Sensitive path mounted as volume: kubelet-dir (hostPath: /var/lib/kubelet). It should be removed from the container's mounts list.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SensitivePathsMounted","Container":"plugins","MountName":"kubelet-dir","MountPath":"/var/lib/kubelet","MountReadOnly":"false","MountVolume":"kubelet-dir","MountVolumeHostPath":"/var/lib/kubelet","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"csi-nodeplugin-fluid","ResourceNamespace":"fluid-system","level":"error","msg":"Sensitive path mounted as volume: kubelet-dir (hostPath: /var/lib/kubelet). It should be removed from the container's mounts list.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SensitivePathsMounted","Container":"plugins","MountName":"host-etc-dir","MountPath":"/host-etc","MountReadOnly":"false","MountVolume":"host-etc-dir","MountVolumeHostPath":"/etc","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"csi-nodeplugin-fluid","ResourceNamespace":"fluid-system","level":"error","msg":"Sensitive path mounted as volume: host-etc-dir (hostPath: /etc). It should be removed from the container's mounts list.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"node-driver-registrar","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"csi-nodeplugin-fluid","ResourceNamespace":"fluid-system","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsUserCSCRoot","Container":"plugins","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"csi-nodeplugin-fluid","ResourceNamespace":"fluid-system","level":"error","msg":"runAsUser is set to UID 0 (root user) in the container SecurityContext. Either set it to a value \u003e 0 or remove it and set runAsNonRoot to true.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"node-driver-registrar","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"csi-nodeplugin-fluid","ResourceNamespace":"fluid-system","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationTrue","Container":"plugins","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"csi-nodeplugin-fluid","ResourceNamespace":"fluid-system","level":"error","msg":"allowPrivilegeEscalation set to 'true'. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"PrivilegedTrue","Container":"plugins","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"csi-nodeplugin-fluid","ResourceNamespace":"fluid-system","level":"error","msg":"privileged is set to 'true' in container SecurityContext. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"node-driver-registrar","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"csi-nodeplugin-fluid","ResourceNamespace":"fluid-system","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"plugins","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"csi-nodeplugin-fluid","ResourceNamespace":"fluid-system","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"csi-nodeplugin-fluid","ResourceNamespace":"fluid-system","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"node-exporter","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/node-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-node-exporter","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/node-exporter' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"node-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-node-exporter","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"NamespaceHostNetworkTrue","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-node-exporter","ResourceNamespace":"default","level":"error","msg":"hostNetwork is set to 'true' in PodSpec. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"NamespaceHostPIDTrue","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-node-exporter","ResourceNamespace":"default","level":"error","msg":"hostPID is set to 'true' in PodSpec. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SensitivePathsMounted","Container":"node-exporter","MountName":"proc","MountPath":"/host/proc","MountReadOnly":"true","MountVolume":"proc","MountVolumeHostPath":"/proc","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-node-exporter","ResourceNamespace":"default","level":"error","msg":"Sensitive path mounted as volume: proc (hostPath: /proc). It should be removed from the container's mounts list.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SensitivePathsMounted","Container":"node-exporter","MountName":"root","MountPath":"/host/root","MountReadOnly":"true","MountVolume":"root","MountVolumeHostPath":"/","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-node-exporter","ResourceNamespace":"default","level":"error","msg":"Sensitive path mounted as volume: root (hostPath: /). It should be removed from the container's mounts list.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"node-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-node-exporter","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-node-exporter","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"filebeat","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/filebeat","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-octopus-filebeat","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/filebeat' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"filebeat","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-octopus-filebeat","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"NamespaceHostNetworkTrue","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-octopus-filebeat","level":"error","msg":"hostNetwork is set to 'true' in PodSpec. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsUserCSCRoot","Container":"filebeat","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-octopus-filebeat","level":"error","msg":"runAsUser is set to UID 0 (root user) in the container SecurityContext. Either set it to a value \u003e 0 or remove it and set runAsNonRoot to true.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"filebeat","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-octopus-filebeat","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"filebeat","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-octopus-filebeat","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-octopus-filebeat","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"agentcontroller","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/agentcontroller","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-octopus","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/agentcontroller' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"agentcontroller","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-octopus","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SensitivePathsMounted","Container":"agentcontroller","MountName":"docker-socket","MountPath":"/var/run/docker.sock","MountReadOnly":"false","MountVolume":"docker-socket","MountVolumeHostPath":"/var/run/docker.sock","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-octopus","level":"error","msg":"Sensitive path mounted as volume: docker-socket (hostPath: /var/run/docker.sock). It should be removed from the container's mounts list.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"agentcontroller","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-octopus","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"agentcontroller","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-octopus","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"agentcontroller","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-octopus","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-octopus","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"nvidia-device-plugin-ctr","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/nvidia-device-plugin-ctr","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"nvidia-device-plugin-daemonset","ResourceNamespace":"kube-system","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/nvidia-device-plugin-ctr' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"nvidia-device-plugin-daemonset","ResourceNamespace":"kube-system","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityAdded","Container":"nvidia-device-plugin-ctr","Metadata":"SYS_ADMIN","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"nvidia-device-plugin-daemonset","ResourceNamespace":"kube-system","level":"error","msg":"Capability \"SYS_ADMIN\" added. It should be removed from the capability add list. If you need this capability, add an override label such as 'container.kubeaudit.io/nvidia-device-plugin-ctr.allow-capability-sys-admin: SomeReason'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"nvidia-device-plugin-ctr","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"nvidia-device-plugin-daemonset","ResourceNamespace":"kube-system","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"nvidia-device-plugin-ctr","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"nvidia-device-plugin-daemonset","ResourceNamespace":"kube-system","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"nvidia-device-plugin-daemonset","ResourceNamespace":"kube-system","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"pod-nvidia-gpu-metrics-exporter","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/pod-nvidia-gpu-metrics-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-gpu-exporter","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/pod-nvidia-gpu-metrics-exporter' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"nvidia-dcgm-exporter","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/nvidia-dcgm-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-gpu-exporter","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/nvidia-dcgm-exporter' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-gpu-exporter","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"pod-nvidia-gpu-metrics-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-gpu-exporter","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"nvidia-dcgm-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-gpu-exporter","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsUserCSCRoot","Container":"pod-nvidia-gpu-metrics-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-gpu-exporter","level":"error","msg":"runAsUser is set to UID 0 (root user) in the container SecurityContext. Either set it to a value \u003e 0 or remove it and set runAsNonRoot to true.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsUserCSCRoot","Container":"nvidia-dcgm-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-gpu-exporter","level":"error","msg":"runAsUser is set to UID 0 (root user) in the container SecurityContext. Either set it to a value \u003e 0 or remove it and set runAsNonRoot to true.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"pod-nvidia-gpu-metrics-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-gpu-exporter","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"nvidia-dcgm-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-gpu-exporter","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"pod-nvidia-gpu-metrics-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-gpu-exporter","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"nvidia-dcgm-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-gpu-exporter","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-gpu-exporter","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"pod-enflame-gcu-metrics-exporter","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/pod-enflame-gcu-metrics-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-gcu-exporter","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/pod-enflame-gcu-metrics-exporter' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-gcu-exporter","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"pod-enflame-gcu-metrics-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-gcu-exporter","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"pod-enflame-gcu-metrics-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-gcu-exporter","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"pod-enflame-gcu-metrics-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-gcu-exporter","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"PrivilegedTrue","Container":"pod-enflame-gcu-metrics-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-gcu-exporter","level":"error","msg":"privileged is set to 'true' in container SecurityContext. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"pod-enflame-gcu-metrics-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-gcu-exporter","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-gcu-exporter","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"pod-cambricon-mlu-metrics-exporter","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/pod-cambricon-mlu-metrics-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-mlu-exporter","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/pod-cambricon-mlu-metrics-exporter' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-mlu-exporter","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"pod-cambricon-mlu-metrics-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-mlu-exporter","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"NamespaceHostIPCTrue","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-mlu-exporter","level":"error","msg":"hostIPC is set to 'true' in PodSpec. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"NamespaceHostPIDTrue","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-mlu-exporter","level":"error","msg":"hostPID is set to 'true' in PodSpec. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"pod-cambricon-mlu-metrics-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-mlu-exporter","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"pod-cambricon-mlu-metrics-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-mlu-exporter","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"PrivilegedTrue","Container":"pod-cambricon-mlu-metrics-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-mlu-exporter","level":"error","msg":"privileged is set to 'true' in container SecurityContext. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"pod-cambricon-mlu-metrics-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-mlu-exporter","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-mlu-exporter","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"huawei-npu-exporter","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/huawei-npu-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-npu-exporter","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/huawei-npu-exporter' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-npu-exporter","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"huawei-npu-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-npu-exporter","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsUserCSCRoot","Container":"huawei-npu-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-npu-exporter","level":"error","msg":"runAsUser is set to UID 0 (root user) in the container SecurityContext. Either set it to a value \u003e 0 or remove it and set runAsNonRoot to true.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"huawei-npu-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-npu-exporter","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"PrivilegedTrue","Container":"huawei-npu-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-npu-exporter","level":"error","msg":"privileged is set to 'true' in container SecurityContext. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-npu-exporter","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"ix-exporter","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/ix-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-ix-exporter","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/ix-exporter' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-ix-exporter","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"ix-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-ix-exporter","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsUserCSCRoot","Container":"ix-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-ix-exporter","level":"error","msg":"runAsUser is set to UID 0 (root user) in the container SecurityContext. Either set it to a value \u003e 0 or remove it and set runAsNonRoot to true.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"ix-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-ix-exporter","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"PrivilegedTrue","Container":"ix-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-ix-exporter","level":"error","msg":"privileged is set to 'true' in container SecurityContext. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"ix-exporter","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-ix-exporter","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"release-name-prometheus-ix-exporter","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"manager","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"alluxioruntime-controller","ResourceNamespace":"fluid-system","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/manager' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"alluxioruntime-controller","ResourceNamespace":"fluid-system","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"alluxioruntime-controller","ResourceNamespace":"fluid-system","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"alluxioruntime-controller","ResourceNamespace":"fluid-system","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"alluxioruntime-controller","ResourceNamespace":"fluid-system","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"alluxioruntime-controller","ResourceNamespace":"fluid-system","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"manager","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"dataset-controller","ResourceNamespace":"fluid-system","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/manager' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"dataset-controller","ResourceNamespace":"fluid-system","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"dataset-controller","ResourceNamespace":"fluid-system","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"dataset-controller","ResourceNamespace":"fluid-system","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"dataset-controller","ResourceNamespace":"fluid-system","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"dataset-controller","ResourceNamespace":"fluid-system","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"manager","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"fluidapp-controller","ResourceNamespace":"fluid-system","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/manager' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"fluidapp-controller","ResourceNamespace":"fluid-system","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"fluidapp-controller","ResourceNamespace":"fluid-system","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"fluidapp-controller","ResourceNamespace":"fluid-system","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"fluidapp-controller","ResourceNamespace":"fluid-system","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"fluidapp-controller","ResourceNamespace":"fluid-system","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"manager","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"goosefsruntime-controller","ResourceNamespace":"fluid-system","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/manager' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"goosefsruntime-controller","ResourceNamespace":"fluid-system","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"goosefsruntime-controller","ResourceNamespace":"fluid-system","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"goosefsruntime-controller","ResourceNamespace":"fluid-system","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"goosefsruntime-controller","ResourceNamespace":"fluid-system","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"goosefsruntime-controller","ResourceNamespace":"fluid-system","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"manager","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"jindoruntime-controller","ResourceNamespace":"fluid-system","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/manager' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"jindoruntime-controller","ResourceNamespace":"fluid-system","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"jindoruntime-controller","ResourceNamespace":"fluid-system","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"jindoruntime-controller","ResourceNamespace":"fluid-system","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"jindoruntime-controller","ResourceNamespace":"fluid-system","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"jindoruntime-controller","ResourceNamespace":"fluid-system","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"manager","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"juicefsruntime-controller","ResourceNamespace":"fluid-system","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/manager' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"juicefsruntime-controller","ResourceNamespace":"fluid-system","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"juicefsruntime-controller","ResourceNamespace":"fluid-system","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"juicefsruntime-controller","ResourceNamespace":"fluid-system","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"juicefsruntime-controller","ResourceNamespace":"fluid-system","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"juicefsruntime-controller","ResourceNamespace":"fluid-system","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"manager","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"fluid-webhook","ResourceNamespace":"fluid-system","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/manager' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"fluid-webhook","ResourceNamespace":"fluid-system","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"fluid-webhook","ResourceNamespace":"fluid-system","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"fluid-webhook","ResourceNamespace":"fluid-system","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"fluid-webhook","ResourceNamespace":"fluid-system","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"fluid-webhook","ResourceNamespace":"fluid-system","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"minio","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/minio","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-minio","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/minio' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"minio","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-minio","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsUserCSCRoot","Container":"minio","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-minio","ResourceNamespace":"default","level":"error","msg":"runAsUser is set to UID 0 (root user) in the container SecurityContext. Either set it to a value \u003e 0 or remove it and set runAsNonRoot to true.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"minio","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-minio","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"minio","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-minio","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-minio","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"controller","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/controller","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-nginx-ingress-controller","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/controller' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityAdded","Container":"controller","Metadata":"NET_BIND_SERVICE","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-nginx-ingress-controller","ResourceNamespace":"default","level":"error","msg":"Capability \"NET_BIND_SERVICE\" added. It should be removed from the capability add list. If you need this capability, add an override label such as 'container.kubeaudit.io/controller.allow-capability-net-bind-service: SomeReason'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"NamespaceHostNetworkTrue","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-nginx-ingress-controller","ResourceNamespace":"default","level":"error","msg":"hostNetwork is set to 'true' in PodSpec. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationTrue","Container":"controller","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-nginx-ingress-controller","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation set to 'true'. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"controller","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-nginx-ingress-controller","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-nginx-ingress-controller","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"default-backend","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/default-backend","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-nginx-ingress-controller-default-backend","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/default-backend' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"default-backend","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-nginx-ingress-controller-default-backend","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"default-backend","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-nginx-ingress-controller-default-backend","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"default-backend","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-nginx-ingress-controller-default-backend","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-nginx-ingress-controller-default-backend","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"manager","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"seldon-controller-manager","ResourceNamespace":"seldon-system","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/manager' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"seldon-controller-manager","ResourceNamespace":"seldon-system","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"seldon-controller-manager","ResourceNamespace":"seldon-system","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"manager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"seldon-controller-manager","ResourceNamespace":"seldon-system","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"seldon-controller-manager","ResourceNamespace":"seldon-system","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"seldon-spartakus-volunteer","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/seldon-spartakus-volunteer","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"seldon-spartakus-volunteer","ResourceNamespace":"kube-system","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/seldon-spartakus-volunteer' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"seldon-spartakus-volunteer","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"seldon-spartakus-volunteer","ResourceNamespace":"kube-system","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"seldon-spartakus-volunteer","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"seldon-spartakus-volunteer","ResourceNamespace":"kube-system","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"seldon-spartakus-volunteer","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"seldon-spartakus-volunteer","ResourceNamespace":"kube-system","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"seldon-spartakus-volunteer","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"seldon-spartakus-volunteer","ResourceNamespace":"kube-system","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"seldon-spartakus-volunteer","ResourceNamespace":"kube-system","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"sftpgo","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/sftpgo","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-sftpgo","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/sftpgo' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"sftpgo","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-sftpgo","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsUserCSCRoot","Container":"sftpgo","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-sftpgo","level":"error","msg":"runAsUser is set to UID 0 (root user) in the container SecurityContext. Either set it to a value \u003e 0 or remove it and set runAsNonRoot to true.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"sftpgo","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-sftpgo","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"sftpgo","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-sftpgo","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-sftpgo","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"octopus","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/octopus' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"octopus","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/octopus' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"octopus","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/octopus' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"octopus","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/octopus' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"octopus","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/octopus' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SensitivePathsMounted","Container":"octopus","MountName":"docker-socket","MountPath":"/var/run/docker.sock","MountReadOnly":"false","MountVolume":"docker-socket","MountVolumeHostPath":"/var/run/docker.sock","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"Sensitive path mounted as volume: docker-socket (hostPath: /var/run/docker.sock). It should be removed from the container's mounts list.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"kube-eventrouter","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/kube-eventrouter","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/kube-eventrouter' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"kube-eventrouter","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"kube-eventrouter","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"kube-eventrouter","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"kube-eventrouter","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"grafana","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/grafana","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-grafana","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/grafana' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-grafana","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"grafana","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-grafana","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"grafana","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-grafana","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"grafana","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-grafana","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"grafana","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-grafana","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-grafana","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"logstash","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/logstash","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus-logstash","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/logstash' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus-logstash","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"logstash","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus-logstash","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsUserCSCRoot","Container":"logstash","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus-logstash","level":"error","msg":"runAsUser is set to UID 0 (root user) in the container SecurityContext. Either set it to a value \u003e 0 or remove it and set runAsNonRoot to true.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"logstash","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus-logstash","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"logstash","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus-logstash","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus-logstash","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"nginx","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/nginx","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus-httpd","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/nginx' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus-httpd","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"nginx","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus-httpd","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"nginx","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus-httpd","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"nginx","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus-httpd","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"nginx","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus-httpd","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus-httpd","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"octopus","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/octopus' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"octopus","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/octopus' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"prometheus","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/prometheus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-prometheus","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/prometheus' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"prometheus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-prometheus","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsUserPSCRoot","Container":"prometheus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-prometheus","level":"error","msg":"runAsUser is set to UID 0 (root user) in the PodSecurityContext. Either set it to a value \u003e 0 or remove it and set runAsNonRoot to true.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"prometheus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-prometheus","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"prometheus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-prometheus","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-prometheus","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"octopus","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/octopus' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"octopus","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/octopus' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"octopus","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-octopus","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"release-name-influxdb","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/release-name-influxdb","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-influxdb","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/release-name-influxdb' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"release-name-influxdb","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-influxdb","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"release-name-influxdb","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-influxdb","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"release-name-influxdb","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-influxdb","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"release-name-influxdb","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-influxdb","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-influxdb","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"mysql","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/mysql","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-mysql","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/mysql' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"volume-permissions","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/volume-permissions","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-mysql","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/volume-permissions' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"mysql","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-mysql","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"volume-permissions","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-mysql","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsUserCSCRoot","Container":"volume-permissions","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-mysql","ResourceNamespace":"default","level":"error","msg":"runAsUser is set to UID 0 (root user) in the container SecurityContext. Either set it to a value \u003e 0 or remove it and set runAsNonRoot to true.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"mysql","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-mysql","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"volume-permissions","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-mysql","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"mysql","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-mysql","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"volume-permissions","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-mysql","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-mysql","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"redis","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/redis","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-redis-master","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/redis' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"volume-permissions","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/volume-permissions","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-redis-master","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/volume-permissions' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"redis","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-redis-master","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"volume-permissions","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-redis-master","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsUserCSCRoot","Container":"volume-permissions","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-redis-master","ResourceNamespace":"default","level":"error","msg":"runAsUser is set to UID 0 (root user) in the container SecurityContext. Either set it to a value \u003e 0 or remove it and set runAsNonRoot to true.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"redis","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-redis-master","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"volume-permissions","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-redis-master","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"redis","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-redis-master","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"volume-permissions","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-redis-master","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-redis-master","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"fluid-crds-upgrade","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/fluid-crds-upgrade","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"fluid-crds-upgrade-0.8.0-e730b87","ResourceNamespace":"fluid-system","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/fluid-crds-upgrade' should be added.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"fluid-crds-upgrade","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"fluid-crds-upgrade-0.8.0-e730b87","ResourceNamespace":"fluid-system","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"fluid-crds-upgrade","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"fluid-crds-upgrade-0.8.0-e730b87","ResourceNamespace":"fluid-system","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"fluid-crds-upgrade","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"fluid-crds-upgrade-0.8.0-e730b87","ResourceNamespace":"fluid-system","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"fluid-crds-upgrade","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"fluid-crds-upgrade-0.8.0-e730b87","ResourceNamespace":"fluid-system","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:16+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"fluid-crds-upgrade-0.8.0-e730b87","ResourceNamespace":"fluid-system","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:16+02:00"}
]}