{"checks": [{"AuditResultName":"AppArmorAnnotationMissing","Container":"vngcloud-ingress-controller","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/vngcloud-ingress-controller","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"vngcloud-ingress-controller","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/vngcloud-ingress-controller' should be added.","time":"2024-06-26T03:38:59+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"vngcloud-ingress-controller","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"vngcloud-ingress-controller","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:38:59+02:00"},
{"AuditResultName":"NamespaceHostNetworkTrue","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"vngcloud-ingress-controller","ResourceNamespace":"default","level":"error","msg":"hostNetwork is set to 'true' in PodSpec. It should be set to 'false'.","time":"2024-06-26T03:38:59+02:00"},
{"AuditResultName":"SensitivePathsMounted","Container":"vngcloud-ingress-controller","MountName":"kubernetes-config","MountPath":"/etc/kubernetes","MountReadOnly":"true","MountVolume":"kubernetes-config","MountVolumeHostPath":"/etc/kubernetes","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"vngcloud-ingress-controller","ResourceNamespace":"default","level":"error","msg":"Sensitive path mounted as volume: kubernetes-config (hostPath: /etc/kubernetes). It should be removed from the container's mounts list.","time":"2024-06-26T03:38:59+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"vngcloud-ingress-controller","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"vngcloud-ingress-controller","ResourceNamespace":"default","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:38:59+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"vngcloud-ingress-controller","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"vngcloud-ingress-controller","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:38:59+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"vngcloud-ingress-controller","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"vngcloud-ingress-controller","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:38:59+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"vngcloud-ingress-controller","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:38:59+02:00"}
]}