{"checks": [{"AuditResultName":"AppArmorAnnotationMissing","Container":"postgres","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/postgres","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"postgres","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/postgres' should be added.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"postgres","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"postgres","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"postgres","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"postgres","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"postgres","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"postgres","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"postgres","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"postgres","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"postgres","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"postgres","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"service","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-integration-ws-browser","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/service' should be added.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-integration-ws-browser","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-integration-ws-browser","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-integration-ws-browser","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-integration-ws-browser","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-integration-ws-browser","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-integration-ws-browser","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"service","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-integration-ws","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/service' should be added.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-integration-ws","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-integration-ws","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-integration-ws","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-integration-ws","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-integration-ws","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-integration-ws","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"service","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-integration","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/service' should be added.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-integration","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-integration","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-integration","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-integration","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-integration","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-integration","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"service","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"websocket-integration","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/service' should be added.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"websocket-integration","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"websocket-integration","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"websocket-integration","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"websocket-integration","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"websocket-integration","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"websocket-integration","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"endpoint","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"console-api","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/endpoint' should be added.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"console-api","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"console-api","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"console-api","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"console-api","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"console-api","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"console-api","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"endpoint","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"console-backend","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/endpoint' should be added.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"console-backend","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"console-backend","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"console-backend","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"console-backend","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"console-backend","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"endpoint","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"console-frontend","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/endpoint' should be added.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"console-frontend","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"console-frontend","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"console-frontend","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"console-frontend","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"console-frontend","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"console-frontend","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"service","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"authentication-service","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/service' should be added.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"authentication-service","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"authentication-service","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"authentication-service","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"authentication-service","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"authentication-service","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"authentication-service","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"service","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"device-management-controller","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/service' should be added.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"device-management-controller","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"device-management-controller","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"device-management-controller","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"device-management-controller","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"device-management-controller","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"device-management-controller","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"service","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"knative-operator","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/service' should be added.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"knative-operator","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"knative-operator","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"knative-operator","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"knative-operator","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"knative-operator","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"service","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"outbox-controller","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/service' should be added.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"outbox-controller","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"outbox-controller","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"outbox-controller","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"outbox-controller","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"outbox-controller","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"outbox-controller","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"service","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"device-management-service","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/service' should be added.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"device-management-service","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"device-management-service","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"device-management-service","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"device-management-service","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"device-management-service","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"device-management-service","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"service","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"topic-operator","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/service' should be added.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"topic-operator","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"topic-operator","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"topic-operator","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"topic-operator","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"topic-operator","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"service","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"ttn-operator","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/service' should be added.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"ttn-operator","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"ttn-operator","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"ttn-operator","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"ttn-operator","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"ttn-operator","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"service","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"user-auth-service","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/service' should be added.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"user-auth-service","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"user-auth-service","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"user-auth-service","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"user-auth-service","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"user-auth-service","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"user-auth-service","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"service","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"device-state-service","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/service' should be added.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"device-state-service","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"device-state-service","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"device-state-service","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"device-state-service","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"service","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"device-state-service","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"device-state-service","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"endpoint","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"coap-endpoint","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/endpoint' should be added.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"coap-endpoint","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"coap-endpoint","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"coap-endpoint","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"coap-endpoint","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"coap-endpoint","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"coap-endpoint","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"endpoint","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"command-endpoint","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/endpoint' should be added.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"command-endpoint","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"command-endpoint","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"command-endpoint","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"command-endpoint","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"command-endpoint","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"command-endpoint","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"endpoint","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"http-endpoint","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/endpoint' should be added.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"http-endpoint","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"http-endpoint","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"http-endpoint","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"http-endpoint","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"http-endpoint","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"http-endpoint","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"endpoint","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-endpoint-ws-browser","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/endpoint' should be added.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-endpoint-ws-browser","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-endpoint-ws-browser","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-endpoint-ws-browser","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-endpoint-ws-browser","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-endpoint-ws-browser","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-endpoint-ws-browser","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"endpoint","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-endpoint-ws","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/endpoint' should be added.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-endpoint-ws","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-endpoint-ws","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-endpoint-ws","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-endpoint-ws","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-endpoint-ws","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-endpoint-ws","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"endpoint","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-endpoint","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/endpoint' should be added.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-endpoint","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-endpoint","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-endpoint","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-endpoint","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"endpoint","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-endpoint","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"mqtt-endpoint","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"post-install","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/post-install","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"cert-gen-job","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/post-install' should be added.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"post-install","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"cert-gen-job","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"post-install","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"cert-gen-job","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"post-install","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"cert-gen-job","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"post-install","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"cert-gen-job","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"cert-gen-job","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"diesel-migrate","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/diesel-migrate","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"migrate-database","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/diesel-migrate' should be added.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"migrate-database","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"diesel-migrate","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"migrate-database","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"diesel-migrate","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"migrate-database","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"diesel-migrate","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"migrate-database","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"diesel-migrate","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"migrate-database","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"migrate-database","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"post-install","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/post-install","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"post-install-keycloak","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/post-install' should be added.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"post-install-keycloak","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"post-install","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"post-install-keycloak","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"post-install","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"post-install-keycloak","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"post-install","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"post-install-keycloak","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"post-install","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"post-install-keycloak","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:51+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"post-install-keycloak","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:51+02:00"}
]}