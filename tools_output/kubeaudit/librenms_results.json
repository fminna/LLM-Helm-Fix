{"checks": [{"AuditResultName":"AppArmorAnnotationMissing","Container":"memcached","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/memcached","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-memcached","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/memcached' should be added.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-memcached","ResourceNamespace":"default","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"memcached","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-memcached","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"memcached","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-memcached","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"memcached","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-memcached","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-memcached","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"poller","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/poller","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-librenms-poller","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/poller' should be added.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"wait-app","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/wait-app","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-librenms-poller","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/wait-app' should be added.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"init-env","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/init-env","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-librenms-poller","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/init-env' should be added.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-librenms-poller","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"CapabilityShouldDropAll","Container":"poller","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-librenms-poller","level":"error","msg":"Capability Drop list should be set to ALL. Add the specific ones you need to the Add list and set an override label.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"CapabilityAdded","Container":"poller","Metadata":"NET_ADMIN","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-librenms-poller","level":"error","msg":"Capability \"NET_ADMIN\" added. It should be removed from the capability add list. If you need this capability, add an override label such as 'container.kubeaudit.io/poller.allow-capability-net-admin: SomeReason'.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"CapabilityAdded","Container":"poller","Metadata":"NET_RAW","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-librenms-poller","level":"error","msg":"Capability \"NET_RAW\" added. It should be removed from the capability add list. If you need this capability, add an override label such as 'container.kubeaudit.io/poller.allow-capability-net-raw: SomeReason'.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"wait-app","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-librenms-poller","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"init-env","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-librenms-poller","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"poller","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-librenms-poller","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"wait-app","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-librenms-poller","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"init-env","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-librenms-poller","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"poller","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-librenms-poller","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"wait-app","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-librenms-poller","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"init-env","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-librenms-poller","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"poller","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-librenms-poller","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"wait-app","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-librenms-poller","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"init-env","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-librenms-poller","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-librenms-poller","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"syslog","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/syslog","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-librenms-syslog","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/syslog' should be added.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-librenms-syslog","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"CapabilityShouldDropAll","Container":"syslog","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-librenms-syslog","level":"error","msg":"Capability Drop list should be set to ALL. Add the specific ones you need to the Add list and set an override label.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"CapabilityAdded","Container":"syslog","Metadata":"NET_ADMIN","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-librenms-syslog","level":"error","msg":"Capability \"NET_ADMIN\" added. It should be removed from the capability add list. If you need this capability, add an override label such as 'container.kubeaudit.io/syslog.allow-capability-net-admin: SomeReason'.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"CapabilityAdded","Container":"syslog","Metadata":"NET_RAW","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-librenms-syslog","level":"error","msg":"Capability \"NET_RAW\" added. It should be removed from the capability add list. If you need this capability, add an override label such as 'container.kubeaudit.io/syslog.allow-capability-net-raw: SomeReason'.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"syslog","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-librenms-syslog","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"syslog","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-librenms-syslog","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"syslog","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-librenms-syslog","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-librenms-syslog","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"mariadb","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/mariadb","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-mysql","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/mariadb' should be added.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"volume-permissions","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/volume-permissions","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-mysql","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/volume-permissions' should be added.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-mysql","ResourceNamespace":"default","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"mariadb","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-mysql","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"volume-permissions","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-mysql","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"RunAsUserCSCRoot","Container":"volume-permissions","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-mysql","ResourceNamespace":"default","level":"error","msg":"runAsUser is set to UID 0 (root user) in the container SecurityContext. Either set it to a value \u003e 0 or remove it and set runAsNonRoot to true.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"mariadb","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-mysql","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"volume-permissions","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-mysql","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"mariadb","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-mysql","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"volume-permissions","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-mysql","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-mysql","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"redis","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/redis","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-redis-master","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/redis' should be added.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-redis-master","ResourceNamespace":"default","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"redis","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-redis-master","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"redis","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-redis-master","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"redis","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-redis-master","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-redis-master","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"app","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/app","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-librenms","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/app' should be added.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"rrdcached","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/rrdcached","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-librenms","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/rrdcached' should be added.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"init-env","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/init-env","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-librenms","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/init-env' should be added.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-librenms","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"CapabilityShouldDropAll","Container":"app","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-librenms","level":"error","msg":"Capability Drop list should be set to ALL. Add the specific ones you need to the Add list and set an override label.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"CapabilityAdded","Container":"app","Metadata":"NET_ADMIN","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-librenms","level":"error","msg":"Capability \"NET_ADMIN\" added. It should be removed from the capability add list. If you need this capability, add an override label such as 'container.kubeaudit.io/app.allow-capability-net-admin: SomeReason'.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"CapabilityAdded","Container":"app","Metadata":"NET_RAW","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-librenms","level":"error","msg":"Capability \"NET_RAW\" added. It should be removed from the capability add list. If you need this capability, add an override label such as 'container.kubeaudit.io/app.allow-capability-net-raw: SomeReason'.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"rrdcached","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-librenms","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"init-env","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-librenms","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"app","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-librenms","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"rrdcached","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-librenms","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"init-env","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-librenms","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"app","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-librenms","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"init-env","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-librenms","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"app","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-librenms","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"rrdcached","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-librenms","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"init-env","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-librenms","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-librenms","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"wget","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/wget","ResourceApiVersion":"v1","ResourceKind":"Pod","ResourceName":"release-name-librenms-test-connection","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/wget' should be added.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"v1","ResourceKind":"Pod","ResourceName":"release-name-librenms-test-connection","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"wget","ResourceApiVersion":"v1","ResourceKind":"Pod","ResourceName":"release-name-librenms-test-connection","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"wget","ResourceApiVersion":"v1","ResourceKind":"Pod","ResourceName":"release-name-librenms-test-connection","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:50+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"v1","ResourceKind":"Pod","ResourceName":"release-name-librenms-test-connection","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:50+02:00"}
]}