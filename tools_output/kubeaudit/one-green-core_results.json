{"checks": [{"AuditResultName":"AppArmorAnnotationMissing","Container":"grafana","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/grafana","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-grafana","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/grafana' should be added.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"init-chown-data","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/init-chown-data","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-grafana","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/init-chown-data' should be added.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"grafana","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-grafana","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"init-chown-data","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-grafana","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"RunAsUserCSCRoot","Container":"init-chown-data","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-grafana","ResourceNamespace":"default","level":"error","msg":"runAsUser is set to UID 0 (root user) in the container SecurityContext. Either set it to a value \u003e 0 or remove it and set runAsNonRoot to true.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"grafana","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-grafana","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"init-chown-data","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-grafana","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"grafana","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-grafana","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"init-chown-data","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-grafana","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-grafana","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"api","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/api","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-api","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/api' should be added.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"initdb","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/initdb","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-api","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/initdb' should be added.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-api","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"api","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-api","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"initdb","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-api","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"api","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-api","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"initdb","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-api","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"api","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-api","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"initdb","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-api","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"api","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-api","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"initdb","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-api","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-api","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"worker","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/worker","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-worker","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/worker' should be added.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-worker","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"worker","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-worker","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"worker","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-worker","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"worker","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-worker","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"worker","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-worker","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"release-name-worker","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"postgresql","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/postgresql","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-postgresql","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/postgresql' should be added.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-postgresql","ResourceNamespace":"default","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"postgresql","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-postgresql","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"postgresql","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-postgresql","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"postgresql","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-postgresql","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-postgresql","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"rabbitmq","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/rabbitmq","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-rabbitmq","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/rabbitmq' should be added.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"rabbitmq","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-rabbitmq","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"rabbitmq","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-rabbitmq","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"rabbitmq","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-rabbitmq","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-rabbitmq","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"redis","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/redis","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-redis-master","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/redis' should be added.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"redis","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-redis-master","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"redis","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-redis-master","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"redis","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-redis-master","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-redis-master","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"redis","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/redis","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-redis-replicas","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/redis' should be added.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"redis","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-redis-replicas","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"redis","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-redis-replicas","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"redis","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-redis-replicas","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-redis-replicas","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"influxdb","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/influxdb","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-influxdb","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/influxdb' should be added.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-influxdb","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"influxdb","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-influxdb","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"influxdb","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-influxdb","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"influxdb","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-influxdb","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"influxdb","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-influxdb","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-influxdb","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"light-controller","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/light-controller","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-light-controller","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/light-controller' should be added.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-light-controller","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"light-controller","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-light-controller","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"light-controller","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-light-controller","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"light-controller","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-light-controller","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"light-controller","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-light-controller","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-light-controller","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"sprinklers-controller","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/sprinklers-controller","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-sprinklers-controller","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/sprinklers-controller' should be added.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-sprinklers-controller","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"sprinklers-controller","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-sprinklers-controller","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"sprinklers-controller","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-sprinklers-controller","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"sprinklers-controller","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-sprinklers-controller","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"sprinklers-controller","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-sprinklers-controller","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-sprinklers-controller","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"telegraf","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/telegraf","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-telegraf","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/telegraf' should be added.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-telegraf","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"telegraf","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-telegraf","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"telegraf","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-telegraf","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"telegraf","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-telegraf","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"telegraf","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-telegraf","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-telegraf","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"water-controller","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/water-controller","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-water-controller","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/water-controller' should be added.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-water-controller","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"water-controller","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-water-controller","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"water-controller","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-water-controller","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"water-controller","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-water-controller","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"water-controller","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-water-controller","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"release-name-water-controller","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"release-name-test","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/release-name-test","ResourceApiVersion":"v1","ResourceKind":"Pod","ResourceName":"release-name-grafana-test","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/release-name-test' should be added.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"release-name-test","ResourceApiVersion":"v1","ResourceKind":"Pod","ResourceName":"release-name-grafana-test","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"release-name-test","ResourceApiVersion":"v1","ResourceKind":"Pod","ResourceName":"release-name-grafana-test","ResourceNamespace":"default","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"release-name-test","ResourceApiVersion":"v1","ResourceKind":"Pod","ResourceName":"release-name-grafana-test","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"release-name-test","ResourceApiVersion":"v1","ResourceKind":"Pod","ResourceName":"release-name-grafana-test","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-05-16T12:15:52+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"v1","ResourceKind":"Pod","ResourceName":"release-name-grafana-test","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-05-16T12:15:52+02:00"}
]}