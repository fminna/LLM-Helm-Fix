{"checks": [{"AuditResultName":"AppArmorAnnotationMissing","Container":"","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"activitymanager","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/' should be added.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"activitymanager","ResourceNamespace":"default","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"activitymanager","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"activitymanager","ResourceNamespace":"default","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"activitymanager","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"activitymanager","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"activitymanager","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"alertmanager","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/alertmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"alertmanager","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/alertmanager' should be added.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"alertmanager","ResourceNamespace":"default","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"alertmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"alertmanager","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"alertmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"alertmanager","ResourceNamespace":"default","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"alertmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"alertmanager","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"alertmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"alertmanager","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"alertmanager","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"appscanner","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/' should be added.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"appscanner","ResourceNamespace":"default","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"appscanner","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"appscanner","ResourceNamespace":"default","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"appscanner","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"appscanner","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"appscanner","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"appworker","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/' should be added.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"appworker","ResourceNamespace":"default","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"appworker","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"appworker","ResourceNamespace":"default","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"appworker","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"appworker","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"appworker","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"cloudmanager","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/cloudmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"cloudmanager","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/cloudmanager' should be added.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"cloudmanager","ResourceNamespace":"default","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"cloudmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"cloudmanager","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"cloudmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"cloudmanager","ResourceNamespace":"default","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"cloudmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"cloudmanager","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"cloudmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"cloudmanager","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"cloudmanager","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"clustermanager","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/' should be added.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"clustermanager","ResourceNamespace":"default","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"clustermanager","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"clustermanager","ResourceNamespace":"default","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"clustermanager","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"clustermanager","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"clustermanager","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"configmanager","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/configmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"configmanager","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/configmanager' should be added.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"configmanager","ResourceNamespace":"default","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"configmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"configmanager","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"configmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"configmanager","ResourceNamespace":"default","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"configmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"configmanager","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"configmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"configmanager","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"configmanager","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"costmanager","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/costmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"costmanager","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/costmanager' should be added.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"costmanager","ResourceNamespace":"default","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"costmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"costmanager","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"costmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"costmanager","ResourceNamespace":"default","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"costmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"costmanager","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"costmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"costmanager","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"costmanager","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"deploymanager","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/deploymanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"deploymentmanager","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/deploymanager' should be added.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"deploymentmanager","ResourceNamespace":"default","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"deploymanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"deploymentmanager","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"deploymanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"deploymentmanager","ResourceNamespace":"default","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"deploymanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"deploymentmanager","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"deploymanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"deploymentmanager","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"deploymentmanager","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"domainmanager","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/domainmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"domainmanager","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/domainmanager' should be added.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"domainmanager","ResourceNamespace":"default","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"domainmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"domainmanager","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"domainmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"domainmanager","ResourceNamespace":"default","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"domainmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"domainmanager","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"domainmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"domainmanager","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"domainmanager","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"gateway","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/gateway","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"gateway","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/gateway' should be added.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"gpkubeux","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/gpkubeux","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"gateway","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/gpkubeux' should be added.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"gateway","ResourceNamespace":"default","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"gateway","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"gateway","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"gpkubeux","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"gateway","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"gateway","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"gateway","ResourceNamespace":"default","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"gpkubeux","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"gateway","ResourceNamespace":"default","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"gateway","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"gateway","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"gpkubeux","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"gateway","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"gateway","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"gateway","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"gpkubeux","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"gateway","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"gateway","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"gpcore","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/' should be added.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"gpcore","ResourceNamespace":"default","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"gpcore","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"gpcore","ResourceNamespace":"default","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"gpcore","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"gpcore","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"gpcore","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"marketplace","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/' should be added.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"marketplace","ResourceNamespace":"default","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"marketplace","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"marketplace","ResourceNamespace":"default","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"marketplace","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"marketplace","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"marketplace","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"nodechecker","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/nodechecker","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"nodechecker","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/nodechecker' should be added.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"nodechecker","ResourceNamespace":"default","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"nodechecker","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"nodechecker","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"nodechecker","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"nodechecker","ResourceNamespace":"default","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"nodechecker","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"nodechecker","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"nodechecker","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"nodechecker","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"nodechecker","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"paymentmanager","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/paymentmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"paymentmanager","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/paymentmanager' should be added.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"paymentmanager","ResourceNamespace":"default","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"paymentmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"paymentmanager","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"paymentmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"paymentmanager","ResourceNamespace":"default","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"paymentmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"paymentmanager","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"paymentmanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"paymentmanager","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"paymentmanager","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"redis","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/redis","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"redis","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/redis' should be added.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"redis","ResourceNamespace":"default","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"redis","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"redis","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"redis","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"redis","ResourceNamespace":"default","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"redis","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"redis","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"redis","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"redis","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"redis","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"usermanager","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/usermanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"usermanager","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/usermanager' should be added.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"usermanager","ResourceNamespace":"default","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"usermanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"usermanager","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"usermanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"usermanager","ResourceNamespace":"default","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"usermanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"usermanager","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"usermanager","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"usermanager","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"usermanager","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"webhook","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/webhook","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"webhook","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/webhook' should be added.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"webhook","ResourceNamespace":"default","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"webhook","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"webhook","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"webhook","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"webhook","ResourceNamespace":"default","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"webhook","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"webhook","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"webhook","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"webhook","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"webhook","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"esearch","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/esearch","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"esearch","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/esearch' should be added.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"esearch","ResourceNamespace":"default","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"esearch","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"esearch","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"esearch","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"esearch","ResourceNamespace":"default","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"esearch","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"esearch","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"esearch","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"esearch","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"esearch","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"influxdb","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/influxdb","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"influxdb","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/influxdb' should be added.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"influxdb","ResourceNamespace":"default","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"influxdb","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"influxdb","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"influxdb","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"influxdb","ResourceNamespace":"default","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"influxdb","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"influxdb","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"influxdb","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"influxdb","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"influxdb","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"mongo","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/mongo","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"mongodb","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/mongo' should be added.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"mongo-init","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/mongo-init","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"mongodb","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/mongo-init' should be added.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"mongodb","ResourceNamespace":"default","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"mongo","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"mongodb","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"mongo-init","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"mongodb","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"mongo","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"mongodb","ResourceNamespace":"default","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"mongo-init","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"mongodb","ResourceNamespace":"default","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"mongo","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"mongodb","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"mongo-init","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"mongodb","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"mongo","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"mongodb","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"mongo-init","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"mongodb","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"mongodb","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"rabbitmq","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/rabbitmq","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"rabbitmq","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/rabbitmq' should be added.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"rabbitmq","ResourceNamespace":"default","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"rabbitmq","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"rabbitmq","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"rabbitmq","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"rabbitmq","ResourceNamespace":"default","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"rabbitmq","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"rabbitmq","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"rabbitmq","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"rabbitmq","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"rabbitmq","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AppArmorAnnotationMissing","Container":"rabbitmq","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/rabbitmq","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"rabbitmq-build","ResourceNamespace":"default","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/rabbitmq' should be added.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"rabbitmq-build","ResourceNamespace":"default","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"rabbitmq","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"rabbitmq-build","ResourceNamespace":"default","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"rabbitmq","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"rabbitmq-build","ResourceNamespace":"default","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"rabbitmq","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"rabbitmq-build","ResourceNamespace":"default","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"rabbitmq","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"rabbitmq-build","ResourceNamespace":"default","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2024-06-26T03:39:06+02:00"},
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"StatefulSet","ResourceName":"rabbitmq-build","ResourceNamespace":"default","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2024-06-26T03:39:06+02:00"}
]}