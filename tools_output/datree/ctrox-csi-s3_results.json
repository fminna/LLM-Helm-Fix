{"policyValidationResults":[{"fileName":"/Applications/Utilities/repos/LLM-Helm-Fix/templates/ctrox-csi-s3_template.yaml","ruleResults":[{"identifier":"CONTAINERS_MISSING_MEMORY_REQUEST_KEY","name":"Ensure each container has a configured memory request","messageOnFailure":"Missing property object `requests.memory` - value should be within the accepted boundaries recommended by the organization","occurrencesDetails":[{"metadataName":"csi-s3","kind":"DaemonSet","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":280,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":301,"failedErrorColumn":11}]},{"metadataName":"csi-attacher-s3","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":373,"failedErrorColumn":11}]},{"metadataName":"csi-provisioner-s3","kind":"StatefulSet","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":425,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":437,"failedErrorColumn":11}]}]},{"identifier":"CONTAINERS_MISSING_LIVENESSPROBE_KEY","name":"Ensure each container has a configured liveness probe","messageOnFailure":"Missing property object `livenessProbe` - add a properly configured livenessProbe to catch possible deadlocks","occurrencesDetails":[{"metadataName":"csi-s3","kind":"DaemonSet","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":280,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":301,"failedErrorColumn":11}]},{"metadataName":"csi-attacher-s3","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":373,"failedErrorColumn":11}]},{"metadataName":"csi-provisioner-s3","kind":"StatefulSet","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":425,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":437,"failedErrorColumn":11}]}]},{"identifier":"CONTAINERS_MISSING_READINESSPROBE_KEY","name":"Ensure each container has a configured readiness probe","messageOnFailure":"Missing property object `readinessProbe` - add a properly configured readinessProbe to notify kubelet your Pods are ready for traffic","occurrencesDetails":[{"metadataName":"csi-s3","kind":"DaemonSet","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":280,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":301,"failedErrorColumn":11}]},{"metadataName":"csi-attacher-s3","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":373,"failedErrorColumn":11}]},{"metadataName":"csi-provisioner-s3","kind":"StatefulSet","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":425,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":437,"failedErrorColumn":11}]}]},{"identifier":"CONTAINERS_MISSING_MEMORY_LIMIT_KEY","name":"Ensure each container has a configured memory limit","messageOnFailure":"Missing property object `limits.memory` - value should be within the accepted boundaries recommended by the organization","occurrencesDetails":[{"metadataName":"csi-s3","kind":"DaemonSet","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":280,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":301,"failedErrorColumn":11}]},{"metadataName":"csi-attacher-s3","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":373,"failedErrorColumn":11}]},{"metadataName":"csi-provisioner-s3","kind":"StatefulSet","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":425,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":437,"failedErrorColumn":11}]}]},{"identifier":"CONTAINERS_INCORRECT_READONLYROOTFILESYSTEM_VALUE","name":"Ensure each container has a read-only root filesystem","messageOnFailure":"Incorrect value for key `readOnlyRootFilesystem` - set to 'true' to protect filesystem from potential attacks","occurrencesDetails":[{"metadataName":"csi-s3","kind":"DaemonSet","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":280,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1/securityContext","failedErrorLine":305,"failedErrorColumn":13}]},{"metadataName":"csi-attacher-s3","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":373,"failedErrorColumn":11}]},{"metadataName":"csi-provisioner-s3","kind":"StatefulSet","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":425,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":437,"failedErrorColumn":11}]}]},{"identifier":"CONTAINERS_INCORRECT_KEY_HOSTPATH","name":"Prevent containers from accessing underlying host","messageOnFailure":"Invalid key `hostPath` - refrain from using this mount to prevent an attack on the underlying host","occurrencesDetails":[{"metadataName":"csi-s3","kind":"DaemonSet","skipMessage":"","occurrences":4,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/volumes/0","failedErrorLine":329,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/volumes/1","failedErrorLine":333,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/volumes/2","failedErrorLine":337,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/volumes/3","failedErrorLine":341,"failedErrorColumn":11}]},{"metadataName":"csi-attacher-s3","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/volumes/0","failedErrorLine":386,"failedErrorColumn":11}]}]},{"identifier":"CONTAINERS_MISSING_KEY_ALLOWPRIVILEGEESCALATION","name":"Prevent containers from escalating privileges","messageOnFailure":"Missing key `allowPrivilegeEscalation` - set to false to prevent attackers from exploiting escalated container privileges","occurrencesDetails":[{"metadataName":"csi-s3","kind":"DaemonSet","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":280,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1/securityContext/allowPrivilegeEscalation","failedErrorLine":308,"failedErrorColumn":39}]},{"metadataName":"csi-attacher-s3","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":373,"failedErrorColumn":11}]},{"metadataName":"csi-provisioner-s3","kind":"StatefulSet","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":425,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":437,"failedErrorColumn":11}]}]}]}],"policySummary":{"policyName":"Starter","totalRulesInPolicy":34,"totalSkippedRules":0,"totalRulesFailed":7,"totalPassedCount":27},"evaluationSummary":{"configsCount":16,"filesCount":1,"passedYamlValidationCount":1,"k8sValidation":"1/1","passedPolicyValidationCount":0},"yamlValidationResults":null,"k8sValidationResults":null,"loginUrl":""}
