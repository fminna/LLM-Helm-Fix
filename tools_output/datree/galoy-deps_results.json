{"policyValidationResults":[{"fileName":"/Applications/Utilities/repos/LLM-Helm-Fix/templates/galoy-deps_template.yaml","ruleResults":[{"identifier":"CONTAINERS_INCORRECT_READONLYROOTFILESYSTEM_VALUE","name":"Ensure each container has a read-only root filesystem","messageOnFailure":"Incorrect value for key `readOnlyRootFilesystem` - set to 'true' to protect filesystem from potential attacks","occurrencesDetails":[{"metadataName":"release-name-opentelemetry-collector-agent","kind":"DaemonSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":7034,"failedErrorColumn":13}]},{"metadataName":"release-name-ingress-nginx-controller","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":7389,"failedErrorColumn":13}]},{"metadataName":"kubemonkey","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":7481,"failedErrorColumn":11}]},{"metadataName":"strimzi-cluster-operator","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":7534,"failedErrorColumn":11}]},{"metadataName":"release-name-ingress-nginx-admission-create","kind":"Job","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":8121,"failedErrorColumn":13}]},{"metadataName":"release-name-ingress-nginx-admission-patch","kind":"Job","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":8178,"failedErrorColumn":13}]}]},{"identifier":"CONTAINERS_MISSING_KEY_ALLOWPRIVILEGEESCALATION","name":"Prevent containers from escalating privileges","messageOnFailure":"Missing key `allowPrivilegeEscalation` - set to false to prevent attackers from exploiting escalated container privileges","occurrencesDetails":[{"metadataName":"release-name-opentelemetry-collector-agent","kind":"DaemonSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":7034,"failedErrorColumn":13}]},{"metadataName":"release-name-ingress-nginx-controller","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext/allowPrivilegeEscalation","failedErrorLine":7395,"failedErrorColumn":39}]},{"metadataName":"kubemonkey","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":7481,"failedErrorColumn":11}]},{"metadataName":"strimzi-cluster-operator","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":7534,"failedErrorColumn":11}]}]},{"identifier":"CONTAINERS_INCORRECT_RUNASUSER_VALUE_LOWUID","name":"Prevent containers from accessing host files by using high UIDs","messageOnFailure":"Incorrect value for key `runAsUser` - value should be above 9999 to reduce the likelihood that the UID is already taken","occurrencesDetails":[{"metadataName":"release-name-ingress-nginx-controller","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext/runAsUser","failedErrorLine":7394,"failedErrorColumn":24}]}]},{"identifier":"CONTAINERS_MISSING_MEMORY_LIMIT_KEY","name":"Ensure each container has a configured memory limit","messageOnFailure":"Missing property object `limits.memory` - value should be within the accepted boundaries recommended by the organization","occurrencesDetails":[{"metadataName":"release-name-opentelemetry-collector-agent","kind":"DaemonSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":7029,"failedErrorColumn":11}]},{"metadataName":"release-name-cert-manager-cainjector","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":7136,"failedErrorColumn":11}]},{"metadataName":"release-name-cert-manager","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":7199,"failedErrorColumn":11}]},{"metadataName":"release-name-cert-manager-webhook","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":7281,"failedErrorColumn":11}]},{"metadataName":"release-name-ingress-nginx-controller","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":7445,"failedErrorColumn":13}]},{"metadataName":"kubemonkey","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":7488,"failedErrorColumn":13}]},{"metadataName":"release-name-cert-manager-startupapicheck","kind":"Job","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":8059,"failedErrorColumn":11}]},{"metadataName":"release-name-ingress-nginx-admission-create","kind":"Job","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":8107,"failedErrorColumn":11}]},{"metadataName":"release-name-ingress-nginx-admission-patch","kind":"Job","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":8162,"failedErrorColumn":11}]}]},{"identifier":"CONTAINERS_MISSING_READINESSPROBE_KEY","name":"Ensure each container has a configured readiness probe","messageOnFailure":"Missing property object `readinessProbe` - add a properly configured readinessProbe to notify kubelet your Pods are ready for traffic","occurrencesDetails":[{"metadataName":"release-name-cert-manager-cainjector","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":7136,"failedErrorColumn":11}]},{"metadataName":"release-name-cert-manager","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":7199,"failedErrorColumn":11}]},{"metadataName":"kubemonkey","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":7481,"failedErrorColumn":11}]},{"metadataName":"release-name-cert-manager-startupapicheck","kind":"Job","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":8059,"failedErrorColumn":11}]},{"metadataName":"release-name-ingress-nginx-admission-create","kind":"Job","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":8107,"failedErrorColumn":11}]},{"metadataName":"release-name-ingress-nginx-admission-patch","kind":"Job","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":8162,"failedErrorColumn":11}]}]},{"identifier":"CONTAINERS_INCORRECT_KEY_HOSTPORT","name":"Prevent containers from insecurely exposing workload","messageOnFailure":"Incorrect key `hostPort` - refrain from using this key to prevent insecurely exposing your workload","occurrencesDetails":[{"metadataName":"release-name-opentelemetry-collector-agent","kind":"DaemonSet","skipMessage":"","occurrences":7,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/ports/0","failedErrorLine":7039,"failedErrorColumn":15},{"schemaPath":"/spec/template/spec/containers/0/ports/1","failedErrorLine":7043,"failedErrorColumn":15},{"schemaPath":"/spec/template/spec/containers/0/ports/2","failedErrorLine":7047,"failedErrorColumn":15},{"schemaPath":"/spec/template/spec/containers/0/ports/3","failedErrorLine":7051,"failedErrorColumn":15},{"schemaPath":"/spec/template/spec/containers/0/ports/4","failedErrorLine":7055,"failedErrorColumn":15},{"schemaPath":"/spec/template/spec/containers/0/ports/5","failedErrorLine":7059,"failedErrorColumn":15},{"schemaPath":"/spec/template/spec/containers/0/ports/6","failedErrorLine":7063,"failedErrorColumn":15}]}]},{"identifier":"WORKLOAD_INCORRECT_NAMESPACE_VALUE_DEFAULT","name":"Prevent workload from using the default namespace","messageOnFailure":"Incorrect value for key `namespace` - use an explicit namespace instead of the default one (`default`)","occurrencesDetails":[{"metadataName":"release-name-opentelemetry-collector-agent","kind":"DaemonSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":6997,"failedErrorColumn":14}]},{"metadataName":"release-name-cert-manager-cainjector","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":7102,"failedErrorColumn":14}]},{"metadataName":"release-name-cert-manager","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":7161,"failedErrorColumn":14}]},{"metadataName":"release-name-cert-manager-webhook","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":7247,"failedErrorColumn":14}]},{"metadataName":"release-name-ingress-nginx-controller","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":7347,"failedErrorColumn":14}]},{"metadataName":"kubemonkey","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":7462,"failedErrorColumn":14}]},{"metadataName":"strimzi-cluster-operator","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":7505,"failedErrorColumn":14}]},{"metadataName":"release-name-cert-manager-startupapicheck","kind":"Job","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":8025,"failedErrorColumn":14}]},{"metadataName":"release-name-ingress-nginx-admission-create","kind":"Job","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":8081,"failedErrorColumn":14}]},{"metadataName":"release-name-ingress-nginx-admission-patch","kind":"Job","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":8136,"failedErrorColumn":14}]}]},{"identifier":"CONTAINERS_MISSING_LIVENESSPROBE_KEY","name":"Ensure each container has a configured liveness probe","messageOnFailure":"Missing property object `livenessProbe` - add a properly configured livenessProbe to catch possible deadlocks","occurrencesDetails":[{"metadataName":"release-name-cert-manager-cainjector","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":7136,"failedErrorColumn":11}]},{"metadataName":"kubemonkey","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":7481,"failedErrorColumn":11}]},{"metadataName":"release-name-cert-manager-startupapicheck","kind":"Job","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":8059,"failedErrorColumn":11}]},{"metadataName":"release-name-ingress-nginx-admission-create","kind":"Job","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":8107,"failedErrorColumn":11}]},{"metadataName":"release-name-ingress-nginx-admission-patch","kind":"Job","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":8162,"failedErrorColumn":11}]}]},{"identifier":"CONTAINERS_MISSING_MEMORY_REQUEST_KEY","name":"Ensure each container has a configured memory request","messageOnFailure":"Missing property object `requests.memory` - value should be within the accepted boundaries recommended by the organization","occurrencesDetails":[{"metadataName":"release-name-opentelemetry-collector-agent","kind":"DaemonSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":7029,"failedErrorColumn":11}]},{"metadataName":"release-name-cert-manager-cainjector","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":7136,"failedErrorColumn":11}]},{"metadataName":"release-name-cert-manager","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":7199,"failedErrorColumn":11}]},{"metadataName":"release-name-cert-manager-webhook","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":7281,"failedErrorColumn":11}]},{"metadataName":"kubemonkey","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":7488,"failedErrorColumn":13}]},{"metadataName":"release-name-cert-manager-startupapicheck","kind":"Job","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":8059,"failedErrorColumn":11}]},{"metadataName":"release-name-ingress-nginx-admission-create","kind":"Job","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":8107,"failedErrorColumn":11}]},{"metadataName":"release-name-ingress-nginx-admission-patch","kind":"Job","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":8162,"failedErrorColumn":11}]}]},{"identifier":"DEPLOYMENT_INCORRECT_REPLICAS_VALUE","name":"Ensure Deployment has more than one replica configured","messageOnFailure":"Incorrect value for key `replicas` - running 2 or more replicas will increase the availability of the service","occurrencesDetails":[{"metadataName":"release-name-cert-manager-cainjector","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/replicas","failedErrorLine":7112,"failedErrorColumn":13}]},{"metadataName":"release-name-cert-manager","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/replicas","failedErrorLine":7171,"failedErrorColumn":13}]},{"metadataName":"release-name-cert-manager-webhook","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/replicas","failedErrorLine":7257,"failedErrorColumn":13}]},{"metadataName":"kubemonkey","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/replicas","failedErrorLine":7469,"failedErrorColumn":13}]},{"metadataName":"strimzi-cluster-operator","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/replicas","failedErrorLine":7513,"failedErrorColumn":13}]}]}]}],"policySummary":{"policyName":"Starter","totalRulesInPolicy":34,"totalSkippedRules":0,"totalRulesFailed":10,"totalPassedCount":24},"evaluationSummary":{"configsCount":98,"filesCount":1,"passedYamlValidationCount":1,"k8sValidation":"1/1","passedPolicyValidationCount":0},"yamlValidationResults":null,"k8sValidationResults":null,"loginUrl":""}
