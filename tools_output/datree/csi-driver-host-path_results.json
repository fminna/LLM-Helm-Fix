{"policyValidationResults":[{"fileName":"/Applications/Utilities/repos/LLM-Helm-Fix/templates/csi-driver-host-path_template.yaml","ruleResults":[{"identifier":"CONTAINERS_MISSING_MEMORY_LIMIT_KEY","name":"Ensure each container has a configured memory limit","messageOnFailure":"Missing property object `limits.memory` - value should be within the accepted boundaries recommended by the organization","occurrencesDetails":[{"metadataName":"csi-hostpathplugin","kind":"StatefulSet","skipMessage":"","occurrences":8,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":673,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":715,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/2","failedErrorLine":728,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/3","failedErrorLine":752,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/4","failedErrorLine":760,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/5","failedErrorLine":773,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/6","failedErrorLine":788,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/7","failedErrorLine":801,"failedErrorColumn":11}]}]},{"identifier":"CONTAINERS_INCORRECT_READONLYROOTFILESYSTEM_VALUE","name":"Ensure each container has a read-only root filesystem","messageOnFailure":"Incorrect value for key `readOnlyRootFilesystem` - set to 'true' to protect filesystem from potential attacks","occurrencesDetails":[{"metadataName":"csi-hostpathplugin","kind":"StatefulSet","skipMessage":"","occurrences":8,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":689,"failedErrorColumn":13},{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":715,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/2/securityContext","failedErrorLine":738,"failedErrorColumn":13},{"schemaPath":"/spec/template/spec/containers/3","failedErrorLine":752,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/4/securityContext","failedErrorLine":769,"failedErrorColumn":13},{"schemaPath":"/spec/template/spec/containers/5/securityContext","failedErrorLine":784,"failedErrorColumn":13},{"schemaPath":"/spec/template/spec/containers/6/securityContext","failedErrorLine":797,"failedErrorColumn":13},{"schemaPath":"/spec/template/spec/containers/7/securityContext","failedErrorLine":810,"failedErrorColumn":13}]}]},{"identifier":"CONTAINERS_INCORRECT_KEY_HOSTPATH","name":"Prevent containers from accessing underlying host","messageOnFailure":"Invalid key `hostPath` - refrain from using this mount to prevent an attack on the underlying host","occurrencesDetails":[{"metadataName":"csi-hostpathplugin","kind":"StatefulSet","skipMessage":"","occurrences":6,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/volumes/0","failedErrorLine":815,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/volumes/1","failedErrorLine":819,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/volumes/2","failedErrorLine":823,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/volumes/3","failedErrorLine":827,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/volumes/4","failedErrorLine":831,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/volumes/5","failedErrorLine":837,"failedErrorColumn":11}]}]},{"identifier":"CONTAINERS_MISSING_KEY_ALLOWPRIVILEGEESCALATION","name":"Prevent containers from escalating privileges","messageOnFailure":"Missing key `allowPrivilegeEscalation` - set to false to prevent attackers from exploiting escalated container privileges","occurrencesDetails":[{"metadataName":"csi-hostpathplugin","kind":"StatefulSet","skipMessage":"","occurrences":8,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":689,"failedErrorColumn":13},{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":715,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/2/securityContext","failedErrorLine":738,"failedErrorColumn":13},{"schemaPath":"/spec/template/spec/containers/3","failedErrorLine":752,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/4/securityContext","failedErrorLine":769,"failedErrorColumn":13},{"schemaPath":"/spec/template/spec/containers/5/securityContext","failedErrorLine":784,"failedErrorColumn":13},{"schemaPath":"/spec/template/spec/containers/6/securityContext","failedErrorLine":797,"failedErrorColumn":13},{"schemaPath":"/spec/template/spec/containers/7/securityContext","failedErrorLine":810,"failedErrorColumn":13}]}]},{"identifier":"CONTAINERS_MISSING_MEMORY_REQUEST_KEY","name":"Ensure each container has a configured memory request","messageOnFailure":"Missing property object `requests.memory` - value should be within the accepted boundaries recommended by the organization","occurrencesDetails":[{"metadataName":"csi-hostpathplugin","kind":"StatefulSet","skipMessage":"","occurrences":8,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":673,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":715,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/2","failedErrorLine":728,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/3","failedErrorLine":752,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/4","failedErrorLine":760,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/5","failedErrorLine":773,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/6","failedErrorLine":788,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/7","failedErrorLine":801,"failedErrorColumn":11}]}]},{"identifier":"CONTAINERS_MISSING_LIVENESSPROBE_KEY","name":"Ensure each container has a configured liveness probe","messageOnFailure":"Missing property object `livenessProbe` - add a properly configured livenessProbe to catch possible deadlocks","occurrencesDetails":[{"metadataName":"csi-hostpathplugin","kind":"StatefulSet","skipMessage":"","occurrences":7,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":715,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/2","failedErrorLine":728,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/3","failedErrorLine":752,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/4","failedErrorLine":760,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/5","failedErrorLine":773,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/6","failedErrorLine":788,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/7","failedErrorLine":801,"failedErrorColumn":11}]}]},{"identifier":"CONTAINERS_MISSING_READINESSPROBE_KEY","name":"Ensure each container has a configured readiness probe","messageOnFailure":"Missing property object `readinessProbe` - add a properly configured readinessProbe to notify kubelet your Pods are ready for traffic","occurrencesDetails":[{"metadataName":"csi-hostpathplugin","kind":"StatefulSet","skipMessage":"","occurrences":8,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":673,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":715,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/2","failedErrorLine":728,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/3","failedErrorLine":752,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/4","failedErrorLine":760,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/5","failedErrorLine":773,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/6","failedErrorLine":788,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/7","failedErrorLine":801,"failedErrorColumn":11}]}]}]}],"policySummary":{"policyName":"Starter","totalRulesInPolicy":34,"totalSkippedRules":0,"totalRulesFailed":7,"totalPassedCount":27},"evaluationSummary":{"configsCount":40,"filesCount":1,"passedYamlValidationCount":1,"k8sValidation":"1/1","passedPolicyValidationCount":0},"yamlValidationResults":null,"k8sValidationResults":null,"loginUrl":""}
