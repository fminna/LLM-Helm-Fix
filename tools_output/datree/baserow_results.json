{"policyValidationResults":[{"fileName":"/Applications/Utilities/repos/LLM-Helm-Fix/templates/baserow_template.yaml","ruleResults":[{"identifier":"CONTAINERS_MISSING_LIVENESSPROBE_KEY","name":"Ensure each container has a configured liveness probe","messageOnFailure":"Missing property object `livenessProbe` - add a properly configured livenessProbe to catch possible deadlocks","occurrencesDetails":[{"metadataName":"release-name-baserow-celery","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/2","failedErrorLine":867,"failedErrorColumn":11}]}]},{"identifier":"CONTAINERS_INCORRECT_RUNASUSER_VALUE_LOWUID","name":"Prevent containers from accessing host files by using high UIDs","messageOnFailure":"Incorrect value for key `runAsUser` - value should be above 9999 to reduce the likelihood that the UID is already taken","occurrencesDetails":[{"metadataName":"release-name-baserow-asgi","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext/runAsUser","failedErrorLine":719,"failedErrorColumn":24}]},{"metadataName":"release-name-baserow-celery","kind":"Deployment","skipMessage":"","occurrences":3,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext/runAsUser","failedErrorLine":808,"failedErrorColumn":24},{"schemaPath":"/spec/template/spec/containers/1/securityContext/runAsUser","failedErrorLine":866,"failedErrorColumn":24},{"schemaPath":"/spec/template/spec/containers/2/securityContext/runAsUser","failedErrorLine":898,"failedErrorColumn":24}]},{"metadataName":"release-name-baserow-frontend","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext/runAsUser","failedErrorLine":962,"failedErrorColumn":24}]},{"metadataName":"release-name-baserow-wsgi","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext/runAsUser","failedErrorLine":1060,"failedErrorColumn":24}]},{"metadataName":"release-name-postgresql","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext/runAsUser","failedErrorLine":1134,"failedErrorColumn":24}]},{"metadataName":"release-name-redis-master","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext/runAsUser","failedErrorLine":1307,"failedErrorColumn":24}]}]},{"identifier":"CONTAINERS_INCORRECT_READONLYROOTFILESYSTEM_VALUE","name":"Ensure each container has a read-only root filesystem","messageOnFailure":"Incorrect value for key `readOnlyRootFilesystem` - set to 'true' to protect filesystem from potential attacks","occurrencesDetails":[{"metadataName":"release-name-baserow-asgi","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":717,"failedErrorColumn":13}]},{"metadataName":"release-name-baserow-celery","kind":"Deployment","skipMessage":"","occurrences":3,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":806,"failedErrorColumn":13},{"schemaPath":"/spec/template/spec/containers/1/securityContext","failedErrorLine":864,"failedErrorColumn":13},{"schemaPath":"/spec/template/spec/containers/2/securityContext","failedErrorLine":896,"failedErrorColumn":13}]},{"metadataName":"release-name-baserow-frontend","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":960,"failedErrorColumn":13}]},{"metadataName":"release-name-baserow-wsgi","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":1058,"failedErrorColumn":13}]},{"metadataName":"release-name-postgresql","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem","failedErrorLine":1132,"failedErrorColumn":37}]},{"metadataName":"release-name-redis-master","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":1301,"failedErrorColumn":13}]}]},{"identifier":"WORKLOAD_INCORRECT_NAMESPACE_VALUE_DEFAULT","name":"Prevent workload from using the default namespace","messageOnFailure":"Incorrect value for key `namespace` - use an explicit namespace instead of the default one (`default`)","occurrencesDetails":[{"metadataName":"release-name-postgresql","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":1067,"failedErrorColumn":14}]},{"metadataName":"release-name-redis-master","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":1238,"failedErrorColumn":14}]}]},{"identifier":"CONTAINERS_MISSING_READINESSPROBE_KEY","name":"Ensure each container has a configured readiness probe","messageOnFailure":"Missing property object `readinessProbe` - add a properly configured readinessProbe to notify kubelet your Pods are ready for traffic","occurrencesDetails":[{"metadataName":"release-name-baserow-celery","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/2","failedErrorLine":867,"failedErrorColumn":11}]}]},{"identifier":"DEPLOYMENT_INCORRECT_REPLICAS_VALUE","name":"Ensure Deployment has more than one replica configured","messageOnFailure":"Incorrect value for key `replicas` - running 2 or more replicas will increase the availability of the service","occurrencesDetails":[{"metadataName":"release-name-baserow-asgi","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/replicas","failedErrorLine":637,"failedErrorColumn":13}]},{"metadataName":"release-name-baserow-celery","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/replicas","failedErrorLine":733,"failedErrorColumn":13}]},{"metadataName":"release-name-baserow-frontend","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/replicas","failedErrorLine":912,"failedErrorColumn":13}]},{"metadataName":"release-name-baserow-wsgi","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/replicas","failedErrorLine":976,"failedErrorColumn":13}]}]},{"identifier":"CONTAINERS_MISSING_KEY_ALLOWPRIVILEGEESCALATION","name":"Prevent containers from escalating privileges","messageOnFailure":"Missing key `allowPrivilegeEscalation` - set to false to prevent attackers from exploiting escalated container privileges","occurrencesDetails":[{"metadataName":"release-name-baserow-asgi","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":717,"failedErrorColumn":13}]},{"metadataName":"release-name-baserow-celery","kind":"Deployment","skipMessage":"","occurrences":3,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":806,"failedErrorColumn":13},{"schemaPath":"/spec/template/spec/containers/1/securityContext","failedErrorLine":864,"failedErrorColumn":13},{"schemaPath":"/spec/template/spec/containers/2/securityContext","failedErrorLine":896,"failedErrorColumn":13}]},{"metadataName":"release-name-baserow-frontend","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":960,"failedErrorColumn":13}]},{"metadataName":"release-name-baserow-wsgi","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":1058,"failedErrorColumn":13}]}]},{"identifier":"CONTAINERS_MISSING_MEMORY_REQUEST_KEY","name":"Ensure each container has a configured memory request","messageOnFailure":"Missing property object `requests.memory` - value should be within the accepted boundaries recommended by the organization","occurrencesDetails":[{"metadataName":"release-name-baserow-asgi","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":655,"failedErrorColumn":11}]},{"metadataName":"release-name-baserow-celery","kind":"Deployment","skipMessage":"","occurrences":3,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":751,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":809,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/2","failedErrorLine":867,"failedErrorColumn":11}]},{"metadataName":"release-name-baserow-frontend","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":930,"failedErrorColumn":11}]},{"metadataName":"release-name-baserow-wsgi","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":994,"failedErrorColumn":11}]},{"metadataName":"release-name-postgresql","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":1123,"failedErrorColumn":11}]},{"metadataName":"release-name-redis-master","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":1297,"failedErrorColumn":11}]}]},{"identifier":"CONTAINERS_MISSING_MEMORY_LIMIT_KEY","name":"Ensure each container has a configured memory limit","messageOnFailure":"Missing property object `limits.memory` - value should be within the accepted boundaries recommended by the organization","occurrencesDetails":[{"metadataName":"release-name-baserow-asgi","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":655,"failedErrorColumn":11}]},{"metadataName":"release-name-baserow-celery","kind":"Deployment","skipMessage":"","occurrences":3,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":751,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":809,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/2","failedErrorLine":867,"failedErrorColumn":11}]},{"metadataName":"release-name-baserow-frontend","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":930,"failedErrorColumn":11}]},{"metadataName":"release-name-baserow-wsgi","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":994,"failedErrorColumn":11}]},{"metadataName":"release-name-postgresql","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":1123,"failedErrorColumn":11}]},{"metadataName":"release-name-redis-master","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":1297,"failedErrorColumn":11}]}]}]}],"policySummary":{"policyName":"Starter","totalRulesInPolicy":34,"totalSkippedRules":0,"totalRulesFailed":9,"totalPassedCount":25},"evaluationSummary":{"configsCount":31,"filesCount":1,"passedYamlValidationCount":1,"k8sValidation":"1/1","passedPolicyValidationCount":0},"yamlValidationResults":null,"k8sValidationResults":null,"loginUrl":""}
