{"policyValidationResults":[{"fileName":"/Applications/Utilities/repos/LLM-Helm-Fix/templates/helm-snowplow_template.yaml","ruleResults":[{"identifier":"CONTAINERS_INCORRECT_KEY_HOSTPORT","name":"Prevent containers from insecurely exposing workload","messageOnFailure":"Incorrect key `hostPort` - refrain from using this key to prevent insecurely exposing your workload","occurrencesDetails":[{"metadataName":"release-name-postgres","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/initContainers","failedErrorLine":1005,"failedErrorColumn":22}]}]},{"identifier":"DEPLOYMENT_INCORRECT_REPLICAS_VALUE","name":"Ensure Deployment has more than one replica configured","messageOnFailure":"Incorrect value for key `replicas` - running 2 or more replicas will increase the availability of the service","occurrencesDetails":[{"metadataName":"akhq","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/replicas","failedErrorLine":639,"failedErrorColumn":13}]},{"metadataName":"collector-server","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/replicas","failedErrorLine":670,"failedErrorColumn":13}]},{"metadataName":"enrich-server","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/replicas","failedErrorLine":742,"failedErrorColumn":13}]},{"metadataName":"iglu-server","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/replicas","failedErrorLine":814,"failedErrorColumn":13}]},{"metadataName":"streamloader-server","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/replicas","failedErrorLine":864,"failedErrorColumn":13}]},{"metadataName":"streamloader-postgre-pgamin","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/replicas","failedErrorLine":924,"failedErrorColumn":13}]}]},{"identifier":"CONTAINERS_MISSING_MEMORY_REQUEST_KEY","name":"Ensure each container has a configured memory request","messageOnFailure":"Missing property object `requests.memory` - value should be within the accepted boundaries recommended by the organization","occurrencesDetails":[{"metadataName":"akhq","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":650,"failedErrorColumn":11}]},{"metadataName":"streamloader-postgre-pgamin","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":934,"failedErrorColumn":11}]},{"metadataName":"zookeeper","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":1132,"failedErrorColumn":11}]}]},{"identifier":"CONTAINERS_MISSING_MEMORY_LIMIT_KEY","name":"Ensure each container has a configured memory limit","messageOnFailure":"Missing property object `limits.memory` - value should be within the accepted boundaries recommended by the organization","occurrencesDetails":[{"metadataName":"akhq","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":650,"failedErrorColumn":11}]},{"metadataName":"streamloader-postgre-pgamin","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":934,"failedErrorColumn":11}]},{"metadataName":"zookeeper","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":1132,"failedErrorColumn":11}]}]},{"identifier":"CONTAINERS_INCORRECT_RUNASUSER_VALUE_LOWUID","name":"Prevent containers from accessing host files by using high UIDs","messageOnFailure":"Incorrect value for key `runAsUser` - value should be above 9999 to reduce the likelihood that the UID is already taken","occurrencesDetails":[{"metadataName":"release-name-postgres","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext/runAsUser","failedErrorLine":1011,"failedErrorColumn":24}]}]},{"identifier":"CONTAINERS_MISSING_IMAGE_VALUE_VERSION","name":"Ensure each container image has a pinned (tag) version","messageOnFailure":"Incorrect value for key `image` - specify an image version to avoid unpleasant \"version surprises\" in the future","occurrencesDetails":[{"metadataName":"akhq","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/image","failedErrorLine":651,"failedErrorColumn":18}]},{"metadataName":"streamloader-postgre-pgamin","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/image","failedErrorLine":935,"failedErrorColumn":18}]}]},{"identifier":"CONTAINERS_INCORRECT_READONLYROOTFILESYSTEM_VALUE","name":"Ensure each container has a read-only root filesystem","messageOnFailure":"Incorrect value for key `readOnlyRootFilesystem` - set to 'true' to protect filesystem from potential attacks","occurrencesDetails":[{"metadataName":"akhq","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":650,"failedErrorColumn":11}]},{"metadataName":"collector-server","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":693,"failedErrorColumn":11}]},{"metadataName":"enrich-server","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":753,"failedErrorColumn":11}]},{"metadataName":"iglu-server","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":829,"failedErrorColumn":11}]},{"metadataName":"streamloader-server","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":875,"failedErrorColumn":11}]},{"metadataName":"streamloader-postgre-pgamin","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":934,"failedErrorColumn":11}]},{"metadataName":"release-name-postgres","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":1011,"failedErrorColumn":13}]},{"metadataName":"zookeeper","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":1132,"failedErrorColumn":11}]}]},{"identifier":"WORKLOAD_INCORRECT_NAMESPACE_VALUE_DEFAULT","name":"Prevent workload from using the default namespace","messageOnFailure":"Incorrect value for key `namespace` - use an explicit namespace instead of the default one (`default`)","occurrencesDetails":[{"metadataName":"akhq","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":637,"failedErrorColumn":14}]},{"metadataName":"collector-server","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":668,"failedErrorColumn":14}]},{"metadataName":"enrich-server","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":740,"failedErrorColumn":14}]},{"metadataName":"iglu-server","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":812,"failedErrorColumn":14}]},{"metadataName":"streamloader-server","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":862,"failedErrorColumn":14}]},{"metadataName":"streamloader-postgre-pgamin","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":922,"failedErrorColumn":14}]},{"metadataName":"release-name-postgres","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":952,"failedErrorColumn":14}]},{"metadataName":"zookeeper","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":1119,"failedErrorColumn":14}]}]},{"identifier":"CONTAINERS_MISSING_READINESSPROBE_KEY","name":"Ensure each container has a configured readiness probe","messageOnFailure":"Missing property object `readinessProbe` - add a properly configured readinessProbe to notify kubelet your Pods are ready for traffic","occurrencesDetails":[{"metadataName":"akhq","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":650,"failedErrorColumn":11}]},{"metadataName":"collector-server","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":693,"failedErrorColumn":11}]},{"metadataName":"enrich-server","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":753,"failedErrorColumn":11}]},{"metadataName":"iglu-server","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":829,"failedErrorColumn":11}]},{"metadataName":"streamloader-server","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":875,"failedErrorColumn":11}]},{"metadataName":"streamloader-postgre-pgamin","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":934,"failedErrorColumn":11}]},{"metadataName":"zookeeper","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":1132,"failedErrorColumn":11}]}]},{"identifier":"CONTAINERS_MISSING_KEY_ALLOWPRIVILEGEESCALATION","name":"Prevent containers from escalating privileges","messageOnFailure":"Missing key `allowPrivilegeEscalation` - set to false to prevent attackers from exploiting escalated container privileges","occurrencesDetails":[{"metadataName":"akhq","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":650,"failedErrorColumn":11}]},{"metadataName":"collector-server","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":693,"failedErrorColumn":11}]},{"metadataName":"enrich-server","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":753,"failedErrorColumn":11}]},{"metadataName":"iglu-server","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":829,"failedErrorColumn":11}]},{"metadataName":"streamloader-server","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":875,"failedErrorColumn":11}]},{"metadataName":"streamloader-postgre-pgamin","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":934,"failedErrorColumn":11}]},{"metadataName":"release-name-postgres","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":1011,"failedErrorColumn":13}]},{"metadataName":"zookeeper","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":1132,"failedErrorColumn":11}]}]},{"identifier":"CONTAINERS_MISSING_LIVENESSPROBE_KEY","name":"Ensure each container has a configured liveness probe","messageOnFailure":"Missing property object `livenessProbe` - add a properly configured livenessProbe to catch possible deadlocks","occurrencesDetails":[{"metadataName":"akhq","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":650,"failedErrorColumn":11}]},{"metadataName":"collector-server","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":693,"failedErrorColumn":11}]},{"metadataName":"enrich-server","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":753,"failedErrorColumn":11}]},{"metadataName":"iglu-server","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":829,"failedErrorColumn":11}]},{"metadataName":"streamloader-server","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":875,"failedErrorColumn":11}]},{"metadataName":"streamloader-postgre-pgamin","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":934,"failedErrorColumn":11}]},{"metadataName":"zookeeper","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":1132,"failedErrorColumn":11}]}]}]}],"policySummary":{"policyName":"Starter","totalRulesInPolicy":34,"totalSkippedRules":0,"totalRulesFailed":11,"totalPassedCount":23},"evaluationSummary":{"configsCount":31,"filesCount":1,"passedYamlValidationCount":1,"k8sValidation":"1/1","passedPolicyValidationCount":0},"yamlValidationResults":null,"k8sValidationResults":null,"loginUrl":""}
