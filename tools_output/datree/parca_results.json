{"policyValidationResults":[{"fileName":"/Applications/Utilities/repos/LLM-Helm-Fix/templates/parca_template.yaml","ruleResults":[{"identifier":"CONTAINERS_INCORRECT_KEY_HOSTPORT","name":"Prevent containers from insecurely exposing workload","messageOnFailure":"Incorrect key `hostPort` - refrain from using this key to prevent insecurely exposing your workload","occurrencesDetails":[{"metadataName":"release-name-parca-agent","kind":"DaemonSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/ports/0","failedErrorLine":273,"failedErrorColumn":13}]}]},{"identifier":"CONTAINERS_INCORRECT_KEY_HOSTPATH","name":"Prevent containers from accessing underlying host","messageOnFailure":"Invalid key `hostPath` - refrain from using this mount to prevent an attack on the underlying host","occurrencesDetails":[{"metadataName":"release-name-parca","kind":"PodSecurityPolicy","skipMessage":"","occurrences":7,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/volumes/0","failedErrorLine":37,"failedErrorColumn":5},{"schemaPath":"/spec/volumes/1","failedErrorLine":38,"failedErrorColumn":5},{"schemaPath":"/spec/volumes/2","failedErrorLine":39,"failedErrorColumn":5},{"schemaPath":"/spec/volumes/3","failedErrorLine":40,"failedErrorColumn":5},{"schemaPath":"/spec/volumes/4","failedErrorLine":41,"failedErrorColumn":5},{"schemaPath":"/spec/volumes/5","failedErrorLine":42,"failedErrorColumn":5},{"schemaPath":"/spec/volumes/6","failedErrorLine":43,"failedErrorColumn":5}]},{"metadataName":"release-name-parca-agent","kind":"DaemonSet","skipMessage":"","occurrences":5,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/volumes/1","failedErrorLine":295,"failedErrorColumn":9},{"schemaPath":"/spec/template/spec/volumes/2","failedErrorLine":298,"failedErrorColumn":9},{"schemaPath":"/spec/template/spec/volumes/3","failedErrorLine":301,"failedErrorColumn":9},{"schemaPath":"/spec/template/spec/volumes/4","failedErrorLine":304,"failedErrorColumn":9},{"schemaPath":"/spec/template/spec/volumes/5","failedErrorLine":307,"failedErrorColumn":9}]}]},{"identifier":"CONTAINERS_MISSING_LIVENESSPROBE_KEY","name":"Ensure each container has a configured liveness probe","messageOnFailure":"Missing property object `livenessProbe` - add a properly configured livenessProbe to catch possible deadlocks","occurrencesDetails":[{"metadataName":"release-name-parca-agent","kind":"DaemonSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":251,"failedErrorColumn":11}]},{"metadataName":"release-name-parca-test-connection","kind":"Pod","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/containers/0","failedErrorLine":395,"failedErrorColumn":7},{"schemaPath":"/spec/containers/1","failedErrorLine":399,"failedErrorColumn":7}]}]},{"identifier":"CONTAINERS_MISSING_KEY_ALLOWPRIVILEGEESCALATION","name":"Prevent containers from escalating privileges","messageOnFailure":"Missing key `allowPrivilegeEscalation` - set to false to prevent attackers from exploiting escalated container privileges","occurrencesDetails":[{"metadataName":"release-name-parca-agent","kind":"DaemonSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":253,"failedErrorColumn":13}]},{"metadataName":"release-name-parca","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":344,"failedErrorColumn":13}]},{"metadataName":"release-name-parca-test-connection","kind":"Pod","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/containers/0","failedErrorLine":395,"failedErrorColumn":7},{"schemaPath":"/spec/containers/1","failedErrorLine":399,"failedErrorColumn":7}]}]},{"identifier":"CONTAINERS_INCORRECT_READONLYROOTFILESYSTEM_VALUE","name":"Ensure each container has a read-only root filesystem","messageOnFailure":"Incorrect value for key `readOnlyRootFilesystem` - set to 'true' to protect filesystem from potential attacks","occurrencesDetails":[{"metadataName":"release-name-parca","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":344,"failedErrorColumn":13}]},{"metadataName":"release-name-parca-test-connection","kind":"Pod","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/containers/0","failedErrorLine":395,"failedErrorColumn":7},{"schemaPath":"/spec/containers/1","failedErrorLine":399,"failedErrorColumn":7}]}]},{"identifier":"CONTAINERS_MISSING_IMAGE_VALUE_VERSION","name":"Ensure each container image has a pinned (tag) version","messageOnFailure":"Incorrect value for key `image` - specify an image version to avoid unpleasant \"version surprises\" in the future","occurrencesDetails":[{"metadataName":"release-name-parca-test-connection","kind":"Pod","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/containers/0/image","failedErrorLine":396,"failedErrorColumn":14},{"schemaPath":"/spec/containers/1/image","failedErrorLine":400,"failedErrorColumn":14}]}]},{"identifier":"CONTAINERS_MISSING_MEMORY_REQUEST_KEY","name":"Ensure each container has a configured memory request","messageOnFailure":"Missing property object `requests.memory` - value should be within the accepted boundaries recommended by the organization","occurrencesDetails":[{"metadataName":"release-name-parca-agent","kind":"DaemonSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":290,"failedErrorColumn":13}]},{"metadataName":"release-name-parca","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":374,"failedErrorColumn":13}]},{"metadataName":"release-name-parca-test-connection","kind":"Pod","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/containers/0","failedErrorLine":395,"failedErrorColumn":7},{"schemaPath":"/spec/containers/1","failedErrorLine":399,"failedErrorColumn":7}]}]},{"identifier":"CONTAINERS_MISSING_READINESSPROBE_KEY","name":"Ensure each container has a configured readiness probe","messageOnFailure":"Missing property object `readinessProbe` - add a properly configured readinessProbe to notify kubelet your Pods are ready for traffic","occurrencesDetails":[{"metadataName":"release-name-parca-agent","kind":"DaemonSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":251,"failedErrorColumn":11}]},{"metadataName":"release-name-parca-test-connection","kind":"Pod","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/containers/0","failedErrorLine":395,"failedErrorColumn":7},{"schemaPath":"/spec/containers/1","failedErrorLine":399,"failedErrorColumn":7}]}]},{"identifier":"CONTAINERS_MISSING_MEMORY_LIMIT_KEY","name":"Ensure each container has a configured memory limit","messageOnFailure":"Missing property object `limits.memory` - value should be within the accepted boundaries recommended by the organization","occurrencesDetails":[{"metadataName":"release-name-parca-agent","kind":"DaemonSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":290,"failedErrorColumn":13}]},{"metadataName":"release-name-parca","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":374,"failedErrorColumn":13}]},{"metadataName":"release-name-parca-test-connection","kind":"Pod","skipMessage":"","occurrences":2,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/containers/0","failedErrorLine":395,"failedErrorColumn":7},{"schemaPath":"/spec/containers/1","failedErrorLine":399,"failedErrorColumn":7}]}]}]}],"policySummary":{"policyName":"Starter","totalRulesInPolicy":34,"totalSkippedRules":0,"totalRulesFailed":9,"totalPassedCount":25},"evaluationSummary":{"configsCount":11,"filesCount":1,"passedYamlValidationCount":1,"k8sValidation":"1/1","passedPolicyValidationCount":0},"yamlValidationResults":null,"k8sValidationResults":null,"loginUrl":""}
