{"policyValidationResults":[{"fileName":"/Applications/Utilities/repos/LLM-Helm-Fix/templates/cortex_template.yaml","ruleResults":[{"identifier":"CONTAINERS_MISSING_MEMORY_REQUEST_KEY","name":"Ensure each container has a configured memory request","messageOnFailure":"Missing property object `requests.memory` - value should be within the accepted boundaries recommended by the organization","occurrencesDetails":[{"metadataName":"release-name-cortex-alertmanager","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":780,"failedErrorColumn":13}]},{"metadataName":"release-name-cortex-distributor","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":885,"failedErrorColumn":13}]},{"metadataName":"release-name-cortex-ingester","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":991,"failedErrorColumn":13}]},{"metadataName":"release-name-cortex-nginx","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":1094,"failedErrorColumn":13}]},{"metadataName":"release-name-cortex-querier","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":1188,"failedErrorColumn":13}]},{"metadataName":"release-name-cortex-query-frontend","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":1297,"failedErrorColumn":13}]},{"metadataName":"release-name-cortex-ruler","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":1410,"failedErrorColumn":13}]},{"metadataName":"release-name-cortex-compactor","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":1550,"failedErrorColumn":13}]},{"metadataName":"release-name-cortex-store-gateway","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":1675,"failedErrorColumn":13}]}]},{"identifier":"CONTAINERS_MISSING_MEMORY_LIMIT_KEY","name":"Ensure each container has a configured memory limit","messageOnFailure":"Missing property object `limits.memory` - value should be within the accepted boundaries recommended by the organization","occurrencesDetails":[{"metadataName":"release-name-cortex-alertmanager","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":780,"failedErrorColumn":13}]},{"metadataName":"release-name-cortex-distributor","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":885,"failedErrorColumn":13}]},{"metadataName":"release-name-cortex-ingester","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":991,"failedErrorColumn":13}]},{"metadataName":"release-name-cortex-nginx","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":1094,"failedErrorColumn":13}]},{"metadataName":"release-name-cortex-querier","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":1188,"failedErrorColumn":13}]},{"metadataName":"release-name-cortex-query-frontend","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":1297,"failedErrorColumn":13}]},{"metadataName":"release-name-cortex-ruler","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":1410,"failedErrorColumn":13}]},{"metadataName":"release-name-cortex-compactor","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":1550,"failedErrorColumn":13}]},{"metadataName":"release-name-cortex-store-gateway","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":1675,"failedErrorColumn":13}]}]},{"identifier":"CONTAINERS_MISSING_KEY_ALLOWPRIVILEGEESCALATION","name":"Prevent containers from escalating privileges","messageOnFailure":"Missing key `allowPrivilegeEscalation` - set to false to prevent attackers from exploiting escalated container privileges","occurrencesDetails":[{"metadataName":"release-name-cortex-alertmanager","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":782,"failedErrorColumn":13}]},{"metadataName":"release-name-cortex-distributor","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":887,"failedErrorColumn":13}]},{"metadataName":"release-name-cortex-ingester","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":993,"failedErrorColumn":13}]},{"metadataName":"release-name-cortex-nginx","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":1096,"failedErrorColumn":13}]},{"metadataName":"release-name-cortex-querier","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":1190,"failedErrorColumn":13}]},{"metadataName":"release-name-cortex-query-frontend","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":1299,"failedErrorColumn":13}]},{"metadataName":"release-name-cortex-ruler","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":1412,"failedErrorColumn":13}]},{"metadataName":"release-name-cortex-compactor","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":1552,"failedErrorColumn":13}]},{"metadataName":"release-name-cortex-store-gateway","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":1677,"failedErrorColumn":13}]}]},{"identifier":"WORKLOAD_INCORRECT_NAMESPACE_VALUE_DEFAULT","name":"Prevent workload from using the default namespace","messageOnFailure":"Incorrect value for key `namespace` - use an explicit namespace instead of the default one (`default`)","occurrencesDetails":[{"metadataName":"release-name-cortex-alertmanager","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":704,"failedErrorColumn":14}]},{"metadataName":"release-name-cortex-distributor","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":805,"failedErrorColumn":14}]},{"metadataName":"release-name-cortex-ingester","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":920,"failedErrorColumn":14}]},{"metadataName":"release-name-cortex-nginx","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":1032,"failedErrorColumn":14}]},{"metadataName":"release-name-cortex-querier","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":1114,"failedErrorColumn":14}]},{"metadataName":"release-name-cortex-query-frontend","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":1224,"failedErrorColumn":14}]},{"metadataName":"release-name-cortex-ruler","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":1330,"failedErrorColumn":14}]},{"metadataName":"release-name-cortex-compactor","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":1437,"failedErrorColumn":14}]},{"metadataName":"release-name-cortex-store-gateway","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":1559,"failedErrorColumn":14}]}]},{"identifier":"CONTAINERS_MISSING_LIVENESSPROBE_KEY","name":"Ensure each container has a configured liveness probe","messageOnFailure":"Missing property object `livenessProbe` - add a properly configured livenessProbe to catch possible deadlocks","occurrencesDetails":[{"metadataName":"release-name-cortex-ingester","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":962,"failedErrorColumn":11}]}]},{"identifier":"CONTAINERS_INCORRECT_READONLYROOTFILESYSTEM_VALUE","name":"Ensure each container has a read-only root filesystem","messageOnFailure":"Incorrect value for key `readOnlyRootFilesystem` - set to 'true' to protect filesystem from potential attacks","occurrencesDetails":[{"metadataName":"release-name-cortex-nginx","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem","failedErrorLine":1096,"failedErrorColumn":37}]}]},{"identifier":"DEPLOYMENT_INCORRECT_REPLICAS_VALUE","name":"Ensure Deployment has more than one replica configured","messageOnFailure":"Incorrect value for key `replicas` - running 2 or more replicas will increase the availability of the service","occurrencesDetails":[{"metadataName":"release-name-cortex-alertmanager","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/replicas","failedErrorLine":716,"failedErrorColumn":13}]},{"metadataName":"release-name-cortex-ruler","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/replicas","failedErrorLine":1342,"failedErrorColumn":13}]}]}]}],"policySummary":{"policyName":"Starter","totalRulesInPolicy":34,"totalSkippedRules":0,"totalRulesFailed":7,"totalPassedCount":27},"evaluationSummary":{"configsCount":33,"filesCount":1,"passedYamlValidationCount":1,"k8sValidation":"1/1","passedPolicyValidationCount":0},"yamlValidationResults":null,"k8sValidationResults":null,"loginUrl":""}
