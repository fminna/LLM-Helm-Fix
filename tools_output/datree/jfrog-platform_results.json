{"policyValidationResults":[{"fileName":"/Applications/Utilities/repos/LLM-Helm-Fix/templates/jfrog-platform_template.yaml","ruleResults":[{"identifier":"CONTAINERS_MISSING_MEMORY_LIMIT_KEY","name":"Ensure each container has a configured memory limit","messageOnFailure":"Missing property object `limits.memory` - value should be within the accepted boundaries recommended by the organization","occurrencesDetails":[{"metadataName":"release-name-artifactory-nginx","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":1006,"failedErrorColumn":11}]},{"metadataName":"release-name-artifactory","kind":"StatefulSet","skipMessage":"","occurrences":7,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":1273,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1/resources","failedErrorLine":1335,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/2/resources","failedErrorLine":1401,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/3/resources","failedErrorLine":1451,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/4/resources","failedErrorLine":1501,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/5/resources","failedErrorLine":1551,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/6","failedErrorLine":1575,"failedErrorColumn":9}]},{"metadataName":"release-name-postgresql","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":1795,"failedErrorColumn":13}]},{"metadataName":"release-name-rabbitmq","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources/limits","failedErrorLine":2051,"failedErrorColumn":21}]},{"metadataName":"release-name-xray","kind":"StatefulSet","skipMessage":"","occurrences":6,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":2240,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1/resources","failedErrorLine":2295,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/2/resources","failedErrorLine":2379,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/3/resources","failedErrorLine":2467,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/4/resources","failedErrorLine":2550,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/5/resources","failedErrorLine":2629,"failedErrorColumn":11}]}]},{"identifier":"CONTAINERS_INCORRECT_READONLYROOTFILESYSTEM_VALUE","name":"Ensure each container has a read-only root filesystem","messageOnFailure":"Incorrect value for key `readOnlyRootFilesystem` - set to 'true' to protect filesystem from potential attacks","occurrencesDetails":[{"metadataName":"release-name-artifactory-nginx","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext/readOnlyRootFilesystem","failedErrorLine":983,"failedErrorColumn":35}]},{"metadataName":"release-name-artifactory","kind":"StatefulSet","skipMessage":"","occurrences":7,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":1242,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1/securityContext","failedErrorLine":1313,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/2/securityContext","failedErrorLine":1363,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/3/securityContext","failedErrorLine":1429,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/4/securityContext","failedErrorLine":1479,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/5/securityContext","failedErrorLine":1529,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/6/securityContext","failedErrorLine":1579,"failedErrorColumn":11}]},{"metadataName":"release-name-postgresql","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":1799,"failedErrorColumn":13}]},{"metadataName":"release-name-rabbitmq","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":1945,"failedErrorColumn":13}]},{"metadataName":"release-name-xray","kind":"StatefulSet","skipMessage":"","occurrences":6,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":2220,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1/securityContext","failedErrorLine":2280,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/2/securityContext","failedErrorLine":2323,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/3/securityContext","failedErrorLine":2407,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/4/securityContext","failedErrorLine":2495,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/5/securityContext","failedErrorLine":2578,"failedErrorColumn":11}]},{"metadataName":"release-name-jfrog-platform-pre-upgrade-hook","kind":"Job","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":2844,"failedErrorColumn":13}]},{"metadataName":"release-name-jfrog-platform-pre-upgrade-check","kind":"Job","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":2890,"failedErrorColumn":11}]}]},{"identifier":"CONTAINERS_INCORRECT_RUNASUSER_VALUE_LOWUID","name":"Prevent containers from accessing host files by using high UIDs","messageOnFailure":"Incorrect value for key `runAsUser` - value should be above 9999 to reduce the likelihood that the UID is already taken","occurrencesDetails":[{"metadataName":"release-name-postgresql","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext/runAsUser","failedErrorLine":1799,"failedErrorColumn":24}]},{"metadataName":"release-name-rabbitmq","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext/runAsUser","failedErrorLine":1946,"failedErrorColumn":24}]},{"metadataName":"release-name-jfrog-platform-pre-upgrade-hook","kind":"Job","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext/runAsUser","failedErrorLine":2845,"failedErrorColumn":24}]}]},{"identifier":"WORKLOAD_INCORRECT_NAMESPACE_VALUE_DEFAULT","name":"Prevent workload from using the default namespace","messageOnFailure":"Incorrect value for key `namespace` - use an explicit namespace instead of the default one (`default`)","occurrencesDetails":[{"metadataName":"release-name-postgresql","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":1749,"failedErrorColumn":14}]},{"metadataName":"release-name-rabbitmq","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/metadata/namespace","failedErrorLine":1891,"failedErrorColumn":14}]}]},{"identifier":"CONTAINERS_INCORRECT_KEY_HOSTPORT","name":"Prevent containers from insecurely exposing workload","messageOnFailure":"Incorrect key `hostPort` - refrain from using this key to prevent insecurely exposing your workload","occurrencesDetails":[{"metadataName":"release-name-rabbitmq","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/initContainers","failedErrorLine":1939,"failedErrorColumn":22}]}]},{"identifier":"DEPLOYMENT_INCORRECT_REPLICAS_VALUE","name":"Ensure Deployment has more than one replica configured","messageOnFailure":"Incorrect value for key `replicas` - running 2 or more replicas will increase the availability of the service","occurrencesDetails":[{"metadataName":"release-name-artifactory-nginx","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/replicas","failedErrorLine":927,"failedErrorColumn":13}]}]},{"identifier":"CONTAINERS_MISSING_MEMORY_REQUEST_KEY","name":"Ensure each container has a configured memory request","messageOnFailure":"Missing property object `requests.memory` - value should be within the accepted boundaries recommended by the organization","occurrencesDetails":[{"metadataName":"release-name-artifactory-nginx","kind":"Deployment","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":1006,"failedErrorColumn":11}]},{"metadataName":"release-name-artifactory","kind":"StatefulSet","skipMessage":"","occurrences":7,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":1273,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1/resources","failedErrorLine":1335,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/2/resources","failedErrorLine":1401,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/3/resources","failedErrorLine":1451,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/4/resources","failedErrorLine":1501,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/5/resources","failedErrorLine":1551,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/6","failedErrorLine":1575,"failedErrorColumn":9}]},{"metadataName":"release-name-rabbitmq","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources/requests","failedErrorLine":2052,"failedErrorColumn":23}]},{"metadataName":"release-name-xray","kind":"StatefulSet","skipMessage":"","occurrences":6,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/resources","failedErrorLine":2240,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/1/resources","failedErrorLine":2295,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/2/resources","failedErrorLine":2379,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/3/resources","failedErrorLine":2467,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/4/resources","failedErrorLine":2550,"failedErrorColumn":11},{"schemaPath":"/spec/template/spec/containers/5/resources","failedErrorLine":2629,"failedErrorColumn":11}]}]},{"identifier":"CONTAINERS_MISSING_LIVENESSPROBE_KEY","name":"Ensure each container has a configured liveness probe","messageOnFailure":"Missing property object `livenessProbe` - add a properly configured livenessProbe to catch possible deadlocks","occurrencesDetails":[{"metadataName":"release-name-jfrog-platform-pre-upgrade-hook","kind":"Job","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":2833,"failedErrorColumn":11}]},{"metadataName":"release-name-jfrog-platform-pre-upgrade-check","kind":"Job","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":2890,"failedErrorColumn":11}]}]},{"identifier":"CONTAINERS_MISSING_KEY_ALLOWPRIVILEGEESCALATION","name":"Prevent containers from escalating privileges","messageOnFailure":"Missing key `allowPrivilegeEscalation` - set to false to prevent attackers from exploiting escalated container privileges","occurrencesDetails":[{"metadataName":"release-name-postgresql","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":1799,"failedErrorColumn":13}]},{"metadataName":"release-name-rabbitmq","kind":"StatefulSet","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":1945,"failedErrorColumn":13}]},{"metadataName":"release-name-jfrog-platform-pre-upgrade-hook","kind":"Job","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0/securityContext","failedErrorLine":2844,"failedErrorColumn":13}]},{"metadataName":"release-name-jfrog-platform-pre-upgrade-check","kind":"Job","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":2890,"failedErrorColumn":11}]}]},{"identifier":"CONTAINERS_MISSING_READINESSPROBE_KEY","name":"Ensure each container has a configured readiness probe","messageOnFailure":"Missing property object `readinessProbe` - add a properly configured readinessProbe to notify kubelet your Pods are ready for traffic","occurrencesDetails":[{"metadataName":"release-name-artifactory","kind":"StatefulSet","skipMessage":"","occurrences":6,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":1309,"failedErrorColumn":9},{"schemaPath":"/spec/template/spec/containers/2","failedErrorLine":1359,"failedErrorColumn":9},{"schemaPath":"/spec/template/spec/containers/3","failedErrorLine":1425,"failedErrorColumn":9},{"schemaPath":"/spec/template/spec/containers/4","failedErrorLine":1475,"failedErrorColumn":9},{"schemaPath":"/spec/template/spec/containers/5","failedErrorLine":1525,"failedErrorColumn":9},{"schemaPath":"/spec/template/spec/containers/6","failedErrorLine":1575,"failedErrorColumn":9}]},{"metadataName":"release-name-xray","kind":"StatefulSet","skipMessage":"","occurrences":5,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/1","failedErrorLine":2276,"failedErrorColumn":9},{"schemaPath":"/spec/template/spec/containers/2","failedErrorLine":2319,"failedErrorColumn":9},{"schemaPath":"/spec/template/spec/containers/3","failedErrorLine":2403,"failedErrorColumn":9},{"schemaPath":"/spec/template/spec/containers/4","failedErrorLine":2491,"failedErrorColumn":9},{"schemaPath":"/spec/template/spec/containers/5","failedErrorLine":2574,"failedErrorColumn":9}]},{"metadataName":"release-name-jfrog-platform-pre-upgrade-hook","kind":"Job","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":2833,"failedErrorColumn":11}]},{"metadataName":"release-name-jfrog-platform-pre-upgrade-check","kind":"Job","skipMessage":"","occurrences":1,"isSkipped":false,"failureLocations":[{"schemaPath":"/spec/template/spec/containers/0","failedErrorLine":2890,"failedErrorColumn":11}]}]}]}],"policySummary":{"policyName":"Starter","totalRulesInPolicy":34,"totalSkippedRules":0,"totalRulesFailed":10,"totalPassedCount":24},"evaluationSummary":{"configsCount":39,"filesCount":1,"passedYamlValidationCount":1,"k8sValidation":"1/1","passedPolicyValidationCount":0},"yamlValidationResults":null,"k8sValidationResults":null,"loginUrl":""}
