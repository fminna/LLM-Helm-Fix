---
# Source: cidr-allocator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-cidr-allocator
  labels:
    helm.sh/chart: cidr-allocator-1.0.2
    app.kubernetes.io/name: cidr-allocator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.4.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: cidr-allocator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cidr-allocator-role
  labels:
    helm.sh/chart: cidr-allocator-1.0.2
    app.kubernetes.io/name: cidr-allocator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.4.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.statcan.gc.ca
  resources:
  - nodecidrallocations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.statcan.gc.ca
  resources:
  - nodecidrallocations/finalizers
  verbs:
  - update
- apiGroups:
  - networking.statcan.gc.ca
  resources:
  - nodecidrallocations/status
  verbs:
  - get
  - patch
  - update
---
# Source: cidr-allocator/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    helm.sh/chart: cidr-allocator-1.0.2
    app.kubernetes.io/name: cidr-allocator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.4.2"
    app.kubernetes.io/managed-by: Helm
  name: release-name-cidr-allocator-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-cidr-allocator-role
subjects:
- kind: ServiceAccount
  name: release-name-cidr-allocator
  namespace: default
---
# Source: cidr-allocator/templates/role.yaml
# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-cidr-allocator-leader-election-role
  labels:
    helm.sh/chart: cidr-allocator-1.0.2
    app.kubernetes.io/name: cidr-allocator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.4.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: cidr-allocator/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    helm.sh/chart: cidr-allocator-1.0.2
    app.kubernetes.io/name: cidr-allocator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.4.2"
    app.kubernetes.io/managed-by: Helm
  name: release-name-cidr-allocator-leader-election-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-cidr-allocator-leader-election-role
subjects:
- kind: ServiceAccount
  name: release-name-cidr-allocator
  namespace: default
---
# Source: cidr-allocator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-cidr-allocator
  labels:
    helm.sh/chart: cidr-allocator-1.0.2
    app.kubernetes.io/name: cidr-allocator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.4.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: cidr-allocator
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cidr-allocator
        app.kubernetes.io/instance: release-name
    spec:
      hostNetwork: true
      serviceAccountName: release-name-cidr-allocator
      containers:
        - name: cidr-allocator
          securityContext:
            runAsNonRoot: true
          image: "statcan/cidr-allocator:v0.4.2"
          imagePullPolicy: IfNotPresent
          command:
            - /nodecidrallocator
          args:
          - --leader-elect
          - --metrics-bind-address
          - ":9003"
          env:
            - name: ENABLE_WEBHOOKS
              value: "false"
          resources:
            {}
      terminationGracePeriodSeconds: 10
      tolerations:
        - operator: Exists
