---
# Source: musig/templates/serviceaccount-test.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-musig-test
---
# Source: musig/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-musig
  labels:
    helm.sh/chart: musig-0.2.0
    app.kubernetes.io/name: musig
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29"
    app.kubernetes.io/managed-by: Helm
---
# Source: musig/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-musig-test
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log"]
  verbs: ["get", "list"]
---
# Source: musig/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-musig-test
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-musig-test
subjects:
- kind: ServiceAccount
  name: release-name-musig-test
---
# Source: musig/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-musig
  annotations:
  labels:
    helm.sh/chart: musig-0.2.0
    app.kubernetes.io/name: musig
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8001
      targetPort: 8001
      protocol: TCP
      name: libp2p
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: webapi
  selector:
    app.kubernetes.io/name: musig
    app.kubernetes.io/instance: release-name
---
# Source: musig/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-musig
  labels:
    helm.sh/chart: musig-0.2.0
    app.kubernetes.io/name: musig
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: musig
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: musig
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-musig
      securityContext:
        {}
      containers:
        - name: musig
          securityContext:
            {}
          image: "ghcr.io/chronicleprotocol/adria:0.29"
          args:
            - "run"
            - "-v"
            - "warning"
            - "--log.format"
            - "text"
          imagePullPolicy: Always
          ports:
            - name: libp2p
              containerPort: 8001
              protocol: TCP
            - name: webapi
              containerPort: 8080
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          env:
            - name: CFG_LIBP2P_LISTEN_ADDRS
              value: "/ip4/0.0.0.0/tcp/8001"
            - name: CFG_ITEM_SEPARATOR
              value:  ","            
          resources:
            {}
---
# Source: musig/templates/tests/test-logs.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-musig-test-logs"
  labels:
    helm.sh/chart: musig-0.2.0
    app.kubernetes.io/name: musig
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  serviceAccountName: release-name-musig-test
  containers:
    - name: test-musig-logs
      image: bitnami/kubectl:latest
      command:
        - /bin/sh
        - -c
        - |
          echo 'Running tests';
          kubectl logs --namespace default $(kubectl get pods --namespace default -l 'app.kubernetes.io/instance=release-name,app.kubernetes.io/name=musig' -o jsonpath='{.items[0].metadata.name}') | grep 'msg="Connected to a peer"'
  restartPolicy: Never
