---
# Source: logitech-media-server/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-logitech-media-server
  labels:
    app.kubernetes.io/name: logitech-media-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: logitech-media-server
spec:
  accessModes:
    - "ReadWriteMany"
  resources:
    requests:
      storage: "1Gi"
---
# Source: logitech-media-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-logitech-media-server
  labels:
    app.kubernetes.io/name: logitech-media-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: logitech-media-server
spec:
  clusterIP: ""
  ports:
    - name: http
      protocol: TCP
      port: 9000
      targetPort: http
    - name: control
      protocol: TCP
      port: 3483
      targetPort: control
    - name: discovery
      protocol: UDP
      port: 3483
      targetPort: discovery
  selector:
    app.kubernetes.io/name: logitech-media-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: logitech-media-server
  type: ClusterIP
---
# Source: logitech-media-server/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name:  release-name-logitech-media-server
  labels:
    app.kubernetes.io/name: logitech-media-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: logitech-media-server
spec:
  replicas: 
  serviceName: release-name-logitech-media-server
  selector:
    matchLabels:
      app.kubernetes.io/name: logitech-media-server
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/managed-by: Helm
      helm.sh/chart: logitech-media-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: logitech-media-server
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: logitech-media-server
    spec:
      initContainers:
        - name: init-config
          image: "doliana/logitech-media-server:2022_05_28-8.2.0"
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c", "mkdir -pv /config/playlists /config/config; chown -Rc 1000:1000 /config"]
          volumeMounts:
            - mountPath: /config
              name: config
      containers:
        - name: logitech-media-server
          image: "doliana/logitech-media-server:2022_05_28-8.2.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 9000
            - name: control
              containerPort: 3483
              protocol: TCP
            - name: discovery
              containerPort: 3483
              protocol: UDP
          volumeMounts:
            - mountPath: /srv/squeezebox
              name: config
              subPath: config
            - mountPath: /playlists
              name: config
              subPath: playlists
            - mountPath: /music
              name: music
              readOnly: true
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 90
            periodSeconds: 5
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 2
            periodSeconds: 2
            failureThreshold: 5
          resources:
            limits:
              cpu: "1"
              memory: 512Mi
            requests:
              cpu: "1"
              memory: 256Mi
      nodeSelector:
        {}
      affinity:
        {}
      tolerations:
        []
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: release-name-logitech-media-server
        - name: music
          emptyDir: {}
