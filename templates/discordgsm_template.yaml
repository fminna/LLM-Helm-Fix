---
# Source: discordgsm/templates/common.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: release-name-discordgsm-cnpg-main-urls
  namespace: default
  labels:
    app: "discordgsm-7.9.9"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "discordgsm"
    app.kubernetes.io/version: "2.17.0"
    helm-revision: "1"
    helm.sh/chart: "discordgsm-7.9.9"
    release: "release-name"
stringData:
  host: release-name-discordgsm-cnpg-main-rw
  jdbc: jdbc:postgresql://release-name-discordgsm-cnpg-main-rw:5432/discord_gsm
  nossl: postgresql://discord_gsm:PLACEHOLDERPASSWORD@release-name-discordgsm-cnpg-main-rw:5432/discord_gsm?sslmode=disable
  porthost: release-name-discordgsm-cnpg-main-rw:5432
  std: postgresql://discord_gsm:PLACEHOLDERPASSWORD@release-name-discordgsm-cnpg-main-rw:5432/discord_gsm
---
# Source: discordgsm/templates/common.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/basic-auth
metadata:
  name: release-name-discordgsm-cnpg-main-user
  namespace: default
  labels:
    app: "discordgsm-7.9.9"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "discordgsm"
    app.kubernetes.io/version: "2.17.0"
    helm-revision: "1"
    helm.sh/chart: "discordgsm-7.9.9"
    release: "release-name"
stringData:
  password: PLACEHOLDERPASSWORD
  username: discord_gsm
---
# Source: discordgsm/templates/common.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: release-name-discordgsm-gsm-secret
  namespace: default
  labels:
    app: "discordgsm-7.9.9"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "discordgsm"
    app.kubernetes.io/version: "2.17.0"
    helm-revision: "1"
    helm.sh/chart: "discordgsm-7.9.9"
    release: "release-name"
stringData:
  APP_ACTIVITY_TYPE: "3"
  APP_PRESENCE_ADVERTISE: "false"
  APP_TOKEN: ""
  COMMAND_QUERY_COOLDOWN: "5"
  COMMAND_QUERY_PUBLIC: "false"
  DATABASE_URL: postgresql://discord_gsm:PLACEHOLDERPASSWORD@release-name-discordgsm-cnpg-main-rw:5432/discord_gsm
  DB_CONNECTION: postgres
  POSTGRES_SSL_MODE: disable
  TASK_QUERY_SERVER: "60"
  WEB_API_ENABLE: "false"
---
# Source: discordgsm/templates/common.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-discordgsm-config
  namespace: default
  labels:
    app: "discordgsm-7.9.9"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "discordgsm"
    app.kubernetes.io/version: "2.17.0"
    helm-revision: "1"
    helm.sh/chart: "discordgsm-7.9.9"
    release: "release-name"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
---
# Source: discordgsm/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-discordgsm
  namespace: default
  labels:
    app: "discordgsm-7.9.9"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "discordgsm"
    app.kubernetes.io/version: "2.17.0"
    helm-revision: "1"
    helm.sh/chart: "discordgsm-7.9.9"
    release: "release-name"
    service.name: "main"
spec:
  type: ClusterIP
  publishNotReadyAddresses: false
  ports:
    - name: main
      port: 10230
      protocol: TCP
      targetPort: 10230
  selector:
    pod.name: main
    app.kubernetes.io/name: discordgsm
    app.kubernetes.io/instance: release-name
---
# Source: discordgsm/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-discordgsm
  namespace: default
  labels:
    app: "discordgsm-7.9.9"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "discordgsm"
    app.kubernetes.io/version: "2.17.0"
    helm-revision: "1"
    helm.sh/chart: "discordgsm-7.9.9"
    release: "release-name"
spec:  
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      pod.name: main
      app.kubernetes.io/name: discordgsm
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app: "discordgsm-7.9.9"
        app.kubernetes.io/instance: "release-name"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/name: "discordgsm"
        app.kubernetes.io/version: "2.17.0"
        helm-revision: "1"
        helm.sh/chart: "discordgsm-7.9.9"
        pod.lifecycle: "permanent"
        pod.name: "main"
        release: "release-name"
      annotations:
        checksum/cnpg: "9cc43b0df11f6d24a2cb7aabf011492afa1f928633c8a7cb0211fae4037edd1d"
        checksum/configmaps: "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a"
        checksum/mariadb: "09c85576cb45b1eecd1467732b11ea8fa3363b0105c465f02a6ad64991521d52"
        checksum/mongodb: "09c85576cb45b1eecd1467732b11ea8fa3363b0105c465f02a6ad64991521d52"
        checksum/persistence: "b6be0defe8248ab2e83a117090ace72e8eb82d9a6fa282276463b7ca4590cf89"
        checksum/redis: "013343a028cbb3f7e08f4ba7522702dd98e52632c688641074b0b1db3df29894"
        checksum/secrets: "5982fea79605f82ebcc8746132bc7be2f8db0f9c9ae18b9a55bd63b7c6185d7f"
        checksum/services: "700193640bc91d9a40aa7c150146fbebcf94e39ff2dcd710e3d239042fcf4714"
        checksum/solr: "29c14feeaddbf7762052db593898d274941f539cee681ddc613957587686f347"
    spec:
      serviceAccountName: default
      automountServiceAccountToken: false
      runtimeClassName: 
      hostNetwork: false
      hostPID: false
      hostIPC: false
      shareProcessNamespace: false
      enableServiceLinks: false
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/arch: amd64
      topologySpreadConstraints:
        - maxSkew: 1
          whenUnsatisfiable: ScheduleAnyway
          topologyKey: "kubernetes.io/hostname"
          labelSelector:
            matchLabels:      
              pod.name: main
              app.kubernetes.io/name: discordgsm
              app.kubernetes.io/instance: release-name
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      terminationGracePeriodSeconds: 60
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 568
        sysctls: []
      hostUsers: true
      containers:
        - name: release-name-discordgsm
          image: discordgsm/discord-game-server-monitor:2.17.0@sha256:9363802762aedc82aef8843dee025b5dc613eaa8013aac679c5d92b7ef1aeec0
          imagePullPolicy: IfNotPresent
          tty: false
          stdin: false
          command:
            - "/bin/sh"
            - "-c"
            - "gunicorn \\\n--bind 0.0.0.0:10230 \\\n--workers=2 \\\n--worker-class=gthread app:app \\\n--timeout 90 & \\\npython -u main.py\n"
          ports:
            - name: main
              containerPort: 10230
              protocol: TCP
              hostPort: null
          volumeMounts:
            - name: config
              mountPath: /app/data
              readOnly: false
            - name: devshm
              mountPath: /dev/shm
              readOnly: false
            - name: shared
              mountPath: /shared
              readOnly: false
            - name: tmp
              mountPath: /tmp
              readOnly: false
            - name: varlogs
              mountPath: /var/logs
              readOnly: false
            - name: varrun
              mountPath: /var/run
              readOnly: false
          livenessProbe:
            httpGet:
              port: 10230
              path: /
              scheme: HTTP
            initialDelaySeconds: 12
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
            periodSeconds: 15
          readinessProbe:
            httpGet:
              port: 10230
              path: /
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 4
            successThreshold: 2
            timeoutSeconds: 5
            periodSeconds: 12
          startupProbe:
            httpGet:
              port: 10230
              path: /
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 60
            successThreshold: 1
            timeoutSeconds: 3
            periodSeconds: 5
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits: 
              cpu: 4000m 
              memory: 8Gi
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
            runAsGroup: 0
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            privileged: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add:
                - CHOWN
                - SETUID
                - SETGID
                - FOWNER
                - DAC_OVERRIDE
              drop:
                - ALL
          envFrom:
            - secretRef:
                name: "release-name-discordgsm-gsm-secret"
          env:
            - name: "TZ"
              value: "UTC"
            - name: "UMASK"
              value: "0022"
            - name: "UMASK_SET"
              value: "0022"
            - name: "NVIDIA_VISIBLE_DEVICES"
              value: "void"
            - name: "PUID"
              value: "568"
            - name: "USER_ID"
              value: "568"
            - name: "UID"
              value: "568"
            - name: "PGID"
              value: "568"
            - name: "GROUP_ID"
              value: "568"
            - name: "GID"
              value: "568"
      initContainers:
        - name: release-name-discordgsm-system-cnpg-wait
          image: tccr.io/tccr/db-wait-postgres:v1.1.0@sha256:4e4e5b9f37a5d0c8d90d744de23d1857079095fbb55d2944ec91d83241f60376
          imagePullPolicy: IfNotPresent
          tty: false
          stdin: false
          command:
            - "/bin/sh"
            - "-c"
            - "/bin/sh <<'EOF'\necho \"Executing DB waits...\"\necho \"Testing Database availability on [CNPG RW]\"\nuntil\n  echo \"Testing database on url: [release-name-discordgsm-cnpg-main-rw]\"\n  pg_isready -U discord_gsm -d discord_gsm -h release-name-discordgsm-cnpg-main-rw\n  do sleep 5\ndone\necho \"Database available on url: [release-name-discordgsm-cnpg-main-rw]\"\necho \"Done executing DB waits...\"\nEOF"
          volumeMounts:
            - name: devshm
              mountPath: /dev/shm
              readOnly: false
            - name: shared
              mountPath: /shared
              readOnly: false
            - name: tmp
              mountPath: /tmp
              readOnly: false
            - name: varlogs
              mountPath: /var/logs
              readOnly: false
            - name: varrun
              mountPath: /var/run
              readOnly: false
          
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits: 
              cpu: 500m 
              memory: 512Mi
          securityContext:
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            privileged: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add: []
              drop:
                - ALL
          env:
            - name: "TZ"
              value: "UTC"
            - name: "UMASK"
              value: "0022"
            - name: "UMASK_SET"
              value: "0022"
            - name: "NVIDIA_VISIBLE_DEVICES"
              value: "void"
            - name: "S6_READ_ONLY_ROOT"
              value: "1"
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: release-name-discordgsm-config
        - name: devshm
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: shared
          emptyDir: {}
        - name: tmp
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: varlogs
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: varrun
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
---
# Source: discordgsm/templates/common.yaml
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: release-name-discordgsm-cnpg-main
  namespace: default
  labels:
    cnpg.io/reload: "on"
    app: "discordgsm-7.9.9"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "discordgsm"
    app.kubernetes.io/version: "2.17.0"
    helm-revision: "1"
    helm.sh/chart: "discordgsm-7.9.9"
    release: "release-name"
  annotations:
    cnpg.io/hibernation: "off"
    checksum/secrets: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
spec:
  imageName: ghcr.io/cloudnative-pg/postgresql:16.2
  enableSuperuserAccess: true
  primaryUpdateStrategy: unsupervised
  primaryUpdateMethod: switchover
  logLevel: info
  instances: 2
  nodeMaintenanceWindow:
    inProgress: false
    reusePVC: true
  resources:
    requests:
      cpu: 10m
      memory: 50Mi
    limits: 
      cpu: 4000m 
      memory: 8Gi
  storage:
    pvcTemplate:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Gi
  walStorage:
    pvcTemplate:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Gi
  monitoring:
    enablePodMonitor: true
    disableDefaultQueries: false
  bootstrap:
    initdb:
      secret:
        name: release-name-discordgsm-cnpg-main-user
      database: discord_gsm
      owner: discord_gsm
      dataChecksums: true
