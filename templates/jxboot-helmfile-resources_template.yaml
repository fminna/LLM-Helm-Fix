---
# Source: jxboot-helmfile-resources/charts/gcactivities/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-gcactivities
  labels:
    app: gcactivities
    chart: gcactivities-2.0.1143
    release: release-name
    heritage: Helm
  annotations:
---
# Source: jxboot-helmfile-resources/charts/gcpods/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-gcpods
  labels:
    app: gcpods
    chart: gcpods-2.0.1143
    release: release-name
    heritage: Helm
  annotations:
---
# Source: jxboot-helmfile-resources/templates/build-bot-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "tekton-bot"
secrets:
- name: tekton-container-registry-auth
- name: tekton-git
---
# Source: jxboot-helmfile-resources/templates/jx-basic-auth-htpasswd-secret.yaml
apiVersion: v1
data:
  auth: ""
kind: Secret
metadata:
  name: jx-basic-auth-htpasswd
type: Opaque
---
# Source: jxboot-helmfile-resources/templates/jx-basic-auth-user-password-secret.yaml
apiVersion: v1
data:
  password: ""
  username: ""
kind: Secret
metadata:
  name: jx-basic-auth-user-password
type: Opaque
---
# Source: jxboot-helmfile-resources/templates/local-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: jx-local-secrets
type: Opaque
data:
  secrets.yaml: "c2VjcmV0czoKICBhZG1pblVzZXI6CiAgICBwYXNzd29yZDogIiIKICAgIHVzZXJuYW1lOiBhZG1pbgogIGNoYXJ0TXVzZXVtOgogICAgcGFzc3dvcmQ6ICIiCiAgICB1c2VybmFtZTogIiIKICBkb2NrZXJDb25maWc6ICd7fScKICBmZWF0dXJlRmxhZ0FQSUtleTogIiIKICBncGc6CiAgICBwdWJyaW5nOiAiIgogICAgc2VjamVua2luczogIiIKICAgIHNlY3Jpbmc6ICIiCiAgICB0cnVzdGRiOiAiIgogIGthbmlrb1NlY3JldDogIiIKICBtYXZlblNldHRpbmdzOiAiIgogIG5wbVRva2VuOiAiIgogIHBpcGVsaW5lVXNlcjoKICAgIGVtYWlsOiAiIgogICAgdG9rZW46ICIiCiAgICB1c2VybmFtZTogIiIKICB0ZWt0b25CdWNrZXQ6ICIi"
---
# Source: jxboot-helmfile-resources/templates/maven-settings-secret.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: jenkins-maven-settings
data:
  settings.xml: ""
---
# Source: jxboot-helmfile-resources/templates/release-gpg-secret.yaml
apiVersion: v1
data:
  pubring.gpg: ""
  sec-jenkins.gpg: ""
  secring.gpg: ""
  trustdb.gpg: ""
kind: Secret
metadata:
  name: jenkins-release-gpg
type: Opaque
---
# Source: jxboot-helmfile-resources/templates/tekton-container-registry-auth-secret.yaml
apiVersion: v1
data:
  .dockerconfigjson: "e30="
kind: Secret
metadata:
  name: tekton-container-registry-auth
  annotations:
    tekton.dev/docker-0: "https://index.docker.io/v1/"
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    secret.jenkins-x.io/replica-source: "true"
type: kubernetes.io/dockerconfigjson
---
# Source: jxboot-helmfile-resources/templates/tekton-git-secret.yaml
apiVersion: v1
data:
  password: "bXlwd2Q="
  username: "bXl1c2Vy"
kind: Secret
metadata:
  name: tekton-git
  annotations:
    tekton.dev/git-0: "https://github.com"
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
type: kubernetes.io/basic-auth
---
# Source: jxboot-helmfile-resources/templates/ingress-config-configmap.yaml
apiVersion: v1
data:
  domain: ""
  email: ""
  exposer: "Ingress"
  issuer: ""
  tls: "false"
kind: ConfigMap
metadata:
  name: ingress-config
---
# Source: jxboot-helmfile-resources/templates/jenkins-x-docker-registry.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: jenkins-x-docker-registry
  annotations:
    expose.config.fabric8.io/clusterip-port-if-empty-key: docker.registry
data:
  kaniko.flags: ""
  docker.registry: docker-registry
---
# Source: jxboot-helmfile-resources/templates/jenkins-x-extensions-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-extensions"
data:  
  knownRepositories: |
    repositories:
    - chart: {}
      github: jenkins-x/jenkins-x-extensions
  repository: |
    chart: {}
    github: jenkins-x/jenkins-x-extensions
---
# Source: jxboot-helmfile-resources/templates/kapp-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kapp-config
  labels:
    kapp.k14s.io/config: ""
data:
  config.yml: |
    apiVersion: kapp.k14s.io/v1alpha1
    kind: Config

    changeRuleBindings:
    - rules:
      - "upsert after upserting apps.jenkins-x.io/ingress-nginx"
      resourceMatchers:
      - apiVersionKindMatcher: {kind: Ingress, apiVersion: networking.k8s.io/v1beta1}

    - rules:
      - "delete before deleting apps.jenkins-x.io/pusher-wave"
      resourceMatchers:
      - andMatcher:
          matchers:
            - apiVersionKindMatcher: {kind: Deployment, apiVersion: apps/v1}
            - notMatcher:
                matcher:
                  hasAnnotationMatcher:
                    keyvalues:
                    - key: kapp.k14s.io/change-group
                      value: apps.jenkins-x.io/pusher-wave
---
# Source: jxboot-helmfile-resources/charts/gcactivities/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gcactivities-default
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - create
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - delete
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
---
# Source: jxboot-helmfile-resources/templates/build-bot-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "tekton-bot"
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - create
  - get
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - create
  - get
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
---
# Source: jxboot-helmfile-resources/templates/jenkins-x-aggregate-view.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jenkinsx-aggregate-view
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: jenkins-x
    rbac.authorization.k8s.io/aggregate-to-view: "true"
rules:
  - apiGroups:
      - jenkins.io
      - comcast.github.io
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
# Source: jxboot-helmfile-resources/charts/gcactivities/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gcactivities-default
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gcactivities-default
subjects:
- kind: ServiceAccount
  name: release-name-gcactivities
  namespace: default
---
# Source: jxboot-helmfile-resources/templates/build-bot-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name:  "tekton-bot-default"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name:  "tekton-bot"
  namespace: default
---
# Source: jxboot-helmfile-resources/charts/gcactivities/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gcactivities
rules:
- apiGroups:
  - jenkins.io
  resources:
  - pipelineactivities
  verbs:
  - list
  - delete
- apiGroups:
  - jenkins.io
  resources:
  - environments
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - jenkins.io
  resources:
  - plugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  - services
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
- apiGroups:
  - tekton.dev
  resources:
  - pipelineruns
  verbs:
  - get
  - list
  - watch
  - delete
---
# Source: jxboot-helmfile-resources/charts/gcpods/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gcpods
rules:
- apiGroups:
  - jenkins.io
  resources:
  - environments
  - plugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - delete
  - list
---
# Source: jxboot-helmfile-resources/templates/build-bot-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: "tekton-bot"
rules:
- apiGroups:
  - "*"
  resources:
  - "*"
  verbs:
  - "*"
---
# Source: jxboot-helmfile-resources/templates/committer-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: committer
  labels:
    jenkins.io/kind: "EnvironmentRole"
  annotations:
    title: "Committer"
    description: "A committer can write to project resources but cannot add/remove users"
rules:
  - apiGroups:
    - ""
    - jenkins.io
    - extensions
    - apps
    - apiextensions.k8s.io
    - rbac.authorization.k8s.io
    - batch
    - tekton.dev
    - flagger.app
    - config.istio.io
    - authentication.istio.io
    - security.istio.io
    - networking.istio.io
    - rbac.istio.io
    resources:
    - "*"
    - "pods/*"
    verbs:
    - list
    - get
    - watch
    - create
    - update
    - patch
    - delete
---
# Source: jxboot-helmfile-resources/templates/jx-pipeline-activity-reporter-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: jx-pipeline-activity-updater
rules:
- apiGroups:
    - jenkins.io
  resources:
    - '*'
  verbs:
    - '*'
---
# Source: jxboot-helmfile-resources/templates/jx-view-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: jx-view
rules:
- apiGroups:
  - jenkins.io
  resources:
  - teams
  verbs:
  - list
  - get
- apiGroups:
  - jenkins.io
  resources:
  - environments
  verbs:
  - list
  - get
- apiGroups:
  - prow.k8s.io
  resources:
  - prowjobs
  verbs:
  - create
---
# Source: jxboot-helmfile-resources/templates/owner-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: owner
  labels:
    jenkins.io/kind: "EnvironmentRole"
  annotations:
     title: "Team Owner"
     description: "A team owner can add/remove users and has write access to all team resources"
rules:
  - apiGroups:
    - ""
    - jenkins.io
    - extensions
    - apps
    - apiextensions.k8s.io
    - rbac.authorization.k8s.io
    - batch
    - tekton.dev
    - flagger.app
    - config.istio.io
    - authentication.istio.io
    - security.istio.io
    - networking.istio.io
    - rbac.istio.io
    resources:
    - "*"
    - "pods/*"
    verbs:
    - list
    - get
    - watch
    - create
    - update
    - patch
    - delete
---
# Source: jxboot-helmfile-resources/templates/viewer-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: viewer
  labels:
    jenkins.io/kind: "EnvironmentRole"
  annotations:
     title: "Viewer"
     description: "A viewer can view all project resources"
rules:
  - apiGroups:
    - ""
    - jenkins.io
    - extensions
    - apps
    - apiextensions.k8s.io
    - rbac.authorization.k8s.io
    - batch
    - tekton.dev
    - flagger.app
    - config.istio.io
    - authentication.istio.io
    - security.istio.io
    - networking.istio.io
    - rbac.istio.io
    resources:
    - "*"
    verbs:
    - list
    - get
    - watch
---
# Source: jxboot-helmfile-resources/charts/gcactivities/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gcactivities
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gcactivities
subjects:
- kind: ServiceAccount
  name: release-name-gcactivities
  namespace: default
---
# Source: jxboot-helmfile-resources/charts/gcpods/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gcpods
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gcpods
subjects:
- kind: ServiceAccount
  name: release-name-gcpods
  namespace: default
---
# Source: jxboot-helmfile-resources/templates/build-bot-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name:  "tekton-bot"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name:  "tekton-bot"
subjects:
- kind: ServiceAccount
  name:  "tekton-bot"
  namespace: default
---
# Source: jxboot-helmfile-resources/charts/gcactivities/templates/cronjob.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: release-name-gcactivities
  labels:
    app: gcactivities
    chart: gcactivities-2.0.1143
    release: release-name
    heritage: Helm
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 3
  schedule: "0/30 */3 * * *"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: gcactivities
            release: release-name
        spec:
          restartPolicy: Never
          serviceAccountName: release-name-gcactivities
          containers:
            - name: gcactivities
              command: [jx]
              args:
              - gc
              - activities
              - --batch-mode
              imagePullPolicy: IfNotPresent
              image: "gcr.io/jenkinsxio-labs/jxl:0.0.127"
              env:
              - name: JX_LOG_FORMAT
                value: json
              - name: JX_LOG_LEVEL
                value: info
              - name: PIPELINE_KIND
                value: dummy
              resources:
                {}
---
# Source: jxboot-helmfile-resources/charts/gcpods/templates/cronjob.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: release-name-gcpods
  labels:
    app: gcpods
    chart: gcpods-2.0.1143
    release: release-name
    heritage: Helm
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 3
  schedule: "0/30 */3 * * *"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: gcpods
            release: release-name
        spec:
          restartPolicy: Never
          serviceAccountName: release-name-gcpods
          containers:
            - name: gcpods
              command: [jx]
              args:
              - gc
              - pods
              - --batch-mode
              imagePullPolicy: IfNotPresent
              image: "gcr.io/jenkinsxio-labs/jxl:0.0.127"
              env:
              - name: JX_LOG_FORMAT
                value: json
              - name: JX_LOG_LEVEL
                value: info
              - name: PIPELINE_KIND
                value: dummy
              resources:
                {}
---
# Source: jxboot-helmfile-resources/templates/700-chartmuseum-ing.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  name: chartmuseum
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: jenkins-x-chartmuseum
          servicePort: 8080
---
# Source: jxboot-helmfile-resources/templates/700-hook-ing.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  name: hook
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: hook
          servicePort: 80
        path: "/hook"
---
# Source: jxboot-helmfile-resources/templates/700-nexus-ing.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  name: nexus
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: nexus
          servicePort: 80
---
# Source: jxboot-helmfile-resources/templates/environments.yaml
apiVersion: jenkins.io/v1
kind: Environment
metadata:
  labels:
    env: "dev"
    team: jx
  name: "dev"
spec:
  source:
    ref: "master"
    url: https://github.com//environment-mycluster-dev.git
  kind: Development
  label: Development
  namespace: jx
  promotionStrategy: "Never"
  webHookEngine: "Lighthouse"
  teamSettings:
    appsRepository: http://chartmuseum.jenkins-x.io
    buildPackRef: "master"
    buildPackUrl: "https://github.com/jenkins-x/jxr-packs-kubernetes.git"
    defaultScheduler:
      apiVersion: jenkins.io/v1
      kind: Scheduler
      name: jx-meta-pipeline
    dockerRegistryOrg: ""
    envOrganisation: 
    gitServer: https://github.com
    helmTemplate: true
    kubeProvider: "kubernetes"
    pipelineUsername: "jenkins-x-labs-bot"
    pipelineUserEmail: "jenkins-x@googlegroups.com"
    prowConfig: Scheduler
    importMode: YAML
    promotionEngine: Prow
    prowEngine: Tekton
    versionStreamUrl: "https://github.com/jenkins-x/jenkins-x-versions.git"
    versionStreamRef: "master"
    useGitOps: true
---
# Source: jxboot-helmfile-resources/charts/gcactivities/templates/release.yaml
apiVersion: jenkins.io/v1
kind: Release
metadata:
  creationTimestamp: "2020-01-22T19:35:41Z"
  deletionTimestamp: null
  name: 'gcactivities-2.0.1143'
spec:
  commits:
  - author: {}
    branch: master
    committer: {}
    message: |
      fix: go doc

      Signed-off-by: Neha Gupta <gneha21@yahoo.in>
    sha: a74467a488ad6a14a3d1024930c95d5b473c9c07
  - author: {}
    branch: master
    committer: {}
    message: |
      fix: Removed content copying

      Signed-off-by: Neha Gupta <gneha21@yahoo.in>
    sha: 4bbf64a6a8d958a2ff21d3bd0afcaa2446abe739
  - author: {}
    branch: master
    committer: {}
    message: |
      fix: cmd_helper

      Signed-off-by: Neha Gupta <gneha21@yahoo.in>
    sha: ca4e4cc1f552d1e0d9f2836f60b9a910eafe7a30
  - author: {}
    branch: master
    committer: {}
    message: |
      fix: cmd_test_helpers - CreateTestJxHomeDir() returns empty string if gitAuth.yaml is not present.

      Signed-off-by: jx-helloworld <gneha21@yahoo.in>
    sha: 0771ba7fe095b115d463e0b2a616408da59bd42c
  gitCloneUrl: https://github.com/jenkins-x/jx.git
  gitHttpUrl: https://github.com/jenkins-x/jx
  gitOwner: jenkins-x
  gitRepository: jx
  name: 'gcactivities'
  version: 2.0.1143
status: {}
---
# Source: jxboot-helmfile-resources/charts/gcpods/templates/release.yaml
apiVersion: jenkins.io/v1
kind: Release
metadata:
  creationTimestamp: "2020-01-22T19:35:41Z"
  deletionTimestamp: null
  name: 'gcpods-2.0.1143'
spec:
  commits:
  - author: {}
    branch: master
    committer: {}
    message: |
      fix: go doc

      Signed-off-by: Neha Gupta <gneha21@yahoo.in>
    sha: a74467a488ad6a14a3d1024930c95d5b473c9c07
  - author: {}
    branch: master
    committer: {}
    message: |
      fix: Removed content copying

      Signed-off-by: Neha Gupta <gneha21@yahoo.in>
    sha: 4bbf64a6a8d958a2ff21d3bd0afcaa2446abe739
  - author: {}
    branch: master
    committer: {}
    message: |
      fix: cmd_helper

      Signed-off-by: Neha Gupta <gneha21@yahoo.in>
    sha: ca4e4cc1f552d1e0d9f2836f60b9a910eafe7a30
  - author: {}
    branch: master
    committer: {}
    message: |
      fix: cmd_test_helpers - CreateTestJxHomeDir() returns empty string if gitAuth.yaml is not present.

      Signed-off-by: jx-helloworld <gneha21@yahoo.in>
    sha: 0771ba7fe095b115d463e0b2a616408da59bd42c
  gitCloneUrl: https://github.com/jenkins-x/jx.git
  gitHttpUrl: https://github.com/jenkins-x/jx
  gitOwner: jenkins-x
  gitRepository: jx
  name: 'gcpods'
  version: 2.0.1143
status: {}
---
# Source: jxboot-helmfile-resources/templates/repositories.yaml
apiVersion: jenkins.io/v1
kind: SourceRepository
metadata:
  name: "dev"
  labels:
    jenkins.io/gitSync: "false"
spec:
  description: "the git repository for the Dev environment"
  provider: "https://github.com"
  providerKind: 'github'
  providerName: 'github'
  org: ""
  repo: "environment-mycluster-dev"
  httpCloneURL: "https://github.com//environment-mycluster-dev.git"
  url: "https://github.com//environment-mycluster-dev.git"
  scheduler:
    kind: Scheduler
    name: "in-repo"
