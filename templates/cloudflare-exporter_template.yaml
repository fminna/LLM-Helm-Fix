---
# Source: cloudflare-exporter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-cloudflare-exporter
  labels:
    helm.sh/chart: cloudflare-exporter-0.2.0
    app.kubernetes.io/name: cloudflare-exporter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.9"
    app.kubernetes.io/managed-by: Helm
  annotations:
    prometheus.io/scrape: "true"
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: cloudflare-exporter
    app.kubernetes.io/instance: release-name
---
# Source: cloudflare-exporter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-cloudflare-exporter
  labels:
    helm.sh/chart: cloudflare-exporter-0.2.0
    app.kubernetes.io/name: cloudflare-exporter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.9"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cloudflare-exporter
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: cloudflare-exporter-0.2.0
        app.kubernetes.io/name: cloudflare-exporter
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "0.0.9"
        app.kubernetes.io/managed-by: Helm
    spec:
      securityContext:
        {}
      serviceAccountName: default
      containers:
        - name: cloudflare-exporter
          securityContext:
            {}
          image: "ghcr.io/lablabs/cloudflare_exporter:0.0.9"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            {}
          env:
            []
