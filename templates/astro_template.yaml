---
# Source: astro/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-astro
  labels:
    app.kubernetes.io/name: astro
    helm.sh/chart: astro-1.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
# Source: astro/templates/secret.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: release-name-astro
  labels:
    app.kubernetes.io/name: astro
    helm.sh/chart: astro-1.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  DD_API_KEY: 
  DD_APP_KEY:
---
# Source: astro/templates/configmap.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: release-name-astro
  labels:
    app.kubernetes.io/name: astro
    helm.sh/chart: astro-1.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  OWNER: astro
  DRY_RUN: "false"
  DEFINITIONS_PATH: conf.yml
---
# Source: astro/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: release-name-astro
  labels:
    app.kubernetes.io/name: astro
    helm.sh/chart: astro-1.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - "" # core
    resources:
      - namespaces
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - apps
    resources:
      - deployments
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - list
      - watch
      - delete
      - update
      - patch
---
# Source: astro/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: release-name-astro
  labels:
    app.kubernetes.io/name: astro
    helm.sh/chart: astro-1.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-astro
subjects:
  - kind: ServiceAccount
    name: release-name-astro
    namespace: "default"
---
# Source: astro/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-astro
  labels:
    app.kubernetes.io/name: astro
    helm.sh/chart: astro-1.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: astro
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: astro
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-astro
      containers:
        - name: astro
          image: "quay.io/fairwinds/astro:v1.5.2"
          imagePullPolicy: IfNotPresent
          command:
            - ./astro
            - --namespace=default
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          envFrom:
          - configMapRef:
              name: release-name-astro
          - secretRef:
              name: release-name-astro
