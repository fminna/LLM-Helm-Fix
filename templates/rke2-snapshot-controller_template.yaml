---
# Source: rke2-snapshot-controller/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-rke2-snapshot-controller
  labels:
    helm.sh/chart: rke2-snapshot-controller-1.7.202
    app.kubernetes.io/name: rke2-snapshot-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v6.2.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: rke2-snapshot-controller/templates/serviceaccount.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-rke2-snapshot-controller
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["create", "get", "list", "watch", "update", "patch", "delete"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents/status"]
    verbs: ["patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots/status"]
    verbs: ["update", "patch"]
---
# Source: rke2-snapshot-controller/templates/serviceaccount.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-rke2-snapshot-controller
subjects:
  - kind: ServiceAccount
    name: release-name-rke2-snapshot-controller
    namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-rke2-snapshot-controller
  apiGroup: rbac.authorization.k8s.io
---
# Source: rke2-snapshot-controller/templates/serviceaccount.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-rke2-snapshot-controller
rules:
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]
---
# Source: rke2-snapshot-controller/templates/serviceaccount.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-rke2-snapshot-controller
subjects:
  - kind: ServiceAccount
    name: release-name-rke2-snapshot-controller
roleRef:
  kind: Role
  name: release-name-rke2-snapshot-controller
  apiGroup: rbac.authorization.k8s.io
---
# Source: rke2-snapshot-controller/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-rke2-snapshot-controller
  labels:
    helm.sh/chart: rke2-snapshot-controller-1.7.202
    app.kubernetes.io/name: rke2-snapshot-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v6.2.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: rke2-snapshot-controller
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rke2-snapshot-controller
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-rke2-snapshot-controller
      securityContext:
        {}
      containers:
        - name: rke2-snapshot-controller
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          image: "rancher/mirrored-sig-storage-snapshot-controller:v6.2.1"
          imagePullPolicy: IfNotPresent
          args:
            - --http-endpoint=:8080
            - --leader-election=true
            - --leader-election-namespace=$(NAMESPACE)
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            {}
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoExecute
          key: node-role.kubernetes.io/etcd
          operator: Exists
---
# Source: rke2-snapshot-controller/templates/validate-install-crd.yaml
#
