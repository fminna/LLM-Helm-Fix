---
# Source: pet-battle-infra/templates/grafana.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: grafana-serviceaccount
  namespace: default
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
    argocd.argoproj.io/sync-options: Prune=false
---
# Source: pet-battle-infra/templates/grafana.yaml
apiVersion: v1
data:
  session_secret: UkNDWlhKZWVFbw==
kind: Secret
metadata:
  name: grafana-k8s-proxy
type: Opaque
---
# Source: pet-battle-infra/templates/infinispan.yaml
apiVersion: v1
data:
  INFINISPAN_USER: ZGV2ZWxvcGVy
  INFINISPAN_PASSWORD: cGFzc3dvcmQ=
kind: Secret
metadata:
  name: infinispan-auth
  labels:
    helm.sh/chart: pet-battle-infra-1.0.32
    app.kubernetes.io/part-of: petbattleworld
    app.kubernetes.io/name: pet-battle-infra
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
---
# Source: pet-battle-infra/templates/infinispan.yaml
apiVersion: v1
kind: Secret
metadata:
  name: infinispan-connect-secret
type: Opaque
stringData:
  identities.yaml: |-
    credentials:
    - username: developer
      password: password
    - username: operator
      password: password
---
# Source: pet-battle-infra/templates/infinispan.yaml
apiVersion: v1
stringData:
  username: developer
  password: password
kind: Secret
metadata:
  name: infinispan-metrics-basic-auth
type: Opaque
---
# Source: pet-battle-infra/templates/grafana.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    config.openshift.io/inject-trusted-cabundle: "true"
  name: ocp-injected-certs
---
# Source: pet-battle-infra/templates/grafana.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pb-grafana-proxy-release-name-default
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
# Source: pet-battle-infra/templates/grafana.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pb-grafana-proxy-release-name-default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  name: pb-grafana-proxy-release-name-default
  kind: ClusterRole
subjects:
  - kind: ServiceAccount
    name: grafana-serviceaccount
    namespace: default
---
# Source: pet-battle-infra/templates/grafana.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pb-grafana-application-monitoring-release-name-default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-monitoring-view
subjects:
- kind: ServiceAccount
  name: grafana-serviceaccount
  namespace: default
---
# Source: pet-battle-infra/templates/operatorgroup.yaml
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  name: pet-battle-tournament
spec:
  targetNamespaces:
    - default
---
# Source: pet-battle-infra/templates/infinispan.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    helm.sh/chart: pet-battle-infra-1.0.32
    app.kubernetes.io/part-of: petbattleworld
    app.kubernetes.io/name: pet-battle-infra
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  name: infinispan-monitoring
spec:
  endpoints:
    - targetPort: 11222
      path: /metrics
      honorLabels: true
      basicAuth:
        username:
          key: username
          name: infinispan-metrics-basic-auth
        password:
          key: password
          name: infinispan-metrics-basic-auth
      interval: 30s
      scrapeTimeout: 10s
      scheme: https
      tlsConfig:
        insecureSkipVerify: true
        serverName: infinispan
  selector:
    matchLabels:
      clusterName: infinispan
---
# Source: pet-battle-infra/templates/grafana-subscription.yaml
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: grafana-operator
spec:
  channel: alpha
  installPlanApproval: Automatic
  name: grafana-operator
  source: community-operators
  sourceNamespace: openshift-marketplace
#  startingCSV: grafana-operator.v3.9.0
---
# Source: pet-battle-infra/templates/infnispan-subscription.yaml
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: infinispan
spec:
  channel: 8.1.x
  installPlanApproval: Automatic
  name: datagrid
  source: redhat-operators
  sourceNamespace: openshift-marketplace
#  startingCSV: datagrid-operator.v8.1.5
---
# Source: pet-battle-infra/templates/keycloak-subscription.yaml
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: keycloak-operator
spec:
  channel: alpha
  installPlanApproval: Automatic
  name: keycloak-operator
  source: community-operators
  sourceNamespace: openshift-marketplace
  startingCSV: keycloak-operator.v15.0.2
---
# Source: pet-battle-infra/templates/delete-csv-hook-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: delete-csv-job
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded
---
# Source: pet-battle-infra/templates/insert-bearer-token-hook.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: patch-grafana-ds
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "50"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
---
# Source: pet-battle-infra/templates/crd-reader.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: crd-reader
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - 'customresourcedefinitions'
  verbs:
  - get
  - list
---
# Source: pet-battle-infra/templates/insert-bearer-token-hook.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: patch-grafana-ds-release-name-default
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "50"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
rules:
  - apiGroups:
      - integreatly.org
    resources:
      - grafanadatasources
    verbs:
      - get
      - list
      - patch
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
      - secrets
      - pods
    verbs:
      - get
      - list
      - watch
---
# Source: pet-battle-infra/templates/crd-reader.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: crd-reader-binding
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: crd-reader
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
# Source: pet-battle-infra/templates/insert-bearer-token-hook.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: patch-grafana-ds-release-name-default
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "50"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: patch-grafana-ds-release-name-default
subjects:
  - kind: ServiceAccount
    name: patch-grafana-ds
    namespace: default
---
# Source: pet-battle-infra/templates/delete-csv-hook-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: csv-deleter
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded
rules:
  - apiGroups:
      - "*"
    resources:
      - "*"
    verbs:
      - delete
      - list
---
# Source: pet-battle-infra/templates/delete-csv-hook-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: csv-deleters
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: csv-deleter
subjects:
  - kind: ServiceAccount
    name: delete-csv-job
---
# Source: pet-battle-infra/templates/token-reader.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: insert-bearer-token-view
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: grafanadatasources.integreatly.org-v1alpha1-view
subjects:
  - kind: ServiceAccount
    name: grafana-serviceaccount
    namespace: default
---
# Source: pet-battle-infra/templates/token-reader.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: insert-bearer-token-edit
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: grafanadatasources.integreatly.org-v1alpha1-edit
subjects:
  - kind: ServiceAccount
    name: grafana-serviceaccount
    namespace: default
---
# Source: pet-battle-infra/templates/wait-for-crd.yaml
apiVersion: v1
kind: Pod
metadata:
  name: cluster-check 
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  containers:
  - name: crd-check 
    image: quay.io/openshift/origin-cli:4.8
    imagePullPolicy: IfNotPresent
    command: ['sh', '-c', 'while [ true ]; do oc get crd keycloakrealms.keycloak.org grafanadashboards.integreatly.org infinispans.infinispan.org; if [ $? -eq 0 ]; then break; fi ; sleep 5s; done']
  restartPolicy: Never
  terminationGracePeriodSeconds: 0
  serviceAccount: default
  serviceAccountName: default
---
# Source: pet-battle-infra/templates/delete-all-hook.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: delete-all
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    spec:
      containers:
        - image: quay.io/openshift/origin-cli:latest
          command:
            - /bin/bash
            - -c
            - |
              set -x
              while [ 0 != $(oc get subscription grafana-operator infinispan keycloak-operator -o name 2>/dev/null | wc -l) ]; do
                sleep 2;
              done
              while [ 0 != $(oc get pods -o name | grep -e grafana -e keycloak -e infinispan 2>/dev/null | wc -l) ]; do
                oc delete pod cluster-check 2>/dev/null
                oc delete ClusterRole crd-reader 2>/dev/null
                oc delete ClusterRoleBinding crd-reader-binding 2>/dev/null
                oc delete infinispan infinispan 2>/dev/null
                oc delete keycloakclient pbclient pbserver 2>/dev/null
                oc delete keycloakrealm pbrealm 2>/dev/null
                oc delete keycloak pbkeycloak 2>/dev/null
                oc delete grafana pb-grafana 2>/dev/null
                oc delete job patch-grafana-ds 2>/dev/null
                oc delete sa patch-grafana-ds 2>/dev/null
                oc patch keycloakuser myuser pbadmin --type='json' -p='[{"op": "remove" , "path": "/metadata/finalizers" }]' 2>/dev/null
                oc patch keycloakclient pbclient --type='json' -p='[{"op": "remove" , "path": "/metadata/finalizers" }]' 2>/dev/null
                oc patch keycloakclient pbserver --type='json' -p='[{"op": "remove" , "path": "/metadata/finalizers" }]' 2>/dev/null
                oc patch keycloakrealm pbrealm --type='json' -p='[{"op": "remove" , "path": "/metadata/finalizers" }]' 2>/dev/null
                oc delete $(oc get csv -l 'olm.copiedFrom notin (openshift-operators)' -o name) 2>/dev/null 2>/dev/null
                sleep 2
              done
          imagePullPolicy: Always
          name: delete-all
      dnsPolicy: ClusterFirst
      restartPolicy: OnFailure
      serviceAccount: delete-csv-job
      serviceAccountName: delete-csv-job
      terminationGracePeriodSeconds: 10
---
# Source: pet-battle-infra/templates/insert-bearer-token-hook.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: patch-grafana-ds
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "100"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: 10
  activeDeadlineSeconds: 600
  template:
    spec:
      containers:
        - image: quay.io/openshift/origin-cli:latest
          command:
            - /bin/bash
            - -c
            - |
              set -x
              echo "waiting for grafana pod ready..."
              oc wait pod -lapp=grafana --for=condition=Ready --timeout=600s || exit $?
              echo "Patching grafana datasource with token for authentication to prometheus"
              TOKEN=`oc serviceaccounts get-token grafana-serviceaccount`
              oc patch grafanadatasource prometheus-grafanadatasource --type='json' -p='[{"op":"add","path":"/spec/datasources/0/secureJsonData/httpHeaderValue1","value":"Bearer '${TOKEN}'"}]'
              exit $?
          imagePullPolicy: Always
          name: patch-grafana-ds
      dnsPolicy: ClusterFirst
      restartPolicy: OnFailure
      serviceAccount: patch-grafana-ds
      serviceAccountName: patch-grafana-ds
      terminationGracePeriodSeconds: 30
---
# Source: pet-battle-infra/templates/grafana.yaml
apiVersion: integreatly.org/v1alpha1
kind: Grafana
metadata:
  name: pb-grafana
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "25"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  config:
    log:
      mode: "console"
      level: "warn"
    auth:
      disable_login_form: False
      dissable_signout_menu: True
    auth.basic:
      enabled: True
    auth.anonymous:
      enabled: True
  containers:
    - args:
        - '-provider=openshift'
        - '-pass-basic-auth=false'
        - '-https-address=:9091'
        - '-http-address='
        - '-email-domain=*'
        - '-upstream=http://localhost:3000'
        - '-openshift-sar={"resource": "namespaces", "verb": "get"}'
        - '-openshift-delegate-urls={"/": {"resource": "namespaces", "verb": "get"}}'
        - '-tls-cert=/etc/tls/private/tls.crt'
        - '-tls-key=/etc/tls/private/tls.key'
        - '-client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token'
        - '-cookie-secret-file=/etc/proxy/secrets/session_secret'
        - '-openshift-service-account=grafana-serviceaccount'
        - '-openshift-ca=/etc/pki/tls/cert.pem'
        - '-openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
        - '-openshift-ca=/etc/grafana-configmaps/ocp-injected-certs/ca-bundle.crt'
        - '-skip-auth-regex=^/metrics'
      image: 'quay.io/openshift/origin-oauth-proxy:4.2'
      name: grafana-proxy
      ports:
        - containerPort: 9091
          name: grafana-proxy
      resources: {}
      volumeMounts:
        - mountPath: /etc/tls/private
          name: secret-grafana-k8s-tls
          readOnly: false
        - mountPath: /etc/proxy/secrets
          name: secret-grafana-k8s-proxy
          readOnly: false
  secrets:
    - grafana-k8s-tls
    - grafana-k8s-proxy
  configMaps:
    - ocp-injected-certs
  service:
    ports:
      - name: grafana-proxy
        port: 9091
        protocol: TCP
        targetPort: grafana-proxy
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: grafana-k8s-tls
  ingress:
    enabled: True
    targetPort: grafana-proxy
    termination: reencrypt
  client:
    preferService: True
  serviceAccount:
    annotations:
      serviceaccounts.openshift.io/oauth-redirectreference.primary: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"grafana-route"}}'
  dashboardLabelSelector:
    - matchExpressions:
        - key: monitoring-key
          operator: In
          values:
            - grafana
            - middleware
---
# Source: pet-battle-infra/templates/grafanadashboard-pb-dashboard.yaml
apiVersion: integreatly.org/v1alpha1
kind: GrafanaDashboard
metadata:
  name: pb-dashboard
  generation: 1
  labels:
    monitoring-key: grafana
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "25"
    argocd.argoproj.io/compare-options: IgnoreExtraneous
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  customFolderName: petbattle
  json: |-
    {
      "annotations": {
        "list": [{
          "builtIn": 1,
          "datasource": "-- Grafana --",
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "type": "dashboard"
        }]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "id": 2,
      "links": [],
      "panels": [{
        "aliasColors": {},
        "bars": true,
        "dashLength": 10,
        "dashes": false,
        "datasource": null,
        "fieldConfig": {
          "defaults": {
            "custom": {
              "align": null
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [{
                "color": "green",
                "value": null
              },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "fill": 1,
        "fillGradient": 1,
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 0
        },
        "hiddenSeries": false,
        "id": 16,
        "legend": {
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "show": true,
          "total": false,
          "values": false
        },
        "lines": true,
        "linewidth": 1,
        "nullPointMode": "null",
        "percentage": false,
        "pluginVersion": "7.1.1",
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": [],
        "spaceLength": 10,
        "stack": true,
        "steppedLine": false,
        "targets": [{
          "expr": "avg by (area)(jvm_memory_used_bytes)",
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "",
          "refId": "A"
        }],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "JVM Memory",
        "tooltip": {
          "shared": true,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [{
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
        {
          "datasource": null,
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [{
                  "color": "green",
                  "value": null
                },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 3,
            "w": 11,
            "x": 12,
            "y": 0
          },
          "id": 12,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                  "mean"
              ],
              "fields": "",
              "values": false
            },
            "textMode": "auto"
          },
          "pluginVersion": "7.1.1",
          "targets": [{
            "expr": "sum by (method)(http_server_requests_seconds_count {outcome=\"CLIENT_ERROR\"})",
            "interval": "",
            "legendFormat": "",
            "refId": "A"
          }],
          "timeFrom": null,
          "timeShift": null,
          "title": "HTTP - Client Error(4 xx)",
          "type": "stat"
        },
        {
          "datasource": null,
          "fieldConfig": {
            "defaults": {
              "custom": {
                "align": null
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [{
                  "color": "green",
                  "value": null
                },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 3,
            "w": 11,
            "x": 12,
            "y": 3
          },
          "id": 10,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                  "mean"
              ],
              "fields": "",
              "values": false
            },
            "textMode": "auto"
          },
          "pluginVersion": "7.1.1",
          "targets": [{
            "expr": "sum by (method)(http_server_requests_seconds_count {outcome=\"SERVER_ERROR\"})",
            "instant": true,
            "interval": "",
            "legendFormat": "",
            "refId": "A"
          }],
          "timeFrom": null,
          "timeShift": null,
          "title": "HTTP - Server Error (5xx)",
          "type": "stat"
        },
        {
          "datasource": null,
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [{
                  "color": "green",
                  "value": null
                },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 3,
            "x": 12,
            "y": 6
          },
          "id": 6,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                  "mean"
              ],
              "fields": "",
              "values": false
            },
            "textMode": "auto"
          },
          "pluginVersion": "7.1.1",
          "targets": [{
            "expr": "avg (TournamentPetsAdded_total)",
            "instant": true,
            "interval": "",
            "legendFormat": "",
            "refId": "A"
          }],
          "timeFrom": null,
          "timeShift": null,
          "title": "Average Pets Added",
          "type": "stat"
        },
        {
          "datasource": null,
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [{
                  "color": "green",
                  "value": null
                },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 4,
            "x": 15,
            "y": 6
          },
          "id": 8,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                  "mean"
              ],
              "fields": "",
              "values": false
            },
            "textMode": "auto"
          },
          "pluginVersion": "7.1.1",
          "targets": [{
            "expr": "avg (TournamentCreated_total)",
            "instant": true,
            "interval": "",
            "legendFormat": "",
            "refId": "A"
          }],
          "timeFrom": null,
          "timeShift": null,
          "title": "Tournaments Created",
          "type": "stat"
        },
        {
          "datasource": "Prometheus",
          "fieldConfig": {
            "defaults": {
              "custom": {
                "align": null
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [{
                  "color": "green",
                  "value": null
                },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 4,
            "x": 19,
            "y": 6
          },
          "id": 2,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                  "mean"
              ],
              "fields": "",
              "values": false
            },
            "textMode": "auto"
          },
          "pluginVersion": "7.1.1",
          "targets": [{
            "expr": "avg (TournamentPetVote_total)",
            "format": "time_series",
            "instant": true,
            "interval": "",
            "legendFormat": "",
            "refId": "A"
          }],
          "timeFrom": null,
          "timeShift": null,
          "title": "Average Vote Count",
          "type": "stat"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": null,
          "fieldConfig": {
            "defaults": {
              "custom": {}
            },
            "overrides": []
          },
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 8
          },
          "hiddenSeries": false,
          "id": 14,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "nullPointMode": "null as zero ",
          "percentage": false,
          "pluginVersion": "7.1.1",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [{
            "expr": "avg by (uri)(http_server_requests_seconds_sum{status=\"200\"})",
            "interval": "",
            "intervalFactor": 1,
            "legendFormat": "",
            "refId": "A"
          }],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Average Request Time",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [{
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": null,
          "fieldConfig": {
            "defaults": {
              "custom": {}
            },
            "overrides": []
          },
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 12
          },
          "hiddenSeries": false,
          "id": 4,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "nullPointMode": "null",
          "percentage": false,
          "pluginVersion": "7.1.1",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [{
            "expr": "sum by (method)(method_timed_seconds_count)",
            "interval": "",
            "legendFormat": "",
            "refId": "A"
          }],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Method Counts",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [{
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        }
      ],
      "refresh": "1m",
      "schemaVersion": 26,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": []
      },
      "time": {
        "from": "now-24h",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
            "10s",
            "30s",
            "1m",
            "5m",
            "15m",
            "30m",
            "1h",
            "2h",
            "1d"
        ]
      },
      "timezone": "",
      "title": "PetBattleOverview",
      "uid": "Il5fvO-Gk",
      "version": 15
    }
  name: pb-dashboard.json
---
# Source: pet-battle-infra/templates/grafana.yaml
apiVersion: integreatly.org/v1alpha1
kind: GrafanaDataSource
metadata:
  name: prometheus-grafanadatasource
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "25"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/compare-options: IgnoreExtraneous
spec:
  datasources:
    - access: proxy
      editable: true
      isDefault: true
      jsonData:
        httpHeaderName1: 'Authorization'
        timeInterval: 5s
        tlsSkipVerify: true
      name: Prometheus
      secureJsonData:
        httpHeaderValue1: 'Bearer $(BEARER_TOKEN)'
      type: prometheus
      url: 'https://thanos-querier.openshift-monitoring.svc.cluster.local:9091'
  name: prometheus-grafanadatasource.yaml
---
# Source: pet-battle-infra/templates/infinispan.yaml
apiVersion: infinispan.org/v1
kind: Infinispan
metadata:
  name: infinispan
  labels:
    helm.sh/chart: pet-battle-infra-1.0.32
    app.kubernetes.io/part-of: petbattleworld
    app.kubernetes.io/name: pet-battle-infra
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "25"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  replicas: 1
  service:
    type: DataGrid
    sites:
      local:
        name: cloud
        expose:
          type: LoadBalancer
  security:
    endpointEncryption:
      type: Service
      certServiceName: service.beta.openshift.io 
      certSecretName: infinispan-cert-secret
    endpointSecretName: infinispan-connect-secret
---
# Source: pet-battle-infra/templates/keycloak.yaml
apiVersion: keycloak.org/v1alpha1
kind: Keycloak
metadata:
  name: pbkeycloak
  labels:
    app: pbkeycloak
    helm.sh/chart: pet-battle-infra-1.0.32
    app.kubernetes.io/part-of: petbattleworld
    app.kubernetes.io/name: pet-battle-infra
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "25"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  instances: 1
  externalAccess:
    enabled: true
---
# Source: pet-battle-infra/templates/keycloak.yaml
apiVersion: keycloak.org/v1alpha1
kind: KeycloakClient
metadata:
  name: pbserver
  labels:
    client: pbserver
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "25"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  realmSelector:
    matchLabels:
      realm: pbrealm
  client:
    name: pbserver
    clientId: pbserver
    secret: "25620f30-d15b-4e87-88f4-adee5715893d"
    bearerOnly: true
    protocol: openid-connect
    standardFlowEnabled: true
    serviceAccountsEnabled: true
    directAccessGrantsEnabled: true
    surrogateAuthRequired: false
    enabled: true
    clientAuthenticatorType: "client-secret"
    consentRequired: false
    implicitFlowEnabled: false
    authorizationServicesEnabled: false
    publicClient: false
    frontchannelLogout: false
    fullScopeAllowed: true
    nodeReRegistrationTimeout: -1
    defaultRoles:
      - "pbplayer"
      - "pbviewer"
      - "pbtest"
      - "pbadmin"
---
# Source: pet-battle-infra/templates/keycloak.yaml
apiVersion: keycloak.org/v1alpha1
kind: KeycloakClient
metadata:
  name: pbclient
  labels:
    client: pbclient
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "25"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  realmSelector:
    matchLabels:
      realm: pbrealm
  client:
    name: pbclient
    clientId: pbclient
    bearerOnly: false
    protocol: openid-connect
    publicClient: true
    ########################################################
    # These will need adjusting. The second url is used for testing. Web origins is open.
    redirectUris:
      - "https://pet-battle-default.example.com/*"
      - "http://localhost:4200/*"
    webOrigins:
      - "*"
    ########################################################
    standardFlowEnabled: true
    serviceAccountsEnabled: true
    directAccessGrantsEnabled: true
    surrogateAuthRequired: false
    enabled: true
    clientAuthenticatorType: "client-secret"
    consentRequired: false
    implicitFlowEnabled: false
    frontchannelLogout: false
    fullScopeAllowed: true
    nodeReRegistrationTimeout: -1
    defaultRoles:
      - "pbplayer"
      - "pbviewer"
      - "pbtest"
      - "pbadmin"
    defaultClientScopes:
      - "web-origins"
      - "profile"
      - "roles"
      - "email"
    optionalClientScopes:
      - "address"
      - "phone"
      - "offline_access"
      - "microprofile-jwt"
---
# Source: pet-battle-infra/templates/keycloak.yaml
apiVersion: keycloak.org/v1alpha1
kind: KeycloakRealm
metadata:
  name: pbrealm
  labels:
    realm: pbrealm
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "25"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  realm:
    id: "pbrealm"
    realm: "pbrealm"
    enabled: true
    displayName: "Pet Battle Single Sign On Realm"
    loginWithEmailAllowed: false
    registrationAllowed: true
    registrationEmailAsUsername: false
    rememberMe: true
    sslRequired: "external"
    users:
      - username: "pbadmin"
        firstName: "pbadmin"
        lastName: "pbadmin"
        email: "pbadmin@petbattle.com"
        enabled: true
        credentials:
        - type: "password"
          value: "password"
        realmRoles:
        - "pbtest"
        - "pbadmin"
        - "pbplayer"
        - "pbviewer"
        clientRoles:
          account:
            - "manage-account"
            - "view-profile"
          realm-management:
            - "manage-users"
            - "view-users"
            - "query-users"
            - "create-client"
      - username: "myuser"
        firstName: "John"
        lastName: "Doe"
        email: "myuser@petbattle.com"
        enabled: true
        credentials:
        - type: "password"
          value: "password"
        realmRoles:
        - "pbplayer"
        - "pbviewer"
  instanceSelector:
    matchLabels:
      app: pbkeycloak
