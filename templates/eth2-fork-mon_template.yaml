---
# Source: eth2-fork-mon/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-eth2-fork-mon
  labels:
    helm.sh/chart: eth2-fork-mon-0.1.2
    app.kubernetes.io/name: eth2-fork-mon
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  namespace: default
---
# Source: eth2-fork-mon/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-eth2-fork-mon-env
  labels:
    helm.sh/chart: eth2-fork-mon-0.1.2
    app.kubernetes.io/name: eth2-fork-mon
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: eth2-fork-mon/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-eth2-fork-mon
  labels:
    helm.sh/chart: eth2-fork-mon-0.1.2
    app.kubernetes.io/name: eth2-fork-mon
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    endpoints:
    - addr: http://beacon-node:4000
      eth1: ""
    eth2:
      genesis_time: 1606824023
      network: mainnet
      seconds_per_slot: 12
      slots_per_epoch: 32
    http_timeout_milliseconds: 0
---
# Source: eth2-fork-mon/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-eth2-fork-mon-headless
  labels:
    helm.sh/chart: eth2-fork-mon-0.1.2
    app.kubernetes.io/name: eth2-fork-mon
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: eth2-fork-mon
    app.kubernetes.io/instance: release-name
---
# Source: eth2-fork-mon/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-eth2-fork-mon
  labels:
    helm.sh/chart: eth2-fork-mon-0.1.2
    app.kubernetes.io/name: eth2-fork-mon
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: eth2-fork-mon
    app.kubernetes.io/instance: release-name
---
# Source: eth2-fork-mon/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-eth2-fork-mon
  labels:
    helm.sh/chart: eth2-fork-mon-0.1.2
    app.kubernetes.io/name: eth2-fork-mon
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: eth2-fork-mon
      app.kubernetes.io/instance: release-name
  serviceName: release-name-eth2-fork-mon-headless
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: eth2-fork-mon
        app.kubernetes.io/instance: release-name
      annotations:
        checksum/config: 5ff9c9b9d5ed3a83decc2d58e5232a5cf89438bb500d1f84d0c35bea7be7bb57
        checksum/secrets: 96c6f365e34fe6917d8df751c9d818555470d72dd0c87a736d22b5acf346879c
    spec:
      serviceAccountName: release-name-eth2-fork-mon
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      initContainers:
      containers:
        - name: eth2-fork-mon
          image: "ralexstokes/eth2-fork-mon:latest"
          imagePullPolicy: IfNotPresent
          securityContext:
            {}
          volumeMounts:
            - name: config
              mountPath: "/config.yaml"
              subPath: config.yaml
              readOnly: true
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 60
            periodSeconds: 120
            tcpSocket:
              port: http
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            tcpSocket:
              port: http
          resources:
            {}
          env:
      nodeSelector:
        {}
      affinity:
        {}
      tolerations:
        []
      topologySpreadConstraints:
        []
      terminationGracePeriodSeconds: 30
      volumes:
        - name: config
          configMap:
            name: release-name-eth2-fork-mon
---
# Source: eth2-fork-mon/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-eth2-fork-mon-test-connection"
  labels:
    helm.sh/chart: eth2-fork-mon-0.1.2
    app.kubernetes.io/name: eth2-fork-mon
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
       - --location
       - --request
       - GET
       - 'release-name-eth2-fork-mon:8080/'
  restartPolicy: Never
