---
# Source: k8s-aws-iam-controller/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-k8s-aws-iam-controller
  labels:
    helm.sh/chart: k8s-aws-iam-controller-0.1.7
    app.kubernetes.io/name: k8s-aws-iam-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.7"
    app.kubernetes.io/managed-by: Helm
  annotations:
    iam.aws.rustrial.org/trust-policy-statement: disable
    eks.amazonaws.com/role-arn: ""
---
# Source: k8s-aws-iam-controller/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    helm.sh/chart: k8s-aws-iam-controller-0.1.7
    app.kubernetes.io/name: k8s-aws-iam-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.7"
    app.kubernetes.io/managed-by: Helm
  name: "release-name-k8s-aws-iam-controller-watch"
kind: ClusterRole
rules:
- apiGroups: ["iam.aws.rustrial.org"]
  resources: ["trustpolicystatements", "trustpolicystatements/status"]
  verbs: ["list", "get", "watch", "create", "delete", "patch"]
- apiGroups: [""]
  resources: ["serviceaccounts"]
  verbs: ["list", "get", "watch", "create", "delete", "patch"]
---
# Source: k8s-aws-iam-controller/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    helm.sh/chart: k8s-aws-iam-controller-0.1.7
    app.kubernetes.io/name: k8s-aws-iam-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.7"
    app.kubernetes.io/managed-by: Helm
  name: "release-name-k8s-aws-iam-controller-storage"
kind: ClusterRole
rules:
- apiGroups: ["iam.aws.rustrial.org"]
  resources: ["roleusagepolicies", "roleusagepolicies/status"]
  verbs: ["list", "get", "watch", "create", "delete", "patch"]
---
# Source: k8s-aws-iam-controller/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    helm.sh/chart: k8s-aws-iam-controller-0.1.7
    app.kubernetes.io/name: k8s-aws-iam-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.7"
    app.kubernetes.io/managed-by: Helm
  name: "release-name-k8s-aws-iam-controller-watch"
kind: ClusterRoleBinding
subjects:
- kind: ServiceAccount
  name: release-name-k8s-aws-iam-controller
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "release-name-k8s-aws-iam-controller-watch"
---
# Source: k8s-aws-iam-controller/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    helm.sh/chart: k8s-aws-iam-controller-0.1.7
    app.kubernetes.io/name: k8s-aws-iam-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.7"
    app.kubernetes.io/managed-by: Helm
  name: "release-name-k8s-aws-iam-controller-storage"
kind: ClusterRoleBinding
subjects:
- kind: ServiceAccount
  name: release-name-k8s-aws-iam-controller
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "release-name-k8s-aws-iam-controller-storage"
---
# Source: k8s-aws-iam-controller/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-k8s-aws-iam-controller
  labels:
    helm.sh/chart: k8s-aws-iam-controller-0.1.7
    app.kubernetes.io/name: k8s-aws-iam-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.7"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: k8s-aws-iam-controller
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9000'
      labels:
        app.kubernetes.io/name: k8s-aws-iam-controller
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-k8s-aws-iam-controller
      securityContext:
        {}
      containers:
        - name: k8s-aws-iam-controller
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          image: "rustrial/k8s-aws-iam-controller:0.1.7"
          env:
            - name: RUST_LOG
              value: "info"
            - name: TRUST_POLICY_STATEMENT_GC_INTERVAL_SECONDS
              value: "3600"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 32Mi
            requests:
              cpu: 10m
              memory: 16Mi
