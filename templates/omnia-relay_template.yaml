---
# Source: omnia-relay/charts/spire/charts/tor-proxy/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: relay-tor-proxy
  labels:
    helm.sh/chart: tor-proxy-0.0.5
    app.kubernetes.io/name: tor-proxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.4.7.10"
    app.kubernetes.io/managed-by: Helm
---
# Source: omnia-relay/charts/spire/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: relay-spire
  labels:
    helm.sh/chart: spire-0.1.0
    app.kubernetes.io/name: spire
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.11.0-dev.5"
    app.kubernetes.io/managed-by: Helm
---
# Source: omnia-relay/templates/serviceaccount-test.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-omnia-relay-test
---
# Source: omnia-relay/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-omnia-relay
  labels:
    helm.sh/chart: omnia-relay-0.0.10
    app.kubernetes.io/name: omnia-relay
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: omnia-relay/charts/spire/templates/keystore-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: relay-spire-keystore
data:
  keystore.json: |-
    
  password.txt: ""
---
# Source: omnia-relay/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-omnia-relay-config
data:
  ### note this config is only suitable for eth goerli as per https://github.com/chronicleprotocol/omnia-relay/blob/master/omnia/config/relay-ethereum-goerli.json
  omnia.json: |-
    {
      "mode": "relay",
      "ethereum": {
        "from": "0xA23184c1Ac6F51c4b1b462c108E4652Dc9B4f5A6",
        "keystore": "/keystore/",
        "password": "/keystore/password.txt",
        "network": "https://eth-goerli.public.blastapi.io",
        "gasPrice": {
          "source": "node",
          "maxPriceMultiplier": 2,
          "tipMultiplier": 1,
          "priority": "fast"
        }
      },
      "options": {
        "debug": "true",
        "goferConfig": "",
        "interval": 60,
        "logFormat": "json",
        "msgLimit": 35,
        "setzerCacheExpiry": 120,
        "setzerMinMedian": 3,
        "setzerTimeout": 10,
        "spireConfig": "",
        "srcTimeout": 10,
        "verbose": true,
        "ethGas": 200000,
        "chainType": "ethereum"
      },
      "transports": ["spire"],
      
      "scuttlebotIdMap": {
        "0x130431b4560Cd1d74A990AE86C337a33171FF3c6": "@kqg/A1m9pdbGSylkUwnZJw7o7AtFBN8sFmXJ4xgwqcM=.ed25519",
        "0x16655369Eb59F3e1cAFBCfAC6D3Dd4001328f747": "@q4XL6KymSI1WHuR+ZBgjCSj6N+dO8vuZuGCgQZq67Gw=.ed25519",
        "0x3CB645a8f10Fb7B0721eaBaE958F77a878441Cb9": "@K5GMWYcMDFf7vJ14fU7GsydkeY5o3NQX0b+oui3DkEs=.ed25519",
        "0x4b0E327C08e23dD08cb87Ec994915a5375619aa2": "@E7B3opUWe14hpOsPgOzW8YzZv46uus0vVVZtcZ3TQBo=.ed25519",
        "0x4f95d9B4D842B2E2B1d1AC3f2Cf548B93Fd77c67": "@NmlE5G9XxgRfC8dxFY49t1iaB5O2i0VDLw7lhDWcmVo=.ed25519",
        "0x60da93D9903cb7d3eD450D4F81D402f7C4F71dd9": "@+MXygz7HXiDdjXsQDbEkIFD8MOcWr+0Cn1529iwEVCI=.ed25519",
        "0x71eCFF5261bAA115dcB1D9335c88678324b8A987": "@7y4tZnczYjjqXzMC32srHsCVMCaMs/mpkVgaDGdXOgM=.ed25519",
        "0x75ef8432566A79C86BBF207A47df3963B8Cf0753": "@1eJfb61Dwk4Q4alBdjJPireI6sdtz4UtuJZ6qolbfo0=.ed25519",
        "0x77EB6CF8d732fe4D92c427fCdd83142DB3B742f7": "@DY7va7XHwh7XTdA7x9Pnu0GS/O4beWsUQrVObikqclE=.ed25519",
        "0x83e23C207a67a9f9cB680ce84869B91473403e7d": "@OWP0AueLTTGXKT2VikDUPdmd8oqAeN85iF1Tt+nz52U=.ed25519",
        "0x8aFBD9c3D794eD8DF903b3468f4c4Ea85be953FB": "@amqs7YOREwqVSt+kVYcNNt6jHKrxFrIsSlUK1pTnqgo=.ed25519",
        "0x8de9c5F1AC1D4d02bbfC25fD178f5DAA4D5B26dC": "@RaGo37sm5OZtxr16An3n0Lg7QUTp7TYroH8Kfl1DHRo=.ed25519",
        "0x8ff6a38A1CD6a42cAac45F08eB0c802253f68dfD": "@8zMLDDmm3zsrFhkX6Rum3uWZ3DoWAb6cGAO2CYnEi7I=.ed25519",
        "0xA8EB82456ed9bAE55841529888cDE9152468635A": "@rgvhqaiHOxOCnnCFPFRv0REkcnQn8Xe9+AZs3sVL4+g=.ed25519",
        "0xC9508E9E3Ccf319F5333A5B8c825418ABeC688BA": "@N2Yz4d5vzO882cfA9Ze9oVIsIzV+N6eU6uTe61gMfGk=.ed25519",
        "0xD27Fa2361bC2CfB9A591fb289244C538E190684B": "@92ohB9a3bIScXuTRhzWqDiTUjk3CzEBpImSNilttIdQ=.ed25519",
        "0xDA1d2961Da837891f43235FddF66BAD26f41368b": "@aGtbCUrDyGt+EcH0ppaqaC+L9XDUzwcbM2O1aK9nT84=.ed25519",
        "0xE6367a7Da2b20ecB94A25Ef06F3b551baB2682e6": "@u9wofEvklVwnJdAmezxvLMwRp4xuSjahBzB0EL/Y8dg=.ed25519",
        "0xFbaF3a7eB4Ec2962bd1847687E56aAEE855F5D00": "@549y65IgZK/KzcRM6KqYJlEJrqZeX1+XGIrPUGlXHHA=.ed25519",
        "0xa580BBCB1Cee2BCec4De2Ea870D20a12A964819e": "@NkNJzUcy3dlO4V6QsyaQzs3eAbfd9jLKpOdIMyGHBcI=.ed25519",
        "0xaC8519b3495d8A3E3E44c041521cF7aC3f8F63B3": "@DhbPmnvAEqXOCSYga4tD2wYBQ9nMb0uYJm8HDAPg/no=.ed25519",
        "0xd72BA9402E9f3Ff01959D6c841DDD13615FFff42": "@4BW2SNFDeUeS5gVxk1QZRtoCpg5SSr+JKhx9/q6uAEw=.ed25519",
        "0xd94BBe83b4a68940839cD151478852d16B3eF891": "@sbW7YaJfV+Cgu1BNafSbJ4LMRkUMdRjJoOal+iBp8fo=.ed25519"
      },
      "pairs": {
        "BTC/USD": {
          "msgExpiration": 1800,
          "oracle": "0xe0F30cb149fAADC7247E953746Be9BbBB6B5751f",
          "oracleExpiration": 86400,
          "oracleSpread": 1
        },
        "ETH/USD": {
          "msgExpiration": 1800,
          "oracle": "0x64DE91F5A373Cd4c28de3600cB34C7C6cE410C85",
          "oracleExpiration": 86400,
          "oracleSpread": 1
        }
      }
    }
---
# Source: omnia-relay/templates/keystore-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-omnia-relay-keystore
data:
  keystore.json: |-
    {"address":"a23184c1ac6f51c4b1b462c108e4652dc9b4f5a6","id":"073dd01b-1b87-46b4-b52f-ca243bcf4b7b","version":3,"Crypto":{"cipher":"aes-128-ctr","cipherparams":{"iv":"8491d0eb057afca54a339c25163a6928"},"ciphertext":"006b10186ff3f4b9b1638ad176a83cd02eb8b6d687e651bad2e38fb91060e68d","kdf":"scrypt","kdfparams":{"salt":"1010801fe1140932f9a078010236292a481dc065b5bacb1aca8d7178d164340f","n":131072,"dklen":32,"p":1,"r":8},"mac":"d91389bec6bcded7d67fd587b8c08a1136612eda15de88bf881d61ad46827674"},"crypto":{"cipher":"aes-128-ctr","cipherparams":{"iv":"8491d0eb057afca54a339c25163a6928"},"ciphertext":"006b10186ff3f4b9b1638ad176a83cd02eb8b6d687e651bad2e38fb91060e68d","kdf":"scrypt","kdfparams":{"salt":"1010801fe1140932f9a078010236292a481dc065b5bacb1aca8d7178d164340f","n":131072,"dklen":32,"p":1,"r":8},"mac":"d91389bec6bcded7d67fd587b8c08a1136612eda15de88bf881d61ad46827674"}}
  password.txt: "ilikeapples"
---
# Source: omnia-relay/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-omnia-relay-test
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log"]
  verbs: ["get", "list"]
---
# Source: omnia-relay/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-omnia-relay-test
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-omnia-relay-test
subjects:
- kind: ServiceAccount
  name: release-name-omnia-relay-test
---
# Source: omnia-relay/charts/spire/charts/tor-proxy/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: relay-tor-proxy
  labels:
    helm.sh/chart: tor-proxy-0.0.5
    app.kubernetes.io/name: tor-proxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.4.7.10"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9050
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: tor-proxy
    app.kubernetes.io/instance: release-name
---
# Source: omnia-relay/charts/spire/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: relay-spire
  labels:
    helm.sh/chart: spire-0.1.0
    app.kubernetes.io/name: spire
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.11.0-dev.5"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: libp2p
    - port: 9100
      targetPort: 9100
      protocol: TCP
      name: rpc
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: webapi
  selector:
    app.kubernetes.io/name: spire
    app.kubernetes.io/instance: release-name
---
# Source: omnia-relay/charts/spire/charts/tor-proxy/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: relay-tor-proxy
  labels:
    helm.sh/chart: tor-proxy-0.0.5
    app.kubernetes.io/name: tor-proxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.4.7.10"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tor-proxy
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tor-proxy
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: relay-tor-proxy
      securityContext:
        {}
      containers:
        - name: tor-proxy
          securityContext:
            {}
          image: "btcpayserver/tor:0.4.7.10"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 9050
              protocol: TCP
          # livenessProbe:
          #   exec:
          #     command:
          #     - /bin/sh
          #     - -c
          #     - "echo authenticate '""' | nc 127.0.0.1 9050 && echo signal NEWNYM | nc 127.0.0.1 9050"
          #   initialDelaySeconds: 30
          #   periodSeconds: 10
          # readinessProbe:
          #   exec:
          #     command:
          #     - /bin/sh
          #     - -c
          #     - "echo authenticate '""' | nc 127.0.0.1 9050"
          resources:
            {}
          env:            
            - name: TOR_EXTRA_ARGS
              value: "AutomapHostsOnResolve 1\nControlSocketsGroupWritable 1\nCookieAuthentication 1\nCookieAuthFileGroupReadable 1\nDNSPort 5353\nExitPolicy reject *:*\nLog notice stderr\nRunAsDaemon 0\nControlSocket /home/tor/.tor/control_socket\nCookieAuthFile /home/tor/.tor/control_socket.authcookie\nDataDirectory /home/tor/.tor\nHiddenServiceDir /var/lib/tor/hidden_services\nHiddenServicePort 8888 relay-spire:8080\nHiddenServiceVersion\n"
          volumeMounts:
            - name: tor-hidden-services
              mountPath: /var/lib/tor/hidden_services
      volumes:
        - name: tor-hidden-services
          emptyDir: {}
---
# Source: omnia-relay/charts/spire/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: relay-spire
  labels:
    helm.sh/chart: spire-0.1.0
    app.kubernetes.io/name: spire
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.11.0-dev.5"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: spire
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/config: b88d2495b504eca4260d3c90d4e4db8a973edec8c295073f9eb755c91fd8ef41
      labels:
        app.kubernetes.io/name: spire
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: relay-spire
      securityContext:
        {}
      containers:
        - name: spire
          securityContext:
            {}
          image: "ghcr.io/chronicleprotocol/spire:0.11.0-dev.7"
          imagePullPolicy: IfNotPresent
          args: ["agent", "-v", "debug", "--log.format", "text"]
          ports:
            - name: libp2p
              containerPort: 8000
              protocol: TCP
            - name: rpc
              containerPort: 9100
              protocol: TCP
            - name: webapi
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            tcpSocket:
              port: libp2p
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            tcpSocket:
              port: rpc
          resources:
            {}
          env:            
            - name: CFG_FEEDS
              value: "prod"
            - name: CFG_LIBP2P_ENABLE
              value: "true"
            - name: CFG_WEBAPI_LISTEN_ADDR
              value: "0.0.0.0:8080"
            - name: CFG_WEBAPI_SOCKS5_PROXY_ADDR
              value: "relay-tor-proxy:9050"
          volumeMounts:
          - name: keystore
            mountPath: /keystore/
          - name: password
            mountPath: /password/
      volumes:
      - name: keystore
        configMap:
          name: relay-spire-keystore
          items:
          - key: keystore.json
            path: keystore.json
      - name: password
        configMap:
          name: relay-spire-keystore
          items:
          - key: password.txt
            path: password.txt
---
# Source: omnia-relay/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-omnia-relay
  labels:
    helm.sh/chart: omnia-relay-0.0.10
    app.kubernetes.io/name: omnia-relay
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: omnia-relay
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/config: 244261dc66da0736077a6f424707f9a1477dad5cdad9c9e5a05d9a8bf533dccd
      labels:
        app.kubernetes.io/name: omnia-relay
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-omnia-relay
      securityContext:
        fsGroup: 1000
      containers:
        - name: omnia-relay
          securityContext:
            runAsGroup: 1000
            runAsUser: 1000
          image: "ghcr.io/chronicleprotocol/omnia_relay:1.16.2"
          imagePullPolicy: Always
          
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          env:            
            - name: CFG_FEEDS
              value: "prod"
            - name: CFG_SPIRE_RPC_ADDR
              value: "relay-spire:9100"
            - name: ETH_CHAIN_TYPE
              value: "ethereum"
            - name: ETH_RPC_URL
              value: "https://eth-mainnet.public.blastapi.io"
            - name: OMNIA_CONFIG
              value: "/config/omnia/omnia.json"
            - name: OMNIA_LOG_FORMAT
              value: "text"
            - name: OMNIA_MODE
              value: "relay"
          resources:
            {}
          volumeMounts:
          - name: config
            mountPath: /config/omnia/
          - name: keystore
            mountPath: /keystore/keystore.json
            subPath: keystore.json
          - name: password
            mountPath: /keystore/password.txt
            subPath: password.txt
      volumes:
      - name: config
        configMap:
          name: release-name-omnia-relay-config
      - name: keystore
        configMap:
          name: release-name-omnia-relay-keystore
          items:
          - key: keystore.json
            path: keystore.json
      - name: password
        configMap:
          name: release-name-omnia-relay-keystore
          items:
          - key: password.txt
            path: password.txt
---
# Source: omnia-relay/charts/spire/charts/tor-proxy/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "relay-tor-proxy-test-connection"
  labels:
    helm.sh/chart: tor-proxy-0.0.5
    app.kubernetes.io/name: tor-proxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.4.7.10"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: nc
      image: busybox
      command: ['nc']
      args:
        - '-zv'
        - 'relay-tor-proxy'
        - '9050'
  restartPolicy: Never
---
# Source: omnia-relay/charts/spire/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "relay-spire-test-connection"
  labels:
    helm.sh/chart: spire-0.1.0
    app.kubernetes.io/name: spire
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.11.0-dev.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: nc-libp2p
      image: busybox
      command: ['nc']
      args:
        - '-zv'
        - '-v'
        - 'relay-spire'
        - '8000'
    - name: nc-rpc
      image: busybox
      command: ['nc']
      args:
        - '-zv'
        - '-v'
        - 'relay-spire'
        - '9100'
    - name: nc-webapi
      image: busybox
      command: ['nc']
      args:
        - '-zv'
        - '-v'
        - 'relay-spire'
        - '8080'
  restartPolicy: Never
---
# Source: omnia-relay/templates/tests/test-logs.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-omnia-relay-test-logs"
  labels:
    helm.sh/chart: omnia-relay-0.0.10
    app.kubernetes.io/name: omnia-relay
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  serviceAccountName: release-name-omnia-relay-test
  containers:
    - name: test-omnia-relay-logs
      image: bitnami/kubectl:latest
      command:
        - /bin/sh
        - -c
        - |
          echo 'Running tests';
          kubectl logs --namespace default $(kubectl get pods --namespace default -l 'app.kubernetes.io/instance=release-name,app.kubernetes.io/name=omnia-relay' -o jsonpath='{.items[0].metadata.name}') | grep 'INITIALIZATION COMPLETE'
  restartPolicy: Never
