---
# Source: pet-battle-api/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: release-name-pet-battle-api
  labels:
    helm.sh/chart: pet-battle-api-1.3.0
    app.kubernetes.io/name: pet-battle-api
    app.kubernetes.io/component: pet-battle-api
    app.kubernetes.io/instance: release-name
    deploymentconfig: release-name-pet-battle-api
    app.kubernetes.io/version: "1.5.0"
    app.kubernetes.io/managed-by: Helm
spec:
  minAvailable: 1
  selector:
    matchLabels:
      deploymentconfig: release-name-pet-battle-api
---
# Source: pet-battle-api/templates/mongodb-persistent.yaml
apiVersion: v1
kind: Secret
metadata:
  annotations:
    template.openshift.io/expose-admin_password: '{.data[''database-admin-password'']}'
    template.openshift.io/expose-database_name: '{.data[''database-name'']}'
    template.openshift.io/expose-password: '{.data[''database-password'']}'
    template.openshift.io/expose-username: '{.data[''database-user'']}'
  name: release-name-mongodb
  labels:
    helm.sh/chart: pet-battle-api-1.3.0
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/component: mongodb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
stringData:
  database-admin-password: "password"
  database-name: "cats"
  database-password: "password"
  database-user: "user"
---
# Source: pet-battle-api/templates/mongodb-persistent.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-mongodb
  labels:
    helm.sh/chart: pet-battle-api-1.3.0
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/component: mongodb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "1Gi"
---
# Source: pet-battle-api/templates/mongodb-persistent.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    template.openshift.io/expose-uri: mongodb://{.spec.clusterIP}:{.spec.ports[?(.name=="mongo")].port}
  name: release-name-mongodb
  labels:
    helm.sh/chart: pet-battle-api-1.3.0
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/component: mongodb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - name: mongo
      nodePort: 0
      port: 27017
      protocol: TCP
      targetPort: 27017
  selector:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/component: mongodb
    app.kubernetes.io/instance: release-name
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
# Source: pet-battle-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-pet-battle-api
  labels:
    helm.sh/chart: pet-battle-api-1.3.0
    app.kubernetes.io/name: pet-battle-api
    app.kubernetes.io/component: pet-battle-api
    app.kubernetes.io/instance: release-name
    deploymentconfig: release-name-pet-battle-api
    app.kubernetes.io/version: "1.5.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
      name: tcp-8080
    - port: 8443
      protocol: TCP
      targetPort: 8443
      name: tcp-8443
  selector:
    app.kubernetes.io/name: pet-battle-api
    app.kubernetes.io/component: pet-battle-api
    app.kubernetes.io/instance: release-name
    deploymentconfig: release-name-pet-battle-api
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
# Source: pet-battle-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-pet-battle-api
  annotations:
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"release-name-pet-battle-api:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"pet-battle-api\")].image"}]'
  labels:
    helm.sh/chart: pet-battle-api-1.3.0
    app.kubernetes.io/name: pet-battle-api
    app.kubernetes.io/component: pet-battle-api
    app.kubernetes.io/instance: release-name
    deploymentconfig: release-name-pet-battle-api
    app.kubernetes.io/version: "1.5.0"
    app.kubernetes.io/managed-by: Helm
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: pet-battle-api
      app.kubernetes.io/component: pet-battle-api
      app.kubernetes.io/instance: release-name
      deploymentconfig: release-name-pet-battle-api
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
        prometheus.io/port: '8080'
        rollme: "xRW3a"
      labels:
        app.kubernetes.io/name: pet-battle-api
        app.kubernetes.io/component: pet-battle-api
        app.kubernetes.io/instance: release-name
        deploymentconfig: release-name-pet-battle-api
    spec:
      containers:
        - env:
            - name: QUARKUS_PROFILE
              value: prod
            - name: QUARKUS_LOG_LEVEL
              value: INFO
            - name: NSFF_API_SERVICE_ENABLED
              value: "false"
            - name: NSFF_API_SERVICE_HOST
              value: "tensorflowserving-pb-nsff"
            - name: NSFF_API_SERVICE_PORT
              value: "8501"
            - name: NSFF_LIMIT
              value: "0.6"
            - name: MONGODB_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-admin-password
                  name: release-name-mongodb
            - name: MONGODB_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: release-name-mongodb
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: release-name-mongodb
            - name: MONGODB_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: release-name-mongodb
            - name: MONGODB_SERVICE_HOST
              value: release-name-mongodb
            - name: MONGODB_SERVICE_PORT
              value: '27017'
          image: ' '
          imagePullPolicy: Always
          name: pet-battle-api
          livenessProbe:
            httpGet:
              path: /q/health/live
              port: 8080
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /q/health/ready
              port: 8080
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          resources:
            limits:
              cpu: '600m'
              memory: 1000Mi
            requests:
              cpu: '100m'
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
# Source: pet-battle-api/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: release-name-pet-battle-api
  labels:
    helm.sh/chart: pet-battle-api-1.3.0
    app.kubernetes.io/name: pet-battle-api
    app.kubernetes.io/component: pet-battle-api
    app.kubernetes.io/instance: release-name
    deploymentconfig: release-name-pet-battle-api
    app.kubernetes.io/version: "1.5.0"
    app.kubernetes.io/managed-by: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: release-name-pet-battle-api
  minReplicas: 2
  maxReplicas: 6
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 200m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 300Mi
---
# Source: pet-battle-api/templates/mongodb-persistent.yaml
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    template.alpha.openshift.io/wait-for-ready: "true"
  name: release-name-mongodb
  labels:
    helm.sh/chart: pet-battle-api-1.3.0
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/component: mongodb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/component: mongodb
    app.kubernetes.io/instance: release-name
  strategy:
    type: Recreate
    resources:
      limits:
        memory: 250Mi
      requests:
        cpu: 250m
        memory: 250Mi
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb
        app.kubernetes.io/component: mongodb
        app.kubernetes.io/instance: release-name
    spec:
      containers:
        - env:
            - name: MONGODB_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: release-name-mongodb
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: release-name-mongodb
            - name: MONGODB_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-admin-password
                  name: release-name-mongodb
            - name: MONGODB_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: release-name-mongodb
          image: ' '
          imagePullPolicy: IfNotPresent
          livenessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: 27017
            timeoutSeconds: 1
          name: mongodb
          ports:
            - containerPort: 27017
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -i
                - -c
                - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD
                  --eval="quit()"
            initialDelaySeconds: 3
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 250m
              memory: 512Mi
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
            - mountPath: /var/lib/mongodb/data
              name: mongodb-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: release-name-mongodb
  triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
          - mongodb
        from:
          kind: ImageStreamTag
          name: release-name-mongodb:latest
        lastTriggeredImage: ""
      type: ImageChange
    - type: ConfigChange
---
# Source: pet-battle-api/templates/imagestream.yaml
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: release-name-pet-battle-api
  labels:
    helm.sh/chart: pet-battle-api-1.3.0
    app.kubernetes.io/name: pet-battle-api
    app.kubernetes.io/component: pet-battle-api
    app.kubernetes.io/instance: release-name
    deploymentconfig: release-name-pet-battle-api
    app.kubernetes.io/version: "1.5.0"
    app.kubernetes.io/managed-by: Helm
  creationTimestamp: null
spec:
  lookupPolicy:
    local: false
  tags:
    - annotations:
        openshift.io/imported-from: eformat/pet-battle-api
      from:
        kind: DockerImage
        name: quay.io/petbattle/pet-battle-api:latest
      importPolicy:
        scheduled: true
      name: latest
---
# Source: pet-battle-api/templates/mongodb-persistent.yaml
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: release-name-mongodb
  creationTimestamp: null
spec:
  lookupPolicy:
    local: false
  tags:
    - name: latest
      from:
        kind: DockerImage
        name: "registry.access.redhat.com/rhscl/mongodb-36-rhel7:latest"
      importPolicy:
        insecure: true
      referencePolicy:
        type: Source
---
# Source: pet-battle-api/templates/prometheusrule.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: pb-api-alerts
  namespace: default
spec:
  groups:
  - name: petbattle-api.rules
    rules:
    - alert: PetBattleApiNotAvailable
      annotations:
        message: 'Pet Battle API in namespace default is not available for the last 1 minutes.'
      expr: (1 - absent(kube_pod_status_ready{condition="true",namespace="default"} * on(pod) group_left(label_app_kubernetes_io_component) kube_pod_labels{label_app_kubernetes_io_component="pet-battle-api",namespace="default"})) == 0
      for: 1m
      labels:
        severity: warning
---
# Source: pet-battle-api/templates/route.yaml
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: release-name-pet-battle-api
  labels:
    helm.sh/chart: pet-battle-api-1.3.0
    app.kubernetes.io/name: pet-battle-api
    app.kubernetes.io/component: pet-battle-api
    app.kubernetes.io/instance: release-name
    deploymentconfig: release-name-pet-battle-api
    app.kubernetes.io/version: "1.5.0"
    app.kubernetes.io/managed-by: Helm
spec:
  port:
    targetPort: tcp-8080
  to:
    kind: Service
    name: release-name-pet-battle-api
    weight: 100
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  wildcardPolicy: None
status:
  ingress:
    - conditions:
        - status: 'True'
          type: Admitted
---
# Source: pet-battle-api/templates/service-monitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: release-name-pet-battle-api
  labels:
    helm.sh/chart: pet-battle-api-1.3.0
    app.kubernetes.io/name: pet-battle-api
    app.kubernetes.io/component: pet-battle-api
    app.kubernetes.io/instance: release-name
    deploymentconfig: release-name-pet-battle-api
    app.kubernetes.io/version: "1.5.0"
    app.kubernetes.io/managed-by: Helm
spec:
  endpoints:
    - interval: 30s
      port: tcp-8080
      scheme: http
  selector:
    matchLabels:
      deploymentconfig: release-name-pet-battle-api
