---
# Source: hello-world-app/templates/poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: release-name-hello-world-app
  labels:
    helm.sh/chart: hello-world-app-1.2.2
    app.kubernetes.io/name: hello-world-app
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.2.0"
    app.kubernetes.io/managed-by: Helm
    giantswarm.io/service-type: managed
    application.giantswarm.io/team: "honeybadger"
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: hello-world-app
      app.kubernetes.io/instance: release-name
---
# Source: hello-world-app/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-hello-world-app
  labels:
    helm.sh/chart: hello-world-app-1.2.2
    app.kubernetes.io/name: hello-world-app
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.2.0"
    app.kubernetes.io/managed-by: Helm
    giantswarm.io/service-type: managed
    application.giantswarm.io/team: "honeybadger"
---
# Source: hello-world-app/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-hello-world-app
  labels:
    helm.sh/chart: hello-world-app-1.2.2
    app.kubernetes.io/name: hello-world-app
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.2.0"
    app.kubernetes.io/managed-by: Helm
    giantswarm.io/service-type: managed
    application.giantswarm.io/team: "honeybadger"
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: hello-world-app
    app.kubernetes.io/instance: release-name
---
# Source: hello-world-app/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-hello-world-app
  labels:
    helm.sh/chart: hello-world-app-1.2.2
    app.kubernetes.io/name: hello-world-app
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.2.0"
    app.kubernetes.io/managed-by: Helm
    giantswarm.io/service-type: managed
    application.giantswarm.io/team: "honeybadger"
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: hello-world-app
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: hello-world-app-1.2.2
        app.kubernetes.io/name: hello-world-app
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "0.2.0"
        app.kubernetes.io/managed-by: Helm
        giantswarm.io/service-type: managed
        application.giantswarm.io/team: "honeybadger"
    spec:
      serviceAccountName: release-name-hello-world-app
      securityContext:
        {}
      containers:
      - name: hello-world-app
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
        image: "quay.io/giantswarm/helloworld:0.2.0"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
        resources:
          limits:
            cpu: 400m
            memory: 100Mi
          requests:
            cpu: 200m
            memory: 50Mi
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/name: hello-world-app
            app.kubernetes.io/instance: release-name
        topologyKey: topology.kubernetes.io/zone
        maxSkew: 1
        whenUnsatisfiable: ScheduleAnyway
      - labelSelector:
          matchLabels:
            app.kubernetes.io/name: hello-world-app
            app.kubernetes.io/instance: release-name
        topologyKey: kubernetes.io/hostname
        maxSkew: 1
        whenUnsatisfiable: ScheduleAnyway
---
# Source: hello-world-app/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: release-name-hello-world-app
  labels:
    helm.sh/chart: hello-world-app-1.2.2
    app.kubernetes.io/name: hello-world-app
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.2.0"
    app.kubernetes.io/managed-by: Helm
    giantswarm.io/service-type: managed
    application.giantswarm.io/team: "honeybadger"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: release-name-hello-world-app
  minReplicas: 1
  maxReplicas: 100
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
# Source: hello-world-app/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-hello-world-app
  labels:
    helm.sh/chart: hello-world-app-1.2.2
    app.kubernetes.io/name: hello-world-app
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.2.0"
    app.kubernetes.io/managed-by: Helm
    giantswarm.io/service-type: managed
    application.giantswarm.io/team: "honeybadger"
  annotations:
    kubernetes.io/tls-acme: "true"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - "hello.cluster.k8s.installation.region.provider.gigantic.io"
    secretName: hello-world-tls
  rules:
  - host: "hello.cluster.k8s.installation.region.provider.gigantic.io"
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: release-name-hello-world-app
            port:
              number: 80
---
# Source: hello-world-app/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: release-name-hello-world-app-test-connection
  labels:
    helm.sh/chart: hello-world-app-1.2.2
    app.kubernetes.io/name: hello-world-app
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.2.0"
    app.kubernetes.io/managed-by: Helm
    giantswarm.io/service-type: managed
    application.giantswarm.io/team: "honeybadger"
  annotations:
    helm.sh/hook: test
spec:
  containers:
  - name: wget
    securityContext:
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1000
    image: busybox
    command:
    - wget
    args:
    - release-name-hello-world-app:80
    resources:
      requests:
        cpu: 50m
        memory: 50Mi
      limits:
        cpu: 50m
        memory: 50Mi
  restartPolicy: Never
