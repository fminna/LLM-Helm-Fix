---
# Source: pypi-server/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-pypi-server
  labels:
    helm.sh/chart: pypi-server-0.1.0
    app.kubernetes.io/name: pypi-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: pypi-server/templates/secret.yaml
apiVersion: v1
kind: Secret
type: Opaque
stringData:
  auth: |-
    admin:admin
metadata:
  name: release-name-pypi-server
  labels:
    helm.sh/chart: pypi-server-0.1.0
    app.kubernetes.io/name: pypi-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: pypi-server/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-pypi-server
  labels:
    helm.sh/chart: pypi-server-0.1.0
    app.kubernetes.io/name: pypi-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - "ReadWriteMany"
  resources:
    requests:
      storage: "5Gi"
---
# Source: pypi-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-pypi-server
  labels:
    helm.sh/chart: pypi-server-0.1.0
    app.kubernetes.io/name: pypi-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: pypi-server
    app.kubernetes.io/instance: release-name
---
# Source: pypi-server/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-pypi-server
  labels:
    helm.sh/chart: pypi-server-0.1.0
    app.kubernetes.io/name: pypi-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  serviceName: release-name-pypi-server
  selector:
    matchLabels:
      app.kubernetes.io/name: pypi-server
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        {}
      labels:
        app.kubernetes.io/name: pypi-server
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-pypi-server
      securityContext:
        {}
      containers:
        - name: pypi-server
          securityContext:
            {}
          image: "pypiserver/pypiserver:v1.3.2"
          imagePullPolicy: IfNotPresent
          command: ["pypi-server"]
          args:
            - --passwords=/config/passwords
            - --authenticate=list,download,update
            - --port=8080
            - /data/packages
          volumeMounts:
            - mountPath: /data/packages
              name: packages
            - mountPath: /config
              name: secrets
              readOnly: true
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 3
            periodSeconds: 5
          resources:
            {}
      volumes:
        - name: secrets
          secret:
            defaultMode: 420
            items:
            - key: auth
              path: passwords
            secretName: release-name-pypi-server
        - name: packages
          persistentVolumeClaim:
            claimName: release-name-pypi-server
      nodeSelector:
        {}
      tolerations:
        []
---
# Source: pypi-server/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-pypi-server-test-connection"
  labels:
    helm.sh/chart: pypi-server-0.1.0
    app.kubernetes.io/name: pypi-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.3.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-pypi-server:80']
  restartPolicy: Never
