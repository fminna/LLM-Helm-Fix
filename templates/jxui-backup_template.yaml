---
# Source: jxui-backup/charts/jxui-cleanup/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: jxui-cleanup
    chart: "jxui-cleanup-2.3.56"
    release: "release-name"
    heritage: "Helm"
  name: jxui-cleanup
---
# Source: jxui-backup/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: jxui-backup
    chart: "jxui-backup-0.0.10"
    release: "release-name"
    heritage: "Helm"
  name: jxui-backup
---
# Source: jxui-backup/templates/rolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-jxui-backup
  labels:
    app: jxui-backup
    chart: jxui-backup-0.0.10
    release: release-name
    heritage: Helm
subjects:
- kind: ServiceAccount
  name: jxui-backup
  namespace: default
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: cluster-admin
---
# Source: jxui-backup/charts/jxui-cleanup/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: jxui-cleanup
rules:
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
  - patch
  - create
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  - services
  verbs:
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
  - patch
  - update
---
# Source: jxui-backup/charts/jxui-cleanup/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: jxui-cleanup
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: jxui-cleanup
subjects:
- kind: ServiceAccount
  name: jxui-cleanup
  namespace: default
---
# Source: jxui-backup/templates/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jxui-backup-metrics
  labels:
    app: jxui-backup
    chart: jxui-backup-0.0.10
    release: release-name
    heritage: Helm
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: jxui-frontend-backup
  selector:
    app: jxui-backup
    release: release-name
---
# Source: jxui-backup/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jxui-backup
  labels:
    app: jxui-backup
    chart: jxui-backup-0.0.10
    release: release-name
    heritage: Helm
  annotations:
    fabric8.io/expose: "true"
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: jxui-frontend-backup
  selector:
    app: jxui-backup
    release: release-name
---
# Source: jxui-backup/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-jxui-backup
  labels:
    app: jxui-backup
    chart: jxui-backup-0.0.10
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 35%
  template:
    metadata:
      labels:
        app: jxui-backup
        release: release-name
    spec:
      containers:
        - name: jxui-backup-frontend
          env:
          - name: API_PORT
            value: "8080"
          image: "gcr.io/jenkinsxio/jxui-frontend-backup:0.0.10"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          livenessProbe:
            httpGet:
              path: /
              port: 80
            periodSeconds: 60
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: 80
            periodSeconds: 60
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
        - name: jxui-backup-backend
          image: "gcr.io/jenkinsxio/jxui-backend:0.0.289"
          imagePullPolicy: IfNotPresent
          env:
          - name: XDG_CONFIG_HOME
            value: /home
          - name: DISABLE_SSO
            value: "true"
          - name: JX_LOG_FORMAT
            value: json
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /_health
              port: 8080
            periodSeconds: 60
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /_health
              port: 8080
            periodSeconds: 60
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
      serviceAccountName: jxui-backup
---
# Source: jxui-backup/templates/app.yaml
apiVersion: jenkins.io/v1
kind: App
metadata:
  name: release-name-jxui-backup
  labels:
    chart: "jxui-backup-0.0.10"
spec:
  schemaPreprocessor:
    name: schema-preprocessor
    image: "gcr.io/jenkinsxio/builder-go:0.1.435"
    command:
      - "/bin/sh"
    env:
      - name: DOMAIN
        valueFrom:
          configMapKeyRef:
            name: ingress-config
            key: domain
    args:
      - "-c"
      - "/usr/bin/jx step values schema template --set domain=`echo $DOMAIN`"
---
# Source: jxui-backup/charts/jxui-cleanup/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: jxui-cleanup
  labels:
    heritage: "Helm"
    release: "release-name"
    chart: "jxui-cleanup-2.3.56"
    component: "release-name-jxui-cleanup"
  name: jxui-cleanup
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  # backoffLimit: 5
  template:
    metadata:
      name: "release-name"
      labels:
        heritage: "Helm"
        release: "release-name"
        chart: "jxui-cleanup-2.3.56"
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: "jenkinsxio/exposecontroller:2.3.56"
        name: jxui-cleanup
        command: ["/exposecontroller"]
        args:
        - "--cleanup"
        - "--filter"
        - "jxui-jxui"
      serviceAccountName: jxui-cleanup
      restartPolicy: Never
