---
# Source: xkops/templates/workflows-config.yaml
apiVersion: v1
kind: Secret
metadata:
  name: xkops-workflows-config-secret
  # namespace: default
  namespace: xkops
type: Opaque
data:
  custom_workflows.yaml: |-
    YWN0aXZlX3dvcmtmbG93czoKCg==
---
# Source: xkops/templates/configmaps.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: xkops-config
  namespace: "xkops"
data:
  CLUSTER_NAME: ""
  REGION: ""
  SLACK_CHANNEL_NAME: ""
---
# Source: xkops/templates/storage-class.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: ebs-sc
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
provisioner: ebs.csi.aws.com
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
---
# Source: xkops/templates/xkops-clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: xkops-clusterrole
rules:
  - apiGroups: [""]
    resources:
      - configmaps
      - daemonsets
      - deployments
      - endpoints
      - events
      - limitranges
      - namespaces
      - ingresses
      - nodes
      - persistentvolumeclaims
      - persistentvolumes
      - pods
      - replicasets
      - replicationcontrollers
      - resourcequotas
      - services
      - serviceaccounts
      - pods/status
      - pods/exec
      - pods/log
      - pods/portforward
      - secrets
      - horizontalpodautoscalers.autoscaling
      - cronjobs.batch
      - jobs.batch
      - events.events.k8s.io
      - daemonsets.extensions
      - deployments.extensions
      - replicasets.extensions
      - poddisruptionbudgets.policy
      - storageclasses.storage.k8s.io
      - daemonsets.apps
      - deployments.apps
      - replicasets.apps
      - statefulsets.apps
      - configmaps
      - endpoints
      - nodes/metrics
      - nodes/proxy
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - update
      - delete
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources:
      - clusterroles
      - clusterrolebindings
      - configmaps
      - daemonsets
      - deployments
      - events
      - namespaces
      - nodes
      - roles
      - rolebindings
      - persistentvolumes
      - pods
      - replicasets
      - replicationcontrollers
      - services
      - serviceaccounts
      - persistentvolumeclaims
      - pods/status
      - pods/exec
      - pods/log
      - endpoints
      - limitranges
      - resourcequotas
      - horizontalpodautoscalers.autoscaling
      - cronjobs.batch
      - jobs.batch
      - events.events.k8s.io
      - daemonsets.extensions
      - deployments.extensions
      - replicasets.extensions
      - poddisruptionbudgets.policy
      - storageclasses.storage.k8s.io
      - daemonsets.apps
      - deployments.apps
      - replicasets.apps
      - statefulsets.apps
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - update
      - delete
  - apiGroups: ["autoscaling"]
    resources:
      - horizontalpodautoscalers
    verbs:
      - get
      - list
      - watch
      - patch
      - update
  - apiGroups: ["extensions"]
    resources:
      - podsecuritypolicies
    resourceNames:
      - kubecost-grafana
      - kubecost-cost-analyzer-psp
    verbs:
      - use
  - apiGroups: ["apps", "extensions"]
    resources:
      - daemonsets
      - deployments
      - deployments/scale
      - ingresses
      - replicasets
      - replicasets/scale
      - replicationcontrollers/scale
      - statefulsets
      - ingresses/status
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - update
      - delete
  - apiGroups: ["batch"]
    resources:
      - cronjobs
      - jobs
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - update
      - delete
  - apiGroups: ["events.k8s.io"]
    resources:
      - events
    verbs:
      - get
      - list
      - watch
  - apiGroups: ["policy"]
    resources:
      - poddisruptionbudgets
      - podsecuritypolicies
    verbs:
      - get
      - list
      - watch
      - patch
      - create
  - apiGroups: ["apiregistration.k8s.io"]
    resources:
      - apiservices
    verbs:
      - get
      - list
  - apiGroups: ["networking.k8s.io"]
    resources:
      - ingresses
      - networkpolicies
    verbs:
      - get
      - list
      - watch

  - apiGroups: ["storage.k8s.io"]
    resources:
      - storageclasses
    verbs:
      - get
      - list
      - watch
      - patch
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
# Source: xkops/templates/xkops-clusterrolebindings.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: xkops-clusterrole-binding
subjects:
  - kind: ServiceAccount #Subject: default service account under xkops namespace
    name: xkops-secret-sa
    namespace: xkops
  - kind: ServiceAccount  # kubecost-grafana service account
    # under kubecost namespace
    name: kubecost-grafana
    namespace: kubecost
  - kind: ServiceAccount  # kubecost-prometheus-server service account
    # under kubecost namespace
    name: kubecost-prometheus-server
    namespace: kubecost
  - kind: ServiceAccount  # kubecost-kube-state-metrics service account
    # under kubecost namespace
    name: kubecost-kube-state-metrics
    namespace: kubecost
roleRef:
  kind: ClusterRole  # Cluster role reference to be used for binding the subject
  name: xkops-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
# Source: xkops/templates/dashboard-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: xkops-dashboard
  namespace: xkops
spec:
  type: LoadBalancer
  selector:
    app: xkops-dashboard
  ports:
    - name: "http"
      port: 80
      targetPort: 3000
---
# Source: xkops/templates/dashboard.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xkops-dashboard
  namespace: xkops
spec:
  replicas: 1
  selector:
    matchLabels:
      app: xkops-dashboard
  template:
    metadata:
      labels:
        app: xkops-dashboard
    spec:
      containers:
        - name: xkops-dashboard
          image: "xkops/xkops_stable:dashboard"
          ports:
            - containerPort: 3000
---
# Source: xkops/templates/xkops-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xkops-deployment
  namespace: "xkops"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: xkops
  template:
    metadata:
      labels:
        app: xkops
    spec:
      serviceAccountName: xkops-secret-sa
      volumes:
      - name: workflows-config-secret
        secret:
          secretName: xkops-workflows-config-secret
          optional: true      
      - name: xkops-secret-vol
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "xkops-secret-provider" # pragma: allowlist secret
      - name: "log-volume"
        hostPath:
          path: "/mnt/logs"
      initContainers:
        - name: terraform-init
          image: "xkops/xkops_stable:terraform"
          imagePullPolicy: "Always"
          command: ["terraform", "apply", "-auto-approve"]
          # command: ["sleep", "3600"]
          volumeMounts:
          - name: xkops-secret-vol
            mountPath: "/mnt/xkops-secret"
            readOnly: true
          env:
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: xkops-secret
                key: AWS_ACCESS_KEY_ID
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: xkops-secret
                key: AWS_SECRET_ACCESS_KEY
          - name: AWS_SESSION_TOKEN
            valueFrom:
              secretKeyRef:
                name: xkops-secret
                key: AWS_SESSION_TOKEN
          - name: TF_VAR_CLUSTER_NAME
            valueFrom:
              configMapKeyRef:
                name: xkops-config
                key: CLUSTER_NAME
          - name: TF_VAR_REGION
            valueFrom:
              configMapKeyRef:
                name: xkops-config
                key: REGION
      containers:
        - name: xkops
          image: "xkops/xkops_stable:xkops"
          imagePullPolicy: "Always"
          # command: ["sleep", "3650d"]
          volumeMounts:
            - name: "log-volume"
              mountPath: "/tmp"
            - name: workflows-config-secret
              mountPath: /etc/xkops/config
            - name: xkops-secret-vol
              mountPath: "/mnt/xkops-secret"
              readOnly: true
          env:
            - name: PX_API_KEY
              valueFrom:
                secretKeyRef:
                  name: xkops-secret
                  key: PX_API_KEY
            - name: PX_DEPLOY_KEY
              valueFrom:
                secretKeyRef:
                  name: xkops-secret
                  key: PX_DEPLOY_KEY
            - name: SLACK_API_KEY
              valueFrom:
                secretKeyRef:
                  name: xkops-secret
                  key: SLACK_API_KEY
            - name: SLACK_CHANNEL_NAME
              valueFrom:
                configMapKeyRef:
                  name: xkops-config
                  key: SLACK_CHANNEL_NAME
            - name: ROBUSTA_UI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: xkops-secret
                  key: ROBUSTA_UI_API_KEY
            - name: CLUSTER_NAME
              valueFrom:
                configMapKeyRef:
                  name: xkops-config
                  key: CLUSTER_NAME
          resources:
            limits:
              cpu: "500m"
              memory: "200Mi"
            requests:
              cpu: "100m"
              memory: "128Mi"
      restartPolicy: "Always"
---
# Source: xkops/templates/configmaps.yaml
# Copyright (c) 2023, Xgrid Inc, https://xgrid.co

# Licensed under the Apache License, Version 2.0 (the 'License');
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an 'AS IS' BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Configmap to be used by xkops deployment scripts
---
# Source: xkops/templates/dashboard-service.yaml
# Copyright (c) 2023, Xgrid Inc, https://xgrid.co

# Licensed under the Apache License, Version 2.0 (the 'License');
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an 'AS IS' BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: xkops/templates/dashboard.yaml
# Copyright (c) 2023, Xgrid Inc, https://xgrid.co

# Licensed under the Apache License, Version 2.0 (the 'License');
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an 'AS IS' BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: xkops/templates/manifests.yaml
# Copyright (c) 2023, Xgrid Inc, https://xgrid.co

# Licensed under the Apache License, Version 2.0 (the 'License');
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an 'AS IS' BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# yamllint disable-file
---
# Source: xkops/templates/secretproviderclass.yaml
# Copyright (c) 2023, Xgrid Inc, https://xgrid.co

# Licensed under the Apache License, Version 2.0 (the 'License');
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an 'AS IS' BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: xkops/templates/storage-class.yaml
# Copyright (c) 2023, Xgrid Inc, https://xgrid.co

# Licensed under the Apache License, Version 2.0 (the 'License');
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an 'AS IS' BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: xkops/templates/xkops-clusterrole.yaml
# Copyright (c) 2023, Xgrid Inc, https://xgrid.co

# Licensed under the Apache License, Version 2.0 (the 'License');
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an 'AS IS' BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Cluster roles for XkOps.
---
# Source: xkops/templates/xkops-clusterrolebindings.yaml
# Copyright (c) 2023, Xgrid Inc, https://xgrid.co

# Licensed under the Apache License, Version 2.0 (the 'License');
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an 'AS IS' BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Cluster roles for XkOps.

# Cluster role binding which binds the default service account
# under the xkops namespace with all-resource-role cluster role
---
# Source: xkops/templates/xkops-deployment.yaml
# Copyright (c) 2023, Xgrid Inc, https://xgrid.co

# Licensed under the Apache License, Version 2.0 (the 'License');
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an 'AS IS' BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: xkops/templates/secretproviderclass.yaml
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: xkops-secret-provider  # name of secret provider class
  namespace: xkops
spec:
  provider: aws
  secretObjects:
    - secretName: xkops-secret  # pragma: allowlist secret
      type: Opaque
      data:
        - objectName: AWS_ACCESS_KEY_ID
          key: AWS_ACCESS_KEY_ID
        - objectName: AWS_SECRET_ACCESS_KEY
          key: AWS_SECRET_ACCESS_KEY
        - objectName: AWS_SESSION_TOKEN
          key: AWS_SESSION_TOKEN
        - objectName: ROBUSTA_UI_API_KEY
          key: ROBUSTA_UI_API_KEY
        - objectName: SLACK_API_KEY
          key: SLACK_API_KEY
        - objectName: PX_API_KEY
          key: PX_API_KEY
        - objectName: PX_DEPLOY_KEY
          key: PX_DEPLOY_KEY
  parameters:
    objects: |
        - objectName: "xkops-secret"
          objectType: "secretsmanager"
          jmesPath:
            - path: "AWS_ACCESS_KEY_ID"
              objectAlias: "AWS_ACCESS_KEY_ID"
            - path: "AWS_SECRET_ACCESS_KEY"
              objectAlias: "AWS_SECRET_ACCESS_KEY"
            - path: "AWS_SESSION_TOKEN"
              objectAlias: "AWS_SESSION_TOKEN"
            - path: "SLACK_API_KEY"
              objectAlias: "SLACK_API_KEY"
            - path: "ROBUSTA_UI_API_KEY"
              objectAlias: "ROBUSTA_UI_API_KEY"
            - path: "PX_API_KEY"
              objectAlias: "PX_API_KEY"
            - path: "PX_DEPLOY_KEY"
              objectAlias: "PX_DEPLOY_KEY"
