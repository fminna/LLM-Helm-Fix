---
# Source: nirmata-venafi-adapter/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: imagekey-controller
  namespace: nirmata-venafi-adapter
---
# Source: nirmata-venafi-adapter/templates/imagepullsecret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: image-pull-secret
  namespace: nirmata-venafi-adapter
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6IHsiZ2hjci5pbyI6IHsiYXV0aCI6ICJKU0Z6S0R4dWFXdytLVG9sSVhNb1BHNXBiRDRwIn19fQ==
---
# Source: nirmata-venafi-adapter/templates/configmap.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: abf84c06.nirmata.io
kind: ConfigMap
metadata:
  name: imagekey-controller-manager-config
  namespace: nirmata-venafi-adapter
---
# Source: nirmata-venafi-adapter/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: imagekey-controller-manager-role
rules:
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - cronjobs/status
  - jobs/status
  verbs:
  - get
- apiGroups:
  - security.nirmata.io
  resources:
  - imagekeys
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - security.nirmata.io
  resources:
  - imagekeys/finalizers
  verbs:
  - update
- apiGroups:
  - security.nirmata.io
  resources:
  - imagekeys/status
  verbs:
  - get
  - patch
  - update
---
# Source: nirmata-venafi-adapter/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: imagekey-controller-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: nirmata-venafi-adapter/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: imagekey-controller-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: nirmata-venafi-adapter/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: imagekey-controller-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: imagekey-controller-manager-role
subjects:
- kind: ServiceAccount
  name: imagekey-controller
  namespace: nirmata-venafi-adapter
---
# Source: nirmata-venafi-adapter/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: imagekey-controller-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: imagekey-controller-proxy-role
subjects:
- kind: ServiceAccount
  name: imagekey-controller
  namespace: nirmata-venafi-adapter
---
# Source: nirmata-venafi-adapter/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: imagekey-controller-leader-election-role
  namespace: nirmata-venafi-adapter
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: nirmata-venafi-adapter/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: imagekey-controller-manager-role
  namespace: nirmata-venafi-adapter
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
---
# Source: nirmata-venafi-adapter/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: imagekey-controller-leader-election-rolebinding
  namespace: nirmata-venafi-adapter
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: imagekey-controller-leader-election-role
subjects:
- kind: ServiceAccount
  name: imagekey-controller
  namespace: nirmata-venafi-adapter
---
# Source: nirmata-venafi-adapter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: imagekey-controller-metrics-service
  namespace: nirmata-venafi-adapter
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
# Source: nirmata-venafi-adapter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: imagekey-controller
  namespace: nirmata-venafi-adapter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: imagekey-controller
      app.kubernetes.io/instance: nirmata
      app.kubernetes.io/name: nirmata
      control-plane: controller-manager
      nirmata.io/container.type: system
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app: imagekey-controller
        app.kubernetes.io/instance: nirmata
        app.kubernetes.io/name: nirmata
        control-plane: controller-manager
        nirmata.io/container.type: system
    spec:
      imagePullSecrets: 
      - name: image-pull-secret
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 15
          periodSeconds: 600
          successThreshold: 1
          tcpSocket:
            port: 8443
          timeoutSeconds: 5
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 600
          successThreshold: 1
          tcpSocket:
            port: 8443
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        command:
        - /manager
        image: ghcr.io/nirmata/nirmata-imagekey-controller:v0.1
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      securityContext:
        runAsNonRoot: true
      serviceAccountName: imagekey-controller
      terminationGracePeriodSeconds: 10
