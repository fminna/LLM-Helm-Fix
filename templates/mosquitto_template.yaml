---
# Source: mosquitto/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-mosquitto
  labels:
    helm.sh/chart: mosquitto-0.1.4
    app.kubernetes.io/name: mosquitto
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.0"
    app.kubernetes.io/managed-by: Helm
data:
  mosquitto.conf: |
    persistence true
    persistence_location /mosquitto/data/
    listener 1883 0.0.0.0
    allow_anonymous true
    log_type all

    listener 8080
    protocol websockets
    allow_anonymous true
---
# Source: mosquitto/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mosquitto
  labels:
    helm.sh/chart: mosquitto-0.1.4
    app.kubernetes.io/name: mosquitto
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 1883
      targetPort: mqtt
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: mosquitto
    app.kubernetes.io/instance: release-name
---
# Source: mosquitto/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-mosquitto
  labels:
    helm.sh/chart: mosquitto-0.1.4
    app.kubernetes.io/name: mosquitto
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mosquitto
      app.kubernetes.io/instance: release-name
  serviceName: release-name-mosquitto
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mosquitto
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: mosquitto
          securityContext:
            {}
          image: "library/eclipse-mosquitto:2.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: mqtt
              containerPort: 1883
              protocol: TCP
          resources:
            {}
          volumeMounts:
            - name: mosquitto-data
              mountPath: /mosquitto/data/
            - name: mosquitto-config
              mountPath: /mosquitto/config/
      volumes:
        - name: mosquitto-config
          configMap:
            # Provide the name of the ConfigMap you want to mount.
            name: release-name-mosquitto
  volumeClaimTemplates:
    - metadata:
        name: mosquitto-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "local-path"
        resources:
          requests:
            storage: 1Gi
---
# Source: mosquitto/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-mosquitto-test-connection"
  labels:
    helm.sh/chart: mosquitto-0.1.4
    app.kubernetes.io/name: mosquitto
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-mosquitto:1883']
  restartPolicy: Never
