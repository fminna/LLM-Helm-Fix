---
# Source: kube-web-view/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kube-web-view
  labels:
    helm.sh/chart: kube-web-view-0.5.0
    app.kubernetes.io/name: kube-web-view
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "23.8.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kube-web-view/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-kube-web-view
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs: [list, get]
- nonResourceURLs:
  - '*'
  verbs: [list, get]
---
# Source: kube-web-view/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-kube-web-view
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-kube-web-view
subjects:
- kind: ServiceAccount
  name: release-name-kube-web-view
  namespace: default
---
# Source: kube-web-view/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kube-web-view
  labels:
    helm.sh/chart: kube-web-view-0.5.0
    app.kubernetes.io/name: kube-web-view
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "23.8.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kube-web-view
    app.kubernetes.io/instance: release-name
---
# Source: kube-web-view/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kube-web-view
  labels:
    helm.sh/chart: kube-web-view-0.5.0
    app.kubernetes.io/name: kube-web-view
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "23.8.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-web-view
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kube-web-view
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-kube-web-view
      securityContext:
        {}
      containers:
        - name: kube-web-view
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          image: "hjacobs/kube-web-view:23.8.0"
          imagePullPolicy: IfNotPresent
          args:
            - --port=8080
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
---
# Source: kube-web-view/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-kube-web-view-test-connection"
  labels:
    helm.sh/chart: kube-web-view-0.5.0
    app.kubernetes.io/name: kube-web-view
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "23.8.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-kube-web-view:80']
  restartPolicy: Never
