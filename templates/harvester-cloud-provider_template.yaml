---
# Source: harvester-cloud-provider/charts/kube-vip/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-vip
  namespace: default
  labels:
    helm.sh/chart: kube-vip-0.4.2
    app.kubernetes.io/name: kube-vip
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.4.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: harvester-cloud-provider/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: harvester-cloud-provider
  namespace: default
  labels:
    helm.sh/chart: harvester-cloud-provider-0.2.400
    app.kubernetes.io/name: harvester-cloud-provider
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.0"
---
# Source: harvester-cloud-provider/charts/kube-vip/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: kube-vip
rules:
  - apiGroups: [""]
    resources: ["services", "services/status", "nodes"]
    verbs: ["list","get","watch", "update"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["list", "get", "watch", "update", "create"]
---
# Source: harvester-cloud-provider/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: harvester-cloud-provider
rules:
  - apiGroups: [ "" ]
    resources: [ "services", "nodes", "events" ]
    verbs: [ "get", "watch", "list", "update", "create", "patch" ]
  - apiGroups: [ "" ]
    resources: [ "nodes/status", "services/status" ]
    verbs: [ "update", "patch" ]
  - apiGroups: [ "coordination.k8s.io" ]
    resources: [ "leases" ]
    verbs: [ "get", "update", "create" ]
---
# Source: harvester-cloud-provider/charts/kube-vip/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-vip
  labels:
    helm.sh/chart: kube-vip-0.4.2
    app.kubernetes.io/name: kube-vip
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.4.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-vip
subjects:
- kind: ServiceAccount
  name: kube-vip
  namespace: default
---
# Source: harvester-cloud-provider/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: harvester-cloud-provider
  labels:
    helm.sh/chart: harvester-cloud-provider-0.2.400
    app.kubernetes.io/name: harvester-cloud-provider
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.0"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: harvester-cloud-provider
subjects:
  - kind: ServiceAccount
    name: harvester-cloud-provider
    namespace: default
---
# Source: harvester-cloud-provider/charts/kube-vip/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-vip
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-vip
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kube-vip
        app.kubernetes.io/instance: release-name
    spec:
      containers:
      - args:
          - manager
        env:
          - name: "cp_enable"
            value: "false"
          - name: "enable_service_security"
            value: "true"
          - name: "lb_enable"
            value: "true"
          - name: "lb_port"
            value: "6443"
          - name: "svc_enable"
            value: "true"
          - name: "vip_arp"
            value: "true"
          - name: "vip_cidr"
            value: "32"
          - name: "vip_interface"
            value: ""
          - name: "vip_leaderelection"
            value: "false"
        image: rancher/mirrored-kube-vip-kube-vip-iptables:v0.6.0
        imagePullPolicy: IfNotPresent
        name: kube-vip
        resources:
          {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
      hostNetwork: true
      serviceAccountName: kube-vip
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoExecute
          key: node-role.kubernetes.io/etcd
          operator: Exists
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/controlplane
                operator: Exists
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
---
# Source: harvester-cloud-provider/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  labels:
    helm.sh/chart: harvester-cloud-provider-0.2.400
    app.kubernetes.io/name: harvester-cloud-provider
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.0"
  name: harvester-cloud-provider
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: harvester-cloud-provider
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: harvester-cloud-provider
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: harvester-cloud-provider
      hostNetwork: true
      containers:
        - name: harvester-cloud-provider
          image: rancher/harvester-cloud-provider:v0.2.1
          imagePullPolicy: IfNotPresent
          args:
            - --cloud-config=/etc/kubernetes/cloud-config
          command:
            - harvester-cloud-provider
          resources:
            {}
          volumeMounts:
            - mountPath: /etc/kubernetes/cloud-config
              name: cloud-config
      nodeSelector:
        kubernetes.io/os: linux
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - harvester-cloud-provider
            topologyKey: kubernetes.io/hostname
      tolerations:
        - effect: NoSchedule
          key: node.cloudprovider.kubernetes.io/uninitialized
          operator: Equal
          value: "true"
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Equal
        - effect: NoExecute
          key: node-role.kubernetes.io/etcd
          operator: Equal
        - effect: NoSchedule
          key: cattle.io/os
          operator: Equal
          value: linux
      volumes:
        - name: cloud-config
          hostPath:
            path: /etc/kubernetes/cloud-config
            type: File
