---
# Source: generic-webhook/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-generic-webhook
  labels:
    helm.sh/chart: generic-webhook-0.1.1
    app.kubernetes.io/name: generic-webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: generic-webhook/templates/configmap.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: release-name-generic-webhook
  labels:
    helm.sh/chart: generic-webhook-0.1.1
    app.kubernetes.io/name: generic-webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.0"
    app.kubernetes.io/managed-by: Helm
data:
  hooks.yaml: |
---
# Source: generic-webhook/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: "release-name-generic-webhook"
rules:
---
# Source: generic-webhook/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
# This role binding allows "jane" to read pods in the "default" namespace.
# You need to already have a Role named "pod-reader" in that namespace.
kind: RoleBinding
metadata:
  name: "release-name-generic-webhook"
subjects:
- kind: ServiceAccount
  name: "release-name-generic-webhook"
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: Role #this must be Role or ClusterRole
  name: "release-name-generic-webhook"
  apiGroup: rbac.authorization.k8s.io
---
# Source: generic-webhook/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-generic-webhook
  labels:
    helm.sh/chart: generic-webhook-0.1.1
    app.kubernetes.io/name: generic-webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: generic-webhook
    app.kubernetes.io/instance: release-name
---
# Source: generic-webhook/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-generic-webhook
  labels:
    helm.sh/chart: generic-webhook-0.1.1
    app.kubernetes.io/name: generic-webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: generic-webhook
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/config: a3dcf42757bd25755aed23307eccef5e2f8cd6ca7eaa94af6aa46fca67c17311
      labels:
        app.kubernetes.io/name: generic-webhook
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-generic-webhook
      securityContext:
        {}
      containers:
        - name: generic-webhook
          securityContext:
            {}
          image: "ghcr.io/thecatlady/webhook:2.8.0"
          imagePullPolicy: IfNotPresent
          command: 
            - /bin/sh
            - -c
            - |
              cd /config
              #### BEGIN STARTUP
              #### STARTING WEBHOOKS
              TINI_SUBREAPER=true /sbin/tini -- /usr/local/bin/webhook -verbose -hotreload -hooks=hooks.yaml
          env:
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
          volumeMounts:
            - name: configs
              mountPath: "/config/hooks.yaml"
              subPath: "hooks.yaml"
      volumes:
        - name: configs
          configMap:
            name: release-name-generic-webhook
            defaultMode: 0755
---
# Source: generic-webhook/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-generic-webhook-test-connection"
  labels:
    helm.sh/chart: generic-webhook-0.1.1
    app.kubernetes.io/name: generic-webhook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-generic-webhook:9000']
  restartPolicy: Never
