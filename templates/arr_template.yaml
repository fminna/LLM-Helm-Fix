---
# Source: arr/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-arr
  labels:
    helm.sh/chart: arr-1.0.9
    app.kubernetes.io/name: arr
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
# Source: arr/templates/service-radarr.yaml
apiVersion: v1
kind: Service
metadata:
  name: radarr-release-name-arr
  labels:
    app.kubernetes.io/instance: radarr
    app.kubernetes.io/name: radarr
spec:
  type: ClusterIP
  ports:
    - port: 7878
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/instance: radarr
    app.kubernetes.io/name: radarr
---
# Source: arr/templates/service-sonarr-en.yaml
apiVersion: v1
kind: Service
metadata:
  name: sonarr-en-release-name-arr
  labels:
    app.kubernetes.io/instance: sonarr
    app.kubernetes.io/name: sonarr
spec:
  type: ClusterIP
  ports:  
    - port: 8989
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/instance: sonarr-en
    app.kubernetes.io/name: sonarr-en
---
# Source: arr/templates/service-sonarr.yaml
apiVersion: v1
kind: Service
metadata:
  name: sonarr-release-name-arr
  labels:
    app.kubernetes.io/instance: sonarr
    app.kubernetes.io/name: sonarr
spec:
  type: ClusterIP
  ports:
    - port: 8989
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/instance: sonarr
    app.kubernetes.io/name: sonarr
---
# Source: arr/templates/statefulset-radarr.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: radarr-release-name-arr
  labels:
    app.kubernetes.io/instance: radarr
    app.kubernetes.io/name: radarr
spec:
  replicas: 1
  serviceName: release-name-arr 
  selector:
    matchLabels:
      app.kubernetes.io/instance: radarr
      app.kubernetes.io/name: radarr
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: radarr
        app.kubernetes.io/name: radarr
    spec:
      serviceAccountName: release-name-arr
      securityContext:
        {}
      containers:      
        - name: arr
          securityContext:
            privileged: true
          image: "linuxserver/radarr:latest"
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /config
              name: release-name-arr-radarr-config  
            - mountPath: /data
              name: data               
          env:
            - name: PUID
              value: "568"
            - name: PGID
              value: "568"
            - name: TZ
              value: "Europe/Madrid"     
          ports:
            - name: http
              containerPort: 7878
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /status
              port: http
              # httpHeaders:
              #   - name: Authorization
              #     value: Basic YWRtaW46YWRtaW4=
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 3                 
          readinessProbe:
            httpGet:
              path: /status
              port: http
              # httpHeaders:
              #   - name: Authorization
              #     value: Basic YWRtaW46YWRtaW4=
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 5  
          resources:
            {}
      volumes:
        - name: data
          hostPath:
            path: /mnt/raw-data/plex-data
            type: Directory
  volumeClaimTemplates:
    - metadata:
        name: release-name-arr-radarr-config  
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
---
# Source: arr/templates/statefulset-sonarr-en.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sonarr-en-release-name-arr
  labels:
    app.kubernetes.io/instance: sonarr-en
    app.kubernetes.io/name: sonarr-en
spec:
  replicas: 1
  serviceName: release-name-arr 
  selector:
    matchLabels:
      app.kubernetes.io/instance: sonarr-en
      app.kubernetes.io/name: sonarr-en
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: sonarr-en
        app.kubernetes.io/name: sonarr-en
    spec:
      serviceAccountName: release-name-arr
      securityContext:
        {}                            
      containers:     
        - name: arr
          securityContext:
            privileged: true
          image: "linuxserver/sonarr:latest"
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /config
              name: release-name-arr-sonarr-en-config  
            - mountPath: /data
              name: data            
          env:
            - name: PUID
              value: "568"
            - name: PGID
              value: "568"
            - name: TZ
              value: "Europe/Madrid" 
          ports:
            - name: http
              containerPort: 8989
              protocol: TCP
              # httpHeaders:
              #   - name: Authorization
              #     value: Basic YWRtaW46YWRtaW4=              
          livenessProbe:
            httpGet:
              path: /status
              port: http
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 3   
          readinessProbe:
            httpGet:
              path: /status
              port: http
              # httpHeaders:
              #   - name: Authorization
              #     value: Basic YWRtaW46YWRtaW4=              
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 5  
          resources:
            {}
      volumes: 
        - name: data
          hostPath:
            path: /mnt/raw-data/plex-data
            type: Directory
  volumeClaimTemplates:
    - metadata:
        name: release-name-arr-sonarr-en-config  
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
---
# Source: arr/templates/statefulset-sonarr.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sonarr-release-name-arr
  labels:
    app.kubernetes.io/instance: sonarr
    app.kubernetes.io/name: sonarr
spec:
  replicas: 1
  serviceName: release-name-arr 
  selector:
    matchLabels:
      app.kubernetes.io/instance: sonarr
      app.kubernetes.io/name: sonarr
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: sonarr
        app.kubernetes.io/name: sonarr
    spec:
      serviceAccountName: release-name-arr
      securityContext:
        {}                    
      containers:      
        - name: arr
          securityContext:
            privileged: true
          image: "linuxserver/sonarr:latest"
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /config
              name: release-name-arr-sonarr-config  
            - mountPath: /data
              name: data  
          env:
            - name: PUID
              value: "568"
            - name: PGID
              value: "568"
            - name: TZ
              value: "Europe/Madrid" 
          ports:
            - name: http
              containerPort: 8989
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /status
              port: http
              # httpHeaders:
              #   - name: Authorization
              #     value: Basic YWRtaW46YWRtaW4=              
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 3   
          readinessProbe:
            httpGet:
              path: /status
              port: http
              # httpHeaders:
              #   - name: Authorization
              #     value: Basic YWRtaW46YWRtaW4=              
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 5  
          resources:
            {}
      volumes: 
        - name: data
          hostPath:
            path: /mnt/raw-data/plex-data
            type: Directory
  volumeClaimTemplates:
    - metadata:
        name: release-name-arr-sonarr-config  
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
