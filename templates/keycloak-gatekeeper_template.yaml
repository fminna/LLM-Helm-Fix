---
# Source: keycloak-gatekeeper/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-keycloak-gatekeeper
  labels: 
    helm.sh/chart: keycloak-gatekeeper-4.0.0
    app.kubernetes.io/name: keycloak-gatekeeper
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "10.0.0"
---
# Source: keycloak-gatekeeper/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-keycloak-gatekeeper
  labels: 
    helm.sh/chart: keycloak-gatekeeper-4.0.0
    app.kubernetes.io/name: keycloak-gatekeeper
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "10.0.0"
data:
  CLIENT_ID: ""
  CLIENT_SECRET: ""
  ENCRYPTION_KEY: "V0tSdGc5RFZhZVJSN0c2RmZlMlFTQU5TcEx1MnROdmg="
---
# Source: keycloak-gatekeeper/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-keycloak-gatekeeper
  labels: 
    helm.sh/chart: keycloak-gatekeeper-4.0.0
    app.kubernetes.io/name: keycloak-gatekeeper
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "10.0.0"
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector: 
    app.kubernetes.io/name: keycloak-gatekeeper
    app.kubernetes.io/instance: release-name
---
# Source: keycloak-gatekeeper/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-keycloak-gatekeeper
  labels: 
    helm.sh/chart: keycloak-gatekeeper-4.0.0
    app.kubernetes.io/name: keycloak-gatekeeper
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "10.0.0"
    app.kubernetes.io/configuration-checksum: "3ae76bb8edd465bf0673c2c940b32a86d8980d1d40bd96b5"
spec:
  replicas: 1
  selector:
    matchLabels: 
      app.kubernetes.io/name: keycloak-gatekeeper
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels: 
        app.kubernetes.io/name: keycloak-gatekeeper
        app.kubernetes.io/instance: release-name
      annotations:
        app.kubernetes.io/configuration-checksum: "3ae76bb8edd465bf0673c2c940b32a86d8980d1d40bd96b5"
        prometheus.io/scrape: "true"
        prometheus.io/path: "/oauth/metrics"
        prometheus.io/port: "3000"
    spec:
      serviceAccountName: release-name-keycloak-gatekeeper
      containers:
        - name: keycloak-gatekeeper
          image: "quay.io/keycloak/keycloak-gatekeeper:10.0.0"
          imagePullPolicy: IfNotPresent
          args:
            - --listen=0.0.0.0:3000
            - --discovery-url=
            - --client-id=$(CLIENT_ID)
            - --client-secret=$(CLIENT_SECRET)
            - --upstream-url=
            - --skip-upstream-tls-verify=false
            - --skip-openid-provider-tls-verify=false
            - --enable-default-deny=true
            - --enable-logging=true
            - --enable-refresh-tokens=true
            - --enable-session-cookies=true
            - --secure-cookie=false
            - --enable-encrypted-token
            - --encryption-key=$(ENCRYPTION_KEY)
            - --enable-metrics
          envFrom:
            - secretRef:
                name: release-name-keycloak-gatekeeper
                optional: false
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /oauth/health
              port: http
          readinessProbe:
            httpGet:
              path: /oauth/health
              port: http
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
            runAsGroup: 10001
            privileged: false
          resources:
            {}
