---
# Source: cluster/templates/cluster.yaml
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: release-name-cluster
  labels:
    helm.sh/chart: cluster-0.0.8
    app.kubernetes.io/name: cluster
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: cloudnative-pg
    app.kubernetes.io/managed-by: Helm
spec:
  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:15.2
  imagePullPolicy: IfNotPresent
  postgresUID: 26
  postgresGID: 26
  storage:
    size: 8Gi
    storageClass: 
  affinity:
    topologyKey: topology.kubernetes.io/zone
  priorityClassName: 

  primaryUpdateMethod: switchover
  primaryUpdateStrategy: unsupervised
  logLevel: info
  enableSuperuserAccess: true
  postgresql:
    shared_preload_libraries:

  monitoring:
    enablePodMonitor: false
  
  bootstrap:
    initdb:
      postInitApplicationSQL:
  
  backup:
---
# Source: cluster/templates/tests/ping.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-cluster-ping-test
  labels:
    app.kubernetes.io/component: database-ping-test
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: release-name-cluster-ping-test
      labels:
        app.kubernetes.io/component: database-ping-test
    spec:
      restartPolicy: Never
      containers:
        - name: alpine
          image: alpine:3.17
          command: [ 'sh' ]
          env:
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: release-name-cluster-app
                  key: username
            - name: PGPASS
              valueFrom:
                secretKeyRef:
                  name: release-name-cluster-app
                  key: password
          args:
            - "-c"
            - >-
              apk add postgresql-client &&
              psql "postgresql://$PGUSER:$PGPASS@release-name-cluster-rw.default.svc.cluster.local:5432" -c 'SELECT 1'
