---
# Source: wordpress-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-wordpress-operator
  labels:
    helm.sh/chart: wordpress-operator-0.12.4
    app.kubernetes.io/name: wordpress-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.12.4"
    app.kubernetes.io/managed-by: Helm
---
# Source: wordpress-operator/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-wordpress-operator
  labels:
    helm.sh/chart: wordpress-operator-0.12.4
    app.kubernetes.io/name: wordpress-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.12.4"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
    - apps
  resources:
    - deployments
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - batch
  resources:
    - cronjobs
    - jobs
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - coordination.k8s.io
  resources:
    - leases
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - ""
  resources:
    - events
    - persistentvolumeclaims
    - secrets
    - services
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - networking.k8s.io
  resources:
    - ingresses
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - wordpress.presslabs.org
  resources:
    - wordpresses
    - wordpresses/status
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
---
# Source: wordpress-operator/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-wordpress-operator
  labels:
    helm.sh/chart: wordpress-operator-0.12.4
    app.kubernetes.io/name: wordpress-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.12.4"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: release-name-wordpress-operator
    namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-wordpress-operator
  apiGroup: rbac.authorization.k8s.io
---
# Source: wordpress-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-wordpress-operator
  labels:
    helm.sh/chart: wordpress-operator-0.12.4
    app.kubernetes.io/name: wordpress-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.12.4"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9125
      targetPort: prometheus
      protocol: TCP
      name: prometheus
  selector:
    app.kubernetes.io/name: wordpress-operator
    app.kubernetes.io/instance: release-name
---
# Source: wordpress-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-wordpress-operator
  labels:
    helm.sh/chart: wordpress-operator-0.12.4
    app.kubernetes.io/name: wordpress-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.12.4"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: wordpress-operator
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: wordpress-operator
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-wordpress-operator
      securityContext:
        fsGroup: 65532
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
      containers:
        - name: wordpress-operator
          securityContext:
            {}
          image: "docker.io/bitpoke/wordpress-operator:v0.12.4"
          imagePullPolicy: IfNotPresent
          ports:
            - name: health
              containerPort: 8081
              protocol: TCP
            - name: prometheus
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: health
          readinessProbe:
            httpGet:
              path: /readyz
              port: health
          resources:
            {}
