---
# Source: benthos/templates/networkpolicy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:  
  name: benthos-release-name
  labels:
    app: benthos
    chart: benthos-0.0.6
    release: release-name
    heritage: Helm
spec:
  podSelector:
    matchLabels:
      app: benthos
      release: release-name
  policyTypes:
    - Ingress
  ingress:
    - ports:      
      - port: 4195
        protocol: TCP
---
# Source: benthos/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: benthos-release-name-benthos-config
  labels:
    app: benthos
    chart: benthos-0.0.6
    release: release-name
    heritage: Helm
data:
  config.yaml: |-     
    
    http:
      enabled: true
      address: 0.0.0.0:4195
      debug_endpoints: false
    
    input:
      label: ""
      kafka:
        addresses:
          - kafka.default.svc.cluster.local:9092
        topics:
          - test_topic1
          - test_topic2
        target_version: 2.0.0
        tls:
          enabled: false
          skip_cert_verify: false
          root_cas: ""
          root_cas_file: ""
          client_certs: []
        consumer_group: benthos-release-name
        client_id: benthos-release-name
        checkpoint_limit: 1024
        commit_period: 1s
        max_processing_period: 100ms
        group:
          session_timeout: 10s
          heartbeat_interval: 3s
          rebalance_timeout: 60s
        batching:
          count: 0
          byte_size: 0
          period: ""
          check: ""
          processors: []
    
    buffer:
      none: {}
    
    pipeline:
      threads: -1
      processors:
        []
    
    output:
      label: ""
      kafka:
        addresses:
          - kafka.default.svc.cluster.local:9092
        tls:
          enabled: false
          skip_cert_verify: false
          enable_renegotiation: false
          root_cas: ""
          root_cas_file: ""
          client_certs: []
        topic: test_topic_out
        client_id: benthos-release-name
        target_version: 2.0.0
        key: ""
        partitioner: fnv1a_hash
        partition: ""
        compression: snappy
        static_headers: {}
        metadata:
          exclude_prefixes: []
        max_in_flight: 64
        ack_replicas: false
        max_msg_bytes: 1000000
        timeout: 5s
        retry_as_batch: false
        batching:
          count: 0
          byte_size: 0
          period: ""
          check: ""
          processors: []
        max_retries: 0
        backoff:
          initial_interval: 3s
          max_interval: 10s
          max_elapsed_time: 30s
    
    logger:
      level: INFO
      format: logfmt
      add_timestamp: false
    
    metrics:
      prometheus:
        use_histogram_timing: false
        histogram_buckets: []
        add_process_metrics: false
        add_go_metrics: false
      mapping: ""
    
    shutdown_delay: 
    shutdown_timeout: 20s
---
# Source: benthos/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:  
  name: benthos-release-name
  labels:
    app: benthos
    chart: benthos-0.0.6
    release: release-name
    heritage: Helm
spec:
  selector:    
    matchLabels:
      app: benthos
      release: release-name
  replicas: 1
  template:
    metadata:
      labels:        
        app: benthos
        release: release-name
        routed_via: release-name
      annotations:        
        checksum/secrets: df13764db4249a0d72ecab4b186d2dac936d977fb112f6f9847c83da3e54a8a4
        prometheus.io/scrape: "true"
        checksum/config: edd9999b1b95012500468b17fedb3a6049b83784491390d5cf417386cfde0b79
    spec:
      containers:
        - name: benthos-release-name
          image: "docker-registry.wikimedia.org/benthos:latest"
          imagePullPolicy: IfNotPresent          
          ports:
            - containerPort: 4195
          livenessProbe:
            httpGet:
              path: /ping
              port: 4195
          readinessProbe:
            httpGet:
              path: /ready
              port: 4195
          env: []
                    
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 1
              memory: 400Mi
          volumeMounts:
            - name: benthos-release-name-benthos-config
              mountPath: /etc/benthos
              readOnly: true
      volumes:
        - name: benthos-release-name-benthos-config
          configMap:
            name: benthos-release-name-benthos-config
---
# Source: benthos/templates/secret.yaml
# Empty file to keep the base.meta template happy
