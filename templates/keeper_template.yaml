---
# Source: keeper/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-keeper
  labels:
    app.kubernetes.io/name: keeper
    helm.sh/chart: keeper-3.3.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
# Source: keeper/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-keeper
  namespace: default
  labels:
    app.kubernetes.io/name: keeper
    helm.sh/chart: keeper-3.3.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  SENTRY_DSN: ""
  ORACLE_PRIVATE_KEY: ""
---
# Source: keeper/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-keeper
  labels:
    app.kubernetes.io/name: keeper
    helm.sh/chart: keeper-3.3.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  LOG_LEVEL: "INFO"
  NETWORK: "mainnet"
  ENABLE_HEALTH_SERVER: "False"
  HEALTH_SERVER_HOST: "0.0.0.0"
  HEALTH_SERVER_PORT: "8080"
  KEEPER_ETH1_ENDPOINT: ""
  AWS_REGION: ""
  AWS_BUCKET_NAME: ""
  HARBOUR_MAINNET_SEND_TELEGRAM_NOTIFICATIONS: "false"
---
# Source: keeper/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-keeper
  labels:
    app.kubernetes.io/name: keeper
    helm.sh/chart: keeper-3.3.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames:
      - release-name-keeper
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames:
      - release-name-keeper
    verbs: ["get"]
---
# Source: keeper/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-keeper
  labels:
    app.kubernetes.io/name: keeper
    helm.sh/chart: keeper-3.3.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: release-name-keeper
subjects:
  - kind: ServiceAccount
    name: release-name-keeper
    namespace: default
---
# Source: keeper/templates/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: release-name-keeper
  labels:
    app.kubernetes.io/name: keeper
    helm.sh/chart: keeper-3.3.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: keeper
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: keeper
        app.kubernetes.io/instance: release-name
      annotations:
        checksum/keeper-secret: e3ad9b1d1c5a3bc9220d753ec89ef3a61d1529a768db12e9413424c31a0ac8cc
        checksum/keeper-configmap: 3030c896fa63949313396e59cc801cfca522cab2b3f6699006ac477ed849ea8d
    spec:
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      serviceAccountName: release-name-keeper
      priorityClassName: ""
      terminationGracePeriodSeconds: 1800
      containers:
        - name: keeper
          image: "europe-west4-docker.pkg.dev/stakewiselabs/public/oracle:v3.3.0"
          imagePullPolicy: IfNotPresent
          command: ["python"]
          args: ["oracle/keeper/main.py"]
          envFrom:
            - configMapRef:
                name: release-name-keeper
            - secretRef:
                name: release-name-keeper
          resources:
            requests:
              cpu: 10m
              memory: 200Mi
