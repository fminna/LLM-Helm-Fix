---
# Source: prometheus-druid-exporter/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-prometheus-druid-exporter
  labels:
    app.kubernetes.io/name: release-name-prometheus-druid-exporter
    helm.sh/chart: prometheus-druid-exporter-0.9.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.8.0
---
# Source: prometheus-druid-exporter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: release-name-prometheus-druid-exporter
    helm.sh/chart: prometheus-druid-exporter-0.9.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.8.0
  name: release-name-prometheus-druid-exporter
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: release-name-prometheus-druid-exporter
    app.kubernetes.io/instance: release-name
  type: ClusterIP
---
# Source: prometheus-druid-exporter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-prometheus-druid-exporter
  labels:
    app.kubernetes.io/name: release-name-prometheus-druid-exporter
    helm.sh/chart: prometheus-druid-exporter-0.9.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.8.0
  annotations:
    {}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: release-name-prometheus-druid-exporter
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: metrics
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: release-name-prometheus-druid-exporter
        app.kubernetes.io/instance: release-name
    spec:
      containers:
      - env:
        - name: DRUID_URL
          value: http://druid.opstreelabs.in
        - name: PORT
          value: "8080"
        - name: LOG_LEVEL
          value: info
        - name: LOG_FORMAT
          value: json
        image: "quay.io/opstree/druid-exporter:v0.8"
        imagePullPolicy: IfNotPresent
        name: release-name-prometheus-druid-exporter
        ports:
        - containerPort: 8080
          protocol: TCP
      serviceAccount: release-name-prometheus-druid-exporter
      serviceAccountName: release-name-prometheus-druid-exporter
---
# Source: prometheus-druid-exporter/templates/tests/connection-test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-prometheus-druid-exporter-test-connection"
  labels:
    app.kubernetes.io/name: release-name-prometheus-druid-exporter
    helm.sh/chart: prometheus-druid-exporter-0.9.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.8.0
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
  - name: wget
    image: busybox
    command: ['wget']
    args:  ['-qO-', 'release-name-prometheus-druid-exporter:8080/metrics']
  restartPolicy: Never
