---
# Source: g-cronjob/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-g-cronjob
  labels:
    helm.sh/chart: g-cronjob-0.0.6
    app.kubernetes.io/name: g-cronjob
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: g-cronjob/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-g-cronjob
rules:
- resources:
  - '*'
  apiGroups:
  - '*'
  verbs:
  - '*'
---
# Source: g-cronjob/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-g-cronjob
roleRef:
  name: release-name-g-cronjob
  kind: Role
  apiGroup: rbac.authorization.k8s.io
subjects:
- name: release-name-g-cronjob
  namespace: default
  kind: ServiceAccount
---
# Source: g-cronjob/templates/cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: release-name-g-cronjob
  labels:
    app: g-cronjob
    chart: g-cronjob-0.0.6
    release: release-name
    heritage: Helm
spec:
  schedule: "0 4 * * *"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 1
  jobTemplate:
    metadata:
      labels:
        app: g-cronjob
        release: release-name
    spec:
      backoffLimit: 1
      template:
        metadata:
          labels:
            app: g-cronjob
            release: release-name
        spec:
          restartPolicy: Never
          serviceAccountName: release-name-g-cronjob
          automountServiceAccountToken: true
          containers:
            - name: g-cronjob
              securityContext:
                readOnlyRootFilesystem: true
              image: "alpine:latest"
              imagePullPolicy: IfNotPresent
              command:
                - /bin/sh
                - -ec
                - |
                  echo test
          securityContext:
            runAsUser: 16
