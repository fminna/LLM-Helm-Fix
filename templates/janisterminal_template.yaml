---
# Source: janisterminal/charts/proxyinjector/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: proxyinjector
    group: com.stakater.platform
    provider: stakater
    version: v0.0.23
    chart: "proxyinjector-v0.0.23"
    release: "release-name"
    heritage: "Helm"
  name: proxyinjector
---
# Source: janisterminal/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-janisterminal
  labels:
    helm.sh/chart: janisterminal-0.1.0
    app.kubernetes.io/name: janisterminal
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.9.5"
    app.kubernetes.io/managed-by: Helm
---
# Source: janisterminal/charts/proxyinjector/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: proxyinjector
    version: v0.0.23
    group: com.stakater.platform
    provider: stakater
    chart: "proxyinjector-v0.0.23"
    release: "release-name"
    heritage: "Helm"
  name: proxyinjector
data:
  config.yml: |-
    proxyconfig:
      gatekeeper-image : "keycloak/keycloak-gatekeeper:6.0.1"
      enable-default-deny: true
      secure-cookie: false
      verbose: true
      enable-logging: true
      cors-origins:
      - '*'
      cors-methods:
      - GET
      - POST
      resources:
      - uri: '/*'
      scopes:
      - 'good-service'
---
# Source: janisterminal/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-janisterminal-pvc
  labels:
    app.kubernetes.io/name: janisterminal
    helm.sh/chart: janisterminal-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
---
# Source: janisterminal/charts/proxyinjector/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels: 
    app: proxyinjector
    group: com.stakater.platform
    provider: stakater
    version: v0.0.23
    chart: "proxyinjector-v0.0.23"
    release: "release-name"
    heritage: "Helm"
  name: proxyinjector-role
  namespace: default
rules:
  - apiGroups:
      - ""
      - "extensions"
      - "apps"
    resources:
      - deployments
      - daemonsets
      - statefulsets
      - services
      - configmaps
    verbs:
      - list
      - get
      - watch
      - update
      - create
      - patch
---
# Source: janisterminal/charts/proxyinjector/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels: 
    app: proxyinjector
    group: com.stakater.platform
    provider: stakater
    version: v0.0.23
    chart: "proxyinjector-v0.0.23"
    release: "release-name"
    heritage: "Helm"
  name: proxyinjector-role-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: proxyinjector-role
subjects:
  - kind: ServiceAccount
    name: proxyinjector
    namespace: default
---
# Source: janisterminal/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-janisterminal-service
  labels:
    helm.sh/chart: janisterminal-0.1.0
    app.kubernetes.io/name: janisterminal
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.9.5"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: janisterminal
    app.kubernetes.io/instance: release-name
---
# Source: janisterminal/charts/proxyinjector/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: proxyinjector
    group: com.stakater.platform
    provider: stakater
    version: v0.0.23
    chart: "proxyinjector-v0.0.23"
    release: "release-name"
    heritage: "Helm"
  name: proxyinjector
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: proxyinjector
      group: com.stakater.platform
      provider: stakater
  template:
    metadata:
      labels:
        app: proxyinjector
        group: com.stakater.platform
        provider: stakater
    spec:
      containers:
      - env:
        - name: CONFIG_FILE_PATH
          value: "/etc/ProxyInjector/config.yml"
        image: "stakater/proxyinjector:v0.0.23"
        imagePullPolicy: IfNotPresent
        name: proxyinjector
        volumeMounts:
          - mountPath: /etc/ProxyInjector
            name: config-volume
      serviceAccountName: proxyinjector
      volumes:
      - configMap:
          name: proxyinjector
        name: config-volume
---
# Source: janisterminal/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-janisterminal
  labels:
    helm.sh/chart: janisterminal-0.1.0
    app.kubernetes.io/name: janisterminal
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.9.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    authproxy.stakater.com/enabled: "true"
    authproxy.stakater.com/source-service-name: release-name-service
    authproxy.stakater.com/upstream-url: "http://localhost:7681/"
    authproxy.stakater.com/client-id: janisterminal
    authproxy.stakater.com/client-secret: some_secret
    authproxy.stakater.com/listen: ":80"
    authproxy.stakater.com/discovery-url: http://cloudman-keycloak-http.cloudman.svc.cluster.local/auth/realms/master
    authproxy.stakater.com/oauth-uri: "/janis/oauth"
    # authproxy.stakater.com/verbose: "true"
    authproxy.stakater.com/gatekeeper-image: keycloak/keycloak-gatekeeper:7.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: janisterminal
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: janisterminal
        app.kubernetes.io/instance: release-name
      annotations:
    spec:
      serviceAccountName: release-name-janisterminal
      securityContext:
        {}
      containers:
        - name: janisterminal
          command: ['ttyd', '--base-path', '/janis', 'bash']
          workingDir: /home/janis
          securityContext:
            {}
          image: "cloudve/janis-terminal:latest"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /janis/
              port: 80
          readinessProbe:
            httpGet:
              path: /janis/
              port: 80
          resources:
            {}
          volumeMounts:
            - name: janisterminal-data
              mountPath: /home/janis
              subPath: janis
      volumes:
        - name: janisterminal-data
          persistentVolumeClaim:
            claimName: release-name-janisterminal-pvc
---
# Source: janisterminal/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: release-name-janisterminal
  labels:
    helm.sh/chart: janisterminal-0.1.0
    app.kubernetes.io/name: janisterminal
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.9.5"
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
    - host: 
      http:
        paths:
          - path: /janis
            backend:
              serviceName: release-name-janisterminal-service
              servicePort: 80
---
# Source: janisterminal/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-janisterminal-test-connection"
  labels:
    helm.sh/chart: janisterminal-0.1.0
    app.kubernetes.io/name: janisterminal
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.9.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-janisterminal:80']
  restartPolicy: Never
