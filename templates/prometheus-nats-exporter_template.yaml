---
# Source: prometheus-nats-exporter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-prometheus-nats-exporter
  labels:
    app.kubernetes.io/name: prometheus-nats-exporter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: prometheus-nats-exporter-1.0.0
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8222
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: prometheus-nats-exporter
    app.kubernetes.io/instance: release-name
---
# Source: prometheus-nats-exporter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-prometheus-nats-exporter
  labels:
    app.kubernetes.io/name: prometheus-nats-exporter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: prometheus-nats-exporter-1.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus-nats-exporter
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: prometheus-nats-exporter
        app.kubernetes.io/instance: release-name
      annotations:
    spec:
      containers:
        - name: prometheus-nats-exporter
          args:
            - "-port"
            - "8222"
            - "-varz"
            - "http://nats-nats-monitoring.default.svc.cluster.local:8222"
          image: "appcelerator/prometheus-nats-exporter:0.17.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8222
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: http
          readinessProbe:
            httpGet:
              path: /metrics
              port: http
          resources:
            {}
