---
# Source: k8s-node-image-1-18/templates/anaconda-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-k8s-node-image-1-18-ana
  labels:
    app.kubernetes.io/name: k8s-node-image-1-18
    helm.sh/chart: k8s-node-image-1-18-0.2.75
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    svc: anaconda
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: k8s-node-image-1-18
    app.kubernetes.io/instance: release-name
    svc: anaconda
---
# Source: k8s-node-image-1-18/templates/k8s-node-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-k8s-node-image-1-18-node
  labels:
    app.kubernetes.io/name: k8s-node-image-1-18
    helm.sh/chart: k8s-node-image-1-18-0.2.75
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    svc: k8s-node
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: k8s-node-image-1-18
    app.kubernetes.io/instance: release-name
    svc: k8s-node
---
# Source: k8s-node-image-1-18/templates/anaconda-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-k8s-node-image-1-18-ana
  labels:
    app.kubernetes.io/name: k8s-node-image-1-18
    helm.sh/chart: k8s-node-image-1-18-0.2.75
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    svc: anaconda
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: k8s-node-image-1-18
      app.kubernetes.io/instance: release-name
      svc: anaconda
  template:
    metadata:
      labels:
        app.kubernetes.io/name: k8s-node-image-1-18
        app.kubernetes.io/instance: release-name
        svc: anaconda
    spec:
      containers:
        - name: main
          command: ["nginx", "-g", "daemon off;"]
          image: docker.io/pnnlmiscscripts/anaconda:20201029-1700-nginx-1
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/sh
                - -c
                - nginx -s quit
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: k8s-node-image-1-18/templates/k8s-node-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-k8s-node-image-1-18-node
  labels:
    app.kubernetes.io/name: k8s-node-image-1-18
    helm.sh/chart: k8s-node-image-1-18-0.2.75
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    svc: k8s-node
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: k8s-node-image-1-18
      app.kubernetes.io/instance: release-name
      svc: k8s-node
  template:
    metadata:
      labels:
        app.kubernetes.io/name: k8s-node-image-1-18
        app.kubernetes.io/instance: release-name
        svc: k8s-node
    spec:
      containers:
        - name: main
          command: ["nginx", "-g", "daemon off;"]
          image: docker.io/pnnlmiscscripts/k8s-node-image:1.18.20-nginx-32
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/sh
                - -c
                - nginx -s quit
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: k8s-node-image-1-18/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-k8s-node-image-1-18
  labels:
    app.kubernetes.io/name: k8s-node-image-1-18
    helm.sh/chart: k8s-node-image-1-18-0.2.75
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
    - http:
        paths:
          - path: /1.18.20-nginx-32/?(.*)$
            pathType: Prefix
            backend:
              service:
                name: release-name-k8s-node-image-1-18-node
                port:
                  name: http
          - path: /1.18.20-nginx-32/(vmlinuz$)
            pathType: Prefix
            backend:
              service:
                name: release-name-k8s-node-image-1-18-ana
                port:
                  name: http
          - path: /1.18.20-nginx-32/(initrd.img$)
            pathType: Prefix
            backend:
              service:
                name: release-name-k8s-node-image-1-18-ana
                port:
                  name: http
          - path: /1.18.20-nginx-32/images/pxeboot/(vmlinuz$)
            pathType: Prefix
            backend:
              service:
                name: release-name-k8s-node-image-1-18-ana
                port:
                  name: http
          - path: /1.18.20-nginx-32/images/pxeboot/(initrd.img$)
            pathType: Prefix
            backend:
              service:
                name: release-name-k8s-node-image-1-18-ana
                port:
                  name: http
          - path: /1.18.20-nginx-32/(LiveOS$|LiveOS/.*)
            pathType: Prefix
            backend:
              service:
                name: release-name-k8s-node-image-1-18-ana
                port:
                  name: http
          - path: /1.18.20-nginx-32/(.treeinfo$)
            pathType: Prefix
            backend:
              service:
                name: release-name-k8s-node-image-1-18-ana
                port:
                  name: http
