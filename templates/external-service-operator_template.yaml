---
# Source: external-service-operator/templates/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: external-services
  labels:
    name: external-services
---
# Source: external-service-operator/templates/service_account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-service-operator
  namespace: external-services
---
# Source: external-service-operator/templates/eso_v1alpha1_externalservice_crd.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: externalservices.eso.crowdfox.com
spec:
  group: eso.crowdfox.com
  names:
    kind: ExternalService
    listKind: ExternalServiceList
    plural: externalservices
    singular: externalservice
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          type: object
        status:
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
# Source: external-service-operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-service-operator
rules:
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  - events
  verbs:
  - '*'
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - create
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - '*'
- apiGroups:
  - eso.crowdfox.com
  resources:
  - '*'
  verbs:
  - '*'
---
# Source: external-service-operator/templates/role_binding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: external-service-operator
subjects:
- kind: ServiceAccount
  name: external-service-operator
  namespace: external-services
roleRef:
  kind: ClusterRole
  name: external-service-operator
  apiGroup: rbac.authorization.k8s.io
---
# Source: external-service-operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: external-service-operator-deployment
  namespace: external-services
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - '*'
- apiGroups:
  - apps
  resourceNames:
  - external-service-operator
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - extensions
  resourceNames:
  - default-psp
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
# Source: external-service-operator/templates/role_binding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: external-service-operator-deployment
  namespace: external-services
subjects:
- kind: ServiceAccount
  name: external-service-operator
roleRef:
  kind: Role
  name: external-service-operator-deployment
  apiGroup: rbac.authorization.k8s.io
---
# Source: external-service-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-external-service-operator
  namespace: external-services
  labels:
    app.kubernetes.io/name: external-service-operator
    helm.sh/chart: external-service-operator-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: external-service-operator
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: external-service-operator
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: external-service-operator
      containers:
        - name: external-service-operator
          image: "crowdfox/external-service-operator:v1.1.0"
          imagePullPolicy: IfNotPresent
          command:
          - external-service-operator
          env:
            - name: WATCH_NAMESPACE
              value: ""
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: "external-service-operator"
          resources:
            {}
