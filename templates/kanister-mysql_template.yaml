---
# Source: kanister-mysql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-kanister-mysql
  labels:
    app: release-name-kanister-mysql
    chart: "kanister-mysql-0.32.0"
    release: "release-name"
    heritage: "Helm"
type: Opaque
data:
  
  mysql-root-password: "enprWE1kaWhUMw=="
  
  
  mysql-password: "aENMRzVPeTB0Qg=="
---
# Source: kanister-mysql/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-kanister-mysql
  labels:
    app: release-name-kanister-mysql
    chart: "kanister-mysql-0.32.0"
    release: "release-name"
    heritage: "Helm"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: kanister-mysql/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kanister-mysql
  labels:
    app: release-name-kanister-mysql
    chart: "kanister-mysql-0.32.0"
    release: "release-name"
    heritage: "Helm"
spec:
  type: ClusterIP
  ports:
  - name: mysql
    port: 3306
    targetPort: mysql
  selector:
    app: release-name-kanister-mysql
---
# Source: kanister-mysql/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kanister-mysql
  labels:
    app: release-name-kanister-mysql
    chart: "kanister-mysql-0.32.0"
    release: "release-name"
    heritage: "Helm"
  annotations:
    kanister.kasten.io/blueprint: release-name-kanister-mysql-blueprint
spec:
  selector:
    matchLabels:
      app: release-name-kanister-mysql
  template:
    metadata:
      labels:
        app: release-name-kanister-mysql
    spec:
      initContainers:
      - name: "remove-lost-found"
        image: "busybox:1.25.0"
        imagePullPolicy: "IfNotPresent"
        command:  ["rm", "-fr", "/var/lib/mysql/lost+found"]
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
      containers:
      - name: release-name-kanister-mysql
        image: "mysql:5.7.14"
        imagePullPolicy: "IfNotPresent"
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: release-name-kanister-mysql
              key: mysql-root-password
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: release-name-kanister-mysql
              key: mysql-password
        - name: MYSQL_USER
          value: ""
        - name: MYSQL_DATABASE
          value: ""
        ports:
        - name: mysql
          containerPort: 3306
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD}"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD}"
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: var-run-mysql
          mountPath: /var/run/mysqld/
        - name: data
          mountPath: /var/lib/mysql
      - name: kanister-sidecar
        image: kanisterio/mysql-sidecar:0.32.0
        imagePullPolicy: Always
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: release-name-kanister-mysql
              key: mysql-root-password
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: release-name-kanister-mysql
              key: mysql-password
        volumeMounts:
        - name: var-run-mysql
          mountPath: /var/run/mysqld/
      volumes:
      - name: var-run-mysql
        emptyDir: {}
      - name: data
        persistentVolumeClaim:
          claimName: release-name-kanister-mysql
---
# Source: kanister-mysql/templates/blueprint.yaml
apiVersion: cr.kanister.io/v1alpha1
kind: Blueprint
metadata:
  name: release-name-kanister-mysql-blueprint
  namespace: kasten-io
actions:
  backup:
    type: Deployment
    outputArtifacts:
      mysqlCloudDump:
        keyValue:
          path: '/mysql-backups/{{ .Deployment.Namespace }}/{{ .Deployment.Name }}/{{ toDate "2006-01-02T15:04:05.999999999Z07:00" .Time  | date "2006-01-02T15-04-05" }}/dump.sql.gz'
    phases:
    - func: KubeExec
      name: dumpToObjectStore
      args:
        namespace: "{{ .Deployment.Namespace }}"
        pod: "{{ index .Deployment.Pods 0 }}"
        container: kanister-sidecar
        command:
          - bash
          - -o
          - errexit
          - -o
          - pipefail
          - -c
          - |
            s3_path="/mysql-backups/{{ .Deployment.Namespace }}/{{ .Deployment.Name }}/{{ toDate "2006-01-02T15:04:05.999999999Z07:00" .Time  | date "2006-01-02T15-04-05" }}/dump.sql.gz"
            mysqldump --column-statistics=0 -h 127.0.0.1 -u root --password="${MYSQL_ROOT_PASSWORD}" --single-transaction --all-databases | gzip - | kando location push --profile '{{ toJson .Profile }}' --path ${s3_path} -
  restore:
    type: Deployment
    inputArtifactNames:
      - mysqlCloudDump
    phases:
    - func: KubeExec
      name: restoreFromBlobStore
      args:
        namespace: "{{ .Deployment.Namespace }}"
        pod: "{{ index .Deployment.Pods 0 }}"
        container: kanister-sidecar
        command:
          - bash
          - -o
          - errexit
          - -o
          - pipefail
          - -c
          - |
            s3_path="{{ .ArtifactsIn.mysqlCloudDump.KeyValue.path }}"
            kando location pull --profile '{{ toJson .Profile }}' --path ${s3_path} - | gunzip | mysql -h 127.0.0.1 -u root --password="${MYSQL_ROOT_PASSWORD}"
  delete:
    type: Namespace
    inputArtifactNames:
      - mysqlCloudDump
    phases:
    - func: KubeTask
      name: deleteFromBlobStore
      args:
        namespace: "{{ .Namespace.Name }}"
        image: kanisterio/kanister-tools:0.32.0
        command:
          - bash
          - -o
          - errexit
          - -o
          - pipefail
          - -c
          - |
            s3_path="{{ .ArtifactsIn.mysqlCloudDump.KeyValue.path }}"
            kando location delete --profile '{{ toJson .Profile }}' --path ${s3_path}
