---
# Source: aqs-http-gateway/templates/networkpolicy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: aqs-http-gateway-release-name  
  labels:
    app: aqs-http-gateway
    chart: aqs-http-gateway-0.0.1
    release: release-name
    heritage: Helm
spec:
  podSelector:    
    matchLabels:
      app: aqs-http-gateway
      release: release-name
  policyTypes:
    - Egress
    - Ingress
  ingress:
    - ports:
      - port: 8080
        protocol: TCP      
  egress:
---
# Source: aqs-http-gateway/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: aqs-http-gateway-release-name-secret-config  
  labels:
    app: aqs-http-gateway
    chart: aqs-http-gateway-0.0.1
    release: release-name
    heritage: Helm
type: Opaque
data:
  cassandra_pass: "YmFy"
  druid_pass: "YmFy"
---
# Source: aqs-http-gateway/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: aqs-http-gateway-base-config  
  labels:
    app: aqs-http-gateway
    chart: aqs-http-gateway-0.0.1
    release: release-name
    heritage: Helm
data:
  config.yaml: |-     
    service_name: 
    
    listen_address: 0.0.0.0
    listen_port: 8080
    
    # Log level, one of (in increasing severity): debug, info, warning, error and fatal
    log_level: info
    
    druid:
      host: http://localhost
      port: 8082
      datasource: my_datasource
      tls:
        ca: /etc/ssl/certs/wmf-ca-certificates.crt
    
    cassandra:
      port: 9042
      consistency: one
      hosts:
      local_dc: local
      authentication:
        username: foo
        password: bar
      tls:
        ca: /etc/ssl/certs/wmf-ca-certificates.crt
---
# Source: aqs-http-gateway/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: aqs-http-gateway-release-name  
  labels:
    app: aqs-http-gateway
    chart: aqs-http-gateway-0.0.1
    release: release-name
    heritage: Helm
spec:
  type: NodePort
  selector:
    app: aqs-http-gateway
    release: release-name
  ports:
    - name: http
      targetPort: 8080
      port: 8080
---
# Source: aqs-http-gateway/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aqs-http-gateway-release-name  
  labels:
    app: aqs-http-gateway
    chart: aqs-http-gateway-0.0.1
    release: release-name
    heritage: Helm
spec:
  selector:    
    matchLabels:
      app: aqs-http-gateway
      release: release-name
  replicas: 1
  template:
    metadata:
      labels:        
        app: aqs-http-gateway
        release: release-name
        routed_via: release-name
      annotations:
        checksum/secrets: 496d20bda2164c9c8709b52e8722590d289788310ff26af22d6421d543c37aae
        checksum/config: b3ce625379df02359067634f3b7988689d1d000fcd9f633aaf83c622fb475647        
    spec:
      containers:        
        # The main application container
        - name: aqs-http-gateway-release-name
          image: "docker-registry.wikimedia.org/:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          livenessProbe:
            tcpSocket:
              port: 8080
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
          env:
            - name: SERVICE_IDENTIFIER
              value: aqs-http-gateway-release-name
            - name: CASSANDRA_PASS
              valueFrom:
                secretKeyRef:
                  name: aqs-http-gateway-release-name-secret-config
                  key: cassandra_pass
            - name: DRUID_PASS
              valueFrom:
                secretKeyRef:
                  name: aqs-http-gateway-release-name-secret-config
                  key: druid_pass
          
          resources:
            requests:
              cpu: 200m
              memory: 200Mi
            limits:
              cpu: 1
              memory: 400Mi
          
          volumeMounts:
            - mountPath: /etc/aqs-http-gateway/
              name: config-volume        
      volumes:        
        
        # TLS configurations
        # Additional app-specific volumes.
        - configMap:
            name: aqs-http-gateway-base-config
          name: config-volume
---
# Source: aqs-http-gateway/templates/ingress.yaml
---
---
# Source: aqs-http-gateway/templates/tests/test-service-checker.yaml
apiVersion: v1
kind: Pod
metadata:
  name: 'aqs-http-gateway-release-name-service-checker'
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  containers:
  - name: 'aqs-http-gateway-release-name-service-checker'
    image: "docker-registry.wikimedia.org/service-checker"
    imagePullPolicy: IfNotPresent
    args: ["-t", "5", '$(AQS_HTTP_GATEWAY_RELEASE_NAME_SERVICE_HOST)', 'http://aqs-http-gateway-release-name:8080']
  dnsPolicy: ClusterFirst
  restartPolicy: Never
