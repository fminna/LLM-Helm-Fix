---
# Source: core-stack-api/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-core-stack-api
  labels:
    helm.sh/chart: core-stack-api-0.6.1
    app.kubernetes.io/name: core-stack-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
# Source: core-stack-api/templates/configmap-env.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-core-stack-api-envmap
  labels:
    helm.sh/chart: core-stack-api-0.6.1
    app.kubernetes.io/name: core-stack-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: core-stack-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-core-stack-api
  labels:
    helm.sh/chart: core-stack-api-0.6.1
    app.kubernetes.io/name: core-stack-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.metrics: orchestrate
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: grpc-svc
      protocol: TCP
      name: grpc-svc
    - port: 8081
      targetPort: http-svc
      protocol: TCP
      name: http-svc
    - port: 8082
      targetPort: http-metrics
      protocol: TCP
      name: http-metrics
  selector:
    app.kubernetes.io/name: core-stack-api
    app.kubernetes.io/instance: release-name
    app.metrics: orchestrate
---
# Source: core-stack-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-core-stack-api
  labels:
    helm.sh/chart: core-stack-api-0.6.1
    app.kubernetes.io/name: core-stack-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.metrics: orchestrate
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: core-stack-api
      app.kubernetes.io/instance: release-name
      app.metrics: orchestrate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: core-stack-api
        app.kubernetes.io/instance: release-name
        app.metrics: orchestrate
      annotations:
        checksum/config: fe07deb973d7a137e7e1cb3d95603046ca9b5a2d65f1ae6bf8df254ccde76ede
        checksum/secrets: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
    spec:
      imagePullSecrets:
        - name: existing-secret
      serviceAccountName: release-name-core-stack-api
      securityContext:
        {}
      initContainers:
        - name: core-stack-api-init
          securityContext:
            {}
          image: "docker.cloudsmith.io/consensys/docker-private/orchestrate:v2.4.0-rc2"
          imagePullPolicy: IfNotPresent
          command:
            - /go/bin/main
          args:
            - envelope-store
            - migrate
            - up
          envFrom:
            - configMapRef:
                name: release-name-core-stack-api-envmap
            - secretRef:
                name: release-name-core-stack-api-secretmap
                optional: true
      containers:
        - name: core-stack-api
          securityContext:
            {}
          image: "docker.cloudsmith.io/consensys/docker-private/orchestrate:v2.4.0-rc2"
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: release-name-core-stack-api-envmap
            - secretRef:
                name: release-name-core-stack-api-secretmap
                optional: true
          command:
            - /go/bin/main
          args:
            - envelope-store
            - run
          ports:
            - name: grpc-svc
              containerPort: 8080
              protocol: TCP
            - name: http-svc
              containerPort: 8081
              protocol: TCP
            - name: http-metrics
              containerPort: 8082
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /live
              port: http-metrics
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
          resources:
            {}
---
# Source: core-stack-api/templates/init-db-hook.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-core-stack-api-hook-envmap
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": hook-succeeded
  labels:
    helm.sh/chart: core-stack-api-0.6.1
    app.kubernetes.io/name: core-stack-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: core-stack-api/templates/init-db-hook.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-core-stack-api-initdb-job
  labels:
    helm.sh/chart: core-stack-api-0.6.1
    app.kubernetes.io/name: core-stack-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "10"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  backoffLimit: 6
  template:
    metadata:
      name: release-name-core-stack-api-initdb-pod
      labels:
        helm.sh/chart: core-stack-api-0.6.1
        app.kubernetes.io/name: core-stack-api
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
    spec:
      restartPolicy: Never
      imagePullSecrets:
        - name: existing-secret-hook-registry
      containers:
        - name: release-name-core-stack-api-initdb
          image: "docker.cloudsmith.io/consensys/docker-private/orchestrate:v2.4.0-rc2"
          imagePullPolicy: IfNotPresent
          command:
            - /go/bin/main
          args:
            - envelope-store
            - migrate
            - init
          envFrom:
            - configMapRef:
                name: release-name-core-stack-api-hook-envmap
            - secretRef:
                name: release-name-core-stack-api-hook-secretmap
                optional: true
