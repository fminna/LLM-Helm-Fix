---
# Source: control-plane/templates/config-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: control-plane
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: control-plane-1.3.1
  name: release-name-control-plane-config
stringData:
  syn-cp.yaml: |
    data_dir: /data
    server:
      http_addr: :8080
type: Opaque
---
# Source: control-plane/templates/image-pull-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: control-plane
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: control-plane-1.3.1
  name: release-name-control-plane-regcred
stringData:
  .dockerconfigjson: |
    {"auths":{"registry.synadia.io":{}}}
type: kubernetes.io/dockerconfigjson
---
# Source: control-plane/templates/single-replica-mode/data-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: control-plane
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: control-plane-1.3.1
  name: release-name-control-plane-encryption
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: control-plane/templates/single-replica-mode/postgres-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: control-plane
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: control-plane-1.3.1
  name: release-name-control-plane-postgres
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
# Source: control-plane/templates/single-replica-mode/prometheus-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: control-plane
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: control-plane-1.3.1
  name: release-name-control-plane-prometheus
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
# Source: control-plane/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: control-plane
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: control-plane-1.3.1
  name: release-name-control-plane
spec:
  ports:
  - name: http
    port: 80
    targetPort: http
  selector:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: control-plane
---
# Source: control-plane/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: control-plane
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: control-plane-1.3.1
  name: release-name-control-plane
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: control-plane
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: control-plane
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        checksum/config: 15bebdbd5e649bfce17d54753308ce10e5a293aa236d4f03daa642d5ad13fbd4
      labels:
        app.kubernetes.io/component: control-plane
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: control-plane
        app.kubernetes.io/version: 1.3.1
        helm.sh/chart: control-plane-1.3.1
    spec:
      containers:
      - args:
        - server
        - start
        - -c
        - /etc/syn-cp/syn-cp.yaml
        image: registry.synadia.io/control-plane:1.3.1
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: http
          periodSeconds: 10
        name: syn-cp
        ports:
        - containerPort: 8080
          name: http
        startupProbe:
          failureThreshold: 20
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 5
          periodSeconds: 3
        volumeMounts:
        - mountPath: /etc/syn-cp
          name: config
        - mountPath: /data
          name: data
        - mountPath: /data/encryption
          name: encryption
        - mountPath: /data/postgres
          name: postgres
        - mountPath: /data/prometheus
          name: prometheus
      enableServiceLinks: false
      imagePullSecrets:
      - name: release-name-control-plane-regcred
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      volumes:
      - name: config
        secret:
          secretName: release-name-control-plane-config
      - emptyDir: {}
        name: data
      - name: encryption
        persistentVolumeClaim:
          claimName: release-name-control-plane-encryption
      - name: postgres
        persistentVolumeClaim:
          claimName: release-name-control-plane-postgres
      - name: prometheus
        persistentVolumeClaim:
          claimName: release-name-control-plane-prometheus
