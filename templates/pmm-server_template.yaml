---
# Source: pmm-server/templates/secret-env.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-pmm-server-secret-env
stringData:
  SERVER_PASSWORD: a123123
---
# Source: pmm-server/templates/configmap-env.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-pmm-server-env
data:
  DATA_RETENTION: 192h
  DISABLE_UPDATES: "true"
  METRICS_RESOLUTION: 5s
  SERVER_USER: admin
---
# Source: pmm-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-pmm-server
  labels:
    helm.sh/chart: pmm-server-0.2.8
    app.kubernetes.io/name: pmm-server
    app: pmm-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.38.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 4431
      targetPort: https
      protocol: TCP
      name: https
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: pmm-server
    app: pmm-server
    app.kubernetes.io/instance: release-name
---
# Source: pmm-server/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-pmm-server
  labels:
    helm.sh/chart: pmm-server-0.2.8
    app.kubernetes.io/name: pmm-server
    app: pmm-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.38.1"
    app.kubernetes.io/managed-by: Helm
spec:
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: release-name-pmm-server
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
  serviceName: release-name-pmm-server
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: pmm-server
      app: pmm-server
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pmm-server
        app: pmm-server
        app.kubernetes.io/instance: release-name
        version: "2.38.1"
    spec:
      serviceAccountName: default
      automountServiceAccountToken: true
      securityContext:
        {}
      containers:
        - name: pmm-server
          securityContext:
            {}
          image: "percona/pmm-server:2.38.1"
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: release-name-pmm-server-env
            - secretRef:
                name: release-name-pmm-server-secret-env
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
            - name: prometheus
              containerPort: 9090
              protocol: TCP
          volumeMounts:
            - name: "release-name-pmm-server"
              mountPath: /srv/prometheus/data
              subPath: data
            - name: "release-name-pmm-server"
              mountPath: /srv/grafana
              subPath: grafana
            - name: "release-name-pmm-server"
              mountPath: /var/log
              subPath: log
            - name: "release-name-pmm-server"
              mountPath: /tmp
              subPath: tmp
            - name: "release-name-pmm-server"
              mountPath: /var/tmp
              subPath: tmp
            - name: "release-name-pmm-server"
              mountPath: /usr/tmp
              subPath: tmp
          
          readinessProbe:
            httpGet:
              port: 80
              path: /ping
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          
          resources:
            {}
      volumes:
        - name: tmp
          emptyDir: {}
        - name: var-tmp
          emptyDir: {}
        - name: usr-tmp
          emptyDir: {}
---
# Source: pmm-server/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-pmm-server-test-connection"
  labels:
    helm.sh/chart: pmm-server-0.2.8
    app.kubernetes.io/name: pmm-server
    app: pmm-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.38.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-pmm-server:4431']
  restartPolicy: Never
