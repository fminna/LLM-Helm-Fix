---
# Source: neo4j-reverse-proxy/templates/reverseProxyServer.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-reverseproxy-service
  namespace: "default"
spec:
  type: ClusterIP
  selector:
    name: release-name-reverseproxy
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
# Source: neo4j-reverse-proxy/templates/reverseProxyServer.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-reverseproxy-dep
  labels:
    name: release-name-reverseproxy-dep
  namespace: "default"
spec:
  replicas: 1
  selector:
    matchLabels:
      name: release-name-reverseproxy
  template:
    metadata:
      name: release-name-reverseproxy
      labels:
        name: release-name-reverseproxy
    spec:
      securityContext: 
        fsGroup: 7474
        fsGroupChangePolicy: Always
        runAsGroup: 7474
        runAsNonRoot: true
        runAsUser: 7474
      containers:
        - name: release-name-reverseproxy
          image: neo4j/helm-charts-reverse-proxy:5.19.0
          imagePullPolicy: Always
          securityContext: 
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            runAsGroup: 7474
            runAsNonRoot: true
            runAsUser: 7474
          ports:
            - containerPort: 80
          env:
            - name: SERVICE_NAME
              value: 
            - name: PORT
              value: "8080"
            - name: DOMAIN
              value: cluster.local
            - name: NAMESPACE
              value: default
---
# Source: neo4j-reverse-proxy/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-reverseproxy-ingress
  namespace: "default"  
spec:
  ingressClassName: "nginx"  
  rules:
    - http:
        paths:
          - pathType: Prefix
            backend:
              service:
                name: release-name-reverseproxy-service
                port:
                  number: 80
            path: /
