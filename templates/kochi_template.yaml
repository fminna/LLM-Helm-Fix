---
# Source: kochi/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kochi
  namespace: default
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::659743964700:role/npre-integ-us-kochi-role
---
# Source: kochi/templates/crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: iamroles.iam.amazonaws.com
spec:
  group: iam.amazonaws.com
  names:
    kind: IAMRole
    singular: iamrole
    plural: iamroles
  scope: Namespaced
  versions:
    - name: v1beta1
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: true
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              type: string
            kind:
              type: string
            metadata:
              type: object
            spec:
              properties:
                description:
                  type: string
                inlinePolicy:
                  items:
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                    required:
                      - name
                      - value
                    type: object
                  type: array
                maxSessionDuration:
                  format: int64
                  type: integer
                path:
                  type: string
                policies:
                  items:
                    type: string
                  type: array
                trustRelationship:
                  type: string
              required:
                - trustRelationship
              type: object
            status:
              properties:
                arn:
                  type: string
                roleId:
                  type: string
              type: object
---
# Source: kochi/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-kochi
rules:
- apiGroups:
  - iam.amazonaws.com
  resources:
  - iamroles
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
# Source: kochi/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kochi
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-kochi
subjects:
- kind: ServiceAccount
  name: release-name-kochi
  namespace: default
---
# Source: kochi/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kochi
  labels:
    control-plane: release-name-kochi
    controller-tools.k8s.io: "1.0"
spec:
  selector:
    control-plane: release-name-kochi
    controller-tools.k8s.io: "1.0"
  ports:
  - port: 443
---
# Source: kochi/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-kochi
  labels:
    control-plane: release-name-kochi
    controller-tools.k8s.io: "1.0"
spec:
  selector:
    matchLabels:
      control-plane: release-name-kochi
      controller-tools.k8s.io: "1.0"
  serviceName: release-name-kochi
  template:
    metadata:
      labels:
        control-plane: release-name-kochi
        controller-tools.k8s.io: "1.0"
    spec:
      serviceAccountName: release-name-kochi
      containers:
      - command:
          - /root/manager
        volumeMounts:
        - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
          name: aws-iam-token
          readOnly: true
        image: 'phntom/kochi:1.1.3'
        imagePullPolicy: IfNotPresent
        name: release-name-kochi
        env:
          - name: AWS_ROLE_ARN
            value: arn:aws:iam::659743964700:role/npre-integ-us-kochi-role
          - name: AWS_WEB_IDENTITY_TOKEN_FILE
            value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
          - name: AWS_ROLE_SESSION_NAME
            value: kochi
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 20Mi
      volumes:
        - name: aws-iam-token
          projected:
            defaultMode: 420
            sources:
              - serviceAccountToken:
                  audience: sts.amazonaws.com
                  expirationSeconds: 86400
                  path: token
      terminationGracePeriodSeconds: 10
