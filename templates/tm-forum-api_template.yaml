---
# Source: tm-forum-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-tm-forum-api-party-catalog
  namespace: "default"
  labels:
    
    helm.sh/chart: tm-forum-api-0.7.0
    app.kubernetes.io/version: "0.13.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: tm-forum-api-party-catalog
    app.kubernetes.io/instance: release-name
---
# Source: tm-forum-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-tm-forum-api-customer-bill-management
  namespace: "default"
  labels:
    
    helm.sh/chart: tm-forum-api-0.7.0
    app.kubernetes.io/version: "0.13.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: tm-forum-api-customer-bill-management
    app.kubernetes.io/instance: release-name
---
# Source: tm-forum-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-tm-forum-api-customer-management
  namespace: "default"
  labels:
    
    helm.sh/chart: tm-forum-api-0.7.0
    app.kubernetes.io/version: "0.13.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: tm-forum-api-customer-management
    app.kubernetes.io/instance: release-name
---
# Source: tm-forum-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-tm-forum-api-product-catalog
  namespace: "default"
  labels:
    
    helm.sh/chart: tm-forum-api-0.7.0
    app.kubernetes.io/version: "0.13.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: tm-forum-api-product-catalog
    app.kubernetes.io/instance: release-name
---
# Source: tm-forum-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-tm-forum-api-product-inventory
  namespace: "default"
  labels:
    
    helm.sh/chart: tm-forum-api-0.7.0
    app.kubernetes.io/version: "0.13.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: tm-forum-api-product-inventory
    app.kubernetes.io/instance: release-name
---
# Source: tm-forum-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-tm-forum-api-product-ordering-management
  namespace: "default"
  labels:
    
    helm.sh/chart: tm-forum-api-0.7.0
    app.kubernetes.io/version: "0.13.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: tm-forum-api-product-ordering-management
    app.kubernetes.io/instance: release-name
---
# Source: tm-forum-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-tm-forum-api-resource-catalog
  namespace: "default"
  labels:
    
    helm.sh/chart: tm-forum-api-0.7.0
    app.kubernetes.io/version: "0.13.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: tm-forum-api-resource-catalog
    app.kubernetes.io/instance: release-name
---
# Source: tm-forum-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-tm-forum-api-resource-function-activation
  namespace: "default"
  labels:
    
    helm.sh/chart: tm-forum-api-0.7.0
    app.kubernetes.io/version: "0.13.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: tm-forum-api-resource-function-activation
    app.kubernetes.io/instance: release-name
---
# Source: tm-forum-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-tm-forum-api-resource-inventory
  namespace: "default"
  labels:
    
    helm.sh/chart: tm-forum-api-0.7.0
    app.kubernetes.io/version: "0.13.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: tm-forum-api-resource-inventory
    app.kubernetes.io/instance: release-name
---
# Source: tm-forum-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-tm-forum-api-service-catalog
  namespace: "default"
  labels:
    
    helm.sh/chart: tm-forum-api-0.7.0
    app.kubernetes.io/version: "0.13.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: tm-forum-api-service-catalog
    app.kubernetes.io/instance: release-name
---
# Source: tm-forum-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-tm-forum-api-party-catalog
  namespace: "default"
  labels:
    
    helm.sh/chart: tm-forum-api-0.7.0
    app.kubernetes.io/version: "0.13.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: tm-forum-api-party-catalog
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tm-forum-api-party-catalog
        app.kubernetes.io/instance: release-name
        
        helm.sh/chart: tm-forum-api-0.7.0
        app.kubernetes.io/version: "0.13.2"
        app.kubernetes.io/managed-by: Helm
      annotations: 
        prometheus.io/scrape: "true"
        prometheus.io/path: /prometheus
        prometheus.io/port: "9090"
    spec: 
      serviceAccountName: default
      containers:
        - name: party-catalog
          imagePullPolicy: IfNotPresent
          image: "quay.io/fiware/tmforum-party-catalog:0.13.2"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: http-health
              containerPort: 9090
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: http-health
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: http-health
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          env:
            - name: ENDPOINTS_ALL_PORT
              value: "9090"
            - name: MICRONAUT_SERVER_PORT
              value: "8080"
            - name: MICRONAUT_METRICS_ENABLED
              value: "true"
            - name: ENDPOINTS_HEALTH_ENABLED
              value: "true"
            - name: LOGGER_LEVELS_ROOT
              value: "DEBUG"
            - name: MICRONAUT_HTTP_SERVICES_READ_TIMEOUT
              value: "30s"
            - name: MICRONAUT_HTTP_SERVICES_NGSI_PATH
              value: "ngsi-ld/v1"
            - name: MICRONAUT_HTTP_SERVICES_NGSI_URL
              value: "http://context-broker:1026"
            - name: GENERAL_BASEPATH
              value: "/tmf-api/party/v4"
            - name: GENERAL_CONTEXT_URL
              value: "https://smartdatamodels.org/context.jsonld"
            - name: MICRONAUT_ENVIRONMENTS
              value: in-memory
            - name: MICRONAUT_CACHES_ENTITIES_MAXIMUM_SIZE
              value: "1000"
            - name: MICRONAUT_CACHES_ENTITIES_EXPIRE_AFTER_WRITE
              value: "2s"
            - name: MICRONAUT_CACHES_ENTITIES_EXPIRE_AFTER_ACCESS
              value: "2s"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_MAXIMUM_SIZE
              value: "1000"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_EXPIRE_AFTER_WRITE
              value: "14d"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_EXPIRE_AFTER_ACCESS
              value: "14d"
---
# Source: tm-forum-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-tm-forum-api-customer-bill-management
  namespace: "default"
  labels:
    
    helm.sh/chart: tm-forum-api-0.7.0
    app.kubernetes.io/version: "0.13.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: tm-forum-api-customer-bill-management
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tm-forum-api-customer-bill-management
        app.kubernetes.io/instance: release-name
        
        helm.sh/chart: tm-forum-api-0.7.0
        app.kubernetes.io/version: "0.13.2"
        app.kubernetes.io/managed-by: Helm
      annotations: 
        prometheus.io/scrape: "true"
        prometheus.io/path: /prometheus
        prometheus.io/port: "9090"
    spec: 
      serviceAccountName: default
      containers:
        - name: customer-bill-management
          imagePullPolicy: IfNotPresent
          image: "quay.io/fiware/tmforum-customer-bill-management:0.13.2"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: http-health
              containerPort: 9090
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: http-health
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: http-health
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          env:
            - name: ENDPOINTS_ALL_PORT
              value: "9090"
            - name: MICRONAUT_SERVER_PORT
              value: "8080"
            - name: MICRONAUT_METRICS_ENABLED
              value: "true"
            - name: ENDPOINTS_HEALTH_ENABLED
              value: "true"
            - name: LOGGER_LEVELS_ROOT
              value: "DEBUG"
            - name: MICRONAUT_HTTP_SERVICES_READ_TIMEOUT
              value: "30s"
            - name: MICRONAUT_HTTP_SERVICES_NGSI_PATH
              value: "ngsi-ld/v1"
            - name: MICRONAUT_HTTP_SERVICES_NGSI_URL
              value: "http://context-broker:1026"
            - name: GENERAL_BASEPATH
              value: "/tmf-api/customerBillManagement/v4"
            - name: GENERAL_CONTEXT_URL
              value: "https://smartdatamodels.org/context.jsonld"
            - name: MICRONAUT_ENVIRONMENTS
              value: in-memory
            - name: MICRONAUT_CACHES_ENTITIES_MAXIMUM_SIZE
              value: "1000"
            - name: MICRONAUT_CACHES_ENTITIES_EXPIRE_AFTER_WRITE
              value: "2s"
            - name: MICRONAUT_CACHES_ENTITIES_EXPIRE_AFTER_ACCESS
              value: "2s"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_MAXIMUM_SIZE
              value: "1000"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_EXPIRE_AFTER_WRITE
              value: "14d"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_EXPIRE_AFTER_ACCESS
              value: "14d"
---
# Source: tm-forum-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-tm-forum-api-customer-management
  namespace: "default"
  labels:
    
    helm.sh/chart: tm-forum-api-0.7.0
    app.kubernetes.io/version: "0.13.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: tm-forum-api-customer-management
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tm-forum-api-customer-management
        app.kubernetes.io/instance: release-name
        
        helm.sh/chart: tm-forum-api-0.7.0
        app.kubernetes.io/version: "0.13.2"
        app.kubernetes.io/managed-by: Helm
      annotations: 
        prometheus.io/scrape: "true"
        prometheus.io/path: /prometheus
        prometheus.io/port: "9090"
    spec: 
      serviceAccountName: default
      containers:
        - name: customer-management
          imagePullPolicy: IfNotPresent
          image: "quay.io/fiware/tmforum-customer-management:0.13.2"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: http-health
              containerPort: 9090
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: http-health
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: http-health
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          env:
            - name: ENDPOINTS_ALL_PORT
              value: "9090"
            - name: MICRONAUT_SERVER_PORT
              value: "8080"
            - name: MICRONAUT_METRICS_ENABLED
              value: "true"
            - name: ENDPOINTS_HEALTH_ENABLED
              value: "true"
            - name: LOGGER_LEVELS_ROOT
              value: "DEBUG"
            - name: MICRONAUT_HTTP_SERVICES_READ_TIMEOUT
              value: "30s"
            - name: MICRONAUT_HTTP_SERVICES_NGSI_PATH
              value: "ngsi-ld/v1"
            - name: MICRONAUT_HTTP_SERVICES_NGSI_URL
              value: "http://context-broker:1026"
            - name: GENERAL_BASEPATH
              value: "/tmf-api/customerManagement/v4"
            - name: GENERAL_CONTEXT_URL
              value: "https://smartdatamodels.org/context.jsonld"
            - name: MICRONAUT_ENVIRONMENTS
              value: in-memory
            - name: MICRONAUT_CACHES_ENTITIES_MAXIMUM_SIZE
              value: "1000"
            - name: MICRONAUT_CACHES_ENTITIES_EXPIRE_AFTER_WRITE
              value: "2s"
            - name: MICRONAUT_CACHES_ENTITIES_EXPIRE_AFTER_ACCESS
              value: "2s"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_MAXIMUM_SIZE
              value: "1000"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_EXPIRE_AFTER_WRITE
              value: "14d"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_EXPIRE_AFTER_ACCESS
              value: "14d"
---
# Source: tm-forum-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-tm-forum-api-product-catalog
  namespace: "default"
  labels:
    
    helm.sh/chart: tm-forum-api-0.7.0
    app.kubernetes.io/version: "0.13.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: tm-forum-api-product-catalog
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tm-forum-api-product-catalog
        app.kubernetes.io/instance: release-name
        
        helm.sh/chart: tm-forum-api-0.7.0
        app.kubernetes.io/version: "0.13.2"
        app.kubernetes.io/managed-by: Helm
      annotations: 
        prometheus.io/scrape: "true"
        prometheus.io/path: /prometheus
        prometheus.io/port: "9090"
    spec: 
      serviceAccountName: default
      containers:
        - name: product-catalog
          imagePullPolicy: IfNotPresent
          image: "quay.io/fiware/tmforum-product-catalog:0.13.2"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: http-health
              containerPort: 9090
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: http-health
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: http-health
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          env:
            - name: ENDPOINTS_ALL_PORT
              value: "9090"
            - name: MICRONAUT_SERVER_PORT
              value: "8080"
            - name: MICRONAUT_METRICS_ENABLED
              value: "true"
            - name: ENDPOINTS_HEALTH_ENABLED
              value: "true"
            - name: LOGGER_LEVELS_ROOT
              value: "DEBUG"
            - name: MICRONAUT_HTTP_SERVICES_READ_TIMEOUT
              value: "30s"
            - name: MICRONAUT_HTTP_SERVICES_NGSI_PATH
              value: "ngsi-ld/v1"
            - name: MICRONAUT_HTTP_SERVICES_NGSI_URL
              value: "http://context-broker:1026"
            - name: GENERAL_BASEPATH
              value: "/tmf-api/productCatalogManagement/v4"
            - name: GENERAL_CONTEXT_URL
              value: "https://smartdatamodels.org/context.jsonld"
            - name: MICRONAUT_ENVIRONMENTS
              value: in-memory
            - name: MICRONAUT_CACHES_ENTITIES_MAXIMUM_SIZE
              value: "1000"
            - name: MICRONAUT_CACHES_ENTITIES_EXPIRE_AFTER_WRITE
              value: "2s"
            - name: MICRONAUT_CACHES_ENTITIES_EXPIRE_AFTER_ACCESS
              value: "2s"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_MAXIMUM_SIZE
              value: "1000"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_EXPIRE_AFTER_WRITE
              value: "14d"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_EXPIRE_AFTER_ACCESS
              value: "14d"
---
# Source: tm-forum-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-tm-forum-api-product-inventory
  namespace: "default"
  labels:
    
    helm.sh/chart: tm-forum-api-0.7.0
    app.kubernetes.io/version: "0.13.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: tm-forum-api-product-inventory
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tm-forum-api-product-inventory
        app.kubernetes.io/instance: release-name
        
        helm.sh/chart: tm-forum-api-0.7.0
        app.kubernetes.io/version: "0.13.2"
        app.kubernetes.io/managed-by: Helm
      annotations: 
        prometheus.io/scrape: "true"
        prometheus.io/path: /prometheus
        prometheus.io/port: "9090"
    spec: 
      serviceAccountName: default
      containers:
        - name: product-inventory
          imagePullPolicy: IfNotPresent
          image: "quay.io/fiware/tmforum-product-inventory:0.13.2"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: http-health
              containerPort: 9090
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: http-health
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: http-health
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          env:
            - name: ENDPOINTS_ALL_PORT
              value: "9090"
            - name: MICRONAUT_SERVER_PORT
              value: "8080"
            - name: MICRONAUT_METRICS_ENABLED
              value: "true"
            - name: ENDPOINTS_HEALTH_ENABLED
              value: "true"
            - name: LOGGER_LEVELS_ROOT
              value: "DEBUG"
            - name: MICRONAUT_HTTP_SERVICES_READ_TIMEOUT
              value: "30s"
            - name: MICRONAUT_HTTP_SERVICES_NGSI_PATH
              value: "ngsi-ld/v1"
            - name: MICRONAUT_HTTP_SERVICES_NGSI_URL
              value: "http://context-broker:1026"
            - name: GENERAL_BASEPATH
              value: "/tmf-api/productInventory/v4"
            - name: GENERAL_CONTEXT_URL
              value: "https://smartdatamodels.org/context.jsonld"
            - name: MICRONAUT_ENVIRONMENTS
              value: in-memory
            - name: MICRONAUT_CACHES_ENTITIES_MAXIMUM_SIZE
              value: "1000"
            - name: MICRONAUT_CACHES_ENTITIES_EXPIRE_AFTER_WRITE
              value: "2s"
            - name: MICRONAUT_CACHES_ENTITIES_EXPIRE_AFTER_ACCESS
              value: "2s"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_MAXIMUM_SIZE
              value: "1000"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_EXPIRE_AFTER_WRITE
              value: "14d"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_EXPIRE_AFTER_ACCESS
              value: "14d"
---
# Source: tm-forum-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-tm-forum-api-product-ordering-management
  namespace: "default"
  labels:
    
    helm.sh/chart: tm-forum-api-0.7.0
    app.kubernetes.io/version: "0.13.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: tm-forum-api-product-ordering-management
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tm-forum-api-product-ordering-management
        app.kubernetes.io/instance: release-name
        
        helm.sh/chart: tm-forum-api-0.7.0
        app.kubernetes.io/version: "0.13.2"
        app.kubernetes.io/managed-by: Helm
      annotations: 
        prometheus.io/scrape: "true"
        prometheus.io/path: /prometheus
        prometheus.io/port: "9090"
    spec: 
      serviceAccountName: default
      containers:
        - name: product-ordering-management
          imagePullPolicy: IfNotPresent
          image: "quay.io/fiware/tmforum-product-ordering-management:0.13.2"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: http-health
              containerPort: 9090
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: http-health
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: http-health
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          env:
            - name: ENDPOINTS_ALL_PORT
              value: "9090"
            - name: MICRONAUT_SERVER_PORT
              value: "8080"
            - name: MICRONAUT_METRICS_ENABLED
              value: "true"
            - name: ENDPOINTS_HEALTH_ENABLED
              value: "true"
            - name: LOGGER_LEVELS_ROOT
              value: "DEBUG"
            - name: MICRONAUT_HTTP_SERVICES_READ_TIMEOUT
              value: "30s"
            - name: MICRONAUT_HTTP_SERVICES_NGSI_PATH
              value: "ngsi-ld/v1"
            - name: MICRONAUT_HTTP_SERVICES_NGSI_URL
              value: "http://context-broker:1026"
            - name: GENERAL_BASEPATH
              value: "/tmf-api/productOrderingManagement/v4"
            - name: GENERAL_CONTEXT_URL
              value: "https://smartdatamodels.org/context.jsonld"
            - name: MICRONAUT_ENVIRONMENTS
              value: in-memory
            - name: MICRONAUT_CACHES_ENTITIES_MAXIMUM_SIZE
              value: "1000"
            - name: MICRONAUT_CACHES_ENTITIES_EXPIRE_AFTER_WRITE
              value: "2s"
            - name: MICRONAUT_CACHES_ENTITIES_EXPIRE_AFTER_ACCESS
              value: "2s"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_MAXIMUM_SIZE
              value: "1000"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_EXPIRE_AFTER_WRITE
              value: "14d"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_EXPIRE_AFTER_ACCESS
              value: "14d"
---
# Source: tm-forum-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-tm-forum-api-resource-catalog
  namespace: "default"
  labels:
    
    helm.sh/chart: tm-forum-api-0.7.0
    app.kubernetes.io/version: "0.13.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: tm-forum-api-resource-catalog
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tm-forum-api-resource-catalog
        app.kubernetes.io/instance: release-name
        
        helm.sh/chart: tm-forum-api-0.7.0
        app.kubernetes.io/version: "0.13.2"
        app.kubernetes.io/managed-by: Helm
      annotations: 
        prometheus.io/scrape: "true"
        prometheus.io/path: /prometheus
        prometheus.io/port: "9090"
    spec: 
      serviceAccountName: default
      containers:
        - name: resource-catalog
          imagePullPolicy: IfNotPresent
          image: "quay.io/fiware/tmforum-resource-catalog:0.13.2"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: http-health
              containerPort: 9090
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: http-health
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: http-health
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          env:
            - name: ENDPOINTS_ALL_PORT
              value: "9090"
            - name: MICRONAUT_SERVER_PORT
              value: "8080"
            - name: MICRONAUT_METRICS_ENABLED
              value: "true"
            - name: ENDPOINTS_HEALTH_ENABLED
              value: "true"
            - name: LOGGER_LEVELS_ROOT
              value: "DEBUG"
            - name: MICRONAUT_HTTP_SERVICES_READ_TIMEOUT
              value: "30s"
            - name: MICRONAUT_HTTP_SERVICES_NGSI_PATH
              value: "ngsi-ld/v1"
            - name: MICRONAUT_HTTP_SERVICES_NGSI_URL
              value: "http://context-broker:1026"
            - name: GENERAL_BASEPATH
              value: "/tmf-api/resourceCatalog/v4"
            - name: GENERAL_CONTEXT_URL
              value: "https://smartdatamodels.org/context.jsonld"
            - name: MICRONAUT_ENVIRONMENTS
              value: in-memory
            - name: MICRONAUT_CACHES_ENTITIES_MAXIMUM_SIZE
              value: "1000"
            - name: MICRONAUT_CACHES_ENTITIES_EXPIRE_AFTER_WRITE
              value: "2s"
            - name: MICRONAUT_CACHES_ENTITIES_EXPIRE_AFTER_ACCESS
              value: "2s"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_MAXIMUM_SIZE
              value: "1000"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_EXPIRE_AFTER_WRITE
              value: "14d"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_EXPIRE_AFTER_ACCESS
              value: "14d"
---
# Source: tm-forum-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-tm-forum-api-resource-function-activation
  namespace: "default"
  labels:
    
    helm.sh/chart: tm-forum-api-0.7.0
    app.kubernetes.io/version: "0.13.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: tm-forum-api-resource-function-activation
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tm-forum-api-resource-function-activation
        app.kubernetes.io/instance: release-name
        
        helm.sh/chart: tm-forum-api-0.7.0
        app.kubernetes.io/version: "0.13.2"
        app.kubernetes.io/managed-by: Helm
      annotations: 
        prometheus.io/scrape: "true"
        prometheus.io/path: /prometheus
        prometheus.io/port: "9090"
    spec: 
      serviceAccountName: default
      containers:
        - name: resource-function-activation
          imagePullPolicy: IfNotPresent
          image: "quay.io/fiware/tmforum-resource-function-activation:0.13.2"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: http-health
              containerPort: 9090
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: http-health
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: http-health
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          env:
            - name: ENDPOINTS_ALL_PORT
              value: "9090"
            - name: MICRONAUT_SERVER_PORT
              value: "8080"
            - name: MICRONAUT_METRICS_ENABLED
              value: "true"
            - name: ENDPOINTS_HEALTH_ENABLED
              value: "true"
            - name: LOGGER_LEVELS_ROOT
              value: "DEBUG"
            - name: MICRONAUT_HTTP_SERVICES_READ_TIMEOUT
              value: "30s"
            - name: MICRONAUT_HTTP_SERVICES_NGSI_PATH
              value: "ngsi-ld/v1"
            - name: MICRONAUT_HTTP_SERVICES_NGSI_URL
              value: "http://context-broker:1026"
            - name: GENERAL_BASEPATH
              value: "/tmf-api/resourceFunctionActivation/v4"
            - name: GENERAL_CONTEXT_URL
              value: "https://smartdatamodels.org/context.jsonld"
            - name: MICRONAUT_ENVIRONMENTS
              value: in-memory
            - name: MICRONAUT_CACHES_ENTITIES_MAXIMUM_SIZE
              value: "1000"
            - name: MICRONAUT_CACHES_ENTITIES_EXPIRE_AFTER_WRITE
              value: "2s"
            - name: MICRONAUT_CACHES_ENTITIES_EXPIRE_AFTER_ACCESS
              value: "2s"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_MAXIMUM_SIZE
              value: "1000"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_EXPIRE_AFTER_WRITE
              value: "14d"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_EXPIRE_AFTER_ACCESS
              value: "14d"
---
# Source: tm-forum-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-tm-forum-api-resource-inventory
  namespace: "default"
  labels:
    
    helm.sh/chart: tm-forum-api-0.7.0
    app.kubernetes.io/version: "0.13.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: tm-forum-api-resource-inventory
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tm-forum-api-resource-inventory
        app.kubernetes.io/instance: release-name
        
        helm.sh/chart: tm-forum-api-0.7.0
        app.kubernetes.io/version: "0.13.2"
        app.kubernetes.io/managed-by: Helm
      annotations: 
        prometheus.io/scrape: "true"
        prometheus.io/path: /prometheus
        prometheus.io/port: "9090"
    spec: 
      serviceAccountName: default
      containers:
        - name: resource-inventory
          imagePullPolicy: IfNotPresent
          image: "quay.io/fiware/tmforum-resource-inventory:0.13.2"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: http-health
              containerPort: 9090
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: http-health
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: http-health
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          env:
            - name: ENDPOINTS_ALL_PORT
              value: "9090"
            - name: MICRONAUT_SERVER_PORT
              value: "8080"
            - name: MICRONAUT_METRICS_ENABLED
              value: "true"
            - name: ENDPOINTS_HEALTH_ENABLED
              value: "true"
            - name: LOGGER_LEVELS_ROOT
              value: "DEBUG"
            - name: MICRONAUT_HTTP_SERVICES_READ_TIMEOUT
              value: "30s"
            - name: MICRONAUT_HTTP_SERVICES_NGSI_PATH
              value: "ngsi-ld/v1"
            - name: MICRONAUT_HTTP_SERVICES_NGSI_URL
              value: "http://context-broker:1026"
            - name: GENERAL_BASEPATH
              value: "/tmf-api/resourceInventoryManagement/v4"
            - name: GENERAL_CONTEXT_URL
              value: "https://smartdatamodels.org/context.jsonld"
            - name: MICRONAUT_ENVIRONMENTS
              value: in-memory
            - name: MICRONAUT_CACHES_ENTITIES_MAXIMUM_SIZE
              value: "1000"
            - name: MICRONAUT_CACHES_ENTITIES_EXPIRE_AFTER_WRITE
              value: "2s"
            - name: MICRONAUT_CACHES_ENTITIES_EXPIRE_AFTER_ACCESS
              value: "2s"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_MAXIMUM_SIZE
              value: "1000"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_EXPIRE_AFTER_WRITE
              value: "14d"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_EXPIRE_AFTER_ACCESS
              value: "14d"
---
# Source: tm-forum-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-tm-forum-api-service-catalog
  namespace: "default"
  labels:
    
    helm.sh/chart: tm-forum-api-0.7.0
    app.kubernetes.io/version: "0.13.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: tm-forum-api-service-catalog
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tm-forum-api-service-catalog
        app.kubernetes.io/instance: release-name
        
        helm.sh/chart: tm-forum-api-0.7.0
        app.kubernetes.io/version: "0.13.2"
        app.kubernetes.io/managed-by: Helm
      annotations: 
        prometheus.io/scrape: "true"
        prometheus.io/path: /prometheus
        prometheus.io/port: "9090"
    spec: 
      serviceAccountName: default
      containers:
        - name: service-catalog
          imagePullPolicy: IfNotPresent
          image: "quay.io/fiware/tmforum-service-catalog:0.13.2"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: http-health
              containerPort: 9090
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: http-health
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: http-health
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          env:
            - name: ENDPOINTS_ALL_PORT
              value: "9090"
            - name: MICRONAUT_SERVER_PORT
              value: "8080"
            - name: MICRONAUT_METRICS_ENABLED
              value: "true"
            - name: ENDPOINTS_HEALTH_ENABLED
              value: "true"
            - name: LOGGER_LEVELS_ROOT
              value: "DEBUG"
            - name: MICRONAUT_HTTP_SERVICES_READ_TIMEOUT
              value: "30s"
            - name: MICRONAUT_HTTP_SERVICES_NGSI_PATH
              value: "ngsi-ld/v1"
            - name: MICRONAUT_HTTP_SERVICES_NGSI_URL
              value: "http://context-broker:1026"
            - name: GENERAL_BASEPATH
              value: "/tmf-api/serviceCatalogManagement/v4"
            - name: GENERAL_CONTEXT_URL
              value: "https://smartdatamodels.org/context.jsonld"
            - name: MICRONAUT_ENVIRONMENTS
              value: in-memory
            - name: MICRONAUT_CACHES_ENTITIES_MAXIMUM_SIZE
              value: "1000"
            - name: MICRONAUT_CACHES_ENTITIES_EXPIRE_AFTER_WRITE
              value: "2s"
            - name: MICRONAUT_CACHES_ENTITIES_EXPIRE_AFTER_ACCESS
              value: "2s"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_MAXIMUM_SIZE
              value: "1000"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_EXPIRE_AFTER_WRITE
              value: "14d"
            - name: MICRONAUT_CACHES_SUBSCRIPTIONS_EXPIRE_AFTER_ACCESS
              value: "14d"
