---
# Source: pint/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-pint
  labels:
    helm.sh/chart: pint-0.1.1
    app.kubernetes.io/name: pint
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: pint/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-pint-config
  labels:
    app: pint
    chart: pint-0.1.1
    release: release-name
    heritage: Helm
data:
  pint.hcl: |
    parser {
      relaxed = [ "(.*)"]
    }
---
# Source: pint/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-pint
  labels:
    helm.sh/chart: pint-0.1.1
    app.kubernetes.io/name: pint
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8008
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: pint
    app.kubernetes.io/instance: release-name
---
# Source: pint/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-pint
  labels:
    helm.sh/chart: pint-0.1.1
    app.kubernetes.io/name: pint
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: pint
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pint
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-pint
      securityContext:
        {}
      volumes:
        - name: prometheus-rulefiles
          configMap:
            name: prometheus-rulefiles
        - name: pint-config
          configMap:
            name: pint-config
      containers:
        - name: pint
          securityContext:
            {}
          image: "ghcr.io/cloudflare/pint:0.43.1"
          imagePullPolicy: IfNotPresent
          command:
            - pint
          args:
            - --config=/config/pint.hcl
            - watch
            - --listen=:8008
            - /rules/*.yaml
          volumeMounts:
            - mountPath: /rules
              name: prometheus-rulefiles
            - mountPath: /config
              name: pint-config
          ports:
            - name: http
              containerPort: 8008
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: 8008
              port: http
          readinessProbe:
            httpGet:
              path: /metrics
              port: 8008
              port: http
          resources:
            {}
---
# Source: pint/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-pint-test-connection"
  labels:
    helm.sh/chart: pint-0.1.1
    app.kubernetes.io/name: pint
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-pint:8008']
  restartPolicy: Never
