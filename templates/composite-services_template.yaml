---
# Source: composite-services/templates/core/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-composite-services-core
  namespace: "default"
  labels:
    helm.sh/chart: composite-services-1.1.0
    app.kubernetes.io/name: composite-services
    app.kubernetes.io/instance: release-name
    enabler: composite-services
    app.kubernetes.io/component: core
    isMainInterface: "yes"
    tier: external
    app.kubernetes.io/version: "1.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  ports:
    - name: api
      port: 3000
      targetPort: 3000
      protocol: TCP
  selector:
    app.kubernetes.io/name: composite-services
    app.kubernetes.io/instance: release-name
    enabler: composite-services
    app.kubernetes.io/component: core
    isMainInterface: "yes"
    tier: external
---
# Source: composite-services/templates/nodered/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-composite-services-nodered
  namespace: "default"
  labels:
    helm.sh/chart: composite-services-1.1.0
    app.kubernetes.io/name: composite-services
    app.kubernetes.io/instance: release-name
    enabler: composite-services
    app.kubernetes.io/component: nodered
    isMainInterface: "no"
    tier: internal
    app.kubernetes.io/version: "1.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - name: nodered
      port: 1880
      targetPort: 1880
      protocol: TCP
  selector:
    app.kubernetes.io/name: composite-services
    app.kubernetes.io/instance: release-name
    enabler: composite-services
    app.kubernetes.io/component: nodered
    isMainInterface: "no"
    tier: internal
---
# Source: composite-services/templates/core/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-composite-services-core
  namespace: "default"
  labels:
    helm.sh/chart: composite-services-1.1.0
    app.kubernetes.io/name: composite-services
    app.kubernetes.io/instance: release-name
    enabler: composite-services
    app.kubernetes.io/component: core
    isMainInterface: "yes"
    tier: external
    app.kubernetes.io/version: "1.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: composite-services
      app.kubernetes.io/instance: release-name
      enabler: composite-services
      app.kubernetes.io/component: core
      isMainInterface: "yes"
      tier: external
  template:
    metadata:
      labels:
        helm.sh/chart: composite-services-1.1.0
        app.kubernetes.io/name: composite-services
        app.kubernetes.io/instance: release-name
        enabler: composite-services
        app.kubernetes.io/component: core
        isMainInterface: "yes"
        tier: external
        app.kubernetes.io/version: "1.1.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      securityContext:
        {}
      containers:
        - name: core
          securityContext:
            {}
          image: "assistiot/composite-services-manager_core:1.1.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: api
              containerPort: 3000
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          env:
            - name: API_PORT
              value: "3000"
            - name: NODERED_URL
              value: "http://release-name-composite-services-nodered:1880"
            - name: SMART_ORCHESTRATOR_URL
              value: "http://smart-api:8080"
            - name: VALID_NODES
              value: "edbe,ltse,http-endpoint,mqtt-http,http-http,http-mqtt"
            - name: HELM_CHART_REPOSITORY
              value: "public"
            - name: LTSE_URL
              value: "http://ltse-api:8080"
            - name: LTSE_INDEX
              value: "composite-services-flows"
---
# Source: composite-services/templates/nodered/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-composite-services-nodered
  namespace: "default"
  labels:
    helm.sh/chart: composite-services-1.1.0
    app.kubernetes.io/name: composite-services
    app.kubernetes.io/instance: release-name
    enabler: composite-services
    app.kubernetes.io/component: nodered
    isMainInterface: "no"
    tier: internal
    app.kubernetes.io/version: "1.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: composite-services
      app.kubernetes.io/instance: release-name
      enabler: composite-services
      app.kubernetes.io/component: nodered
      isMainInterface: "no"
      tier: internal
  template:
    metadata:
      labels:
        helm.sh/chart: composite-services-1.1.0
        app.kubernetes.io/name: composite-services
        app.kubernetes.io/instance: release-name
        enabler: composite-services
        app.kubernetes.io/component: nodered
        isMainInterface: "no"
        tier: internal
        app.kubernetes.io/version: "1.1.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      securityContext:
        {}
      containers:
        - name: nodered
          securityContext:
            {}
          image: "assistiot/composite-services-manager_nodered:1.1.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: nodered
              containerPort: 1880
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          env:
            - name: CORE_API_URL
              value: "http://release-name-composite-services-core:3000"
