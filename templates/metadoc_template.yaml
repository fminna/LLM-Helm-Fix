---
# Source: metadoc/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-serviceaccount
  namespace: novax
automountServiceAccountToken: true
---
# Source: metadoc/templates/post-config-map.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-config
  namespace: novax
data:
    example-post.md: |
      ---
      title: "Test af Metadoc nu med Posts fra Configmap"
      date: 2020-01-26T23:11:13Z
      draft: false
      tags: ["foo", "bar"]
      author: "Oscar A. B. Orellana"
      ---
      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor
      incididunt ut labore et dolore magna aliqua. Pellentesque eu tincidunt tortor
      aliquam nulla facilisi cras fermentum odio. A erat nam at lectus urna duis.
      Sed velit dignissim sodales ut eu sem. Lectus urna duis convallis convallis
      tellus. Diam sit amet nisl suscipit adipiscing bibendum est. Sed felis eget
      velit aliquet sagittis id consectetur. Vulputate dignissim suspendisse in est
      ante in nibh mauris cursus. Morbi quis commodo odio aenean. Mollis nunc sed id
      semper risus in hendrerit gravida rutrum.
      <!--more-->
      Lorem ipsum dolor sit amet, consectetur...
      
      ## What is Lorem Ipsum?
      ![Bilby Stampede](https://www.medcom.dk/media/6620/medcom10-arbejdsprogram-for-2016-2017.png?anchor=center&mode=crop&heightratio=0.3947368421052631578947368421&width=620&rnd=131103018310000000)
      
      Test 1234
      
      ```sequence
      Alice->Bob: Hello Bob, how are you?
      Note right of Bob: Bob thinks
      Bob-->Alice: I am good thanks!
      ```
      
      Test 1234
      
      Test 1234 Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor
      incididunt ut labore et dolore magna aliqua. Pellentesque eu tincidunt tortor
      aliquam nulla facilisi cras fermentum odio. A erat nam at lectus urna duis.
      Sed velit dignissim sodales ut eu sem. Lectus urna duis convallis convallis
      tellus. Diam sit amet nisl suscipit adipiscing bibendum est. Sed felis eget
      velit aliquet sagittis id consectetur. Vulputate dignissim suspendisse in est
      ante in nibh mauris cursus. Morbi quis commodo odio aenean. Mollis nunc sed id
      semper risus in hendrerit gravida rutrum.
      Vivamus ut tincidunt urna. Nam eu mollis dolor...
      
      ## In mollis cursus ligula
      Etiam et ligula sit amet urna aliquam suscipit...
      
      - Cras dui nulla,
      - ornare eget fermentum quis,
      - accumsan vitae purus.
      
      Nam eget pharetra arcu. Cras dui nulla, ornare eget...
      
      ### Nullam a risus maximus
      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor
      incididunt ut labore et dolore magna aliqua. Pellentesque eu tincidunt tortor
      aliquam nulla facilisi cras fermentum odio. A erat nam at lectus urna duis.
      Sed velit dignissim sodales ut eu sem. Lectus urna duis convallis convallis
      tellus. Diam sit amet nisl suscipit adipiscing bibendum est. Sed felis eget
      velit aliquet sagittis id consectetur. Vulputate dignissim suspendisse in est
      ante in nibh mauris cursus. Morbi quis commodo odio aenean. Mollis nunc sed id
      semper risus in hendrerit gravida rutrum.
      
      ### Donec vel accumsan justo
      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor
      incididunt ut labore et dolore magna aliqua. Pellentesque eu tincidunt tortor
      aliquam nulla facilisi cras fermentum odio. A erat nam at lectus urna duis.
      Sed velit dignissim sodales ut eu sem. Lectus urna duis convallis convallis
      tellus. Diam sit amet nisl suscipit adipiscing bibendum est. Sed felis eget
      velit aliquet sagittis id consectetur. Vulputate dignissim suspendisse in est
      ante in nibh mauris cursus. Morbi quis commodo odio aenean. Mollis nunc sed id
      semper risus in hendrerit gravida rutrum.
---
# Source: metadoc/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: novax
  name: release-name
rules:
  - apiGroups:
      - "apps"
      - "beta"
      - "networking"
      - "alpha"
      - ""
      - "endpoints"
      - "networking.k8s.io"
    resources: ["*"]
    verbs:
      - get
      - list
      - watch
---
# Source: metadoc/templates/role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
# This role binding allows "jane" to read pods in the "default" namespace.
# You need to already have a Role named "pod-reader" in that namespace.
kind: RoleBinding
metadata:
  name: release-name
  namespace: novax
subjects:
  # You can specify more than one "subject"
  - kind: ServiceAccount
    name: release-name-serviceaccount
    namespace: novax
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: Role #this must be Role or ClusterRole
  name: release-name # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io
---
# Source: metadoc/templates/app-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-app
  namespace: novax
spec:
  selector:
    app: release-name-app
  ports:
    - protocol: TCP
      port: 1643
      targetPort: 1643
---
# Source: metadoc/templates/web-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-web
  namespace: novax
spec:
  selector:
    app: release-name-web
  ports:
    - protocol: TCP
      port: 1313
      targetPort: 1313
---
# Source: metadoc/templates/app-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-app
  namespace: novax
  annotations:
  labels:
    app: release-name-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: release-name-app
  template:
    metadata:
      labels:
        app: release-name-app
    spec:
      serviceAccountName: release-name-serviceaccount
      automountServiceAccountToken: true
      containers:
        - name: release-name-app
          image: kvalitetsit/metadoc-app:main
          imagePullPolicy: Always
          ports:
            - containerPort: 1643
          env:
            - name: PORT
              value: "1643"
            - name: NAMESPACE
              value: novax
            - name: APP_DEPLOYMENT_NAME
              value: "release-name-app"
            - name: WEB_DEPLOYMENT_NAME
              value: "release-name-web"
      imagePullSecrets:
        - name: regcred
---
# Source: metadoc/templates/web-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-web
  namespace: novax
  annotations:
    hugoDocumentation: "true"
    hugoAppAbout: "Denne app udstiller en hjemmeside hvor man kan læse om sine services og tilgå service- og dokumentationslinks."
  labels:
    app: release-name-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app:  release-name-web
  template:
    metadata:
      labels:
        app:  release-name-web
    spec:
      serviceAccountName: release-name-serviceaccount
      automountServiceAccountToken: true
      containers:
        - name:  release-name-web
          image: kvalitetsit/metadoc-web:main
          imagePullPolicy: Always
          ports:
            - containerPort: 1313
          volumeMounts:
              - mountPath: "/src/content/posts"
                readOnly: true
                name: postsconfigmap
          env:
            - name: HUGO_PARAMS_Metadoc
              value: "http://metadoc.app.local"
      imagePullSecrets:
        - name: regcred
      volumes:
        - configMap:
            name: release-name-config
          name: postsconfigmap
---
# Source: metadoc/templates/app-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-app
  namespace: novax
  annotations:
    nginx.ingress.kubernetes.io/enable-cors: "true"
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: metadoc.app.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: release-name-app
                port:
                  number: 1643
---
# Source: metadoc/templates/web-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name:  release-name-web
  namespace: novax
  annotations:
spec:
  rules:
    - host:  metadoc.web.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: release-name-web
                port:
                  number: 1313
