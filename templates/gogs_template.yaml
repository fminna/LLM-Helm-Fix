---
# Source: gogs/templates/db-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-db
  labels:
    app: postgres
    chart: "gogs-0.1.3"
    release: release-name
    heritage: Helm
type: Opaque
data:
 
  
  dbPassword: "NXBrQW1DM3VpQQ=="
---
# Source: gogs/templates/gogs/gogs-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-gogs
  labels:
    app: release-name-gogs
    chart: "gogs-0.1.3"
    release: "release-name"
    heritage: "Helm"
data:
  app.ini: |-
    [server]
    
    EXTERNAL_URL = http://git.example.com:8280/
    DOMAIN = git.example.comHTTP_PORT = 3000
    UNIX_SOCKET_PERMISSION = 666
    LOCAL_ROOT_URL = %(PROTOCOL)s://%(HTTP_ADDR)s:%(HTTP_PORT)s/

    APP_DATA_PATH = /data

    SSH_DOMAIN = %(DOMAIN)s
    SSH_PORT = 22
    SSH_DOMAIN = release-name-gogs-ssh.default.svc.cluster.local
    SSH_LISTEN_HOST = release-name-gogs-ssh.default.svc.cluster.local
    SSH_PORT = 22

    
    DB_TYPE = postgres
    HOST = 127.0.0.1:5432
    NAME = gogs
    USER = postgres
    PASSWD = POSTGRES_PASSWORD
    

    [cache]
    ENABLED = true
    ADAPTER = memcache
    INTERVAL = 60
    HOST = 127.0.0.1:11211
    ITEM_TTL = 16h

    [lfs]
    OBJECTS_PATH = /data/lfs-objects
---
# Source: gogs/templates/gogs/gogs-http-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-gogs-http
  labels:
    app: release-name-gogs
    chart: "gogs-0.1.3"
    release: "release-name"
    heritage: "Helm"
  annotations:
    null
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 3000
    targetPort: 3000
  selector:
    app: release-name-gogs
---
# Source: gogs/templates/gogs/gogs-ssh-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-gogs-ssh
  labels:
    app: release-name-gogs
    chart: "gogs-0.1.3"
    release: "release-name"
    heritage: "Helm"
  annotations:
    null
spec:
  type: ClusterIP
  ports:
  - name: ssh
    port: 22
    targetPort: ssh
    protocol: TCP
  selector:
    app: release-name-gogs
---
# Source: gogs/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-gogs
  labels:
    app: release-name-gogs
    chart: "gogs-0.1.3"
    release: "release-name"
    heritage: "Helm"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: release-name-gogs
  template:
    metadata:
      labels:
        app: release-name-gogs
    spec:
      containers:
            
      - name: gogs
        image: gogs/gogs:0.12.3
        imagePullPolicy: IfNotPresent
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: release-name-db
              key: dbPassword
        ports:
        - name: ssh
          containerPort: 22
        - name: http
          containerPort: 3000
        livenessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 200
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 10
        readinessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        resources:
                limits:
                  cpu: 1
                  memory: 2Gi
                requests:
                  cpu: 1000m
                  memory: 500Mi
        volumeMounts:
        - name: gogs-data
          mountPath: /data
        - name: gogs-config
          mountPath: /app/gogs/custom
            
      - name: memcached
        image: memcached:1.5.19-alpine
        imagePullPolicy: IfNotPresent
        command:
          - memcached
          - -m 64
          - -o
          - modern
          - -v
        ports:
        - name: memcache
          containerPort: 11211
        livenessProbe:
          tcpSocket:
            port: memcache
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          tcpSocket:
            port: memcache
          initialDelaySeconds: 5
          timeoutSeconds: 1
        securityContext:
          runAsUser: 1000
        resources:
                requests:
                  cpu: 50m
                  memory: 64Mi
      initContainers:
            
      - name: init
        image: gogs/gogs:0.12.3
        imagePullPolicy: IfNotPresent
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: release-name-db
              key: dbPassword
        - name: SCRIPT
          value: &script |-
            mkdir -p /datatmp/gogs/conf
            if [ ! -f /datatmp/gogs/conf/app.ini ]; then
              sed "s/POSTGRES_PASSWORD/${POSTGRES_PASSWORD}/g" < /etc/gogs/app.ini > /datatmp/gogs/conf/app.ini
            fi
        command: ["/bin/sh",'-c', *script]
        volumeMounts:
        - name: gogs-data
          mountPath: /datatmp
        - name: gogs-config
          mountPath: /etc/gogs
            
      
      - name: "create-subpath"
        image: busybox:1.32.0
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args: ["-c","mkdir -p /var/lib/postgresql/data/pgdata/postgresql-db;"]
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data/pgdata
      - name: "change-permission-of-directory"
        image: busybox:1.32.0
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args: ["-c", "chown -R 999:999 /var/lib/postgresql/data/pgdata"]
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data/pgdata
          subPath: postgresql-db
      
      volumes:
      - name: gogs-data
        emptyDir: {}
      
      - name: postgres-data
        emptyDir: {}
      - name: gogs-config
        configMap:
          name: release-name-gogs
---
# Source: gogs/templates/tests/ssh-test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-gogs-test-ssh"
  labels:
    app: release-name-gogs
    chart: "gogs-0.1.3"
    release: "release-name"
    heritage: "Helm"
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['nc'] # nc -vz (your router's IP address) (port)
      args: ['-vz', 'release-name-gogs-ssh', '22']
  restartPolicy: Never
---
# Source: gogs/templates/tests/webui-test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-gogs-test-http"
  labels:
    app: release-name-gogs
    chart: "gogs-0.1.3"
    release: "release-name"
    heritage: "Helm"
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-gogs-http:3000']
  restartPolicy: Never
