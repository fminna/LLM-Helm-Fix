---
# Source: addons/templates/rbac/service-account.ym.tpl
apiVersion: v1
kind: ServiceAccount
metadata:
  name: addons-sa
  namespace: default
---
# Source: addons/templates/rbac/service-account.ym.tpl
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: default-addons-sa-rb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: "ClusterRole"
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: addons-sa
    namespace: default
---
# Source: addons/templates/aws/helm-ebs-csi.yml.tpl
apiVersion: crds.kloudlite.io/v1
kind: HelmChart
metadata:
  name: aws-ebs-csi
  namespace: kube-system
spec:
  chartRepoURL: https://kubernetes-sigs.github.io/aws-ebs-csi-driver
  chartVersion: 2.22.0
  chartName: aws-ebs-csi-driver

  jobVars:
    tolerations:
      - operator: Exists

  preInstall: |+
    # volume snapshot classes
    kubectl apply -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/client/config/crd/snapshot.storage.k8s.io_volumesnapshotclasses.yaml

    # volume snapshot contents
    kubectl apply -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/client/config/crd/snapshot.storage.k8s.io_volumesnapshotcontents.yaml

    # volume snapshots
    kubectl apply -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/client/config/crd/snapshot.storage.k8s.io_volumesnapshots.yaml

    # installing volume snapshot controller RBACs
    kubectl apply -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/deploy/kubernetes/snapshot-controller/rbac-snapshot-controller.yaml

    # installing volume snapshot controller deployment
    kubectl apply -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/deploy/kubernetes/snapshot-controller/setup-snapshot-controller.yaml

  postInstall: |+
    echo "making sure sc-ext4 is the default storage class"

    kubectl get sc/local-path -o=jsonpath={.metadata.name}
    exit_code=$?

    if [ $exit_code -eq 0 ]; then
      kubectl patch storageclass local-path -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"false"}}}'
    fi

    kubectl get sc/sc-ext4 -o=jsonpath={.metadata.name}
    exit_code=$?
    if [ $exit_code -eq 0 ]; then
      kubectl patch storageclass sc-ext4 -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'
    fi

  values:
    customLabels:
      kloudlite.io/part-of: "addons"
    storageClasses: 
      - name: sc-xfs
        labels:
          kloudlite.io/part-of: addons
        volumeBindingMode: "WaitForFirstConsumer"
        reclaimPolicy: "Retain"
        parameters:
          encrypted: "false"
          type: "gp3"
          fsType: "xfs"

      - name: sc-ext4
        labels:
          kloudlite.io/part-of: addons
        volumeBindingMode: "WaitForFirstConsumer"
        reclaimPolicy: "Retain"
        parameters:
          encrypted: "false"
          type: "gp3"
          fsType: "ext4"
    controller:
      nodeSelector: 
        node-role.kubernetes.io/master: "true"
      tolerations: 
        - key: node-role.kubernetes.io/master
          operator: Exists
    node:
      nodeSelector: 
        kloudlite.io/node.has-role: agent

      # tolerate any taints
      tolerations:
        - operator: "Exists"
---
# Source: addons/templates/aws/helm-spot-node-terminator.yml.tpl
apiVersion: crds.kloudlite.io/v1
kind: HelmChart
metadata:
  name: spot-node-termination-handler
  namespace: default
spec:
  chartName: aws-spot-termination-handler
  chartRepoURL: https://kloudlite.github.io/helm-charts
  chartVersion: v1.0.4
  jobVars:
    tolerations:
    - operator: Exists
  values:
    nodeSelector:
      kloudlite.io/node.is-spot: "true"
    tolerations:
      - operator: Exists
---
# Source: addons/templates/cluster-autoscaler/cluster-autoscaler.yml.tpl
apiVersion: crds.kloudlite.io/v1
kind: HelmChart
metadata:
  name: cluster-autoscaler
  namespace: default
spec:
  chartRepoURL: https://kloudlite.github.io/helm-charts
  chartName: "kloudlite-autoscalers"
  chartVersion: v1.0.4
  jobVars:
    tolerations:
      - operator: Exists
  values:
    clusterAutoscaler:
      enabled: true
      nodeSelector:
        node-role.kubernetes.io/master: "true"
      tolerations:
        - operator: Exists
      configuration:
        scaleDownUnneededTime: 1m
