---
# Source: interlay-firesquid/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-interlay-firesquid
  labels:
    helm.sh/chart: interlay-firesquid-0.1.11
    app.kubernetes.io/name: interlay-firesquid
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: interlay-firesquid/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-interlay-firesquid-query-node
  labels:
    helm.sh/chart: interlay-firesquid-0.1.11
    app.kubernetes.io/name: interlay-firesquid
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: interlay-firesquid
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: substrate-query-node
---
# Source: interlay-firesquid/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-interlay-firesquid-gateway
  labels:
    helm.sh/chart: interlay-firesquid-0.1.11
    app.kubernetes.io/name: interlay-firesquid
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: interlay-firesquid
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: substrate-gateway
---
# Source: interlay-firesquid/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-interlay-firesquid-explorer
  labels:
    helm.sh/chart: interlay-firesquid-0.1.11
    app.kubernetes.io/name: interlay-firesquid
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: interlay-firesquid
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: substrate-explorer
---
# Source: interlay-firesquid/templates/deployment-explorer.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-interlay-firesquid-explorer
  labels:
    helm.sh/chart: interlay-firesquid-0.1.11
    app.kubernetes.io/name: interlay-firesquid
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: substrate-explorer
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: interlay-firesquid
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: substrate-explorer
  template:
    metadata:
      labels:
        app.kubernetes.io/name: interlay-firesquid
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: substrate-explorer
    spec:
      serviceAccountName: release-name-interlay-firesquid
      securityContext:
        {}
      containers:
        - name: explorer
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          image: "docker.io/subsquid/substrate-explorer:firesquid"
          imagePullPolicy: IfNotPresent
          env:
          envFrom:
            - secretRef:
                name: 
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /graphql
              port: http
          livenessProbe:
            httpGet:
              path: /graphql
              port: http
          resources:
            {}
---
# Source: interlay-firesquid/templates/deployment-gateway.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-interlay-firesquid-gateway
  labels:
    helm.sh/chart: interlay-firesquid-0.1.11
    app.kubernetes.io/name: interlay-firesquid
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: substrate-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: interlay-firesquid
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: substrate-gateway
  template:
    metadata:
      labels:
        app.kubernetes.io/name: interlay-firesquid
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: substrate-gateway
    spec:
      serviceAccountName: release-name-interlay-firesquid
      securityContext:
        {}
      containers:
        - name: gateway
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          image: "docker.io/subsquid/substrate-gateway:firesquid"
          imagePullPolicy: IfNotPresent
          env:
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: http
          livenessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: interlay-firesquid/templates/deployment-ingest.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-interlay-firesquid-ingest
  labels:
    helm.sh/chart: interlay-firesquid-0.1.11
    app.kubernetes.io/name: interlay-firesquid
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: substrate-ingest
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: interlay-firesquid
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: substrate-ingest
  template:
    metadata:
      labels:
        app.kubernetes.io/name: interlay-firesquid
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: substrate-ingest
    spec:
      serviceAccountName: release-name-interlay-firesquid
      securityContext:
        {}
      containers:
        - name: ingest
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          image: "docker.io/subsquid/substrate-ingest:firesquid"
          imagePullPolicy: IfNotPresent
          env:
          envFrom:
            - secretRef:
                name: 
          ports:
            - name: metrics
              containerPort: 9090
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: metrics
          readinessProbe:
            tcpSocket:
              port: metrics
          resources:
            {}
---
# Source: interlay-firesquid/templates/deployment-processor.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-interlay-firesquid-processor
  labels:
    helm.sh/chart: interlay-firesquid-0.1.11
    app.kubernetes.io/name: interlay-firesquid
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: substrate-processor
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: interlay-firesquid
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: substrate-processor
  template:
    metadata:
      labels:
        app.kubernetes.io/name: interlay-firesquid
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: substrate-processor
    spec:
      serviceAccountName: release-name-interlay-firesquid
      securityContext:
        {}
      initContainers:
        - name: dbmigrations
          args:
          - |
            ./node_modules/.bin/squid-typeorm-migration apply
          command:
          - sh
          - -c
          envFrom:
          - secretRef:
              name: 
          image: "docker.io/interlayhq/interbtc-hydra-processor:0.10.5"
          imagePullPolicy: IfNotPresent
      containers:
        - name: processor
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          image: "docker.io/interlayhq/interbtc-hydra-processor:0.10.5"
          imagePullPolicy: IfNotPresent
          env:
            - name: ARCHIVE_ENDPOINT
              value: http://release-name-interlay-firesquid-gateway/graphql
            - name: CHAIN_ENDPOINT
              value: ws://interbtc-rpc.interbtc-parachain:9944
          envFrom:
            - secretRef:
                name: 
          ports:
            - name: metrics
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: metrics
          readinessProbe:
            tcpSocket:
              port: metrics
          resources:
            {}
---
# Source: interlay-firesquid/templates/deployment-query-node.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-interlay-firesquid-query-node
  labels:
    helm.sh/chart: interlay-firesquid-0.1.11
    app.kubernetes.io/name: interlay-firesquid
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: substrate-query-node
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: interlay-firesquid
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: substrate-query-node
  template:
    metadata:
      labels:
        app.kubernetes.io/name: interlay-firesquid
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: substrate-query-node
    spec:
      serviceAccountName: release-name-interlay-firesquid
      securityContext:
        {}
      containers:
        - name: query-node
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          image: "docker.io/interlayhq/interbtc-hydra-processor:0.10.5"
          imagePullPolicy: IfNotPresent
          command: ["tini", "--"]
          args:
            - ./node_modules/.bin/squid-graphql-server
            - --subscriptions
          env:
            - name: ARCHIVE_ENDPOINT
              value: http://release-name-interlay-firesquid-gateway/graphql
          envFrom:
            - secretRef:
                name: 
          ports:
            - name: http
              containerPort: 4000
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /graphql
              port: http
          livenessProbe:
            httpGet:
              path: /graphql
              port: http
          resources:
            {}
