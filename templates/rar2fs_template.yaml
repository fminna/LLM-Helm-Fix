---
# Source: rar2fs/templates/common.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-rar2fs-destination
  namespace: default
  labels:
    app: "rar2fs-0.0.13"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "rar2fs"
    app.kubernetes.io/version: "latest"
    helm-revision: "1"
    helm.sh/chart: "rar2fs-0.0.13"
    release: "release-name"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
---
# Source: rar2fs/templates/common.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-rar2fs-source
  namespace: default
  labels:
    app: "rar2fs-0.0.13"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "rar2fs"
    app.kubernetes.io/version: "latest"
    helm-revision: "1"
    helm.sh/chart: "rar2fs-0.0.13"
    release: "release-name"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
---
# Source: rar2fs/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-rar2fs
  namespace: default
  labels:
    app: "rar2fs-0.0.13"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "rar2fs"
    app.kubernetes.io/version: "latest"
    helm-revision: "1"
    helm.sh/chart: "rar2fs-0.0.13"
    release: "release-name"
spec:  
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      pod.name: main
      app.kubernetes.io/name: rar2fs
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app: "rar2fs-0.0.13"
        app.kubernetes.io/instance: "release-name"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/name: "rar2fs"
        app.kubernetes.io/version: "latest"
        helm-revision: "1"
        helm.sh/chart: "rar2fs-0.0.13"
        pod.lifecycle: "permanent"
        pod.name: "main"
        release: "release-name"
      annotations:
        rollme: "VyH80"
    spec:
      serviceAccountName: default
      automountServiceAccountToken: false
      runtimeClassName: 
      hostNetwork: false
      hostPID: false
      hostIPC: false
      shareProcessNamespace: false
      enableServiceLinks: false
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/arch: amd64
      topologySpreadConstraints:
        - maxSkew: 1
          whenUnsatisfiable: ScheduleAnyway
          topologyKey: "truecharts.org/rack"
          labelSelector:
            matchLabels:      
              pod.name: main
              app.kubernetes.io/name: rar2fs
              app.kubernetes.io/instance: release-name
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
        - maxSkew: 1
          whenUnsatisfiable: ScheduleAnyway
          topologyKey: "kubernetes.io/hostname"
          labelSelector:
            matchLabels:      
              pod.name: main
              app.kubernetes.io/name: rar2fs
              app.kubernetes.io/instance: release-name
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      terminationGracePeriodSeconds: 60
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 5
          - 10
          - 20
          - 24
          - 568
        sysctls: []
      hostUsers: true
      containers:
        - name: release-name-rar2fs
          image: ghcr.io/zimme/rar2fs:latest@sha256:8a8756c0452a7ce68654ac46d80c88fb00ae76b4c7f4773a17c05bc4d7f78807
          imagePullPolicy: IfNotPresent
          tty: false
          stdin: false
          volumeMounts:
            - name: destination
              mountPath: /destination
              readOnly: false
            - name: devshm
              mountPath: /dev/shm
              readOnly: false
            - name: fuse
              mountPath: /dev/fuse
              readOnly: false
            - name: shared
              mountPath: /shared
              readOnly: false
            - name: source
              mountPath: /source
              readOnly: false
            - name: tmp
              mountPath: /tmp
              readOnly: false
            - name: varlogs
              mountPath: /var/logs
              readOnly: false
            - name: varrun
              mountPath: /var/run
              readOnly: false
          
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits: 
              cpu: 4000m 
              memory: 8Gi
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
            runAsGroup: 0
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: true
            privileged: true
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add:
                - MKNOD
                - SYS_ADMIN
                - CHOWN
                - SETUID
                - SETGID
                - FOWNER
                - DAC_OVERRIDE
              drop:
                - ALL
          env:
            - name: "TZ"
              value: "UTC"
            - name: "UMASK"
              value: "0022"
            - name: "UMASK_SET"
              value: "0022"
            - name: "PUID"
              value: "568"
            - name: "USER_ID"
              value: "568"
            - name: "UID"
              value: "568"
            - name: "PGID"
              value: "568"
            - name: "GROUP_ID"
              value: "568"
            - name: "GID"
              value: "568"
      volumes:
        - name: destination
          persistentVolumeClaim:
            claimName: release-name-rar2fs-destination
        - name: devshm
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: fuse
          hostPath:
            path: /dev/fuse
        - name: shared
          emptyDir: {}
        - name: source
          persistentVolumeClaim:
            claimName: release-name-rar2fs-source
        - name: tmp
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: varlogs
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: varrun
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
