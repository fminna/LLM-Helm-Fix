---
# Source: tekton-pipelines/templates/controller/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tekton-pipelines-controller
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: tekton-pipelines/templates/webhook/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tekton-pipelines-webhook
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: tekton-pipelines/templates/webhook/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: webhook-certs
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    pipeline.tekton.dev/release: v0.37.2
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: tekton-pipelines/templates/configmaps/artifact-bucket.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-artifact-bucket
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: tekton-pipelines/templates/configmaps/artifact-pvc.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-artifact-pvc
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: tekton-pipelines/templates/configmaps/defaults.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-defaults
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # default-timeout-minutes contains the default number of
    # minutes to use for TaskRun and PipelineRun, if none is specified.
    default-timeout-minutes: "60"  # 60 minutes

    # default-service-account contains the default service account name
    # to use for TaskRun and PipelineRun, if none is specified.
    default-service-account: "default"

    # default-managed-by-label-value contains the default value given to the
    # "app.kubernetes.io/managed-by" label applied to all Pods created for
    # TaskRuns. If a user's requested TaskRun specifies another value for this
    # label, the user's request supercedes.
    default-managed-by-label-value: "tekton-pipelines"

    # default-pod-template contains the default pod template to use for
    # TaskRun and PipelineRun. If a pod template is specified on the
    # PipelineRun, the default-pod-template is merged with that one.
    # default-pod-template:

    # default-affinity-assistant-pod-template contains the default pod template
    # to use for affinity assistant pods. If a pod template is specified on the
    # PipelineRun, the default-affinity-assistant-pod-template is merged with
    # that one.
    # default-affinity-assistant-pod-template:

    # default-cloud-events-sink contains the default CloudEvents sink to be
    # used for TaskRun and PipelineRun, when no sink is specified.
    # Note that right now it is still not possible to set a PipelineRun or
    # TaskRun specific sink, so the default is the only option available.
    # If no sink is specified, no CloudEvent is generated
    # default-cloud-events-sink:

    # default-task-run-workspace-binding contains the default workspace
    # configuration provided for any Workspaces that a Task declares
    # but that a TaskRun does not explicitly provide.
    # default-task-run-workspace-binding: |
    #   emptyDir: {}

    # default-max-matrix-combinations-count contains the default maximum number
    # of combinations from a Matrix, if none is specified.
    default-max-matrix-combinations-count: "256"
---
# Source: tekton-pipelines/templates/configmaps/feature-flags.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: feature-flags
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
data:
  disable-affinity-assistant: "false"
  disable-creds-init: "false"
  enable-api-fields: "stable"
  enable-custom-tasks: "false"
  enable-tekton-oci-bundles: "false"
  require-git-ssh-secret-known-hosts: "false"
  running-in-environment-with-injected-sidecars: "true"
  send-cloudevents-for-runs: "false"
---
# Source: tekton-pipelines/templates/configmaps/leader-election.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-leader-election
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
data:
  lease-duration: "60s"
  renew-deadline: "40s"
  retry-period: "10s"
---
# Source: tekton-pipelines/templates/configmaps/logging.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-logging
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
data:
  loglevel.controller: "info"
  loglevel.webhook: "info"
  zap-logger-config: "{\n  \"level\": \"info\",\n  \"development\": false,\n  \"sampling\": {\n    \"initial\": 100,\n    \"thereafter\": 100\n  },\n  \"outputPaths\": [\"stdout\"],\n  \"errorOutputPaths\": [\"stderr\"],\n  \"encoding\": \"json\",\n  \"encoderConfig\": {\n    \"timeKey\": \"ts\",\n    \"levelKey\": \"level\",\n    \"nameKey\": \"logger\",\n    \"callerKey\": \"caller\",\n    \"messageKey\": \"msg\",\n    \"stacktraceKey\": \"stacktrace\",\n    \"lineEnding\": \"\",\n    \"levelEncoder\": \"\",\n    \"timeEncoder\": \"iso8601\",\n    \"durationEncoder\": \"\",\n    \"callerEncoder\": \"\"\n  }\n}\n"
---
# Source: tekton-pipelines/templates/configmaps/observability.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-observability
  labels:
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # metrics.backend-destination field specifies the system metrics destination.
    # It supports either prometheus (the default) or stackdriver.
    # Note: Using Stackdriver will incur additional charges.
    metrics.backend-destination: prometheus

    # metrics.stackdriver-project-id field specifies the Stackdriver project ID. This
    # field is optional. When running on GCE, application default credentials will be
    # used and metrics will be sent to the cluster's project if this field is
    # not provided.
    metrics.stackdriver-project-id: "<your stackdriver project id>"

    # metrics.allow-stackdriver-custom-metrics indicates whether it is allowed
    # to send metrics to Stackdriver using "global" resource type and custom
    # metric type. Setting this flag to "true" could cause extra Stackdriver
    # charge.  If metrics.backend-destination is not Stackdriver, this is
    # ignored.
    metrics.allow-stackdriver-custom-metrics: "false"
    metrics.taskrun.level: "task"
    metrics.taskrun.duration-type: "histogram"
    metrics.pipelinerun.level: "pipeline"
    metrics.pipelinerun.duration-type: "histogram"
---
# Source: tekton-pipelines/templates/configmaps/pipelines-info.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: pipelines-info
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
data:
  version: "v0.37.2"
---
# Source: tekton-pipelines/templates/configmaps/registry-cert.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-registry-cert
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: tekton-pipelines/templates/aggregate-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tekton-aggregate-edit
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - tekton.dev
  resources:
  - tasks
  - taskruns
  - pipelines
  - pipelineruns
  - pipelineresources
  - conditions
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
---
# Source: tekton-pipelines/templates/aggregate-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tekton-aggregate-view
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    rbac.authorization.k8s.io/aggregate-to-view: "true"
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - tekton.dev
  resources:
  - tasks
  - taskruns
  - pipelines
  - pipelineruns
  - pipelineresources
  - conditions
  verbs:
  - get
  - list
  - watch
---
# Source: tekton-pipelines/templates/controller/cluster-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tekton-pipelines-controller-cluster-access
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - tasks
  - clustertasks
  - taskruns
  - pipelines
  - pipelineruns
  - pipelineresources
  - conditions
  - runs
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - taskruns/finalizers
  - pipelineruns/finalizers
  - runs/finalizers
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - tasks/status
  - clustertasks/status
  - taskruns/status
  - pipelines/status
  - pipelineruns/status
  - pipelineresources/status
  - runs/status
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
---
# Source: tekton-pipelines/templates/controller/cluster-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tekton-pipelines-controller-tenant-access
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  - limitranges
  - secrets
  - serviceaccounts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - resolution.tekton.dev
  resources:
  - resolutionrequests
  verbs:
  - get
  - list
  - watch
  - create
  - delete
---
# Source: tekton-pipelines/templates/webhook/cluster-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tekton-pipelines-webhook-cluster-access
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - pipelines.tekton.dev
  - pipelineruns.tekton.dev
  - runs.tekton.dev
  - tasks.tekton.dev
  - clustertasks.tekton.dev
  - taskruns.tekton.dev
  - pipelineresources.tekton.dev
  - conditions.tekton.dev
  resources:
  - customresourcedefinitions
  - customresourcedefinitions/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - list
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resourceNames:
  - webhook.pipeline.tekton.dev
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - get
  - update
  - delete
- apiGroups:
  - admissionregistration.k8s.io
  resourceNames:
  - validation.webhook.pipeline.tekton.dev
  - config.webhook.pipeline.tekton.dev
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update
  - delete
- apiGroups:
  - policy
  resourceNames:
  - tekton-pipelines
  resources:
  - podsecuritypolicies
  verbs:
  - use
- apiGroups:
  - ""
  resourceNames:
  - tekton-pipelines
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resourceNames:
  - tekton-pipelines
  resources:
  - namespaces/finalizers
  verbs:
  - update
---
# Source: tekton-pipelines/templates/controller/cluster-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tekton-pipelines-controller-cluster-access
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'tekton-pipelines-controller-cluster-access'
subjects:
- kind: ServiceAccount
  name: 'tekton-pipelines-controller'
  namespace: 'default'
---
# Source: tekton-pipelines/templates/controller/cluster-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tekton-pipelines-controller-tenant-access
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'tekton-pipelines-controller-tenant-access'
subjects:
- kind: ServiceAccount
  name: 'tekton-pipelines-controller'
  namespace: 'default'
---
# Source: tekton-pipelines/templates/webhook/cluster-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tekton-pipelines-webhook-cluster-access
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'tekton-pipelines-webhook-cluster-access'
subjects:
- kind: ServiceAccount
  name: 'tekton-pipelines-webhook'
  namespace: 'default'
---
# Source: tekton-pipelines/templates/controller/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tekton-pipelines-controller
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resourceNames:
  - config-logging
  - config-observability
  - config-artifact-bucket
  - config-artifact-pvc
  - feature-flags
  - config-leader-election
  - config-registry-cert
  resources:
  - configmaps
  verbs:
  - get
- apiGroups:
  - policy
  resourceNames:
  - tekton-pipelines
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
# Source: tekton-pipelines/templates/info-role-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tekton-pipelines-info
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resourceNames:
  - pipelines-info
  resources:
  - configmaps
  verbs:
  - get
---
# Source: tekton-pipelines/templates/leader-election-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tekton-pipelines-leader-election
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
---
# Source: tekton-pipelines/templates/webhook/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tekton-pipelines-webhook
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resourceNames:
  - config-logging
  - config-observability
  - config-leader-election
  - feature-flags
  resources:
  - configmaps
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resourceNames:
  - webhook-certs
  resources:
  - secrets
  verbs:
  - get
  - update
- apiGroups:
  - policy
  resourceNames:
  - tekton-pipelines
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
# Source: tekton-pipelines/templates/controller/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tekton-pipelines-controller
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 'tekton-pipelines-controller'
subjects:
- kind: ServiceAccount
  name: 'tekton-pipelines-controller'
  namespace: 'default'
---
# Source: tekton-pipelines/templates/controller/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tekton-pipelines-controller-leaderelection
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 'tekton-pipelines-leader-election'
subjects:
- kind: ServiceAccount
  name: 'tekton-pipelines-controller'
  namespace: 'default'
---
# Source: tekton-pipelines/templates/info-role-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tekton-pipelines-info
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 'tekton-pipelines-info'
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:authenticated
  namespace: 'default'
---
# Source: tekton-pipelines/templates/webhook/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tekton-pipelines-webhook
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 'tekton-pipelines-webhook'
subjects:
- kind: ServiceAccount
  name: 'tekton-pipelines-webhook'
  namespace: 'default'
---
# Source: tekton-pipelines/templates/webhook/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tekton-pipelines-webhook-leaderelection
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 'tekton-pipelines-leader-election'
subjects:
- kind: ServiceAccount
  name: 'tekton-pipelines-webhook'
  namespace: 'default'
---
# Source: tekton-pipelines/templates/controller/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: tekton-pipelines-controller
  labels:
    app: tekton-pipelines-controller
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: controller
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: v0.37.2
    pipeline.tekton.dev/release: v0.37.2
    version: v0.37.2
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: controller
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  ports:
  - name: http-metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  - name: http-profiling
    port: 8008
    targetPort: 8008
  - name: probes
    port: 8080
    targetPort: 0
---
# Source: tekton-pipelines/templates/webhook/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: tekton-pipelines-webhook
  labels:
    app: tekton-pipelines-webhook
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: webhook
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: v0.37.2
    pipeline.tekton.dev/release: v0.37.2
    version: v0.37.2
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: webhook
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  ports:
  - name: http-metrics
    port: 9090
    targetPort: 9090
  - name: http-profiling
    port: 8008
    targetPort: 8008
  - name: https-webhook
    port: 443
    targetPort: 8443
  - name: probes
    port: 8080
    targetPort: 0
---
# Source: tekton-pipelines/templates/controller/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tekton-pipelines-controller
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: controller
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: v0.37.2
    pipeline.tekton.dev/release: v0.37.2
    version: v0.37.2
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: default
      app.kubernetes.io/name: controller
      app.kubernetes.io/part-of: tekton-pipelines
      app.kubernetes.io/name: tekton-pipelines
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-pipelines
  template:
    metadata:
      labels:
        app: tekton-pipelines-controller
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: default
        app.kubernetes.io/name: controller
        app.kubernetes.io/part-of: tekton-pipelines
        app.kubernetes.io/version: v0.37.2
        pipeline.tekton.dev/release: v0.37.2
        version: v0.37.2
        app.kubernetes.io/name: tekton-pipelines
        app.kubernetes.io/instance: default
        app.kubernetes.io/part-of: tekton-pipelines
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: NotIn
                values:
                - windows
      containers:
        - args:
          - -kubeconfig-writer-image
          - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/kubeconfigwriter:v0.37.2
          - -git-image
          - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.37.2
          - -entrypoint-image
          - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/entrypoint:v0.37.2
          - -nop-image
          - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/nop:v0.37.2
          - -imagedigest-exporter-image
          - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/imagedigestexporter:v0.37.2
          - -pr-image
          - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/pullrequest-init:v0.37.2
          - -workingdirinit-image
          - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/workingdirinit:v0.37.2
          - -gsutil-image
          - gcr.io/google.com/cloudsdktool/cloud-sdk@sha256:27b2c22bf259d9bc1a291e99c63791ba0c27a04d2db0a43241ba0f1f20f4067f
          - -shell-image
          - ghcr.io/distroless/busybox@sha256:19f02276bf8dbdd62f069b922f10c65262cc34b710eea26ff928129a736be791
          - -shell-image-win
          - mcr.microsoft.com/powershell:nanoserver@sha256:b6d5ff841b78bdf2dfed7550000fd4f3437385b8fa686ec0f010be24777654d6
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_DEFAULTS_NAME
              value: config-defaults
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: CONFIG_ARTIFACT_BUCKET_NAME
              value: config-artifact-bucket
            - name: CONFIG_ARTIFACT_PVC_NAME
              value: config-artifact-pvc
            - name: CONFIG_FEATURE_FLAGS_NAME
              value: feature-flags
            - name: CONFIG_LEADERELECTION_NAME
              value: config-leader-election
            - name: SSL_CERT_FILE
              value: /etc/config-registry-cert/cert
            - name: SSL_CERT_DIR
              value: /etc/ssl/certs
            - name: METRICS_DOMAIN
              value: tekton.dev/pipeline
            - name: KUBERNETES_CLUSTER_DOMAIN
              value: cluster.local
          image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/controller:v0.37.2
          livenessProbe:
            httpGet:
              path: /health
              port: probes
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          name: tekton-pipelines-controller
          ports:
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
            - containerPort: 8080
              name: probes
          readinessProbe:
            httpGet:
              path: /readiness
              port: probes
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
            runAsGroup: 65532
            runAsUser: 65532
          volumeMounts:
            - mountPath: /etc/config-logging
              name: config-logging
            - mountPath: /etc/config-registry-cert
              name: config-registry-cert
      serviceAccountName: tekton-pipelines-controller
      volumes:
        - configMap:
            name: config-logging
          name: config-logging
        - configMap:
            name: config-registry-cert
          name: config-registry-cert
---
# Source: tekton-pipelines/templates/webhook/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tekton-pipelines-webhook
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: webhook
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: v0.37.2
    pipeline.tekton.dev/release: v0.37.2
    version: v0.37.2
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: default
      app.kubernetes.io/name: webhook
      app.kubernetes.io/part-of: tekton-pipelines
      app.kubernetes.io/name: tekton-pipelines
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-pipelines
  template:
    metadata:
      labels:
        app: tekton-pipelines-webhook
        app.kubernetes.io/component: webhook
        app.kubernetes.io/instance: default
        app.kubernetes.io/name: webhook
        app.kubernetes.io/part-of: tekton-pipelines
        app.kubernetes.io/version: v0.37.2
        pipeline.tekton.dev/release: v0.37.2
        version: v0.37.2
        app.kubernetes.io/name: tekton-pipelines
        app.kubernetes.io/instance: default
        app.kubernetes.io/part-of: tekton-pipelines
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: NotIn
                values:
                - windows
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: webhook
                  app.kubernetes.io/instance: default
                  app.kubernetes.io/name: webhook
                  app.kubernetes.io/part-of: tekton-pipelines
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: CONFIG_LEADERELECTION_NAME
          value: config-leader-election
        - name: CONFIG_FEATURE_FLAGS_NAME
          value: feature-flags
        - name: WEBHOOK_SERVICE_NAME
          value: tekton-pipelines-webhook
        - name: WEBHOOK_SECRET_NAME
          value: webhook-certs
        - name: METRICS_DOMAIN
          value: tekton.dev/pipeline
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: cluster.local
        image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/webhook:v0.37.2
        livenessProbe:
          httpGet:
            path: /health
            port: probes
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        name: webhook
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        - containerPort: 8443
          name: https-webhook
        - containerPort: 8080
          name: probes
        readinessProbe:
          httpGet:
            path: /readiness
            port: probes
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          runAsGroup: 65532
          runAsUser: 65532
      serviceAccountName: tekton-pipelines-webhook
---
# Source: tekton-pipelines/templates/webhook/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: tekton-pipelines-webhook
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: webhook
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: v0.37.2
    pipeline.tekton.dev/release: v0.37.2
    version: v0.37.2
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
spec:
  maxReplicas: 5
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 100
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tekton-pipelines-webhook
---
# Source: tekton-pipelines/templates/webhook/mutating-webhook-configuration.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: webhook.pipeline.tekton.dev
  labels:
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: 'tekton-pipelines-webhook'
      namespace: 'default'
  failurePolicy: Fail
  name: webhook.pipeline.tekton.dev
  sideEffects: None
---
# Source: tekton-pipelines/templates/webhook/validating-webhook-configuration.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validation.webhook.pipeline.tekton.dev
  labels:
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: 'tekton-pipelines-webhook'
      namespace: 'default'
  failurePolicy: Fail
  name: validation.webhook.pipeline.tekton.dev
  sideEffects: None
---
# Source: tekton-pipelines/templates/webhook/validating-webhook-configuration.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: config.webhook.pipeline.tekton.dev
  labels:
    helm.sh/chart: tekton-pipelines-0.37.2
    app.kubernetes.io/name: tekton-pipelines
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: "v0.37.2"
    app.kubernetes.io/managed-by: Helm
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: 'tekton-pipelines-webhook'
      namespace: 'default'
  failurePolicy: Fail
  name: config.webhook.pipeline.tekton.dev
  objectSelector:
    matchLabels:
      app.kubernetes.io/part-of: tekton-pipelines
  sideEffects: None
