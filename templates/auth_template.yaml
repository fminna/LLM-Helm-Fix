---
# Source: auth/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-auth
  labels:
    helm.sh/chart: auth-0.1.1
    app.kubernetes.io/name: auth
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
---
# Source: auth/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-configmap
data:
  "config.yaml": |
    clients:
     []
---
# Source: auth/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-auth
  labels:
    helm.sh/chart: auth-0.1.1
    app.kubernetes.io/name: auth
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: auth
    app.kubernetes.io/instance: release-name
---
# Source: auth/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-auth
  labels:
    helm.sh/chart: auth-0.1.1
    app.kubernetes.io/name: auth
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: auth
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: auth
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-auth
      securityContext:
        {}
      containers:
        - name: auth
          securityContext:
            {}
          image: "ghcr.io/formancehq/auth:v0.2.3"
          imagePullPolicy: IfNotPresent
          env:
            - name: DEBUG
              value: "1"
            - name: POSTGRES_URI
              value: "host=postgres user=formance password=formance dbname=auth port=5432 sslmode=disable"
            - name: CAOS_OIDC_DEV
              value: "1"
            - name: DELEGATED_CLIENT_ID
              value: ""
            - name: DELEGATED_CLIENT_SECRET
              value: "" 
            - name: DELEGATED_ISSUER
              value: ""
            - name: CONFIG
              value: "/config.yaml"
            - name: BASE_URL
              value: "http://localhost/api/auth"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumesMount:
            - name: config
              mountPath: /config.yaml
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
      volumes:
        - name: "config"
          configMap:
            name: "release-name-configmap"
            items:
              - key: config.yaml
                path: config.yaml
---
# Source: auth/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-auth-test-connection"
  labels:
    helm.sh/chart: auth-0.1.1
    app.kubernetes.io/name: auth
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-auth:8080']
  restartPolicy: Never
