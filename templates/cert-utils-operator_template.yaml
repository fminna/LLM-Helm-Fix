---
# Source: cert-utils-operator/templates/v1_serviceaccount_controller-manager.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: controller-manager
  namespace: default
---
# Source: cert-utils-operator/templates/v1_configmap_cert-utils-operator-manager-config.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: b7831733.redhat.io
kind: ConfigMap
metadata:
  name: cert-utils-operator-manager-config
  namespace: default
---
# Source: cert-utils-operator/templates/rbac.authorization.k8s.io_v1_clusterrole_cert-utils-operator-manager-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: cert-utils-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - route.openshift.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - patch
  - update
  - watch
---
# Source: cert-utils-operator/templates/rbac.authorization.k8s.io_v1_clusterrole_cert-utils-operator-metrics-reader.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cert-utils-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: cert-utils-operator/templates/rbac.authorization.k8s.io_v1_clusterrole_cert-utils-operator-proxy-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cert-utils-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: cert-utils-operator/templates/rbac.authorization.k8s.io_v1_clusterrolebinding_cert-utils-operator-manager-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cert-utils-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cert-utils-operator-manager-role
subjects:
- kind: ServiceAccount
  name: controller-manager
  namespace: default
---
# Source: cert-utils-operator/templates/rbac.authorization.k8s.io_v1_clusterrolebinding_cert-utils-operator-proxy-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cert-utils-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cert-utils-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: controller-manager
  namespace: default
---
# Source: cert-utils-operator/templates/rbac.authorization.k8s.io_v1_role_cert-utils-operator-leader-election-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cert-utils-operator-leader-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: cert-utils-operator/templates/rbac.authorization.k8s.io_v1_role_cert-utils-operator-prometheus-k8s.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cert-utils-operator-prometheus-k8s
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - pods
  - services
  verbs:
  - get
  - list
  - watch
---
# Source: cert-utils-operator/templates/rbac.authorization.k8s.io_v1_rolebinding_cert-utils-operator-leader-election-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cert-utils-operator-leader-election-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cert-utils-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: controller-manager
  namespace: default
---
# Source: cert-utils-operator/templates/rbac.authorization.k8s.io_v1_rolebinding_cert-utils-operator-prometheus-k8s.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cert-utils-operator-prometheus-k8s
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cert-utils-operator-prometheus-k8s
subjects:
- kind: ServiceAccount
  name: prometheus-k8s
  namespace: openshift-monitoring
---
# Source: cert-utils-operator/templates/v1_service_cert-utils-operator-controller-manager-metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.openshift.io/serving-cert-secret-name: cert-utils-operator-certs
  labels:
    control-plane: cert-utils-operator
  name: cert-utils-operator-controller-manager-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: cert-utils-operator
---
# Source: cert-utils-operator/templates/manager.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-cert-utils-operator
  labels:
    helm.sh/chart: cert-utils-operator-v1.3.12
    app.kubernetes.io/name: cert-utils-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.3.12"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: cert-utils-operator
      app.kubernetes.io/instance: release-name
      control-plane: cert-utils-operator
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cert-utils-operator
        app.kubernetes.io/instance: release-name
        control-plane: cert-utils-operator
    spec:
      serviceAccountName: controller-manager 
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --tls-cert-file=/etc/certs/tls/tls.crt
        - --tls-private-key-file=/etc/certs/tls/tls.key
        image: "quay.io/redhat-cop/kube-rbac-proxy:v0.11.0"
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
        volumeMounts:
        - mountPath: /etc/certs/tls
          name: cert-utils-operator-certs
        imagePullPolicy: IfNotPresent           
        resources:
          requests:
            cpu: 100m
            memory: 20Mi  
      - command:
        - /manager
        args:
        - --leader-elect
        image: "quay.io/redhat-cop/cert-utils-operator:v1.3.12"
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: webhook-server-cert
          readOnly: true
          mountPath: /tmp/k8s-webhook-server/serving-certs        
        name: cert-utils-operator
        resources:
          requests:
            cpu: 100m
            memory: 20Mi
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: cert-utils-operator-certs
        secret:
          defaultMode: 420
          secretName: cert-utils-operator-certs 
      - name: webhook-server-cert
        secret:
          secretName: webhook-server-cert
          defaultMode: 420
---
# Source: cert-utils-operator/templates/monitoring.coreos.com_v1_prometheusrule_cert-utils-operator-certificate-rule-alerts.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: cert-utils-operator-certificate-rule-alerts
  namespace: default
spec:
  groups:
  - name: cert-utils-operator-recording-rules
    rules:
    - expr: certutils_certificate_expiry_time - certutils_certificate_issue_time
      record: cert:validity_duration:sec
    - expr: certutils_certificate_expiry_time - time()
      record: cert:time_to_expiration:sec
  - name: cert-utils-operator-alerting-rules
    rules:
    - alert: CertificateApproachingExpiration
      annotations:
        message: Certificate {{ $labels.namespace }}/{{ $labels.name }} is at 85% of its lifetime
        summary: Certificate {{ $labels.namespace }}/{{ $labels.name }} is at 85% of its lifetime
      expr: |
        cert:time_to_expiration:sec/cert:validity_duration:sec < 0.15
      labels:
        severity: warning
    - alert: CertificateIsAboutToExpire
      annotations:
        message: Certificate {{ $labels.namespace }}/{{ $labels.name }} is at 95% of its lifetime
        summary: Certificate {{ $labels.namespace }}/{{ $labels.name }} is at 95% of its lifetime
      expr: |
        cert:time_to_expiration:sec/cert:validity_duration:sec < 0.05
      labels:
        severity: critical
---
# Source: cert-utils-operator/templates/monitoring.coreos.com_v1_servicemonitor_cert-utils-operator-controller-manager-metrics-monitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    control-plane: cert-utils-operator
  name: cert-utils-operator-controller-manager-metrics-monitor
  namespace: default
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    interval: 30s
    port: https
    scheme: https
    tlsConfig:
      ca:
        secret:
          key: tls.crt
          name: cert-utils-operator-certs
          optional: false
      serverName: cert-utils-operator-controller-manager-metrics-service.default.svc
  selector:
    matchLabels:
      control-plane: cert-utils-operator
