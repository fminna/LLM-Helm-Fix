---
# Source: config-db/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name:  config-db-sa
  labels:
    helm.sh/chart: config-db-0.0.269
    app.kubernetes.io/name: config-db
    app.kubernetes.io/instance: release-name
    control-plane: config-db
    app.kubernetes.io/version: "0.0.269"
    app.kubernetes.io/managed-by: Helm
---
# Source: config-db/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: "ClusterRole"
metadata:
  name: config-db-sa-role
  labels:
    helm.sh/chart: config-db-0.0.269
    app.kubernetes.io/name: config-db
    app.kubernetes.io/instance: release-name
    control-plane: config-db
    app.kubernetes.io/version: "0.0.269"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: 
    - v1
  resources: 
    - secrets
  verbs:
    - get
    - list
- apiGroups: 
    - v1
  resources: 
    - configmaps
  verbs:
    - get
    - list
- apiGroups: [""]
  resources:
    - pods/attach
    - pods/exec
    - pods/log
  verbs:
    - '*'
- apiGroups: ['authentication.k8s.io/v1']
  resources: ['serviceaccounts/token']
  verbs: ['create']
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - "list"
  - "get"
  - "watch"
- apiGroups:
  - configs.flanksource.com
  resources:
  - scrapeconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - configs.flanksource.com
  resources:
  - scrapeconfigs/finalizers
  verbs:
  - update
- apiGroups:
  - configs.flanksource.com
  resources:
  - scrapeconfigs/status
  verbs:
  - get
  - patch
  - update
# Leader election
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
---
# Source: config-db/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: "ClusterRoleBinding"
metadata:
  name: config-db-sa-rolebinding
  labels:
    helm.sh/chart: config-db-0.0.269
    app.kubernetes.io/name: config-db
    app.kubernetes.io/instance: release-name
    control-plane: config-db
    app.kubernetes.io/version: "0.0.269"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: "ClusterRole"
  name: config-db-sa-role
subjects:
  - kind: ServiceAccount
    name: config-db-sa
    namespace: default
---
# Source: config-db/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: config-db
  labels:
    helm.sh/chart: config-db-0.0.269
    app.kubernetes.io/name: config-db
    app.kubernetes.io/instance: release-name
    control-plane: config-db
    app.kubernetes.io/version: "0.0.269"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: config-db
    app.kubernetes.io/instance: release-name
    control-plane: config-db
---
# Source: config-db/templates/deployment.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: config-db
  labels:
    helm.sh/chart: config-db-0.0.269
    app.kubernetes.io/name: config-db
    app.kubernetes.io/instance: release-name
    control-plane: config-db
    app.kubernetes.io/version: "0.0.269"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: config-db
      app.kubernetes.io/instance: release-name
      control-plane: config-db
  serviceName: config-db
  volumeClaimTemplates:
    - metadata:
        name: config-db-embedded-database
        labels:
          helm.sh/chart: config-db-0.0.269
          app.kubernetes.io/name: config-db
          app.kubernetes.io/instance: release-name
          control-plane: config-db
          app.kubernetes.io/version: "0.0.269"
          app.kubernetes.io/managed-by: Helm
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 20Gi
  template:
    metadata:
      labels:
        app.kubernetes.io/name: config-db
        app.kubernetes.io/instance: release-name
        control-plane: config-db
    spec:
      serviceAccountName: config-db-sa
      securityContext:
        fsGroup: 1000
      containers:
        - name: config-db
          image: "docker.io/flanksource/config-db:v0.0.269"
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /live
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          command:
            - /app/config-db
          args:
            - operator
            - -v
            - --disable-postgrest=false
            - --change-retention-days=60
            - --analysis-retention-days=60
            - --db-migrations
            - --otel-service-name=config-db
          env:
            - name: DB_URL
              value: "embedded:///opt/database"
            - name: NAMESPACE
              value: default
          resources:
            limits:
              cpu: 500m
              memory: 4Gi
            requests:
              cpu: 200m
              memory: 1Gi
          volumeMounts:
            - name: config-db-embedded-database
              mountPath: "/opt/database"
