---
# Source: simple-db-app-chart-with-dependency/charts/mariadb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-10.1.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
automountServiceAccountToken: false
---
# Source: simple-db-app-chart-with-dependency/charts/mariadb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-10.1.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  mariadb-root-password: "cm9vdA=="
  mariadb-password: "Y2ZPTU9uVWNvSQ=="
---
# Source: simple-db-app-chart-with-dependency/charts/mariadb/templates/primary/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-10.1.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
data:
  my.cnf: |-
    [mysqld]
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mariadb
    plugin_dir=/opt/bitnami/mariadb/plugin
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    tmpdir=/opt/bitnami/mariadb/tmp
    max_allowed_packet=16M
    bind-address=::
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    log-error=/opt/bitnami/mariadb/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci
    
    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mariadb/plugin
    
    [manager]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
---
# Source: simple-db-app-chart-with-dependency/charts/mariadb/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-10.1.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: mysql
      nodePort: null
  selector: 
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: primary
---
# Source: simple-db-app-chart-with-dependency/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-simple-db-app-chart-with-dependency
  labels:
    helm.sh/chart: simple-db-app-chart-with-dependency-0.1.0
    app.kubernetes.io/name: simple-db-app-chart-with-dependency
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 3000
      nodePort: 32001
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: simple-db-app-chart-with-dependency
    app.kubernetes.io/instance: release-name
---
# Source: simple-db-app-chart-with-dependency/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-simple-db-app-chart-with-dependency
  labels:
    helm.sh/chart: simple-db-app-chart-with-dependency-0.1.0
    app.kubernetes.io/name: simple-db-app-chart-with-dependency
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: simple-db-app-chart-with-dependency
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: simple-db-app-chart-with-dependency
        app.kubernetes.io/instance: release-name
    spec:
      containers:
        - name: simple-db-app-chart-with-dependency
          image: "htmlprogrammer2001/simple-db-app:1.0"
          imagePullPolicy: IfNotPresent
          env:
              - name: DB_HOST
                value: "release-name-mariadb"

              - name: DB_PORT
                value: "3306"

              - name: DB_USER
                value: "root"

              - name: DB_PASSWORD
                value: "root"

              - name: DB_NAME
                value: "app"
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
---
# Source: simple-db-app-chart-with-dependency/charts/mariadb/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-mariadb
  namespace: default
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-10.1.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels: 
      app.kubernetes.io/name: mariadb
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: primary
  serviceName: release-name-mariadb
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: 0c02aee8251ef7932056b586afe0d551bc60d9d3eb681bd9f92d8db8ecc5bc3e
      labels:
        app.kubernetes.io/name: mariadb
        helm.sh/chart: mariadb-10.1.1
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: primary
    spec:
      
      serviceAccountName: release-name-mariadb
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mariadb
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: primary
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      containers:
        - name: mariadb
          image: docker.io/bitnami/mariadb:10.5.13-debian-10-r32
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-mariadb
                  key: mariadb-root-password
            - name: MARIADB_DATABASE
              value: "my_database"
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          resources: 
            limits: {}
            requests: {}
          volumeMounts:
            - name: data
              mountPath: /bitnami/mariadb
            - name: config
              mountPath: /opt/bitnami/mariadb/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: release-name-mariadb
  volumeClaimTemplates:
    - metadata:
        name: data
        labels: 
          app.kubernetes.io/name: mariadb
          app.kubernetes.io/instance: release-name
          app.kubernetes.io/component: primary
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: simple-db-app-chart-with-dependency/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-simple-db-app-chart-with-dependency-test-connection"
  labels:
    helm.sh/chart: simple-db-app-chart-with-dependency-0.1.0
    app.kubernetes.io/name: simple-db-app-chart-with-dependency
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-simple-db-app-chart-with-dependency:3000']
  restartPolicy: Never
---
# Source: simple-db-app-chart-with-dependency/templates/migration-hook.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "release-name"
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: "simple-db-app-chart-with-dependency-0.1.0"
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/weight: "1"
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  template:
    metadata:
      name: "release-name"
      labels:
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/instance: "release-name"
        helm.sh/chart: "simple-db-app-chart-with-dependency-0.1.0"
    spec:
      restartPolicy: Never
      containers:
        - name: migration-job
          env:
            - name: DB_HOST
              value: "release-name-mariadb"

            - name: DB_PORT
              value: "3306"

            - name: DB_USER
              value: "root"

            - name: DB_PASSWORD
              value: "root"

            - name: DB_NAME
              value: "app"

          image: "htmlprogrammer2001/simple-db-app-migration:1.0"
          imagePullPolicy: IfNotPresent
