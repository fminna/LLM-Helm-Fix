---
# Source: eg-edge-stack-crds/templates/gwapi/gatewayapi-crds.yaml
#
# config/webhook/0-namespace.yaml
#
apiVersion: v1
kind: Namespace
metadata:
  name: gateway-system
---
# Source: eg-edge-stack-crds/templates/gwapi/gatewayapi-crds.yaml
#
# config/webhook/certificate_config.yaml
#
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gateway-api-admission
  labels:
    name: gateway-api-webhook
  namespace: gateway-system
---
# Source: eg-edge-stack-crds/templates/envoy-gateway/config.gateway.envoyproxy.io_envoyproxies.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: envoyproxies.config.gateway.envoyproxy.io
spec:
  group: config.gateway.envoyproxy.io
  names:
    kind: EnvoyProxy
    listKind: EnvoyProxyList
    plural: envoyproxies
    singular: envoyproxy
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EnvoyProxy is the schema for the envoyproxies API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: EnvoyProxySpec defines the desired state of EnvoyProxy.
            properties:
              bootstrap:
                description: Bootstrap defines the Envoy Bootstrap as a YAML string.
                  Visit https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/bootstrap/v3/bootstrap.proto#envoy-v3-api-msg-config-bootstrap-v3-bootstrap
                  to learn more about the syntax. If set, this is the Bootstrap configuration
                  used for the managed Envoy Proxy fleet instead of the default Bootstrap
                  configuration set by Envoy Gateway. Some fields within the Bootstrap
                  that are required to communicate with the xDS Server (Envoy Gateway)
                  and receive xDS resources from it are not configurable and will
                  result in the `EnvoyProxy` resource being rejected. Backward compatibility
                  across minor versions is not guaranteed. We strongly recommend using
                  `egctl x translate` to generate a `EnvoyProxy` resource with the
                  `Bootstrap` field set to the default Bootstrap configuration used.
                  You can edit this configuration, and rerun `egctl x translate` to
                  ensure there are no validation errors.
                type: string
              logging:
                default:
                  level:
                    default: warn
                description: Logging defines logging parameters for managed proxies.
                properties:
                  level:
                    additionalProperties:
                      description: LogLevel defines a log level for Envoy Gateway
                        and EnvoyProxy system logs. This type is not implemented for
                        EnvoyProxy until https://github.com/envoyproxy/gateway/issues/280
                        is fixed.
                      enum:
                      - debug
                      - info
                      - error
                      - warn
                      type: string
                    default:
                      default: warn
                    description: 'Level is a map of logging level per component, where
                      the component is the key and the log level is the value. If
                      unspecified, defaults to "default: warn".'
                    type: object
                type: object
              provider:
                description: Provider defines the desired resource provider and provider-specific
                  configuration. If unspecified, the "Kubernetes" resource provider
                  is used with default configuration parameters.
                properties:
                  kubernetes:
                    description: Kubernetes defines the desired state of the Kubernetes
                      resource provider. Kubernetes provides infrastructure resources
                      for running the data plane, e.g. Envoy proxy. If unspecified
                      and type is "Kubernetes", default settings for managed Kubernetes
                      resources are applied.
                    properties:
                      envoyDeployment:
                        description: EnvoyDeployment defines the desired state of
                          the Envoy deployment resource. If unspecified, default settings
                          for the manged Envoy deployment resource are applied.
                        properties:
                          container:
                            description: Container defines the resources and securityContext
                              of container.
                            properties:
                              env:
                                description: List of environment variables to set
                                  in the container.
                                items:
                                  description: EnvVar represents an environment variable
                                    present in a Container.
                                  properties:
                                    name:
                                      description: Name of the environment variable.
                                        Must be a C_IDENTIFIER.
                                      type: string
                                    value:
                                      description: 'Variable references $(VAR_NAME)
                                        are expanded using the previously defined
                                        environment variables in the container and
                                        any service environment variables. If a variable
                                        cannot be resolved, the reference in the input
                                        string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the
                                        $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)".
                                        Escaped references will never be expanded,
                                        regardless of whether the variable exists
                                        or not. Defaults to "".'
                                      type: string
                                    valueFrom:
                                      description: Source for the environment variable's
                                        value. Cannot be used if value is not empty.
                                      properties:
                                        configMapKeyRef:
                                          description: Selects a key of a ConfigMap.
                                          properties:
                                            key:
                                              description: The key to select.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the ConfigMap
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        fieldRef:
                                          description: 'Selects a field of the pod:
                                            supports metadata.name, metadata.namespace,
                                            `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                            spec.nodeName, spec.serviceAccountName,
                                            status.hostIP, status.podIP, status.podIPs.'
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the
                                                FieldPath is written in terms of,
                                                defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select
                                                in the specified API version.
                                              type: string
                                          required:
                                          - fieldPath
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        resourceFieldRef:
                                          description: 'Selects a resource of the
                                            container: only resources limits and requests
                                            (limits.cpu, limits.memory, limits.ephemeral-storage,
                                            requests.cpu, requests.memory and requests.ephemeral-storage)
                                            are currently supported.'
                                          properties:
                                            containerName:
                                              description: 'Container name: required
                                                for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Specifies the output format
                                                of the exposed resources, defaults
                                                to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to
                                                select'
                                              type: string
                                          required:
                                          - resource
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        secretKeyRef:
                                          description: Selects a key of a secret in
                                            the pod's namespace
                                          properties:
                                            key:
                                              description: The key of the secret to
                                                select from.  Must be a valid secret
                                                key.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the Secret
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                              image:
                                description: Image specifies the EnvoyProxy container
                                  image to be used, instead of the default image.
                                type: string
                              resources:
                                description: 'Resources required by this container.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                properties:
                                  claims:
                                    description: "Claims lists the names of resources,
                                      defined in spec.resourceClaims, that are used
                                      by this container. \n This is an alpha field
                                      and requires enabling the DynamicResourceAllocation
                                      feature gate. \n This field is immutable. It
                                      can only be set for containers."
                                    items:
                                      description: ResourceClaim references one entry
                                        in PodSpec.ResourceClaims.
                                      properties:
                                        name:
                                          description: Name must match the name of
                                            one entry in pod.spec.resourceClaims of
                                            the Pod where this field is used. It makes
                                            that resource available inside a container.
                                          type: string
                                      required:
                                      - name
                                      type: object
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - name
                                    x-kubernetes-list-type: map
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Limits describes the maximum amount
                                      of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Requests describes the minimum amount
                                      of compute resources required. If Requests is
                                      omitted for a container, it defaults to Limits
                                      if that is explicitly specified, otherwise to
                                      an implementation-defined value. Requests cannot
                                      exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                type: object
                              securityContext:
                                description: 'SecurityContext defines the security
                                  options the container should be run with. If set,
                                  the fields of SecurityContext override the equivalent
                                  fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                                properties:
                                  allowPrivilegeEscalation:
                                    description: 'AllowPrivilegeEscalation controls
                                      whether a process can gain more privileges than
                                      its parent process. This bool directly controls
                                      if the no_new_privs flag will be set on the
                                      container process. AllowPrivilegeEscalation
                                      is true always when the container is: 1) run
                                      as Privileged 2) has CAP_SYS_ADMIN Note that
                                      this field cannot be set when spec.os.name is
                                      windows.'
                                    type: boolean
                                  capabilities:
                                    description: The capabilities to add/drop when
                                      running containers. Defaults to the default
                                      set of capabilities granted by the container
                                      runtime. Note that this field cannot be set
                                      when spec.os.name is windows.
                                    properties:
                                      add:
                                        description: Added capabilities
                                        items:
                                          description: Capability represent POSIX
                                            capabilities type
                                          type: string
                                        type: array
                                      drop:
                                        description: Removed capabilities
                                        items:
                                          description: Capability represent POSIX
                                            capabilities type
                                          type: string
                                        type: array
                                    type: object
                                  privileged:
                                    description: Run container in privileged mode.
                                      Processes in privileged containers are essentially
                                      equivalent to root on the host. Defaults to
                                      false. Note that this field cannot be set when
                                      spec.os.name is windows.
                                    type: boolean
                                  procMount:
                                    description: procMount denotes the type of proc
                                      mount to use for the containers. The default
                                      is DefaultProcMount which uses the container
                                      runtime defaults for readonly paths and masked
                                      paths. This requires the ProcMountType feature
                                      flag to be enabled. Note that this field cannot
                                      be set when spec.os.name is windows.
                                    type: string
                                  readOnlyRootFilesystem:
                                    description: Whether this container has a read-only
                                      root filesystem. Default is false. Note that
                                      this field cannot be set when spec.os.name is
                                      windows.
                                    type: boolean
                                  runAsGroup:
                                    description: The GID to run the entrypoint of
                                      the container process. Uses runtime default
                                      if unset. May also be set in PodSecurityContext.  If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence. Note that this field cannot be set
                                      when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  runAsNonRoot:
                                    description: Indicates that the container must
                                      run as a non-root user. If true, the Kubelet
                                      will validate the image at runtime to ensure
                                      that it does not run as UID 0 (root) and fail
                                      to start the container if it does. If unset
                                      or false, no such validation will be performed.
                                      May also be set in PodSecurityContext.  If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: boolean
                                  runAsUser:
                                    description: The UID to run the entrypoint of
                                      the container process. Defaults to user specified
                                      in image metadata if unspecified. May also be
                                      set in PodSecurityContext.  If set in both SecurityContext
                                      and PodSecurityContext, the value specified
                                      in SecurityContext takes precedence. Note that
                                      this field cannot be set when spec.os.name is
                                      windows.
                                    format: int64
                                    type: integer
                                  seLinuxOptions:
                                    description: The SELinux context to be applied
                                      to the container. If unspecified, the container
                                      runtime will allocate a random SELinux context
                                      for each container.  May also be set in PodSecurityContext.  If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence. Note that this field cannot be set
                                      when spec.os.name is windows.
                                    properties:
                                      level:
                                        description: Level is SELinux level label
                                          that applies to the container.
                                        type: string
                                      role:
                                        description: Role is a SELinux role label
                                          that applies to the container.
                                        type: string
                                      type:
                                        description: Type is a SELinux type label
                                          that applies to the container.
                                        type: string
                                      user:
                                        description: User is a SELinux user label
                                          that applies to the container.
                                        type: string
                                    type: object
                                  seccompProfile:
                                    description: The seccomp options to use by this
                                      container. If seccomp options are provided at
                                      both the pod & container level, the container
                                      options override the pod options. Note that
                                      this field cannot be set when spec.os.name is
                                      windows.
                                    properties:
                                      localhostProfile:
                                        description: localhostProfile indicates a
                                          profile defined in a file on the node should
                                          be used. The profile must be preconfigured
                                          on the node to work. Must be a descending
                                          path, relative to the kubelet's configured
                                          seccomp profile location. Must only be set
                                          if type is "Localhost".
                                        type: string
                                      type:
                                        description: "type indicates which kind of
                                          seccomp profile will be applied. Valid options
                                          are: \n Localhost - a profile defined in
                                          a file on the node should be used. RuntimeDefault
                                          - the container runtime default profile
                                          should be used. Unconfined - no profile
                                          should be applied."
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  windowsOptions:
                                    description: The Windows specific settings applied
                                      to all containers. If unspecified, the options
                                      from the PodSecurityContext will be used. If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence. Note that this field cannot be set
                                      when spec.os.name is linux.
                                    properties:
                                      gmsaCredentialSpec:
                                        description: GMSACredentialSpec is where the
                                          GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                          inlines the contents of the GMSA credential
                                          spec named by the GMSACredentialSpecName
                                          field.
                                        type: string
                                      gmsaCredentialSpecName:
                                        description: GMSACredentialSpecName is the
                                          name of the GMSA credential spec to use.
                                        type: string
                                      hostProcess:
                                        description: HostProcess determines if a container
                                          should be run as a 'Host Process' container.
                                          This field is alpha-level and will only
                                          be honored by components that enable the
                                          WindowsHostProcessContainers feature flag.
                                          Setting this field without the feature flag
                                          will result in errors when validating the
                                          Pod. All of a Pod's containers must have
                                          the same effective HostProcess value (it
                                          is not allowed to have a mix of HostProcess
                                          containers and non-HostProcess containers).  In
                                          addition, if HostProcess is true then HostNetwork
                                          must also be set to true.
                                        type: boolean
                                      runAsUserName:
                                        description: The UserName in Windows to run
                                          the entrypoint of the container process.
                                          Defaults to the user specified in image
                                          metadata if unspecified. May also be set
                                          in PodSecurityContext. If set in both SecurityContext
                                          and PodSecurityContext, the value specified
                                          in SecurityContext takes precedence.
                                        type: string
                                    type: object
                                type: object
                              volumeMounts:
                                description: VolumeMounts are volumes to mount into
                                  the container's filesystem. Cannot be updated.
                                items:
                                  description: VolumeMount describes a mounting of
                                    a Volume within a container.
                                  properties:
                                    mountPath:
                                      description: Path within the container at which
                                        the volume should be mounted.  Must not contain
                                        ':'.
                                      type: string
                                    mountPropagation:
                                      description: mountPropagation determines how
                                        mounts are propagated from the host to container
                                        and the other way around. When not set, MountPropagationNone
                                        is used. This field is beta in 1.10.
                                      type: string
                                    name:
                                      description: This must match the Name of a Volume.
                                      type: string
                                    readOnly:
                                      description: Mounted read-only if true, read-write
                                        otherwise (false or unspecified). Defaults
                                        to false.
                                      type: boolean
                                    subPath:
                                      description: Path within the volume from which
                                        the container's volume should be mounted.
                                        Defaults to "" (volume's root).
                                      type: string
                                    subPathExpr:
                                      description: Expanded path within the volume
                                        from which the container's volume should be
                                        mounted. Behaves similarly to SubPath but
                                        environment variable references $(VAR_NAME)
                                        are expanded using the container's environment.
                                        Defaults to "" (volume's root). SubPathExpr
                                        and SubPath are mutually exclusive.
                                      type: string
                                  required:
                                  - mountPath
                                  - name
                                  type: object
                                type: array
                            type: object
                          pod:
                            description: Pod defines the desired annotations and securityContext
                              of container.
                            properties:
                              affinity:
                                description: If specified, the pod's scheduling constraints.
                                properties:
                                  nodeAffinity:
                                    description: Describes node affinity scheduling
                                      rules for the pod.
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: The scheduler will prefer to
                                          schedule pods to nodes that satisfy the
                                          affinity expressions specified by this field,
                                          but it may choose a node that violates one
                                          or more of the expressions. The node that
                                          is most preferred is the one with the greatest
                                          sum of weights, i.e. for each node that
                                          meets all of the scheduling requirements
                                          (resource request, requiredDuringScheduling
                                          affinity expressions, etc.), compute a sum
                                          by iterating through the elements of this
                                          field and adding "weight" to the sum if
                                          the node matches the corresponding matchExpressions;
                                          the node(s) with the highest sum are the
                                          most preferred.
                                        items:
                                          description: An empty preferred scheduling
                                            term matches all objects with implicit
                                            weight 0 (i.e. it's a no-op). A null preferred
                                            scheduling term matches no objects (i.e.
                                            is also a no-op).
                                          properties:
                                            preference:
                                              description: A node selector term, associated
                                                with the corresponding weight.
                                              properties:
                                                matchExpressions:
                                                  description: A list of node selector
                                                    requirements by node's labels.
                                                  items:
                                                    description: A node selector requirement
                                                      is a selector that contains
                                                      values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: Represents a
                                                          key's relationship to a
                                                          set of values. Valid operators
                                                          are In, NotIn, Exists, DoesNotExist.
                                                          Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: An array of string
                                                          values. If the operator
                                                          is In or NotIn, the values
                                                          array must be non-empty.
                                                          If the operator is Exists
                                                          or DoesNotExist, the values
                                                          array must be empty. If
                                                          the operator is Gt or Lt,
                                                          the values array must have
                                                          a single element, which
                                                          will be interpreted as an
                                                          integer. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchFields:
                                                  description: A list of node selector
                                                    requirements by node's fields.
                                                  items:
                                                    description: A node selector requirement
                                                      is a selector that contains
                                                      values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: Represents a
                                                          key's relationship to a
                                                          set of values. Valid operators
                                                          are In, NotIn, Exists, DoesNotExist.
                                                          Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: An array of string
                                                          values. If the operator
                                                          is In or NotIn, the values
                                                          array must be non-empty.
                                                          If the operator is Exists
                                                          or DoesNotExist, the values
                                                          array must be empty. If
                                                          the operator is Gt or Lt,
                                                          the values array must have
                                                          a single element, which
                                                          will be interpreted as an
                                                          integer. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            weight:
                                              description: Weight associated with
                                                matching the corresponding nodeSelectorTerm,
                                                in the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                          - preference
                                          - weight
                                          type: object
                                        type: array
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: If the affinity requirements
                                          specified by this field are not met at scheduling
                                          time, the pod will not be scheduled onto
                                          the node. If the affinity requirements specified
                                          by this field cease to be met at some point
                                          during pod execution (e.g. due to an update),
                                          the system may or may not try to eventually
                                          evict the pod from its node.
                                        properties:
                                          nodeSelectorTerms:
                                            description: Required. A list of node
                                              selector terms. The terms are ORed.
                                            items:
                                              description: A null or empty node selector
                                                term matches no objects. The requirements
                                                of them are ANDed. The TopologySelectorTerm
                                                type implements a subset of the NodeSelectorTerm.
                                              properties:
                                                matchExpressions:
                                                  description: A list of node selector
                                                    requirements by node's labels.
                                                  items:
                                                    description: A node selector requirement
                                                      is a selector that contains
                                                      values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: Represents a
                                                          key's relationship to a
                                                          set of values. Valid operators
                                                          are In, NotIn, Exists, DoesNotExist.
                                                          Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: An array of string
                                                          values. If the operator
                                                          is In or NotIn, the values
                                                          array must be non-empty.
                                                          If the operator is Exists
                                                          or DoesNotExist, the values
                                                          array must be empty. If
                                                          the operator is Gt or Lt,
                                                          the values array must have
                                                          a single element, which
                                                          will be interpreted as an
                                                          integer. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchFields:
                                                  description: A list of node selector
                                                    requirements by node's fields.
                                                  items:
                                                    description: A node selector requirement
                                                      is a selector that contains
                                                      values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: Represents a
                                                          key's relationship to a
                                                          set of values. Valid operators
                                                          are In, NotIn, Exists, DoesNotExist.
                                                          Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: An array of string
                                                          values. If the operator
                                                          is In or NotIn, the values
                                                          array must be non-empty.
                                                          If the operator is Exists
                                                          or DoesNotExist, the values
                                                          array must be empty. If
                                                          the operator is Gt or Lt,
                                                          the values array must have
                                                          a single element, which
                                                          will be interpreted as an
                                                          integer. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            type: array
                                        required:
                                        - nodeSelectorTerms
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  podAffinity:
                                    description: Describes pod affinity scheduling
                                      rules (e.g. co-locate this pod in the same node,
                                      zone, etc. as some other pod(s)).
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: The scheduler will prefer to
                                          schedule pods to nodes that satisfy the
                                          affinity expressions specified by this field,
                                          but it may choose a node that violates one
                                          or more of the expressions. The node that
                                          is most preferred is the one with the greatest
                                          sum of weights, i.e. for each node that
                                          meets all of the scheduling requirements
                                          (resource request, requiredDuringScheduling
                                          affinity expressions, etc.), compute a sum
                                          by iterating through the elements of this
                                          field and adding "weight" to the sum if
                                          the node has pods which matches the corresponding
                                          podAffinityTerm; the node(s) with the highest
                                          sum are the most preferred.
                                        items:
                                          description: The weights of all of the matched
                                            WeightedPodAffinityTerm fields are added
                                            per-node to find the most preferred node(s)
                                          properties:
                                            podAffinityTerm:
                                              description: Required. A pod affinity
                                                term, associated with the corresponding
                                                weight.
                                              properties:
                                                labelSelector:
                                                  description: A label query over
                                                    a set of resources, in this case
                                                    pods.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator
                                                              represents a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists and
                                                              DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is
                                                              an array of string values.
                                                              If the operator is In
                                                              or NotIn, the values
                                                              array must be non-empty.
                                                              If the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. This array is
                                                              replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is
                                                        a map of {key,value} pairs.
                                                        A single {key,value} in the
                                                        matchLabels map is equivalent
                                                        to an element of matchExpressions,
                                                        whose key field is "key",
                                                        the operator is "In", and
                                                        the values array contains
                                                        only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                namespaceSelector:
                                                  description: A label query over
                                                    the set of namespaces that the
                                                    term applies to. The term is applied
                                                    to the union of the namespaces
                                                    selected by this field and the
                                                    ones listed in the namespaces
                                                    field. null selector and null
                                                    or empty namespaces list means
                                                    "this pod's namespace". An empty
                                                    selector ({}) matches all namespaces.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator
                                                              represents a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists and
                                                              DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is
                                                              an array of string values.
                                                              If the operator is In
                                                              or NotIn, the values
                                                              array must be non-empty.
                                                              If the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. This array is
                                                              replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is
                                                        a map of {key,value} pairs.
                                                        A single {key,value} in the
                                                        matchLabels map is equivalent
                                                        to an element of matchExpressions,
                                                        whose key field is "key",
                                                        the operator is "In", and
                                                        the values array contains
                                                        only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                namespaces:
                                                  description: namespaces specifies
                                                    a static list of namespace names
                                                    that the term applies to. The
                                                    term is applied to the union of
                                                    the namespaces listed in this
                                                    field and the ones selected by
                                                    namespaceSelector. null or empty
                                                    namespaces list and null namespaceSelector
                                                    means "this pod's namespace".
                                                  items:
                                                    type: string
                                                  type: array
                                                topologyKey:
                                                  description: This pod should be
                                                    co-located (affinity) or not co-located
                                                    (anti-affinity) with the pods
                                                    matching the labelSelector in
                                                    the specified namespaces, where
                                                    co-located is defined as running
                                                    on a node whose value of the label
                                                    with key topologyKey matches that
                                                    of any node on which any of the
                                                    selected pods is running. Empty
                                                    topologyKey is not allowed.
                                                  type: string
                                              required:
                                              - topologyKey
                                              type: object
                                            weight:
                                              description: weight associated with
                                                matching the corresponding podAffinityTerm,
                                                in the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                          - podAffinityTerm
                                          - weight
                                          type: object
                                        type: array
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: If the affinity requirements
                                          specified by this field are not met at scheduling
                                          time, the pod will not be scheduled onto
                                          the node. If the affinity requirements specified
                                          by this field cease to be met at some point
                                          during pod execution (e.g. due to a pod
                                          label update), the system may or may not
                                          try to eventually evict the pod from its
                                          node. When there are multiple elements,
                                          the lists of nodes corresponding to each
                                          podAffinityTerm are intersected, i.e. all
                                          terms must be satisfied.
                                        items:
                                          description: Defines a set of pods (namely
                                            those matching the labelSelector relative
                                            to the given namespace(s)) that this pod
                                            should be co-located (affinity) or not
                                            co-located (anti-affinity) with, where
                                            co-located is defined as running on a
                                            node whose value of the label with key
                                            <topologyKey> matches that of any node
                                            on which a pod of the set of pods is running
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        type: array
                                    type: object
                                  podAntiAffinity:
                                    description: Describes pod anti-affinity scheduling
                                      rules (e.g. avoid putting this pod in the same
                                      node, zone, etc. as some other pod(s)).
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: The scheduler will prefer to
                                          schedule pods to nodes that satisfy the
                                          anti-affinity expressions specified by this
                                          field, but it may choose a node that violates
                                          one or more of the expressions. The node
                                          that is most preferred is the one with the
                                          greatest sum of weights, i.e. for each node
                                          that meets all of the scheduling requirements
                                          (resource request, requiredDuringScheduling
                                          anti-affinity expressions, etc.), compute
                                          a sum by iterating through the elements
                                          of this field and adding "weight" to the
                                          sum if the node has pods which matches the
                                          corresponding podAffinityTerm; the node(s)
                                          with the highest sum are the most preferred.
                                        items:
                                          description: The weights of all of the matched
                                            WeightedPodAffinityTerm fields are added
                                            per-node to find the most preferred node(s)
                                          properties:
                                            podAffinityTerm:
                                              description: Required. A pod affinity
                                                term, associated with the corresponding
                                                weight.
                                              properties:
                                                labelSelector:
                                                  description: A label query over
                                                    a set of resources, in this case
                                                    pods.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator
                                                              represents a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists and
                                                              DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is
                                                              an array of string values.
                                                              If the operator is In
                                                              or NotIn, the values
                                                              array must be non-empty.
                                                              If the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. This array is
                                                              replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is
                                                        a map of {key,value} pairs.
                                                        A single {key,value} in the
                                                        matchLabels map is equivalent
                                                        to an element of matchExpressions,
                                                        whose key field is "key",
                                                        the operator is "In", and
                                                        the values array contains
                                                        only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                namespaceSelector:
                                                  description: A label query over
                                                    the set of namespaces that the
                                                    term applies to. The term is applied
                                                    to the union of the namespaces
                                                    selected by this field and the
                                                    ones listed in the namespaces
                                                    field. null selector and null
                                                    or empty namespaces list means
                                                    "this pod's namespace". An empty
                                                    selector ({}) matches all namespaces.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator
                                                              represents a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists and
                                                              DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is
                                                              an array of string values.
                                                              If the operator is In
                                                              or NotIn, the values
                                                              array must be non-empty.
                                                              If the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. This array is
                                                              replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is
                                                        a map of {key,value} pairs.
                                                        A single {key,value} in the
                                                        matchLabels map is equivalent
                                                        to an element of matchExpressions,
                                                        whose key field is "key",
                                                        the operator is "In", and
                                                        the values array contains
                                                        only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                namespaces:
                                                  description: namespaces specifies
                                                    a static list of namespace names
                                                    that the term applies to. The
                                                    term is applied to the union of
                                                    the namespaces listed in this
                                                    field and the ones selected by
                                                    namespaceSelector. null or empty
                                                    namespaces list and null namespaceSelector
                                                    means "this pod's namespace".
                                                  items:
                                                    type: string
                                                  type: array
                                                topologyKey:
                                                  description: This pod should be
                                                    co-located (affinity) or not co-located
                                                    (anti-affinity) with the pods
                                                    matching the labelSelector in
                                                    the specified namespaces, where
                                                    co-located is defined as running
                                                    on a node whose value of the label
                                                    with key topologyKey matches that
                                                    of any node on which any of the
                                                    selected pods is running. Empty
                                                    topologyKey is not allowed.
                                                  type: string
                                              required:
                                              - topologyKey
                                              type: object
                                            weight:
                                              description: weight associated with
                                                matching the corresponding podAffinityTerm,
                                                in the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                          - podAffinityTerm
                                          - weight
                                          type: object
                                        type: array
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: If the anti-affinity requirements
                                          specified by this field are not met at scheduling
                                          time, the pod will not be scheduled onto
                                          the node. If the anti-affinity requirements
                                          specified by this field cease to be met
                                          at some point during pod execution (e.g.
                                          due to a pod label update), the system may
                                          or may not try to eventually evict the pod
                                          from its node. When there are multiple elements,
                                          the lists of nodes corresponding to each
                                          podAffinityTerm are intersected, i.e. all
                                          terms must be satisfied.
                                        items:
                                          description: Defines a set of pods (namely
                                            those matching the labelSelector relative
                                            to the given namespace(s)) that this pod
                                            should be co-located (affinity) or not
                                            co-located (anti-affinity) with, where
                                            co-located is defined as running on a
                                            node whose value of the label with key
                                            <topologyKey> matches that of any node
                                            on which a pod of the set of pods is running
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        type: array
                                    type: object
                                type: object
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations are the annotations that
                                  should be appended to the pods. By default, no pod
                                  annotations are appended.
                                type: object
                              labels:
                                additionalProperties:
                                  type: string
                                description: Labels are the additional labels that
                                  should be tagged to the pods. By default, no additional
                                  pod labels are tagged.
                                type: object
                              securityContext:
                                description: 'SecurityContext holds pod-level security
                                  attributes and common container settings. Optional:
                                  Defaults to empty.  See type description for default
                                  values of each field.'
                                properties:
                                  fsGroup:
                                    description: "A special supplemental group that
                                      applies to all containers in a pod. Some volume
                                      types allow the Kubelet to change the ownership
                                      of that volume to be owned by the pod: \n 1.
                                      The owning GID will be the FSGroup 2. The setgid
                                      bit is set (new files created in the volume
                                      will be owned by FSGroup) 3. The permission
                                      bits are OR'd with rw-rw---- \n If unset, the
                                      Kubelet will not modify the ownership and permissions
                                      of any volume. Note that this field cannot be
                                      set when spec.os.name is windows."
                                    format: int64
                                    type: integer
                                  fsGroupChangePolicy:
                                    description: 'fsGroupChangePolicy defines behavior
                                      of changing ownership and permission of the
                                      volume before being exposed inside Pod. This
                                      field will only apply to volume types which
                                      support fsGroup based ownership(and permissions).
                                      It will have no effect on ephemeral volume types
                                      such as: secret, configmaps and emptydir. Valid
                                      values are "OnRootMismatch" and "Always". If
                                      not specified, "Always" is used. Note that this
                                      field cannot be set when spec.os.name is windows.'
                                    type: string
                                  runAsGroup:
                                    description: The GID to run the entrypoint of
                                      the container process. Uses runtime default
                                      if unset. May also be set in SecurityContext.  If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence for that container. Note that this
                                      field cannot be set when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  runAsNonRoot:
                                    description: Indicates that the container must
                                      run as a non-root user. If true, the Kubelet
                                      will validate the image at runtime to ensure
                                      that it does not run as UID 0 (root) and fail
                                      to start the container if it does. If unset
                                      or false, no such validation will be performed.
                                      May also be set in SecurityContext.  If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: boolean
                                  runAsUser:
                                    description: The UID to run the entrypoint of
                                      the container process. Defaults to user specified
                                      in image metadata if unspecified. May also be
                                      set in SecurityContext.  If set in both SecurityContext
                                      and PodSecurityContext, the value specified
                                      in SecurityContext takes precedence for that
                                      container. Note that this field cannot be set
                                      when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  seLinuxOptions:
                                    description: The SELinux context to be applied
                                      to all containers. If unspecified, the container
                                      runtime will allocate a random SELinux context
                                      for each container.  May also be set in SecurityContext.  If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence for that container. Note that this
                                      field cannot be set when spec.os.name is windows.
                                    properties:
                                      level:
                                        description: Level is SELinux level label
                                          that applies to the container.
                                        type: string
                                      role:
                                        description: Role is a SELinux role label
                                          that applies to the container.
                                        type: string
                                      type:
                                        description: Type is a SELinux type label
                                          that applies to the container.
                                        type: string
                                      user:
                                        description: User is a SELinux user label
                                          that applies to the container.
                                        type: string
                                    type: object
                                  seccompProfile:
                                    description: The seccomp options to use by the
                                      containers in this pod. Note that this field
                                      cannot be set when spec.os.name is windows.
                                    properties:
                                      localhostProfile:
                                        description: localhostProfile indicates a
                                          profile defined in a file on the node should
                                          be used. The profile must be preconfigured
                                          on the node to work. Must be a descending
                                          path, relative to the kubelet's configured
                                          seccomp profile location. Must only be set
                                          if type is "Localhost".
                                        type: string
                                      type:
                                        description: "type indicates which kind of
                                          seccomp profile will be applied. Valid options
                                          are: \n Localhost - a profile defined in
                                          a file on the node should be used. RuntimeDefault
                                          - the container runtime default profile
                                          should be used. Unconfined - no profile
                                          should be applied."
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  supplementalGroups:
                                    description: A list of groups applied to the first
                                      process run in each container, in addition to
                                      the container's primary GID, the fsGroup (if
                                      specified), and group memberships defined in
                                      the container image for the uid of the container
                                      process. If unspecified, no additional groups
                                      are added to any container. Note that group
                                      memberships defined in the container image for
                                      the uid of the container process are still effective,
                                      even if they are not included in this list.
                                      Note that this field cannot be set when spec.os.name
                                      is windows.
                                    items:
                                      format: int64
                                      type: integer
                                    type: array
                                  sysctls:
                                    description: Sysctls hold a list of namespaced
                                      sysctls used for the pod. Pods with unsupported
                                      sysctls (by the container runtime) might fail
                                      to launch. Note that this field cannot be set
                                      when spec.os.name is windows.
                                    items:
                                      description: Sysctl defines a kernel parameter
                                        to be set
                                      properties:
                                        name:
                                          description: Name of a property to set
                                          type: string
                                        value:
                                          description: Value of a property to set
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  windowsOptions:
                                    description: The Windows specific settings applied
                                      to all containers. If unspecified, the options
                                      within a container's SecurityContext will be
                                      used. If set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence. Note that this field cannot be set
                                      when spec.os.name is linux.
                                    properties:
                                      gmsaCredentialSpec:
                                        description: GMSACredentialSpec is where the
                                          GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                          inlines the contents of the GMSA credential
                                          spec named by the GMSACredentialSpecName
                                          field.
                                        type: string
                                      gmsaCredentialSpecName:
                                        description: GMSACredentialSpecName is the
                                          name of the GMSA credential spec to use.
                                        type: string
                                      hostProcess:
                                        description: HostProcess determines if a container
                                          should be run as a 'Host Process' container.
                                          This field is alpha-level and will only
                                          be honored by components that enable the
                                          WindowsHostProcessContainers feature flag.
                                          Setting this field without the feature flag
                                          will result in errors when validating the
                                          Pod. All of a Pod's containers must have
                                          the same effective HostProcess value (it
                                          is not allowed to have a mix of HostProcess
                                          containers and non-HostProcess containers).  In
                                          addition, if HostProcess is true then HostNetwork
                                          must also be set to true.
                                        type: boolean
                                      runAsUserName:
                                        description: The UserName in Windows to run
                                          the entrypoint of the container process.
                                          Defaults to the user specified in image
                                          metadata if unspecified. May also be set
                                          in PodSecurityContext. If set in both SecurityContext
                                          and PodSecurityContext, the value specified
                                          in SecurityContext takes precedence.
                                        type: string
                                    type: object
                                type: object
                              tolerations:
                                description: If specified, the pod's tolerations.
                                items:
                                  description: The pod this Toleration is attached
                                    to tolerates any taint that matches the triple
                                    <key,value,effect> using the matching operator
                                    <operator>.
                                  properties:
                                    effect:
                                      description: Effect indicates the taint effect
                                        to match. Empty means match all taint effects.
                                        When specified, allowed values are NoSchedule,
                                        PreferNoSchedule and NoExecute.
                                      type: string
                                    key:
                                      description: Key is the taint key that the toleration
                                        applies to. Empty means match all taint keys.
                                        If the key is empty, operator must be Exists;
                                        this combination means to match all values
                                        and all keys.
                                      type: string
                                    operator:
                                      description: Operator represents a key's relationship
                                        to the value. Valid operators are Exists and
                                        Equal. Defaults to Equal. Exists is equivalent
                                        to wildcard for value, so that a pod can tolerate
                                        all taints of a particular category.
                                      type: string
                                    tolerationSeconds:
                                      description: TolerationSeconds represents the
                                        period of time the toleration (which must
                                        be of effect NoExecute, otherwise this field
                                        is ignored) tolerates the taint. By default,
                                        it is not set, which means tolerate the taint
                                        forever (do not evict). Zero and negative
                                        values will be treated as 0 (evict immediately)
                                        by the system.
                                      format: int64
                                      type: integer
                                    value:
                                      description: Value is the taint value the toleration
                                        matches to. If the operator is Exists, the
                                        value should be empty, otherwise just a regular
                                        string.
                                      type: string
                                  type: object
                                type: array
                              volumes:
                                description: 'Volumes that can be mounted by containers
                                  belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes'
                                items:
                                  description: Volume represents a named volume in
                                    a pod that may be accessed by any container in
                                    the pod.
                                  properties:
                                    awsElasticBlockStore:
                                      description: 'awsElasticBlockStore represents
                                        an AWS Disk resource that is attached to a
                                        kubelet''s host machine and then exposed to
                                        the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                      properties:
                                        fsType:
                                          description: 'fsType is the filesystem type
                                            of the volume that you want to mount.
                                            Tip: Ensure that the filesystem type is
                                            supported by the host operating system.
                                            Examples: "ext4", "xfs", "ntfs". Implicitly
                                            inferred to be "ext4" if unspecified.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                            TODO: how do we prevent errors in the
                                            filesystem from compromising the machine'
                                          type: string
                                        partition:
                                          description: 'partition is the partition
                                            in the volume that you want to mount.
                                            If omitted, the default is to mount by
                                            volume name. Examples: For volume /dev/sda1,
                                            you specify the partition as "1". Similarly,
                                            the volume partition for /dev/sda is "0"
                                            (or you can leave the property empty).'
                                          format: int32
                                          type: integer
                                        readOnly:
                                          description: 'readOnly value true will force
                                            the readOnly setting in VolumeMounts.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                          type: boolean
                                        volumeID:
                                          description: 'volumeID is unique ID of the
                                            persistent disk resource in AWS (Amazon
                                            EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                          type: string
                                      required:
                                      - volumeID
                                      type: object
                                    azureDisk:
                                      description: azureDisk represents an Azure Data
                                        Disk mount on the host and bind mount to the
                                        pod.
                                      properties:
                                        cachingMode:
                                          description: 'cachingMode is the Host Caching
                                            mode: None, Read Only, Read Write.'
                                          type: string
                                        diskName:
                                          description: diskName is the Name of the
                                            data disk in the blob storage
                                          type: string
                                        diskURI:
                                          description: diskURI is the URI of data
                                            disk in the blob storage
                                          type: string
                                        fsType:
                                          description: fsType is Filesystem type to
                                            mount. Must be a filesystem type supported
                                            by the host operating system. Ex. "ext4",
                                            "xfs", "ntfs". Implicitly inferred to
                                            be "ext4" if unspecified.
                                          type: string
                                        kind:
                                          description: 'kind expected values are Shared:
                                            multiple blob disks per storage account  Dedicated:
                                            single blob disk per storage account  Managed:
                                            azure managed data disk (only in managed
                                            availability set). defaults to shared'
                                          type: string
                                        readOnly:
                                          description: readOnly Defaults to false
                                            (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                      required:
                                      - diskName
                                      - diskURI
                                      type: object
                                    azureFile:
                                      description: azureFile represents an Azure File
                                        Service mount on the host and bind mount to
                                        the pod.
                                      properties:
                                        readOnly:
                                          description: readOnly defaults to false
                                            (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        secretName:
                                          description: secretName is the  name of
                                            secret that contains Azure Storage Account
                                            Name and Key
                                          type: string
                                        shareName:
                                          description: shareName is the azure share
                                            Name
                                          type: string
                                      required:
                                      - secretName
                                      - shareName
                                      type: object
                                    cephfs:
                                      description: cephFS represents a Ceph FS mount
                                        on the host that shares a pod's lifetime
                                      properties:
                                        monitors:
                                          description: 'monitors is Required: Monitors
                                            is a collection of Ceph monitors More
                                            info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          items:
                                            type: string
                                          type: array
                                        path:
                                          description: 'path is Optional: Used as
                                            the mounted root, rather than the full
                                            Ceph tree, default is /'
                                          type: string
                                        readOnly:
                                          description: 'readOnly is Optional: Defaults
                                            to false (read/write). ReadOnly here will
                                            force the ReadOnly setting in VolumeMounts.
                                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          type: boolean
                                        secretFile:
                                          description: 'secretFile is Optional: SecretFile
                                            is the path to key ring for User, default
                                            is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          type: string
                                        secretRef:
                                          description: 'secretRef is Optional: SecretRef
                                            is reference to the authentication secret
                                            for User, default is empty. More info:
                                            https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        user:
                                          description: 'user is optional: User is
                                            the rados user name, default is admin
                                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          type: string
                                      required:
                                      - monitors
                                      type: object
                                    cinder:
                                      description: 'cinder represents a cinder volume
                                        attached and mounted on kubelets host machine.
                                        More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                      properties:
                                        fsType:
                                          description: 'fsType is the filesystem type
                                            to mount. Must be a filesystem type supported
                                            by the host operating system. Examples:
                                            "ext4", "xfs", "ntfs". Implicitly inferred
                                            to be "ext4" if unspecified. More info:
                                            https://examples.k8s.io/mysql-cinder-pd/README.md'
                                          type: string
                                        readOnly:
                                          description: 'readOnly defaults to false
                                            (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                            More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                          type: boolean
                                        secretRef:
                                          description: 'secretRef is optional: points
                                            to a secret object containing parameters
                                            used to connect to OpenStack.'
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        volumeID:
                                          description: 'volumeID used to identify
                                            the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                          type: string
                                      required:
                                      - volumeID
                                      type: object
                                    configMap:
                                      description: configMap represents a configMap
                                        that should populate this volume
                                      properties:
                                        defaultMode:
                                          description: 'defaultMode is optional: mode
                                            bits used to set permissions on created
                                            files by default. Must be an octal value
                                            between 0000 and 0777 or a decimal value
                                            between 0 and 511. YAML accepts both octal
                                            and decimal values, JSON requires decimal
                                            values for mode bits. Defaults to 0644.
                                            Directories within the path are not affected
                                            by this setting. This might be in conflict
                                            with other options that affect the file
                                            mode, like fsGroup, and the result can
                                            be other mode bits set.'
                                          format: int32
                                          type: integer
                                        items:
                                          description: items if unspecified, each
                                            key-value pair in the Data field of the
                                            referenced ConfigMap will be projected
                                            into the volume as a file whose name is
                                            the key and content is the value. If specified,
                                            the listed keys will be projected into
                                            the specified paths, and unlisted keys
                                            will not be present. If a key is specified
                                            which is not present in the ConfigMap,
                                            the volume setup will error unless it
                                            is marked optional. Paths must be relative
                                            and may not contain the '..' path or start
                                            with '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: 'mode is Optional: mode
                                                  bits used to set permissions on
                                                  this file. Must be an octal value
                                                  between 0000 and 0777 or a decimal
                                                  value between 0 and 511. YAML accepts
                                                  both octal and decimal values, JSON
                                                  requires decimal values for mode
                                                  bits. If not specified, the volume
                                                  defaultMode will be used. This might
                                                  be in conflict with other options
                                                  that affect the file mode, like
                                                  fsGroup, and the result can be other
                                                  mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: path is the relative
                                                  path of the file to map the key
                                                  to. May not be an absolute path.
                                                  May not contain the path element
                                                  '..'. May not start with the string
                                                  '..'.
                                                type: string
                                            required:
                                            - key
                                            - path
                                            type: object
                                          type: array
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: optional specify whether the
                                            ConfigMap or its keys must be defined
                                          type: boolean
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    csi:
                                      description: csi (Container Storage Interface)
                                        represents ephemeral storage that is handled
                                        by certain external CSI drivers (Beta feature).
                                      properties:
                                        driver:
                                          description: driver is the name of the CSI
                                            driver that handles this volume. Consult
                                            with your admin for the correct name as
                                            registered in the cluster.
                                          type: string
                                        fsType:
                                          description: fsType to mount. Ex. "ext4",
                                            "xfs", "ntfs". If not provided, the empty
                                            value is passed to the associated CSI
                                            driver which will determine the default
                                            filesystem to apply.
                                          type: string
                                        nodePublishSecretRef:
                                          description: nodePublishSecretRef is a reference
                                            to the secret object containing sensitive
                                            information to pass to the CSI driver
                                            to complete the CSI NodePublishVolume
                                            and NodeUnpublishVolume calls. This field
                                            is optional, and  may be empty if no secret
                                            is required. If the secret object contains
                                            more than one secret, all secret references
                                            are passed.
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        readOnly:
                                          description: readOnly specifies a read-only
                                            configuration for the volume. Defaults
                                            to false (read/write).
                                          type: boolean
                                        volumeAttributes:
                                          additionalProperties:
                                            type: string
                                          description: volumeAttributes stores driver-specific
                                            properties that are passed to the CSI
                                            driver. Consult your driver's documentation
                                            for supported values.
                                          type: object
                                      required:
                                      - driver
                                      type: object
                                    downwardAPI:
                                      description: downwardAPI represents downward
                                        API about the pod that should populate this
                                        volume
                                      properties:
                                        defaultMode:
                                          description: 'Optional: mode bits to use
                                            on created files by default. Must be a
                                            Optional: mode bits used to set permissions
                                            on created files by default. Must be an
                                            octal value between 0000 and 0777 or a
                                            decimal value between 0 and 511. YAML
                                            accepts both octal and decimal values,
                                            JSON requires decimal values for mode
                                            bits. Defaults to 0644. Directories within
                                            the path are not affected by this setting.
                                            This might be in conflict with other options
                                            that affect the file mode, like fsGroup,
                                            and the result can be other mode bits
                                            set.'
                                          format: int32
                                          type: integer
                                        items:
                                          description: Items is a list of downward
                                            API volume file
                                          items:
                                            description: DownwardAPIVolumeFile represents
                                              information to create the file containing
                                              the pod field
                                            properties:
                                              fieldRef:
                                                description: 'Required: Selects a
                                                  field of the pod: only annotations,
                                                  labels, name and namespace are supported.'
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema
                                                      the FieldPath is written in
                                                      terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field
                                                      to select in the specified API
                                                      version.
                                                    type: string
                                                required:
                                                - fieldPath
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              mode:
                                                description: 'Optional: mode bits
                                                  used to set permissions on this
                                                  file, must be an octal value between
                                                  0000 and 0777 or a decimal value
                                                  between 0 and 511. YAML accepts
                                                  both octal and decimal values, JSON
                                                  requires decimal values for mode
                                                  bits. If not specified, the volume
                                                  defaultMode will be used. This might
                                                  be in conflict with other options
                                                  that affect the file mode, like
                                                  fsGroup, and the result can be other
                                                  mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: 'Required: Path is  the
                                                  relative path name of the file to
                                                  be created. Must not be absolute
                                                  or contain the ''..'' path. Must
                                                  be utf-8 encoded. The first item
                                                  of the relative path must not start
                                                  with ''..'''
                                                type: string
                                              resourceFieldRef:
                                                description: 'Selects a resource of
                                                  the container: only resources limits
                                                  and requests (limits.cpu, limits.memory,
                                                  requests.cpu and requests.memory)
                                                  are currently supported.'
                                                properties:
                                                  containerName:
                                                    description: 'Container name:
                                                      required for volumes, optional
                                                      for env vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Specifies the output
                                                      format of the exposed resources,
                                                      defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource
                                                      to select'
                                                    type: string
                                                required:
                                                - resource
                                                type: object
                                                x-kubernetes-map-type: atomic
                                            required:
                                            - path
                                            type: object
                                          type: array
                                      type: object
                                    emptyDir:
                                      description: 'emptyDir represents a temporary
                                        directory that shares a pod''s lifetime. More
                                        info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                      properties:
                                        medium:
                                          description: 'medium represents what type
                                            of storage medium should back this directory.
                                            The default is "" which means to use the
                                            node''s default medium. Must be an empty
                                            string (default) or Memory. More info:
                                            https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                          type: string
                                        sizeLimit:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: 'sizeLimit is the total amount
                                            of local storage required for this EmptyDir
                                            volume. The size limit is also applicable
                                            for memory medium. The maximum usage on
                                            memory medium EmptyDir would be the minimum
                                            value between the SizeLimit specified
                                            here and the sum of memory limits of all
                                            containers in a pod. The default is nil
                                            which means that the limit is undefined.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                      type: object
                                    ephemeral:
                                      description: "ephemeral represents a volume
                                        that is handled by a cluster storage driver.
                                        The volume's lifecycle is tied to the pod
                                        that defines it - it will be created before
                                        the pod starts, and deleted when the pod is
                                        removed. \n Use this if: a) the volume is
                                        only needed while the pod runs, b) features
                                        of normal volumes like restoring from snapshot
                                        or capacity tracking are needed, c) the storage
                                        driver is specified through a storage class,
                                        and d) the storage driver supports dynamic
                                        volume provisioning through a PersistentVolumeClaim
                                        (see EphemeralVolumeSource for more information
                                        on the connection between this volume type
                                        and PersistentVolumeClaim). \n Use PersistentVolumeClaim
                                        or one of the vendor-specific APIs for volumes
                                        that persist for longer than the lifecycle
                                        of an individual pod. \n Use CSI for light-weight
                                        local ephemeral volumes if the CSI driver
                                        is meant to be used that way - see the documentation
                                        of the driver for more information. \n A pod
                                        can use both types of ephemeral volumes and
                                        persistent volumes at the same time."
                                      properties:
                                        volumeClaimTemplate:
                                          description: "Will be used to create a stand-alone
                                            PVC to provision the volume. The pod in
                                            which this EphemeralVolumeSource is embedded
                                            will be the owner of the PVC, i.e. the
                                            PVC will be deleted together with the
                                            pod.  The name of the PVC will be `<pod
                                            name>-<volume name>` where `<volume name>`
                                            is the name from the `PodSpec.Volumes`
                                            array entry. Pod validation will reject
                                            the pod if the concatenated name is not
                                            valid for a PVC (for example, too long).
                                            \n An existing PVC with that name that
                                            is not owned by the pod will *not* be
                                            used for the pod to avoid using an unrelated
                                            volume by mistake. Starting the pod is
                                            then blocked until the unrelated PVC is
                                            removed. If such a pre-created PVC is
                                            meant to be used by the pod, the PVC has
                                            to updated with an owner reference to
                                            the pod once the pod exists. Normally
                                            this should not be necessary, but it may
                                            be useful when manually reconstructing
                                            a broken cluster. \n This field is read-only
                                            and no changes will be made by Kubernetes
                                            to the PVC after it has been created.
                                            \n Required, must not be nil."
                                          properties:
                                            metadata:
                                              description: May contain labels and
                                                annotations that will be copied into
                                                the PVC when creating it. No other
                                                fields are allowed and will be rejected
                                                during validation.
                                              type: object
                                            spec:
                                              description: The specification for the
                                                PersistentVolumeClaim. The entire
                                                content is copied unchanged into the
                                                PVC that gets created from this template.
                                                The same fields as in a PersistentVolumeClaim
                                                are also valid here.
                                              properties:
                                                accessModes:
                                                  description: 'accessModes contains
                                                    the desired access modes the volume
                                                    should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                                  items:
                                                    type: string
                                                  type: array
                                                dataSource:
                                                  description: 'dataSource field can
                                                    be used to specify either: * An
                                                    existing VolumeSnapshot object
                                                    (snapshot.storage.k8s.io/VolumeSnapshot)
                                                    * An existing PVC (PersistentVolumeClaim)
                                                    If the provisioner or an external
                                                    controller can support the specified
                                                    data source, it will create a
                                                    new volume based on the contents
                                                    of the specified data source.
                                                    When the AnyVolumeDataSource feature
                                                    gate is enabled, dataSource contents
                                                    will be copied to dataSourceRef,
                                                    and dataSourceRef contents will
                                                    be copied to dataSource when dataSourceRef.namespace
                                                    is not specified. If the namespace
                                                    is specified, then dataSourceRef
                                                    will not be copied to dataSource.'
                                                  properties:
                                                    apiGroup:
                                                      description: APIGroup is the
                                                        group for the resource being
                                                        referenced. If APIGroup is
                                                        not specified, the specified
                                                        Kind must be in the core API
                                                        group. For any other third-party
                                                        types, APIGroup is required.
                                                      type: string
                                                    kind:
                                                      description: Kind is the type
                                                        of resource being referenced
                                                      type: string
                                                    name:
                                                      description: Name is the name
                                                        of resource being referenced
                                                      type: string
                                                  required:
                                                  - kind
                                                  - name
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                dataSourceRef:
                                                  description: 'dataSourceRef specifies
                                                    the object from which to populate
                                                    the volume with data, if a non-empty
                                                    volume is desired. This may be
                                                    any object from a non-empty API
                                                    group (non core object) or a PersistentVolumeClaim
                                                    object. When this field is specified,
                                                    volume binding will only succeed
                                                    if the type of the specified object
                                                    matches some installed volume
                                                    populator or dynamic provisioner.
                                                    This field will replace the functionality
                                                    of the dataSource field and as
                                                    such if both fields are non-empty,
                                                    they must have the same value.
                                                    For backwards compatibility, when
                                                    namespace isn''t specified in
                                                    dataSourceRef, both fields (dataSource
                                                    and dataSourceRef) will be set
                                                    to the same value automatically
                                                    if one of them is empty and the
                                                    other is non-empty. When namespace
                                                    is specified in dataSourceRef,
                                                    dataSource isn''t set to the same
                                                    value and must be empty. There
                                                    are three important differences
                                                    between dataSource and dataSourceRef:
                                                    * While dataSource only allows
                                                    two specific types of objects,
                                                    dataSourceRef allows any non-core
                                                    object, as well as PersistentVolumeClaim
                                                    objects. * While dataSource ignores
                                                    disallowed values (dropping them),
                                                    dataSourceRef preserves all values,
                                                    and generates an error if a disallowed
                                                    value is specified. * While dataSource
                                                    only allows local objects, dataSourceRef
                                                    allows objects in any namespaces.
                                                    (Beta) Using this field requires
                                                    the AnyVolumeDataSource feature
                                                    gate to be enabled. (Alpha) Using
                                                    the namespace field of dataSourceRef
                                                    requires the CrossNamespaceVolumeDataSource
                                                    feature gate to be enabled.'
                                                  properties:
                                                    apiGroup:
                                                      description: APIGroup is the
                                                        group for the resource being
                                                        referenced. If APIGroup is
                                                        not specified, the specified
                                                        Kind must be in the core API
                                                        group. For any other third-party
                                                        types, APIGroup is required.
                                                      type: string
                                                    kind:
                                                      description: Kind is the type
                                                        of resource being referenced
                                                      type: string
                                                    name:
                                                      description: Name is the name
                                                        of resource being referenced
                                                      type: string
                                                    namespace:
                                                      description: Namespace is the
                                                        namespace of resource being
                                                        referenced Note that when
                                                        a namespace is specified,
                                                        a gateway.networking.k8s.io/ReferenceGrant
                                                        object is required in the
                                                        referent namespace to allow
                                                        that namespace's owner to
                                                        accept the reference. See
                                                        the ReferenceGrant documentation
                                                        for details. (Alpha) This
                                                        field requires the CrossNamespaceVolumeDataSource
                                                        feature gate to be enabled.
                                                      type: string
                                                  required:
                                                  - kind
                                                  - name
                                                  type: object
                                                resources:
                                                  description: 'resources represents
                                                    the minimum resources the volume
                                                    should have. If RecoverVolumeExpansionFailure
                                                    feature is enabled users are allowed
                                                    to specify resource requirements
                                                    that are lower than previous value
                                                    but must still be higher than
                                                    capacity recorded in the status
                                                    field of the claim. More info:
                                                    https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                                  properties:
                                                    claims:
                                                      description: "Claims lists the
                                                        names of resources, defined
                                                        in spec.resourceClaims, that
                                                        are used by this container.
                                                        \n This is an alpha field
                                                        and requires enabling the
                                                        DynamicResourceAllocation
                                                        feature gate. \n This field
                                                        is immutable. It can only
                                                        be set for containers."
                                                      items:
                                                        description: ResourceClaim
                                                          references one entry in
                                                          PodSpec.ResourceClaims.
                                                        properties:
                                                          name:
                                                            description: Name must
                                                              match the name of one
                                                              entry in pod.spec.resourceClaims
                                                              of the Pod where this
                                                              field is used. It makes
                                                              that resource available
                                                              inside a container.
                                                            type: string
                                                        required:
                                                        - name
                                                        type: object
                                                      type: array
                                                      x-kubernetes-list-map-keys:
                                                      - name
                                                      x-kubernetes-list-type: map
                                                    limits:
                                                      additionalProperties:
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                        x-kubernetes-int-or-string: true
                                                      description: 'Limits describes
                                                        the maximum amount of compute
                                                        resources allowed. More info:
                                                        https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                      type: object
                                                    requests:
                                                      additionalProperties:
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                        x-kubernetes-int-or-string: true
                                                      description: 'Requests describes
                                                        the minimum amount of compute
                                                        resources required. If Requests
                                                        is omitted for a container,
                                                        it defaults to Limits if that
                                                        is explicitly specified, otherwise
                                                        to an implementation-defined
                                                        value. Requests cannot exceed
                                                        Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                      type: object
                                                  type: object
                                                selector:
                                                  description: selector is a label
                                                    query over volumes to consider
                                                    for binding.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator
                                                              represents a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists and
                                                              DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is
                                                              an array of string values.
                                                              If the operator is In
                                                              or NotIn, the values
                                                              array must be non-empty.
                                                              If the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. This array is
                                                              replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is
                                                        a map of {key,value} pairs.
                                                        A single {key,value} in the
                                                        matchLabels map is equivalent
                                                        to an element of matchExpressions,
                                                        whose key field is "key",
                                                        the operator is "In", and
                                                        the values array contains
                                                        only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                storageClassName:
                                                  description: 'storageClassName is
                                                    the name of the StorageClass required
                                                    by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                                  type: string
                                                volumeMode:
                                                  description: volumeMode defines
                                                    what type of volume is required
                                                    by the claim. Value of Filesystem
                                                    is implied when not included in
                                                    claim spec.
                                                  type: string
                                                volumeName:
                                                  description: volumeName is the binding
                                                    reference to the PersistentVolume
                                                    backing this claim.
                                                  type: string
                                              type: object
                                          required:
                                          - spec
                                          type: object
                                      type: object
                                    fc:
                                      description: fc represents a Fibre Channel resource
                                        that is attached to a kubelet's host machine
                                        and then exposed to the pod.
                                      properties:
                                        fsType:
                                          description: 'fsType is the filesystem type
                                            to mount. Must be a filesystem type supported
                                            by the host operating system. Ex. "ext4",
                                            "xfs", "ntfs". Implicitly inferred to
                                            be "ext4" if unspecified. TODO: how do
                                            we prevent errors in the filesystem from
                                            compromising the machine'
                                          type: string
                                        lun:
                                          description: 'lun is Optional: FC target
                                            lun number'
                                          format: int32
                                          type: integer
                                        readOnly:
                                          description: 'readOnly is Optional: Defaults
                                            to false (read/write). ReadOnly here will
                                            force the ReadOnly setting in VolumeMounts.'
                                          type: boolean
                                        targetWWNs:
                                          description: 'targetWWNs is Optional: FC
                                            target worldwide names (WWNs)'
                                          items:
                                            type: string
                                          type: array
                                        wwids:
                                          description: 'wwids Optional: FC volume
                                            world wide identifiers (wwids) Either
                                            wwids or combination of targetWWNs and
                                            lun must be set, but not both simultaneously.'
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    flexVolume:
                                      description: flexVolume represents a generic
                                        volume resource that is provisioned/attached
                                        using an exec based plugin.
                                      properties:
                                        driver:
                                          description: driver is the name of the driver
                                            to use for this volume.
                                          type: string
                                        fsType:
                                          description: fsType is the filesystem type
                                            to mount. Must be a filesystem type supported
                                            by the host operating system. Ex. "ext4",
                                            "xfs", "ntfs". The default filesystem
                                            depends on FlexVolume script.
                                          type: string
                                        options:
                                          additionalProperties:
                                            type: string
                                          description: 'options is Optional: this
                                            field holds extra command options if any.'
                                          type: object
                                        readOnly:
                                          description: 'readOnly is Optional: defaults
                                            to false (read/write). ReadOnly here will
                                            force the ReadOnly setting in VolumeMounts.'
                                          type: boolean
                                        secretRef:
                                          description: 'secretRef is Optional: secretRef
                                            is reference to the secret object containing
                                            sensitive information to pass to the plugin
                                            scripts. This may be empty if no secret
                                            object is specified. If the secret object
                                            contains more than one secret, all secrets
                                            are passed to the plugin scripts.'
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      required:
                                      - driver
                                      type: object
                                    flocker:
                                      description: flocker represents a Flocker volume
                                        attached to a kubelet's host machine. This
                                        depends on the Flocker control service being
                                        running
                                      properties:
                                        datasetName:
                                          description: datasetName is Name of the
                                            dataset stored as metadata -> name on
                                            the dataset for Flocker should be considered
                                            as deprecated
                                          type: string
                                        datasetUUID:
                                          description: datasetUUID is the UUID of
                                            the dataset. This is unique identifier
                                            of a Flocker dataset
                                          type: string
                                      type: object
                                    gcePersistentDisk:
                                      description: 'gcePersistentDisk represents a
                                        GCE Disk resource that is attached to a kubelet''s
                                        host machine and then exposed to the pod.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                      properties:
                                        fsType:
                                          description: 'fsType is filesystem type
                                            of the volume that you want to mount.
                                            Tip: Ensure that the filesystem type is
                                            supported by the host operating system.
                                            Examples: "ext4", "xfs", "ntfs". Implicitly
                                            inferred to be "ext4" if unspecified.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                            TODO: how do we prevent errors in the
                                            filesystem from compromising the machine'
                                          type: string
                                        partition:
                                          description: 'partition is the partition
                                            in the volume that you want to mount.
                                            If omitted, the default is to mount by
                                            volume name. Examples: For volume /dev/sda1,
                                            you specify the partition as "1". Similarly,
                                            the volume partition for /dev/sda is "0"
                                            (or you can leave the property empty).
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                          format: int32
                                          type: integer
                                        pdName:
                                          description: 'pdName is unique name of the
                                            PD resource in GCE. Used to identify the
                                            disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                          type: string
                                        readOnly:
                                          description: 'readOnly here will force the
                                            ReadOnly setting in VolumeMounts. Defaults
                                            to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                          type: boolean
                                      required:
                                      - pdName
                                      type: object
                                    gitRepo:
                                      description: 'gitRepo represents a git repository
                                        at a particular revision. DEPRECATED: GitRepo
                                        is deprecated. To provision a container with
                                        a git repo, mount an EmptyDir into an InitContainer
                                        that clones the repo using git, then mount
                                        the EmptyDir into the Pod''s container.'
                                      properties:
                                        directory:
                                          description: directory is the target directory
                                            name. Must not contain or start with '..'.  If
                                            '.' is supplied, the volume directory
                                            will be the git repository.  Otherwise,
                                            if specified, the volume will contain
                                            the git repository in the subdirectory
                                            with the given name.
                                          type: string
                                        repository:
                                          description: repository is the URL
                                          type: string
                                        revision:
                                          description: revision is the commit hash
                                            for the specified revision.
                                          type: string
                                      required:
                                      - repository
                                      type: object
                                    glusterfs:
                                      description: 'glusterfs represents a Glusterfs
                                        mount on the host that shares a pod''s lifetime.
                                        More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                                      properties:
                                        endpoints:
                                          description: 'endpoints is the endpoint
                                            name that details Glusterfs topology.
                                            More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                          type: string
                                        path:
                                          description: 'path is the Glusterfs volume
                                            path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                          type: string
                                        readOnly:
                                          description: 'readOnly here will force the
                                            Glusterfs volume to be mounted with read-only
                                            permissions. Defaults to false. More info:
                                            https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                          type: boolean
                                      required:
                                      - endpoints
                                      - path
                                      type: object
                                    hostPath:
                                      description: 'hostPath represents a pre-existing
                                        file or directory on the host machine that
                                        is directly exposed to the container. This
                                        is generally used for system agents or other
                                        privileged things that are allowed to see
                                        the host machine. Most containers will NOT
                                        need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                        --- TODO(jonesdl) We need to restrict who
                                        can use host directory mounts and who can/can
                                        not mount host directories as read/write.'
                                      properties:
                                        path:
                                          description: 'path of the directory on the
                                            host. If the path is a symlink, it will
                                            follow the link to the real path. More
                                            info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                          type: string
                                        type:
                                          description: 'type for HostPath Volume Defaults
                                            to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                          type: string
                                      required:
                                      - path
                                      type: object
                                    iscsi:
                                      description: 'iscsi represents an ISCSI Disk
                                        resource that is attached to a kubelet''s
                                        host machine and then exposed to the pod.
                                        More info: https://examples.k8s.io/volumes/iscsi/README.md'
                                      properties:
                                        chapAuthDiscovery:
                                          description: chapAuthDiscovery defines whether
                                            support iSCSI Discovery CHAP authentication
                                          type: boolean
                                        chapAuthSession:
                                          description: chapAuthSession defines whether
                                            support iSCSI Session CHAP authentication
                                          type: boolean
                                        fsType:
                                          description: 'fsType is the filesystem type
                                            of the volume that you want to mount.
                                            Tip: Ensure that the filesystem type is
                                            supported by the host operating system.
                                            Examples: "ext4", "xfs", "ntfs". Implicitly
                                            inferred to be "ext4" if unspecified.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                            TODO: how do we prevent errors in the
                                            filesystem from compromising the machine'
                                          type: string
                                        initiatorName:
                                          description: initiatorName is the custom
                                            iSCSI Initiator Name. If initiatorName
                                            is specified with iscsiInterface simultaneously,
                                            new iSCSI interface <target portal>:<volume
                                            name> will be created for the connection.
                                          type: string
                                        iqn:
                                          description: iqn is the target iSCSI Qualified
                                            Name.
                                          type: string
                                        iscsiInterface:
                                          description: iscsiInterface is the interface
                                            Name that uses an iSCSI transport. Defaults
                                            to 'default' (tcp).
                                          type: string
                                        lun:
                                          description: lun represents iSCSI Target
                                            Lun number.
                                          format: int32
                                          type: integer
                                        portals:
                                          description: portals is the iSCSI Target
                                            Portal List. The portal is either an IP
                                            or ip_addr:port if the port is other than
                                            default (typically TCP ports 860 and 3260).
                                          items:
                                            type: string
                                          type: array
                                        readOnly:
                                          description: readOnly here will force the
                                            ReadOnly setting in VolumeMounts. Defaults
                                            to false.
                                          type: boolean
                                        secretRef:
                                          description: secretRef is the CHAP Secret
                                            for iSCSI target and initiator authentication
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        targetPortal:
                                          description: targetPortal is iSCSI Target
                                            Portal. The Portal is either an IP or
                                            ip_addr:port if the port is other than
                                            default (typically TCP ports 860 and 3260).
                                          type: string
                                      required:
                                      - iqn
                                      - lun
                                      - targetPortal
                                      type: object
                                    name:
                                      description: 'name of the volume. Must be a
                                        DNS_LABEL and unique within the pod. More
                                        info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                    nfs:
                                      description: 'nfs represents an NFS mount on
                                        the host that shares a pod''s lifetime More
                                        info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                      properties:
                                        path:
                                          description: 'path that is exported by the
                                            NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                          type: string
                                        readOnly:
                                          description: 'readOnly here will force the
                                            NFS export to be mounted with read-only
                                            permissions. Defaults to false. More info:
                                            https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                          type: boolean
                                        server:
                                          description: 'server is the hostname or
                                            IP address of the NFS server. More info:
                                            https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                          type: string
                                      required:
                                      - path
                                      - server
                                      type: object
                                    persistentVolumeClaim:
                                      description: 'persistentVolumeClaimVolumeSource
                                        represents a reference to a PersistentVolumeClaim
                                        in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                      properties:
                                        claimName:
                                          description: 'claimName is the name of a
                                            PersistentVolumeClaim in the same namespace
                                            as the pod using this volume. More info:
                                            https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                          type: string
                                        readOnly:
                                          description: readOnly Will force the ReadOnly
                                            setting in VolumeMounts. Default false.
                                          type: boolean
                                      required:
                                      - claimName
                                      type: object
                                    photonPersistentDisk:
                                      description: photonPersistentDisk represents
                                        a PhotonController persistent disk attached
                                        and mounted on kubelets host machine
                                      properties:
                                        fsType:
                                          description: fsType is the filesystem type
                                            to mount. Must be a filesystem type supported
                                            by the host operating system. Ex. "ext4",
                                            "xfs", "ntfs". Implicitly inferred to
                                            be "ext4" if unspecified.
                                          type: string
                                        pdID:
                                          description: pdID is the ID that identifies
                                            Photon Controller persistent disk
                                          type: string
                                      required:
                                      - pdID
                                      type: object
                                    portworxVolume:
                                      description: portworxVolume represents a portworx
                                        volume attached and mounted on kubelets host
                                        machine
                                      properties:
                                        fsType:
                                          description: fSType represents the filesystem
                                            type to mount Must be a filesystem type
                                            supported by the host operating system.
                                            Ex. "ext4", "xfs". Implicitly inferred
                                            to be "ext4" if unspecified.
                                          type: string
                                        readOnly:
                                          description: readOnly defaults to false
                                            (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        volumeID:
                                          description: volumeID uniquely identifies
                                            a Portworx volume
                                          type: string
                                      required:
                                      - volumeID
                                      type: object
                                    projected:
                                      description: projected items for all in one
                                        resources secrets, configmaps, and downward
                                        API
                                      properties:
                                        defaultMode:
                                          description: defaultMode are the mode bits
                                            used to set permissions on created files
                                            by default. Must be an octal value between
                                            0000 and 0777 or a decimal value between
                                            0 and 511. YAML accepts both octal and
                                            decimal values, JSON requires decimal
                                            values for mode bits. Directories within
                                            the path are not affected by this setting.
                                            This might be in conflict with other options
                                            that affect the file mode, like fsGroup,
                                            and the result can be other mode bits
                                            set.
                                          format: int32
                                          type: integer
                                        sources:
                                          description: sources is the list of volume
                                            projections
                                          items:
                                            description: Projection that may be projected
                                              along with other supported volume types
                                            properties:
                                              configMap:
                                                description: configMap information
                                                  about the configMap data to project
                                                properties:
                                                  items:
                                                    description: items if unspecified,
                                                      each key-value pair in the Data
                                                      field of the referenced ConfigMap
                                                      will be projected into the volume
                                                      as a file whose name is the
                                                      key and content is the value.
                                                      If specified, the listed keys
                                                      will be projected into the specified
                                                      paths, and unlisted keys will
                                                      not be present. If a key is
                                                      specified which is not present
                                                      in the ConfigMap, the volume
                                                      setup will error unless it is
                                                      marked optional. Paths must
                                                      be relative and may not contain
                                                      the '..' path or start with
                                                      '..'.
                                                    items:
                                                      description: Maps a string key
                                                        to a path within a volume.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            key to project.
                                                          type: string
                                                        mode:
                                                          description: 'mode is Optional:
                                                            mode bits used to set
                                                            permissions on this file.
                                                            Must be an octal value
                                                            between 0000 and 0777
                                                            or a decimal value between
                                                            0 and 511. YAML accepts
                                                            both octal and decimal
                                                            values, JSON requires
                                                            decimal values for mode
                                                            bits. If not specified,
                                                            the volume defaultMode
                                                            will be used. This might
                                                            be in conflict with other
                                                            options that affect the
                                                            file mode, like fsGroup,
                                                            and the result can be
                                                            other mode bits set.'
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: path is the
                                                            relative path of the file
                                                            to map the key to. May
                                                            not be an absolute path.
                                                            May not contain the path
                                                            element '..'. May not
                                                            start with the string
                                                            '..'.
                                                          type: string
                                                      required:
                                                      - key
                                                      - path
                                                      type: object
                                                    type: array
                                                  name:
                                                    description: 'Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: optional specify
                                                      whether the ConfigMap or its
                                                      keys must be defined
                                                    type: boolean
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              downwardAPI:
                                                description: downwardAPI information
                                                  about the downwardAPI data to project
                                                properties:
                                                  items:
                                                    description: Items is a list of
                                                      DownwardAPIVolume file
                                                    items:
                                                      description: DownwardAPIVolumeFile
                                                        represents information to
                                                        create the file containing
                                                        the pod field
                                                      properties:
                                                        fieldRef:
                                                          description: 'Required:
                                                            Selects a field of the
                                                            pod: only annotations,
                                                            labels, name and namespace
                                                            are supported.'
                                                          properties:
                                                            apiVersion:
                                                              description: Version
                                                                of the schema the
                                                                FieldPath is written
                                                                in terms of, defaults
                                                                to "v1".
                                                              type: string
                                                            fieldPath:
                                                              description: Path of
                                                                the field to select
                                                                in the specified API
                                                                version.
                                                              type: string
                                                          required:
                                                          - fieldPath
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        mode:
                                                          description: 'Optional:
                                                            mode bits used to set
                                                            permissions on this file,
                                                            must be an octal value
                                                            between 0000 and 0777
                                                            or a decimal value between
                                                            0 and 511. YAML accepts
                                                            both octal and decimal
                                                            values, JSON requires
                                                            decimal values for mode
                                                            bits. If not specified,
                                                            the volume defaultMode
                                                            will be used. This might
                                                            be in conflict with other
                                                            options that affect the
                                                            file mode, like fsGroup,
                                                            and the result can be
                                                            other mode bits set.'
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: 'Required:
                                                            Path is  the relative
                                                            path name of the file
                                                            to be created. Must not
                                                            be absolute or contain
                                                            the ''..'' path. Must
                                                            be utf-8 encoded. The
                                                            first item of the relative
                                                            path must not start with
                                                            ''..'''
                                                          type: string
                                                        resourceFieldRef:
                                                          description: 'Selects a
                                                            resource of the container:
                                                            only resources limits
                                                            and requests (limits.cpu,
                                                            limits.memory, requests.cpu
                                                            and requests.memory) are
                                                            currently supported.'
                                                          properties:
                                                            containerName:
                                                              description: 'Container
                                                                name: required for
                                                                volumes, optional
                                                                for env vars'
                                                              type: string
                                                            divisor:
                                                              anyOf:
                                                              - type: integer
                                                              - type: string
                                                              description: Specifies
                                                                the output format
                                                                of the exposed resources,
                                                                defaults to "1"
                                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                              x-kubernetes-int-or-string: true
                                                            resource:
                                                              description: 'Required:
                                                                resource to select'
                                                              type: string
                                                          required:
                                                          - resource
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                      required:
                                                      - path
                                                      type: object
                                                    type: array
                                                type: object
                                              secret:
                                                description: secret information about
                                                  the secret data to project
                                                properties:
                                                  items:
                                                    description: items if unspecified,
                                                      each key-value pair in the Data
                                                      field of the referenced Secret
                                                      will be projected into the volume
                                                      as a file whose name is the
                                                      key and content is the value.
                                                      If specified, the listed keys
                                                      will be projected into the specified
                                                      paths, and unlisted keys will
                                                      not be present. If a key is
                                                      specified which is not present
                                                      in the Secret, the volume setup
                                                      will error unless it is marked
                                                      optional. Paths must be relative
                                                      and may not contain the '..'
                                                      path or start with '..'.
                                                    items:
                                                      description: Maps a string key
                                                        to a path within a volume.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            key to project.
                                                          type: string
                                                        mode:
                                                          description: 'mode is Optional:
                                                            mode bits used to set
                                                            permissions on this file.
                                                            Must be an octal value
                                                            between 0000 and 0777
                                                            or a decimal value between
                                                            0 and 511. YAML accepts
                                                            both octal and decimal
                                                            values, JSON requires
                                                            decimal values for mode
                                                            bits. If not specified,
                                                            the volume defaultMode
                                                            will be used. This might
                                                            be in conflict with other
                                                            options that affect the
                                                            file mode, like fsGroup,
                                                            and the result can be
                                                            other mode bits set.'
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: path is the
                                                            relative path of the file
                                                            to map the key to. May
                                                            not be an absolute path.
                                                            May not contain the path
                                                            element '..'. May not
                                                            start with the string
                                                            '..'.
                                                          type: string
                                                      required:
                                                      - key
                                                      - path
                                                      type: object
                                                    type: array
                                                  name:
                                                    description: 'Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: optional field specify
                                                      whether the Secret or its key
                                                      must be defined
                                                    type: boolean
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              serviceAccountToken:
                                                description: serviceAccountToken is
                                                  information about the serviceAccountToken
                                                  data to project
                                                properties:
                                                  audience:
                                                    description: audience is the intended
                                                      audience of the token. A recipient
                                                      of a token must identify itself
                                                      with an identifier specified
                                                      in the audience of the token,
                                                      and otherwise should reject
                                                      the token. The audience defaults
                                                      to the identifier of the apiserver.
                                                    type: string
                                                  expirationSeconds:
                                                    description: expirationSeconds
                                                      is the requested duration of
                                                      validity of the service account
                                                      token. As the token approaches
                                                      expiration, the kubelet volume
                                                      plugin will proactively rotate
                                                      the service account token. The
                                                      kubelet will start trying to
                                                      rotate the token if the token
                                                      is older than 80 percent of
                                                      its time to live or if the token
                                                      is older than 24 hours.Defaults
                                                      to 1 hour and must be at least
                                                      10 minutes.
                                                    format: int64
                                                    type: integer
                                                  path:
                                                    description: path is the path
                                                      relative to the mount point
                                                      of the file to project the token
                                                      into.
                                                    type: string
                                                required:
                                                - path
                                                type: object
                                            type: object
                                          type: array
                                      type: object
                                    quobyte:
                                      description: quobyte represents a Quobyte mount
                                        on the host that shares a pod's lifetime
                                      properties:
                                        group:
                                          description: group to map volume access
                                            to Default is no group
                                          type: string
                                        readOnly:
                                          description: readOnly here will force the
                                            Quobyte volume to be mounted with read-only
                                            permissions. Defaults to false.
                                          type: boolean
                                        registry:
                                          description: registry represents a single
                                            or multiple Quobyte Registry services
                                            specified as a string as host:port pair
                                            (multiple entries are separated with commas)
                                            which acts as the central registry for
                                            volumes
                                          type: string
                                        tenant:
                                          description: tenant owning the given Quobyte
                                            volume in the Backend Used with dynamically
                                            provisioned Quobyte volumes, value is
                                            set by the plugin
                                          type: string
                                        user:
                                          description: user to map volume access to
                                            Defaults to serivceaccount user
                                          type: string
                                        volume:
                                          description: volume is a string that references
                                            an already created Quobyte volume by name.
                                          type: string
                                      required:
                                      - registry
                                      - volume
                                      type: object
                                    rbd:
                                      description: 'rbd represents a Rados Block Device
                                        mount on the host that shares a pod''s lifetime.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md'
                                      properties:
                                        fsType:
                                          description: 'fsType is the filesystem type
                                            of the volume that you want to mount.
                                            Tip: Ensure that the filesystem type is
                                            supported by the host operating system.
                                            Examples: "ext4", "xfs", "ntfs". Implicitly
                                            inferred to be "ext4" if unspecified.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                            TODO: how do we prevent errors in the
                                            filesystem from compromising the machine'
                                          type: string
                                        image:
                                          description: 'image is the rados image name.
                                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: string
                                        keyring:
                                          description: 'keyring is the path to key
                                            ring for RBDUser. Default is /etc/ceph/keyring.
                                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: string
                                        monitors:
                                          description: 'monitors is a collection of
                                            Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          items:
                                            type: string
                                          type: array
                                        pool:
                                          description: 'pool is the rados pool name.
                                            Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: string
                                        readOnly:
                                          description: 'readOnly here will force the
                                            ReadOnly setting in VolumeMounts. Defaults
                                            to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: boolean
                                        secretRef:
                                          description: 'secretRef is name of the authentication
                                            secret for RBDUser. If provided overrides
                                            keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        user:
                                          description: 'user is the rados user name.
                                            Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: string
                                      required:
                                      - image
                                      - monitors
                                      type: object
                                    scaleIO:
                                      description: scaleIO represents a ScaleIO persistent
                                        volume attached and mounted on Kubernetes
                                        nodes.
                                      properties:
                                        fsType:
                                          description: fsType is the filesystem type
                                            to mount. Must be a filesystem type supported
                                            by the host operating system. Ex. "ext4",
                                            "xfs", "ntfs". Default is "xfs".
                                          type: string
                                        gateway:
                                          description: gateway is the host address
                                            of the ScaleIO API Gateway.
                                          type: string
                                        protectionDomain:
                                          description: protectionDomain is the name
                                            of the ScaleIO Protection Domain for the
                                            configured storage.
                                          type: string
                                        readOnly:
                                          description: readOnly Defaults to false
                                            (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        secretRef:
                                          description: secretRef references to the
                                            secret for ScaleIO user and other sensitive
                                            information. If this is not provided,
                                            Login operation will fail.
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        sslEnabled:
                                          description: sslEnabled Flag enable/disable
                                            SSL communication with Gateway, default
                                            false
                                          type: boolean
                                        storageMode:
                                          description: storageMode indicates whether
                                            the storage for a volume should be ThickProvisioned
                                            or ThinProvisioned. Default is ThinProvisioned.
                                          type: string
                                        storagePool:
                                          description: storagePool is the ScaleIO
                                            Storage Pool associated with the protection
                                            domain.
                                          type: string
                                        system:
                                          description: system is the name of the storage
                                            system as configured in ScaleIO.
                                          type: string
                                        volumeName:
                                          description: volumeName is the name of a
                                            volume already created in the ScaleIO
                                            system that is associated with this volume
                                            source.
                                          type: string
                                      required:
                                      - gateway
                                      - secretRef
                                      - system
                                      type: object
                                    secret:
                                      description: 'secret represents a secret that
                                        should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                      properties:
                                        defaultMode:
                                          description: 'defaultMode is Optional: mode
                                            bits used to set permissions on created
                                            files by default. Must be an octal value
                                            between 0000 and 0777 or a decimal value
                                            between 0 and 511. YAML accepts both octal
                                            and decimal values, JSON requires decimal
                                            values for mode bits. Defaults to 0644.
                                            Directories within the path are not affected
                                            by this setting. This might be in conflict
                                            with other options that affect the file
                                            mode, like fsGroup, and the result can
                                            be other mode bits set.'
                                          format: int32
                                          type: integer
                                        items:
                                          description: items If unspecified, each
                                            key-value pair in the Data field of the
                                            referenced Secret will be projected into
                                            the volume as a file whose name is the
                                            key and content is the value. If specified,
                                            the listed keys will be projected into
                                            the specified paths, and unlisted keys
                                            will not be present. If a key is specified
                                            which is not present in the Secret, the
                                            volume setup will error unless it is marked
                                            optional. Paths must be relative and may
                                            not contain the '..' path or start with
                                            '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: 'mode is Optional: mode
                                                  bits used to set permissions on
                                                  this file. Must be an octal value
                                                  between 0000 and 0777 or a decimal
                                                  value between 0 and 511. YAML accepts
                                                  both octal and decimal values, JSON
                                                  requires decimal values for mode
                                                  bits. If not specified, the volume
                                                  defaultMode will be used. This might
                                                  be in conflict with other options
                                                  that affect the file mode, like
                                                  fsGroup, and the result can be other
                                                  mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: path is the relative
                                                  path of the file to map the key
                                                  to. May not be an absolute path.
                                                  May not contain the path element
                                                  '..'. May not start with the string
                                                  '..'.
                                                type: string
                                            required:
                                            - key
                                            - path
                                            type: object
                                          type: array
                                        optional:
                                          description: optional field specify whether
                                            the Secret or its keys must be defined
                                          type: boolean
                                        secretName:
                                          description: 'secretName is the name of
                                            the secret in the pod''s namespace to
                                            use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                          type: string
                                      type: object
                                    storageos:
                                      description: storageOS represents a StorageOS
                                        volume attached and mounted on Kubernetes
                                        nodes.
                                      properties:
                                        fsType:
                                          description: fsType is the filesystem type
                                            to mount. Must be a filesystem type supported
                                            by the host operating system. Ex. "ext4",
                                            "xfs", "ntfs". Implicitly inferred to
                                            be "ext4" if unspecified.
                                          type: string
                                        readOnly:
                                          description: readOnly defaults to false
                                            (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        secretRef:
                                          description: secretRef specifies the secret
                                            to use for obtaining the StorageOS API
                                            credentials.  If not specified, default
                                            values will be attempted.
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        volumeName:
                                          description: volumeName is the human-readable
                                            name of the StorageOS volume.  Volume
                                            names are only unique within a namespace.
                                          type: string
                                        volumeNamespace:
                                          description: volumeNamespace specifies the
                                            scope of the volume within StorageOS.  If
                                            no namespace is specified then the Pod's
                                            namespace will be used.  This allows the
                                            Kubernetes name scoping to be mirrored
                                            within StorageOS for tighter integration.
                                            Set VolumeName to any name to override
                                            the default behaviour. Set to "default"
                                            if you are not using namespaces within
                                            StorageOS. Namespaces that do not pre-exist
                                            within StorageOS will be created.
                                          type: string
                                      type: object
                                    vsphereVolume:
                                      description: vsphereVolume represents a vSphere
                                        volume attached and mounted on kubelets host
                                        machine
                                      properties:
                                        fsType:
                                          description: fsType is filesystem type to
                                            mount. Must be a filesystem type supported
                                            by the host operating system. Ex. "ext4",
                                            "xfs", "ntfs". Implicitly inferred to
                                            be "ext4" if unspecified.
                                          type: string
                                        storagePolicyID:
                                          description: storagePolicyID is the storage
                                            Policy Based Management (SPBM) profile
                                            ID associated with the StoragePolicyName.
                                          type: string
                                        storagePolicyName:
                                          description: storagePolicyName is the storage
                                            Policy Based Management (SPBM) profile
                                            name.
                                          type: string
                                        volumePath:
                                          description: volumePath is the path that
                                            identifies vSphere volume vmdk
                                          type: string
                                      required:
                                      - volumePath
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                            type: object
                          replicas:
                            description: Replicas is the number of desired pods. Defaults
                              to 1.
                            format: int32
                            type: integer
                          strategy:
                            description: The deployment strategy to use to replace
                              existing pods with new ones.
                            properties:
                              rollingUpdate:
                                description: 'Rolling update config params. Present
                                  only if DeploymentStrategyType = RollingUpdate.
                                  --- TODO: Update this to follow our convention for
                                  oneOf, whatever we decide it to be.'
                                properties:
                                  maxSurge:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: 'The maximum number of pods that
                                      can be scheduled above the desired number of
                                      pods. Value can be an absolute number (ex: 5)
                                      or a percentage of desired pods (ex: 10%). This
                                      can not be 0 if MaxUnavailable is 0. Absolute
                                      number is calculated from percentage by rounding
                                      up. Defaults to 25%. Example: when this is set
                                      to 30%, the new ReplicaSet can be scaled up
                                      immediately when the rolling update starts,
                                      such that the total number of old and new pods
                                      do not exceed 130% of desired pods. Once old
                                      pods have been killed, new ReplicaSet can be
                                      scaled up further, ensuring that total number
                                      of pods running at any time during the update
                                      is at most 130% of desired pods.'
                                    x-kubernetes-int-or-string: true
                                  maxUnavailable:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: 'The maximum number of pods that
                                      can be unavailable during the update. Value
                                      can be an absolute number (ex: 5) or a percentage
                                      of desired pods (ex: 10%). Absolute number is
                                      calculated from percentage by rounding down.
                                      This can not be 0 if MaxSurge is 0. Defaults
                                      to 25%. Example: when this is set to 30%, the
                                      old ReplicaSet can be scaled down to 70% of
                                      desired pods immediately when the rolling update
                                      starts. Once new pods are ready, old ReplicaSet
                                      can be scaled down further, followed by scaling
                                      up the new ReplicaSet, ensuring that the total
                                      number of pods available at all times during
                                      the update is at least 70% of desired pods.'
                                    x-kubernetes-int-or-string: true
                                type: object
                              type:
                                description: Type of deployment. Can be "Recreate"
                                  or "RollingUpdate". Default is RollingUpdate.
                                type: string
                            type: object
                        type: object
                      envoyService:
                        description: EnvoyService defines the desired state of the
                          Envoy service resource. If unspecified, default settings
                          for the manged Envoy service resource are applied.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: Annotations that should be appended to the
                              service. By default, no annotations are appended.
                            type: object
                          type:
                            default: LoadBalancer
                            description: Type determines how the Service is exposed.
                              Defaults to LoadBalancer. Valid options are ClusterIP,
                              LoadBalancer and NodePort. "LoadBalancer" means a service
                              will be exposed via an external load balancer (if the
                              cloud provider supports it). "ClusterIP" means a service
                              will only be accessible inside the cluster, via the
                              cluster IP. "NodePort" means a service will be exposed
                              on a static Port on all Nodes of the cluster.
                            enum:
                            - ClusterIP
                            - LoadBalancer
                            - NodePort
                            type: string
                        type: object
                    type: object
                  type:
                    description: Type is the type of resource provider to use. A resource
                      provider provides infrastructure resources for running the data
                      plane, e.g. Envoy proxy, and optional auxiliary control planes.
                      Supported types are "Kubernetes".
                    enum:
                    - Kubernetes
                    type: string
                required:
                - type
                type: object
              telemetry:
                description: Telemetry defines telemetry parameters for managed proxies.
                properties:
                  accessLog:
                    description: AccessLogs defines accesslog parameters for managed
                      proxies. If unspecified, will send default format to stdout.
                    properties:
                      disable:
                        description: Disable disables access logging for managed proxies
                          if set to true.
                        type: boolean
                      settings:
                        description: Settings defines accesslog settings for managed
                          proxies. If unspecified, will send default format to stdout.
                        items:
                          properties:
                            format:
                              description: Format defines the format of accesslog.
                              properties:
                                json:
                                  additionalProperties:
                                    type: string
                                  description: JSON is additional attributes that
                                    describe the specific event occurrence. Structured
                                    format for the envoy access logs. Envoy [command
                                    operators](https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage#command-operators)
                                    can be used as values for fields within the Struct.
                                    It's required when the format type is "JSON".
                                  type: object
                                text:
                                  description: Text defines the text accesslog format,
                                    following Envoy accesslog formatting, empty value
                                    results in proxy's default access log format.
                                    It's required when the format type is "Text".
                                    Envoy [command operators](https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage#command-operators)
                                    may be used in the format. The [format string
                                    documentation](https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage#config-access-log-format-strings)
                                    provides more information.
                                  type: string
                                type:
                                  description: Type defines the type of accesslog
                                    format.
                                  enum:
                                  - Text
                                  - JSON
                                  type: string
                              type: object
                            sinks:
                              description: Sinks defines the sinks of accesslog.
                              items:
                                properties:
                                  file:
                                    description: File defines the file accesslog sink.
                                    properties:
                                      path:
                                        description: Path defines the file path used
                                          to expose envoy access log(e.g. /dev/stdout).
                                          Empty value disables accesslog.
                                        type: string
                                    type: object
                                  openTelemetry:
                                    description: OpenTelemetry defines the OpenTelemetry
                                      accesslog sink.
                                    properties:
                                      host:
                                        description: Host define the extension service
                                          hostname.
                                        type: string
                                      port:
                                        default: 4317
                                        description: Port defines the port the extension
                                          service is exposed on.
                                        format: int32
                                        minimum: 0
                                        type: integer
                                      resources:
                                        additionalProperties:
                                          type: string
                                        description: Resources is a set of labels
                                          that describe the source of a log entry,
                                          including envoy node info. It's recommended
                                          to follow [semantic conventions](https://opentelemetry.io/docs/reference/specification/resource/semantic_conventions/).
                                        type: object
                                    required:
                                    - host
                                    type: object
                                  type:
                                    description: Type defines the type of accesslog
                                      sink.
                                    enum:
                                    - File
                                    - OpenTelemetry
                                    type: string
                                type: object
                              minItems: 1
                              type: array
                          required:
                          - format
                          - sinks
                          type: object
                        type: array
                    type: object
                  metrics:
                    description: Metrics defines metrics configuration for managed
                      proxies.
                    properties:
                      prometheus:
                        description: Prometheus defines the configuration for Admin
                          endpoint `/stats/prometheus`.
                        type: object
                      sinks:
                        description: Sinks defines the metric sinks where metrics
                          are sent to.
                        items:
                          properties:
                            openTelemetry:
                              description: OpenTelemetry defines the configuration
                                for OpenTelemetry sink. It's required if the sink
                                type is OpenTelemetry.
                              properties:
                                host:
                                  description: Host define the service hostname.
                                  type: string
                                port:
                                  default: 4317
                                  description: Port defines the port the service is
                                    exposed on.
                                  format: int32
                                  maximum: 65535
                                  minimum: 0
                                  type: integer
                              required:
                              - host
                              type: object
                            type:
                              default: OpenTelemetry
                              description: Type defines the metric sink type. EG currently
                                only supports OpenTelemetry.
                              enum:
                              - OpenTelemetry
                              type: string
                          required:
                          - type
                          type: object
                        type: array
                    type: object
                  tracing:
                    description: Tracing defines tracing configuration for managed
                      proxies. If unspecified, will not send tracing data.
                    properties:
                      customTags:
                        additionalProperties:
                          properties:
                            environment:
                              description: Environment adds value from environment
                                variable to each span. It's required when the type
                                is "Environment".
                              properties:
                                defaultValue:
                                  description: DefaultValue defines the default value
                                    to use if the environment variable is not set.
                                  type: string
                                name:
                                  description: Name defines the name of the environment
                                    variable which to extract the value from.
                                  type: string
                              required:
                              - name
                              type: object
                            literal:
                              description: Literal adds hard-coded value to each span.
                                It's required when the type is "Literal".
                              properties:
                                value:
                                  description: Value defines the hard-coded value
                                    to add to each span.
                                  type: string
                              required:
                              - value
                              type: object
                            requestHeader:
                              description: RequestHeader adds value from request header
                                to each span. It's required when the type is "RequestHeader".
                              properties:
                                defaultValue:
                                  description: DefaultValue defines the default value
                                    to use if the request header is not set.
                                  type: string
                                name:
                                  description: Name defines the name of the request
                                    header which to extract the value from.
                                  type: string
                              required:
                              - name
                              type: object
                            type:
                              default: Literal
                              description: Type defines the type of custom tag.
                              enum:
                              - Literal
                              - Environment
                              - RequestHeader
                              type: string
                          required:
                          - type
                          type: object
                        description: CustomTags defines the custom tags to add to
                          each span. If provider is kubernetes, pod name and namespace
                          are added by default.
                        type: object
                      provider:
                        description: Provider defines the tracing provider. Only OpenTelemetry
                          is supported currently.
                        properties:
                          host:
                            description: Host define the provider service hostname.
                            type: string
                          port:
                            default: 4317
                            description: Port defines the port the provider service
                              is exposed on.
                            format: int32
                            minimum: 0
                            type: integer
                          type:
                            default: OpenTelemetry
                            description: Type defines the tracing provider type. EG
                              currently only supports OpenTelemetry.
                            enum:
                            - OpenTelemetry
                            type: string
                        required:
                        - host
                        - type
                        type: object
                      samplingRate:
                        default: 100
                        description: SamplingRate controls the rate at which traffic
                          will be selected for tracing if no prior sampling decision
                          has been made. Defaults to 100, valid values [0-100]. 100
                          indicates 100% sampling.
                        format: int32
                        maximum: 100
                        minimum: 0
                        type: integer
                    required:
                    - provider
                    type: object
                type: object
            type: object
          status:
            description: EnvoyProxyStatus defines the actual state of EnvoyProxy.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: eg-edge-stack-crds/templates/envoy-gateway/gateway.envoyproxy.io_authenticationfilters.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: authenticationfilters.gateway.envoyproxy.io
spec:
  group: gateway.envoyproxy.io
  names:
    kind: AuthenticationFilter
    listKind: AuthenticationFilterList
    plural: authenticationfilters
    singular: authenticationfilter
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of the AuthenticationFilter
              type.
            properties:
              jwtProviders:
                description: JWT defines the JSON Web Token (JWT) authentication provider
                  type. When multiple jwtProviders are specified, the JWT is considered
                  valid if any of the providers successfully validate the JWT. For
                  additional details, see https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/jwt_authn_filter.html.
                items:
                  description: 'JwtAuthenticationFilterProvider defines the JSON Web
                    Token (JWT) authentication provider type and how JWTs should be
                    verified:'
                  properties:
                    audiences:
                      description: Audiences is a list of JWT audiences allowed access.
                        For additional details, see https://tools.ietf.org/html/rfc7519#section-4.1.3.
                        If not provided, JWT audiences are not checked.
                      items:
                        type: string
                      maxItems: 8
                      type: array
                    claimToHeaders:
                      description: 'ClaimToHeaders is a list of JWT claims that must
                        be extracted into HTTP request headers For examples, following
                        config: The claim must be of type; string, int, double, bool.
                        Array type claims are not supported'
                      items:
                        description: ClaimToHeader defines a configuration to convert
                          JWT claims into HTTP headers
                        properties:
                          claim:
                            description: 'Claim is the JWT Claim that should be saved
                              into the header : it can be a nested claim of type (eg.
                              "claim.nested.key", "sub"). The nested claim name must
                              use dot "." to separate the JSON name path.'
                            type: string
                          header:
                            description: Header defines the name of the HTTP request
                              header that the JWT Claim will be saved into.
                            type: string
                        required:
                        - claim
                        - header
                        type: object
                      type: array
                    issuer:
                      description: Issuer is the principal that issued the JWT and
                        takes the form of a URL or email address. For additional details,
                        see https://tools.ietf.org/html/rfc7519#section-4.1.1 for
                        URL format and https://rfc-editor.org/rfc/rfc5322.html for
                        email format. If not provided, the JWT issuer is not checked.
                      maxLength: 253
                      type: string
                    name:
                      description: Name defines a unique name for the JWT provider.
                        A name can have a variety of forms, including RFC1123 subdomains,
                        RFC 1123 labels, or RFC 1035 labels.
                      maxLength: 253
                      minLength: 1
                      type: string
                    remoteJWKS:
                      description: RemoteJWKS defines how to fetch and cache JSON
                        Web Key Sets (JWKS) from a remote HTTP/HTTPS endpoint.
                      properties:
                        uri:
                          description: URI is the HTTPS URI to fetch the JWKS. Envoy's
                            system trust bundle is used to validate the server certificate.
                          maxLength: 253
                          minLength: 1
                          type: string
                      required:
                      - uri
                      type: object
                  required:
                  - name
                  - remoteJWKS
                  type: object
                maxItems: 4
                type: array
              type:
                description: Type defines the type of authentication provider to use.
                  Supported provider types are "JWT".
                enum:
                - JWT
                type: string
            required:
            - type
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
---
# Source: eg-edge-stack-crds/templates/envoy-gateway/gateway.envoyproxy.io_envoypatchpolicies.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: envoypatchpolicies.gateway.envoyproxy.io
spec:
  group: gateway.envoyproxy.io
  names:
    kind: EnvoyPatchPolicy
    listKind: EnvoyPatchPolicyList
    plural: envoypatchpolicies
    singular: envoypatchpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Programmed")].reason
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EnvoyPatchPolicy allows the user to modify the generated Envoy
          xDS resources by Envoy Gateway using this patch API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of EnvoyPatchPolicy.
            properties:
              jsonPatches:
                description: JSONPatch defines the JSONPatch configuration.
                items:
                  description: EnvoyJSONPatchConfig defines the configuration for
                    patching a Envoy xDS Resource using JSONPatch semantic
                  properties:
                    name:
                      description: Name is the name of the resource
                      type: string
                    operation:
                      description: Patch defines the JSON Patch Operation
                      properties:
                        op:
                          description: Op is the type of operation to perform
                          enum:
                          - add
                          - remove
                          - replace
                          - move
                          - copy
                          - test
                          type: string
                        path:
                          description: Path is the location of the target document/field
                            where the operation will be performed Refer to https://datatracker.ietf.org/doc/html/rfc6901
                            for more details.
                          type: string
                        value:
                          description: Value is the new value of the path location.
                          x-kubernetes-preserve-unknown-fields: true
                      required:
                      - op
                      - path
                      - value
                      type: object
                    type:
                      description: Type is the typed URL of the Envoy xDS Resource
                      enum:
                      - type.googleapis.com/envoy.config.listener.v3.Listener
                      - type.googleapis.com/envoy.config.route.v3.RouteConfiguration
                      - type.googleapis.com/envoy.config.cluster.v3.Cluster
                      - type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment
                      type: string
                  required:
                  - name
                  - operation
                  - type
                  type: object
                type: array
              priority:
                description: Priority of the EnvoyPatchPolicy. If multiple EnvoyPatchPolicies
                  are applied to the same TargetRef, they will be applied in the ascending
                  order of the priority i.e. int32.min has the highest priority and
                  int32.max has the lowest priority. Defaults to 0.
                format: int32
                type: integer
              targetRef:
                description: TargetRef is the name of the Gateway API resource this
                  policy is being attached to. Currently only attaching to Gateway
                  is supported This Policy and the TargetRef MUST be in the same namespace
                  for this Policy to have effect and be applied to the Gateway TargetRef
                properties:
                  group:
                    description: Group is the group of the target resource.
                    maxLength: 253
                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  kind:
                    description: Kind is kind of the target resource.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                    type: string
                  name:
                    description: Name is the name of the target resource.
                    maxLength: 253
                    minLength: 1
                    type: string
                  namespace:
                    description: Namespace is the namespace of the referent. When
                      unspecified, the local namespace is inferred. Even when policy
                      targets a resource in a different namespace, it MUST only apply
                      to traffic originating from the same namespace as the policy.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                required:
                - group
                - kind
                - name
                type: object
              type:
                description: Type decides the type of patch. Valid EnvoyPatchType
                  values are "JSONPatch".
                enum:
                - JSONPatch
                type: string
            required:
            - priority
            - targetRef
            - type
            type: object
          status:
            description: Status defines the current status of EnvoyPatchPolicy.
            properties:
              conditions:
                description: Conditions describe the current conditions of the EnvoyPatchPolicy.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: eg-edge-stack-crds/templates/envoy-gateway/gateway.envoyproxy.io_ratelimitfilters.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: ratelimitfilters.gateway.envoyproxy.io
spec:
  group: gateway.envoyproxy.io
  names:
    kind: RateLimitFilter
    listKind: RateLimitFilterList
    plural: ratelimitfilters
    singular: ratelimitfilter
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RateLimitFilter allows the user to limit the number of incoming
          requests to a predefined value based on attributes within the traffic flow.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of RateLimitFilter.
            properties:
              global:
                description: Global defines global rate limit configuration.
                properties:
                  rules:
                    description: Rules are a list of RateLimit selectors and limits.
                      Each rule and its associated limit is applied in a mutually
                      exclusive way i.e. if multiple rules get selected, each of their
                      associated limits get applied, so a single traffic request might
                      increase the rate limit counters for multiple rules if selected.
                    items:
                      description: RateLimitRule defines the semantics for matching
                        attributes from the incoming requests, and setting limits
                        for them.
                      properties:
                        clientSelectors:
                          description: ClientSelectors holds the list of select conditions
                            to select specific clients using attributes from the traffic
                            flow. All individual select conditions must hold True
                            for this rule and its limit to be applied. If this field
                            is empty, it is equivalent to True, and the limit is applied.
                          items:
                            description: RateLimitSelectCondition specifies the attributes
                              within the traffic flow that can be used to select a
                              subset of clients to be ratelimited. All the individual
                              conditions must hold True for the overall condition
                              to hold True.
                            properties:
                              headers:
                                description: Headers is a list of request headers
                                  to match. Multiple header values are ANDed together,
                                  meaning, a request MUST match all the specified
                                  headers.
                                items:
                                  description: HeaderMatch defines the match attributes
                                    within the HTTP Headers of the request.
                                  properties:
                                    name:
                                      description: Name of the HTTP header.
                                      maxLength: 256
                                      minLength: 1
                                      type: string
                                    type:
                                      default: Exact
                                      description: Type specifies how to match against
                                        the value of the header.
                                      enum:
                                      - Exact
                                      - RegularExpression
                                      - Distinct
                                      type: string
                                    value:
                                      description: Value within the HTTP header. Due
                                        to the case-insensitivity of header names,
                                        "foo" and "Foo" are considered equivalent.
                                        Do not set this field when Type="Distinct",
                                        implying matching on any/all unique values
                                        within the header.
                                      maxLength: 1024
                                      type: string
                                  required:
                                  - name
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              sourceCIDR:
                                description: SourceCIDR is the client IP Address range
                                  to match on.
                                properties:
                                  type:
                                    default: Exact
                                    type: string
                                  value:
                                    description: Value is the IP CIDR that represents
                                      the range of Source IP Addresses of the client.
                                      These could also be the intermediate addresses
                                      through which the request has flown through
                                      and is part of the  `X-Forwarded-For` header.
                                      For example, `192.168.0.1/32`, `192.168.0.0/24`,
                                      `001:db8::/64`.
                                    maxLength: 256
                                    minLength: 1
                                    type: string
                                required:
                                - value
                                type: object
                              sourceIP:
                                description: 'Deprecated: Use SourceCIDR instead.'
                                type: string
                            type: object
                          maxItems: 8
                          type: array
                        limit:
                          description: Limit holds the rate limit values. This limit
                            is applied for traffic flows when the selectors compute
                            to True, causing the request to be counted towards the
                            limit. The limit is enforced and the request is ratelimited,
                            i.e. a response with 429 HTTP status code is sent back
                            to the client when the selected requests have reached
                            the limit.
                          properties:
                            requests:
                              type: integer
                            unit:
                              description: RateLimitUnit specifies the intervals for
                                setting rate limits. Valid RateLimitUnit values are
                                "Second", "Minute", "Hour", and "Day".
                              enum:
                              - Second
                              - Minute
                              - Hour
                              - Day
                              type: string
                          required:
                          - requests
                          - unit
                          type: object
                      required:
                      - limit
                      type: object
                    maxItems: 16
                    type: array
                required:
                - rules
                type: object
              type:
                description: Type decides the scope for the RateLimits. Valid RateLimitType
                  values are "Global".
                enum:
                - Global
                type: string
            required:
            - type
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
---
# Source: eg-edge-stack-crds/templates/generated/gateway.getambassador.io_filterpolicies.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: filterpolicies.gateway.getambassador.io
spec:
  group: gateway.getambassador.io
  names:
    kind: FilterPolicy
    listKind: FilterPolicyList
    plural: filterpolicies
    shortNames:
    - fp
    singular: filterpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].reason
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: "FilterPolicy provides a way to apply Filters against incoming
          request for use cases such as authentication (OAUTH2 &  JWT), injecting
          custom business logic or doing authorization. \n The FilterPolicy defines
          a set of matching rules that determine which set of Filters to apply and
          allow re-ordering filters on a per-route basis."
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired user configuration for a FilterPolicy
              that contains the set of rules.
            properties:
              rules:
                description: Rules are a set of matching rules that are checked against
                  incoming request to determine which set of Filter's to apply. If
                  no matches are found then the request is allowed through to the
                  upstream service without executing any Filters.
                items:
                  description: FilterPolicyRule contains the users configuration rules
                    for apply filters to requests
                  properties:
                    filterRefs:
                      description: "FilterRefs are a list of references to Filter's
                        that will be applied to the incoming request. Filters will
                        be applied to the request in the order they are listed. \n
                        If no filters are provided then the request will be allowed
                        through to the upstream service without any additional processing.
                        This allows for having one Rule that is overly permissive
                        and then using a single rule to opt-out on certain paths."
                      items:
                        description: FilterReference contains a reference to a Filter
                          along with specific configuration for the filter. Each Filter
                          will have its own subset of arguments that it can use.
                        properties:
                          arguments:
                            description: FilterArguments are strongly typed input
                              arguments that can be passed into a Filter on per FilterReference
                              level allowing for different behavior on different Rules.
                            properties:
                              apikey:
                                description: APIKeyArguments define the input arguments
                                  that can be set for an APIKeyFilter on a per FilterPolicy
                                  Rule level.
                                type: object
                              external:
                                description: ExternalArguments define the input arguments
                                  that can be set for an ExternalFilter on a per FilterPolicy
                                  Rule level.
                                type: object
                              jwt:
                                description: JWTArguments define the input arguments
                                  that can be set for an JWTFilter on a per FilterPolicy
                                  Rule level.
                                properties:
                                  scope:
                                    description: Scope is a set of scopes the JWT
                                      will be validated against.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              oauth2:
                                description: OAuth2Arguments define the input arguments
                                  that can be set for an OAuth2Filter on a per FilterPolicy
                                  Rule level.
                                properties:
                                  insteadOfRedirect:
                                    description: InsteadOfRedirect allows customizing
                                      the behavior of the OAuthRedirect and whether
                                      it will redirect the browser or not.
                                    properties:
                                      filterRefs:
                                        description: "FilterRefs are a list of references
                                          to Filter's that will be applied when an
                                          OAuth2 session has expired and the user
                                          would like to try a secondary authentication
                                          mechanism without redircting to the iDP.
                                          \n Nesting an OAuth2Filter inside of an
                                          OAuth2Filter is not supported."
                                        x-kubernetes-preserve-unknown-fields: true
                                      ifRequestHeader:
                                        description: IfRequestHeader allows only applying
                                          the InsteadOfRedirect logic when a the header
                                          matches.
                                        properties:
                                          name:
                                            description: "Name of the HTTP Header
                                              to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n Valid values include: \n * \"Authorization\"
                                              * \"Set-Cookie\" \n Invalid values include:
                                              \n - \":method\" - \":\" is an invalid
                                              character. This means that HTTP/2 pseudo
                                              headers are not currently supported
                                              by this type. - \"/invalid\" - \"/\"
                                              is an invalid character"
                                            type: string
                                          negate:
                                            description: "Allows the match criteria
                                              to be negated or flipped. \n For example,
                                              you can have a regex that checks for
                                              any non-empty string which would indicate
                                              would translate to if header exists
                                              on request then match on it. With negate
                                              turned on this would translate to match
                                              on any request that doesn't have a header."
                                            type: boolean
                                          type:
                                            default: Exact
                                            description: "Specifies the semantics
                                              of how HTTP header values should be
                                              compared. Valid HeaderMatchType values
                                              are: \n * \"Exact\" * \"RegularExpression\""
                                            enum:
                                            - Exact
                                            - RegularExpression
                                            type: string
                                          value:
                                            description: "Value of HTTP Header to
                                              be matched. \n if type is RegularExpression
                                              then this must be a valid regex with
                                              length being at least 1"
                                            maxLength: 4096
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      statusCode:
                                        description: StatusCode is the HTTP status
                                          code to be used in response. If filterRef
                                          is not set then this will default to a 403
                                          forbidden.
                                        type: integer
                                    type: object
                                  sameSite:
                                    default: lax
                                    description: SameSite allows a server to define
                                      a cookie attribute making it impossible for
                                      the browser to send this cookie along with cross-site
                                      requests. The main goal is to mitigate the risk
                                      of cross-origin information leakage, and provide
                                      some protection against cross-site request forgery
                                      attacks.
                                    enum:
                                    - default
                                    - none
                                    - lax
                                    - strict
                                    type: string
                                  scope:
                                    description: Scope is a set of scopes the JWT
                                      will be validated against.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              plugin:
                                description: PluginArguments define the input arguments
                                  that can be set for an PluginFilter on a per FilterPolicy
                                  Rule level.
                                type: object
                              type:
                                description: "Type identifies the expected type of
                                  the arguments that will be passed to the FilterRef.
                                  \n This must match the type of the FilterRef and
                                  if it doesn't the FilterPolicy Rule will be considered
                                  invalid and a status condition will be updated to
                                  indicate the mismatch."
                                enum:
                                - oauth2
                                - jwt
                                - apikey
                                - external
                                - plugin
                                type: string
                            required:
                            - type
                            type: object
                          ifRequestHeader:
                            description: IfRequestHeader checks if exact or regular
                              expression matches a value in a request Header to determine
                              if an individual Filter is executed or not.
                            properties:
                              name:
                                description: "Name of the HTTP Header to be matched.
                                  Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                  \n Valid values include: \n * \"Authorization\"
                                  * \"Set-Cookie\" \n Invalid values include: \n -
                                  \":method\" - \":\" is an invalid character. This
                                  means that HTTP/2 pseudo headers are not currently
                                  supported by this type. - \"/invalid\" - \"/\" is
                                  an invalid character"
                                type: string
                              negate:
                                description: "Allows the match criteria to be negated
                                  or flipped. \n For example, you can have a regex
                                  that checks for any non-empty string which would
                                  indicate would translate to if header exists on
                                  request then match on it. With negate turned on
                                  this would translate to match on any request that
                                  doesn't have a header."
                                type: boolean
                              type:
                                default: Exact
                                description: "Specifies the semantics of how HTTP
                                  header values should be compared. Valid HeaderMatchType
                                  values are: \n * \"Exact\" * \"RegularExpression\""
                                enum:
                                - Exact
                                - RegularExpression
                                type: string
                              value:
                                description: "Value of HTTP Header to be matched.
                                  \n if type is RegularExpression then this must be
                                  a valid regex with length being at least 1"
                                maxLength: 4096
                                type: string
                            required:
                            - name
                            type: object
                          name:
                            description: Name that identifies the Filter
                            minLength: 1
                            type: string
                          namespace:
                            description: "Namespace refers to a Kubernetes namespace
                              that the Filter resides. It must be a RFC 1123 label.
                              \n This validation is based off of the corresponding
                              Kubernetes validation: https://github.com/kubernetes/apimachinery/blob/02cfb53916346d085a6c6c7c66f882e3c6b0eca6/pkg/util/validation/validation.go#L187
                              \n This is used for Namespace name validation here:
                              https://github.com/kubernetes/apimachinery/blob/02cfb53916346d085a6c6c7c66f882e3c6b0eca6/pkg/api/validation/generic.go#L63
                              \n Valid values include: \n * \"example\" \n Invalid
                              values include: \n * \"example.com\" - \".\" is an invalid
                              character"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          onAllow:
                            default: continue
                            description: OnAllowAction identifies the FilterAction
                              that determines the behavior after a Filter allows the
                              request.
                            enum:
                            - break
                            - continue
                            type: string
                          onDeny:
                            default: break
                            description: OnDenyAction identifies the FilterAction
                              that determines the behavior when a Filter denies the
                              request.
                            enum:
                            - break
                            - continue
                            type: string
                        required:
                        - name
                        type: object
                      maxItems: 5
                      type: array
                    host:
                      default: '*'
                      description: Host is a "glob-string" that matches on the `:authority`
                        header of the incoming request. If not set it will match on
                        all incoming requests.
                      type: string
                    path:
                      default: '*'
                      description: Path is a "glob-string" that matches on the request
                        path. If not provided then it will match on all incoming requests.
                      type: string
                    precedence:
                      description: Precedence allows forcing a precedence ordering
                        on the rules. By default the rules are evaluated in the order
                        they are in the `FilterPolicy.spec.rules` field. However,
                        multiple FilterPolicy's can be applied to a cluster. To ensure
                        that a specific ordering is enforced then using a precedence
                        on rules ensures a specific ordering.
                      type: integer
                  type: object
                minItems: 1
                type: array
            type: object
          status:
            description: Status defines the current state of FilterPolicy that provides
              users feedback on whether it is configured correctly.
            properties:
              conditions:
                description: "Conditions describe the current conditions of the FilterPolicy
                  \n TODO:(lance) - determine if these are the bes Known condition
                  types are: \n * \"Accepted\" * \"Ready\" * \"Rejected\" - if any
                  rules have an error then the whole FilterPolicy will be rejected."
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              rules:
                description: Rules provide status for each unique Rule defined in
                  the Spec.
                items:
                  description: 'TODO: (lance) - come with better conditions/status
                    types that provide more information FilterPolicyRuleStatus is
                    the status associated to a Rule within a FilterPolicy.'
                  properties:
                    conditions:
                      description: Conditions describe the current condition of this
                        Rule.
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource. --- This struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example, \n type FooStatus struct{
                          // Represents the observations of a foo's current state.
                          // Known .status.conditions.type are: \"Available\", \"Progressing\",
                          and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                          // +listType=map // +listMapKey=type Conditions []metav1.Condition
                          `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                          protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields
                          }"
                        properties:
                          lastTransitionTime:
                            description: lastTransitionTime is the last time the condition
                              transitioned from one status to another. This should
                              be when the underlying condition changed.  If that is
                              not known, then using the time when the API field changed
                              is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: message is a human readable message indicating
                              details about the transition. This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: observedGeneration represents the .metadata.generation
                              that the condition was set based upon. For instance,
                              if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                              is 9, the condition is out of date with respect to the
                              current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. The value should
                              be a CamelCase string. This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                              --- Many .condition.type values are consistent across
                              resources like Available, but because arbitrary conditions
                              can be useful (see .node.status.conditions), the ability
                              to deconflict is important. The regex it matches is
                              (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    host:
                      description: Host to help identify the rule with the error.
                      type: string
                    index:
                      description: Index provides the zero-based index in the list
                        of Rules to help identify the rule with an error
                      type: integer
                    path:
                      description: Path to help identify the rule with the error.
                      type: string
                  required:
                  - conditions
                  - host
                  - index
                  - path
                  type: object
                maxItems: 64
                type: array
                x-kubernetes-list-map-keys:
                - index
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: eg-edge-stack-crds/templates/generated/gateway.getambassador.io_filters.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: filters.gateway.getambassador.io
spec:
  group: gateway.getambassador.io
  names:
    kind: Filter
    listKind: FilterList
    plural: filters
    shortNames:
    - fil
    singular: filter
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].reason
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Filter provides the desired configuration for a specific type
          of supported filters that can be referenced within FilterPolicies and applied
          to incoming requests.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired user configuration for a Filter.
            properties:
              apikey:
                description: APIKeyFilter provides support for validation APIKeys
                properties:
                  httpHeader:
                    default: X-API-KEY
                    description: HTTPHeader is the name of the http header where the
                      api-key will be found. By default it will be found in a case-insensitve
                      header as "x-api-key".
                    type: string
                  keys:
                    description: Keys are the set of APIKeys that are used to check
                      the whether the incoming request is valid. Currently it only
                      supports storing them in local Key
                    items:
                      description: APIKeyItem defines how to resolve the values of
                        the keys. Currently the only supported way to resolve a key
                        is via a local secret. APIKeys cannot use shared secrets accross
                        namespaces.
                      properties:
                        secretName:
                          description: Name of secret in within the same namespace
                            as the APIKeyFilter.
                          type: string
                      required:
                      - secretName
                      type: object
                    minItems: 1
                    type: array
                required:
                - keys
                type: object
              external:
                description: "ExternalFilter allows users to provide their own Service
                  that implements the Envoy ext_authz CheckRequest interface. \n The
                  ExternalFilter acts as a proxy between the Envoy, the Edge Stack
                  Auth Service and the user provided Service. This has the benefit
                  of allowing users to re-order Filters on a per route level and to
                  mix it along with the other Filters."
                properties:
                  authServiceURL:
                    pattern: ^https?:\/\/(?:www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b(?:[-a-zA-Z0-9()@:%_\+.~#?&\/=]*)$
                    type: string
                    x-kubernetes-validations:
                    - message: authServiceURL must be an absolute url
                      rule: isURL(self) && url(self).getScheme() != ""
                  failureModeAllow:
                    default: false
                    description: FailureModeAllow determines what happens when Edge
                      Stack cannot communicate with the External Service due to network
                      issues, or service not being available. By default, the ExternalFilter
                      will reject the request if it is unable to communicate. This
                      can be overriden by setting this setting to "true' so that it
                      fails open, allowing the request through to the upstream service.
                    type: boolean
                  grpcSettings:
                    description: GRPCSettings are the settings specific to the grpc
                      protocol. This can only be set when `protocol=grpc`.
                    properties:
                      protocolVersion:
                        default: v3
                        enum:
                        - v3
                        type: string
                    type: object
                  httpSettings:
                    description: HTTPSettings are the settings specific to the http
                      protocol. This can only be set when `protocol=http`.
                    properties:
                      addLinkerdHeaders:
                        description: AddLinkerdHeaders will inject the `l5d-dst-override`
                          header set to hostname and port of external service which
                          is used by LinkerD when proxying through the ServiceMesh.
                        type: boolean
                      allowedAuthorizationHeaders:
                        description: "AllowedAuthorizationHeaders are headers from
                          the External Service that will be added to the request of
                          the upstream service. \n By default, the following list
                          of headers are passed to the upstream service - \"location\",
                          - \"authorization\", - \"proxy-authenticate\", - \"set-cookie\",
                          - \"www-authenticate\", \n Any additional headers that are
                          needed should be added and are checked in a case-insenstive."
                        items:
                          type: string
                        type: array
                      allowedRequestHeaders:
                        description: "AllowedRequestHeaders are a list of headers
                          from the downstream request that will be passed along as
                          headers in the request to the external service. This includes
                          metadata sent from Envoy to the EdgeStack Auth Service.
                          \n By default, the following list of headers are passed
                          through: - \"authorization\" - \"cookie\" - \"from\" - \"proxy-authorization\"
                          - \"user-agent\" - \"x-forwarded-for\" - \"x-forwarded-host\"
                          - \"x-forwarded-proto\""
                        items:
                          type: string
                        type: array
                      pathPrefix:
                        type: string
                    type: object
                  include_body:
                    description: IncludeBody will pass along the request body to the
                      External Service. If not set then a blank body is sent over
                      to the External Service.
                    properties:
                      allowPartial:
                        default: true
                        description: AllowPartial indicates whether the included body
                          can be a partially buffered body or if the complete buffered
                          body is expected. If not partial then a 413 http error is
                          returned by Envoy.
                        type: boolean
                      maxBytes:
                        default: 4096
                        description: MaxBytes is the amount of bytes to buffer over
                          to the External Service.
                        type: integer
                    required:
                    - allowPartial
                    - maxBytes
                    type: object
                  protocol:
                    description: Protocol indicates what protocol to use when communicating
                      with the external service. It is recommended to use "grpc" over
                      "http" due to supporting additional capabilities.
                    enum:
                    - http
                    - grpc
                    type: string
                  statusOnError:
                    default: 403
                    description: "StatusCodeOnError allows overriding the default
                      status code returned when the External Service returns a non
                      OK response (non 200 response code for http or DeniedHttpResponse
                      for grpc) \n The default is to return a 403 Forbidden Status."
                    type: integer
                  timeout:
                    default: 5s
                    description: "Timeout is the amount of time Edge Stack will wait
                      before erring on a timeout. \n The default is 5 seconds and
                      this can be tweaked depending on your use case. Note: this value
                      cannot be larger than the overall Auth Service timeout that
                      is configured in Envoy or else it would effectively not have
                      any timeout."
                    type: string
                required:
                - authServiceURL
                - protocol
                type: object
              jwt:
                description: JWTFilter provides configuration for validating a JWT.
                properties:
                  audience:
                    description: "Audience identifies the recipient that the JWT is
                      intended for and will be used to validate the provided token
                      is intended for the configured audience. \n If not provided
                      then `aud` claim on incoming token is not validated and will
                      be considered valid. If `aud` is unset on the token by default
                      it will be considered valid even if it doesn't match the audience
                      value. To enforce that a token has the aud claim, then set `requireAudience=true`."
                    type: string
                  errorResponse:
                    description: ErrorResponse allows setting a custom Response when
                      an invalid JWT is received.
                    properties:
                      bodyTemplate:
                        description: Golang `text/template` string that will be evaluated
                          and used to build the format returned.
                        type: string
                      headers:
                        description: Allows providing additional http response headers
                          for the error response. The current maximum is 16 headers,
                          which aligns with the Gateway-API and modified headers on
                          HTTPRoutes.
                        items:
                          description: Provides a way to define a header name and
                            value template for injecting dynamic header information
                            based on the request and the session token.
                          properties:
                            name:
                              description: The header name injected into the request
                                header.
                              type: string
                            value:
                              description: A Golang template that can dynamically
                                extract request information as the value of the injected
                                header.
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        maxItems: 16
                        type: array
                      realm:
                        description: "Indicates the scope of protection or the application
                          that is checking the token. \n By default, this is set to
                          the fully qualified name of the JWTFilter as \"{name}.{namespace}\"
                          to identify which filter rejected the error. This can be
                          overriden to provide more relevant information to end-users."
                        type: string
                    type: object
                  injectRequestHeaders:
                    description: "InjectRequestHeaders is a list of headers that will
                      be injected into the upstream request if allowed through. The
                      headers can pull information from the Token and downstream request
                      headers as values. \n For example, attaching user email claim
                      to a header from the token."
                    items:
                      description: Provides a way to define a header name and value
                        template for injecting dynamic header information based on
                        the request and the session token.
                      properties:
                        name:
                          description: The header name injected into the request header.
                          type: string
                        value:
                          description: A Golang template that can dynamically extract
                            request information as the value of the injected header.
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  insecureTLS:
                    description: InsecureTLS disables TLS verification for cases when
                      jwksURI begins with `https://`.
                    type: boolean
                  issuer:
                    description: "Issuer identifies the expected AuthorizationServer
                      that isssued the token. \n If not provided then the issuer claim
                      will not be validated. If `issuer` is unset on the token by
                      default it will be considered valid even if it doesn't match
                      the expected issuer value. To enforce that a token has the issuer
                      claim, then set `requireIssuer=true`."
                    type: string
                  jwksURI:
                    description: "JSONWebKeySetURI is a uri that returns the JWK Set
                      per RFC 7517 \n This is required unless validAlgorithms=[\"none\"],
                      in that case verifying the signature of the token is disabled.
                      This is considered unsafe and is discouraged when receiving
                      tokens from untrusted sources."
                    type: string
                    x-kubernetes-validations:
                    - message: jwksURI must be an absolute url starting with "http://"
                        or "https://".
                      rule: 'isURL(self) && url(self).getScheme() != "" '
                  leewayForExpiresAt:
                    description: LeewayForExpiresAt allows token expired by this much
                      to still be considered valid. It is recommend that this is small,
                      so that it only accounts for clock skew and network/application
                      latency.
                    type: string
                  leewayForIssuedAt:
                    description: LeewayForIssuedAt allows tokens issued by this much
                      into the future to be considered valid. It is recommend that
                      this is small, so that it only accounts for clock skew and network/application
                      latency.
                    type: string
                  leewayForNotBefore:
                    description: LeewayForNotBefore allows tokens that shouldn't be
                      used until this much in the future to be considered valid. It
                      is recommend that this is small, so that it only accounts for
                      clock skew and network/application latency.
                    type: string
                  maxStale:
                    description: MaxStale sets the duration that JWKs keys and OIDC
                      discovery responses will be cached
                    type: string
                  renegotiateTLS:
                    default: never
                    description: RenegotiateTLS sets whether the JWTFilter will renegotiateTLS
                      with the jwksURI server and if so what supported method of renegotiation
                      will be used.
                    enum:
                    - never
                    - onceAsClient
                    - freelyAsClient
                    type: string
                  requireAudience:
                    description: "RequireAudience modifies the validation behavior
                      for when the audience claim (aud) is unset on the incoming token.
                      \n false (default) => if aud claim is unset then claim is considered
                      valid true => if aud claim is unset then claim/token are invalid"
                    type: boolean
                  requireExpiresAt:
                    description: "RequireExpiresAt modifies the validation behavior
                      for when the expiresAt claim (exp) is unset on the incoming
                      token. \n false (default) => if exp claim is unset on incoming
                      token then claim is valid true => if exp claim is unset then
                      claim/token are invalid"
                    type: boolean
                  requireIssuedAt:
                    description: "RequireIssueedAt modifies the validation behavior
                      for when the issuedAt claim (iat) is unset on the incoming token.
                      \n false (default) => if `iat` claim is unset on incoming token
                      then claim is valid true => if `iat` claim is unset then claim/token
                      are invalid"
                    type: boolean
                  requireIssuer:
                    description: "RequireIssuer modifies the validation behavior for
                      when the issuer claim (iss) is unset on the incoming token.
                      \n false (default) => if aud claim is unset on incoming token
                      then claim is considered valid true => if exp claim is unset
                      then claim is invalid"
                    type: boolean
                  requireNotBefore:
                    description: "RequireNotBefore modifies the validation behavior
                      for when the not before time claim (nbf) is unset on the incoming
                      token. \n false (default) => if `nbf` claim is unset on incoming
                      token then claim is valid true => if `nbf` claim is unset then
                      claim/token are invalid"
                    type: boolean
                  validAlgorithms:
                    description: "ValidAlgorithms is the set of signing algorithms
                      that can be considered when verifying tokens attached to requests.
                      If the token is signed with an algorithm that is not in this
                      list then it will be rejected. If not provided then all supported
                      algorithms are allowed. \n The list should match the set configured
                      in the iDP, as well as the full set of possible valid tokens
                      maybe received. For example, if you may have previously supported
                      RS256 & RS512 but you have decided to only receive tokens signed
                      using RS512 now. This will cause existing tokens to be rejected."
                    items:
                      description: "JWTSigningMethod is the set of supported signing
                        algorithms that can be used for client authentication. \n
                        This list is based on the supported types that the current
                        jwt library see details here https://github.com/golang-jwt/jwt
                        \n TODO(lance) - we need to verify that these are all supported.
                        The library should support them but our docs say otherwise...https://www.getambassador.io/docs/edge-stack/latest/topics/using/filters/jwt"
                      enum:
                      - none
                      - ES256
                      - ES384
                      - ES512
                      - HS256
                      - HS384
                      - HS512
                      - PS256
                      - PS384
                      - PS512
                      - RS256
                      - RS384
                      - RS512
                      type: string
                    type: array
                type: object
                x-kubernetes-validations:
                - message: jwksURI is required unless validAlgorithms=["none"]
                  rule: '!has(self.jwksURI) ? size(self.validAlgorithms) == 1 && self.validAlgorithms[0]
                    == "none": true'
                - message: audience is required when requireAudience is true
                  rule: 'has(self.requireAudience) && self.requireAudience ? has(self.audience):
                    true'
                - message: issuer is required when requireIssuer is true
                  rule: 'has(self.requireIssuer) && self.requireIssuer ? has(self.issuer):
                    true'
              oauth2:
                description: OAuth2Filter defines the settings for performing OAuth2
                  Authentication.
                properties:
                  accessTokenJWTFilter:
                    description: AccessTokenJWTFilter
                    properties:
                      arguments:
                        description: Arguments define the input arguments that can
                          be set for a JWTFilter.
                        properties:
                          scope:
                            description: Scope is a set of scopes the JWT will be
                              validated against.
                            items:
                              type: string
                            type: array
                        type: object
                      inheritScopeArgument:
                        default: false
                        description: "InheritScopeArgument will use the same scope
                          as set on the FilterPolicy OAuth2Arguments \n If the JWTFilter
                          sets a scope as well then the union of the two will be used."
                        type: boolean
                      name:
                        description: Name of the JWTFilter used to verify AccessToken.
                          Note the Filter refrenced here must be a JWTFilter.
                        type: string
                      namespace:
                        description: Namespace is the namespace where the JWTFilter
                          lives. If not provided it will inherit the namespace of
                          the OAuth2Filter.
                        type: string
                      stripInheritedScope:
                        default: false
                        description: "StripInheritedScope determines whether or not
                          to santized a scope that is formatted as an URI and was
                          inherited from the FilterPolicy OAuth2Arguments. This will
                          be done prior to passing it along to the referenced JWTFilter.
                          \n This requires that InheritScopeArgument is true."
                        type: boolean
                    required:
                    - name
                    type: object
                    x-kubernetes-validations:
                    - message: stripInheritedScope can only be set when inheritScopeArgument
                        is true
                      rule: 'self.stripInheritedScope == true ? self.inheritScopeArgument
                        == true : true'
                  accessTokenValidation:
                    default: auto
                    description: AccessTokenValidation sets the method used for validating
                      an AccessToken.
                    enum:
                    - auto
                    - jwt
                    - userinfo
                    type: string
                  allowMalformedAccessToken:
                    default: false
                    description: AllowMalformedAccessToken will allow any access token
                      even if they are not RFC 6750-compliant.
                    type: boolean
                  authorizationCodeSettings:
                    description: AuthorizationCodeSettings are specific settings that
                      configure the `AuthorizationCode` grant type.
                    properties:
                      clientID:
                        description: ClientID is the ID registered with the IdentityProvider
                          for the client.
                        type: string
                      clientSecret:
                        description: ClientID is the ID registered with the IdentityProvider
                          for the client.
                        type: string
                      clientSecretRef:
                        description: ClientSecretRef is a reference to a secret within
                          the cluster that contains the clientSecret.
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      clientSessionMaxIdle:
                        description: ClientSessionMaxIdle is the max idle time of
                          a session before it will expire forcing the user to re-authenticate.
                          The default is to use the access token lifetime or 14 days
                          if a refresh token is present. If a refresh token is used
                          and is valid for longer than 14 days then it is recommended
                          to set this setting to the lifetime of a refresh token.
                        type: string
                      extraAuthorizationParameters:
                        additionalProperties:
                          type: string
                        description: "ExtraAuthorizationParameters is a map of additional
                          Query Parameters to attach to the Authorization Redirect
                          URI. \n These must not overlap with standard OAuth2 and
                          ODIC fields that are part of the standard. Overlapping values
                          will be dropped in favor of ones provided by the OAuth2Filter."
                        type: object
                      insecureTLS:
                        description: "InsecureTLS tells the OAuth2Client to skip verifying
                          the IdentityProvider server when communicating with the
                          various endpoints. \n This is typically needed when using
                          an IdentityProvider configured with self-signed certs."
                        type: boolean
                      maxStale:
                        description: MaxStale sets the duration that JWKs keys and
                          OIDC discovery responses will be cached
                        type: string
                      postLogoutRedirectURI:
                        description: "PostLogoutRedirectURI is the uri that will be
                          used for the final redirect after the IdentityProvider session
                          and the session with Edge Stack has been successfully cleared
                          (browser cookies and persistent storage cleared). \n URI
                          must be an absolute. \n TODO (lance) - add note here about
                          the endpoint that needs to be Registred with the Identity
                          Provider"
                        pattern: ^(?:http[s]?):\/\/([a-z0-9_\-.]+)(?:\:([0-9]+))?(\/[^\?\s]*)?(?:\?(\S+))?
                        type: string
                      protectedOrigins:
                        description: "ProtectedOrigins are a list of origins (domains)
                          that the OAuth2Filter is configured to protect. \n Setting
                          multiple origins allows for protecting multiple domains
                          using the same Session and Token that is retrieved from
                          the Identity Provider. \n When setting multiple protected
                          origins, the first origin will be used for the final redirect
                          to the IdentityProvider therefore the identity provider
                          needs to be configured to allow redirects from that origin.
                          However, it is recommended that all protected origins are
                          registered with the IdentityProvider because this is subject
                          to change in the future."
                        items:
                          description: Origin identifies the settings for the protected
                            URLs that will be authenticated
                          properties:
                            allowedInternalOrigins:
                              description: "AllowedInternalOrigins indentifies a list
                                of allowed internal origins that were set by a downstream
                                proxy via a host header rewrite. The origins identified
                                in this list ensures the request is allowed and will
                                ensure it redirects correctly to the upstream origin.
                                \n For example, a downstream client will communicate
                                with an origin of `https://example.com` but then an
                                internal proxy will do a rewrite so that the host
                                header received by Edge Stack is `http://example.internal`."
                              items:
                                description: InternalOrigin is an alias over string
                                  to ensure a valid URL is provided
                                pattern: ^(?:http[s]?):\/\/([a-z0-9_\-.]+)(?:\:([0-9]+))?(\/[^\?\s]*)?(?:\?(\S+))?
                                type: string
                              maxItems: 16
                              type: array
                            includeSubdomains:
                              default: false
                              description: "IncludeSubdomains enables protecting sub-domains
                                of the domain identified in the Origin field. Example,
                                when `Origin=https://example.com` then the subdomain
                                of `https://app.example.com` would be watched. \n
                                TODO (lance) - document whether this covers only immediate
                                sub-domain or multiple-levels of subdomains when doing
                                glob matching."
                              type: boolean
                            origin:
                              description: Origin is the absolute URL (schema://hostname)
                                that is protected by the OAuth2Filter
                              maxLength: 255
                              minLength: 1
                              pattern: ^(?:http[s]?):\/\/([a-z0-9_\-.]+)(?:\:([0-9]+))?(\/[^\?\s]*)?(?:\?(\S+))?
                              type: string
                              x-kubernetes-validations:
                              - message: origin must be an absolute url
                                rule: 'isURL(self) && url(self).getScheme() != "" '
                          required:
                          - origin
                          type: object
                        maxItems: 16
                        minItems: 1
                        type: array
                      renegotiateTLS:
                        default: never
                        description: RenegotiateTLS sets whether the OAuth2Filter
                          will renegotiateTLS with the iDP server and if so what supported
                          method of renegotiation will be used.
                        enum:
                        - never
                        - onceAsClient
                        - freelyAsClient
                        type: string
                      sessionCookieSettings:
                        default:
                          disableSessionExpiration: false
                        description: SessionCookieSettings allow modifying the default
                          behavior of how session cookies are configured.
                        properties:
                          disableSessionExpiration:
                            default: false
                            description: "DisableSessionExpiration will unset the
                              `Expires/Max-Age` of the cookie causing the cookie to
                              be removed when the browser is closed. This is known
                              as a session cookie from a browser's perspective. \n
                              By default, the cooke will have the `Expires/Max-age`
                              set to the TTL of the Token/Refresh Token. \n NOTE:
                              this is not disabling the usage of cookies and currently
                              a cookie is always used to hold session information.
                              Rather this determines what happens when a browser is
                              closed."
                            type: boolean
                          ifRequestHeader:
                            description: IfRequestHeader allows modifying the SessionCookieSettings
                              based on request headers received. By default, the SessionCookieSettings
                              will be applied to all requests when not set.
                            properties:
                              name:
                                description: "Name of the HTTP Header to be matched.
                                  Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                  \n Valid values include: \n * \"Authorization\"
                                  * \"Set-Cookie\" \n Invalid values include: \n -
                                  \":method\" - \":\" is an invalid character. This
                                  means that HTTP/2 pseudo headers are not currently
                                  supported by this type. - \"/invalid\" - \"/\" is
                                  an invalid character"
                                type: string
                              negate:
                                description: "Allows the match criteria to be negated
                                  or flipped. \n For example, you can have a regex
                                  that checks for any non-empty string which would
                                  indicate would translate to if header exists on
                                  request then match on it. With negate turned on
                                  this would translate to match on any request that
                                  doesn't have a header."
                                type: boolean
                              type:
                                default: Exact
                                description: "Specifies the semantics of how HTTP
                                  header values should be compared. Valid HeaderMatchType
                                  values are: \n * \"Exact\" * \"RegularExpression\""
                                enum:
                                - Exact
                                - RegularExpression
                                type: string
                              value:
                                description: "Value of HTTP Header to be matched.
                                  \n if type is RegularExpression then this must be
                                  a valid regex with length being at least 1"
                                maxLength: 4096
                                type: string
                            required:
                            - name
                            type: object
                        type: object
                    required:
                    - clientID
                    - protectedOrigins
                    type: object
                  authorizationURL:
                    description: "AuthorizationURL is the Identity Provider Issuer
                      URL which hosts the OpenID provider well-known configurartion.
                      The URL must be an absolute URL. \n Per [OpenID Connect Discovery
                      1.0](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfig)
                      the configuration must be provided in a json document at the
                      path `/.well-known/openid-configuration`. This is used by the
                      OAuth2Filter for determining things like the AuthorizationEndpoint,
                      TokenEndpoint, JWKs endpint, etc..."
                    pattern: ^(?:http[s]?):\/\/([a-z0-9_\-.]+)(?:\:([0-9]+))?(\/[^\?\s]*)?(?:\?(\S+))?
                    type: string
                    x-kubernetes-validations:
                    - message: authorizationURL must be an absolute url
                      rule: 'isURL(self) && url(self).getScheme() != "" '
                  clientAuthentication:
                    description: "ClientAuthentication defines how the OAuth2Filter
                      will authenticate with the iDP token endpoint. \n By default,
                      it will pass it along as password in the Authentication header.
                      Depending on how your iDP is configured it might require a JWTAssertion
                      or passing the password via the request body."
                    properties:
                      jwtAssertion:
                        description: JWTAssertion allows setting a JWTFilter with
                          custom settings on how to verify JWT obtained via the OAuth2
                          flow.
                        properties:
                          audience:
                            description: Audience your IDP requires for authentication.
                              If not set then the default will be to use the token
                              endpoint from the OIDC discovery document.
                            type: string
                          lifetime:
                            default: 1m
                            description: Lifetime
                            type: string
                          nbfSafetyMargin:
                            description: NBFSafetyMargin
                            type: string
                          otherClaims:
                            description: OtherClaims are key/value pairs that will
                              be add to the JWT sent for client Auth to the Identity
                              Provider
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          otherHeaderParameters:
                            description: OtherHeaderParameters are additional headers
                              sent in the Authorization request.
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          setClientID:
                            default: false
                            description: SetClientID determines whether to set the
                              ClientID as an HTTP parameter. Setting it as an HTTP
                              parameter is optional per RFC 7521 §4.2. but some iDP's
                              require it.
                            type: boolean
                          setIAT:
                            description: SetIAT
                            type: boolean
                          setNBF:
                            default: false
                            description: SetNBF
                            type: boolean
                          signingMethod:
                            default: RS256
                            description: SigningMethod
                            enum:
                            - none
                            - ES256
                            - ES384
                            - ES512
                            - HS256
                            - HS384
                            - HS512
                            - PS256
                            - PS384
                            - PS512
                            - RS256
                            - RS384
                            - RS512
                            type: string
                        type: object
                      method:
                        allOf:
                        - enum:
                          - HeaderPassword
                          - BodyPassword
                          - JWTAssertion
                        - enum:
                          - HeaderPassword
                          - BodyPassword
                          - JWTAssertion
                        default: HeaderPassword
                        description: ClientAuthenticationType identifies the supported
                          authentication methods between the OAuth2Filter and the
                          IdentityProvider.
                        type: string
                    type: object
                    x-kubernetes-validations:
                    - message: field 'jwtAssertion' is only valid if method='JWTAssertion'
                      rule: 'self.method == "JWTAsswertion" ? has(self.jwtAssertion)
                        : true'
                  clientCredentialsSettings:
                    description: ClientCredentialsSettings are specific settings that
                      configure the `ClientCredentials` grant type.
                    type: object
                  expirationSafetyMargin:
                    description: "ExpirationSafetyMargin sets a buffer to check if
                      the Token is expired or is going to expire within the safety
                      margin. This is to ensure the application has enough time to
                      reauthenticate to adjust for clock skew and network latency.
                      \n By default, no safety margin is added."
                    type: string
                  grantType:
                    description: "GrantType is the Authorization Flow that the filter
                      will use to authenticate the incoming request. \n Only one of
                      AuthorizationCode,ClientCredentials,Password,ResourceOwner"
                    enum:
                    - AuthorizationCode
                    - ClientCredentials
                    - Password
                    - ResourceOwner
                    type: string
                  injectRequestHeaders:
                    description: "InjectRequestHeaders is a list of headers that will
                      be injected into the upstream request if allowed through. The
                      headers can pull information from the Token has values. \n For
                      example, attaching user email claim to a header from the token."
                    items:
                      description: Provides a way to define a header name and value
                        template for injecting dynamic header information based on
                        the request and the session token.
                      properties:
                        name:
                          description: The header name injected into the request header.
                          type: string
                        value:
                          description: A Golang template that can dynamically extract
                            request information as the value of the injected header.
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  passwordSettings:
                    description: ResourceOwnerSettings are specific settings that
                      configure the `Password` grant type.
                    properties:
                      clientID:
                        description: ClientID is the ID registered with the IdentityProvider
                          for the client.
                        type: string
                      clientSecret:
                        description: ClientID is the ID registered with the IdentityProvider
                          for the client.
                        type: string
                      clientSecretRef:
                        description: ClientSecretRef is a reference to a secret within
                          the cluster that contains the clientSecret.
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - clientID
                    type: object
                  resourceOwnerSettings:
                    description: ResourceOwnerSettings are specific settings that
                      configure the `ResourceOwner` grant type.
                    properties:
                      clientID:
                        description: ClientID is the ID registered with the IdentityProvider
                          for the client.
                        type: string
                      clientSecret:
                        description: ClientID is the ID registered with the IdentityProvider
                          for the client.
                        type: string
                      clientSecretRef:
                        description: ClientSecretRef is a reference to a secret within
                          the cluster that contains the clientSecret.
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - clientID
                    type: object
                required:
                - authorizationURL
                - grantType
                type: object
              plugin:
                description: PluginFilter defines the configuration for using a compiled
                  Go plugin that conforms to the Plugin interface.
                properties:
                  name:
                    description: "Name indicates the compiled binaries name excluding
                      the extension for the Plugin. \n The compiled plugin will look
                      for the .so file in the `/etc/ambassador-plugins` directory.
                      For example, \"/etc/ambassador-plugins/{name}}.so\""
                    type: string
                required:
                - name
                type: object
              type:
                description: Type identifies the type of the Filter that is configured
                  to be executed on a request. Only oneof type OAuth2Filter, JWTFilter,
                  APIKeyFilter, ExternalFilter or PluginFilter can be set.
                enum:
                - oauth2
                - jwt
                - apikey
                - external
                - plugin
                type: string
            required:
            - type
            type: object
          status:
            description: Status defines the current state of a Filter that provides
              user feedback on whether it is configured correctly or not.
            properties:
              conditions:
                description: "Conditions describe the current conditions of the Filter
                  \n TODO:(lance) - determine if these is the best data structure
                  needs more thought but copy pasting as placeholder for now. \n Known
                  condition types are: \n * \"Accepted\" * \"Ready\" * \"Rejected\"
                  - if any rules have an error then the whole FilterPolicy will be
                  rejected."
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: eg-edge-stack-crds/templates/generated/gateway.getambassador.io_webapplicationfirewallpolicies.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: webapplicationfirewallpolicies.gateway.getambassador.io
spec:
  group: gateway.getambassador.io
  names:
    kind: WebApplicationFirewallPolicy
    listKind: WebApplicationFirewallPolicyList
    plural: webapplicationfirewallpolicies
    shortNames:
    - wafp
    singular: webapplicationfirewallpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].reason
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: "WebApplicationFirewallPolicy provides a way to apply Web Application
          Firewall configs against incoming requests for use cases such as configuring
          different WAF rules on a per-route basis. \n If no WebApplicationFirewall
          is provided then the request will be allowed through to the upstream service
          (pending execution of any Filters/Filterpolicies) without any additional
          WAF processing."
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Defines the desired user configuration for a WebApplicationFirewallPolicy
              that contains a set of rules that configure which WebApplicationFirewallPolicy
              to use for requests.
            properties:
              ambassadorSelector:
                default:
                  ambassadorIds:
                  - default
                description: Optional field that can be used to limit which instances
                  of Edge Stack can make use of this resource
                properties:
                  ambassadorIds:
                    default:
                    - default
                    description: limits this resource to be used only by instances
                      of Edge Stack that have an AMBASSADOR_ID matching one of the
                      ids in the list
                    items:
                      type: string
                    type: array
                type: object
              rules:
                description: Set of matching rules that are checked against incoming
                  request to determine which set of WebApplicationFirewalls to apply.
                  If no matches are found then the request is allowed through to the
                  upstream service.
                items:
                  description: Defines criteria for matching requests to a WebApplicationFirewall
                  properties:
                    host:
                      default: '*'
                      description: A "glob-string" that matches on the `:authority`
                        header of the incoming request. If not set it will match on
                        all incoming requests.
                      type: string
                    ifRequestHeader:
                      description: Checks if exact or regular expression matches a
                        value in a request Header to determine if the WebApplicationFirewall
                        is executed or not.
                      properties:
                        name:
                          description: "Name of the HTTP Header to be matched. Name
                            matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                            \n Valid values include: \n * \"Authorization\" * \"Set-Cookie\"
                            \n Invalid values include: \n - \":method\" - \":\" is
                            an invalid character. This means that HTTP/2 pseudo headers
                            are not currently supported by this type. - \"/invalid\"
                            - \"/\" is an invalid character"
                          type: string
                        negate:
                          description: "Allows the match criteria to be negated or
                            flipped. \n For example, you can have a regex that checks
                            for any non-empty string which would indicate would translate
                            to if header exists on request then match on it. With
                            negate turned on this would translate to match on any
                            request that doesn't have a header."
                          type: boolean
                        type:
                          default: Exact
                          description: "Specifies the semantics of how HTTP header
                            values should be compared. Valid HeaderMatchType values
                            are: \n * \"Exact\" * \"RegularExpression\""
                          enum:
                          - Exact
                          - RegularExpression
                          type: string
                        value:
                          description: "Value of HTTP Header to be matched. \n if
                            type is RegularExpression then this must be a valid regex
                            with length being at least 1"
                          maxLength: 4096
                          type: string
                      required:
                      - name
                      type: object
                    onError:
                      description: Provides a way to configure how requests are handled
                        when a request matches the rule but there is a configuration
                        or runtime error. When this field is not configured, the default
                        behavior is to allow the request.
                      properties:
                        statusCode:
                          description: statusCode sets the HTTP status code to use
                            when denying the request.
                          maximum: 599
                          minimum: 400
                          type: integer
                      type: object
                    path:
                      default: '*'
                      description: A "glob-string" that matches on the request path.
                        If not provided then it will match on all incoming requests.
                      type: string
                    precedence:
                      description: Allows forcing a precedence ordering on the rules.
                        By default the rules are evaluated in the order they are in
                        the `WebApplicationFirewallPolicy.spec.rules` field. However,
                        multiple WebApplicationFirewallPolicys can be applied to a
                        cluster. To ensure that a specific ordering is enforced then
                        using a precedence on rules ensures a specific ordering.
                      type: integer
                    wafRef:
                      description: References a WebApplicationFirewall that will be
                        applied to the incoming request.
                      properties:
                        name:
                          description: Name of the WebApplicationFirewall
                          minLength: 1
                          type: string
                        namespace:
                          description: "Namespace that the WebApplicationFirewall
                            resides in. It must be a RFC 1123 label. \n This validation
                            is based off of the corresponding Kubernetes validation:
                            https://github.com/kubernetes/apimachinery/blob/02cfb53916346d085a6c6c7c66f882e3c6b0eca6/pkg/util/validation/validation.go#L187
                            \n This is used for Namespace name validation here: https://github.com/kubernetes/apimachinery/blob/02cfb53916346d085a6c6c7c66f882e3c6b0eca6/pkg/api/validation/generic.go#L63
                            \n Valid values include: \n * \"example\" \n Invalid values
                            include: \n * \"example.com\" - \".\" is an invalid character"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - wafRef
                  type: object
                minItems: 1
                type: array
            required:
            - rules
            type: object
          status:
            description: Provides a list of conditions that describe the current state
              of the WebApplicationFirewallPolicy for fast feedback on whether the
              resource is configured correctly or not.
            properties:
              conditions:
                description: Describes the current state of the WebApplicationFirewallPolicy
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              ruleStatuses:
                items:
                  description: Describes the status of a Rule within a WebApplicationFirewallPolicy.
                  properties:
                    conditions:
                      description: conditions describe the current state of this Rule.
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource. --- This struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example, \n type FooStatus struct{
                          // Represents the observations of a foo's current state.
                          // Known .status.conditions.type are: \"Available\", \"Progressing\",
                          and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                          // +listType=map // +listMapKey=type Conditions []metav1.Condition
                          `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                          protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields
                          }"
                        properties:
                          lastTransitionTime:
                            description: lastTransitionTime is the last time the condition
                              transitioned from one status to another. This should
                              be when the underlying condition changed.  If that is
                              not known, then using the time when the API field changed
                              is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: message is a human readable message indicating
                              details about the transition. This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: observedGeneration represents the .metadata.generation
                              that the condition was set based upon. For instance,
                              if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                              is 9, the condition is out of date with respect to the
                              current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. The value should
                              be a CamelCase string. This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                              --- Many .condition.type values are consistent across
                              resources like Available, but because arbitrary conditions
                              can be useful (see .node.status.conditions), the ability
                              to deconflict is important. The regex it matches is
                              (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    host:
                      description: host of the rule with the error.
                      type: string
                    index:
                      description: Provides the zero-based index in the list of Rules
                        to help identify the rule with an error
                      type: integer
                    path:
                      description: path of the rule with the error.
                      type: string
                  required:
                  - conditions
                  - host
                  - index
                  - path
                  type: object
                maxItems: 64
                type: array
                x-kubernetes-list-map-keys:
                - index
                x-kubernetes-list-type: map
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: eg-edge-stack-crds/templates/generated/gateway.getambassador.io_webapplicationfirewalls.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: webapplicationfirewalls.gateway.getambassador.io
spec:
  group: gateway.getambassador.io
  names:
    kind: WebApplicationFirewall
    listKind: WebApplicationFirewallList
    plural: webapplicationfirewalls
    shortNames:
    - waf
    singular: webapplicationfirewall
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].reason
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Provides the desired configuration for a Web Application Firewall
          that can be referenced within WebFirewallPolicies and applied to incoming
          requests.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Defines the desired user configuration for the WebApplicationFirewall.
            properties:
              ambassadorSelector:
                default:
                  ambassadorIds:
                  - default
                description: Optional field that can be used to limit which instances
                  of Edge Stack can make use of this resource
                properties:
                  ambassadorIds:
                    default:
                    - default
                    description: limits this resource to be used only by instances
                      of Edge Stack that have an AMBASSADOR_ID matching one of the
                      ids in the list
                    items:
                      type: string
                    type: array
                type: object
              firewallRules:
                items:
                  description: Contains configuration for where to load rules for
                    a specific WebApplicationFirewall.
                  properties:
                    configMapRef:
                      description: Contains a name and namespace reference to a Kubernetes
                        ConfigMap and a key to pull data from
                      properties:
                        key:
                          description: Key for the field in the configmap that should
                            be use
                          minLength: 1
                          type: string
                        name:
                          description: Name that identifies the ConfigMap
                          minLength: 1
                          type: string
                        namespace:
                          description: "Namespace refers to a Kubernetes namespace
                            that the ConfigMap resides. It must be a RFC 1123 label.
                            When no Namespace is provided, it defaults to the namespace
                            of the parent object. \n This validation is based off
                            of the corresponding Kubernetes validation: https://github.com/kubernetes/apimachinery/blob/02cfb53916346d085a6c6c7c66f882e3c6b0eca6/pkg/util/validation/validation.go#L187
                            \n This is used for Namespace name validation here: https://github.com/kubernetes/apimachinery/blob/02cfb53916346d085a6c6c7c66f882e3c6b0eca6/pkg/api/validation/generic.go#L63
                            \n Valid values include: \n * \"example\" \n Invalid values
                            include: \n * \"example.com\" - \".\" is an invalid character"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                      required:
                      - key
                      - name
                      type: object
                    file:
                      description: Provides a path to a file or directory on the Edge
                        Stack pod to load rules configuration from
                      type: string
                    http:
                      description: Configures downloading firewall rules from the
                        internet via an HTTP request
                      properties:
                        url:
                          description: Provides the address to download the firewall
                            rules from.
                          maxLength: 255
                          minLength: 1
                          pattern: ^(?:http[s]?):\/\/([a-z0-9_\-.]+)(?:\:([0-9]+))?(\/[^\?\s]*)?(?:\?(\S+))?
                          type: string
                      type: object
                    sourceType:
                      description: Indicates the method that we will use to load rules
                        configuration for the WebApplicationFirewall
                      enum:
                      - file
                      - configmap
                      - http
                      type: string
                  required:
                  - sourceType
                  type: object
                type: array
              logging:
                description: Provides a way to configure additional logging in the
                  Edge Stack pods for the WebApplicationFirewall. This is in addition
                  to the logging config that is available via the firewall configuration
                  files. The following logs will always be output to the container
                  logs when enabled.
                properties:
                  onInterrupt:
                    description: Controls logging behavior when the WebApplicationFirewall
                      interrupts a request.
                    properties:
                      enabled:
                        description: Configures whether the container should output
                          logs. These additional logs are not enabled unless this
                          is set to `true`
                        type: boolean
                    required:
                    - enabled
                    type: object
                required:
                - onInterrupt
                type: object
            required:
            - firewallRules
            type: object
          status:
            description: Provides a list of conditions that describe the current state
              of the WebApplicationFirewall for fast feedback on whether the resource
              is configured correctly or not.
            properties:
              conditions:
                description: Describes the current state of the WebApplicationFirewall
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: eg-edge-stack-crds/templates/gwapi/gatewayapi-crds.yaml
#
# config/crd/experimental/gateway.networking.k8s.io_gatewayclasses.yaml
#
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/1923
    gateway.networking.k8s.io/bundle-version: v0.7.1
    gateway.networking.k8s.io/channel: experimental
  creationTimestamp: null
  name: gatewayclasses.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: GatewayClass
    listKind: GatewayClassList
    plural: gatewayclasses
    shortNames:
    - gc
    singular: gatewayclass
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.controllerName
      name: Controller
      type: string
    - jsonPath: .status.conditions[?(@.type=="Accepted")].status
      name: Accepted
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .spec.description
      name: Description
      priority: 1
      type: string
    deprecated: true
    deprecationWarning: The v1alpha2 version of GatewayClass has been deprecated and
      will be removed in a future release of the API. Please upgrade to v1beta1.
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: "GatewayClass describes a class of Gateways available to the
          user for creating Gateway resources. \n It is recommended that this resource
          be used as a template for Gateways. This means that a Gateway is based on
          the state of the GatewayClass at the time it was created and changes to
          the GatewayClass or associated parameters are not propagated down to existing
          Gateways. This recommendation is intended to limit the blast radius of changes
          to GatewayClass or associated parameters. If implementations choose to propagate
          GatewayClass changes to existing Gateways, that MUST be clearly documented
          by the implementation. \n Whenever one or more Gateways are using a GatewayClass,
          implementations SHOULD add the `gateway-exists-finalizer.gateway.networking.k8s.io`
          finalizer on the associated GatewayClass. This ensures that a GatewayClass
          associated with a Gateway is not deleted while in use. \n GatewayClass is
          a Cluster level resource."
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of GatewayClass.
            properties:
              controllerName:
                description: "ControllerName is the name of the controller that is
                  managing Gateways of this class. The value of this field MUST be
                  a domain prefixed path. \n Example: \"example.net/gateway-controller\".
                  \n This field is not mutable and cannot be empty. \n Support: Core"
                maxLength: 253
                minLength: 1
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                type: string
              description:
                description: Description helps describe a GatewayClass with more details.
                maxLength: 64
                type: string
              parametersRef:
                description: "ParametersRef is a reference to a resource that contains
                  the configuration parameters corresponding to the GatewayClass.
                  This is optional if the controller does not require any additional
                  configuration. \n ParametersRef can reference a standard Kubernetes
                  resource, i.e. ConfigMap, or an implementation-specific custom resource.
                  The resource can be cluster-scoped or namespace-scoped. \n If the
                  referent cannot be found, the GatewayClass's \"InvalidParameters\"
                  status condition will be true. \n Support: Implementation-specific"
                properties:
                  group:
                    description: Group is the group of the referent.
                    maxLength: 253
                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  kind:
                    description: Kind is kind of the referent.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                    type: string
                  name:
                    description: Name is the name of the referent.
                    maxLength: 253
                    minLength: 1
                    type: string
                  namespace:
                    description: Namespace is the namespace of the referent. This
                      field is required when referring to a Namespace-scoped resource
                      and MUST be unset when referring to a Cluster-scoped resource.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                required:
                - group
                - kind
                - name
                type: object
            required:
            - controllerName
            type: object
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Waiting
                status: Unknown
                type: Accepted
            description: Status defines the current state of GatewayClass.
            properties:
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Accepted
                description: "Conditions is the current status from the controller
                  for this GatewayClass. \n Controllers should prefer to publish conditions
                  using values of GatewayClassConditionType for the type of each Condition."
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .spec.controllerName
      name: Controller
      type: string
    - jsonPath: .status.conditions[?(@.type=="Accepted")].status
      name: Accepted
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .spec.description
      name: Description
      priority: 1
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: "GatewayClass describes a class of Gateways available to the
          user for creating Gateway resources. \n It is recommended that this resource
          be used as a template for Gateways. This means that a Gateway is based on
          the state of the GatewayClass at the time it was created and changes to
          the GatewayClass or associated parameters are not propagated down to existing
          Gateways. This recommendation is intended to limit the blast radius of changes
          to GatewayClass or associated parameters. If implementations choose to propagate
          GatewayClass changes to existing Gateways, that MUST be clearly documented
          by the implementation. \n Whenever one or more Gateways are using a GatewayClass,
          implementations SHOULD add the `gateway-exists-finalizer.gateway.networking.k8s.io`
          finalizer on the associated GatewayClass. This ensures that a GatewayClass
          associated with a Gateway is not deleted while in use. \n GatewayClass is
          a Cluster level resource."
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of GatewayClass.
            properties:
              controllerName:
                description: "ControllerName is the name of the controller that is
                  managing Gateways of this class. The value of this field MUST be
                  a domain prefixed path. \n Example: \"example.net/gateway-controller\".
                  \n This field is not mutable and cannot be empty. \n Support: Core"
                maxLength: 253
                minLength: 1
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                type: string
              description:
                description: Description helps describe a GatewayClass with more details.
                maxLength: 64
                type: string
              parametersRef:
                description: "ParametersRef is a reference to a resource that contains
                  the configuration parameters corresponding to the GatewayClass.
                  This is optional if the controller does not require any additional
                  configuration. \n ParametersRef can reference a standard Kubernetes
                  resource, i.e. ConfigMap, or an implementation-specific custom resource.
                  The resource can be cluster-scoped or namespace-scoped. \n If the
                  referent cannot be found, the GatewayClass's \"InvalidParameters\"
                  status condition will be true. \n Support: Implementation-specific"
                properties:
                  group:
                    description: Group is the group of the referent.
                    maxLength: 253
                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  kind:
                    description: Kind is kind of the referent.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                    type: string
                  name:
                    description: Name is the name of the referent.
                    maxLength: 253
                    minLength: 1
                    type: string
                  namespace:
                    description: Namespace is the namespace of the referent. This
                      field is required when referring to a Namespace-scoped resource
                      and MUST be unset when referring to a Cluster-scoped resource.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                required:
                - group
                - kind
                - name
                type: object
            required:
            - controllerName
            type: object
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Waiting
                status: Unknown
                type: Accepted
            description: Status defines the current state of GatewayClass.
            properties:
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Accepted
                description: "Conditions is the current status from the controller
                  for this GatewayClass. \n Controllers should prefer to publish conditions
                  using values of GatewayClassConditionType for the type of each Condition."
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
# Source: eg-edge-stack-crds/templates/gwapi/gatewayapi-crds.yaml
#
# config/crd/experimental/gateway.networking.k8s.io_gateways.yaml
#
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/1923
    gateway.networking.k8s.io/bundle-version: v0.7.1
    gateway.networking.k8s.io/channel: experimental
  creationTimestamp: null
  name: gateways.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: Gateway
    listKind: GatewayList
    plural: gateways
    shortNames:
    - gtw
    singular: gateway
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.gatewayClassName
      name: Class
      type: string
    - jsonPath: .status.addresses[*].value
      name: Address
      type: string
    - jsonPath: .status.conditions[?(@.type=="Programmed")].status
      name: Programmed
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    deprecated: true
    deprecationWarning: The v1alpha2 version of Gateway has been deprecated and will
      be removed in a future release of the API. Please upgrade to v1beta1.
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: Gateway represents an instance of a service-traffic handling
          infrastructure by binding Listeners to a set of IP addresses.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of Gateway.
            properties:
              addresses:
                description: "Addresses requested for this Gateway. This is optional
                  and behavior can depend on the implementation. If a value is set
                  in the spec and the requested address is invalid or unavailable,
                  the implementation MUST indicate this in the associated entry in
                  GatewayStatus.Addresses. \n The Addresses field represents a request
                  for the address(es) on the \"outside of the Gateway\", that traffic
                  bound for this Gateway will use. This could be the IP address or
                  hostname of an external load balancer or other networking infrastructure,
                  or some other address that traffic will be sent to. \n The .listener.hostname
                  field is used to route traffic that has already arrived at the Gateway
                  to the correct in-cluster destination. \n If no Addresses are specified,
                  the implementation MAY schedule the Gateway in an implementation-specific
                  manner, assigning an appropriate set of Addresses. \n The implementation
                  MUST bind all Listeners to every GatewayAddress that it assigns
                  to the Gateway and add a corresponding entry in GatewayStatus.Addresses.
                  \n Support: Extended"
                items:
                  description: GatewayAddress describes an address that can be bound
                    to a Gateway.
                  properties:
                    type:
                      default: IPAddress
                      description: Type of the address.
                      maxLength: 253
                      minLength: 1
                      pattern: ^Hostname|IPAddress|NamedAddress|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    value:
                      description: "Value of the address. The validity of the values
                        will depend on the type and support by the controller. \n
                        Examples: `1.2.3.4`, `128::1`, `my-ip-address`."
                      maxLength: 253
                      minLength: 1
                      type: string
                  required:
                  - value
                  type: object
                maxItems: 16
                type: array
              gatewayClassName:
                description: GatewayClassName used for this Gateway. This is the name
                  of a GatewayClass resource.
                maxLength: 253
                minLength: 1
                type: string
              listeners:
                description: "Listeners associated with this Gateway. Listeners define
                  logical endpoints that are bound on this Gateway's addresses. At
                  least one Listener MUST be specified. \n Each listener in a Gateway
                  must have a unique combination of Hostname, Port, and Protocol.
                  \n An implementation MAY group Listeners by Port and then collapse
                  each group of Listeners into a single Listener if the implementation
                  determines that the Listeners in the group are \"compatible\". An
                  implementation MAY also group together and collapse compatible Listeners
                  belonging to different Gateways. \n For example, an implementation
                  might consider Listeners to be compatible with each other if all
                  of the following conditions are met: \n 1. Either each Listener
                  within the group specifies the \"HTTP\" Protocol or each Listener
                  within the group specifies either the \"HTTPS\" or \"TLS\" Protocol.
                  \n 2. Each Listener within the group specifies a Hostname that is
                  unique within the group. \n 3. As a special case, one Listener within
                  a group may omit Hostname, in which case this Listener matches when
                  no other Listener matches. \n If the implementation does collapse
                  compatible Listeners, the hostname provided in the incoming client
                  request MUST be matched to a Listener to find the correct set of
                  Routes. The incoming hostname MUST be matched using the Hostname
                  field for each Listener in order of most to least specific. That
                  is, exact matches must be processed before wildcard matches. \n
                  If this field specifies multiple Listeners that have the same Port
                  value but are not compatible, the implementation must raise a \"Conflicted\"
                  condition in the Listener status. \n Support: Core"
                items:
                  description: Listener embodies the concept of a logical endpoint
                    where a Gateway accepts network connections.
                  properties:
                    allowedRoutes:
                      default:
                        namespaces:
                          from: Same
                      description: "AllowedRoutes defines the types of routes that
                        MAY be attached to a Listener and the trusted namespaces where
                        those Route resources MAY be present. \n Although a client
                        request may match multiple route rules, only one rule may
                        ultimately receive the request. Matching precedence MUST be
                        determined in order of the following criteria: \n * The most
                        specific match as defined by the Route type. * The oldest
                        Route based on creation timestamp. For example, a Route with
                        a creation timestamp of \"2020-09-08 01:02:03\" is given precedence
                        over a Route with a creation timestamp of \"2020-09-08 01:02:04\".
                        * If everything else is equivalent, the Route appearing first
                        in alphabetical order (namespace/name) should be given precedence.
                        For example, foo/bar is given precedence over foo/baz. \n
                        All valid rules within a Route attached to this Listener should
                        be implemented. Invalid Route rules can be ignored (sometimes
                        that will mean the full Route). If a Route rule transitions
                        from valid to invalid, support for that Route rule should
                        be dropped to ensure consistency. For example, even if a filter
                        specified by a Route rule is invalid, the rest of the rules
                        within that Route should still be supported. \n Support: Core"
                      properties:
                        kinds:
                          description: "Kinds specifies the groups and kinds of Routes
                            that are allowed to bind to this Gateway Listener. When
                            unspecified or empty, the kinds of Routes selected are
                            determined using the Listener protocol. \n A RouteGroupKind
                            MUST correspond to kinds of Routes that are compatible
                            with the application protocol specified in the Listener's
                            Protocol field. If an implementation does not support
                            or recognize this resource type, it MUST set the \"ResolvedRefs\"
                            condition to False for this Listener with the \"InvalidRouteKinds\"
                            reason. \n Support: Core"
                          items:
                            description: RouteGroupKind indicates the group and kind
                              of a Route resource.
                            properties:
                              group:
                                default: gateway.networking.k8s.io
                                description: Group is the group of the Route.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                description: Kind is the kind of the Route.
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                            required:
                            - kind
                            type: object
                          maxItems: 8
                          type: array
                        namespaces:
                          default:
                            from: Same
                          description: "Namespaces indicates namespaces from which
                            Routes may be attached to this Listener. This is restricted
                            to the namespace of this Gateway by default. \n Support:
                            Core"
                          properties:
                            from:
                              default: Same
                              description: "From indicates where Routes will be selected
                                for this Gateway. Possible values are: * All: Routes
                                in all namespaces may be used by this Gateway. * Selector:
                                Routes in namespaces selected by the selector may
                                be used by this Gateway. * Same: Only Routes in the
                                same namespace may be used by this Gateway. \n Support:
                                Core"
                              enum:
                              - All
                              - Selector
                              - Same
                              type: string
                            selector:
                              description: "Selector must be specified when From is
                                set to \"Selector\". In that case, only Routes in
                                Namespaces matching this Selector will be selected
                                by this Gateway. This field is ignored for other values
                                of \"From\". \n Support: Core"
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                      type: object
                    hostname:
                      description: "Hostname specifies the virtual hostname to match
                        for protocol types that define this concept. When unspecified,
                        all hostnames are matched. This field is ignored for protocols
                        that don't require hostname based matching. \n Implementations
                        MUST apply Hostname matching appropriately for each of the
                        following protocols: \n * TLS: The Listener Hostname MUST
                        match the SNI. * HTTP: The Listener Hostname MUST match the
                        Host header of the request. * HTTPS: The Listener Hostname
                        SHOULD match at both the TLS and HTTP protocol layers as described
                        above. If an implementation does not ensure that both the
                        SNI and Host header match the Listener hostname, it MUST clearly
                        document that. \n For HTTPRoute and TLSRoute resources, there
                        is an interaction with the `spec.hostnames` array. When both
                        listener and route specify hostnames, there MUST be an intersection
                        between the values for a Route to be accepted. For more information,
                        refer to the Route specific Hostnames documentation. \n Hostnames
                        that are prefixed with a wildcard label (`*.`) are interpreted
                        as a suffix match. That means that a match for `*.example.com`
                        would match both `test.example.com`, and `foo.test.example.com`,
                        but not `example.com`. \n Support: Core"
                      maxLength: 253
                      minLength: 1
                      pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    name:
                      description: "Name is the name of the Listener. This name MUST
                        be unique within a Gateway. \n Support: Core"
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    port:
                      description: "Port is the network port. Multiple listeners may
                        use the same port, subject to the Listener compatibility rules.
                        \n Support: Core"
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    protocol:
                      description: "Protocol specifies the network protocol this listener
                        expects to receive. \n Support: Core"
                      maxLength: 255
                      minLength: 1
                      pattern: ^[a-zA-Z0-9]([-a-zSA-Z0-9]*[a-zA-Z0-9])?$|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9]+$
                      type: string
                    tls:
                      description: "TLS is the TLS configuration for the Listener.
                        This field is required if the Protocol field is \"HTTPS\"
                        or \"TLS\". It is invalid to set this field if the Protocol
                        field is \"HTTP\", \"TCP\", or \"UDP\". \n The association
                        of SNIs to Certificate defined in GatewayTLSConfig is defined
                        based on the Hostname field for this listener. \n The GatewayClass
                        MUST use the longest matching SNI out of all available certificates
                        for any TLS handshake. \n Support: Core"
                      properties:
                        certificateRefs:
                          description: "CertificateRefs contains a series of references
                            to Kubernetes objects that contains TLS certificates and
                            private keys. These certificates are used to establish
                            a TLS handshake for requests that match the hostname of
                            the associated listener. \n A single CertificateRef to
                            a Kubernetes Secret has \"Core\" support. Implementations
                            MAY choose to support attaching multiple certificates
                            to a Listener, but this behavior is implementation-specific.
                            \n References to a resource in different namespace are
                            invalid UNLESS there is a ReferenceGrant in the target
                            namespace that allows the certificate to be attached.
                            If a ReferenceGrant does not allow this reference, the
                            \"ResolvedRefs\" condition MUST be set to False for this
                            listener with the \"RefNotPermitted\" reason. \n This
                            field is required to have at least one element when the
                            mode is set to \"Terminate\" (default) and is optional
                            otherwise. \n CertificateRefs can reference to standard
                            Kubernetes resources, i.e. Secret, or implementation-specific
                            custom resources. \n Support: Core - A single reference
                            to a Kubernetes Secret of type kubernetes.io/tls \n Support:
                            Implementation-specific (More than one reference or other
                            resource types)"
                          items:
                            description: "SecretObjectReference identifies an API
                              object including its namespace, defaulting to Secret.
                              \n The API object must be valid in the cluster; the
                              Group and Kind must be registered in the cluster for
                              this reference to be valid. \n References to objects
                              with invalid Group and Kind are not valid, and must
                              be rejected by the implementation, with appropriate
                              Conditions set on the containing object."
                            properties:
                              group:
                                default: ""
                                description: Group is the group of the referent. For
                                  example, "gateway.networking.k8s.io". When unspecified
                                  or empty string, core API group is inferred.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                default: Secret
                                description: Kind is kind of the referent. For example
                                  "Secret".
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                              namespace:
                                description: "Namespace is the namespace of the backend.
                                  When unspecified, the local namespace is inferred.
                                  \n Note that when a namespace different than the
                                  local namespace is specified, a ReferenceGrant object
                                  is required in the referent namespace to allow that
                                  namespace's owner to accept the reference. See the
                                  ReferenceGrant documentation for details. \n Support:
                                  Core"
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                type: string
                            required:
                            - name
                            type: object
                          maxItems: 64
                          type: array
                        mode:
                          default: Terminate
                          description: "Mode defines the TLS behavior for the TLS
                            session initiated by the client. There are two possible
                            modes: \n - Terminate: The TLS session between the downstream
                            client and the Gateway is terminated at the Gateway. This
                            mode requires certificateRefs to be set and contain at
                            least one element. - Passthrough: The TLS session is NOT
                            terminated by the Gateway. This implies that the Gateway
                            can't decipher the TLS stream except for the ClientHello
                            message of the TLS protocol. CertificateRefs field is
                            ignored in this mode. \n Support: Core"
                          enum:
                          - Terminate
                          - Passthrough
                          type: string
                        options:
                          additionalProperties:
                            description: AnnotationValue is the value of an annotation
                              in Gateway API. This is used for validation of maps
                              such as TLS options. This roughly matches Kubernetes
                              annotation validation, although the length validation
                              in that case is based on the entire size of the annotations
                              struct.
                            maxLength: 4096
                            minLength: 0
                            type: string
                          description: "Options are a list of key/value pairs to enable
                            extended TLS configuration for each implementation. For
                            example, configuring the minimum TLS version or supported
                            cipher suites. \n A set of common keys MAY be defined
                            by the API in the future. To avoid any ambiguity, implementation-specific
                            definitions MUST use domain-prefixed names, such as `example.com/my-custom-option`.
                            Un-prefixed names are reserved for key names defined by
                            Gateway API. \n Support: Implementation-specific"
                          maxProperties: 16
                          type: object
                      type: object
                  required:
                  - name
                  - port
                  - protocol
                  type: object
                maxItems: 64
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
            required:
            - gatewayClassName
            - listeners
            type: object
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Accepted
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Programmed
            description: Status defines the current state of Gateway.
            properties:
              addresses:
                description: Addresses lists the IP addresses that have actually been
                  bound to the Gateway. These addresses may differ from the addresses
                  in the Spec, e.g. if the Gateway automatically assigns an address
                  from a reserved pool.
                items:
                  description: GatewayAddress describes an address that can be bound
                    to a Gateway.
                  properties:
                    type:
                      default: IPAddress
                      description: Type of the address.
                      maxLength: 253
                      minLength: 1
                      pattern: ^Hostname|IPAddress|NamedAddress|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    value:
                      description: "Value of the address. The validity of the values
                        will depend on the type and support by the controller. \n
                        Examples: `1.2.3.4`, `128::1`, `my-ip-address`."
                      maxLength: 253
                      minLength: 1
                      type: string
                  required:
                  - value
                  type: object
                maxItems: 16
                type: array
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Accepted
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Programmed
                description: "Conditions describe the current conditions of the Gateway.
                  \n Implementations should prefer to express Gateway conditions using
                  the `GatewayConditionType` and `GatewayConditionReason` constants
                  so that operators and tools can converge on a common vocabulary
                  to describe Gateway state. \n Known condition types are: \n * \"Accepted\"
                  * \"Programmed\" * \"Ready\""
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              listeners:
                description: Listeners provide status for each unique listener port
                  defined in the Spec.
                items:
                  description: ListenerStatus is the status associated with a Listener.
                  properties:
                    attachedRoutes:
                      description: AttachedRoutes represents the total number of accepted
                        Routes that have been successfully attached to this Listener.
                      format: int32
                      type: integer
                    conditions:
                      description: Conditions describe the current condition of this
                        listener.
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource. --- This struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example, \n type FooStatus struct{
                          // Represents the observations of a foo's current state.
                          // Known .status.conditions.type are: \"Available\", \"Progressing\",
                          and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                          // +listType=map // +listMapKey=type Conditions []metav1.Condition
                          `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                          protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields
                          }"
                        properties:
                          lastTransitionTime:
                            description: lastTransitionTime is the last time the condition
                              transitioned from one status to another. This should
                              be when the underlying condition changed.  If that is
                              not known, then using the time when the API field changed
                              is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: message is a human readable message indicating
                              details about the transition. This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: observedGeneration represents the .metadata.generation
                              that the condition was set based upon. For instance,
                              if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                              is 9, the condition is out of date with respect to the
                              current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. The value should
                              be a CamelCase string. This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                              --- Many .condition.type values are consistent across
                              resources like Available, but because arbitrary conditions
                              can be useful (see .node.status.conditions), the ability
                              to deconflict is important. The regex it matches is
                              (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    name:
                      description: Name is the name of the Listener that this status
                        corresponds to.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    supportedKinds:
                      description: "SupportedKinds is the list indicating the Kinds
                        supported by this listener. This MUST represent the kinds
                        an implementation supports for that Listener configuration.
                        \n If kinds are specified in Spec that are not supported,
                        they MUST NOT appear in this list and an implementation MUST
                        set the \"ResolvedRefs\" condition to \"False\" with the \"InvalidRouteKinds\"
                        reason. If both valid and invalid Route kinds are specified,
                        the implementation MUST reference the valid Route kinds that
                        have been specified."
                      items:
                        description: RouteGroupKind indicates the group and kind of
                          a Route resource.
                        properties:
                          group:
                            default: gateway.networking.k8s.io
                            description: Group is the group of the Route.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            description: Kind is the kind of the Route.
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                        required:
                        - kind
                        type: object
                      maxItems: 8
                      type: array
                  required:
                  - attachedRoutes
                  - conditions
                  - name
                  - supportedKinds
                  type: object
                maxItems: 64
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .spec.gatewayClassName
      name: Class
      type: string
    - jsonPath: .status.addresses[*].value
      name: Address
      type: string
    - jsonPath: .status.conditions[?(@.type=="Programmed")].status
      name: Programmed
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Gateway represents an instance of a service-traffic handling
          infrastructure by binding Listeners to a set of IP addresses.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of Gateway.
            properties:
              addresses:
                description: "Addresses requested for this Gateway. This is optional
                  and behavior can depend on the implementation. If a value is set
                  in the spec and the requested address is invalid or unavailable,
                  the implementation MUST indicate this in the associated entry in
                  GatewayStatus.Addresses. \n The Addresses field represents a request
                  for the address(es) on the \"outside of the Gateway\", that traffic
                  bound for this Gateway will use. This could be the IP address or
                  hostname of an external load balancer or other networking infrastructure,
                  or some other address that traffic will be sent to. \n The .listener.hostname
                  field is used to route traffic that has already arrived at the Gateway
                  to the correct in-cluster destination. \n If no Addresses are specified,
                  the implementation MAY schedule the Gateway in an implementation-specific
                  manner, assigning an appropriate set of Addresses. \n The implementation
                  MUST bind all Listeners to every GatewayAddress that it assigns
                  to the Gateway and add a corresponding entry in GatewayStatus.Addresses.
                  \n Support: Extended"
                items:
                  description: GatewayAddress describes an address that can be bound
                    to a Gateway.
                  properties:
                    type:
                      default: IPAddress
                      description: Type of the address.
                      maxLength: 253
                      minLength: 1
                      pattern: ^Hostname|IPAddress|NamedAddress|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    value:
                      description: "Value of the address. The validity of the values
                        will depend on the type and support by the controller. \n
                        Examples: `1.2.3.4`, `128::1`, `my-ip-address`."
                      maxLength: 253
                      minLength: 1
                      type: string
                  required:
                  - value
                  type: object
                maxItems: 16
                type: array
              gatewayClassName:
                description: GatewayClassName used for this Gateway. This is the name
                  of a GatewayClass resource.
                maxLength: 253
                minLength: 1
                type: string
              listeners:
                description: "Listeners associated with this Gateway. Listeners define
                  logical endpoints that are bound on this Gateway's addresses. At
                  least one Listener MUST be specified. \n Each listener in a Gateway
                  must have a unique combination of Hostname, Port, and Protocol.
                  \n An implementation MAY group Listeners by Port and then collapse
                  each group of Listeners into a single Listener if the implementation
                  determines that the Listeners in the group are \"compatible\". An
                  implementation MAY also group together and collapse compatible Listeners
                  belonging to different Gateways. \n For example, an implementation
                  might consider Listeners to be compatible with each other if all
                  of the following conditions are met: \n 1. Either each Listener
                  within the group specifies the \"HTTP\" Protocol or each Listener
                  within the group specifies either the \"HTTPS\" or \"TLS\" Protocol.
                  \n 2. Each Listener within the group specifies a Hostname that is
                  unique within the group. \n 3. As a special case, one Listener within
                  a group may omit Hostname, in which case this Listener matches when
                  no other Listener matches. \n If the implementation does collapse
                  compatible Listeners, the hostname provided in the incoming client
                  request MUST be matched to a Listener to find the correct set of
                  Routes. The incoming hostname MUST be matched using the Hostname
                  field for each Listener in order of most to least specific. That
                  is, exact matches must be processed before wildcard matches. \n
                  If this field specifies multiple Listeners that have the same Port
                  value but are not compatible, the implementation must raise a \"Conflicted\"
                  condition in the Listener status. \n Support: Core"
                items:
                  description: Listener embodies the concept of a logical endpoint
                    where a Gateway accepts network connections.
                  properties:
                    allowedRoutes:
                      default:
                        namespaces:
                          from: Same
                      description: "AllowedRoutes defines the types of routes that
                        MAY be attached to a Listener and the trusted namespaces where
                        those Route resources MAY be present. \n Although a client
                        request may match multiple route rules, only one rule may
                        ultimately receive the request. Matching precedence MUST be
                        determined in order of the following criteria: \n * The most
                        specific match as defined by the Route type. * The oldest
                        Route based on creation timestamp. For example, a Route with
                        a creation timestamp of \"2020-09-08 01:02:03\" is given precedence
                        over a Route with a creation timestamp of \"2020-09-08 01:02:04\".
                        * If everything else is equivalent, the Route appearing first
                        in alphabetical order (namespace/name) should be given precedence.
                        For example, foo/bar is given precedence over foo/baz. \n
                        All valid rules within a Route attached to this Listener should
                        be implemented. Invalid Route rules can be ignored (sometimes
                        that will mean the full Route). If a Route rule transitions
                        from valid to invalid, support for that Route rule should
                        be dropped to ensure consistency. For example, even if a filter
                        specified by a Route rule is invalid, the rest of the rules
                        within that Route should still be supported. \n Support: Core"
                      properties:
                        kinds:
                          description: "Kinds specifies the groups and kinds of Routes
                            that are allowed to bind to this Gateway Listener. When
                            unspecified or empty, the kinds of Routes selected are
                            determined using the Listener protocol. \n A RouteGroupKind
                            MUST correspond to kinds of Routes that are compatible
                            with the application protocol specified in the Listener's
                            Protocol field. If an implementation does not support
                            or recognize this resource type, it MUST set the \"ResolvedRefs\"
                            condition to False for this Listener with the \"InvalidRouteKinds\"
                            reason. \n Support: Core"
                          items:
                            description: RouteGroupKind indicates the group and kind
                              of a Route resource.
                            properties:
                              group:
                                default: gateway.networking.k8s.io
                                description: Group is the group of the Route.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                description: Kind is the kind of the Route.
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                            required:
                            - kind
                            type: object
                          maxItems: 8
                          type: array
                        namespaces:
                          default:
                            from: Same
                          description: "Namespaces indicates namespaces from which
                            Routes may be attached to this Listener. This is restricted
                            to the namespace of this Gateway by default. \n Support:
                            Core"
                          properties:
                            from:
                              default: Same
                              description: "From indicates where Routes will be selected
                                for this Gateway. Possible values are: * All: Routes
                                in all namespaces may be used by this Gateway. * Selector:
                                Routes in namespaces selected by the selector may
                                be used by this Gateway. * Same: Only Routes in the
                                same namespace may be used by this Gateway. \n Support:
                                Core"
                              enum:
                              - All
                              - Selector
                              - Same
                              type: string
                            selector:
                              description: "Selector must be specified when From is
                                set to \"Selector\". In that case, only Routes in
                                Namespaces matching this Selector will be selected
                                by this Gateway. This field is ignored for other values
                                of \"From\". \n Support: Core"
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                      type: object
                    hostname:
                      description: "Hostname specifies the virtual hostname to match
                        for protocol types that define this concept. When unspecified,
                        all hostnames are matched. This field is ignored for protocols
                        that don't require hostname based matching. \n Implementations
                        MUST apply Hostname matching appropriately for each of the
                        following protocols: \n * TLS: The Listener Hostname MUST
                        match the SNI. * HTTP: The Listener Hostname MUST match the
                        Host header of the request. * HTTPS: The Listener Hostname
                        SHOULD match at both the TLS and HTTP protocol layers as described
                        above. If an implementation does not ensure that both the
                        SNI and Host header match the Listener hostname, it MUST clearly
                        document that. \n For HTTPRoute and TLSRoute resources, there
                        is an interaction with the `spec.hostnames` array. When both
                        listener and route specify hostnames, there MUST be an intersection
                        between the values for a Route to be accepted. For more information,
                        refer to the Route specific Hostnames documentation. \n Hostnames
                        that are prefixed with a wildcard label (`*.`) are interpreted
                        as a suffix match. That means that a match for `*.example.com`
                        would match both `test.example.com`, and `foo.test.example.com`,
                        but not `example.com`. \n Support: Core"
                      maxLength: 253
                      minLength: 1
                      pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    name:
                      description: "Name is the name of the Listener. This name MUST
                        be unique within a Gateway. \n Support: Core"
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    port:
                      description: "Port is the network port. Multiple listeners may
                        use the same port, subject to the Listener compatibility rules.
                        \n Support: Core"
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    protocol:
                      description: "Protocol specifies the network protocol this listener
                        expects to receive. \n Support: Core"
                      maxLength: 255
                      minLength: 1
                      pattern: ^[a-zA-Z0-9]([-a-zSA-Z0-9]*[a-zA-Z0-9])?$|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9]+$
                      type: string
                    tls:
                      description: "TLS is the TLS configuration for the Listener.
                        This field is required if the Protocol field is \"HTTPS\"
                        or \"TLS\". It is invalid to set this field if the Protocol
                        field is \"HTTP\", \"TCP\", or \"UDP\". \n The association
                        of SNIs to Certificate defined in GatewayTLSConfig is defined
                        based on the Hostname field for this listener. \n The GatewayClass
                        MUST use the longest matching SNI out of all available certificates
                        for any TLS handshake. \n Support: Core"
                      properties:
                        certificateRefs:
                          description: "CertificateRefs contains a series of references
                            to Kubernetes objects that contains TLS certificates and
                            private keys. These certificates are used to establish
                            a TLS handshake for requests that match the hostname of
                            the associated listener. \n A single CertificateRef to
                            a Kubernetes Secret has \"Core\" support. Implementations
                            MAY choose to support attaching multiple certificates
                            to a Listener, but this behavior is implementation-specific.
                            \n References to a resource in different namespace are
                            invalid UNLESS there is a ReferenceGrant in the target
                            namespace that allows the certificate to be attached.
                            If a ReferenceGrant does not allow this reference, the
                            \"ResolvedRefs\" condition MUST be set to False for this
                            listener with the \"RefNotPermitted\" reason. \n This
                            field is required to have at least one element when the
                            mode is set to \"Terminate\" (default) and is optional
                            otherwise. \n CertificateRefs can reference to standard
                            Kubernetes resources, i.e. Secret, or implementation-specific
                            custom resources. \n Support: Core - A single reference
                            to a Kubernetes Secret of type kubernetes.io/tls \n Support:
                            Implementation-specific (More than one reference or other
                            resource types)"
                          items:
                            description: "SecretObjectReference identifies an API
                              object including its namespace, defaulting to Secret.
                              \n The API object must be valid in the cluster; the
                              Group and Kind must be registered in the cluster for
                              this reference to be valid. \n References to objects
                              with invalid Group and Kind are not valid, and must
                              be rejected by the implementation, with appropriate
                              Conditions set on the containing object."
                            properties:
                              group:
                                default: ""
                                description: Group is the group of the referent. For
                                  example, "gateway.networking.k8s.io". When unspecified
                                  or empty string, core API group is inferred.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                default: Secret
                                description: Kind is kind of the referent. For example
                                  "Secret".
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                              namespace:
                                description: "Namespace is the namespace of the backend.
                                  When unspecified, the local namespace is inferred.
                                  \n Note that when a namespace different than the
                                  local namespace is specified, a ReferenceGrant object
                                  is required in the referent namespace to allow that
                                  namespace's owner to accept the reference. See the
                                  ReferenceGrant documentation for details. \n Support:
                                  Core"
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                type: string
                            required:
                            - name
                            type: object
                          maxItems: 64
                          type: array
                        mode:
                          default: Terminate
                          description: "Mode defines the TLS behavior for the TLS
                            session initiated by the client. There are two possible
                            modes: \n - Terminate: The TLS session between the downstream
                            client and the Gateway is terminated at the Gateway. This
                            mode requires certificateRefs to be set and contain at
                            least one element. - Passthrough: The TLS session is NOT
                            terminated by the Gateway. This implies that the Gateway
                            can't decipher the TLS stream except for the ClientHello
                            message of the TLS protocol. CertificateRefs field is
                            ignored in this mode. \n Support: Core"
                          enum:
                          - Terminate
                          - Passthrough
                          type: string
                        options:
                          additionalProperties:
                            description: AnnotationValue is the value of an annotation
                              in Gateway API. This is used for validation of maps
                              such as TLS options. This roughly matches Kubernetes
                              annotation validation, although the length validation
                              in that case is based on the entire size of the annotations
                              struct.
                            maxLength: 4096
                            minLength: 0
                            type: string
                          description: "Options are a list of key/value pairs to enable
                            extended TLS configuration for each implementation. For
                            example, configuring the minimum TLS version or supported
                            cipher suites. \n A set of common keys MAY be defined
                            by the API in the future. To avoid any ambiguity, implementation-specific
                            definitions MUST use domain-prefixed names, such as `example.com/my-custom-option`.
                            Un-prefixed names are reserved for key names defined by
                            Gateway API. \n Support: Implementation-specific"
                          maxProperties: 16
                          type: object
                      type: object
                  required:
                  - name
                  - port
                  - protocol
                  type: object
                maxItems: 64
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
            required:
            - gatewayClassName
            - listeners
            type: object
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Accepted
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Programmed
            description: Status defines the current state of Gateway.
            properties:
              addresses:
                description: Addresses lists the IP addresses that have actually been
                  bound to the Gateway. These addresses may differ from the addresses
                  in the Spec, e.g. if the Gateway automatically assigns an address
                  from a reserved pool.
                items:
                  description: GatewayAddress describes an address that can be bound
                    to a Gateway.
                  properties:
                    type:
                      default: IPAddress
                      description: Type of the address.
                      maxLength: 253
                      minLength: 1
                      pattern: ^Hostname|IPAddress|NamedAddress|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    value:
                      description: "Value of the address. The validity of the values
                        will depend on the type and support by the controller. \n
                        Examples: `1.2.3.4`, `128::1`, `my-ip-address`."
                      maxLength: 253
                      minLength: 1
                      type: string
                  required:
                  - value
                  type: object
                maxItems: 16
                type: array
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Accepted
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Programmed
                description: "Conditions describe the current conditions of the Gateway.
                  \n Implementations should prefer to express Gateway conditions using
                  the `GatewayConditionType` and `GatewayConditionReason` constants
                  so that operators and tools can converge on a common vocabulary
                  to describe Gateway state. \n Known condition types are: \n * \"Accepted\"
                  * \"Programmed\" * \"Ready\""
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              listeners:
                description: Listeners provide status for each unique listener port
                  defined in the Spec.
                items:
                  description: ListenerStatus is the status associated with a Listener.
                  properties:
                    attachedRoutes:
                      description: AttachedRoutes represents the total number of accepted
                        Routes that have been successfully attached to this Listener.
                      format: int32
                      type: integer
                    conditions:
                      description: Conditions describe the current condition of this
                        listener.
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource. --- This struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example, \n type FooStatus struct{
                          // Represents the observations of a foo's current state.
                          // Known .status.conditions.type are: \"Available\", \"Progressing\",
                          and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                          // +listType=map // +listMapKey=type Conditions []metav1.Condition
                          `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                          protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields
                          }"
                        properties:
                          lastTransitionTime:
                            description: lastTransitionTime is the last time the condition
                              transitioned from one status to another. This should
                              be when the underlying condition changed.  If that is
                              not known, then using the time when the API field changed
                              is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: message is a human readable message indicating
                              details about the transition. This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: observedGeneration represents the .metadata.generation
                              that the condition was set based upon. For instance,
                              if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                              is 9, the condition is out of date with respect to the
                              current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. The value should
                              be a CamelCase string. This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                              --- Many .condition.type values are consistent across
                              resources like Available, but because arbitrary conditions
                              can be useful (see .node.status.conditions), the ability
                              to deconflict is important. The regex it matches is
                              (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    name:
                      description: Name is the name of the Listener that this status
                        corresponds to.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    supportedKinds:
                      description: "SupportedKinds is the list indicating the Kinds
                        supported by this listener. This MUST represent the kinds
                        an implementation supports for that Listener configuration.
                        \n If kinds are specified in Spec that are not supported,
                        they MUST NOT appear in this list and an implementation MUST
                        set the \"ResolvedRefs\" condition to \"False\" with the \"InvalidRouteKinds\"
                        reason. If both valid and invalid Route kinds are specified,
                        the implementation MUST reference the valid Route kinds that
                        have been specified."
                      items:
                        description: RouteGroupKind indicates the group and kind of
                          a Route resource.
                        properties:
                          group:
                            default: gateway.networking.k8s.io
                            description: Group is the group of the Route.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            description: Kind is the kind of the Route.
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                        required:
                        - kind
                        type: object
                      maxItems: 8
                      type: array
                  required:
                  - attachedRoutes
                  - conditions
                  - name
                  - supportedKinds
                  type: object
                maxItems: 64
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
# Source: eg-edge-stack-crds/templates/gwapi/gatewayapi-crds.yaml
#
# config/crd/experimental/gateway.networking.k8s.io_grpcroutes.yaml
#
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/1923
    gateway.networking.k8s.io/bundle-version: v0.7.1
    gateway.networking.k8s.io/channel: experimental
  creationTimestamp: null
  name: grpcroutes.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: GRPCRoute
    listKind: GRPCRouteList
    plural: grpcroutes
    singular: grpcroute
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.hostnames
      name: Hostnames
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: "GRPCRoute provides a way to route gRPC requests. This includes
          the capability to match requests by hostname, gRPC service, gRPC method,
          or HTTP/2 header. Filters can be used to specify additional processing steps.
          Backends specify where matching requests will be routed. \n GRPCRoute falls
          under extended support within the Gateway API. Within the following specification,
          the word \"MUST\" indicates that an implementation supporting GRPCRoute
          must conform to the indicated requirement, but an implementation not supporting
          this route type need not follow the requirement unless explicitly indicated.
          \n Implementations supporting `GRPCRoute` with the `HTTPS` `ProtocolType`
          MUST accept HTTP/2 connections without an initial upgrade from HTTP/1.1,
          i.e. via ALPN. If the implementation does not support this, then it MUST
          set the \"Accepted\" condition to \"False\" for the affected listener with
          a reason of \"UnsupportedProtocol\".  Implementations MAY also accept HTTP/2
          connections with an upgrade from HTTP/1. \n Implementations supporting `GRPCRoute`
          with the `HTTP` `ProtocolType` MUST support HTTP/2 over cleartext TCP (h2c,
          https://www.rfc-editor.org/rfc/rfc7540#section-3.1) without an initial upgrade
          from HTTP/1.1, i.e. with prior knowledge (https://www.rfc-editor.org/rfc/rfc7540#section-3.4).
          If the implementation does not support this, then it MUST set the \"Accepted\"
          condition to \"False\" for the affected listener with a reason of \"UnsupportedProtocol\".
          Implementations MAY also accept HTTP/2 connections with an upgrade from
          HTTP/1, i.e. without prior knowledge. \n Support: Extended"
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of GRPCRoute.
            properties:
              hostnames:
                description: "Hostnames defines a set of hostnames to match against
                  the GRPC Host header to select a GRPCRoute to process the request.
                  This matches the RFC 1123 definition of a hostname with 2 notable
                  exceptions: \n 1. IPs are not allowed. 2. A hostname may be prefixed
                  with a wildcard label (`*.`). The wildcard label MUST appear by
                  itself as the first label. \n If a hostname is specified by both
                  the Listener and GRPCRoute, there MUST be at least one intersecting
                  hostname for the GRPCRoute to be attached to the Listener. For example:
                  \n * A Listener with `test.example.com` as the hostname matches
                  GRPCRoutes that have either not specified any hostnames, or have
                  specified at least one of `test.example.com` or `*.example.com`.
                  * A Listener with `*.example.com` as the hostname matches GRPCRoutes
                  that have either not specified any hostnames or have specified at
                  least one hostname that matches the Listener hostname. For example,
                  `test.example.com` and `*.example.com` would both match. On the
                  other hand, `example.com` and `test.example.net` would not match.
                  \n Hostnames that are prefixed with a wildcard label (`*.`) are
                  interpreted as a suffix match. That means that a match for `*.example.com`
                  would match both `test.example.com`, and `foo.test.example.com`,
                  but not `example.com`. \n If both the Listener and GRPCRoute have
                  specified hostnames, any GRPCRoute hostnames that do not match the
                  Listener hostname MUST be ignored. For example, if a Listener specified
                  `*.example.com`, and the GRPCRoute specified `test.example.com`
                  and `test.example.net`, `test.example.net` MUST NOT be considered
                  for a match. \n If both the Listener and GRPCRoute have specified
                  hostnames, and none match with the criteria above, then the GRPCRoute
                  MUST NOT be accepted by the implementation. The implementation MUST
                  raise an 'Accepted' Condition with a status of `False` in the corresponding
                  RouteParentStatus. \n If a Route (A) of type HTTPRoute or GRPCRoute
                  is attached to a Listener and that listener already has another
                  Route (B) of the other type attached and the intersection of the
                  hostnames of A and B is non-empty, then the implementation MUST
                  accept exactly one of these two routes, determined by the following
                  criteria, in order: \n * The oldest Route based on creation timestamp.
                  * The Route appearing first in alphabetical order by \"{namespace}/{name}\".
                  \n The rejected Route MUST raise an 'Accepted' condition with a
                  status of 'False' in the corresponding RouteParentStatus. \n Support:
                  Core"
                items:
                  description: "Hostname is the fully qualified domain name of a network
                    host. This matches the RFC 1123 definition of a hostname with
                    2 notable exceptions: \n 1. IPs are not allowed. 2. A hostname
                    may be prefixed with a wildcard label (`*.`). The wildcard label
                    must appear by itself as the first label. \n Hostname can be \"precise\"
                    which is a domain name without the terminating dot of a network
                    host (e.g. \"foo.example.com\") or \"wildcard\", which is a domain
                    name prefixed with a single wildcard label (e.g. `*.example.com`).
                    \n Note that as per RFC1035 and RFC1123, a *label* must consist
                    of lower case alphanumeric characters or '-', and must start and
                    end with an alphanumeric character. No other punctuation is allowed."
                  maxLength: 253
                  minLength: 1
                  pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                maxItems: 16
                type: array
              parentRefs:
                description: "ParentRefs references the resources (usually Gateways)
                  that a Route wants to be attached to. Note that the referenced parent
                  resource needs to allow this for the attachment to be complete.
                  For Gateways, that means the Gateway needs to allow attachment from
                  Routes of this kind and namespace. \n The only kind of parent resource
                  with \"Core\" support is Gateway. This API may be extended in the
                  future to support additional kinds of parent resources such as one
                  of the route kinds. \n It is invalid to reference an identical parent
                  more than once. It is valid to reference multiple distinct sections
                  within the same parent resource, such as 2 Listeners within a Gateway.
                  \n It is possible to separately reference multiple distinct objects
                  that may be collapsed by an implementation. For example, some implementations
                  may choose to merge compatible Gateway Listeners together. If that
                  is the case, the list of routes attached to those resources should
                  also be merged. \n Note that for ParentRefs that cross namespace
                  boundaries, there are specific rules. Cross-namespace references
                  are only valid if they are explicitly allowed by something in the
                  namespace they are referring to. For example, Gateway has the AllowedRoutes
                  field, and ReferenceGrant provides a generic way to enable any other
                  kind of cross-namespace reference."
                items:
                  description: "ParentReference identifies an API object (usually
                    a Gateway) that can be considered a parent of this resource (usually
                    a route). The only kind of parent resource with \"Core\" support
                    is Gateway. This API may be extended in the future to support
                    additional kinds of parent resources, such as HTTPRoute. \n The
                    API object must be valid in the cluster; the Group and Kind must
                    be registered in the cluster for this reference to be valid."
                  properties:
                    group:
                      default: gateway.networking.k8s.io
                      description: "Group is the group of the referent. When unspecified,
                        \"gateway.networking.k8s.io\" is inferred. To set the core
                        API group (such as for a \"Service\" kind referent), Group
                        must be explicitly set to \"\" (empty string). \n Support:
                        Core"
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: "Kind is kind of the referent. \n Support: Core
                        (Gateway) \n Support: Implementation-specific (Other Resources)"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: "Name is the name of the referent. \n Support:
                        Core"
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: "Namespace is the namespace of the referent. When
                        unspecified, this refers to the local namespace of the Route.
                        \n Note that there are specific rules for ParentRefs which
                        cross namespace boundaries. Cross-namespace references are
                        only valid if they are explicitly allowed by something in
                        the namespace they are referring to. For example: Gateway
                        has the AllowedRoutes field, and ReferenceGrant provides a
                        generic way to enable any other kind of cross-namespace reference.
                        \n Support: Core"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    port:
                      description: "Port is the network port this Route targets. It
                        can be interpreted differently based on the type of parent
                        resource. \n When the parent resource is a Gateway, this targets
                        all listeners listening on the specified port that also support
                        this kind of Route(and select this Route). It's not recommended
                        to set `Port` unless the networking behaviors specified in
                        a Route must apply to a specific port as opposed to a listener(s)
                        whose port(s) may be changed. When both Port and SectionName
                        are specified, the name and port of the selected listener
                        must match both specified values. \n Implementations MAY choose
                        to support other parent resources. Implementations supporting
                        other types of parent resources MUST clearly document how/if
                        Port is interpreted. \n For the purpose of status, an attachment
                        is considered successful as long as the parent resource accepts
                        it partially. For example, Gateway listeners can restrict
                        which Routes can attach to them by Route kind, namespace,
                        or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this
                        Route, the Route MUST be considered detached from the Gateway.
                        \n Support: Extended \n <gateway:experimental>"
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    sectionName:
                      description: "SectionName is the name of a section within the
                        target resource. In the following resources, SectionName is
                        interpreted as the following: \n * Gateway: Listener Name.
                        When both Port (experimental) and SectionName are specified,
                        the name and port of the selected listener must match both
                        specified values. \n Implementations MAY choose to support
                        attaching Routes to other resources. If that is the case,
                        they MUST clearly document how SectionName is interpreted.
                        \n When unspecified (empty string), this will reference the
                        entire resource. For the purpose of status, an attachment
                        is considered successful if at least one section in the parent
                        resource accepts it. For example, Gateway listeners can restrict
                        which Routes can attach to them by Route kind, namespace,
                        or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this
                        Route, the Route MUST be considered detached from the Gateway.
                        \n Support: Core"
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
              rules:
                default:
                - matches:
                  - method:
                      type: Exact
                description: Rules are a list of GRPC matchers, filters and actions.
                items:
                  description: GRPCRouteRule defines the semantics for matching a
                    gRPC request based on conditions (matches), processing it (filters),
                    and forwarding the request to an API object (backendRefs).
                  properties:
                    backendRefs:
                      description: "BackendRefs defines the backend(s) where matching
                        requests should be sent. \n Failure behavior here depends
                        on how many BackendRefs are specified and how many are invalid.
                        \n If *all* entries in BackendRefs are invalid, and there
                        are also no filters specified in this route rule, *all* traffic
                        which matches this rule MUST receive an `UNAVAILABLE` status.
                        \n See the GRPCBackendRef definition for the rules about what
                        makes a single GRPCBackendRef invalid. \n When a GRPCBackendRef
                        is invalid, `UNAVAILABLE` statuses MUST be returned for requests
                        that would have otherwise been routed to an invalid backend.
                        If multiple backends are specified, and some are invalid,
                        the proportion of requests that would otherwise have been
                        routed to an invalid backend MUST receive an `UNAVAILABLE`
                        status. \n For example, if two backends are specified with
                        equal weights, and one is invalid, 50 percent of traffic MUST
                        receive an `UNAVAILABLE` status. Implementations may choose
                        how that 50 percent is determined. \n Support: Core for Kubernetes
                        Service \n Support: Implementation-specific for any other
                        resource \n Support for weight: Core"
                      items:
                        description: GRPCBackendRef defines how a GRPCRoute forwards
                          a gRPC request.
                        properties:
                          filters:
                            description: "Filters defined at this level MUST be executed
                              if and only if the request is being forwarded to the
                              backend defined here. \n Support: Implementation-specific
                              (For broader support of filters, use the Filters field
                              in GRPCRouteRule.)"
                            items:
                              description: GRPCRouteFilter defines processing steps
                                that must be completed during the request or response
                                lifecycle. GRPCRouteFilters are meant as an extension
                                point to express processing that may be done in Gateway
                                implementations. Some examples include request or
                                response modification, implementing authentication
                                strategies, rate-limiting, and traffic shaping. API
                                guarantee/conformance is defined based on the type
                                of the filter.
                              properties:
                                extensionRef:
                                  description: "ExtensionRef is an optional, implementation-specific
                                    extension to the \"filter\" behavior.  For example,
                                    resource \"myroutefilter\" in group \"networking.example.net\").
                                    ExtensionRef MUST NOT be used for core and extended
                                    filters. \n Support: Implementation-specific"
                                  properties:
                                    group:
                                      description: Group is the group of the referent.
                                        For example, "gateway.networking.k8s.io".
                                        When unspecified or empty string, core API
                                        group is inferred.
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      description: Kind is kind of the referent. For
                                        example "HTTPRoute" or "Service".
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                  required:
                                  - group
                                  - kind
                                  - name
                                  type: object
                                requestHeaderModifier:
                                  description: "RequestHeaderModifier defines a schema
                                    for a filter that modifies request headers. \n
                                    Support: Core"
                                  properties:
                                    add:
                                      description: "Add adds the given header(s) (name,
                                        value) to the request before the action. It
                                        appends to any existing values associated
                                        with the header name. \n Input: GET /foo HTTP/1.1
                                        my-header: foo \n Config: add: - name: \"my-header\"
                                        value: \"bar,baz\" \n Output: GET /foo HTTP/1.1
                                        my-header: foo,bar,baz"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: "Remove the given header(s) from
                                        the HTTP request before the action. The value
                                        of Remove is a list of HTTP header names.
                                        Note that the header names are case-insensitive
                                        (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                        \n Input: GET /foo HTTP/1.1 my-header1: foo
                                        my-header2: bar my-header3: baz \n Config:
                                        remove: [\"my-header1\", \"my-header3\"] \n
                                        Output: GET /foo HTTP/1.1 my-header2: bar"
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                    set:
                                      description: "Set overwrites the request with
                                        the given header (name, value) before the
                                        action. \n Input: GET /foo HTTP/1.1 my-header:
                                        foo \n Config: set: - name: \"my-header\"
                                        value: \"bar\" \n Output: GET /foo HTTP/1.1
                                        my-header: bar"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                requestMirror:
                                  description: "RequestMirror defines a schema for
                                    a filter that mirrors requests. Requests are sent
                                    to the specified destination, but responses from
                                    that destination are ignored. \n Support: Extended"
                                  properties:
                                    backendRef:
                                      description: "BackendRef references a resource
                                        where mirrored requests are sent. \n If the
                                        referent cannot be found, this BackendRef
                                        is invalid and must be dropped from the Gateway.
                                        The controller must ensure the \"ResolvedRefs\"
                                        condition on the Route status is set to `status:
                                        False` and not configure this backend in the
                                        underlying implementation. \n If there is
                                        a cross-namespace reference to an *existing*
                                        object that is not allowed by a ReferenceGrant,
                                        the controller must ensure the \"ResolvedRefs\"
                                        \ condition on the Route is set to `status:
                                        False`, with the \"RefNotPermitted\" reason
                                        and not configure this backend in the underlying
                                        implementation. \n In either error case, the
                                        Message of the `ResolvedRefs` Condition should
                                        be used to provide more detail about the problem.
                                        \n Support: Extended for Kubernetes Service
                                        \n Support: Implementation-specific for any
                                        other resource"
                                      properties:
                                        group:
                                          default: ""
                                          description: Group is the group of the referent.
                                            For example, "gateway.networking.k8s.io".
                                            When unspecified or empty string, core
                                            API group is inferred.
                                          maxLength: 253
                                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        kind:
                                          default: Service
                                          description: "Kind is the Kubernetes resource
                                            kind of the referent. For example \"Service\".
                                            \n Defaults to \"Service\" when not specified.
                                            \n ExternalName services can refer to
                                            CNAME DNS records that may live outside
                                            of the cluster and as such are difficult
                                            to reason about in terms of conformance.
                                            They also may not be safe to forward to
                                            (see CVE-2021-25740 for more information).
                                            Implementations SHOULD NOT support ExternalName
                                            Services. \n Support: Core (Services with
                                            a type other than ExternalName) \n Support:
                                            Implementation-specific (Services with
                                            type ExternalName)"
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                          type: string
                                        name:
                                          description: Name is the name of the referent.
                                          maxLength: 253
                                          minLength: 1
                                          type: string
                                        namespace:
                                          description: "Namespace is the namespace
                                            of the backend. When unspecified, the
                                            local namespace is inferred. \n Note that
                                            when a namespace different than the local
                                            namespace is specified, a ReferenceGrant
                                            object is required in the referent namespace
                                            to allow that namespace's owner to accept
                                            the reference. See the ReferenceGrant
                                            documentation for details. \n Support:
                                            Core"
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                        port:
                                          description: Port specifies the destination
                                            port number to use for this resource.
                                            Port is required when the referent is
                                            a Kubernetes Service. In this case, the
                                            port number is the service port number,
                                            not the target port. For other resources,
                                            destination port might be derived from
                                            the referent resource or this field.
                                          format: int32
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                      required:
                                      - name
                                      type: object
                                  required:
                                  - backendRef
                                  type: object
                                responseHeaderModifier:
                                  description: "ResponseHeaderModifier defines a schema
                                    for a filter that modifies response headers. \n
                                    Support: Extended"
                                  properties:
                                    add:
                                      description: "Add adds the given header(s) (name,
                                        value) to the request before the action. It
                                        appends to any existing values associated
                                        with the header name. \n Input: GET /foo HTTP/1.1
                                        my-header: foo \n Config: add: - name: \"my-header\"
                                        value: \"bar,baz\" \n Output: GET /foo HTTP/1.1
                                        my-header: foo,bar,baz"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: "Remove the given header(s) from
                                        the HTTP request before the action. The value
                                        of Remove is a list of HTTP header names.
                                        Note that the header names are case-insensitive
                                        (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                        \n Input: GET /foo HTTP/1.1 my-header1: foo
                                        my-header2: bar my-header3: baz \n Config:
                                        remove: [\"my-header1\", \"my-header3\"] \n
                                        Output: GET /foo HTTP/1.1 my-header2: bar"
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                    set:
                                      description: "Set overwrites the request with
                                        the given header (name, value) before the
                                        action. \n Input: GET /foo HTTP/1.1 my-header:
                                        foo \n Config: set: - name: \"my-header\"
                                        value: \"bar\" \n Output: GET /foo HTTP/1.1
                                        my-header: bar"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                type:
                                  description: "Type identifies the type of filter
                                    to apply. As with other API fields, types are
                                    classified into three conformance levels: \n -
                                    Core: Filter types and their corresponding configuration
                                    defined by \"Support: Core\" in this package,
                                    e.g. \"RequestHeaderModifier\". All implementations
                                    supporting GRPCRoute MUST support core filters.
                                    \n - Extended: Filter types and their corresponding
                                    configuration defined by \"Support: Extended\"
                                    in this package, e.g. \"RequestMirror\". Implementers
                                    are encouraged to support extended filters. \n
                                    - Implementation-specific: Filters that are defined
                                    and supported by specific vendors. In the future,
                                    filters showing convergence in behavior across
                                    multiple implementations will be considered for
                                    inclusion in extended or core conformance levels.
                                    Filter-specific configuration for such filters
                                    is specified using the ExtensionRef field. `Type`
                                    MUST be set to \"ExtensionRef\" for custom filters.
                                    \n Implementers are encouraged to define custom
                                    implementation types to extend the core API with
                                    implementation-specific behavior. \n If a reference
                                    to a custom filter type cannot be resolved, the
                                    filter MUST NOT be skipped. Instead, requests
                                    that would have been processed by that filter
                                    MUST receive a HTTP error response. \n "
                                  enum:
                                  - ResponseHeaderModifier
                                  - RequestHeaderModifier
                                  - RequestMirror
                                  - ExtensionRef
                                  type: string
                              required:
                              - type
                              type: object
                            maxItems: 16
                            type: array
                          group:
                            default: ""
                            description: Group is the group of the referent. For example,
                              "gateway.networking.k8s.io". When unspecified or empty
                              string, core API group is inferred.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Service
                            description: "Kind is the Kubernetes resource kind of
                              the referent. For example \"Service\". \n Defaults to
                              \"Service\" when not specified. \n ExternalName services
                              can refer to CNAME DNS records that may live outside
                              of the cluster and as such are difficult to reason about
                              in terms of conformance. They also may not be safe to
                              forward to (see CVE-2021-25740 for more information).
                              Implementations SHOULD NOT support ExternalName Services.
                              \n Support: Core (Services with a type other than ExternalName)
                              \n Support: Implementation-specific (Services with type
                              ExternalName)"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the referent.
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: "Namespace is the namespace of the backend.
                              When unspecified, the local namespace is inferred. \n
                              Note that when a namespace different than the local
                              namespace is specified, a ReferenceGrant object is required
                              in the referent namespace to allow that namespace's
                              owner to accept the reference. See the ReferenceGrant
                              documentation for details. \n Support: Core"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: Port specifies the destination port number
                              to use for this resource. Port is required when the
                              referent is a Kubernetes Service. In this case, the
                              port number is the service port number, not the target
                              port. For other resources, destination port might be
                              derived from the referent resource or this field.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          weight:
                            default: 1
                            description: "Weight specifies the proportion of requests
                              forwarded to the referenced backend. This is computed
                              as weight/(sum of all weights in this BackendRefs list).
                              For non-zero values, there may be some epsilon from
                              the exact proportion defined here depending on the precision
                              an implementation supports. Weight is not a percentage
                              and the sum of weights does not need to equal 100. \n
                              If only one backend is specified and it has a weight
                              greater than 0, 100% of the traffic is forwarded to
                              that backend. If weight is set to 0, no traffic should
                              be forwarded for this entry. If unspecified, weight
                              defaults to 1. \n Support for this field varies based
                              on the context where used."
                            format: int32
                            maximum: 1000000
                            minimum: 0
                            type: integer
                        required:
                        - name
                        type: object
                      maxItems: 16
                      type: array
                    filters:
                      description: "Filters define the filters that are applied to
                        requests that match this rule. \n The effects of ordering
                        of multiple behaviors are currently unspecified. This can
                        change in the future based on feedback during the alpha stage.
                        \n Conformance-levels at this level are defined based on the
                        type of filter: \n - ALL core filters MUST be supported by
                        all implementations that support GRPCRoute. - Implementers
                        are encouraged to support extended filters. - Implementation-specific
                        custom filters have no API guarantees across implementations.
                        \n Specifying a core filter multiple times has unspecified
                        or implementation-specific conformance. Support: Core"
                      items:
                        description: GRPCRouteFilter defines processing steps that
                          must be completed during the request or response lifecycle.
                          GRPCRouteFilters are meant as an extension point to express
                          processing that may be done in Gateway implementations.
                          Some examples include request or response modification,
                          implementing authentication strategies, rate-limiting, and
                          traffic shaping. API guarantee/conformance is defined based
                          on the type of the filter.
                        properties:
                          extensionRef:
                            description: "ExtensionRef is an optional, implementation-specific
                              extension to the \"filter\" behavior.  For example,
                              resource \"myroutefilter\" in group \"networking.example.net\").
                              ExtensionRef MUST NOT be used for core and extended
                              filters. \n Support: Implementation-specific"
                            properties:
                              group:
                                description: Group is the group of the referent. For
                                  example, "gateway.networking.k8s.io". When unspecified
                                  or empty string, core API group is inferred.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                description: Kind is kind of the referent. For example
                                  "HTTPRoute" or "Service".
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                            required:
                            - group
                            - kind
                            - name
                            type: object
                          requestHeaderModifier:
                            description: "RequestHeaderModifier defines a schema for
                              a filter that modifies request headers. \n Support:
                              Core"
                            properties:
                              add:
                                description: "Add adds the given header(s) (name,
                                  value) to the request before the action. It appends
                                  to any existing values associated with the header
                                  name. \n Input: GET /foo HTTP/1.1 my-header: foo
                                  \n Config: add: - name: \"my-header\" value: \"bar,baz\"
                                  \n Output: GET /foo HTTP/1.1 my-header: foo,bar,baz"
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: "Name is the name of the HTTP Header
                                        to be matched. Name matching MUST be case
                                        insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                        \n If multiple entries specify equivalent
                                        header names, the first entry with an equivalent
                                        name MUST be considered for a match. Subsequent
                                        entries with an equivalent header name MUST
                                        be ignored. Due to the case-insensitivity
                                        of header names, \"foo\" and \"Foo\" are considered
                                        equivalent."
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: "Remove the given header(s) from the
                                  HTTP request before the action. The value of Remove
                                  is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                  \n Input: GET /foo HTTP/1.1 my-header1: foo my-header2:
                                  bar my-header3: baz \n Config: remove: [\"my-header1\",
                                  \"my-header3\"] \n Output: GET /foo HTTP/1.1 my-header2:
                                  bar"
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                              set:
                                description: "Set overwrites the request with the
                                  given header (name, value) before the action. \n
                                  Input: GET /foo HTTP/1.1 my-header: foo \n Config:
                                  set: - name: \"my-header\" value: \"bar\" \n Output:
                                  GET /foo HTTP/1.1 my-header: bar"
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: "Name is the name of the HTTP Header
                                        to be matched. Name matching MUST be case
                                        insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                        \n If multiple entries specify equivalent
                                        header names, the first entry with an equivalent
                                        name MUST be considered for a match. Subsequent
                                        entries with an equivalent header name MUST
                                        be ignored. Due to the case-insensitivity
                                        of header names, \"foo\" and \"Foo\" are considered
                                        equivalent."
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          requestMirror:
                            description: "RequestMirror defines a schema for a filter
                              that mirrors requests. Requests are sent to the specified
                              destination, but responses from that destination are
                              ignored. \n Support: Extended"
                            properties:
                              backendRef:
                                description: "BackendRef references a resource where
                                  mirrored requests are sent. \n If the referent cannot
                                  be found, this BackendRef is invalid and must be
                                  dropped from the Gateway. The controller must ensure
                                  the \"ResolvedRefs\" condition on the Route status
                                  is set to `status: False` and not configure this
                                  backend in the underlying implementation. \n If
                                  there is a cross-namespace reference to an *existing*
                                  object that is not allowed by a ReferenceGrant,
                                  the controller must ensure the \"ResolvedRefs\"
                                  \ condition on the Route is set to `status: False`,
                                  with the \"RefNotPermitted\" reason and not configure
                                  this backend in the underlying implementation. \n
                                  In either error case, the Message of the `ResolvedRefs`
                                  Condition should be used to provide more detail
                                  about the problem. \n Support: Extended for Kubernetes
                                  Service \n Support: Implementation-specific for
                                  any other resource"
                                properties:
                                  group:
                                    default: ""
                                    description: Group is the group of the referent.
                                      For example, "gateway.networking.k8s.io". When
                                      unspecified or empty string, core API group
                                      is inferred.
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  kind:
                                    default: Service
                                    description: "Kind is the Kubernetes resource
                                      kind of the referent. For example \"Service\".
                                      \n Defaults to \"Service\" when not specified.
                                      \n ExternalName services can refer to CNAME
                                      DNS records that may live outside of the cluster
                                      and as such are difficult to reason about in
                                      terms of conformance. They also may not be safe
                                      to forward to (see CVE-2021-25740 for more information).
                                      Implementations SHOULD NOT support ExternalName
                                      Services. \n Support: Core (Services with a
                                      type other than ExternalName) \n Support: Implementation-specific
                                      (Services with type ExternalName)"
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: Name is the name of the referent.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  namespace:
                                    description: "Namespace is the namespace of the
                                      backend. When unspecified, the local namespace
                                      is inferred. \n Note that when a namespace different
                                      than the local namespace is specified, a ReferenceGrant
                                      object is required in the referent namespace
                                      to allow that namespace's owner to accept the
                                      reference. See the ReferenceGrant documentation
                                      for details. \n Support: Core"
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                  port:
                                    description: Port specifies the destination port
                                      number to use for this resource. Port is required
                                      when the referent is a Kubernetes Service. In
                                      this case, the port number is the service port
                                      number, not the target port. For other resources,
                                      destination port might be derived from the referent
                                      resource or this field.
                                    format: int32
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                required:
                                - name
                                type: object
                            required:
                            - backendRef
                            type: object
                          responseHeaderModifier:
                            description: "ResponseHeaderModifier defines a schema
                              for a filter that modifies response headers. \n Support:
                              Extended"
                            properties:
                              add:
                                description: "Add adds the given header(s) (name,
                                  value) to the request before the action. It appends
                                  to any existing values associated with the header
                                  name. \n Input: GET /foo HTTP/1.1 my-header: foo
                                  \n Config: add: - name: \"my-header\" value: \"bar,baz\"
                                  \n Output: GET /foo HTTP/1.1 my-header: foo,bar,baz"
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: "Name is the name of the HTTP Header
                                        to be matched. Name matching MUST be case
                                        insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                        \n If multiple entries specify equivalent
                                        header names, the first entry with an equivalent
                                        name MUST be considered for a match. Subsequent
                                        entries with an equivalent header name MUST
                                        be ignored. Due to the case-insensitivity
                                        of header names, \"foo\" and \"Foo\" are considered
                                        equivalent."
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: "Remove the given header(s) from the
                                  HTTP request before the action. The value of Remove
                                  is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                  \n Input: GET /foo HTTP/1.1 my-header1: foo my-header2:
                                  bar my-header3: baz \n Config: remove: [\"my-header1\",
                                  \"my-header3\"] \n Output: GET /foo HTTP/1.1 my-header2:
                                  bar"
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                              set:
                                description: "Set overwrites the request with the
                                  given header (name, value) before the action. \n
                                  Input: GET /foo HTTP/1.1 my-header: foo \n Config:
                                  set: - name: \"my-header\" value: \"bar\" \n Output:
                                  GET /foo HTTP/1.1 my-header: bar"
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: "Name is the name of the HTTP Header
                                        to be matched. Name matching MUST be case
                                        insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                        \n If multiple entries specify equivalent
                                        header names, the first entry with an equivalent
                                        name MUST be considered for a match. Subsequent
                                        entries with an equivalent header name MUST
                                        be ignored. Due to the case-insensitivity
                                        of header names, \"foo\" and \"Foo\" are considered
                                        equivalent."
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          type:
                            description: "Type identifies the type of filter to apply.
                              As with other API fields, types are classified into
                              three conformance levels: \n - Core: Filter types and
                              their corresponding configuration defined by \"Support:
                              Core\" in this package, e.g. \"RequestHeaderModifier\".
                              All implementations supporting GRPCRoute MUST support
                              core filters. \n - Extended: Filter types and their
                              corresponding configuration defined by \"Support: Extended\"
                              in this package, e.g. \"RequestMirror\". Implementers
                              are encouraged to support extended filters. \n - Implementation-specific:
                              Filters that are defined and supported by specific vendors.
                              In the future, filters showing convergence in behavior
                              across multiple implementations will be considered for
                              inclusion in extended or core conformance levels. Filter-specific
                              configuration for such filters is specified using the
                              ExtensionRef field. `Type` MUST be set to \"ExtensionRef\"
                              for custom filters. \n Implementers are encouraged to
                              define custom implementation types to extend the core
                              API with implementation-specific behavior. \n If a reference
                              to a custom filter type cannot be resolved, the filter
                              MUST NOT be skipped. Instead, requests that would have
                              been processed by that filter MUST receive a HTTP error
                              response. \n "
                            enum:
                            - ResponseHeaderModifier
                            - RequestHeaderModifier
                            - RequestMirror
                            - ExtensionRef
                            type: string
                        required:
                        - type
                        type: object
                      maxItems: 16
                      type: array
                    matches:
                      description: "Matches define conditions used for matching the
                        rule against incoming gRPC requests. Each match is independent,
                        i.e. this rule will be matched if **any** one of the matches
                        is satisfied. \n For example, take the following matches configuration:
                        \n ``` matches: - method: service: foo.bar headers: values:
                        version: 2 - method: service: foo.bar.v2 ``` \n For a request
                        to match against this rule, it MUST satisfy EITHER of the
                        two conditions: \n - service of foo.bar AND contains the header
                        `version: 2` - service of foo.bar.v2 \n See the documentation
                        for GRPCRouteMatch on how to specify multiple match conditions
                        to be ANDed together. \n If no matches are specified, the
                        implementation MUST match every gRPC request. \n Proxy or
                        Load Balancer routing configuration generated from GRPCRoutes
                        MUST prioritize rules based on the following criteria, continuing
                        on ties. Merging MUST not be done between GRPCRoutes and HTTPRoutes.
                        Precedence MUST be given to the rule with the largest number
                        of: \n * Characters in a matching non-wildcard hostname. *
                        Characters in a matching hostname. * Characters in a matching
                        service. * Characters in a matching method. * Header matches.
                        \n If ties still exist across multiple Routes, matching precedence
                        MUST be determined in order of the following criteria, continuing
                        on ties: \n * The oldest Route based on creation timestamp.
                        * The Route appearing first in alphabetical order by \"{namespace}/{name}\".
                        \n If ties still exist within the Route that has been given
                        precedence, matching precedence MUST be granted to the first
                        matching rule meeting the above criteria."
                      items:
                        description: "GRPCRouteMatch defines the predicate used to
                          match requests to a given action. Multiple match types are
                          ANDed together, i.e. the match will evaluate to true only
                          if all conditions are satisfied. \n For example, the match
                          below will match a gRPC request only if its service is `foo`
                          AND it contains the `version: v1` header: \n ``` matches:
                          - method: type: Exact service: \"foo\" headers: - name:
                          \"version\" value \"v1\" \n ```"
                        properties:
                          headers:
                            description: Headers specifies gRPC request header matchers.
                              Multiple match values are ANDed together, meaning, a
                              request MUST match all the specified headers to select
                              the route.
                            items:
                              description: GRPCHeaderMatch describes how to select
                                a gRPC route by matching gRPC request headers.
                              properties:
                                name:
                                  description: "Name is the name of the gRPC Header
                                    to be matched. \n If multiple entries specify
                                    equivalent header names, only the first entry
                                    with an equivalent name MUST be considered for
                                    a match. Subsequent entries with an equivalent
                                    header name MUST be ignored. Due to the case-insensitivity
                                    of header names, \"foo\" and \"Foo\" are considered
                                    equivalent."
                                  maxLength: 256
                                  minLength: 1
                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  type: string
                                type:
                                  default: Exact
                                  description: Type specifies how to match against
                                    the value of the header.
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of the gRPC Header
                                    to be matched.
                                  maxLength: 4096
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          method:
                            description: Method specifies a gRPC request service/method
                              matcher. If this field is not specified, all services
                              and methods will match.
                            properties:
                              method:
                                description: "Value of the method to match against.
                                  If left empty or omitted, will match all services.
                                  \n At least one of Service and Method MUST be a
                                  non-empty string."
                                maxLength: 1024
                                type: string
                              service:
                                description: "Value of the service to match against.
                                  If left empty or omitted, will match any service.
                                  \n At least one of Service and Method MUST be a
                                  non-empty string."
                                maxLength: 1024
                                type: string
                              type:
                                default: Exact
                                description: "Type specifies how to match against
                                  the service and/or method. Support: Core (Exact
                                  with service and method specified) \n Support: Implementation-specific
                                  (Exact with method specified but no service specified)
                                  \n Support: Implementation-specific (RegularExpression)"
                                enum:
                                - Exact
                                - RegularExpression
                                type: string
                            type: object
                        type: object
                      maxItems: 8
                      type: array
                  type: object
                maxItems: 16
                type: array
            type: object
          status:
            description: Status defines the current state of GRPCRoute.
            properties:
              parents:
                description: "Parents is a list of parent resources (usually Gateways)
                  that are associated with the route, and the status of the route
                  with respect to each parent. When this route attaches to a parent,
                  the controller that manages the parent must add an entry to this
                  list when the controller first sees the route and should update
                  the entry as appropriate when the route or gateway is modified.
                  \n Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this
                  API can only populate Route status for the Gateways/parent resources
                  they are responsible for. \n A maximum of 32 Gateways will be represented
                  in this list. An empty list means the route has not been attached
                  to any Gateway."
                items:
                  description: RouteParentStatus describes the status of a route with
                    respect to an associated Parent.
                  properties:
                    conditions:
                      description: "Conditions describes the status of the route with
                        respect to the Gateway. Note that the route's availability
                        is also subject to the Gateway's own status conditions and
                        listener status. \n If the Route's ParentRef specifies an
                        existing Gateway that supports Routes of this kind AND that
                        Gateway's controller has sufficient access, then that Gateway's
                        controller MUST set the \"Accepted\" condition on the Route,
                        to indicate whether the route has been accepted or rejected
                        by the Gateway, and why. \n A Route MUST be considered \"Accepted\"
                        if at least one of the Route's rules is implemented by the
                        Gateway. \n There are a number of cases where the \"Accepted\"
                        condition may not be set due to lack of controller visibility,
                        that includes when: \n * The Route refers to a non-existent
                        parent. * The Route is of a type that the controller does
                        not support. * The Route is in a namespace the controller
                        does not have access to."
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource. --- This struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example, \n type FooStatus struct{
                          // Represents the observations of a foo's current state.
                          // Known .status.conditions.type are: \"Available\", \"Progressing\",
                          and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                          // +listType=map // +listMapKey=type Conditions []metav1.Condition
                          `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                          protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields
                          }"
                        properties:
                          lastTransitionTime:
                            description: lastTransitionTime is the last time the condition
                              transitioned from one status to another. This should
                              be when the underlying condition changed.  If that is
                              not known, then using the time when the API field changed
                              is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: message is a human readable message indicating
                              details about the transition. This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: observedGeneration represents the .metadata.generation
                              that the condition was set based upon. For instance,
                              if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                              is 9, the condition is out of date with respect to the
                              current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. The value should
                              be a CamelCase string. This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                              --- Many .condition.type values are consistent across
                              resources like Available, but because arbitrary conditions
                              can be useful (see .node.status.conditions), the ability
                              to deconflict is important. The regex it matches is
                              (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: "ControllerName is a domain/path string that indicates
                        the name of the controller that wrote this status. This corresponds
                        with the controllerName field on GatewayClass. \n Example:
                        \"example.net/gateway-controller\". \n The format of this
                        field is DOMAIN \"/\" PATH, where DOMAIN and PATH are valid
                        Kubernetes names (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                        \n Controllers MUST populate this field when writing status.
                        Controllers should ensure that entries to status populated
                        with their ControllerName are cleaned up when they are no
                        longer necessary."
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: ParentRef corresponds with a ParentRef in the spec
                        that this RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: "Group is the group of the referent. When unspecified,
                            \"gateway.networking.k8s.io\" is inferred. To set the
                            core API group (such as for a \"Service\" kind referent),
                            Group must be explicitly set to \"\" (empty string). \n
                            Support: Core"
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: "Kind is kind of the referent. \n Support:
                            Core (Gateway) \n Support: Implementation-specific (Other
                            Resources)"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: "Name is the name of the referent. \n Support:
                            Core"
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: "Namespace is the namespace of the referent.
                            When unspecified, this refers to the local namespace of
                            the Route. \n Note that there are specific rules for ParentRefs
                            which cross namespace boundaries. Cross-namespace references
                            are only valid if they are explicitly allowed by something
                            in the namespace they are referring to. For example: Gateway
                            has the AllowedRoutes field, and ReferenceGrant provides
                            a generic way to enable any other kind of cross-namespace
                            reference. \n Support: Core"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: "Port is the network port this Route targets.
                            It can be interpreted differently based on the type of
                            parent resource. \n When the parent resource is a Gateway,
                            this targets all listeners listening on the specified
                            port that also support this kind of Route(and select this
                            Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to
                            a specific port as opposed to a listener(s) whose port(s)
                            may be changed. When both Port and SectionName are specified,
                            the name and port of the selected listener must match
                            both specified values. \n Implementations MAY choose to
                            support other parent resources. Implementations supporting
                            other types of parent resources MUST clearly document
                            how/if Port is interpreted. \n For the purpose of status,
                            an attachment is considered successful as long as the
                            parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them
                            by Route kind, namespace, or hostname. If 1 of 2 Gateway
                            listeners accept attachment from the referencing Route,
                            the Route MUST be considered successfully attached. If
                            no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.
                            \n Support: Extended \n <gateway:experimental>"
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: "SectionName is the name of a section within
                            the target resource. In the following resources, SectionName
                            is interpreted as the following: \n * Gateway: Listener
                            Name. When both Port (experimental) and SectionName are
                            specified, the name and port of the selected listener
                            must match both specified values. \n Implementations MAY
                            choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName
                            is interpreted. \n When unspecified (empty string), this
                            will reference the entire resource. For the purpose of
                            status, an attachment is considered successful if at least
                            one section in the parent resource accepts it. For example,
                            Gateway listeners can restrict which Routes can attach
                            to them by Route kind, namespace, or hostname. If 1 of
                            2 Gateway listeners accept attachment from the referencing
                            Route, the Route MUST be considered successfully attached.
                            If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.
                            \n Support: Core"
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
# Source: eg-edge-stack-crds/templates/gwapi/gatewayapi-crds.yaml
#
# config/crd/experimental/gateway.networking.k8s.io_httproutes.yaml
#
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/1923
    gateway.networking.k8s.io/bundle-version: v0.7.1
    gateway.networking.k8s.io/channel: experimental
  creationTimestamp: null
  name: httproutes.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: HTTPRoute
    listKind: HTTPRouteList
    plural: httproutes
    singular: httproute
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.hostnames
      name: Hostnames
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    deprecated: true
    deprecationWarning: The v1alpha2 version of HTTPRoute has been deprecated and
      will be removed in a future release of the API. Please upgrade to v1beta1.
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: HTTPRoute provides a way to route HTTP requests. This includes
          the capability to match requests by hostname, path, header, or query param.
          Filters can be used to specify additional processing steps. Backends specify
          where matching requests should be routed.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of HTTPRoute.
            properties:
              hostnames:
                description: "Hostnames defines a set of hostname that should match
                  against the HTTP Host header to select a HTTPRoute used to process
                  the request. Implementations MUST ignore any port value specified
                  in the HTTP Host header while performing a match. \n Valid values
                  for Hostnames are determined by RFC 1123 definition of a hostname
                  with 2 notable exceptions: \n 1. IPs are not allowed. 2. A hostname
                  may be prefixed with a wildcard label (`*.`). The wildcard label
                  must appear by itself as the first label. \n If a hostname is specified
                  by both the Listener and HTTPRoute, there must be at least one intersecting
                  hostname for the HTTPRoute to be attached to the Listener. For example:
                  \n * A Listener with `test.example.com` as the hostname matches
                  HTTPRoutes that have either not specified any hostnames, or have
                  specified at least one of `test.example.com` or `*.example.com`.
                  * A Listener with `*.example.com` as the hostname matches HTTPRoutes
                  that have either not specified any hostnames or have specified at
                  least one hostname that matches the Listener hostname. For example,
                  `*.example.com`, `test.example.com`, and `foo.test.example.com`
                  would all match. On the other hand, `example.com` and `test.example.net`
                  would not match. \n Hostnames that are prefixed with a wildcard
                  label (`*.`) are interpreted as a suffix match. That means that
                  a match for `*.example.com` would match both `test.example.com`,
                  and `foo.test.example.com`, but not `example.com`. \n If both the
                  Listener and HTTPRoute have specified hostnames, any HTTPRoute hostnames
                  that do not match the Listener hostname MUST be ignored. For example,
                  if a Listener specified `*.example.com`, and the HTTPRoute specified
                  `test.example.com` and `test.example.net`, `test.example.net` must
                  not be considered for a match. \n If both the Listener and HTTPRoute
                  have specified hostnames, and none match with the criteria above,
                  then the HTTPRoute is not accepted. The implementation must raise
                  an 'Accepted' Condition with a status of `False` in the corresponding
                  RouteParentStatus. \n In the event that multiple HTTPRoutes specify
                  intersecting hostnames (e.g. overlapping wildcard matching and exact
                  matching hostnames), precedence must be given to rules from the
                  HTTPRoute with the largest number of: \n * Characters in a matching
                  non-wildcard hostname. * Characters in a matching hostname. \n If
                  ties exist across multiple Routes, the matching precedence rules
                  for HTTPRouteMatches takes over. \n Support: Core"
                items:
                  description: "Hostname is the fully qualified domain name of a network
                    host. This matches the RFC 1123 definition of a hostname with
                    2 notable exceptions: \n 1. IPs are not allowed. 2. A hostname
                    may be prefixed with a wildcard label (`*.`). The wildcard label
                    must appear by itself as the first label. \n Hostname can be \"precise\"
                    which is a domain name without the terminating dot of a network
                    host (e.g. \"foo.example.com\") or \"wildcard\", which is a domain
                    name prefixed with a single wildcard label (e.g. `*.example.com`).
                    \n Note that as per RFC1035 and RFC1123, a *label* must consist
                    of lower case alphanumeric characters or '-', and must start and
                    end with an alphanumeric character. No other punctuation is allowed."
                  maxLength: 253
                  minLength: 1
                  pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                maxItems: 16
                type: array
              parentRefs:
                description: "ParentRefs references the resources (usually Gateways)
                  that a Route wants to be attached to. Note that the referenced parent
                  resource needs to allow this for the attachment to be complete.
                  For Gateways, that means the Gateway needs to allow attachment from
                  Routes of this kind and namespace. \n The only kind of parent resource
                  with \"Core\" support is Gateway. This API may be extended in the
                  future to support additional kinds of parent resources such as one
                  of the route kinds. \n It is invalid to reference an identical parent
                  more than once. It is valid to reference multiple distinct sections
                  within the same parent resource, such as 2 Listeners within a Gateway.
                  \n It is possible to separately reference multiple distinct objects
                  that may be collapsed by an implementation. For example, some implementations
                  may choose to merge compatible Gateway Listeners together. If that
                  is the case, the list of routes attached to those resources should
                  also be merged. \n Note that for ParentRefs that cross namespace
                  boundaries, there are specific rules. Cross-namespace references
                  are only valid if they are explicitly allowed by something in the
                  namespace they are referring to. For example, Gateway has the AllowedRoutes
                  field, and ReferenceGrant provides a generic way to enable any other
                  kind of cross-namespace reference."
                items:
                  description: "ParentReference identifies an API object (usually
                    a Gateway) that can be considered a parent of this resource (usually
                    a route). The only kind of parent resource with \"Core\" support
                    is Gateway. This API may be extended in the future to support
                    additional kinds of parent resources, such as HTTPRoute. \n The
                    API object must be valid in the cluster; the Group and Kind must
                    be registered in the cluster for this reference to be valid."
                  properties:
                    group:
                      default: gateway.networking.k8s.io
                      description: "Group is the group of the referent. When unspecified,
                        \"gateway.networking.k8s.io\" is inferred. To set the core
                        API group (such as for a \"Service\" kind referent), Group
                        must be explicitly set to \"\" (empty string). \n Support:
                        Core"
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: "Kind is kind of the referent. \n Support: Core
                        (Gateway) \n Support: Implementation-specific (Other Resources)"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: "Name is the name of the referent. \n Support:
                        Core"
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: "Namespace is the namespace of the referent. When
                        unspecified, this refers to the local namespace of the Route.
                        \n Note that there are specific rules for ParentRefs which
                        cross namespace boundaries. Cross-namespace references are
                        only valid if they are explicitly allowed by something in
                        the namespace they are referring to. For example: Gateway
                        has the AllowedRoutes field, and ReferenceGrant provides a
                        generic way to enable any other kind of cross-namespace reference.
                        \n Support: Core"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    port:
                      description: "Port is the network port this Route targets. It
                        can be interpreted differently based on the type of parent
                        resource. \n When the parent resource is a Gateway, this targets
                        all listeners listening on the specified port that also support
                        this kind of Route(and select this Route). It's not recommended
                        to set `Port` unless the networking behaviors specified in
                        a Route must apply to a specific port as opposed to a listener(s)
                        whose port(s) may be changed. When both Port and SectionName
                        are specified, the name and port of the selected listener
                        must match both specified values. \n Implementations MAY choose
                        to support other parent resources. Implementations supporting
                        other types of parent resources MUST clearly document how/if
                        Port is interpreted. \n For the purpose of status, an attachment
                        is considered successful as long as the parent resource accepts
                        it partially. For example, Gateway listeners can restrict
                        which Routes can attach to them by Route kind, namespace,
                        or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this
                        Route, the Route MUST be considered detached from the Gateway.
                        \n Support: Extended \n <gateway:experimental>"
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    sectionName:
                      description: "SectionName is the name of a section within the
                        target resource. In the following resources, SectionName is
                        interpreted as the following: \n * Gateway: Listener Name.
                        When both Port (experimental) and SectionName are specified,
                        the name and port of the selected listener must match both
                        specified values. \n Implementations MAY choose to support
                        attaching Routes to other resources. If that is the case,
                        they MUST clearly document how SectionName is interpreted.
                        \n When unspecified (empty string), this will reference the
                        entire resource. For the purpose of status, an attachment
                        is considered successful if at least one section in the parent
                        resource accepts it. For example, Gateway listeners can restrict
                        which Routes can attach to them by Route kind, namespace,
                        or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this
                        Route, the Route MUST be considered detached from the Gateway.
                        \n Support: Core"
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
              rules:
                default:
                - matches:
                  - path:
                      type: PathPrefix
                      value: /
                description: Rules are a list of HTTP matchers, filters and actions.
                items:
                  description: HTTPRouteRule defines semantics for matching an HTTP
                    request based on conditions (matches), processing it (filters),
                    and forwarding the request to an API object (backendRefs).
                  properties:
                    backendRefs:
                      description: "BackendRefs defines the backend(s) where matching
                        requests should be sent. \n Failure behavior here depends
                        on how many BackendRefs are specified and how many are invalid.
                        \n If *all* entries in BackendRefs are invalid, and there
                        are also no filters specified in this route rule, *all* traffic
                        which matches this rule MUST receive a 500 status code. \n
                        See the HTTPBackendRef definition for the rules about what
                        makes a single HTTPBackendRef invalid. \n When a HTTPBackendRef
                        is invalid, 500 status codes MUST be returned for requests
                        that would have otherwise been routed to an invalid backend.
                        If multiple backends are specified, and some are invalid,
                        the proportion of requests that would otherwise have been
                        routed to an invalid backend MUST receive a 500 status code.
                        \n For example, if two backends are specified with equal weights,
                        and one is invalid, 50 percent of traffic must receive a 500.
                        Implementations may choose how that 50 percent is determined.
                        \n Support: Core for Kubernetes Service \n Support: Extended
                        for Kubernetes ServiceImport \n Support: Implementation-specific
                        for any other resource \n Support for weight: Core"
                      items:
                        description: HTTPBackendRef defines how a HTTPRoute should
                          forward an HTTP request.
                        properties:
                          filters:
                            description: "Filters defined at this level should be
                              executed if and only if the request is being forwarded
                              to the backend defined here. \n Support: Implementation-specific
                              (For broader support of filters, use the Filters field
                              in HTTPRouteRule.)"
                            items:
                              description: HTTPRouteFilter defines processing steps
                                that must be completed during the request or response
                                lifecycle. HTTPRouteFilters are meant as an extension
                                point to express processing that may be done in Gateway
                                implementations. Some examples include request or
                                response modification, implementing authentication
                                strategies, rate-limiting, and traffic shaping. API
                                guarantee/conformance is defined based on the type
                                of the filter.
                              properties:
                                extensionRef:
                                  description: "ExtensionRef is an optional, implementation-specific
                                    extension to the \"filter\" behavior.  For example,
                                    resource \"myroutefilter\" in group \"networking.example.net\").
                                    ExtensionRef MUST NOT be used for core and extended
                                    filters. \n Support: Implementation-specific"
                                  properties:
                                    group:
                                      description: Group is the group of the referent.
                                        For example, "gateway.networking.k8s.io".
                                        When unspecified or empty string, core API
                                        group is inferred.
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      description: Kind is kind of the referent. For
                                        example "HTTPRoute" or "Service".
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                  required:
                                  - group
                                  - kind
                                  - name
                                  type: object
                                requestHeaderModifier:
                                  description: "RequestHeaderModifier defines a schema
                                    for a filter that modifies request headers. \n
                                    Support: Core"
                                  properties:
                                    add:
                                      description: "Add adds the given header(s) (name,
                                        value) to the request before the action. It
                                        appends to any existing values associated
                                        with the header name. \n Input: GET /foo HTTP/1.1
                                        my-header: foo \n Config: add: - name: \"my-header\"
                                        value: \"bar,baz\" \n Output: GET /foo HTTP/1.1
                                        my-header: foo,bar,baz"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: "Remove the given header(s) from
                                        the HTTP request before the action. The value
                                        of Remove is a list of HTTP header names.
                                        Note that the header names are case-insensitive
                                        (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                        \n Input: GET /foo HTTP/1.1 my-header1: foo
                                        my-header2: bar my-header3: baz \n Config:
                                        remove: [\"my-header1\", \"my-header3\"] \n
                                        Output: GET /foo HTTP/1.1 my-header2: bar"
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                    set:
                                      description: "Set overwrites the request with
                                        the given header (name, value) before the
                                        action. \n Input: GET /foo HTTP/1.1 my-header:
                                        foo \n Config: set: - name: \"my-header\"
                                        value: \"bar\" \n Output: GET /foo HTTP/1.1
                                        my-header: bar"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                requestMirror:
                                  description: "RequestMirror defines a schema for
                                    a filter that mirrors requests. Requests are sent
                                    to the specified destination, but responses from
                                    that destination are ignored. \n Support: Extended"
                                  properties:
                                    backendRef:
                                      description: "BackendRef references a resource
                                        where mirrored requests are sent. \n If the
                                        referent cannot be found, this BackendRef
                                        is invalid and must be dropped from the Gateway.
                                        The controller must ensure the \"ResolvedRefs\"
                                        condition on the Route status is set to `status:
                                        False` and not configure this backend in the
                                        underlying implementation. \n If there is
                                        a cross-namespace reference to an *existing*
                                        object that is not allowed by a ReferenceGrant,
                                        the controller must ensure the \"ResolvedRefs\"
                                        \ condition on the Route is set to `status:
                                        False`, with the \"RefNotPermitted\" reason
                                        and not configure this backend in the underlying
                                        implementation. \n In either error case, the
                                        Message of the `ResolvedRefs` Condition should
                                        be used to provide more detail about the problem.
                                        \n Support: Extended for Kubernetes Service
                                        \n Support: Implementation-specific for any
                                        other resource"
                                      properties:
                                        group:
                                          default: ""
                                          description: Group is the group of the referent.
                                            For example, "gateway.networking.k8s.io".
                                            When unspecified or empty string, core
                                            API group is inferred.
                                          maxLength: 253
                                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        kind:
                                          default: Service
                                          description: "Kind is the Kubernetes resource
                                            kind of the referent. For example \"Service\".
                                            \n Defaults to \"Service\" when not specified.
                                            \n ExternalName services can refer to
                                            CNAME DNS records that may live outside
                                            of the cluster and as such are difficult
                                            to reason about in terms of conformance.
                                            They also may not be safe to forward to
                                            (see CVE-2021-25740 for more information).
                                            Implementations SHOULD NOT support ExternalName
                                            Services. \n Support: Core (Services with
                                            a type other than ExternalName) \n Support:
                                            Implementation-specific (Services with
                                            type ExternalName)"
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                          type: string
                                        name:
                                          description: Name is the name of the referent.
                                          maxLength: 253
                                          minLength: 1
                                          type: string
                                        namespace:
                                          description: "Namespace is the namespace
                                            of the backend. When unspecified, the
                                            local namespace is inferred. \n Note that
                                            when a namespace different than the local
                                            namespace is specified, a ReferenceGrant
                                            object is required in the referent namespace
                                            to allow that namespace's owner to accept
                                            the reference. See the ReferenceGrant
                                            documentation for details. \n Support:
                                            Core"
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                        port:
                                          description: Port specifies the destination
                                            port number to use for this resource.
                                            Port is required when the referent is
                                            a Kubernetes Service. In this case, the
                                            port number is the service port number,
                                            not the target port. For other resources,
                                            destination port might be derived from
                                            the referent resource or this field.
                                          format: int32
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                      required:
                                      - name
                                      type: object
                                  required:
                                  - backendRef
                                  type: object
                                requestRedirect:
                                  description: "RequestRedirect defines a schema for
                                    a filter that responds to the request with an
                                    HTTP redirection. \n Support: Core"
                                  properties:
                                    hostname:
                                      description: "Hostname is the hostname to be
                                        used in the value of the `Location` header
                                        in the response. When empty, the hostname
                                        in the `Host` header of the request is used.
                                        \n Support: Core"
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    path:
                                      description: "Path defines parameters used to
                                        modify the path of the incoming request. The
                                        modified path is then used to construct the
                                        `Location` header. When empty, the request
                                        path is used as-is. \n Support: Extended"
                                      properties:
                                        replaceFullPath:
                                          description: ReplaceFullPath specifies the
                                            value with which to replace the full path
                                            of a request during a rewrite or redirect.
                                          maxLength: 1024
                                          type: string
                                        replacePrefixMatch:
                                          description: "ReplacePrefixMatch specifies
                                            the value with which to replace the prefix
                                            match of a request during a rewrite or
                                            redirect. For example, a request to \"/foo/bar\"
                                            with a prefix match of \"/foo\" would
                                            be modified to \"/bar\". \n Note that
                                            this matches the behavior of the PathPrefix
                                            match type. This matches full path elements.
                                            A path element refers to the list of labels
                                            in the path split by the `/` separator.
                                            When specified, a trailing `/` is ignored.
                                            For example, the paths `/abc`, `/abc/`,
                                            and `/abc/def` would all match the prefix
                                            `/abc`, but the path `/abcd` would not."
                                          maxLength: 1024
                                          type: string
                                        type:
                                          description: "Type defines the type of path
                                            modifier. Additional types may be added
                                            in a future release of the API. \n Note
                                            that values may be added to this enum,
                                            implementations must ensure that unknown
                                            values will not cause a crash. \n Unknown
                                            values here must result in the implementation
                                            setting the Accepted Condition for the
                                            Route to `status: False`, with a Reason
                                            of `UnsupportedValue`."
                                          enum:
                                          - ReplaceFullPath
                                          - ReplacePrefixMatch
                                          type: string
                                      required:
                                      - type
                                      type: object
                                    port:
                                      description: "Port is the port to be used in
                                        the value of the `Location` header in the
                                        response. \n If no port is specified, the
                                        redirect port MUST be derived using the following
                                        rules: \n * If redirect scheme is not-empty,
                                        the redirect port MUST be the well-known port
                                        associated with the redirect scheme. Specifically
                                        \"http\" to port 80 and \"https\" to port
                                        443. If the redirect scheme does not have
                                        a well-known port, the listener port of the
                                        Gateway SHOULD be used. * If redirect scheme
                                        is empty, the redirect port MUST be the Gateway
                                        Listener port. \n Implementations SHOULD NOT
                                        add the port number in the 'Location' header
                                        in the following cases: \n * A Location header
                                        that will use HTTP (whether that is determined
                                        via the Listener protocol or the Scheme field)
                                        _and_ use port 80. * A Location header that
                                        will use HTTPS (whether that is determined
                                        via the Listener protocol or the Scheme field)
                                        _and_ use port 443. \n Support: Extended"
                                      format: int32
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                    scheme:
                                      description: "Scheme is the scheme to be used
                                        in the value of the `Location` header in the
                                        response. When empty, the scheme of the request
                                        is used. \n Scheme redirects can affect the
                                        port of the redirect, for more information,
                                        refer to the documentation for the port field
                                        of this filter. \n Note that values may be
                                        added to this enum, implementations must ensure
                                        that unknown values will not cause a crash.
                                        \n Unknown values here must result in the
                                        implementation setting the Accepted Condition
                                        for the Route to `status: False`, with a Reason
                                        of `UnsupportedValue`. \n Support: Extended"
                                      enum:
                                      - http
                                      - https
                                      type: string
                                    statusCode:
                                      default: 302
                                      description: "StatusCode is the HTTP status
                                        code to be used in response. \n Note that
                                        values may be added to this enum, implementations
                                        must ensure that unknown values will not cause
                                        a crash. \n Unknown values here must result
                                        in the implementation setting the Accepted
                                        Condition for the Route to `status: False`,
                                        with a Reason of `UnsupportedValue`. \n Support:
                                        Core"
                                      enum:
                                      - 301
                                      - 302
                                      type: integer
                                  type: object
                                responseHeaderModifier:
                                  description: "ResponseHeaderModifier defines a schema
                                    for a filter that modifies response headers. \n
                                    Support: Extended"
                                  properties:
                                    add:
                                      description: "Add adds the given header(s) (name,
                                        value) to the request before the action. It
                                        appends to any existing values associated
                                        with the header name. \n Input: GET /foo HTTP/1.1
                                        my-header: foo \n Config: add: - name: \"my-header\"
                                        value: \"bar,baz\" \n Output: GET /foo HTTP/1.1
                                        my-header: foo,bar,baz"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: "Remove the given header(s) from
                                        the HTTP request before the action. The value
                                        of Remove is a list of HTTP header names.
                                        Note that the header names are case-insensitive
                                        (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                        \n Input: GET /foo HTTP/1.1 my-header1: foo
                                        my-header2: bar my-header3: baz \n Config:
                                        remove: [\"my-header1\", \"my-header3\"] \n
                                        Output: GET /foo HTTP/1.1 my-header2: bar"
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                    set:
                                      description: "Set overwrites the request with
                                        the given header (name, value) before the
                                        action. \n Input: GET /foo HTTP/1.1 my-header:
                                        foo \n Config: set: - name: \"my-header\"
                                        value: \"bar\" \n Output: GET /foo HTTP/1.1
                                        my-header: bar"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                type:
                                  description: "Type identifies the type of filter
                                    to apply. As with other API fields, types are
                                    classified into three conformance levels: \n -
                                    Core: Filter types and their corresponding configuration
                                    defined by \"Support: Core\" in this package,
                                    e.g. \"RequestHeaderModifier\". All implementations
                                    must support core filters. \n - Extended: Filter
                                    types and their corresponding configuration defined
                                    by \"Support: Extended\" in this package, e.g.
                                    \"RequestMirror\". Implementers are encouraged
                                    to support extended filters. \n - Implementation-specific:
                                    Filters that are defined and supported by specific
                                    vendors. In the future, filters showing convergence
                                    in behavior across multiple implementations will
                                    be considered for inclusion in extended or core
                                    conformance levels. Filter-specific configuration
                                    for such filters is specified using the ExtensionRef
                                    field. `Type` should be set to \"ExtensionRef\"
                                    for custom filters. \n Implementers are encouraged
                                    to define custom implementation types to extend
                                    the core API with implementation-specific behavior.
                                    \n If a reference to a custom filter type cannot
                                    be resolved, the filter MUST NOT be skipped. Instead,
                                    requests that would have been processed by that
                                    filter MUST receive a HTTP error response. \n
                                    Note that values may be added to this enum, implementations
                                    must ensure that unknown values will not cause
                                    a crash. \n Unknown values here must result in
                                    the implementation setting the Accepted Condition
                                    for the Route to `status: False`, with a Reason
                                    of `UnsupportedValue`."
                                  enum:
                                  - RequestHeaderModifier
                                  - ResponseHeaderModifier
                                  - RequestMirror
                                  - RequestRedirect
                                  - URLRewrite
                                  - ExtensionRef
                                  type: string
                                urlRewrite:
                                  description: "URLRewrite defines a schema for a
                                    filter that modifies a request during forwarding.
                                    \n Support: Extended"
                                  properties:
                                    hostname:
                                      description: "Hostname is the value to be used
                                        to replace the Host header value during forwarding.
                                        \n Support: Extended"
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    path:
                                      description: "Path defines a path rewrite. \n
                                        Support: Extended"
                                      properties:
                                        replaceFullPath:
                                          description: ReplaceFullPath specifies the
                                            value with which to replace the full path
                                            of a request during a rewrite or redirect.
                                          maxLength: 1024
                                          type: string
                                        replacePrefixMatch:
                                          description: "ReplacePrefixMatch specifies
                                            the value with which to replace the prefix
                                            match of a request during a rewrite or
                                            redirect. For example, a request to \"/foo/bar\"
                                            with a prefix match of \"/foo\" would
                                            be modified to \"/bar\". \n Note that
                                            this matches the behavior of the PathPrefix
                                            match type. This matches full path elements.
                                            A path element refers to the list of labels
                                            in the path split by the `/` separator.
                                            When specified, a trailing `/` is ignored.
                                            For example, the paths `/abc`, `/abc/`,
                                            and `/abc/def` would all match the prefix
                                            `/abc`, but the path `/abcd` would not."
                                          maxLength: 1024
                                          type: string
                                        type:
                                          description: "Type defines the type of path
                                            modifier. Additional types may be added
                                            in a future release of the API. \n Note
                                            that values may be added to this enum,
                                            implementations must ensure that unknown
                                            values will not cause a crash. \n Unknown
                                            values here must result in the implementation
                                            setting the Accepted Condition for the
                                            Route to `status: False`, with a Reason
                                            of `UnsupportedValue`."
                                          enum:
                                          - ReplaceFullPath
                                          - ReplacePrefixMatch
                                          type: string
                                      required:
                                      - type
                                      type: object
                                  type: object
                              required:
                              - type
                              type: object
                            maxItems: 16
                            type: array
                          group:
                            default: ""
                            description: Group is the group of the referent. For example,
                              "gateway.networking.k8s.io". When unspecified or empty
                              string, core API group is inferred.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Service
                            description: "Kind is the Kubernetes resource kind of
                              the referent. For example \"Service\". \n Defaults to
                              \"Service\" when not specified. \n ExternalName services
                              can refer to CNAME DNS records that may live outside
                              of the cluster and as such are difficult to reason about
                              in terms of conformance. They also may not be safe to
                              forward to (see CVE-2021-25740 for more information).
                              Implementations SHOULD NOT support ExternalName Services.
                              \n Support: Core (Services with a type other than ExternalName)
                              \n Support: Implementation-specific (Services with type
                              ExternalName)"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the referent.
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: "Namespace is the namespace of the backend.
                              When unspecified, the local namespace is inferred. \n
                              Note that when a namespace different than the local
                              namespace is specified, a ReferenceGrant object is required
                              in the referent namespace to allow that namespace's
                              owner to accept the reference. See the ReferenceGrant
                              documentation for details. \n Support: Core"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: Port specifies the destination port number
                              to use for this resource. Port is required when the
                              referent is a Kubernetes Service. In this case, the
                              port number is the service port number, not the target
                              port. For other resources, destination port might be
                              derived from the referent resource or this field.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          weight:
                            default: 1
                            description: "Weight specifies the proportion of requests
                              forwarded to the referenced backend. This is computed
                              as weight/(sum of all weights in this BackendRefs list).
                              For non-zero values, there may be some epsilon from
                              the exact proportion defined here depending on the precision
                              an implementation supports. Weight is not a percentage
                              and the sum of weights does not need to equal 100. \n
                              If only one backend is specified and it has a weight
                              greater than 0, 100% of the traffic is forwarded to
                              that backend. If weight is set to 0, no traffic should
                              be forwarded for this entry. If unspecified, weight
                              defaults to 1. \n Support for this field varies based
                              on the context where used."
                            format: int32
                            maximum: 1000000
                            minimum: 0
                            type: integer
                        required:
                        - name
                        type: object
                      maxItems: 16
                      type: array
                    filters:
                      description: "Filters define the filters that are applied to
                        requests that match this rule. \n The effects of ordering
                        of multiple behaviors are currently unspecified. This can
                        change in the future based on feedback during the alpha stage.
                        \n Conformance-levels at this level are defined based on the
                        type of filter: \n - ALL core filters MUST be supported by
                        all implementations. - Implementers are encouraged to support
                        extended filters. - Implementation-specific custom filters
                        have no API guarantees across implementations. \n Specifying
                        a core filter multiple times has unspecified or implementation-specific
                        conformance. \n All filters are expected to be compatible
                        with each other except for the URLRewrite and RequestRedirect
                        filters, which may not be combined. If an implementation can
                        not support other combinations of filters, they must clearly
                        document that limitation. In all cases where incompatible
                        or unsupported filters are specified, implementations MUST
                        add a warning condition to status. \n Support: Core"
                      items:
                        description: HTTPRouteFilter defines processing steps that
                          must be completed during the request or response lifecycle.
                          HTTPRouteFilters are meant as an extension point to express
                          processing that may be done in Gateway implementations.
                          Some examples include request or response modification,
                          implementing authentication strategies, rate-limiting, and
                          traffic shaping. API guarantee/conformance is defined based
                          on the type of the filter.
                        properties:
                          extensionRef:
                            description: "ExtensionRef is an optional, implementation-specific
                              extension to the \"filter\" behavior.  For example,
                              resource \"myroutefilter\" in group \"networking.example.net\").
                              ExtensionRef MUST NOT be used for core and extended
                              filters. \n Support: Implementation-specific"
                            properties:
                              group:
                                description: Group is the group of the referent. For
                                  example, "gateway.networking.k8s.io". When unspecified
                                  or empty string, core API group is inferred.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                description: Kind is kind of the referent. For example
                                  "HTTPRoute" or "Service".
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                            required:
                            - group
                            - kind
                            - name
                            type: object
                          requestHeaderModifier:
                            description: "RequestHeaderModifier defines a schema for
                              a filter that modifies request headers. \n Support:
                              Core"
                            properties:
                              add:
                                description: "Add adds the given header(s) (name,
                                  value) to the request before the action. It appends
                                  to any existing values associated with the header
                                  name. \n Input: GET /foo HTTP/1.1 my-header: foo
                                  \n Config: add: - name: \"my-header\" value: \"bar,baz\"
                                  \n Output: GET /foo HTTP/1.1 my-header: foo,bar,baz"
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: "Name is the name of the HTTP Header
                                        to be matched. Name matching MUST be case
                                        insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                        \n If multiple entries specify equivalent
                                        header names, the first entry with an equivalent
                                        name MUST be considered for a match. Subsequent
                                        entries with an equivalent header name MUST
                                        be ignored. Due to the case-insensitivity
                                        of header names, \"foo\" and \"Foo\" are considered
                                        equivalent."
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: "Remove the given header(s) from the
                                  HTTP request before the action. The value of Remove
                                  is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                  \n Input: GET /foo HTTP/1.1 my-header1: foo my-header2:
                                  bar my-header3: baz \n Config: remove: [\"my-header1\",
                                  \"my-header3\"] \n Output: GET /foo HTTP/1.1 my-header2:
                                  bar"
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                              set:
                                description: "Set overwrites the request with the
                                  given header (name, value) before the action. \n
                                  Input: GET /foo HTTP/1.1 my-header: foo \n Config:
                                  set: - name: \"my-header\" value: \"bar\" \n Output:
                                  GET /foo HTTP/1.1 my-header: bar"
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: "Name is the name of the HTTP Header
                                        to be matched. Name matching MUST be case
                                        insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                        \n If multiple entries specify equivalent
                                        header names, the first entry with an equivalent
                                        name MUST be considered for a match. Subsequent
                                        entries with an equivalent header name MUST
                                        be ignored. Due to the case-insensitivity
                                        of header names, \"foo\" and \"Foo\" are considered
                                        equivalent."
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          requestMirror:
                            description: "RequestMirror defines a schema for a filter
                              that mirrors requests. Requests are sent to the specified
                              destination, but responses from that destination are
                              ignored. \n Support: Extended"
                            properties:
                              backendRef:
                                description: "BackendRef references a resource where
                                  mirrored requests are sent. \n If the referent cannot
                                  be found, this BackendRef is invalid and must be
                                  dropped from the Gateway. The controller must ensure
                                  the \"ResolvedRefs\" condition on the Route status
                                  is set to `status: False` and not configure this
                                  backend in the underlying implementation. \n If
                                  there is a cross-namespace reference to an *existing*
                                  object that is not allowed by a ReferenceGrant,
                                  the controller must ensure the \"ResolvedRefs\"
                                  \ condition on the Route is set to `status: False`,
                                  with the \"RefNotPermitted\" reason and not configure
                                  this backend in the underlying implementation. \n
                                  In either error case, the Message of the `ResolvedRefs`
                                  Condition should be used to provide more detail
                                  about the problem. \n Support: Extended for Kubernetes
                                  Service \n Support: Implementation-specific for
                                  any other resource"
                                properties:
                                  group:
                                    default: ""
                                    description: Group is the group of the referent.
                                      For example, "gateway.networking.k8s.io". When
                                      unspecified or empty string, core API group
                                      is inferred.
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  kind:
                                    default: Service
                                    description: "Kind is the Kubernetes resource
                                      kind of the referent. For example \"Service\".
                                      \n Defaults to \"Service\" when not specified.
                                      \n ExternalName services can refer to CNAME
                                      DNS records that may live outside of the cluster
                                      and as such are difficult to reason about in
                                      terms of conformance. They also may not be safe
                                      to forward to (see CVE-2021-25740 for more information).
                                      Implementations SHOULD NOT support ExternalName
                                      Services. \n Support: Core (Services with a
                                      type other than ExternalName) \n Support: Implementation-specific
                                      (Services with type ExternalName)"
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: Name is the name of the referent.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  namespace:
                                    description: "Namespace is the namespace of the
                                      backend. When unspecified, the local namespace
                                      is inferred. \n Note that when a namespace different
                                      than the local namespace is specified, a ReferenceGrant
                                      object is required in the referent namespace
                                      to allow that namespace's owner to accept the
                                      reference. See the ReferenceGrant documentation
                                      for details. \n Support: Core"
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                  port:
                                    description: Port specifies the destination port
                                      number to use for this resource. Port is required
                                      when the referent is a Kubernetes Service. In
                                      this case, the port number is the service port
                                      number, not the target port. For other resources,
                                      destination port might be derived from the referent
                                      resource or this field.
                                    format: int32
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                required:
                                - name
                                type: object
                            required:
                            - backendRef
                            type: object
                          requestRedirect:
                            description: "RequestRedirect defines a schema for a filter
                              that responds to the request with an HTTP redirection.
                              \n Support: Core"
                            properties:
                              hostname:
                                description: "Hostname is the hostname to be used
                                  in the value of the `Location` header in the response.
                                  When empty, the hostname in the `Host` header of
                                  the request is used. \n Support: Core"
                                maxLength: 253
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              path:
                                description: "Path defines parameters used to modify
                                  the path of the incoming request. The modified path
                                  is then used to construct the `Location` header.
                                  When empty, the request path is used as-is. \n Support:
                                  Extended"
                                properties:
                                  replaceFullPath:
                                    description: ReplaceFullPath specifies the value
                                      with which to replace the full path of a request
                                      during a rewrite or redirect.
                                    maxLength: 1024
                                    type: string
                                  replacePrefixMatch:
                                    description: "ReplacePrefixMatch specifies the
                                      value with which to replace the prefix match
                                      of a request during a rewrite or redirect. For
                                      example, a request to \"/foo/bar\" with a prefix
                                      match of \"/foo\" would be modified to \"/bar\".
                                      \n Note that this matches the behavior of the
                                      PathPrefix match type. This matches full path
                                      elements. A path element refers to the list
                                      of labels in the path split by the `/` separator.
                                      When specified, a trailing `/` is ignored. For
                                      example, the paths `/abc`, `/abc/`, and `/abc/def`
                                      would all match the prefix `/abc`, but the path
                                      `/abcd` would not."
                                    maxLength: 1024
                                    type: string
                                  type:
                                    description: "Type defines the type of path modifier.
                                      Additional types may be added in a future release
                                      of the API. \n Note that values may be added
                                      to this enum, implementations must ensure that
                                      unknown values will not cause a crash. \n Unknown
                                      values here must result in the implementation
                                      setting the Accepted Condition for the Route
                                      to `status: False`, with a Reason of `UnsupportedValue`."
                                    enum:
                                    - ReplaceFullPath
                                    - ReplacePrefixMatch
                                    type: string
                                required:
                                - type
                                type: object
                              port:
                                description: "Port is the port to be used in the value
                                  of the `Location` header in the response. \n If
                                  no port is specified, the redirect port MUST be
                                  derived using the following rules: \n * If redirect
                                  scheme is not-empty, the redirect port MUST be the
                                  well-known port associated with the redirect scheme.
                                  Specifically \"http\" to port 80 and \"https\" to
                                  port 443. If the redirect scheme does not have a
                                  well-known port, the listener port of the Gateway
                                  SHOULD be used. * If redirect scheme is empty, the
                                  redirect port MUST be the Gateway Listener port.
                                  \n Implementations SHOULD NOT add the port number
                                  in the 'Location' header in the following cases:
                                  \n * A Location header that will use HTTP (whether
                                  that is determined via the Listener protocol or
                                  the Scheme field) _and_ use port 80. * A Location
                                  header that will use HTTPS (whether that is determined
                                  via the Listener protocol or the Scheme field) _and_
                                  use port 443. \n Support: Extended"
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              scheme:
                                description: "Scheme is the scheme to be used in the
                                  value of the `Location` header in the response.
                                  When empty, the scheme of the request is used. \n
                                  Scheme redirects can affect the port of the redirect,
                                  for more information, refer to the documentation
                                  for the port field of this filter. \n Note that
                                  values may be added to this enum, implementations
                                  must ensure that unknown values will not cause a
                                  crash. \n Unknown values here must result in the
                                  implementation setting the Accepted Condition for
                                  the Route to `status: False`, with a Reason of `UnsupportedValue`.
                                  \n Support: Extended"
                                enum:
                                - http
                                - https
                                type: string
                              statusCode:
                                default: 302
                                description: "StatusCode is the HTTP status code to
                                  be used in response. \n Note that values may be
                                  added to this enum, implementations must ensure
                                  that unknown values will not cause a crash. \n Unknown
                                  values here must result in the implementation setting
                                  the Accepted Condition for the Route to `status:
                                  False`, with a Reason of `UnsupportedValue`. \n
                                  Support: Core"
                                enum:
                                - 301
                                - 302
                                type: integer
                            type: object
                          responseHeaderModifier:
                            description: "ResponseHeaderModifier defines a schema
                              for a filter that modifies response headers. \n Support:
                              Extended"
                            properties:
                              add:
                                description: "Add adds the given header(s) (name,
                                  value) to the request before the action. It appends
                                  to any existing values associated with the header
                                  name. \n Input: GET /foo HTTP/1.1 my-header: foo
                                  \n Config: add: - name: \"my-header\" value: \"bar,baz\"
                                  \n Output: GET /foo HTTP/1.1 my-header: foo,bar,baz"
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: "Name is the name of the HTTP Header
                                        to be matched. Name matching MUST be case
                                        insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                        \n If multiple entries specify equivalent
                                        header names, the first entry with an equivalent
                                        name MUST be considered for a match. Subsequent
                                        entries with an equivalent header name MUST
                                        be ignored. Due to the case-insensitivity
                                        of header names, \"foo\" and \"Foo\" are considered
                                        equivalent."
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: "Remove the given header(s) from the
                                  HTTP request before the action. The value of Remove
                                  is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                  \n Input: GET /foo HTTP/1.1 my-header1: foo my-header2:
                                  bar my-header3: baz \n Config: remove: [\"my-header1\",
                                  \"my-header3\"] \n Output: GET /foo HTTP/1.1 my-header2:
                                  bar"
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                              set:
                                description: "Set overwrites the request with the
                                  given header (name, value) before the action. \n
                                  Input: GET /foo HTTP/1.1 my-header: foo \n Config:
                                  set: - name: \"my-header\" value: \"bar\" \n Output:
                                  GET /foo HTTP/1.1 my-header: bar"
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: "Name is the name of the HTTP Header
                                        to be matched. Name matching MUST be case
                                        insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                        \n If multiple entries specify equivalent
                                        header names, the first entry with an equivalent
                                        name MUST be considered for a match. Subsequent
                                        entries with an equivalent header name MUST
                                        be ignored. Due to the case-insensitivity
                                        of header names, \"foo\" and \"Foo\" are considered
                                        equivalent."
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          type:
                            description: "Type identifies the type of filter to apply.
                              As with other API fields, types are classified into
                              three conformance levels: \n - Core: Filter types and
                              their corresponding configuration defined by \"Support:
                              Core\" in this package, e.g. \"RequestHeaderModifier\".
                              All implementations must support core filters. \n -
                              Extended: Filter types and their corresponding configuration
                              defined by \"Support: Extended\" in this package, e.g.
                              \"RequestMirror\". Implementers are encouraged to support
                              extended filters. \n - Implementation-specific: Filters
                              that are defined and supported by specific vendors.
                              In the future, filters showing convergence in behavior
                              across multiple implementations will be considered for
                              inclusion in extended or core conformance levels. Filter-specific
                              configuration for such filters is specified using the
                              ExtensionRef field. `Type` should be set to \"ExtensionRef\"
                              for custom filters. \n Implementers are encouraged to
                              define custom implementation types to extend the core
                              API with implementation-specific behavior. \n If a reference
                              to a custom filter type cannot be resolved, the filter
                              MUST NOT be skipped. Instead, requests that would have
                              been processed by that filter MUST receive a HTTP error
                              response. \n Note that values may be added to this enum,
                              implementations must ensure that unknown values will
                              not cause a crash. \n Unknown values here must result
                              in the implementation setting the Accepted Condition
                              for the Route to `status: False`, with a Reason of `UnsupportedValue`."
                            enum:
                            - RequestHeaderModifier
                            - ResponseHeaderModifier
                            - RequestMirror
                            - RequestRedirect
                            - URLRewrite
                            - ExtensionRef
                            type: string
                          urlRewrite:
                            description: "URLRewrite defines a schema for a filter
                              that modifies a request during forwarding. \n Support:
                              Extended"
                            properties:
                              hostname:
                                description: "Hostname is the value to be used to
                                  replace the Host header value during forwarding.
                                  \n Support: Extended"
                                maxLength: 253
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              path:
                                description: "Path defines a path rewrite. \n Support:
                                  Extended"
                                properties:
                                  replaceFullPath:
                                    description: ReplaceFullPath specifies the value
                                      with which to replace the full path of a request
                                      during a rewrite or redirect.
                                    maxLength: 1024
                                    type: string
                                  replacePrefixMatch:
                                    description: "ReplacePrefixMatch specifies the
                                      value with which to replace the prefix match
                                      of a request during a rewrite or redirect. For
                                      example, a request to \"/foo/bar\" with a prefix
                                      match of \"/foo\" would be modified to \"/bar\".
                                      \n Note that this matches the behavior of the
                                      PathPrefix match type. This matches full path
                                      elements. A path element refers to the list
                                      of labels in the path split by the `/` separator.
                                      When specified, a trailing `/` is ignored. For
                                      example, the paths `/abc`, `/abc/`, and `/abc/def`
                                      would all match the prefix `/abc`, but the path
                                      `/abcd` would not."
                                    maxLength: 1024
                                    type: string
                                  type:
                                    description: "Type defines the type of path modifier.
                                      Additional types may be added in a future release
                                      of the API. \n Note that values may be added
                                      to this enum, implementations must ensure that
                                      unknown values will not cause a crash. \n Unknown
                                      values here must result in the implementation
                                      setting the Accepted Condition for the Route
                                      to `status: False`, with a Reason of `UnsupportedValue`."
                                    enum:
                                    - ReplaceFullPath
                                    - ReplacePrefixMatch
                                    type: string
                                required:
                                - type
                                type: object
                            type: object
                        required:
                        - type
                        type: object
                      maxItems: 16
                      type: array
                    matches:
                      default:
                      - path:
                          type: PathPrefix
                          value: /
                      description: "Matches define conditions used for matching the
                        rule against incoming HTTP requests. Each match is independent,
                        i.e. this rule will be matched if **any** one of the matches
                        is satisfied. \n For example, take the following matches configuration:
                        \n ``` matches: - path: value: \"/foo\" headers: - name: \"version\"
                        value: \"v2\" - path: value: \"/v2/foo\" ``` \n For a request
                        to match against this rule, a request must satisfy EITHER
                        of the two conditions: \n - path prefixed with `/foo` AND
                        contains the header `version: v2` - path prefix of `/v2/foo`
                        \n See the documentation for HTTPRouteMatch on how to specify
                        multiple match conditions that should be ANDed together. \n
                        If no matches are specified, the default is a prefix path
                        match on \"/\", which has the effect of matching every HTTP
                        request. \n Proxy or Load Balancer routing configuration generated
                        from HTTPRoutes MUST prioritize matches based on the following
                        criteria, continuing on ties. Across all rules specified on
                        applicable Routes, precedence must be given to the match having:
                        \n * \"Exact\" path match. * \"Prefix\" path match with largest
                        number of characters. * Method match. * Largest number of
                        header matches. * Largest number of query param matches. \n
                        Note: The precedence of RegularExpression path matches are
                        implementation-specific. \n If ties still exist across multiple
                        Routes, matching precedence MUST be determined in order of
                        the following criteria, continuing on ties: \n * The oldest
                        Route based on creation timestamp. * The Route appearing first
                        in alphabetical order by \"{namespace}/{name}\". \n If ties
                        still exist within an HTTPRoute, matching precedence MUST
                        be granted to the FIRST matching rule (in list order) with
                        a match meeting the above criteria. \n When no rules matching
                        a request have been successfully attached to the parent a
                        request is coming from, a HTTP 404 status code MUST be returned."
                      items:
                        description: "HTTPRouteMatch defines the predicate used to
                          match requests to a given action. Multiple match types are
                          ANDed together, i.e. the match will evaluate to true only
                          if all conditions are satisfied. \n For example, the match
                          below will match a HTTP request only if its path starts
                          with `/foo` AND it contains the `version: v1` header: \n
                          ``` match: \n path: value: \"/foo\" headers: - name: \"version\"
                          value \"v1\" \n ```"
                        properties:
                          headers:
                            description: Headers specifies HTTP request header matchers.
                              Multiple match values are ANDed together, meaning, a
                              request must match all the specified headers to select
                              the route.
                            items:
                              description: HTTPHeaderMatch describes how to select
                                a HTTP route by matching HTTP request headers.
                              properties:
                                name:
                                  description: "Name is the name of the HTTP Header
                                    to be matched. Name matching MUST be case insensitive.
                                    (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                    \n If multiple entries specify equivalent header
                                    names, only the first entry with an equivalent
                                    name MUST be considered for a match. Subsequent
                                    entries with an equivalent header name MUST be
                                    ignored. Due to the case-insensitivity of header
                                    names, \"foo\" and \"Foo\" are considered equivalent.
                                    \n When a header is repeated in an HTTP request,
                                    it is implementation-specific behavior as to how
                                    this is represented. Generally, proxies should
                                    follow the guidance from the RFC: https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2
                                    regarding processing a repeated header, with special
                                    handling for \"Set-Cookie\"."
                                  maxLength: 256
                                  minLength: 1
                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  type: string
                                type:
                                  default: Exact
                                  description: "Type specifies how to match against
                                    the value of the header. \n Support: Core (Exact)
                                    \n Support: Implementation-specific (RegularExpression)
                                    \n Since RegularExpression HeaderMatchType has
                                    implementation-specific conformance, implementations
                                    can support POSIX, PCRE or any other dialects
                                    of regular expressions. Please read the implementation's
                                    documentation to determine the supported dialect."
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of HTTP Header to
                                    be matched.
                                  maxLength: 4096
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          method:
                            description: "Method specifies HTTP method matcher. When
                              specified, this route will be matched only if the request
                              has the specified method. \n Support: Extended"
                            enum:
                            - GET
                            - HEAD
                            - POST
                            - PUT
                            - DELETE
                            - CONNECT
                            - OPTIONS
                            - TRACE
                            - PATCH
                            type: string
                          path:
                            default:
                              type: PathPrefix
                              value: /
                            description: Path specifies a HTTP request path matcher.
                              If this field is not specified, a default prefix match
                              on the "/" path is provided.
                            properties:
                              type:
                                default: PathPrefix
                                description: "Type specifies how to match against
                                  the path Value. \n Support: Core (Exact, PathPrefix)
                                  \n Support: Implementation-specific (RegularExpression)"
                                enum:
                                - Exact
                                - PathPrefix
                                - RegularExpression
                                type: string
                              value:
                                default: /
                                description: Value of the HTTP path to match against.
                                maxLength: 1024
                                type: string
                            type: object
                          queryParams:
                            description: "QueryParams specifies HTTP query parameter
                              matchers. Multiple match values are ANDed together,
                              meaning, a request must match all the specified query
                              parameters to select the route. \n Support: Extended"
                            items:
                              description: HTTPQueryParamMatch describes how to select
                                a HTTP route by matching HTTP query parameters.
                              properties:
                                name:
                                  description: "Name is the name of the HTTP query
                                    param to be matched. This must be an exact string
                                    match. (See https://tools.ietf.org/html/rfc7230#section-2.7.3).
                                    \n If multiple entries specify equivalent query
                                    param names, only the first entry with an equivalent
                                    name MUST be considered for a match. Subsequent
                                    entries with an equivalent query param name MUST
                                    be ignored. \n If a query param is repeated in
                                    an HTTP request, the behavior is purposely left
                                    undefined, since different data planes have different
                                    capabilities. However, it is *recommended* that
                                    implementations should match against the first
                                    value of the param if the data plane supports
                                    it, as this behavior is expected in other load
                                    balancing contexts outside of the Gateway API.
                                    \n Users SHOULD NOT route traffic based on repeated
                                    query params to guard themselves against potential
                                    differences in the implementations."
                                  maxLength: 256
                                  minLength: 1
                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  type: string
                                type:
                                  default: Exact
                                  description: "Type specifies how to match against
                                    the value of the query parameter. \n Support:
                                    Extended (Exact) \n Support: Implementation-specific
                                    (RegularExpression) \n Since RegularExpression
                                    QueryParamMatchType has Implementation-specific
                                    conformance, implementations can support POSIX,
                                    PCRE or any other dialects of regular expressions.
                                    Please read the implementation's documentation
                                    to determine the supported dialect."
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of HTTP query param
                                    to be matched.
                                  maxLength: 1024
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                        type: object
                      maxItems: 8
                      type: array
                  type: object
                maxItems: 16
                type: array
            type: object
          status:
            description: Status defines the current state of HTTPRoute.
            properties:
              parents:
                description: "Parents is a list of parent resources (usually Gateways)
                  that are associated with the route, and the status of the route
                  with respect to each parent. When this route attaches to a parent,
                  the controller that manages the parent must add an entry to this
                  list when the controller first sees the route and should update
                  the entry as appropriate when the route or gateway is modified.
                  \n Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this
                  API can only populate Route status for the Gateways/parent resources
                  they are responsible for. \n A maximum of 32 Gateways will be represented
                  in this list. An empty list means the route has not been attached
                  to any Gateway."
                items:
                  description: RouteParentStatus describes the status of a route with
                    respect to an associated Parent.
                  properties:
                    conditions:
                      description: "Conditions describes the status of the route with
                        respect to the Gateway. Note that the route's availability
                        is also subject to the Gateway's own status conditions and
                        listener status. \n If the Route's ParentRef specifies an
                        existing Gateway that supports Routes of this kind AND that
                        Gateway's controller has sufficient access, then that Gateway's
                        controller MUST set the \"Accepted\" condition on the Route,
                        to indicate whether the route has been accepted or rejected
                        by the Gateway, and why. \n A Route MUST be considered \"Accepted\"
                        if at least one of the Route's rules is implemented by the
                        Gateway. \n There are a number of cases where the \"Accepted\"
                        condition may not be set due to lack of controller visibility,
                        that includes when: \n * The Route refers to a non-existent
                        parent. * The Route is of a type that the controller does
                        not support. * The Route is in a namespace the controller
                        does not have access to."
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource. --- This struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example, \n type FooStatus struct{
                          // Represents the observations of a foo's current state.
                          // Known .status.conditions.type are: \"Available\", \"Progressing\",
                          and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                          // +listType=map // +listMapKey=type Conditions []metav1.Condition
                          `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                          protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields
                          }"
                        properties:
                          lastTransitionTime:
                            description: lastTransitionTime is the last time the condition
                              transitioned from one status to another. This should
                              be when the underlying condition changed.  If that is
                              not known, then using the time when the API field changed
                              is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: message is a human readable message indicating
                              details about the transition. This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: observedGeneration represents the .metadata.generation
                              that the condition was set based upon. For instance,
                              if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                              is 9, the condition is out of date with respect to the
                              current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. The value should
                              be a CamelCase string. This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                              --- Many .condition.type values are consistent across
                              resources like Available, but because arbitrary conditions
                              can be useful (see .node.status.conditions), the ability
                              to deconflict is important. The regex it matches is
                              (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: "ControllerName is a domain/path string that indicates
                        the name of the controller that wrote this status. This corresponds
                        with the controllerName field on GatewayClass. \n Example:
                        \"example.net/gateway-controller\". \n The format of this
                        field is DOMAIN \"/\" PATH, where DOMAIN and PATH are valid
                        Kubernetes names (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                        \n Controllers MUST populate this field when writing status.
                        Controllers should ensure that entries to status populated
                        with their ControllerName are cleaned up when they are no
                        longer necessary."
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: ParentRef corresponds with a ParentRef in the spec
                        that this RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: "Group is the group of the referent. When unspecified,
                            \"gateway.networking.k8s.io\" is inferred. To set the
                            core API group (such as for a \"Service\" kind referent),
                            Group must be explicitly set to \"\" (empty string). \n
                            Support: Core"
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: "Kind is kind of the referent. \n Support:
                            Core (Gateway) \n Support: Implementation-specific (Other
                            Resources)"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: "Name is the name of the referent. \n Support:
                            Core"
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: "Namespace is the namespace of the referent.
                            When unspecified, this refers to the local namespace of
                            the Route. \n Note that there are specific rules for ParentRefs
                            which cross namespace boundaries. Cross-namespace references
                            are only valid if they are explicitly allowed by something
                            in the namespace they are referring to. For example: Gateway
                            has the AllowedRoutes field, and ReferenceGrant provides
                            a generic way to enable any other kind of cross-namespace
                            reference. \n Support: Core"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: "Port is the network port this Route targets.
                            It can be interpreted differently based on the type of
                            parent resource. \n When the parent resource is a Gateway,
                            this targets all listeners listening on the specified
                            port that also support this kind of Route(and select this
                            Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to
                            a specific port as opposed to a listener(s) whose port(s)
                            may be changed. When both Port and SectionName are specified,
                            the name and port of the selected listener must match
                            both specified values. \n Implementations MAY choose to
                            support other parent resources. Implementations supporting
                            other types of parent resources MUST clearly document
                            how/if Port is interpreted. \n For the purpose of status,
                            an attachment is considered successful as long as the
                            parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them
                            by Route kind, namespace, or hostname. If 1 of 2 Gateway
                            listeners accept attachment from the referencing Route,
                            the Route MUST be considered successfully attached. If
                            no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.
                            \n Support: Extended \n <gateway:experimental>"
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: "SectionName is the name of a section within
                            the target resource. In the following resources, SectionName
                            is interpreted as the following: \n * Gateway: Listener
                            Name. When both Port (experimental) and SectionName are
                            specified, the name and port of the selected listener
                            must match both specified values. \n Implementations MAY
                            choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName
                            is interpreted. \n When unspecified (empty string), this
                            will reference the entire resource. For the purpose of
                            status, an attachment is considered successful if at least
                            one section in the parent resource accepts it. For example,
                            Gateway listeners can restrict which Routes can attach
                            to them by Route kind, namespace, or hostname. If 1 of
                            2 Gateway listeners accept attachment from the referencing
                            Route, the Route MUST be considered successfully attached.
                            If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.
                            \n Support: Core"
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .spec.hostnames
      name: Hostnames
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: HTTPRoute provides a way to route HTTP requests. This includes
          the capability to match requests by hostname, path, header, or query param.
          Filters can be used to specify additional processing steps. Backends specify
          where matching requests should be routed.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of HTTPRoute.
            properties:
              hostnames:
                description: "Hostnames defines a set of hostname that should match
                  against the HTTP Host header to select a HTTPRoute used to process
                  the request. Implementations MUST ignore any port value specified
                  in the HTTP Host header while performing a match. \n Valid values
                  for Hostnames are determined by RFC 1123 definition of a hostname
                  with 2 notable exceptions: \n 1. IPs are not allowed. 2. A hostname
                  may be prefixed with a wildcard label (`*.`). The wildcard label
                  must appear by itself as the first label. \n If a hostname is specified
                  by both the Listener and HTTPRoute, there must be at least one intersecting
                  hostname for the HTTPRoute to be attached to the Listener. For example:
                  \n * A Listener with `test.example.com` as the hostname matches
                  HTTPRoutes that have either not specified any hostnames, or have
                  specified at least one of `test.example.com` or `*.example.com`.
                  * A Listener with `*.example.com` as the hostname matches HTTPRoutes
                  that have either not specified any hostnames or have specified at
                  least one hostname that matches the Listener hostname. For example,
                  `*.example.com`, `test.example.com`, and `foo.test.example.com`
                  would all match. On the other hand, `example.com` and `test.example.net`
                  would not match. \n Hostnames that are prefixed with a wildcard
                  label (`*.`) are interpreted as a suffix match. That means that
                  a match for `*.example.com` would match both `test.example.com`,
                  and `foo.test.example.com`, but not `example.com`. \n If both the
                  Listener and HTTPRoute have specified hostnames, any HTTPRoute hostnames
                  that do not match the Listener hostname MUST be ignored. For example,
                  if a Listener specified `*.example.com`, and the HTTPRoute specified
                  `test.example.com` and `test.example.net`, `test.example.net` must
                  not be considered for a match. \n If both the Listener and HTTPRoute
                  have specified hostnames, and none match with the criteria above,
                  then the HTTPRoute is not accepted. The implementation must raise
                  an 'Accepted' Condition with a status of `False` in the corresponding
                  RouteParentStatus. \n In the event that multiple HTTPRoutes specify
                  intersecting hostnames (e.g. overlapping wildcard matching and exact
                  matching hostnames), precedence must be given to rules from the
                  HTTPRoute with the largest number of: \n * Characters in a matching
                  non-wildcard hostname. * Characters in a matching hostname. \n If
                  ties exist across multiple Routes, the matching precedence rules
                  for HTTPRouteMatches takes over. \n Support: Core"
                items:
                  description: "Hostname is the fully qualified domain name of a network
                    host. This matches the RFC 1123 definition of a hostname with
                    2 notable exceptions: \n 1. IPs are not allowed. 2. A hostname
                    may be prefixed with a wildcard label (`*.`). The wildcard label
                    must appear by itself as the first label. \n Hostname can be \"precise\"
                    which is a domain name without the terminating dot of a network
                    host (e.g. \"foo.example.com\") or \"wildcard\", which is a domain
                    name prefixed with a single wildcard label (e.g. `*.example.com`).
                    \n Note that as per RFC1035 and RFC1123, a *label* must consist
                    of lower case alphanumeric characters or '-', and must start and
                    end with an alphanumeric character. No other punctuation is allowed."
                  maxLength: 253
                  minLength: 1
                  pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                maxItems: 16
                type: array
              parentRefs:
                description: "ParentRefs references the resources (usually Gateways)
                  that a Route wants to be attached to. Note that the referenced parent
                  resource needs to allow this for the attachment to be complete.
                  For Gateways, that means the Gateway needs to allow attachment from
                  Routes of this kind and namespace. \n The only kind of parent resource
                  with \"Core\" support is Gateway. This API may be extended in the
                  future to support additional kinds of parent resources such as one
                  of the route kinds. \n It is invalid to reference an identical parent
                  more than once. It is valid to reference multiple distinct sections
                  within the same parent resource, such as 2 Listeners within a Gateway.
                  \n It is possible to separately reference multiple distinct objects
                  that may be collapsed by an implementation. For example, some implementations
                  may choose to merge compatible Gateway Listeners together. If that
                  is the case, the list of routes attached to those resources should
                  also be merged. \n Note that for ParentRefs that cross namespace
                  boundaries, there are specific rules. Cross-namespace references
                  are only valid if they are explicitly allowed by something in the
                  namespace they are referring to. For example, Gateway has the AllowedRoutes
                  field, and ReferenceGrant provides a generic way to enable any other
                  kind of cross-namespace reference."
                items:
                  description: "ParentReference identifies an API object (usually
                    a Gateway) that can be considered a parent of this resource (usually
                    a route). The only kind of parent resource with \"Core\" support
                    is Gateway. This API may be extended in the future to support
                    additional kinds of parent resources, such as HTTPRoute. \n The
                    API object must be valid in the cluster; the Group and Kind must
                    be registered in the cluster for this reference to be valid."
                  properties:
                    group:
                      default: gateway.networking.k8s.io
                      description: "Group is the group of the referent. When unspecified,
                        \"gateway.networking.k8s.io\" is inferred. To set the core
                        API group (such as for a \"Service\" kind referent), Group
                        must be explicitly set to \"\" (empty string). \n Support:
                        Core"
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: "Kind is kind of the referent. \n Support: Core
                        (Gateway) \n Support: Implementation-specific (Other Resources)"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: "Name is the name of the referent. \n Support:
                        Core"
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: "Namespace is the namespace of the referent. When
                        unspecified, this refers to the local namespace of the Route.
                        \n Note that there are specific rules for ParentRefs which
                        cross namespace boundaries. Cross-namespace references are
                        only valid if they are explicitly allowed by something in
                        the namespace they are referring to. For example: Gateway
                        has the AllowedRoutes field, and ReferenceGrant provides a
                        generic way to enable any other kind of cross-namespace reference.
                        \n Support: Core"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    port:
                      description: "Port is the network port this Route targets. It
                        can be interpreted differently based on the type of parent
                        resource. \n When the parent resource is a Gateway, this targets
                        all listeners listening on the specified port that also support
                        this kind of Route(and select this Route). It's not recommended
                        to set `Port` unless the networking behaviors specified in
                        a Route must apply to a specific port as opposed to a listener(s)
                        whose port(s) may be changed. When both Port and SectionName
                        are specified, the name and port of the selected listener
                        must match both specified values. \n Implementations MAY choose
                        to support other parent resources. Implementations supporting
                        other types of parent resources MUST clearly document how/if
                        Port is interpreted. \n For the purpose of status, an attachment
                        is considered successful as long as the parent resource accepts
                        it partially. For example, Gateway listeners can restrict
                        which Routes can attach to them by Route kind, namespace,
                        or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this
                        Route, the Route MUST be considered detached from the Gateway.
                        \n Support: Extended \n <gateway:experimental>"
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    sectionName:
                      description: "SectionName is the name of a section within the
                        target resource. In the following resources, SectionName is
                        interpreted as the following: \n * Gateway: Listener Name.
                        When both Port (experimental) and SectionName are specified,
                        the name and port of the selected listener must match both
                        specified values. \n Implementations MAY choose to support
                        attaching Routes to other resources. If that is the case,
                        they MUST clearly document how SectionName is interpreted.
                        \n When unspecified (empty string), this will reference the
                        entire resource. For the purpose of status, an attachment
                        is considered successful if at least one section in the parent
                        resource accepts it. For example, Gateway listeners can restrict
                        which Routes can attach to them by Route kind, namespace,
                        or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this
                        Route, the Route MUST be considered detached from the Gateway.
                        \n Support: Core"
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
              rules:
                default:
                - matches:
                  - path:
                      type: PathPrefix
                      value: /
                description: Rules are a list of HTTP matchers, filters and actions.
                items:
                  description: HTTPRouteRule defines semantics for matching an HTTP
                    request based on conditions (matches), processing it (filters),
                    and forwarding the request to an API object (backendRefs).
                  properties:
                    backendRefs:
                      description: "BackendRefs defines the backend(s) where matching
                        requests should be sent. \n Failure behavior here depends
                        on how many BackendRefs are specified and how many are invalid.
                        \n If *all* entries in BackendRefs are invalid, and there
                        are also no filters specified in this route rule, *all* traffic
                        which matches this rule MUST receive a 500 status code. \n
                        See the HTTPBackendRef definition for the rules about what
                        makes a single HTTPBackendRef invalid. \n When a HTTPBackendRef
                        is invalid, 500 status codes MUST be returned for requests
                        that would have otherwise been routed to an invalid backend.
                        If multiple backends are specified, and some are invalid,
                        the proportion of requests that would otherwise have been
                        routed to an invalid backend MUST receive a 500 status code.
                        \n For example, if two backends are specified with equal weights,
                        and one is invalid, 50 percent of traffic must receive a 500.
                        Implementations may choose how that 50 percent is determined.
                        \n Support: Core for Kubernetes Service \n Support: Extended
                        for Kubernetes ServiceImport \n Support: Implementation-specific
                        for any other resource \n Support for weight: Core"
                      items:
                        description: HTTPBackendRef defines how a HTTPRoute should
                          forward an HTTP request.
                        properties:
                          filters:
                            description: "Filters defined at this level should be
                              executed if and only if the request is being forwarded
                              to the backend defined here. \n Support: Implementation-specific
                              (For broader support of filters, use the Filters field
                              in HTTPRouteRule.)"
                            items:
                              description: HTTPRouteFilter defines processing steps
                                that must be completed during the request or response
                                lifecycle. HTTPRouteFilters are meant as an extension
                                point to express processing that may be done in Gateway
                                implementations. Some examples include request or
                                response modification, implementing authentication
                                strategies, rate-limiting, and traffic shaping. API
                                guarantee/conformance is defined based on the type
                                of the filter.
                              properties:
                                extensionRef:
                                  description: "ExtensionRef is an optional, implementation-specific
                                    extension to the \"filter\" behavior.  For example,
                                    resource \"myroutefilter\" in group \"networking.example.net\").
                                    ExtensionRef MUST NOT be used for core and extended
                                    filters. \n Support: Implementation-specific"
                                  properties:
                                    group:
                                      description: Group is the group of the referent.
                                        For example, "gateway.networking.k8s.io".
                                        When unspecified or empty string, core API
                                        group is inferred.
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      description: Kind is kind of the referent. For
                                        example "HTTPRoute" or "Service".
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                  required:
                                  - group
                                  - kind
                                  - name
                                  type: object
                                requestHeaderModifier:
                                  description: "RequestHeaderModifier defines a schema
                                    for a filter that modifies request headers. \n
                                    Support: Core"
                                  properties:
                                    add:
                                      description: "Add adds the given header(s) (name,
                                        value) to the request before the action. It
                                        appends to any existing values associated
                                        with the header name. \n Input: GET /foo HTTP/1.1
                                        my-header: foo \n Config: add: - name: \"my-header\"
                                        value: \"bar,baz\" \n Output: GET /foo HTTP/1.1
                                        my-header: foo,bar,baz"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: "Remove the given header(s) from
                                        the HTTP request before the action. The value
                                        of Remove is a list of HTTP header names.
                                        Note that the header names are case-insensitive
                                        (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                        \n Input: GET /foo HTTP/1.1 my-header1: foo
                                        my-header2: bar my-header3: baz \n Config:
                                        remove: [\"my-header1\", \"my-header3\"] \n
                                        Output: GET /foo HTTP/1.1 my-header2: bar"
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                    set:
                                      description: "Set overwrites the request with
                                        the given header (name, value) before the
                                        action. \n Input: GET /foo HTTP/1.1 my-header:
                                        foo \n Config: set: - name: \"my-header\"
                                        value: \"bar\" \n Output: GET /foo HTTP/1.1
                                        my-header: bar"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                requestMirror:
                                  description: "RequestMirror defines a schema for
                                    a filter that mirrors requests. Requests are sent
                                    to the specified destination, but responses from
                                    that destination are ignored. \n Support: Extended"
                                  properties:
                                    backendRef:
                                      description: "BackendRef references a resource
                                        where mirrored requests are sent. \n If the
                                        referent cannot be found, this BackendRef
                                        is invalid and must be dropped from the Gateway.
                                        The controller must ensure the \"ResolvedRefs\"
                                        condition on the Route status is set to `status:
                                        False` and not configure this backend in the
                                        underlying implementation. \n If there is
                                        a cross-namespace reference to an *existing*
                                        object that is not allowed by a ReferenceGrant,
                                        the controller must ensure the \"ResolvedRefs\"
                                        \ condition on the Route is set to `status:
                                        False`, with the \"RefNotPermitted\" reason
                                        and not configure this backend in the underlying
                                        implementation. \n In either error case, the
                                        Message of the `ResolvedRefs` Condition should
                                        be used to provide more detail about the problem.
                                        \n Support: Extended for Kubernetes Service
                                        \n Support: Implementation-specific for any
                                        other resource"
                                      properties:
                                        group:
                                          default: ""
                                          description: Group is the group of the referent.
                                            For example, "gateway.networking.k8s.io".
                                            When unspecified or empty string, core
                                            API group is inferred.
                                          maxLength: 253
                                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        kind:
                                          default: Service
                                          description: "Kind is the Kubernetes resource
                                            kind of the referent. For example \"Service\".
                                            \n Defaults to \"Service\" when not specified.
                                            \n ExternalName services can refer to
                                            CNAME DNS records that may live outside
                                            of the cluster and as such are difficult
                                            to reason about in terms of conformance.
                                            They also may not be safe to forward to
                                            (see CVE-2021-25740 for more information).
                                            Implementations SHOULD NOT support ExternalName
                                            Services. \n Support: Core (Services with
                                            a type other than ExternalName) \n Support:
                                            Implementation-specific (Services with
                                            type ExternalName)"
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                          type: string
                                        name:
                                          description: Name is the name of the referent.
                                          maxLength: 253
                                          minLength: 1
                                          type: string
                                        namespace:
                                          description: "Namespace is the namespace
                                            of the backend. When unspecified, the
                                            local namespace is inferred. \n Note that
                                            when a namespace different than the local
                                            namespace is specified, a ReferenceGrant
                                            object is required in the referent namespace
                                            to allow that namespace's owner to accept
                                            the reference. See the ReferenceGrant
                                            documentation for details. \n Support:
                                            Core"
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                        port:
                                          description: Port specifies the destination
                                            port number to use for this resource.
                                            Port is required when the referent is
                                            a Kubernetes Service. In this case, the
                                            port number is the service port number,
                                            not the target port. For other resources,
                                            destination port might be derived from
                                            the referent resource or this field.
                                          format: int32
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                      required:
                                      - name
                                      type: object
                                  required:
                                  - backendRef
                                  type: object
                                requestRedirect:
                                  description: "RequestRedirect defines a schema for
                                    a filter that responds to the request with an
                                    HTTP redirection. \n Support: Core"
                                  properties:
                                    hostname:
                                      description: "Hostname is the hostname to be
                                        used in the value of the `Location` header
                                        in the response. When empty, the hostname
                                        in the `Host` header of the request is used.
                                        \n Support: Core"
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    path:
                                      description: "Path defines parameters used to
                                        modify the path of the incoming request. The
                                        modified path is then used to construct the
                                        `Location` header. When empty, the request
                                        path is used as-is. \n Support: Extended"
                                      properties:
                                        replaceFullPath:
                                          description: ReplaceFullPath specifies the
                                            value with which to replace the full path
                                            of a request during a rewrite or redirect.
                                          maxLength: 1024
                                          type: string
                                        replacePrefixMatch:
                                          description: "ReplacePrefixMatch specifies
                                            the value with which to replace the prefix
                                            match of a request during a rewrite or
                                            redirect. For example, a request to \"/foo/bar\"
                                            with a prefix match of \"/foo\" would
                                            be modified to \"/bar\". \n Note that
                                            this matches the behavior of the PathPrefix
                                            match type. This matches full path elements.
                                            A path element refers to the list of labels
                                            in the path split by the `/` separator.
                                            When specified, a trailing `/` is ignored.
                                            For example, the paths `/abc`, `/abc/`,
                                            and `/abc/def` would all match the prefix
                                            `/abc`, but the path `/abcd` would not."
                                          maxLength: 1024
                                          type: string
                                        type:
                                          description: "Type defines the type of path
                                            modifier. Additional types may be added
                                            in a future release of the API. \n Note
                                            that values may be added to this enum,
                                            implementations must ensure that unknown
                                            values will not cause a crash. \n Unknown
                                            values here must result in the implementation
                                            setting the Accepted Condition for the
                                            Route to `status: False`, with a Reason
                                            of `UnsupportedValue`."
                                          enum:
                                          - ReplaceFullPath
                                          - ReplacePrefixMatch
                                          type: string
                                      required:
                                      - type
                                      type: object
                                    port:
                                      description: "Port is the port to be used in
                                        the value of the `Location` header in the
                                        response. \n If no port is specified, the
                                        redirect port MUST be derived using the following
                                        rules: \n * If redirect scheme is not-empty,
                                        the redirect port MUST be the well-known port
                                        associated with the redirect scheme. Specifically
                                        \"http\" to port 80 and \"https\" to port
                                        443. If the redirect scheme does not have
                                        a well-known port, the listener port of the
                                        Gateway SHOULD be used. * If redirect scheme
                                        is empty, the redirect port MUST be the Gateway
                                        Listener port. \n Implementations SHOULD NOT
                                        add the port number in the 'Location' header
                                        in the following cases: \n * A Location header
                                        that will use HTTP (whether that is determined
                                        via the Listener protocol or the Scheme field)
                                        _and_ use port 80. * A Location header that
                                        will use HTTPS (whether that is determined
                                        via the Listener protocol or the Scheme field)
                                        _and_ use port 443. \n Support: Extended"
                                      format: int32
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                    scheme:
                                      description: "Scheme is the scheme to be used
                                        in the value of the `Location` header in the
                                        response. When empty, the scheme of the request
                                        is used. \n Scheme redirects can affect the
                                        port of the redirect, for more information,
                                        refer to the documentation for the port field
                                        of this filter. \n Note that values may be
                                        added to this enum, implementations must ensure
                                        that unknown values will not cause a crash.
                                        \n Unknown values here must result in the
                                        implementation setting the Accepted Condition
                                        for the Route to `status: False`, with a Reason
                                        of `UnsupportedValue`. \n Support: Extended"
                                      enum:
                                      - http
                                      - https
                                      type: string
                                    statusCode:
                                      default: 302
                                      description: "StatusCode is the HTTP status
                                        code to be used in response. \n Note that
                                        values may be added to this enum, implementations
                                        must ensure that unknown values will not cause
                                        a crash. \n Unknown values here must result
                                        in the implementation setting the Accepted
                                        Condition for the Route to `status: False`,
                                        with a Reason of `UnsupportedValue`. \n Support:
                                        Core"
                                      enum:
                                      - 301
                                      - 302
                                      type: integer
                                  type: object
                                responseHeaderModifier:
                                  description: "ResponseHeaderModifier defines a schema
                                    for a filter that modifies response headers. \n
                                    Support: Extended"
                                  properties:
                                    add:
                                      description: "Add adds the given header(s) (name,
                                        value) to the request before the action. It
                                        appends to any existing values associated
                                        with the header name. \n Input: GET /foo HTTP/1.1
                                        my-header: foo \n Config: add: - name: \"my-header\"
                                        value: \"bar,baz\" \n Output: GET /foo HTTP/1.1
                                        my-header: foo,bar,baz"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: "Remove the given header(s) from
                                        the HTTP request before the action. The value
                                        of Remove is a list of HTTP header names.
                                        Note that the header names are case-insensitive
                                        (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                        \n Input: GET /foo HTTP/1.1 my-header1: foo
                                        my-header2: bar my-header3: baz \n Config:
                                        remove: [\"my-header1\", \"my-header3\"] \n
                                        Output: GET /foo HTTP/1.1 my-header2: bar"
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                    set:
                                      description: "Set overwrites the request with
                                        the given header (name, value) before the
                                        action. \n Input: GET /foo HTTP/1.1 my-header:
                                        foo \n Config: set: - name: \"my-header\"
                                        value: \"bar\" \n Output: GET /foo HTTP/1.1
                                        my-header: bar"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                type:
                                  description: "Type identifies the type of filter
                                    to apply. As with other API fields, types are
                                    classified into three conformance levels: \n -
                                    Core: Filter types and their corresponding configuration
                                    defined by \"Support: Core\" in this package,
                                    e.g. \"RequestHeaderModifier\". All implementations
                                    must support core filters. \n - Extended: Filter
                                    types and their corresponding configuration defined
                                    by \"Support: Extended\" in this package, e.g.
                                    \"RequestMirror\". Implementers are encouraged
                                    to support extended filters. \n - Implementation-specific:
                                    Filters that are defined and supported by specific
                                    vendors. In the future, filters showing convergence
                                    in behavior across multiple implementations will
                                    be considered for inclusion in extended or core
                                    conformance levels. Filter-specific configuration
                                    for such filters is specified using the ExtensionRef
                                    field. `Type` should be set to \"ExtensionRef\"
                                    for custom filters. \n Implementers are encouraged
                                    to define custom implementation types to extend
                                    the core API with implementation-specific behavior.
                                    \n If a reference to a custom filter type cannot
                                    be resolved, the filter MUST NOT be skipped. Instead,
                                    requests that would have been processed by that
                                    filter MUST receive a HTTP error response. \n
                                    Note that values may be added to this enum, implementations
                                    must ensure that unknown values will not cause
                                    a crash. \n Unknown values here must result in
                                    the implementation setting the Accepted Condition
                                    for the Route to `status: False`, with a Reason
                                    of `UnsupportedValue`."
                                  enum:
                                  - RequestHeaderModifier
                                  - ResponseHeaderModifier
                                  - RequestMirror
                                  - RequestRedirect
                                  - URLRewrite
                                  - ExtensionRef
                                  type: string
                                urlRewrite:
                                  description: "URLRewrite defines a schema for a
                                    filter that modifies a request during forwarding.
                                    \n Support: Extended"
                                  properties:
                                    hostname:
                                      description: "Hostname is the value to be used
                                        to replace the Host header value during forwarding.
                                        \n Support: Extended"
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    path:
                                      description: "Path defines a path rewrite. \n
                                        Support: Extended"
                                      properties:
                                        replaceFullPath:
                                          description: ReplaceFullPath specifies the
                                            value with which to replace the full path
                                            of a request during a rewrite or redirect.
                                          maxLength: 1024
                                          type: string
                                        replacePrefixMatch:
                                          description: "ReplacePrefixMatch specifies
                                            the value with which to replace the prefix
                                            match of a request during a rewrite or
                                            redirect. For example, a request to \"/foo/bar\"
                                            with a prefix match of \"/foo\" would
                                            be modified to \"/bar\". \n Note that
                                            this matches the behavior of the PathPrefix
                                            match type. This matches full path elements.
                                            A path element refers to the list of labels
                                            in the path split by the `/` separator.
                                            When specified, a trailing `/` is ignored.
                                            For example, the paths `/abc`, `/abc/`,
                                            and `/abc/def` would all match the prefix
                                            `/abc`, but the path `/abcd` would not."
                                          maxLength: 1024
                                          type: string
                                        type:
                                          description: "Type defines the type of path
                                            modifier. Additional types may be added
                                            in a future release of the API. \n Note
                                            that values may be added to this enum,
                                            implementations must ensure that unknown
                                            values will not cause a crash. \n Unknown
                                            values here must result in the implementation
                                            setting the Accepted Condition for the
                                            Route to `status: False`, with a Reason
                                            of `UnsupportedValue`."
                                          enum:
                                          - ReplaceFullPath
                                          - ReplacePrefixMatch
                                          type: string
                                      required:
                                      - type
                                      type: object
                                  type: object
                              required:
                              - type
                              type: object
                            maxItems: 16
                            type: array
                          group:
                            default: ""
                            description: Group is the group of the referent. For example,
                              "gateway.networking.k8s.io". When unspecified or empty
                              string, core API group is inferred.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Service
                            description: "Kind is the Kubernetes resource kind of
                              the referent. For example \"Service\". \n Defaults to
                              \"Service\" when not specified. \n ExternalName services
                              can refer to CNAME DNS records that may live outside
                              of the cluster and as such are difficult to reason about
                              in terms of conformance. They also may not be safe to
                              forward to (see CVE-2021-25740 for more information).
                              Implementations SHOULD NOT support ExternalName Services.
                              \n Support: Core (Services with a type other than ExternalName)
                              \n Support: Implementation-specific (Services with type
                              ExternalName)"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the referent.
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: "Namespace is the namespace of the backend.
                              When unspecified, the local namespace is inferred. \n
                              Note that when a namespace different than the local
                              namespace is specified, a ReferenceGrant object is required
                              in the referent namespace to allow that namespace's
                              owner to accept the reference. See the ReferenceGrant
                              documentation for details. \n Support: Core"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: Port specifies the destination port number
                              to use for this resource. Port is required when the
                              referent is a Kubernetes Service. In this case, the
                              port number is the service port number, not the target
                              port. For other resources, destination port might be
                              derived from the referent resource or this field.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          weight:
                            default: 1
                            description: "Weight specifies the proportion of requests
                              forwarded to the referenced backend. This is computed
                              as weight/(sum of all weights in this BackendRefs list).
                              For non-zero values, there may be some epsilon from
                              the exact proportion defined here depending on the precision
                              an implementation supports. Weight is not a percentage
                              and the sum of weights does not need to equal 100. \n
                              If only one backend is specified and it has a weight
                              greater than 0, 100% of the traffic is forwarded to
                              that backend. If weight is set to 0, no traffic should
                              be forwarded for this entry. If unspecified, weight
                              defaults to 1. \n Support for this field varies based
                              on the context where used."
                            format: int32
                            maximum: 1000000
                            minimum: 0
                            type: integer
                        required:
                        - name
                        type: object
                      maxItems: 16
                      type: array
                    filters:
                      description: "Filters define the filters that are applied to
                        requests that match this rule. \n The effects of ordering
                        of multiple behaviors are currently unspecified. This can
                        change in the future based on feedback during the alpha stage.
                        \n Conformance-levels at this level are defined based on the
                        type of filter: \n - ALL core filters MUST be supported by
                        all implementations. - Implementers are encouraged to support
                        extended filters. - Implementation-specific custom filters
                        have no API guarantees across implementations. \n Specifying
                        a core filter multiple times has unspecified or implementation-specific
                        conformance. \n All filters are expected to be compatible
                        with each other except for the URLRewrite and RequestRedirect
                        filters, which may not be combined. If an implementation can
                        not support other combinations of filters, they must clearly
                        document that limitation. In all cases where incompatible
                        or unsupported filters are specified, implementations MUST
                        add a warning condition to status. \n Support: Core"
                      items:
                        description: HTTPRouteFilter defines processing steps that
                          must be completed during the request or response lifecycle.
                          HTTPRouteFilters are meant as an extension point to express
                          processing that may be done in Gateway implementations.
                          Some examples include request or response modification,
                          implementing authentication strategies, rate-limiting, and
                          traffic shaping. API guarantee/conformance is defined based
                          on the type of the filter.
                        properties:
                          extensionRef:
                            description: "ExtensionRef is an optional, implementation-specific
                              extension to the \"filter\" behavior.  For example,
                              resource \"myroutefilter\" in group \"networking.example.net\").
                              ExtensionRef MUST NOT be used for core and extended
                              filters. \n Support: Implementation-specific"
                            properties:
                              group:
                                description: Group is the group of the referent. For
                                  example, "gateway.networking.k8s.io". When unspecified
                                  or empty string, core API group is inferred.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                description: Kind is kind of the referent. For example
                                  "HTTPRoute" or "Service".
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                            required:
                            - group
                            - kind
                            - name
                            type: object
                          requestHeaderModifier:
                            description: "RequestHeaderModifier defines a schema for
                              a filter that modifies request headers. \n Support:
                              Core"
                            properties:
                              add:
                                description: "Add adds the given header(s) (name,
                                  value) to the request before the action. It appends
                                  to any existing values associated with the header
                                  name. \n Input: GET /foo HTTP/1.1 my-header: foo
                                  \n Config: add: - name: \"my-header\" value: \"bar,baz\"
                                  \n Output: GET /foo HTTP/1.1 my-header: foo,bar,baz"
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: "Name is the name of the HTTP Header
                                        to be matched. Name matching MUST be case
                                        insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                        \n If multiple entries specify equivalent
                                        header names, the first entry with an equivalent
                                        name MUST be considered for a match. Subsequent
                                        entries with an equivalent header name MUST
                                        be ignored. Due to the case-insensitivity
                                        of header names, \"foo\" and \"Foo\" are considered
                                        equivalent."
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: "Remove the given header(s) from the
                                  HTTP request before the action. The value of Remove
                                  is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                  \n Input: GET /foo HTTP/1.1 my-header1: foo my-header2:
                                  bar my-header3: baz \n Config: remove: [\"my-header1\",
                                  \"my-header3\"] \n Output: GET /foo HTTP/1.1 my-header2:
                                  bar"
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                              set:
                                description: "Set overwrites the request with the
                                  given header (name, value) before the action. \n
                                  Input: GET /foo HTTP/1.1 my-header: foo \n Config:
                                  set: - name: \"my-header\" value: \"bar\" \n Output:
                                  GET /foo HTTP/1.1 my-header: bar"
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: "Name is the name of the HTTP Header
                                        to be matched. Name matching MUST be case
                                        insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                        \n If multiple entries specify equivalent
                                        header names, the first entry with an equivalent
                                        name MUST be considered for a match. Subsequent
                                        entries with an equivalent header name MUST
                                        be ignored. Due to the case-insensitivity
                                        of header names, \"foo\" and \"Foo\" are considered
                                        equivalent."
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          requestMirror:
                            description: "RequestMirror defines a schema for a filter
                              that mirrors requests. Requests are sent to the specified
                              destination, but responses from that destination are
                              ignored. \n Support: Extended"
                            properties:
                              backendRef:
                                description: "BackendRef references a resource where
                                  mirrored requests are sent. \n If the referent cannot
                                  be found, this BackendRef is invalid and must be
                                  dropped from the Gateway. The controller must ensure
                                  the \"ResolvedRefs\" condition on the Route status
                                  is set to `status: False` and not configure this
                                  backend in the underlying implementation. \n If
                                  there is a cross-namespace reference to an *existing*
                                  object that is not allowed by a ReferenceGrant,
                                  the controller must ensure the \"ResolvedRefs\"
                                  \ condition on the Route is set to `status: False`,
                                  with the \"RefNotPermitted\" reason and not configure
                                  this backend in the underlying implementation. \n
                                  In either error case, the Message of the `ResolvedRefs`
                                  Condition should be used to provide more detail
                                  about the problem. \n Support: Extended for Kubernetes
                                  Service \n Support: Implementation-specific for
                                  any other resource"
                                properties:
                                  group:
                                    default: ""
                                    description: Group is the group of the referent.
                                      For example, "gateway.networking.k8s.io". When
                                      unspecified or empty string, core API group
                                      is inferred.
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  kind:
                                    default: Service
                                    description: "Kind is the Kubernetes resource
                                      kind of the referent. For example \"Service\".
                                      \n Defaults to \"Service\" when not specified.
                                      \n ExternalName services can refer to CNAME
                                      DNS records that may live outside of the cluster
                                      and as such are difficult to reason about in
                                      terms of conformance. They also may not be safe
                                      to forward to (see CVE-2021-25740 for more information).
                                      Implementations SHOULD NOT support ExternalName
                                      Services. \n Support: Core (Services with a
                                      type other than ExternalName) \n Support: Implementation-specific
                                      (Services with type ExternalName)"
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: Name is the name of the referent.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  namespace:
                                    description: "Namespace is the namespace of the
                                      backend. When unspecified, the local namespace
                                      is inferred. \n Note that when a namespace different
                                      than the local namespace is specified, a ReferenceGrant
                                      object is required in the referent namespace
                                      to allow that namespace's owner to accept the
                                      reference. See the ReferenceGrant documentation
                                      for details. \n Support: Core"
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                  port:
                                    description: Port specifies the destination port
                                      number to use for this resource. Port is required
                                      when the referent is a Kubernetes Service. In
                                      this case, the port number is the service port
                                      number, not the target port. For other resources,
                                      destination port might be derived from the referent
                                      resource or this field.
                                    format: int32
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                required:
                                - name
                                type: object
                            required:
                            - backendRef
                            type: object
                          requestRedirect:
                            description: "RequestRedirect defines a schema for a filter
                              that responds to the request with an HTTP redirection.
                              \n Support: Core"
                            properties:
                              hostname:
                                description: "Hostname is the hostname to be used
                                  in the value of the `Location` header in the response.
                                  When empty, the hostname in the `Host` header of
                                  the request is used. \n Support: Core"
                                maxLength: 253
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              path:
                                description: "Path defines parameters used to modify
                                  the path of the incoming request. The modified path
                                  is then used to construct the `Location` header.
                                  When empty, the request path is used as-is. \n Support:
                                  Extended"
                                properties:
                                  replaceFullPath:
                                    description: ReplaceFullPath specifies the value
                                      with which to replace the full path of a request
                                      during a rewrite or redirect.
                                    maxLength: 1024
                                    type: string
                                  replacePrefixMatch:
                                    description: "ReplacePrefixMatch specifies the
                                      value with which to replace the prefix match
                                      of a request during a rewrite or redirect. For
                                      example, a request to \"/foo/bar\" with a prefix
                                      match of \"/foo\" would be modified to \"/bar\".
                                      \n Note that this matches the behavior of the
                                      PathPrefix match type. This matches full path
                                      elements. A path element refers to the list
                                      of labels in the path split by the `/` separator.
                                      When specified, a trailing `/` is ignored. For
                                      example, the paths `/abc`, `/abc/`, and `/abc/def`
                                      would all match the prefix `/abc`, but the path
                                      `/abcd` would not."
                                    maxLength: 1024
                                    type: string
                                  type:
                                    description: "Type defines the type of path modifier.
                                      Additional types may be added in a future release
                                      of the API. \n Note that values may be added
                                      to this enum, implementations must ensure that
                                      unknown values will not cause a crash. \n Unknown
                                      values here must result in the implementation
                                      setting the Accepted Condition for the Route
                                      to `status: False`, with a Reason of `UnsupportedValue`."
                                    enum:
                                    - ReplaceFullPath
                                    - ReplacePrefixMatch
                                    type: string
                                required:
                                - type
                                type: object
                              port:
                                description: "Port is the port to be used in the value
                                  of the `Location` header in the response. \n If
                                  no port is specified, the redirect port MUST be
                                  derived using the following rules: \n * If redirect
                                  scheme is not-empty, the redirect port MUST be the
                                  well-known port associated with the redirect scheme.
                                  Specifically \"http\" to port 80 and \"https\" to
                                  port 443. If the redirect scheme does not have a
                                  well-known port, the listener port of the Gateway
                                  SHOULD be used. * If redirect scheme is empty, the
                                  redirect port MUST be the Gateway Listener port.
                                  \n Implementations SHOULD NOT add the port number
                                  in the 'Location' header in the following cases:
                                  \n * A Location header that will use HTTP (whether
                                  that is determined via the Listener protocol or
                                  the Scheme field) _and_ use port 80. * A Location
                                  header that will use HTTPS (whether that is determined
                                  via the Listener protocol or the Scheme field) _and_
                                  use port 443. \n Support: Extended"
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              scheme:
                                description: "Scheme is the scheme to be used in the
                                  value of the `Location` header in the response.
                                  When empty, the scheme of the request is used. \n
                                  Scheme redirects can affect the port of the redirect,
                                  for more information, refer to the documentation
                                  for the port field of this filter. \n Note that
                                  values may be added to this enum, implementations
                                  must ensure that unknown values will not cause a
                                  crash. \n Unknown values here must result in the
                                  implementation setting the Accepted Condition for
                                  the Route to `status: False`, with a Reason of `UnsupportedValue`.
                                  \n Support: Extended"
                                enum:
                                - http
                                - https
                                type: string
                              statusCode:
                                default: 302
                                description: "StatusCode is the HTTP status code to
                                  be used in response. \n Note that values may be
                                  added to this enum, implementations must ensure
                                  that unknown values will not cause a crash. \n Unknown
                                  values here must result in the implementation setting
                                  the Accepted Condition for the Route to `status:
                                  False`, with a Reason of `UnsupportedValue`. \n
                                  Support: Core"
                                enum:
                                - 301
                                - 302
                                type: integer
                            type: object
                          responseHeaderModifier:
                            description: "ResponseHeaderModifier defines a schema
                              for a filter that modifies response headers. \n Support:
                              Extended"
                            properties:
                              add:
                                description: "Add adds the given header(s) (name,
                                  value) to the request before the action. It appends
                                  to any existing values associated with the header
                                  name. \n Input: GET /foo HTTP/1.1 my-header: foo
                                  \n Config: add: - name: \"my-header\" value: \"bar,baz\"
                                  \n Output: GET /foo HTTP/1.1 my-header: foo,bar,baz"
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: "Name is the name of the HTTP Header
                                        to be matched. Name matching MUST be case
                                        insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                        \n If multiple entries specify equivalent
                                        header names, the first entry with an equivalent
                                        name MUST be considered for a match. Subsequent
                                        entries with an equivalent header name MUST
                                        be ignored. Due to the case-insensitivity
                                        of header names, \"foo\" and \"Foo\" are considered
                                        equivalent."
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: "Remove the given header(s) from the
                                  HTTP request before the action. The value of Remove
                                  is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                  \n Input: GET /foo HTTP/1.1 my-header1: foo my-header2:
                                  bar my-header3: baz \n Config: remove: [\"my-header1\",
                                  \"my-header3\"] \n Output: GET /foo HTTP/1.1 my-header2:
                                  bar"
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                              set:
                                description: "Set overwrites the request with the
                                  given header (name, value) before the action. \n
                                  Input: GET /foo HTTP/1.1 my-header: foo \n Config:
                                  set: - name: \"my-header\" value: \"bar\" \n Output:
                                  GET /foo HTTP/1.1 my-header: bar"
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: "Name is the name of the HTTP Header
                                        to be matched. Name matching MUST be case
                                        insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                        \n If multiple entries specify equivalent
                                        header names, the first entry with an equivalent
                                        name MUST be considered for a match. Subsequent
                                        entries with an equivalent header name MUST
                                        be ignored. Due to the case-insensitivity
                                        of header names, \"foo\" and \"Foo\" are considered
                                        equivalent."
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          type:
                            description: "Type identifies the type of filter to apply.
                              As with other API fields, types are classified into
                              three conformance levels: \n - Core: Filter types and
                              their corresponding configuration defined by \"Support:
                              Core\" in this package, e.g. \"RequestHeaderModifier\".
                              All implementations must support core filters. \n -
                              Extended: Filter types and their corresponding configuration
                              defined by \"Support: Extended\" in this package, e.g.
                              \"RequestMirror\". Implementers are encouraged to support
                              extended filters. \n - Implementation-specific: Filters
                              that are defined and supported by specific vendors.
                              In the future, filters showing convergence in behavior
                              across multiple implementations will be considered for
                              inclusion in extended or core conformance levels. Filter-specific
                              configuration for such filters is specified using the
                              ExtensionRef field. `Type` should be set to \"ExtensionRef\"
                              for custom filters. \n Implementers are encouraged to
                              define custom implementation types to extend the core
                              API with implementation-specific behavior. \n If a reference
                              to a custom filter type cannot be resolved, the filter
                              MUST NOT be skipped. Instead, requests that would have
                              been processed by that filter MUST receive a HTTP error
                              response. \n Note that values may be added to this enum,
                              implementations must ensure that unknown values will
                              not cause a crash. \n Unknown values here must result
                              in the implementation setting the Accepted Condition
                              for the Route to `status: False`, with a Reason of `UnsupportedValue`."
                            enum:
                            - RequestHeaderModifier
                            - ResponseHeaderModifier
                            - RequestMirror
                            - RequestRedirect
                            - URLRewrite
                            - ExtensionRef
                            type: string
                          urlRewrite:
                            description: "URLRewrite defines a schema for a filter
                              that modifies a request during forwarding. \n Support:
                              Extended"
                            properties:
                              hostname:
                                description: "Hostname is the value to be used to
                                  replace the Host header value during forwarding.
                                  \n Support: Extended"
                                maxLength: 253
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              path:
                                description: "Path defines a path rewrite. \n Support:
                                  Extended"
                                properties:
                                  replaceFullPath:
                                    description: ReplaceFullPath specifies the value
                                      with which to replace the full path of a request
                                      during a rewrite or redirect.
                                    maxLength: 1024
                                    type: string
                                  replacePrefixMatch:
                                    description: "ReplacePrefixMatch specifies the
                                      value with which to replace the prefix match
                                      of a request during a rewrite or redirect. For
                                      example, a request to \"/foo/bar\" with a prefix
                                      match of \"/foo\" would be modified to \"/bar\".
                                      \n Note that this matches the behavior of the
                                      PathPrefix match type. This matches full path
                                      elements. A path element refers to the list
                                      of labels in the path split by the `/` separator.
                                      When specified, a trailing `/` is ignored. For
                                      example, the paths `/abc`, `/abc/`, and `/abc/def`
                                      would all match the prefix `/abc`, but the path
                                      `/abcd` would not."
                                    maxLength: 1024
                                    type: string
                                  type:
                                    description: "Type defines the type of path modifier.
                                      Additional types may be added in a future release
                                      of the API. \n Note that values may be added
                                      to this enum, implementations must ensure that
                                      unknown values will not cause a crash. \n Unknown
                                      values here must result in the implementation
                                      setting the Accepted Condition for the Route
                                      to `status: False`, with a Reason of `UnsupportedValue`."
                                    enum:
                                    - ReplaceFullPath
                                    - ReplacePrefixMatch
                                    type: string
                                required:
                                - type
                                type: object
                            type: object
                        required:
                        - type
                        type: object
                      maxItems: 16
                      type: array
                    matches:
                      default:
                      - path:
                          type: PathPrefix
                          value: /
                      description: "Matches define conditions used for matching the
                        rule against incoming HTTP requests. Each match is independent,
                        i.e. this rule will be matched if **any** one of the matches
                        is satisfied. \n For example, take the following matches configuration:
                        \n ``` matches: - path: value: \"/foo\" headers: - name: \"version\"
                        value: \"v2\" - path: value: \"/v2/foo\" ``` \n For a request
                        to match against this rule, a request must satisfy EITHER
                        of the two conditions: \n - path prefixed with `/foo` AND
                        contains the header `version: v2` - path prefix of `/v2/foo`
                        \n See the documentation for HTTPRouteMatch on how to specify
                        multiple match conditions that should be ANDed together. \n
                        If no matches are specified, the default is a prefix path
                        match on \"/\", which has the effect of matching every HTTP
                        request. \n Proxy or Load Balancer routing configuration generated
                        from HTTPRoutes MUST prioritize matches based on the following
                        criteria, continuing on ties. Across all rules specified on
                        applicable Routes, precedence must be given to the match having:
                        \n * \"Exact\" path match. * \"Prefix\" path match with largest
                        number of characters. * Method match. * Largest number of
                        header matches. * Largest number of query param matches. \n
                        Note: The precedence of RegularExpression path matches are
                        implementation-specific. \n If ties still exist across multiple
                        Routes, matching precedence MUST be determined in order of
                        the following criteria, continuing on ties: \n * The oldest
                        Route based on creation timestamp. * The Route appearing first
                        in alphabetical order by \"{namespace}/{name}\". \n If ties
                        still exist within an HTTPRoute, matching precedence MUST
                        be granted to the FIRST matching rule (in list order) with
                        a match meeting the above criteria. \n When no rules matching
                        a request have been successfully attached to the parent a
                        request is coming from, a HTTP 404 status code MUST be returned."
                      items:
                        description: "HTTPRouteMatch defines the predicate used to
                          match requests to a given action. Multiple match types are
                          ANDed together, i.e. the match will evaluate to true only
                          if all conditions are satisfied. \n For example, the match
                          below will match a HTTP request only if its path starts
                          with `/foo` AND it contains the `version: v1` header: \n
                          ``` match: \n path: value: \"/foo\" headers: - name: \"version\"
                          value \"v1\" \n ```"
                        properties:
                          headers:
                            description: Headers specifies HTTP request header matchers.
                              Multiple match values are ANDed together, meaning, a
                              request must match all the specified headers to select
                              the route.
                            items:
                              description: HTTPHeaderMatch describes how to select
                                a HTTP route by matching HTTP request headers.
                              properties:
                                name:
                                  description: "Name is the name of the HTTP Header
                                    to be matched. Name matching MUST be case insensitive.
                                    (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                    \n If multiple entries specify equivalent header
                                    names, only the first entry with an equivalent
                                    name MUST be considered for a match. Subsequent
                                    entries with an equivalent header name MUST be
                                    ignored. Due to the case-insensitivity of header
                                    names, \"foo\" and \"Foo\" are considered equivalent.
                                    \n When a header is repeated in an HTTP request,
                                    it is implementation-specific behavior as to how
                                    this is represented. Generally, proxies should
                                    follow the guidance from the RFC: https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2
                                    regarding processing a repeated header, with special
                                    handling for \"Set-Cookie\"."
                                  maxLength: 256
                                  minLength: 1
                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  type: string
                                type:
                                  default: Exact
                                  description: "Type specifies how to match against
                                    the value of the header. \n Support: Core (Exact)
                                    \n Support: Implementation-specific (RegularExpression)
                                    \n Since RegularExpression HeaderMatchType has
                                    implementation-specific conformance, implementations
                                    can support POSIX, PCRE or any other dialects
                                    of regular expressions. Please read the implementation's
                                    documentation to determine the supported dialect."
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of HTTP Header to
                                    be matched.
                                  maxLength: 4096
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          method:
                            description: "Method specifies HTTP method matcher. When
                              specified, this route will be matched only if the request
                              has the specified method. \n Support: Extended"
                            enum:
                            - GET
                            - HEAD
                            - POST
                            - PUT
                            - DELETE
                            - CONNECT
                            - OPTIONS
                            - TRACE
                            - PATCH
                            type: string
                          path:
                            default:
                              type: PathPrefix
                              value: /
                            description: Path specifies a HTTP request path matcher.
                              If this field is not specified, a default prefix match
                              on the "/" path is provided.
                            properties:
                              type:
                                default: PathPrefix
                                description: "Type specifies how to match against
                                  the path Value. \n Support: Core (Exact, PathPrefix)
                                  \n Support: Implementation-specific (RegularExpression)"
                                enum:
                                - Exact
                                - PathPrefix
                                - RegularExpression
                                type: string
                              value:
                                default: /
                                description: Value of the HTTP path to match against.
                                maxLength: 1024
                                type: string
                            type: object
                          queryParams:
                            description: "QueryParams specifies HTTP query parameter
                              matchers. Multiple match values are ANDed together,
                              meaning, a request must match all the specified query
                              parameters to select the route. \n Support: Extended"
                            items:
                              description: HTTPQueryParamMatch describes how to select
                                a HTTP route by matching HTTP query parameters.
                              properties:
                                name:
                                  description: "Name is the name of the HTTP query
                                    param to be matched. This must be an exact string
                                    match. (See https://tools.ietf.org/html/rfc7230#section-2.7.3).
                                    \n If multiple entries specify equivalent query
                                    param names, only the first entry with an equivalent
                                    name MUST be considered for a match. Subsequent
                                    entries with an equivalent query param name MUST
                                    be ignored. \n If a query param is repeated in
                                    an HTTP request, the behavior is purposely left
                                    undefined, since different data planes have different
                                    capabilities. However, it is *recommended* that
                                    implementations should match against the first
                                    value of the param if the data plane supports
                                    it, as this behavior is expected in other load
                                    balancing contexts outside of the Gateway API.
                                    \n Users SHOULD NOT route traffic based on repeated
                                    query params to guard themselves against potential
                                    differences in the implementations."
                                  maxLength: 256
                                  minLength: 1
                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  type: string
                                type:
                                  default: Exact
                                  description: "Type specifies how to match against
                                    the value of the query parameter. \n Support:
                                    Extended (Exact) \n Support: Implementation-specific
                                    (RegularExpression) \n Since RegularExpression
                                    QueryParamMatchType has Implementation-specific
                                    conformance, implementations can support POSIX,
                                    PCRE or any other dialects of regular expressions.
                                    Please read the implementation's documentation
                                    to determine the supported dialect."
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of HTTP query param
                                    to be matched.
                                  maxLength: 1024
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                        type: object
                      maxItems: 8
                      type: array
                  type: object
                maxItems: 16
                type: array
            type: object
          status:
            description: Status defines the current state of HTTPRoute.
            properties:
              parents:
                description: "Parents is a list of parent resources (usually Gateways)
                  that are associated with the route, and the status of the route
                  with respect to each parent. When this route attaches to a parent,
                  the controller that manages the parent must add an entry to this
                  list when the controller first sees the route and should update
                  the entry as appropriate when the route or gateway is modified.
                  \n Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this
                  API can only populate Route status for the Gateways/parent resources
                  they are responsible for. \n A maximum of 32 Gateways will be represented
                  in this list. An empty list means the route has not been attached
                  to any Gateway."
                items:
                  description: RouteParentStatus describes the status of a route with
                    respect to an associated Parent.
                  properties:
                    conditions:
                      description: "Conditions describes the status of the route with
                        respect to the Gateway. Note that the route's availability
                        is also subject to the Gateway's own status conditions and
                        listener status. \n If the Route's ParentRef specifies an
                        existing Gateway that supports Routes of this kind AND that
                        Gateway's controller has sufficient access, then that Gateway's
                        controller MUST set the \"Accepted\" condition on the Route,
                        to indicate whether the route has been accepted or rejected
                        by the Gateway, and why. \n A Route MUST be considered \"Accepted\"
                        if at least one of the Route's rules is implemented by the
                        Gateway. \n There are a number of cases where the \"Accepted\"
                        condition may not be set due to lack of controller visibility,
                        that includes when: \n * The Route refers to a non-existent
                        parent. * The Route is of a type that the controller does
                        not support. * The Route is in a namespace the controller
                        does not have access to."
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource. --- This struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example, \n type FooStatus struct{
                          // Represents the observations of a foo's current state.
                          // Known .status.conditions.type are: \"Available\", \"Progressing\",
                          and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                          // +listType=map // +listMapKey=type Conditions []metav1.Condition
                          `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                          protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields
                          }"
                        properties:
                          lastTransitionTime:
                            description: lastTransitionTime is the last time the condition
                              transitioned from one status to another. This should
                              be when the underlying condition changed.  If that is
                              not known, then using the time when the API field changed
                              is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: message is a human readable message indicating
                              details about the transition. This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: observedGeneration represents the .metadata.generation
                              that the condition was set based upon. For instance,
                              if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                              is 9, the condition is out of date with respect to the
                              current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. The value should
                              be a CamelCase string. This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                              --- Many .condition.type values are consistent across
                              resources like Available, but because arbitrary conditions
                              can be useful (see .node.status.conditions), the ability
                              to deconflict is important. The regex it matches is
                              (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: "ControllerName is a domain/path string that indicates
                        the name of the controller that wrote this status. This corresponds
                        with the controllerName field on GatewayClass. \n Example:
                        \"example.net/gateway-controller\". \n The format of this
                        field is DOMAIN \"/\" PATH, where DOMAIN and PATH are valid
                        Kubernetes names (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                        \n Controllers MUST populate this field when writing status.
                        Controllers should ensure that entries to status populated
                        with their ControllerName are cleaned up when they are no
                        longer necessary."
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: ParentRef corresponds with a ParentRef in the spec
                        that this RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: "Group is the group of the referent. When unspecified,
                            \"gateway.networking.k8s.io\" is inferred. To set the
                            core API group (such as for a \"Service\" kind referent),
                            Group must be explicitly set to \"\" (empty string). \n
                            Support: Core"
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: "Kind is kind of the referent. \n Support:
                            Core (Gateway) \n Support: Implementation-specific (Other
                            Resources)"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: "Name is the name of the referent. \n Support:
                            Core"
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: "Namespace is the namespace of the referent.
                            When unspecified, this refers to the local namespace of
                            the Route. \n Note that there are specific rules for ParentRefs
                            which cross namespace boundaries. Cross-namespace references
                            are only valid if they are explicitly allowed by something
                            in the namespace they are referring to. For example: Gateway
                            has the AllowedRoutes field, and ReferenceGrant provides
                            a generic way to enable any other kind of cross-namespace
                            reference. \n Support: Core"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: "Port is the network port this Route targets.
                            It can be interpreted differently based on the type of
                            parent resource. \n When the parent resource is a Gateway,
                            this targets all listeners listening on the specified
                            port that also support this kind of Route(and select this
                            Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to
                            a specific port as opposed to a listener(s) whose port(s)
                            may be changed. When both Port and SectionName are specified,
                            the name and port of the selected listener must match
                            both specified values. \n Implementations MAY choose to
                            support other parent resources. Implementations supporting
                            other types of parent resources MUST clearly document
                            how/if Port is interpreted. \n For the purpose of status,
                            an attachment is considered successful as long as the
                            parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them
                            by Route kind, namespace, or hostname. If 1 of 2 Gateway
                            listeners accept attachment from the referencing Route,
                            the Route MUST be considered successfully attached. If
                            no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.
                            \n Support: Extended \n <gateway:experimental>"
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: "SectionName is the name of a section within
                            the target resource. In the following resources, SectionName
                            is interpreted as the following: \n * Gateway: Listener
                            Name. When both Port (experimental) and SectionName are
                            specified, the name and port of the selected listener
                            must match both specified values. \n Implementations MAY
                            choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName
                            is interpreted. \n When unspecified (empty string), this
                            will reference the entire resource. For the purpose of
                            status, an attachment is considered successful if at least
                            one section in the parent resource accepts it. For example,
                            Gateway listeners can restrict which Routes can attach
                            to them by Route kind, namespace, or hostname. If 1 of
                            2 Gateway listeners accept attachment from the referencing
                            Route, the Route MUST be considered successfully attached.
                            If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.
                            \n Support: Core"
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
# Source: eg-edge-stack-crds/templates/gwapi/gatewayapi-crds.yaml
#
# config/crd/experimental/gateway.networking.k8s.io_referencegrants.yaml
#
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/1923
    gateway.networking.k8s.io/bundle-version: v0.7.1
    gateway.networking.k8s.io/channel: experimental
  creationTimestamp: null
  name: referencegrants.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: ReferenceGrant
    listKind: ReferenceGrantList
    plural: referencegrants
    shortNames:
    - refgrant
    singular: referencegrant
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: "ReferenceGrant identifies kinds of resources in other namespaces
          that are trusted to reference the specified kinds of resources in the same
          namespace as the policy. \n Each ReferenceGrant can be used to represent
          a unique trust relationship. Additional Reference Grants can be used to
          add to the set of trusted sources of inbound references for the namespace
          they are defined within. \n All cross-namespace references in Gateway API
          (with the exception of cross-namespace Gateway-route attachment) require
          a ReferenceGrant. \n ReferenceGrant is a form of runtime verification allowing
          users to assert which cross-namespace object references are permitted. Implementations
          that support ReferenceGrant MUST NOT permit cross-namespace references which
          have no grant, and MUST respond to the removal of a grant by revoking the
          access that the grant allowed. \n Support: Core"
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of ReferenceGrant.
            properties:
              from:
                description: "From describes the trusted namespaces and kinds that
                  can reference the resources described in \"To\". Each entry in this
                  list MUST be considered to be an additional place that references
                  can be valid from, or to put this another way, entries MUST be combined
                  using OR. \n Support: Core"
                items:
                  description: ReferenceGrantFrom describes trusted namespaces and
                    kinds.
                  properties:
                    group:
                      description: "Group is the group of the referent. When empty,
                        the Kubernetes core API group is inferred. \n Support: Core"
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      description: "Kind is the kind of the referent. Although implementations
                        may support additional resources, the following types are
                        part of the \"Core\" support level for this field. \n When
                        used to permit a SecretObjectReference: \n * Gateway \n When
                        used to permit a BackendObjectReference: \n * GRPCRoute *
                        HTTPRoute * TCPRoute * TLSRoute * UDPRoute"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    namespace:
                      description: "Namespace is the namespace of the referent. \n
                        Support: Core"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                  required:
                  - group
                  - kind
                  - namespace
                  type: object
                maxItems: 16
                minItems: 1
                type: array
              to:
                description: "To describes the resources that may be referenced by
                  the resources described in \"From\". Each entry in this list MUST
                  be considered to be an additional place that references can be valid
                  to, or to put this another way, entries MUST be combined using OR.
                  \n Support: Core"
                items:
                  description: ReferenceGrantTo describes what Kinds are allowed as
                    targets of the references.
                  properties:
                    group:
                      description: "Group is the group of the referent. When empty,
                        the Kubernetes core API group is inferred. \n Support: Core"
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      description: "Kind is the kind of the referent. Although implementations
                        may support additional resources, the following types are
                        part of the \"Core\" support level for this field: \n * Secret
                        when used to permit a SecretObjectReference * Service when
                        used to permit a BackendObjectReference"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: Name is the name of the referent. When unspecified,
                        this policy refers to all resources of the specified Group
                        and Kind in the local namespace.
                      maxLength: 253
                      minLength: 1
                      type: string
                  required:
                  - group
                  - kind
                  type: object
                maxItems: 16
                minItems: 1
                type: array
            required:
            - from
            - to
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: "ReferenceGrant identifies kinds of resources in other namespaces
          that are trusted to reference the specified kinds of resources in the same
          namespace as the policy. \n Each ReferenceGrant can be used to represent
          a unique trust relationship. Additional Reference Grants can be used to
          add to the set of trusted sources of inbound references for the namespace
          they are defined within. \n All cross-namespace references in Gateway API
          (with the exception of cross-namespace Gateway-route attachment) require
          a ReferenceGrant. \n ReferenceGrant is a form of runtime verification allowing
          users to assert which cross-namespace object references are permitted. Implementations
          that support ReferenceGrant MUST NOT permit cross-namespace references which
          have no grant, and MUST respond to the removal of a grant by revoking the
          access that the grant allowed. \n Support: Core"
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of ReferenceGrant.
            properties:
              from:
                description: "From describes the trusted namespaces and kinds that
                  can reference the resources described in \"To\". Each entry in this
                  list MUST be considered to be an additional place that references
                  can be valid from, or to put this another way, entries MUST be combined
                  using OR. \n Support: Core"
                items:
                  description: ReferenceGrantFrom describes trusted namespaces and
                    kinds.
                  properties:
                    group:
                      description: "Group is the group of the referent. When empty,
                        the Kubernetes core API group is inferred. \n Support: Core"
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      description: "Kind is the kind of the referent. Although implementations
                        may support additional resources, the following types are
                        part of the \"Core\" support level for this field. \n When
                        used to permit a SecretObjectReference: \n * Gateway \n When
                        used to permit a BackendObjectReference: \n * GRPCRoute *
                        HTTPRoute * TCPRoute * TLSRoute * UDPRoute"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    namespace:
                      description: "Namespace is the namespace of the referent. \n
                        Support: Core"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                  required:
                  - group
                  - kind
                  - namespace
                  type: object
                maxItems: 16
                minItems: 1
                type: array
              to:
                description: "To describes the resources that may be referenced by
                  the resources described in \"From\". Each entry in this list MUST
                  be considered to be an additional place that references can be valid
                  to, or to put this another way, entries MUST be combined using OR.
                  \n Support: Core"
                items:
                  description: ReferenceGrantTo describes what Kinds are allowed as
                    targets of the references.
                  properties:
                    group:
                      description: "Group is the group of the referent. When empty,
                        the Kubernetes core API group is inferred. \n Support: Core"
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      description: "Kind is the kind of the referent. Although implementations
                        may support additional resources, the following types are
                        part of the \"Core\" support level for this field: \n * Secret
                        when used to permit a SecretObjectReference * Service when
                        used to permit a BackendObjectReference"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: Name is the name of the referent. When unspecified,
                        this policy refers to all resources of the specified Group
                        and Kind in the local namespace.
                      maxLength: 253
                      minLength: 1
                      type: string
                  required:
                  - group
                  - kind
                  type: object
                maxItems: 16
                minItems: 1
                type: array
            required:
            - from
            - to
            type: object
        type: object
    served: true
    storage: false
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
# Source: eg-edge-stack-crds/templates/gwapi/gatewayapi-crds.yaml
#
# config/crd/experimental/gateway.networking.k8s.io_tcproutes.yaml
#
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/1923
    gateway.networking.k8s.io/bundle-version: v0.7.1
    gateway.networking.k8s.io/channel: experimental
  creationTimestamp: null
  name: tcproutes.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: TCPRoute
    listKind: TCPRouteList
    plural: tcproutes
    singular: tcproute
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: TCPRoute provides a way to route TCP requests. When combined
          with a Gateway listener, it can be used to forward connections on the port
          specified by the listener to a set of backends specified by the TCPRoute.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of TCPRoute.
            properties:
              parentRefs:
                description: "ParentRefs references the resources (usually Gateways)
                  that a Route wants to be attached to. Note that the referenced parent
                  resource needs to allow this for the attachment to be complete.
                  For Gateways, that means the Gateway needs to allow attachment from
                  Routes of this kind and namespace. \n The only kind of parent resource
                  with \"Core\" support is Gateway. This API may be extended in the
                  future to support additional kinds of parent resources such as one
                  of the route kinds. \n It is invalid to reference an identical parent
                  more than once. It is valid to reference multiple distinct sections
                  within the same parent resource, such as 2 Listeners within a Gateway.
                  \n It is possible to separately reference multiple distinct objects
                  that may be collapsed by an implementation. For example, some implementations
                  may choose to merge compatible Gateway Listeners together. If that
                  is the case, the list of routes attached to those resources should
                  also be merged. \n Note that for ParentRefs that cross namespace
                  boundaries, there are specific rules. Cross-namespace references
                  are only valid if they are explicitly allowed by something in the
                  namespace they are referring to. For example, Gateway has the AllowedRoutes
                  field, and ReferenceGrant provides a generic way to enable any other
                  kind of cross-namespace reference."
                items:
                  description: "ParentReference identifies an API object (usually
                    a Gateway) that can be considered a parent of this resource (usually
                    a route). The only kind of parent resource with \"Core\" support
                    is Gateway. This API may be extended in the future to support
                    additional kinds of parent resources, such as HTTPRoute. \n The
                    API object must be valid in the cluster; the Group and Kind must
                    be registered in the cluster for this reference to be valid."
                  properties:
                    group:
                      default: gateway.networking.k8s.io
                      description: "Group is the group of the referent. When unspecified,
                        \"gateway.networking.k8s.io\" is inferred. To set the core
                        API group (such as for a \"Service\" kind referent), Group
                        must be explicitly set to \"\" (empty string). \n Support:
                        Core"
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: "Kind is kind of the referent. \n Support: Core
                        (Gateway) \n Support: Implementation-specific (Other Resources)"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: "Name is the name of the referent. \n Support:
                        Core"
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: "Namespace is the namespace of the referent. When
                        unspecified, this refers to the local namespace of the Route.
                        \n Note that there are specific rules for ParentRefs which
                        cross namespace boundaries. Cross-namespace references are
                        only valid if they are explicitly allowed by something in
                        the namespace they are referring to. For example: Gateway
                        has the AllowedRoutes field, and ReferenceGrant provides a
                        generic way to enable any other kind of cross-namespace reference.
                        \n Support: Core"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    port:
                      description: "Port is the network port this Route targets. It
                        can be interpreted differently based on the type of parent
                        resource. \n When the parent resource is a Gateway, this targets
                        all listeners listening on the specified port that also support
                        this kind of Route(and select this Route). It's not recommended
                        to set `Port` unless the networking behaviors specified in
                        a Route must apply to a specific port as opposed to a listener(s)
                        whose port(s) may be changed. When both Port and SectionName
                        are specified, the name and port of the selected listener
                        must match both specified values. \n Implementations MAY choose
                        to support other parent resources. Implementations supporting
                        other types of parent resources MUST clearly document how/if
                        Port is interpreted. \n For the purpose of status, an attachment
                        is considered successful as long as the parent resource accepts
                        it partially. For example, Gateway listeners can restrict
                        which Routes can attach to them by Route kind, namespace,
                        or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this
                        Route, the Route MUST be considered detached from the Gateway.
                        \n Support: Extended \n <gateway:experimental>"
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    sectionName:
                      description: "SectionName is the name of a section within the
                        target resource. In the following resources, SectionName is
                        interpreted as the following: \n * Gateway: Listener Name.
                        When both Port (experimental) and SectionName are specified,
                        the name and port of the selected listener must match both
                        specified values. \n Implementations MAY choose to support
                        attaching Routes to other resources. If that is the case,
                        they MUST clearly document how SectionName is interpreted.
                        \n When unspecified (empty string), this will reference the
                        entire resource. For the purpose of status, an attachment
                        is considered successful if at least one section in the parent
                        resource accepts it. For example, Gateway listeners can restrict
                        which Routes can attach to them by Route kind, namespace,
                        or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this
                        Route, the Route MUST be considered detached from the Gateway.
                        \n Support: Core"
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
              rules:
                description: Rules are a list of TCP matchers and actions.
                items:
                  description: TCPRouteRule is the configuration for a given rule.
                  properties:
                    backendRefs:
                      description: "BackendRefs defines the backend(s) where matching
                        requests should be sent. If unspecified or invalid (refers
                        to a non-existent resource or a Service with no endpoints),
                        the underlying implementation MUST actively reject connection
                        attempts to this backend. Connection rejections must respect
                        weight; if an invalid backend is requested to have 80% of
                        connections, then 80% of connections must be rejected instead.
                        \n Support: Core for Kubernetes Service \n Support: Extended
                        for Kubernetes ServiceImport \n Support: Implementation-specific
                        for any other resource \n Support for weight: Extended"
                      items:
                        description: "BackendRef defines how a Route should forward
                          a request to a Kubernetes resource. \n Note that when a
                          namespace different than the local namespace is specified,
                          a ReferenceGrant object is required in the referent namespace
                          to allow that namespace's owner to accept the reference.
                          See the ReferenceGrant documentation for details."
                        properties:
                          group:
                            default: ""
                            description: Group is the group of the referent. For example,
                              "gateway.networking.k8s.io". When unspecified or empty
                              string, core API group is inferred.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Service
                            description: "Kind is the Kubernetes resource kind of
                              the referent. For example \"Service\". \n Defaults to
                              \"Service\" when not specified. \n ExternalName services
                              can refer to CNAME DNS records that may live outside
                              of the cluster and as such are difficult to reason about
                              in terms of conformance. They also may not be safe to
                              forward to (see CVE-2021-25740 for more information).
                              Implementations SHOULD NOT support ExternalName Services.
                              \n Support: Core (Services with a type other than ExternalName)
                              \n Support: Implementation-specific (Services with type
                              ExternalName)"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the referent.
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: "Namespace is the namespace of the backend.
                              When unspecified, the local namespace is inferred. \n
                              Note that when a namespace different than the local
                              namespace is specified, a ReferenceGrant object is required
                              in the referent namespace to allow that namespace's
                              owner to accept the reference. See the ReferenceGrant
                              documentation for details. \n Support: Core"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: Port specifies the destination port number
                              to use for this resource. Port is required when the
                              referent is a Kubernetes Service. In this case, the
                              port number is the service port number, not the target
                              port. For other resources, destination port might be
                              derived from the referent resource or this field.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          weight:
                            default: 1
                            description: "Weight specifies the proportion of requests
                              forwarded to the referenced backend. This is computed
                              as weight/(sum of all weights in this BackendRefs list).
                              For non-zero values, there may be some epsilon from
                              the exact proportion defined here depending on the precision
                              an implementation supports. Weight is not a percentage
                              and the sum of weights does not need to equal 100. \n
                              If only one backend is specified and it has a weight
                              greater than 0, 100% of the traffic is forwarded to
                              that backend. If weight is set to 0, no traffic should
                              be forwarded for this entry. If unspecified, weight
                              defaults to 1. \n Support for this field varies based
                              on the context where used."
                            format: int32
                            maximum: 1000000
                            minimum: 0
                            type: integer
                        required:
                        - name
                        type: object
                      maxItems: 16
                      minItems: 1
                      type: array
                  type: object
                maxItems: 16
                minItems: 1
                type: array
            required:
            - rules
            type: object
          status:
            description: Status defines the current state of TCPRoute.
            properties:
              parents:
                description: "Parents is a list of parent resources (usually Gateways)
                  that are associated with the route, and the status of the route
                  with respect to each parent. When this route attaches to a parent,
                  the controller that manages the parent must add an entry to this
                  list when the controller first sees the route and should update
                  the entry as appropriate when the route or gateway is modified.
                  \n Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this
                  API can only populate Route status for the Gateways/parent resources
                  they are responsible for. \n A maximum of 32 Gateways will be represented
                  in this list. An empty list means the route has not been attached
                  to any Gateway."
                items:
                  description: RouteParentStatus describes the status of a route with
                    respect to an associated Parent.
                  properties:
                    conditions:
                      description: "Conditions describes the status of the route with
                        respect to the Gateway. Note that the route's availability
                        is also subject to the Gateway's own status conditions and
                        listener status. \n If the Route's ParentRef specifies an
                        existing Gateway that supports Routes of this kind AND that
                        Gateway's controller has sufficient access, then that Gateway's
                        controller MUST set the \"Accepted\" condition on the Route,
                        to indicate whether the route has been accepted or rejected
                        by the Gateway, and why. \n A Route MUST be considered \"Accepted\"
                        if at least one of the Route's rules is implemented by the
                        Gateway. \n There are a number of cases where the \"Accepted\"
                        condition may not be set due to lack of controller visibility,
                        that includes when: \n * The Route refers to a non-existent
                        parent. * The Route is of a type that the controller does
                        not support. * The Route is in a namespace the controller
                        does not have access to."
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource. --- This struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example, \n type FooStatus struct{
                          // Represents the observations of a foo's current state.
                          // Known .status.conditions.type are: \"Available\", \"Progressing\",
                          and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                          // +listType=map // +listMapKey=type Conditions []metav1.Condition
                          `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                          protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields
                          }"
                        properties:
                          lastTransitionTime:
                            description: lastTransitionTime is the last time the condition
                              transitioned from one status to another. This should
                              be when the underlying condition changed.  If that is
                              not known, then using the time when the API field changed
                              is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: message is a human readable message indicating
                              details about the transition. This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: observedGeneration represents the .metadata.generation
                              that the condition was set based upon. For instance,
                              if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                              is 9, the condition is out of date with respect to the
                              current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. The value should
                              be a CamelCase string. This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                              --- Many .condition.type values are consistent across
                              resources like Available, but because arbitrary conditions
                              can be useful (see .node.status.conditions), the ability
                              to deconflict is important. The regex it matches is
                              (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: "ControllerName is a domain/path string that indicates
                        the name of the controller that wrote this status. This corresponds
                        with the controllerName field on GatewayClass. \n Example:
                        \"example.net/gateway-controller\". \n The format of this
                        field is DOMAIN \"/\" PATH, where DOMAIN and PATH are valid
                        Kubernetes names (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                        \n Controllers MUST populate this field when writing status.
                        Controllers should ensure that entries to status populated
                        with their ControllerName are cleaned up when they are no
                        longer necessary."
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: ParentRef corresponds with a ParentRef in the spec
                        that this RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: "Group is the group of the referent. When unspecified,
                            \"gateway.networking.k8s.io\" is inferred. To set the
                            core API group (such as for a \"Service\" kind referent),
                            Group must be explicitly set to \"\" (empty string). \n
                            Support: Core"
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: "Kind is kind of the referent. \n Support:
                            Core (Gateway) \n Support: Implementation-specific (Other
                            Resources)"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: "Name is the name of the referent. \n Support:
                            Core"
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: "Namespace is the namespace of the referent.
                            When unspecified, this refers to the local namespace of
                            the Route. \n Note that there are specific rules for ParentRefs
                            which cross namespace boundaries. Cross-namespace references
                            are only valid if they are explicitly allowed by something
                            in the namespace they are referring to. For example: Gateway
                            has the AllowedRoutes field, and ReferenceGrant provides
                            a generic way to enable any other kind of cross-namespace
                            reference. \n Support: Core"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: "Port is the network port this Route targets.
                            It can be interpreted differently based on the type of
                            parent resource. \n When the parent resource is a Gateway,
                            this targets all listeners listening on the specified
                            port that also support this kind of Route(and select this
                            Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to
                            a specific port as opposed to a listener(s) whose port(s)
                            may be changed. When both Port and SectionName are specified,
                            the name and port of the selected listener must match
                            both specified values. \n Implementations MAY choose to
                            support other parent resources. Implementations supporting
                            other types of parent resources MUST clearly document
                            how/if Port is interpreted. \n For the purpose of status,
                            an attachment is considered successful as long as the
                            parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them
                            by Route kind, namespace, or hostname. If 1 of 2 Gateway
                            listeners accept attachment from the referencing Route,
                            the Route MUST be considered successfully attached. If
                            no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.
                            \n Support: Extended \n <gateway:experimental>"
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: "SectionName is the name of a section within
                            the target resource. In the following resources, SectionName
                            is interpreted as the following: \n * Gateway: Listener
                            Name. When both Port (experimental) and SectionName are
                            specified, the name and port of the selected listener
                            must match both specified values. \n Implementations MAY
                            choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName
                            is interpreted. \n When unspecified (empty string), this
                            will reference the entire resource. For the purpose of
                            status, an attachment is considered successful if at least
                            one section in the parent resource accepts it. For example,
                            Gateway listeners can restrict which Routes can attach
                            to them by Route kind, namespace, or hostname. If 1 of
                            2 Gateway listeners accept attachment from the referencing
                            Route, the Route MUST be considered successfully attached.
                            If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.
                            \n Support: Core"
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
# Source: eg-edge-stack-crds/templates/gwapi/gatewayapi-crds.yaml
#
# config/crd/experimental/gateway.networking.k8s.io_tlsroutes.yaml
#
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/1923
    gateway.networking.k8s.io/bundle-version: v0.7.1
    gateway.networking.k8s.io/channel: experimental
  creationTimestamp: null
  name: tlsroutes.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: TLSRoute
    listKind: TLSRouteList
    plural: tlsroutes
    singular: tlsroute
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: "The TLSRoute resource is similar to TCPRoute, but can be configured
          to match against TLS-specific metadata. This allows more flexibility in
          matching streams for a given TLS listener. \n If you need to forward traffic
          to a single target for a TLS listener, you could choose to use a TCPRoute
          with a TLS listener."
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of TLSRoute.
            properties:
              hostnames:
                description: "Hostnames defines a set of SNI names that should match
                  against the SNI attribute of TLS ClientHello message in TLS handshake.
                  This matches the RFC 1123 definition of a hostname with 2 notable
                  exceptions: \n 1. IPs are not allowed in SNI names per RFC 6066.
                  2. A hostname may be prefixed with a wildcard label (`*.`). The
                  wildcard label must appear by itself as the first label. \n If a
                  hostname is specified by both the Listener and TLSRoute, there must
                  be at least one intersecting hostname for the TLSRoute to be attached
                  to the Listener. For example: \n * A Listener with `test.example.com`
                  as the hostname matches TLSRoutes that have either not specified
                  any hostnames, or have specified at least one of `test.example.com`
                  or `*.example.com`. * A Listener with `*.example.com` as the hostname
                  matches TLSRoutes that have either not specified any hostnames or
                  have specified at least one hostname that matches the Listener hostname.
                  For example, `test.example.com` and `*.example.com` would both match.
                  On the other hand, `example.com` and `test.example.net` would not
                  match. \n If both the Listener and TLSRoute have specified hostnames,
                  any TLSRoute hostnames that do not match the Listener hostname MUST
                  be ignored. For example, if a Listener specified `*.example.com`,
                  and the TLSRoute specified `test.example.com` and `test.example.net`,
                  `test.example.net` must not be considered for a match. \n If both
                  the Listener and TLSRoute have specified hostnames, and none match
                  with the criteria above, then the TLSRoute is not accepted. The
                  implementation must raise an 'Accepted' Condition with a status
                  of `False` in the corresponding RouteParentStatus. \n Support: Core"
                items:
                  description: "Hostname is the fully qualified domain name of a network
                    host. This matches the RFC 1123 definition of a hostname with
                    2 notable exceptions: \n 1. IPs are not allowed. 2. A hostname
                    may be prefixed with a wildcard label (`*.`). The wildcard label
                    must appear by itself as the first label. \n Hostname can be \"precise\"
                    which is a domain name without the terminating dot of a network
                    host (e.g. \"foo.example.com\") or \"wildcard\", which is a domain
                    name prefixed with a single wildcard label (e.g. `*.example.com`).
                    \n Note that as per RFC1035 and RFC1123, a *label* must consist
                    of lower case alphanumeric characters or '-', and must start and
                    end with an alphanumeric character. No other punctuation is allowed."
                  maxLength: 253
                  minLength: 1
                  pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                maxItems: 16
                type: array
              parentRefs:
                description: "ParentRefs references the resources (usually Gateways)
                  that a Route wants to be attached to. Note that the referenced parent
                  resource needs to allow this for the attachment to be complete.
                  For Gateways, that means the Gateway needs to allow attachment from
                  Routes of this kind and namespace. \n The only kind of parent resource
                  with \"Core\" support is Gateway. This API may be extended in the
                  future to support additional kinds of parent resources such as one
                  of the route kinds. \n It is invalid to reference an identical parent
                  more than once. It is valid to reference multiple distinct sections
                  within the same parent resource, such as 2 Listeners within a Gateway.
                  \n It is possible to separately reference multiple distinct objects
                  that may be collapsed by an implementation. For example, some implementations
                  may choose to merge compatible Gateway Listeners together. If that
                  is the case, the list of routes attached to those resources should
                  also be merged. \n Note that for ParentRefs that cross namespace
                  boundaries, there are specific rules. Cross-namespace references
                  are only valid if they are explicitly allowed by something in the
                  namespace they are referring to. For example, Gateway has the AllowedRoutes
                  field, and ReferenceGrant provides a generic way to enable any other
                  kind of cross-namespace reference."
                items:
                  description: "ParentReference identifies an API object (usually
                    a Gateway) that can be considered a parent of this resource (usually
                    a route). The only kind of parent resource with \"Core\" support
                    is Gateway. This API may be extended in the future to support
                    additional kinds of parent resources, such as HTTPRoute. \n The
                    API object must be valid in the cluster; the Group and Kind must
                    be registered in the cluster for this reference to be valid."
                  properties:
                    group:
                      default: gateway.networking.k8s.io
                      description: "Group is the group of the referent. When unspecified,
                        \"gateway.networking.k8s.io\" is inferred. To set the core
                        API group (such as for a \"Service\" kind referent), Group
                        must be explicitly set to \"\" (empty string). \n Support:
                        Core"
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: "Kind is kind of the referent. \n Support: Core
                        (Gateway) \n Support: Implementation-specific (Other Resources)"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: "Name is the name of the referent. \n Support:
                        Core"
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: "Namespace is the namespace of the referent. When
                        unspecified, this refers to the local namespace of the Route.
                        \n Note that there are specific rules for ParentRefs which
                        cross namespace boundaries. Cross-namespace references are
                        only valid if they are explicitly allowed by something in
                        the namespace they are referring to. For example: Gateway
                        has the AllowedRoutes field, and ReferenceGrant provides a
                        generic way to enable any other kind of cross-namespace reference.
                        \n Support: Core"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    port:
                      description: "Port is the network port this Route targets. It
                        can be interpreted differently based on the type of parent
                        resource. \n When the parent resource is a Gateway, this targets
                        all listeners listening on the specified port that also support
                        this kind of Route(and select this Route). It's not recommended
                        to set `Port` unless the networking behaviors specified in
                        a Route must apply to a specific port as opposed to a listener(s)
                        whose port(s) may be changed. When both Port and SectionName
                        are specified, the name and port of the selected listener
                        must match both specified values. \n Implementations MAY choose
                        to support other parent resources. Implementations supporting
                        other types of parent resources MUST clearly document how/if
                        Port is interpreted. \n For the purpose of status, an attachment
                        is considered successful as long as the parent resource accepts
                        it partially. For example, Gateway listeners can restrict
                        which Routes can attach to them by Route kind, namespace,
                        or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this
                        Route, the Route MUST be considered detached from the Gateway.
                        \n Support: Extended \n <gateway:experimental>"
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    sectionName:
                      description: "SectionName is the name of a section within the
                        target resource. In the following resources, SectionName is
                        interpreted as the following: \n * Gateway: Listener Name.
                        When both Port (experimental) and SectionName are specified,
                        the name and port of the selected listener must match both
                        specified values. \n Implementations MAY choose to support
                        attaching Routes to other resources. If that is the case,
                        they MUST clearly document how SectionName is interpreted.
                        \n When unspecified (empty string), this will reference the
                        entire resource. For the purpose of status, an attachment
                        is considered successful if at least one section in the parent
                        resource accepts it. For example, Gateway listeners can restrict
                        which Routes can attach to them by Route kind, namespace,
                        or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this
                        Route, the Route MUST be considered detached from the Gateway.
                        \n Support: Core"
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
              rules:
                description: Rules are a list of TLS matchers and actions.
                items:
                  description: TLSRouteRule is the configuration for a given rule.
                  properties:
                    backendRefs:
                      description: "BackendRefs defines the backend(s) where matching
                        requests should be sent. If unspecified or invalid (refers
                        to a non-existent resource or a Service with no endpoints),
                        the rule performs no forwarding; if no filters are specified
                        that would result in a response being sent, the underlying
                        implementation must actively reject request attempts to this
                        backend, by rejecting the connection or returning a 500 status
                        code. Request rejections must respect weight; if an invalid
                        backend is requested to have 80% of requests, then 80% of
                        requests must be rejected instead. \n Support: Core for Kubernetes
                        Service \n Support: Extended for Kubernetes ServiceImport
                        \n Support: Implementation-specific for any other resource
                        \n Support for weight: Extended"
                      items:
                        description: "BackendRef defines how a Route should forward
                          a request to a Kubernetes resource. \n Note that when a
                          namespace different than the local namespace is specified,
                          a ReferenceGrant object is required in the referent namespace
                          to allow that namespace's owner to accept the reference.
                          See the ReferenceGrant documentation for details."
                        properties:
                          group:
                            default: ""
                            description: Group is the group of the referent. For example,
                              "gateway.networking.k8s.io". When unspecified or empty
                              string, core API group is inferred.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Service
                            description: "Kind is the Kubernetes resource kind of
                              the referent. For example \"Service\". \n Defaults to
                              \"Service\" when not specified. \n ExternalName services
                              can refer to CNAME DNS records that may live outside
                              of the cluster and as such are difficult to reason about
                              in terms of conformance. They also may not be safe to
                              forward to (see CVE-2021-25740 for more information).
                              Implementations SHOULD NOT support ExternalName Services.
                              \n Support: Core (Services with a type other than ExternalName)
                              \n Support: Implementation-specific (Services with type
                              ExternalName)"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the referent.
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: "Namespace is the namespace of the backend.
                              When unspecified, the local namespace is inferred. \n
                              Note that when a namespace different than the local
                              namespace is specified, a ReferenceGrant object is required
                              in the referent namespace to allow that namespace's
                              owner to accept the reference. See the ReferenceGrant
                              documentation for details. \n Support: Core"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: Port specifies the destination port number
                              to use for this resource. Port is required when the
                              referent is a Kubernetes Service. In this case, the
                              port number is the service port number, not the target
                              port. For other resources, destination port might be
                              derived from the referent resource or this field.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          weight:
                            default: 1
                            description: "Weight specifies the proportion of requests
                              forwarded to the referenced backend. This is computed
                              as weight/(sum of all weights in this BackendRefs list).
                              For non-zero values, there may be some epsilon from
                              the exact proportion defined here depending on the precision
                              an implementation supports. Weight is not a percentage
                              and the sum of weights does not need to equal 100. \n
                              If only one backend is specified and it has a weight
                              greater than 0, 100% of the traffic is forwarded to
                              that backend. If weight is set to 0, no traffic should
                              be forwarded for this entry. If unspecified, weight
                              defaults to 1. \n Support for this field varies based
                              on the context where used."
                            format: int32
                            maximum: 1000000
                            minimum: 0
                            type: integer
                        required:
                        - name
                        type: object
                      maxItems: 16
                      minItems: 1
                      type: array
                  type: object
                maxItems: 16
                minItems: 1
                type: array
            required:
            - rules
            type: object
          status:
            description: Status defines the current state of TLSRoute.
            properties:
              parents:
                description: "Parents is a list of parent resources (usually Gateways)
                  that are associated with the route, and the status of the route
                  with respect to each parent. When this route attaches to a parent,
                  the controller that manages the parent must add an entry to this
                  list when the controller first sees the route and should update
                  the entry as appropriate when the route or gateway is modified.
                  \n Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this
                  API can only populate Route status for the Gateways/parent resources
                  they are responsible for. \n A maximum of 32 Gateways will be represented
                  in this list. An empty list means the route has not been attached
                  to any Gateway."
                items:
                  description: RouteParentStatus describes the status of a route with
                    respect to an associated Parent.
                  properties:
                    conditions:
                      description: "Conditions describes the status of the route with
                        respect to the Gateway. Note that the route's availability
                        is also subject to the Gateway's own status conditions and
                        listener status. \n If the Route's ParentRef specifies an
                        existing Gateway that supports Routes of this kind AND that
                        Gateway's controller has sufficient access, then that Gateway's
                        controller MUST set the \"Accepted\" condition on the Route,
                        to indicate whether the route has been accepted or rejected
                        by the Gateway, and why. \n A Route MUST be considered \"Accepted\"
                        if at least one of the Route's rules is implemented by the
                        Gateway. \n There are a number of cases where the \"Accepted\"
                        condition may not be set due to lack of controller visibility,
                        that includes when: \n * The Route refers to a non-existent
                        parent. * The Route is of a type that the controller does
                        not support. * The Route is in a namespace the controller
                        does not have access to."
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource. --- This struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example, \n type FooStatus struct{
                          // Represents the observations of a foo's current state.
                          // Known .status.conditions.type are: \"Available\", \"Progressing\",
                          and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                          // +listType=map // +listMapKey=type Conditions []metav1.Condition
                          `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                          protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields
                          }"
                        properties:
                          lastTransitionTime:
                            description: lastTransitionTime is the last time the condition
                              transitioned from one status to another. This should
                              be when the underlying condition changed.  If that is
                              not known, then using the time when the API field changed
                              is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: message is a human readable message indicating
                              details about the transition. This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: observedGeneration represents the .metadata.generation
                              that the condition was set based upon. For instance,
                              if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                              is 9, the condition is out of date with respect to the
                              current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. The value should
                              be a CamelCase string. This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                              --- Many .condition.type values are consistent across
                              resources like Available, but because arbitrary conditions
                              can be useful (see .node.status.conditions), the ability
                              to deconflict is important. The regex it matches is
                              (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: "ControllerName is a domain/path string that indicates
                        the name of the controller that wrote this status. This corresponds
                        with the controllerName field on GatewayClass. \n Example:
                        \"example.net/gateway-controller\". \n The format of this
                        field is DOMAIN \"/\" PATH, where DOMAIN and PATH are valid
                        Kubernetes names (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                        \n Controllers MUST populate this field when writing status.
                        Controllers should ensure that entries to status populated
                        with their ControllerName are cleaned up when they are no
                        longer necessary."
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: ParentRef corresponds with a ParentRef in the spec
                        that this RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: "Group is the group of the referent. When unspecified,
                            \"gateway.networking.k8s.io\" is inferred. To set the
                            core API group (such as for a \"Service\" kind referent),
                            Group must be explicitly set to \"\" (empty string). \n
                            Support: Core"
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: "Kind is kind of the referent. \n Support:
                            Core (Gateway) \n Support: Implementation-specific (Other
                            Resources)"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: "Name is the name of the referent. \n Support:
                            Core"
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: "Namespace is the namespace of the referent.
                            When unspecified, this refers to the local namespace of
                            the Route. \n Note that there are specific rules for ParentRefs
                            which cross namespace boundaries. Cross-namespace references
                            are only valid if they are explicitly allowed by something
                            in the namespace they are referring to. For example: Gateway
                            has the AllowedRoutes field, and ReferenceGrant provides
                            a generic way to enable any other kind of cross-namespace
                            reference. \n Support: Core"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: "Port is the network port this Route targets.
                            It can be interpreted differently based on the type of
                            parent resource. \n When the parent resource is a Gateway,
                            this targets all listeners listening on the specified
                            port that also support this kind of Route(and select this
                            Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to
                            a specific port as opposed to a listener(s) whose port(s)
                            may be changed. When both Port and SectionName are specified,
                            the name and port of the selected listener must match
                            both specified values. \n Implementations MAY choose to
                            support other parent resources. Implementations supporting
                            other types of parent resources MUST clearly document
                            how/if Port is interpreted. \n For the purpose of status,
                            an attachment is considered successful as long as the
                            parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them
                            by Route kind, namespace, or hostname. If 1 of 2 Gateway
                            listeners accept attachment from the referencing Route,
                            the Route MUST be considered successfully attached. If
                            no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.
                            \n Support: Extended \n <gateway:experimental>"
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: "SectionName is the name of a section within
                            the target resource. In the following resources, SectionName
                            is interpreted as the following: \n * Gateway: Listener
                            Name. When both Port (experimental) and SectionName are
                            specified, the name and port of the selected listener
                            must match both specified values. \n Implementations MAY
                            choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName
                            is interpreted. \n When unspecified (empty string), this
                            will reference the entire resource. For the purpose of
                            status, an attachment is considered successful if at least
                            one section in the parent resource accepts it. For example,
                            Gateway listeners can restrict which Routes can attach
                            to them by Route kind, namespace, or hostname. If 1 of
                            2 Gateway listeners accept attachment from the referencing
                            Route, the Route MUST be considered successfully attached.
                            If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.
                            \n Support: Core"
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
# Source: eg-edge-stack-crds/templates/gwapi/gatewayapi-crds.yaml
#
# config/crd/experimental/gateway.networking.k8s.io_udproutes.yaml
#
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/1923
    gateway.networking.k8s.io/bundle-version: v0.7.1
    gateway.networking.k8s.io/channel: experimental
  creationTimestamp: null
  name: udproutes.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: UDPRoute
    listKind: UDPRouteList
    plural: udproutes
    singular: udproute
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: UDPRoute provides a way to route UDP traffic. When combined with
          a Gateway listener, it can be used to forward traffic on the port specified
          by the listener to a set of backends specified by the UDPRoute.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of UDPRoute.
            properties:
              parentRefs:
                description: "ParentRefs references the resources (usually Gateways)
                  that a Route wants to be attached to. Note that the referenced parent
                  resource needs to allow this for the attachment to be complete.
                  For Gateways, that means the Gateway needs to allow attachment from
                  Routes of this kind and namespace. \n The only kind of parent resource
                  with \"Core\" support is Gateway. This API may be extended in the
                  future to support additional kinds of parent resources such as one
                  of the route kinds. \n It is invalid to reference an identical parent
                  more than once. It is valid to reference multiple distinct sections
                  within the same parent resource, such as 2 Listeners within a Gateway.
                  \n It is possible to separately reference multiple distinct objects
                  that may be collapsed by an implementation. For example, some implementations
                  may choose to merge compatible Gateway Listeners together. If that
                  is the case, the list of routes attached to those resources should
                  also be merged. \n Note that for ParentRefs that cross namespace
                  boundaries, there are specific rules. Cross-namespace references
                  are only valid if they are explicitly allowed by something in the
                  namespace they are referring to. For example, Gateway has the AllowedRoutes
                  field, and ReferenceGrant provides a generic way to enable any other
                  kind of cross-namespace reference."
                items:
                  description: "ParentReference identifies an API object (usually
                    a Gateway) that can be considered a parent of this resource (usually
                    a route). The only kind of parent resource with \"Core\" support
                    is Gateway. This API may be extended in the future to support
                    additional kinds of parent resources, such as HTTPRoute. \n The
                    API object must be valid in the cluster; the Group and Kind must
                    be registered in the cluster for this reference to be valid."
                  properties:
                    group:
                      default: gateway.networking.k8s.io
                      description: "Group is the group of the referent. When unspecified,
                        \"gateway.networking.k8s.io\" is inferred. To set the core
                        API group (such as for a \"Service\" kind referent), Group
                        must be explicitly set to \"\" (empty string). \n Support:
                        Core"
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: "Kind is kind of the referent. \n Support: Core
                        (Gateway) \n Support: Implementation-specific (Other Resources)"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: "Name is the name of the referent. \n Support:
                        Core"
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: "Namespace is the namespace of the referent. When
                        unspecified, this refers to the local namespace of the Route.
                        \n Note that there are specific rules for ParentRefs which
                        cross namespace boundaries. Cross-namespace references are
                        only valid if they are explicitly allowed by something in
                        the namespace they are referring to. For example: Gateway
                        has the AllowedRoutes field, and ReferenceGrant provides a
                        generic way to enable any other kind of cross-namespace reference.
                        \n Support: Core"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    port:
                      description: "Port is the network port this Route targets. It
                        can be interpreted differently based on the type of parent
                        resource. \n When the parent resource is a Gateway, this targets
                        all listeners listening on the specified port that also support
                        this kind of Route(and select this Route). It's not recommended
                        to set `Port` unless the networking behaviors specified in
                        a Route must apply to a specific port as opposed to a listener(s)
                        whose port(s) may be changed. When both Port and SectionName
                        are specified, the name and port of the selected listener
                        must match both specified values. \n Implementations MAY choose
                        to support other parent resources. Implementations supporting
                        other types of parent resources MUST clearly document how/if
                        Port is interpreted. \n For the purpose of status, an attachment
                        is considered successful as long as the parent resource accepts
                        it partially. For example, Gateway listeners can restrict
                        which Routes can attach to them by Route kind, namespace,
                        or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this
                        Route, the Route MUST be considered detached from the Gateway.
                        \n Support: Extended \n <gateway:experimental>"
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    sectionName:
                      description: "SectionName is the name of a section within the
                        target resource. In the following resources, SectionName is
                        interpreted as the following: \n * Gateway: Listener Name.
                        When both Port (experimental) and SectionName are specified,
                        the name and port of the selected listener must match both
                        specified values. \n Implementations MAY choose to support
                        attaching Routes to other resources. If that is the case,
                        they MUST clearly document how SectionName is interpreted.
                        \n When unspecified (empty string), this will reference the
                        entire resource. For the purpose of status, an attachment
                        is considered successful if at least one section in the parent
                        resource accepts it. For example, Gateway listeners can restrict
                        which Routes can attach to them by Route kind, namespace,
                        or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this
                        Route, the Route MUST be considered detached from the Gateway.
                        \n Support: Core"
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
              rules:
                description: Rules are a list of UDP matchers and actions.
                items:
                  description: UDPRouteRule is the configuration for a given rule.
                  properties:
                    backendRefs:
                      description: "BackendRefs defines the backend(s) where matching
                        requests should be sent. If unspecified or invalid (refers
                        to a non-existent resource or a Service with no endpoints),
                        the underlying implementation MUST actively reject connection
                        attempts to this backend. Packet drops must respect weight;
                        if an invalid backend is requested to have 80% of the packets,
                        then 80% of packets must be dropped instead. \n Support: Core
                        for Kubernetes Service \n Support: Extended for Kubernetes
                        ServiceImport \n Support: Implementation-specific for any
                        other resource \n Support for weight: Extended"
                      items:
                        description: "BackendRef defines how a Route should forward
                          a request to a Kubernetes resource. \n Note that when a
                          namespace different than the local namespace is specified,
                          a ReferenceGrant object is required in the referent namespace
                          to allow that namespace's owner to accept the reference.
                          See the ReferenceGrant documentation for details."
                        properties:
                          group:
                            default: ""
                            description: Group is the group of the referent. For example,
                              "gateway.networking.k8s.io". When unspecified or empty
                              string, core API group is inferred.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Service
                            description: "Kind is the Kubernetes resource kind of
                              the referent. For example \"Service\". \n Defaults to
                              \"Service\" when not specified. \n ExternalName services
                              can refer to CNAME DNS records that may live outside
                              of the cluster and as such are difficult to reason about
                              in terms of conformance. They also may not be safe to
                              forward to (see CVE-2021-25740 for more information).
                              Implementations SHOULD NOT support ExternalName Services.
                              \n Support: Core (Services with a type other than ExternalName)
                              \n Support: Implementation-specific (Services with type
                              ExternalName)"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the referent.
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: "Namespace is the namespace of the backend.
                              When unspecified, the local namespace is inferred. \n
                              Note that when a namespace different than the local
                              namespace is specified, a ReferenceGrant object is required
                              in the referent namespace to allow that namespace's
                              owner to accept the reference. See the ReferenceGrant
                              documentation for details. \n Support: Core"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: Port specifies the destination port number
                              to use for this resource. Port is required when the
                              referent is a Kubernetes Service. In this case, the
                              port number is the service port number, not the target
                              port. For other resources, destination port might be
                              derived from the referent resource or this field.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          weight:
                            default: 1
                            description: "Weight specifies the proportion of requests
                              forwarded to the referenced backend. This is computed
                              as weight/(sum of all weights in this BackendRefs list).
                              For non-zero values, there may be some epsilon from
                              the exact proportion defined here depending on the precision
                              an implementation supports. Weight is not a percentage
                              and the sum of weights does not need to equal 100. \n
                              If only one backend is specified and it has a weight
                              greater than 0, 100% of the traffic is forwarded to
                              that backend. If weight is set to 0, no traffic should
                              be forwarded for this entry. If unspecified, weight
                              defaults to 1. \n Support for this field varies based
                              on the context where used."
                            format: int32
                            maximum: 1000000
                            minimum: 0
                            type: integer
                        required:
                        - name
                        type: object
                      maxItems: 16
                      minItems: 1
                      type: array
                  type: object
                maxItems: 16
                minItems: 1
                type: array
            required:
            - rules
            type: object
          status:
            description: Status defines the current state of UDPRoute.
            properties:
              parents:
                description: "Parents is a list of parent resources (usually Gateways)
                  that are associated with the route, and the status of the route
                  with respect to each parent. When this route attaches to a parent,
                  the controller that manages the parent must add an entry to this
                  list when the controller first sees the route and should update
                  the entry as appropriate when the route or gateway is modified.
                  \n Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this
                  API can only populate Route status for the Gateways/parent resources
                  they are responsible for. \n A maximum of 32 Gateways will be represented
                  in this list. An empty list means the route has not been attached
                  to any Gateway."
                items:
                  description: RouteParentStatus describes the status of a route with
                    respect to an associated Parent.
                  properties:
                    conditions:
                      description: "Conditions describes the status of the route with
                        respect to the Gateway. Note that the route's availability
                        is also subject to the Gateway's own status conditions and
                        listener status. \n If the Route's ParentRef specifies an
                        existing Gateway that supports Routes of this kind AND that
                        Gateway's controller has sufficient access, then that Gateway's
                        controller MUST set the \"Accepted\" condition on the Route,
                        to indicate whether the route has been accepted or rejected
                        by the Gateway, and why. \n A Route MUST be considered \"Accepted\"
                        if at least one of the Route's rules is implemented by the
                        Gateway. \n There are a number of cases where the \"Accepted\"
                        condition may not be set due to lack of controller visibility,
                        that includes when: \n * The Route refers to a non-existent
                        parent. * The Route is of a type that the controller does
                        not support. * The Route is in a namespace the controller
                        does not have access to."
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource. --- This struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example, \n type FooStatus struct{
                          // Represents the observations of a foo's current state.
                          // Known .status.conditions.type are: \"Available\", \"Progressing\",
                          and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                          // +listType=map // +listMapKey=type Conditions []metav1.Condition
                          `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                          protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields
                          }"
                        properties:
                          lastTransitionTime:
                            description: lastTransitionTime is the last time the condition
                              transitioned from one status to another. This should
                              be when the underlying condition changed.  If that is
                              not known, then using the time when the API field changed
                              is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: message is a human readable message indicating
                              details about the transition. This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: observedGeneration represents the .metadata.generation
                              that the condition was set based upon. For instance,
                              if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                              is 9, the condition is out of date with respect to the
                              current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. The value should
                              be a CamelCase string. This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                              --- Many .condition.type values are consistent across
                              resources like Available, but because arbitrary conditions
                              can be useful (see .node.status.conditions), the ability
                              to deconflict is important. The regex it matches is
                              (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: "ControllerName is a domain/path string that indicates
                        the name of the controller that wrote this status. This corresponds
                        with the controllerName field on GatewayClass. \n Example:
                        \"example.net/gateway-controller\". \n The format of this
                        field is DOMAIN \"/\" PATH, where DOMAIN and PATH are valid
                        Kubernetes names (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                        \n Controllers MUST populate this field when writing status.
                        Controllers should ensure that entries to status populated
                        with their ControllerName are cleaned up when they are no
                        longer necessary."
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: ParentRef corresponds with a ParentRef in the spec
                        that this RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: "Group is the group of the referent. When unspecified,
                            \"gateway.networking.k8s.io\" is inferred. To set the
                            core API group (such as for a \"Service\" kind referent),
                            Group must be explicitly set to \"\" (empty string). \n
                            Support: Core"
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: "Kind is kind of the referent. \n Support:
                            Core (Gateway) \n Support: Implementation-specific (Other
                            Resources)"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: "Name is the name of the referent. \n Support:
                            Core"
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: "Namespace is the namespace of the referent.
                            When unspecified, this refers to the local namespace of
                            the Route. \n Note that there are specific rules for ParentRefs
                            which cross namespace boundaries. Cross-namespace references
                            are only valid if they are explicitly allowed by something
                            in the namespace they are referring to. For example: Gateway
                            has the AllowedRoutes field, and ReferenceGrant provides
                            a generic way to enable any other kind of cross-namespace
                            reference. \n Support: Core"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: "Port is the network port this Route targets.
                            It can be interpreted differently based on the type of
                            parent resource. \n When the parent resource is a Gateway,
                            this targets all listeners listening on the specified
                            port that also support this kind of Route(and select this
                            Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to
                            a specific port as opposed to a listener(s) whose port(s)
                            may be changed. When both Port and SectionName are specified,
                            the name and port of the selected listener must match
                            both specified values. \n Implementations MAY choose to
                            support other parent resources. Implementations supporting
                            other types of parent resources MUST clearly document
                            how/if Port is interpreted. \n For the purpose of status,
                            an attachment is considered successful as long as the
                            parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them
                            by Route kind, namespace, or hostname. If 1 of 2 Gateway
                            listeners accept attachment from the referencing Route,
                            the Route MUST be considered successfully attached. If
                            no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.
                            \n Support: Extended \n <gateway:experimental>"
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: "SectionName is the name of a section within
                            the target resource. In the following resources, SectionName
                            is interpreted as the following: \n * Gateway: Listener
                            Name. When both Port (experimental) and SectionName are
                            specified, the name and port of the selected listener
                            must match both specified values. \n Implementations MAY
                            choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName
                            is interpreted. \n When unspecified (empty string), this
                            will reference the entire resource. For the purpose of
                            status, an attachment is considered successful if at least
                            one section in the parent resource accepts it. For example,
                            Gateway listeners can restrict which Routes can attach
                            to them by Route kind, namespace, or hostname. If 1 of
                            2 Gateway listeners accept attachment from the referencing
                            Route, the Route MUST be considered successfully attached.
                            If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.
                            \n Support: Core"
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
# Source: eg-edge-stack-crds/templates/gwapi/gatewayapi-crds.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gateway-api-admission
  labels:
    name: gateway-api
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update
---
# Source: eg-edge-stack-crds/templates/gwapi/gatewayapi-crds.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gateway-api-admission
  annotations:
  labels:
    name: gateway-api-webhook
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gateway-api-admission
subjects:
- kind: ServiceAccount
  name: gateway-api-admission
  namespace: gateway-system
---
# Source: eg-edge-stack-crds/templates/gwapi/gatewayapi-crds.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gateway-api-admission
  annotations:
  labels:
    name: gateway-api-webhook
  namespace: gateway-system
rules:
- apiGroups:
  - ''
  resources:
  - secrets
  verbs:
  - get
  - create
---
# Source: eg-edge-stack-crds/templates/gwapi/gatewayapi-crds.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gateway-api-admission
  annotations:
  labels:
    name: gateway-api-webhook
  namespace: gateway-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gateway-api-admission
subjects:
- kind: ServiceAccount
  name: gateway-api-admission
  namespace: gateway-system
---
# Source: eg-edge-stack-crds/templates/gwapi/gatewayapi-crds.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    name: gateway-api-webhook-server
  name: gateway-api-admission-server
  namespace: gateway-system
spec:
  type: ClusterIP
  ports:
  - name: https-webhook
    port: 443
    targetPort: 8443
  selector:
    name: gateway-api-admission-server
---
# Source: eg-edge-stack-crds/templates/gwapi/gatewayapi-crds.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-api-admission-server
  namespace: gateway-system
  labels:
    name: gateway-api-admission-server
spec:
  replicas: 1
  selector:
    matchLabels:
      name: gateway-api-admission-server
  template:
    metadata:
      name: gateway-api-admission-server
      labels:
        name: gateway-api-admission-server
    spec:
      containers:
      - name: webhook
        image: registry.k8s.io/gateway-api/admission-server:v0.7.1
        imagePullPolicy: Always
        args:
        - -logtostderr
        - --tlsCertFile=/etc/certs/cert
        - --tlsKeyFile=/etc/certs/key
        - -v=10
        - 2>&1
        ports:
        - containerPort: 8443
          name: webhook
        resources:
          limits:
            memory: 50Mi
            cpu: 100m
          requests:
            memory: 50Mi
            cpu: 100m
        volumeMounts:
        - name: webhook-certs
          mountPath: /etc/certs
          readOnly: true
        securityContext:
          readOnlyRootFilesystem: true
      volumes:
      - name: webhook-certs
        secret:
          secretName: gateway-api-admission
---
# Source: eg-edge-stack-crds/templates/gwapi/gatewayapi-crds.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: gateway-api-admission
  annotations:
  labels:
    name: gateway-api-webhook
  namespace: gateway-system
spec:
  template:
    metadata:
      name: gateway-api-admission-create
      labels:
        name: gateway-api-webhook
    spec:
      containers:
      - name: create
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.1.1
        imagePullPolicy: IfNotPresent
        args:
        - create
        - --host=gateway-api-admission-server,gateway-api-admission-server.gateway-system.svc
        - --namespace=gateway-system
        - --secret-name=gateway-api-admission
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      restartPolicy: OnFailure
      serviceAccountName: gateway-api-admission
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
---
# Source: eg-edge-stack-crds/templates/gwapi/gatewayapi-crds.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: gateway-api-admission-patch
  labels:
    name: gateway-api-webhook
  namespace: gateway-system
spec:
  template:
    metadata:
      name: gateway-api-admission-patch
      labels:
        name: gateway-api-webhook
    spec:
      containers:
      - name: patch
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.1.1
        imagePullPolicy: IfNotPresent
        args:
        - patch
        - --webhook-name=gateway-api-admission
        - --namespace=gateway-system
        - --patch-mutating=false
        - --patch-validating=true
        - --secret-name=gateway-api-admission
        - --patch-failure-policy=Fail
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      restartPolicy: OnFailure
      serviceAccountName: gateway-api-admission
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
---
# Source: eg-edge-stack-crds/templates/gwapi/gatewayapi-crds.yaml
# Copyright 2023 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# Gateway API Experimental channel install
#
---
# Source: eg-edge-stack-crds/templates/gwapi/gatewayapi-crds.yaml
#
# config/webhook/admission_webhook.yaml
#
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: gateway-api-admission
webhooks:
- name: validate.gateway.networking.k8s.io
  matchPolicy: Equivalent
  rules:
  - operations: [ "CREATE" , "UPDATE" ]
    apiGroups: [ "gateway.networking.k8s.io" ]
    apiVersions: [ "v1alpha2", "v1beta1" ]
    resources: [ "gateways", "gatewayclasses", "httproutes" ]
  failurePolicy: Fail
  sideEffects: None
  admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: gateway-api-admission-server
      namespace: gateway-system
      path: "/validate"
