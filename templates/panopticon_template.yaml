---
# Source: panopticon/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-panopticon
  namespace: default
  labels:
    helm.sh/chart: panopticon-v2024.2.5
    app.kubernetes.io/name: panopticon
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.12"
    app.kubernetes.io/managed-by: Helm
---
# Source: panopticon/templates/apiregistration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-panopticon-apiserver-cert
  namespace: default
  labels:
    helm.sh/chart: panopticon-v2024.2.5
    app.kubernetes.io/name: panopticon
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.12"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURiRENDQWxTZ0F3SUJBZ0lRTDVVYStMSVNyVmNjUVBnb1ZjbGZXekFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMU1UVXhNRFV6TlRKYUZ3MHpOREExTVRNeE1EVXpOVEphTUNJeApJREFlQmdOVkJBTVRGM0psYkdWaGMyVXRibUZ0WlMxd1lXNXZjSFJwWTI5dU1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXdqUlVLamtycTJkdkhQSUZnQzg4OWM3L0VFT1kwcDNFbXl0aUJjOXMKNXNnVnROc1lFTDJqbFE5UlorVnBXSTFEQTB2T2NtaXJrN28zK09BQ1EyU0lzenlGL1FDMS9QYVVZbXgrcXZYMwpJL0gwNkUrcGxCcGNLUUlIS1pkdXFlTmMrTURIQVBuWG9VM0hneWN2NCtlaGxiM1BXT3d2aXFpelpiODh2bFJvClhyY3VpZHBlaWJVaXVXNEprU2VldUV3TGFZWXZ5ejIxNjZDVGI3YjVUbXVlQ21iYWJQcXRDbDE2eU1uNmZVb2sKTmVnbGVHZk4vdE5rUEVZSEMrUkNva2JkMVFPZEJvMEFFZnVFaG1UTEp4dzdENTJPSGxTT2piZkR0V0c0azRyeQoyYjJaRFk5MU9vL2dzREtrSXBHZGxxMTdvZEpuaG5ieGQ5eDF2aHpwTmlLZjZ3SURBUUFCbzRHeU1JR3ZNQTRHCkExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWUQKVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVHRkVUs0aWlDLzNpUng0cUt1WmdMMUZoNVpDVEJQQmdOVgpIUkVFU0RCR2doOXlaV3hsWVhObExXNWhiV1V0Y0dGdWIzQjBhV052Ymk1a1pXWmhkV3gwZ2lOeVpXeGxZWE5sCkxXNWhiV1V0Y0dGdWIzQjBhV052Ymk1a1pXWmhkV3gwTG5OMll6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUEKalI3bUJMc2VsY1kzUUxkN0d1bzducmVVcW1jc0VNeUdZejdBSDlFNlFTL2FyYnY3WFd5aEdjRTFDVDYyWmxDcgpkUHFHWGRpS3hlL29FcVE2T0lZaTVWdFRVOUNDSGkrVDNJNTg4R3lDUi9ZM0dDMXFFem1TQ0NWNEpWU1dxL0ZFCjJMc0lxMWluUmxmWkpHajM1TUtBcGxDOWVhcEdzNmo0MHRhTFo0L2xJL3NsanVoYXZzcFNCamlvbGM2VDcwRTUKV09aOGxiSzdxUElaWW9pOTdUVGVHcVdWeThpNThWeWhNRWlaRGdzQ1FEQkFydDFpWDN6RDBlQ1Z4S095ZHArTgpmQWJwRUg3aTVubWFiYXFFVXZwZHVFa0RNT3RLbFVra1M1RGduV2NLeXE1RmxhbHN3dVQxcjVYa0pDeGhGZHpMCnltdTNVTVcxQzR1ZnZ4YXJVeUtvZlE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd2pSVUtqa3JxMmR2SFBJRmdDODg5YzcvRUVPWTBwM0VteXRpQmM5czVzZ1Z0TnNZCkVMMmpsUTlSWitWcFdJMURBMHZPY21pcms3bzMrT0FDUTJTSXN6eUYvUUMxL1BhVVlteCtxdlgzSS9IMDZFK3AKbEJwY0tRSUhLWmR1cWVOYytNREhBUG5Yb1UzSGd5Y3Y0K2VobGIzUFdPd3ZpcWl6WmI4OHZsUm9YcmN1aWRwZQppYlVpdVc0SmtTZWV1RXdMYVlZdnl6MjE2NkNUYjdiNVRtdWVDbWJhYlBxdENsMTZ5TW42ZlVva05lZ2xlR2ZOCi90TmtQRVlIQytSQ29rYmQxUU9kQm8wQUVmdUVobVRMSnh3N0Q1Mk9IbFNPamJmRHRXRzRrNHJ5MmIyWkRZOTEKT28vZ3NES2tJcEdkbHExN29kSm5obmJ4ZDl4MXZoenBOaUtmNndJREFRQUJBb0lCQVFDdDQxOE5JMzJuandqZAptUk0xMEpZNzNxbGhyYlVUdVBKR29oUzE4U0dvanJWbzU5aG5mUFlRek5OdVBPc1R3QUNsM2VXdmFXdGY3aGlaCi9qSG9tQWNTdmZtWExXREdiUjgxOWNHQllKVjJtUHBhWEtJUm0zeXp0ejRranBRbkNBN0NLUkxIRys1b1h4VnEKcU5ibnNRcHM0clRiQVRnY1pxdWpTaFdnc2tGMXMrMmtTSzAyUm4xRTRhRk5zeGJDdXZ1QVFJVjlJbnBvYXkvbQplemdRRGlFZ0FGZjB0Nk4vdHMrNWdmSkEyQjdPbHVRV1E3TmhKYnBsVWwycEdJT3djdzdaSVAxWDlrT3Z5R2xMCjhGVlJMVzJUK21XZnR5amN0L25QVWJnOGRvNGJFQmN0TWZmY2twU1AzTzdkR28zckhHengzNCtHOEoxWnZVaEMKTDJKYy9JYXBBb0dCQU5HRE84NHh6dGhoeUlFUjc2ODRMSkpBVklTdkgxc1dFT3VPYU56VEtGNkppUXM1NDI5RwprM0l4MSs5TEQ4UUduY29nV3lnRXlzUE1Henl4NTNhMy9nSTBPRU1yeHV6eng1blNUT0Vya3kwMVFraHlwZmRFCkdIek5jZUlYVmFCTlI2MXY0SXRuRmZYZVk5aWRQLzJMa1lydzdwYTFkUVZvckpVdVZJa0dub0g5QW9HQkFPMUwKamlySmk3dnhMTFRsMHc3TmZvZEFRU1RBdllWVnQ4RlF1WUxSUmpmYThEcHovcGllUDNlNWgyMk1BaExycG00bQplbnRpdFhCWVR5M0FLOVNTRjR2bXZGdndxclNZRGFjQTYzNUJZSHFaOFh0SEJFR1pOODJnRU1reER6OXhPV2YzCkpWYm55bklEZ1FpTFZDSXdaaDNpeW9ob25vcWVxUlVlcjBSSkRQb0hBb0dBY0diUHR4ZlJ1UlQ4MVFJaWJRYmUKSXJpUW4zNjBlOUdpMGoxYzFOd1VWR1BGT2xpY1JCN0JEQXJocG1mRzFZd1hLMUdnbGgrOENMOS8vVmdVcmdTWQpLZWFLS0w5YndkUW55Y2FocUV3UWNiaVpEdlV6UlMwclZnbUNoNkd0Tm9zL1lUVWNhcTJyZ25VRmJEa3hFMzNGClg1MVM0MWdHcUJnNFB2RFVPWTlyaXFFQ2dZQjdESExzUFJiNG5sZFFkdHk3RUZSTVRrVjVpWGk5YTNXZUNQNHAKbDl1Um16WjNHUzhzZE9MMGNvQ0hqZEtGZlMwUWNXT1NGOTErSkV6cXJId04vck8zR0M4VWZmZ0hMZEhtaDlPVgo1TkRpd25FMk85MDVKdnFJNWpmT0hHS0x3MnJCUHFkZUtWUVJTei9kN21IeVdLYWJXTDh0ZlJLNVR3emVwc3E3CjNpV2NnUUtCZ0NnRWh1M2hPMmlNU0d1cjM5T28xSHJsQWFIVlRSMGF3MEhQc0t4VHV3STltSlUzWjJMS0VIU1cKRHIyZ2hUdXJHVlc4VTlnVVNwMGJJT2Ezd0tpaG5HUnJWUFFvWVlMcHkvSXlVQ293OWVFSEtQditrS2pPbzIzUwpzQW9UeEpLU3ErTDZYT1dkR1lMbnNoMnplSTd5NFFwdDRTS00rSDJRNGgybGEzNUFUa1F3Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: panopticon/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-panopticon
  labels:
    helm.sh/chart: panopticon-v2024.2.5
    app.kubernetes.io/name: panopticon
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.12"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get", "patch", "delete"]
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs: ["delete", "get", "list", "watch", "patch"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - "*"
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: panopticon/templates/apiregistration.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-panopticon-apiserver-auth-delegator
  labels:
    helm.sh/chart: panopticon-v2024.2.5
    app.kubernetes.io/name: panopticon
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.12"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: release-name-panopticon
  namespace: default
---
# Source: panopticon/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-panopticon
  labels:
    helm.sh/chart: panopticon-v2024.2.5
    app.kubernetes.io/name: panopticon
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.12"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-panopticon
subjects:
- kind: ServiceAccount
  name: release-name-panopticon
  namespace: default
---
# Source: panopticon/templates/license-checker-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-panopticon-license-checker
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-checker
subjects:
- kind: ServiceAccount
  name: release-name-panopticon
  namespace: default
---
# Source: panopticon/templates/license-reader-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-panopticon-license-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-reader
subjects:
- kind: ServiceAccount
  name: release-name-panopticon
  namespace: default
---
# Source: panopticon/templates/apiregistration.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-panopticon-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    helm.sh/chart: panopticon-v2024.2.5
    app.kubernetes.io/name: panopticon
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.12"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: release-name-panopticon
  namespace: default
---
# Source: panopticon/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-panopticon
  namespace: default
  labels:
    helm.sh/chart: panopticon-v2024.2.5
    app.kubernetes.io/name: panopticon
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.12"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  # Port used to expose admission webhook apiserver
  - name: api
    port: 443
    targetPort: 8443
  - name: telemetry
    port: 8081
    targetPort: 8081
  selector:
    app.kubernetes.io/name: panopticon
    app.kubernetes.io/instance: release-name
---
# Source: panopticon/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-panopticon
  namespace: default
  labels:
    helm.sh/chart: panopticon-v2024.2.5
    app.kubernetes.io/name: panopticon
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.12"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: panopticon
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: panopticon
        app.kubernetes.io/instance: release-name
      annotations:
        checksum/apiregistration.yaml: d227ca47240217ec490857174fca642d7d060ff57b98e9f59b5cc33418aba3c1
    spec:
      
      serviceAccountName: release-name-panopticon
      containers:
      - name: operator
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        image: ghcr.io/appscode/panopticon:v0.0.12
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --authorization-always-allow-paths=/healthz
        - --authorization-always-allow-paths=/readyz
        - --authorization-always-allow-paths=/livez
        - --authorization-always-allow-paths=/metrics
        - --use-kubeapiserver-fqdn-for-aks=true
        - --enable-validating-webhook=true
        ports:
        - containerPort: 8443
        - containerPort: 8081
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          {}
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: release-name-panopticon-apiserver-cert
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: panopticon/templates/apiregistration.yaml
# register as aggregated apiserver
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.validators.metrics.appscode.com
  labels:
    helm.sh/chart: panopticon-v2024.2.5
    app.kubernetes.io/name: panopticon
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.12"
    app.kubernetes.io/managed-by: Helm
spec:
  group: validators.metrics.appscode.com
  version: v1alpha1
  service:
    namespace: default
    name: release-name-panopticon
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQUlaTE9WM2xWK2J5RzBHTVZtMUJDYkl3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05URTFNVEExTXpVeVdoY05NelF3TlRFek1UQTFNelV5V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTFhtCnp4ekN3QnZYekN2V3J0RjVvd3IxL09IMUNvZjRrbXFkakZJTlNQMjNtTkN4blVuZnZBRkpGUGc3RUsrQy9kZWMKOGM2N0daTjVnQXkrNDNuSjRBRUh5U2ZhdG5KWUxCOFNuNmxEKzNJR21PNVlUUElFNndEelNtUmU3MVNGTnJlVwpEeUpCNjE3ZE9UT3hJUDRYdm01K0xyOWlZUzR3cTZJYzVCaHFNeENvQXhCTUxCY3c0bnRyRGlmKzhuT1JjZUNpCk1aMEs5VE9QaTViMXk1OW9pclYvZzRZRE1wMFJRWWl0Z1o3ZEgvUndsa2lnSUoxRXJvblJtempGRGpHbE45TFoKa2tSNTVuVWU3RGUwMHpJNE92VWl2ZWhLMFUraGFteTAzYmxXMUdkNnhFbThMY0llMUxzODJXTEZVV2tHTTFteAptVCtxUjJSRUxaZ2VhMVVodVkwQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJUdGRVSzRpaUMvM2lSeDRxS3VaZ0wxRmg1WkNUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFwemV0TXdZSQo2VUE1R2ljb0hHcTlRZW5DRC9tc2JBRWFFVTBNcHlSVUJOcG84Tiszam5KTE5ya3BVRGVMUjMwT2xkZUVzd281CmxFVzFLTElJcjQ0a1haZ1RwUXdHaWZ0dE1DelZONnNzdkptWnFlWmttSTUrQ3ZaTVhERmVyUzVSRWt4blUzVFQKOHBvSExML3B1cTB2YUEvNFpjOWpxMHZGNnVTRUNCQm16R05CUEFhWm43UXM4NjR4ZlpCd3ZuVVBRS3BOaXhWbAp5aHVZeExPVmV6d0NXcDN0RHpHK3BEaVl6K0FQaElUNzViSzhaMGFEQ2JHenNRREVnOTdwSUhIOWh1citYYTR5Ck1KclBnOEN6czVGUFA1MnZRUG5jeFUwY1dlMXJFKzdLT29IZWF5TzJVTDNoMUxKTkhhWG51WU1tSE15N1VRL3MKKzdNTUE4bGxTaVVvdVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: panopticon/templates/license.yaml
# if license file is provided, then create a secret for license
---
# Source: panopticon/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: release-name-panopticon
  namespace: default
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: panopticon
    monitoring.appscode.com/prometheus: federated
spec:
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/name: panopticon
      app.kubernetes.io/instance: release-name
  endpoints:
  - port: api
    bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    scheme: https
    interval: 10s
    honorLabels: true
    tlsConfig:
      ca:
        secret:
          name: release-name-panopticon-apiserver-cert
          key: tls.crt
      serverName: "release-name-panopticon.default.svc"
  - port: telemetry
    bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    scheme: http
    interval: 10s
    honorLabels: true
---
# Source: panopticon/templates/license-checker-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-checker
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get"]
# Issue license
- apiGroups:
  - proxyserver.licenses.appscode.com
  resources:
  - licenserequests
  verbs: ["create"]
# Detect workload/owner of operator pod
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["get"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get"]
# Write events in case of license verification failure
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "create", "patch"]
---
# Source: panopticon/templates/license-reader-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-reader
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Detect license server endpoint for kubedb addons
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get"]
- nonResourceURLs:
  - /appscode/license
  verbs: ["get"]
---
# Source: panopticon/templates/cleaner.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-panopticon-cleaner
  namespace: default
  labels:
    helm.sh/chart: panopticon-v2024.2.5
    app.kubernetes.io/name: panopticon
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.12"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 120
  template:
    spec:
      
      serviceAccountName: release-name-panopticon
      containers:
      - name: busybox
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        image: ghcr.io/appscode/kubectl:v1.22
        command:
          - sh
          - -c
          - "sleep 2; \
           kubectl delete validatingwebhookconfigurations validators.metrics.appscode.com || true; \
           kubectl delete apiservice v1alpha1.validators.metrics.appscode.com || true;"
        imagePullPolicy: IfNotPresent
      restartPolicy: Never
      securityContext:
        fsGroup: 65535
---
# Source: panopticon/templates/validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.metrics.appscode.com
  labels:
    helm.sh/chart: panopticon-v2024.2.5
    app.kubernetes.io/name: panopticon
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.12"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
  - name: metricsconfigurations.validators.metrics.appscode.com
    clientConfig:
      service:
        namespace: default
        name: kubernetes
        path: /apis/validators.metrics.appscode.com/v1alpha1/metricsconfigurationwebhooks
      caBundle: dW5rbm93bg==
    rules:
      - operations:
          - CREATE
          - UPDATE
        apiGroups:
          - metrics.appscode.com
        apiVersions:
          - "*"
        resources:
          - metricsconfigurations
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: None
