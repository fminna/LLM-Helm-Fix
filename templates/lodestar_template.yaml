---
# Source: lodestar/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-lodestar
  labels:
    helm.sh/chart: lodestar-1.1.3
    app.kubernetes.io/name: lodestar
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  namespace: default
---
# Source: lodestar/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-lodestar-env
  labels:
    helm.sh/chart: lodestar-1.1.3
    app.kubernetes.io/name: lodestar
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: lodestar/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-lodestar-jwt
type: Opaque
data:
  jwt.hex: ZWNiMjJiYzI0ZTdkNDA2MWY3ZWQ2OTBjY2Q1ODQ2ZDdkNzNmNWQyYjk3MzMyNjdlMTJmNTY3OTAzOThkOTA4YQ==
---
# Source: lodestar/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: default-release-name-lodestar
  labels:
    helm.sh/chart: lodestar-1.1.3
    app.kubernetes.io/name: lodestar
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
---
# Source: lodestar/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: default-release-name-lodestar
  labels:
    helm.sh/chart: lodestar-1.1.3
    app.kubernetes.io/name: lodestar
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: default-release-name-lodestar
subjects:
  - kind: ServiceAccount
    name: release-name-lodestar
    namespace: default
---
# Source: lodestar/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-lodestar
  labels:
    helm.sh/chart: lodestar-1.1.3
    app.kubernetes.io/name: lodestar
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
---
# Source: lodestar/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-lodestar
  labels:
    helm.sh/chart: lodestar-1.1.3
    app.kubernetes.io/name: lodestar
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-lodestar
subjects:
  - kind: ServiceAccount
    name: release-name-lodestar
---
# Source: lodestar/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-lodestar-headless
  labels:
    helm.sh/chart: lodestar-1.1.3
    app.kubernetes.io/name: lodestar
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  ports:
    - port: 9000
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: 9000
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
    - port: 9596
      targetPort: http-api
      protocol: TCP
      name: http-api
    - port: 8008
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: lodestar
    app.kubernetes.io/instance: release-name
---
# Source: lodestar/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-lodestar
  labels:
    helm.sh/chart: lodestar-1.1.3
    app.kubernetes.io/name: lodestar
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9000
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: 9000
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
    - port: 9596
      targetPort: http-api
      protocol: TCP
      name: http-api
    - port: 8008
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: lodestar
    app.kubernetes.io/instance: release-name
---
# Source: lodestar/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-lodestar
  labels:
    helm.sh/chart: lodestar-1.1.3
    app.kubernetes.io/name: lodestar
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: lodestar
      app.kubernetes.io/instance: release-name
  serviceName: release-name-lodestar-headless
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: lodestar
        app.kubernetes.io/instance: release-name
      annotations:
        checksum/config: b737f62d90c4f0e02a44036a690ce0d8a40432b9ca3d69ee7e85d2083f86826d
    spec:
      # Needs to be set to false, otherwise it will inject "LODESTAR_PORT_*" env vars which the client uses as config args.
      # See: https://kubernetes.io/docs/concepts/services-networking/connect-applications-service/#accessing-the-service
      enableServiceLinks: false
      serviceAccountName: release-name-lodestar
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      initContainers:
        - name: init-chown-data
          image: "busybox:1.34.0"
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          command: ["chown", "-R", "10001:10001", "/data"]
          resources:
      
            {}
          volumeMounts:
            - name: storage
              mountPath: "/data"
      containers:
        - name: lodestar
          image: "chainsafe/lodestar:latest"
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -ac
            - >-
              node /usr/app/node_modules/.bin/lodestar
              beacon
              --dataDir=/data
              --discv5
              --listenAddress=0.0.0.0
              --port=9000
              --enr.ip=$(POD_IP)
              --enr.tcp=9000
              --enr.udp=9000
              --rest
              --rest.address=0.0.0.0
              --rest.port=9596
              --jwt-secret=/data/jwt.hex
              --metrics
              --metrics.address=0.0.0.0
              --metrics.port=8008
            
          securityContext:
            {}
          volumeMounts:
            - name: storage
              mountPath: "/data"
            - name: jwt
              mountPath: "/data/jwt.hex"
              subPath: jwt.hex
              readOnly: true
          ports:
            - name: p2p-tcp
              containerPort: 9000
              protocol: TCP
            - name: p2p-udp
              containerPort: 9000
              protocol: UDP
            - name: http-api
              containerPort: 9596
              protocol: TCP    
            - name: metrics
              containerPort: 8008
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 60
            periodSeconds: 120
            tcpSocket:
              port: http-api
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            tcpSocket:
              port: http-api
          resources:
            {}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
      nodeSelector:
        {}
      affinity:
        {}
      tolerations:
        []
      topologySpreadConstraints:
        []
      terminationGracePeriodSeconds: 300
      volumes:
        - name: jwt
          secret:
            secretName: release-name-lodestar-jwt
        - name: storage
          emptyDir: {}
---
# Source: lodestar/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-lodestar-test-connection"
  labels:
    helm.sh/chart: lodestar-1.1.3
    app.kubernetes.io/name: lodestar
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args: ['release-name-lodestar:9596/eth/v1/node/version']
  restartPolicy: Never
