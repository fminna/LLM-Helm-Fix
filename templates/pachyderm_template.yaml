---
# Source: pachyderm/templates/pachd_sa.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: release-name-pachyderm
  labels:
    app: release-name-pachyderm
    chart: "pachyderm-0.2.1"
    release: "release-name"
    heritage: "Helm"
    suite: release-name-pachyderm
---
# Source: pachyderm/templates/pachd_secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: pachyderm-storage-secret
  labels:
    app: release-name-pachyderm
    chart: "pachyderm-0.2.1"
    release: "release-name"
    heritage: "Helm"
    suite: release-name-pachyderm
data:
---
# Source: pachyderm/templates/pachd_cluster_role.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: release-name-pachyderm
  creationTimestamp:
  labels:
    app: ''
    suite: release-name-pachyderm
rules:
- verbs:
  - get
  - list
  - watch
  apiGroups:
  - ''
  resources:
  - nodes
  - pods
  - pods/log
  - endpoints
- verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  apiGroups:
  - ''
  resources:
  - replicationcontrollers
  - services
- verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  apiGroups:
  - ''
  resources:
  - secrets
  resourceNames:
  - pachyderm-storage-secret
---
# Source: pachyderm/templates/pachd_rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: release-name-pachyderm
roleRef:
  apiGroup: ''
  kind: ClusterRole
  name: release-name-pachyderm
subjects:
  - kind: ServiceAccount
    name: release-name-pachyderm
    namespace: default
---
# Source: pachyderm/templates/etcd_svc.yaml
kind: Service
apiVersion: v1
metadata:
  name: etcd
  labels:
    app: release-name-etcd
    chart: "pachyderm-0.2.1"
    release: "release-name"
    heritage: "Helm"
    suite: release-name-pachyderm
spec:
  ports:
    - name: client-port
      port: 2379
      targetPort: 0
  selector:
    app: release-name-etcd
  type: NodePort
---
# Source: pachyderm/templates/pachd_svc.yaml
kind: Service
apiVersion: v1
metadata:
  name: pachd-api-grpc
  labels:
    app: pachd
    chart: "pachyderm-0.2.1"
    release: "release-name"
    heritage: "Helm"
    suite: release-name-pachyderm
spec:
  ports:
    - name: api-grpc-port
      port: 30650
      targetPort: 650
      nodePort: 30650
  selector:
    app: pachd
  type: "NodePort"
---
# Source: pachyderm/templates/pachd_svc.yaml
kind: Service
apiVersion: v1
metadata:
  name: pachd-trace
  labels:
    app: pachd
    chart: "pachyderm-0.2.1"
    release: "release-name"
    heritage: "Helm"
    suite: release-name-pachyderm
spec:
  ports:
    - name: trace-port
      port: 651
      targetPort: 651
      nodePort: 30651
  selector:
    app: pachd
  type: "NodePort"
---
# Source: pachyderm/templates/pachd_svc.yaml
kind: Service
apiVersion: v1
metadata:
  name: pachd-api-http
  labels:
    app: pachd
    chart: "pachyderm-0.2.1"
    release: "release-name"
    heritage: "Helm"
    suite: release-name-pachyderm
spec:
  ports:
    - name: api-http-port
      port: 652
      targetPort: 652
      nodePort: 30652
  selector:
    app: pachd
  type: "NodePort"
---
# Source: pachyderm/templates/etcd_deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: etcd
  labels:
    app: release-name-etcd
    chart: "pachyderm-0.2.1"
    release: "release-name"
    heritage: "Helm"
    suite: release-name-pachyderm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: release-name-etcd
      suite: release-name-pachyderm
  template:
    metadata:
      name: etcd
      labels:
        app: release-name-etcd
        suite: release-name-pachyderm
    spec:
      volumes:
        - name: etcdvol
          hostPath:
           path: "/var/pachyderm/etcd"
      containers:
        - name: etcd
          image: 'registry.cn-hangzhou.aliyuncs.com/kubeapps/quay-etcd:v3.3.5'
          command:
          - "/usr/local/bin/etcd"
          - "--listen-client-urls=http://0.0.0.0:2379"
          - "--advertise-client-urls=http://0.0.0.0:2379"
          - "--data-dir=/var/data/etcd"
          - "--auto-compaction-retention=1"
          - "--max-txn-ops=5000"
          ports:
            - name: client-port
              containerPort: 2379
            - name: peer-port
              containerPort: 2380
          resources:
           requests:
            cpu: '250m'
            memory: 256M
          volumeMounts:
            - name: etcdvol
              mountPath: "/var/data/etcd"
          imagePullPolicy: IfNotPresent
---
# Source: pachyderm/templates/pachd_deployment.yaml
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: pachd
  labels:
    app: pachd
    chart: "pachyderm-0.2.1"
    release: "release-name"
    heritage: "Helm"
    suite: release-name-pachyderm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pachd
      suite: release-name-pachyderm
  template:
    metadata:
      name: pachd
      annotations:
      labels:
        app: pachd
        suite: release-name-pachyderm
    spec:
      volumes:
      - name: pachdvol
        hostPath:
         path: "/var/pachyderm/pachd"
      - name: pachyderm-storage-secret
        secret:
          secretName: pachyderm-storage-secret
      containers:
      - name: pachd
        image: 'pachyderm/pachd:1.8.6'
        ports:
        - name: api-grpc-port
          containerPort: 650
          protocol: TCP
        - name: trace-port
          containerPort: 651
        - name: api-http-port
          containerPort: 652
        env:
        - name: EXPOSE_OBJECT_API
          value: "false"
        - name: PACH_ROOT
          value: "/pach"
        - name: NUM_SHARDS
          value: '16'
        - name: STORAGE_BACKEND
          value: LOCAL
        - name: STORAGE_HOST_PATH
          value: "/var/pachyderm/pachd"
        - name: GOOGLE_BUCKET
          valueFrom:
            secretKeyRef:
              name: pachyderm-storage-secret
              key: google-bucket
              optional: true
        - name: GOOGLE_CRED
          valueFrom:
            secretKeyRef:
              name: pachyderm-storage-secret
              key: google-cred
              optional: true
        - name: AMAZON_BUCKET
          valueFrom:
            secretKeyRef:
              name: pachyderm-storage-secret
              key: amazon-bucket
              optional: true
        - name: AMAZON_DISTRIBUTION
          valueFrom:
            secretKeyRef:
              name: pachyderm-storage-secret
              key: amazon-distribution
              optional: true
        - name: AMAZON_ID
          valueFrom:
            secretKeyRef:
              name: pachyderm-storage-secret
              key: amazon-id
              optional: true
        - name: AMAZON_SECRET
          valueFrom:
            secretKeyRef:
              name: pachyderm-storage-secret
              key: amazon-secret
              optional: true
        - name: AMAZON_REGION
          valueFrom:
            secretKeyRef:
              name: pachyderm-storage-secret
              key: amazon-region
              optional: true
        - name: AMAZON_TOKEN
          valueFrom:
            secretKeyRef:
              name: pachyderm-storage-secret
              key: amazon-token
              optional: true
        - name: MICROSOFT_CONTAINER
          valueFrom:
            secretKeyRef:
              name: pachyderm-storage-secret
              key: microsoft-container
              optional: true
        - name: MICROSOFT_ID
          valueFrom:
            secretKeyRef:
              name: pachyderm-storage-secret
              key: microsoft-id
              optional: true
        - name: MICROSOFT_SECRET
          valueFrom:
            secretKeyRef:
              name: pachyderm-storage-secret
              key: microsoft-secret
              optional: true
        - name: MINIO_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: pachyderm-storage-secret
              key: minio-endpoint
              optional: true
        - name: MINIO_BUCKET
          valueFrom:
            secretKeyRef:
              name: pachyderm-storage-secret
              key: minio-bucket
              optional: true
        - name: MINIO_SECURE
          valueFrom:
            secretKeyRef:
              name: pachyderm-storage-secret
              key: minio-secure
              optional: true
        - name: MINIO_ID
          valueFrom:
            secretKeyRef:
              name: pachyderm-storage-secret
              key: minio-id
              optional: true
        - name: MINIO_SECRET
          valueFrom:
            secretKeyRef:
              name: pachyderm-storage-secret
              key: minio-secret
              optional: true
        - name: MINIO_SIGNATURE
          valueFrom:
            secretKeyRef:
              name: pachyderm-storage-secret
              key: minio-signature
              optional: true
        - name: PACHD_POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: WORKER_IMAGE
          value: 'pachyderm/worker:1.8.6'
        - name: WORKER_SIDECAR_IMAGE
          value: 'pachyderm/pachd:1.8.6'
        - name: WORKER_IMAGE_PULL_POLICY
          value: IfNotPresent
        - name: PACHD_VERSION
          value: 1.8.6
        - name: METRICS
          value: 'true'
        - name: LOG_LEVEL
          value: info
        - name: BLOCK_CACHE_BYTES
          value: '0G'
        - name: PACHYDERM_AUTHENTICATION_DISABLED_FOR_TESTING
          value: 'false'
        resources:
          requests:
            cpu: '250m'
            memory: 512M
        volumeMounts:
        - name: pachdvol
          mountPath: "/pach"
        - name: pachyderm-storage-secret
          mountPath: "/pachyderm-storage-secret"
        imagePullPolicy: Always
        securityContext:
          privileged: true
      serviceAccountName: release-name-pachyderm
  strategy: {}
status: {}
