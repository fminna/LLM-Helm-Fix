---
# Source: resource-binding-operator/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: resource-binding-operator
  labels:
    app.kubernetes.io/name: resource-binding-operator
    helm.sh/chart: resource-binding-operator-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
# Source: resource-binding-operator/templates/crds/resourcebinding.rock8s.com_resourcebindings.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: resourcebindings.resourcebinding.rock8s.com
spec:
  group: resourcebinding.rock8s.com
  names:
    kind: ResourceBinding
    listKind: ResourceBindingList
    plural: resourcebindings
    singular: resourcebinding
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ResourceBinding is the Schema for the resourcebindings API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ResourceBindingSpec defines the desired state of ResourceBinding
            properties:
              resource:
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: resource name
                    type: string
                type: object
              status:
                additionalProperties:
                  type: string
                description: a mapping of values from the bound resource to the status
                  output
                type: object
            type: object
          status:
            description: ResourceBindingStatus defines the observed state of ResourceBinding
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                format: int64
                type: integer
              ownerReferences:
                items:
                  description: OwnerReference contains enough information to let you
                    identify an owning object. An owning object must be in the same
                    namespace as the dependent, or be cluster-scoped, so there is
                    no namespace field.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    blockOwnerDeletion:
                      description: If true, AND if the owner has the "foregroundDeletion"
                        finalizer, then the owner cannot be deleted from the key-value
                        store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion
                        for how the garbage collector interacts with this field and
                        enforces the foreground deletion. Defaults to false. To set
                        this field, a user needs "delete" permission of the owner,
                        otherwise 422 (Unprocessable Entity) will be returned.
                      type: boolean
                    controller:
                      description: If true, this reference points to the managing
                        controller.
                      type: boolean
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                      type: string
                  required:
                  - apiVersion
                  - kind
                  - name
                  - uid
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              resource:
                additionalProperties:
                  type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: resource-binding-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: resource-binding-operator
  labels:
    app.kubernetes.io/name: resource-binding-operator
    helm.sh/chart: resource-binding-operator-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:

# auth_proxy_role.yaml
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create

# leader_election_role.yaml
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch

# role.yaml
- apiGroups:
  - resourcebinding.rock8s.com
  resources:
  - resourcebindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - resourcebinding.rock8s.com
  resources:
  - resourcebindings/finalizers
  verbs:
  - update
- apiGroups:
  - resourcebinding.rock8s.com
  resources:
  - resourcebindings/status
  verbs:
  - get
  - patch
  - update

# read all
- apiGroups:
  - "*"
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: resource-binding-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: resource-binding-operator
  labels:
    app.kubernetes.io/name: resource-binding-operator
    helm.sh/chart: resource-binding-operator-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: resource-binding-operator
subjects:
  - kind: ServiceAccount
    name: resource-binding-operator
    namespace: default
---
# Source: resource-binding-operator/templates/deployments/resource-binding-operator.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: resource-binding-operator
  labels:
    app: resource-binding-operator
    chart: resource-binding-operator-0.1.0
    release: release-name
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: resource-binding-operator
      release: release-name
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: resource-binding-operator
        release: release-name
    spec:
      serviceAccountName: resource-binding-operator
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 89
              preference:
                matchExpressions:
                  - key: application/state
                    operator: In
                    values:
                      - stateless
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 90
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - resource-binding-operator
      containers:
        - name: resource-binding-operator
          image: registry.gitlab.com/bitspur/rock8s/resource-binding-operator:0.1.0
          imagePullPolicy: IfNotPresent
          args:
            - '--leader-elect'
            - '--health-probe-bind-address=:8081'
          resources:
            requests:
              cpu: 100m
              memory: 20Mi
            limits:
              cpu: 200m
              memory: 60Mi
          env:
            - name: MAX_CONCURRENT_RECONCILES
              value: "3"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
