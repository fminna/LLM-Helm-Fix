---
# Source: stress/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-stress
  labels:
    helm.sh/chart: stress-0.2.0
    app.kubernetes.io/name: stress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
---
# Source: stress/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-stress
data:
  run.sh: |
    apt-get update
    apt-get install stress
    stress --help
---
# Source: stress/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-stress
  labels:
    helm.sh/chart: stress-0.2.0
    app.kubernetes.io/name: stress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: stress
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: stress
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-stress
      securityContext:
        fsGroup: 0
      containers:
        - name: stress
          securityContext:
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
          image: "ubuntu:latest"
          imagePullPolicy: Always
          command:
            - bash
            - -c
            - |
              cp /scripts/run.sh /tmp/run.sh
              chmod +x /tmp/run.sh
              /tmp/run.sh
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            {}
          volumeMounts:
          - name: scripts
            mountPath: /scripts
          - name: tmp
            mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      - name: scripts
        configMap:
          name: release-name-stress
