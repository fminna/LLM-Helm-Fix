---
# Source: testkube/charts/nats/templates/pod-disruption-budget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: nats
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nats
    app.kubernetes.io/version: 2.10.9
    helm.sh/chart: nats-1.1.7
  name: release-name-nats
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: nats
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: nats
---
# Source: testkube/charts/mongodb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: testkube-mongodb
  namespace: "default"
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-13.10.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
secrets:
  - name: testkube-mongodb
automountServiceAccountToken: true
---
# Source: testkube/charts/testkube-api/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: testkube-api-server
  labels:
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
---
# Source: testkube/charts/testkube-api/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: testkube-api-server-tests-job
  labels:
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
---
# Source: testkube/charts/testkube-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: testkube-operator-controller-manager
  namespace: default
  labels:
    app.kubernetes.io/version: "1.17.15"
    helm.sh/chart: testkube-operator-1.17.15
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: testkube-operator
    app.kubernetes.io/instance: release-name
---
# Source: testkube/charts/nats/templates/nats-box/contexts-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: nats-box
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nats
    app.kubernetes.io/version: 2.10.9
    helm.sh/chart: nats-1.1.7
  name: release-name-nats-box-contexts
stringData:
  default.json: |
    {
      "url": "nats://release-name-nats"
    }
type: Opaque
---
# Source: testkube/charts/mongodb/templates/common-scripts-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: testkube-mongodb-common-scripts
  namespace: "default"
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-13.10.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
data:
  startup-probe.sh: |
    #!/bin/bash
    mongosh  $TLS_OPTIONS --port $MONGODB_PORT_NUMBER --eval 'db.hello().isWritablePrimary || db.hello().secondary' | grep 'true'
  readiness-probe.sh: |
    #!/bin/bash
    # Run the proper check depending on the version
    [[ $(mongod -version | grep "db version") =~ ([0-9]+\.[0-9]+\.[0-9]+) ]] && VERSION=${BASH_REMATCH[1]}
    . /opt/bitnami/scripts/libversion.sh
    VERSION_MAJOR="$(get_sematic_version "$VERSION" 1)"
    VERSION_MINOR="$(get_sematic_version "$VERSION" 2)"
    VERSION_PATCH="$(get_sematic_version "$VERSION" 3)"
    if [[ ( "$VERSION_MAJOR" -ge 5 ) || ( "$VERSION_MAJOR" -ge 4 && "$VERSION_MINOR" -ge 4 && "$VERSION_PATCH" -ge 2 ) ]]; then
        mongosh $TLS_OPTIONS --port $MONGODB_PORT_NUMBER --eval 'db.hello().isWritablePrimary || db.hello().secondary' | grep 'true'
    else
        mongosh  $TLS_OPTIONS --port $MONGODB_PORT_NUMBER --eval 'db.isMaster().ismaster || db.isMaster().secondary' | grep 'true'
    fi
  ping-mongodb.sh: |
    #!/bin/bash
    mongosh  $TLS_OPTIONS --port $MONGODB_PORT_NUMBER --eval "db.adminCommand('ping')"
---
# Source: testkube/charts/nats/templates/config-map.yaml
apiVersion: v1
data:
  nats.conf: |
    {
      "http_port": 8222,
      "jetstream": {
        "max_file_store": 10Gi,
        "max_memory_store": 0,
        "store_dir": "/data"
      },
      "lame_duck_duration": "30s",
      "lame_duck_grace_period": "10s",
      "max_payload": 8MB,
      "pid_file": "/var/run/nats/nats.pid",
      "port": 4222,
      "server_name": $SERVER_NAME
    }
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: nats
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nats
    app.kubernetes.io/version: 2.10.9
    helm.sh/chart: nats-1.1.7
  name: release-name-nats-config
---
# Source: testkube/charts/testkube-api/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: testkube-api-server
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
data:
  executors.json: |-
    [
      {
        "name": "tracetest-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-tracetest-executor:1.17.29",
          "command": [
            "tracetest"
          ],
          "args": [
            "test",
            "run",
            "--server-url",
            "<tracetestServer>",
            "--definition",
            "<filePath>",
            "--wait-for-result",
            "--output",
            "pretty"
          ],
          "types": [
            "tracetest/test"
          ],
          "contentTypes": [
            "string",
            "file-uri",
            "git"
          ],
          "features": [
            "artifacts"
          ],
          "meta": {
            "iconURI": "tracetest",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-tracetest"
          }
        }
      },
      {
        "name": "zap-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-zap-executor:1.17.29",
          "command": [
            "<pythonScriptPath>"
          ],
          "args": [
            "<fileArgs>"
          ],
          "types": [
            "zap/api",
            "zap/baseline",
            "zap/full"
          ],
          "contentTypes": [
            "string",
            "file-uri",
            "git"
          ],
          "features": [
            "artifacts"
          ],
          "meta": {
            "iconURI": "zap",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-zap"
          }
        }
      },
      {
        "name": "playwright-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-playwright-executor:1.17.29",
          "command": [
            "<depManager>"
          ],
          "args": [
            "<depCommand>",
            "playwright",
            "test"
          ],
          "types": [
            "playwright/test"
          ],
          "contentTypes": [
            "git-dir",
            "git"
          ],
          "features": [
            "artifacts"
          ],
          "meta": {
            "iconURI": "playwright",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-playwright"
          }
        }
      },
      {
        "name": "jmeter-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-jmeter-executor:1.17.29",
          "command": [
            "<entryPoint>"
          ],
          "args": [
            "-n",
            "-j",
            "<logFile>",
            "-t",
            "<runPath>",
            "-l",
            "<jtlFile>",
            "-o",
            "<reportFile>",
            "-e",
            "<envVars>"
          ],
          "types": [
            "jmeter/test"
          ],
          "contentTypes": [
            "string",
            "file-uri",
            "git-file",
            "git-dir",
            "git"
          ],
          "features": [
            "artifacts"
          ],
          "meta": {
            "iconURI": "jmeter",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-jmeter"
          }
        }
      },
      {
        "name": "jmeterd-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-jmeterd-executor:1.17.29",
          "command": [
            "<entryPoint>"
          ],
          "slaves": {
            "image": "kubeshop/testkube-jmeterd-slave:1.17.29"
          },
          "args": [
            "-n",
            "-j",
            "<logFile>",
            "-t",
            "<runPath>",
            "-l",
            "<jtlFile>",
            "-o",
            "<reportFile>",
            "-e",
            "<envVars>"
          ],
          "types": [
            "jmeterd/test"
          ],
          "contentTypes": [
            "string",
            "file-uri",
            "git-file",
            "git-dir",
            "git"
          ],
          "features": [
            "artifacts"
          ],
          "meta": {
            "iconURI": "jmeter",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-jmeter"
          }
        }
      },
      {
        "name": "ginkgo-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-ginkgo-executor:1.17.29",
          "command": [
            "ginkgo"
          ],
          "args": [
            "-r",
            "-p",
            "--randomize-all",
            "--randomize-suites",
            "--keep-going",
            "--trace",
            "--junit-report",
            "<reportFile>",
            "<envVars>",
            "<runPath>"
          ],
          "types": [
            "ginkgo/test"
          ],
          "contentTypes": [
            "string",
            "file-uri",
            "git-file",
            "git-dir",
            "git"
          ],
          "features": [
            "artifacts",
            "junit-report"
          ],
          "meta": {
            "iconURI": "ginkgo",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-ginkgo"
          }
        }
      },
      {
        "name": "maven-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-maven-executor:1.17.29",
          "command": [
            "mvn"
          ],
          "args": [
            "--settings",
            "<settingsFile>",
            "<goalName>",
            "-Duser.home",
            "<mavenHome>"
          ],
          "types": [
            "maven/project",
            "maven/test",
            "maven/integration-test"
          ],
          "contentTypes": [
            "git-dir",
            "git"
          ],
          "features": [
            "artifacts"
          ],
          "meta": {
            "iconURI": "maven",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-maven"
          }
        }
      },
      {
        "name": "gradle-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-gradle-executor:1.17.29",
          "command": [
            "gradle"
          ],
          "args": [
            "--no-daemon",
            "<taskName>",
            "-p",
            "<projectDir>"
          ],
          "types": [
            "gradle/project",
            "gradle/test",
            "gradle/integrationTest"
          ],
          "contentTypes": [
            "git-dir",
            "git"
          ],
          "features": [
            "artifacts"
          ],
          "meta": {
            "iconURI": "gradle",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-gradle"
          }
        }
      },
      {
        "name": "kubepug-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-kubepug-executor:1.17.29",
          "command": [
            "kubepug"
          ],
          "args": [
            "--format=json",
            "--input-file",
            "<runPath>"
          ],
          "types": [
            "kubepug/yaml",
            "kubepug/json"
          ],
          "contentTypes": [
            "string",
            "file-uri",
            "git-file",
            "git-dir",
            "git"
          ],
          "features": [
            "artifacts"
          ],
          "meta": {
            "iconURI": "kubepug",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-kubepug"
          }
        }
      },
      {
        "name": "soapui-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-soapui-executor:1.17.29",
          "command": [
            "/bin/sh",
            "/usr/local/SmartBear/EntryPoint.sh"
          ],
          "args": [
            "<runPath>"
          ],
          "types": [
            "soapui/xml"
          ],
          "contentTypes": [
            "string",
            "file-uri",
            "git-file",
            "git-dir",
            "git"
          ],
          "features": [
            "artifacts"
          ],
          "meta": {
            "iconURI": "soapui",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-soapui"
          }
        }
      },
      {
        "name": "k6-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-k6-executor:1.17.29",
          "command": [
            "k6"
          ],
          "args": [
            "<k6Command>",
            "<envVars>",
            "<runPath>"
          ],
          "types": [
            "k6/script"
          ],
          "contentTypes": [
            "string",
            "file-uri",
            "git-file",
            "git-dir",
            "git"
          ],
          "features": [
            "artifacts"
          ],
          "meta": {
            "iconURI": "k6",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-k6"
          }
        }
      },
      {
        "name": "cypress-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-cypress-executor:1.17.29",
          "command": [
            "./node_modules/cypress/bin/cypress"
          ],
          "args": [
            "run",
            "--reporter",
            "junit",
            "--reporter-options",
            "mochaFile=<reportFile>,toConsole=false",
            "--project",
            "<projectPath>",
            "--env",
            "<envVars>"
          ],
          "types": [
            "cypress/project"
          ],
          "contentTypes": [
            "git-dir",
            "git"
          ],
          "features": [
            "artifacts",
            "junit-report"
          ],
          "meta": {
            "iconURI": "cypress",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-cypress"
          }
        }
      },
      {
        "name": "curl-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-curl-executor:1.17.29",
          "command": [
            "curl"
          ],
          "args": [
            "-is"
          ],
          "types": [
            "curl/test"
          ],
          "contentTypes": [
            "string",
            "file-uri",
            "git-file",
            "git-dir",
            "git"
          ],
          "features": [
            "artifacts"
          ],
          "meta": {
            "iconURI": "curl",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-curl"
          }
        }
      },
      {
        "name": "postman-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-postman-executor:1.17.29",
          "command": [
            "newman"
          ],
          "args": [
            "run",
            "<runPath>",
            "-e",
            "<envFile>",
            "--reporters",
            "cli,json",
            "--reporter-json-export",
            "<reportFile>"
          ],
          "types": [
            "postman/collection"
          ],
          "contentTypes": [
            "string",
            "file-uri",
            "git-file",
            "git-dir",
            "git"
          ],
          "features": [
            "artifacts"
          ],
          "meta": {
            "iconURI": "postman",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-postman"
          }
        }
      },
      {
        "name": "artillery-executor",
        "executor": {
          "executorType": "job",
          "image": "kubeshop/testkube-artillery-executor:1.17.29",
          "command": [
            "artillery"
          ],
          "args": [
            "run",
            "<runPath>",
            "--dotenv",
            "<envFile>",
            "-o",
            "<reportFile>"
          ],
          "types": [
            "artillery/test"
          ],
          "contentTypes": [
            "string",
            "file-uri",
            "git-file",
            "git-dir",
            "git"
          ],
          "features": [
            "artifacts"
          ],
          "meta": {
            "iconURI": "artillery",
            "docsURI": "https://kubeshop.github.io/testkube/test-types/executor-artillery"
          }
        }
      },
      {
        "name": "scraper-executor",
        "executor": {
          "executorType": "scraper",
          "image": "kubeshop/testkube-scraper-executor:1.17.29",
          "types": []
        }
      },
      {
        "name": "init-executor",
        "executor": {
          "executorType": "init",
          "image": "kubeshop/testkube-init-executor:1.17.29",
          "types": []
        }
      },
      {
        "name": "logs-sidecar",
        "executor": {
          "executorType": "sidecar",
          "image": "kubeshop/testkube-logs-sidecar:1.17.29",
          "types": []
        }
      },
      {
        "name": "logs-sidecar",
        "executor": {
          "executorType": "sidecar",
          "image": "kubeshop/testkube-logs-sidecar:1.17.29",
          "types": []
        }
      }
    ]
  job-container-template.yml: |-
    apiVersion: batch/v1
    kind: Job
    metadata:
      name: "{{ .Name }}"
      namespace: {{ .Namespace }}
    spec:
      {{- if gt .ActiveDeadlineSeconds 0 }}
      activeDeadlineSeconds: {{ .ActiveDeadlineSeconds }}
      {{- end }}
      template:
        spec:
          {{- if ne .InitImage "" }}
          initContainers:
          - name: {{ .Name }}-init
            {{- if .Registry }}
            image: {{ .Registry }}/{{ .InitImage }}
            {{- else }}
            image: {{ .InitImage }}
            {{- end }}
            imagePullPolicy: IfNotPresent
            command:
              - "/bin/runner"
              - '{{ .Jsn }}'
            volumeMounts:
            {{- if not (and  .ArtifactRequest (eq .ArtifactRequest.VolumeMountPath "/data")) }}
            - name: data-volume
              mountPath: /data
            {{ end }}
            {{- if .CertificateSecret }}
            - name: {{ .CertificateSecret }}
              mountPath: /etc/certs
            {{- end }}
            {{- if .ArtifactRequest }}
              {{- if and .ArtifactRequest.VolumeMountPath (or .ArtifactRequest.StorageClassName .ArtifactRequest.UseDefaultStorageClassName) }}
            - name: artifact-volume
              mountPath: {{ .ArtifactRequest.VolumeMountPath }}
              {{- end }}
            {{- end }}
            {{- range $configmap := .EnvConfigMaps }}
            {{- if and $configmap.Mount $configmap.Reference }}
            - name: {{ $configmap.Reference.Name }}
              mountPath: {{ $configmap.MountPath }}
            {{- end }}
            {{- end }}
            {{- range $secret := .EnvSecrets }}
            {{- if and $secret.Mount $secret.Reference }}
            - name: {{ $secret.Reference.Name }}
              mountPath: {{ $secret.MountPath }}
            {{- end }}
            {{- end }}
          {{- end }}
          containers:
          {{ if .Features.LogsV2 -}}
          - name: "{{ .Name }}-logs"
            {{- if .Registry }}
            image: {{ .Registry }}/{{ .LogSidecarImage }}
            {{- else }}
            image: {{ .LogSidecarImage }}
            {{- end }}
            imagePullPolicy: IfNotPresent
            env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: DEBUG
              value: {{ if .Debug }}"true"{{ else }}"false"{{ end }}
            - name: NAMESPACE
              value: {{ .Namespace }}
            - name: NATS_URI
              value: {{ .NatsUri }}
            - name: GROUP
              value: test
            - name: SOURCE
              value: "job-pod:{{ .Name }}"
            - name: ID
              value: "{{ .Name }}"
          {{- end }}
          - name: "{{ .Name }}"
            {{- if .Registry }}
            image: {{ .Registry }}/{{ .Image }}
            {{- else }}
            image: {{ .Image }}
            {{- end }}
            imagePullPolicy: IfNotPresent
            {{- if gt (len .Command) 0 }}
            command:
            {{- range $cmd := .Command }}
            - {{ $cmd -}}
            {{- end }}
            {{- end -}}
            {{- if gt (len .Args) 0 }}
            args:
            {{- range $arg := .Args }}
            - {{ $arg -}}
            {{- end }}
            {{- end }}
            {{- if .WorkingDir }}
            workingDir: {{ .WorkingDir }}
            {{- end }}
            volumeMounts:
            {{- if not (and  .ArtifactRequest (eq .ArtifactRequest.VolumeMountPath "/data")) }}
            - name: data-volume
              mountPath: /data
            {{ end }}
            {{- if .CertificateSecret }}
            - name: {{ .CertificateSecret }}
              mountPath: /etc/certs
            {{- end }}
            {{- if .AgentAPITLSSecret }}
            - mountPath: /tmp/agent-cert
              readOnly: true
              name: {{ .AgentAPITLSSecret }}
            {{- end }}
            {{- if .ArtifactRequest }}
              {{- if and .ArtifactRequest.VolumeMountPath (or .ArtifactRequest.StorageClassName .ArtifactRequest.UseDefaultStorageClassName) }}
            - name: artifact-volume
              mountPath: {{ .ArtifactRequest.VolumeMountPath }}
              {{- end }}
            {{- end }}
            {{- range $configmap := .EnvConfigMaps }}
            {{- if and $configmap.Mount $configmap.Reference }}
            - name: {{ $configmap.Reference.Name }}
              mountPath: {{ $configmap.MountPath }}
            {{- end }}
            {{- end }}
            {{- range $secret := .EnvSecrets }}
            {{- if and $secret.Mount $secret.Reference }}
            - name: {{ $secret.Reference.Name }}
              mountPath: {{ $secret.MountPath }}
            {{- end }}
            {{- end }}
          volumes:
          {{- if not (and  .ArtifactRequest (eq .ArtifactRequest.VolumeMountPath "/data")) }}
          - name: data-volume
            emptyDir: {}
          {{ end }}
          {{- if .CertificateSecret }}
          - name: {{ .CertificateSecret }}
            secret:
              secretName: {{ .CertificateSecret }}
          {{- end }}
          {{- if .AgentAPITLSSecret }}
          - name: { { .AgentAPITLSSecret } }
            secret:
              secretName: {{ .AgentAPITLSSecret }}
          {{- end }}
          {{- if .ArtifactRequest }}
            {{- if and .ArtifactRequest.VolumeMountPath (or .ArtifactRequest.StorageClassName .ArtifactRequest.UseDefaultStorageClassName) }}
          - name: artifact-volume
            persistentVolumeClaim:
              claimName: {{ .Name }}-pvc
            {{- end }}
          {{- end }}
          {{- range $configmap := .EnvConfigMaps }}
          {{- if and $configmap.Mount $configmap.Reference }}
          - name: {{ $configmap.Reference.Name }}
            configmap:
              name: {{ $configmap.Reference.Name }}
          {{- end }}
          {{- end }}
          {{- range $secret := .EnvSecrets }}
          {{- if and $secret.Mount $secret.Reference }}
          - name: {{ $secret.Reference.Name }}
            secret:
              secretName: {{ $secret.Reference.Name }}
          {{- end }}
          {{- end }}
          restartPolicy: Never
          {{- if .ServiceAccountName }}
          serviceAccountName: {{ .ServiceAccountName }}
          {{- end }}
          {{- if gt (len .ImagePullSecrets) 0 }}
          imagePullSecrets:
          {{- range $secret := .ImagePullSecrets }}
          - name: {{ $secret -}}
          {{- end }}
          {{- end }}
      backoffLimit: 0
      ttlSecondsAfterFinished: {{ .DelaySeconds }}
    
  job-scraper-template.yml: |-
    apiVersion: batch/v1
    kind: Job
    metadata:
      name: {{ .Name }}-scraper
      namespace: {{ .Namespace }}
    spec:
      {{- if gt .ActiveDeadlineSeconds 0 }}
      activeDeadlineSeconds: {{ .ActiveDeadlineSeconds }}
      {{- end }}
      template:
        spec:
          containers:
          {{ if .Features.LogsV2 -}}
          - name: "{{ .Name }}-logs"
            {{- if .Registry }}
            image: {{ .Registry }}/{{ .LogSidecarImage }}
            {{- else }}
            image: {{ .LogSidecarImage }}
            {{- end }}
            imagePullPolicy: IfNotPresent
            env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: DEBUG
              value: {{ if .Debug }}"true"{{ else }}"false"{{ end }}
            - name: NAMESPACE
              value: {{ .Namespace }}
            - name: NATS_URI
              value: {{ .NatsUri }}
            - name: ID
              value: {{ .Name }}
            - name: GROUP
              value: scraper
            - name: SOURCE
              value: "scraper-pod:{{ .Name }}"
          {{- end }}
          - name: {{ .Name }}-scraper
            {{- if .Registry }}
            image: {{ .Registry }}/{{ .ScraperImage }}
            {{- else }}
            image: {{ .ScraperImage }}
            {{- end }}
            imagePullPolicy: IfNotPresent
            command:
              - "/bin/runner"
              - '{{ .Jsn }}'
            {{- if .RunnerCustomCASecret }}
            env:
              - name: SSL_CERT_DIR
                value: /etc/testkube/certs
            {{- end }}
            volumeMounts:
            {{- if .RunnerCustomCASecret }}
              - name: {{ .RunnerCustomCASecret }}
                mountPath: /etc/testkube/certs/testkube-custom-ca.pem
                readOnly: true
                subPath: ca.crt
            {{- end }}
            {{- if or .ArtifactRequest .AgentAPITLSSecret }}
              {{- if .ArtifactRequest.VolumeMountPath }}
              - name: artifact-volume
                mountPath: {{ .ArtifactRequest.VolumeMountPath }}
              {{- end }}
              {{- if .AgentAPITLSSecret }}
              - mountPath: /tmp/agent-cert
                readOnly: true
                name: {{ .AgentAPITLSSecret }}
              {{- end }}
            {{- end }}
          volumes:
          {{- if .RunnerCustomCASecret }}
            - name: {{ .RunnerCustomCASecret }}
              secret:
                secretName: {{ .RunnerCustomCASecret }}
                defaultMode: 420
          {{- end }}
          {{- if or .ArtifactRequest .AgentAPITLSSecret }}
            {{- if and .ArtifactRequest.VolumeMountPath (or .ArtifactRequest.StorageClassName .ArtifactRequest.UseDefaultStorageClassName) }}
            - name: artifact-volume
              persistentVolumeClaim:
                claimName: {{ .Name }}-pvc
            {{- end }}
            {{- if .AgentAPITLSSecret }}
            - name: { { .AgentAPITLSSecret } }
              secret:
                secretName: {{ .AgentAPITLSSecret }}
            {{- end }}
          {{- end }}
          restartPolicy: Never
          {{- if .ServiceAccountName }}
          serviceAccountName: {{ .ServiceAccountName }}
          {{- end }}
          {{- if gt (len .ImagePullSecrets) 0 }}
          imagePullSecrets:
          {{- range $secret := .ImagePullSecrets }}
          - name: {{ $secret -}}
          {{- end }}
          {{- end }}
      backoffLimit: 0
      ttlSecondsAfterFinished: {{ .DelaySeconds }}
    
  job-template.yml: |-
    apiVersion: batch/v1
    kind: Job
    metadata:
      name: "{{ .Name }}"
      namespace: {{ .Namespace }}
    spec:
      {{- if gt .ActiveDeadlineSeconds 0 }}
      activeDeadlineSeconds: {{ .ActiveDeadlineSeconds }}
      {{- end }}
      template:
        spec:
          initContainers:
          - name: {{ .Name }}-init
            {{- if .Registry }}
            image: {{ .Registry }}/{{ .InitImage }}
            {{- else }}
            image: {{ .InitImage }}
            {{- end }}
            imagePullPolicy: IfNotPresent
            command:
              - "/bin/runner"
              - '{{ .Jsn }}'
            {{- if .RunnerCustomCASecret }}
            env:
              - name: SSL_CERT_DIR
                value: /etc/testkube/certs
            {{- end }}
            volumeMounts:
            {{- if not (and  .ArtifactRequest (eq .ArtifactRequest.VolumeMountPath "/data")) }}
            - name: data-volume
              mountPath: /data
            {{ end }}
            {{- if .CertificateSecret }}
            - name: {{ .CertificateSecret }}
              mountPath: /etc/certs
            {{- end }}
            {{- if .RunnerCustomCASecret }}
            - name: {{ .RunnerCustomCASecret }}
              mountPath: /etc/testkube/certs/testkube-custom-ca.pem
              readOnly: true
              subPath: ca.crt
            {{- end }}
            {{- if .ArtifactRequest }}
              {{- if and .ArtifactRequest.VolumeMountPath (or .ArtifactRequest.StorageClassName .ArtifactRequest.UseDefaultStorageClassName) }}
            - name: artifact-volume
              mountPath: {{ .ArtifactRequest.VolumeMountPath }}
              {{- end }}
            {{- end }}
            {{- range $configmap := .EnvConfigMaps }}
            {{- if and $configmap.Mount $configmap.Reference }}
            - name: {{ $configmap.Reference.Name }}
              mountPath: {{ $configmap.MountPath }}
            {{- end }}
            {{- end }}
            {{- range $secret := .EnvSecrets }}
            {{- if and $secret.Mount $secret.Reference }}
            - name: {{ $secret.Reference.Name }}
              mountPath: {{ $secret.MountPath }}
            {{- end }}
            {{- end }}
          containers:
          {{ if .Features.LogsV2 -}}
          - name: "{{ .Name }}-logs"
            {{- if .Registry }}
            image: {{ .Registry }}/{{ .LogSidecarImage }}
            {{- else }}
            image: {{ .LogSidecarImage }}
            {{- end }}
            imagePullPolicy: IfNotPresent
            env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: DEBUG
              value: {{ if .Debug }}"true"{{ else }}"false"{{ end }}
            - name: NAMESPACE
              value: {{ .Namespace }}
            - name: NATS_URI
              value: {{ .NatsUri }}
            - name: ID
              value: {{ .Name }}
            - name: GROUP
              value: test
            - name: SOURCE
              value: "job-pod:{{ .Name }}"
          {{- end }}
          - name: "{{ .Name }}"
            {{- if .Registry }}
            image: {{ .Registry }}/{{ .Image }}
            {{- else }}
            image: {{ .Image }}
            {{- end }}
            imagePullPolicy: IfNotPresent
            command:
              - "/bin/runner"
              - '{{ .Jsn }}'
            {{- if .RunnerCustomCASecret }}
            env:
              - name: SSL_CERT_DIR
                value: /etc/testkube/certs
            {{- end }}
            volumeMounts:
            {{- if not (and  .ArtifactRequest (eq .ArtifactRequest.VolumeMountPath "/data")) }}
            - name: data-volume
              mountPath: /data
            {{ end }}
            {{- if .CertificateSecret }}
            - name: {{ .CertificateSecret }}
              mountPath: /etc/certs
            {{- end }}
            {{- if .RunnerCustomCASecret }}
            - name: {{ .RunnerCustomCASecret }}
              mountPath: /etc/testkube/certs/testkube-custom-ca.pem
              readOnly: true
              subPath: ca.crt
            {{- end }}
            {{- if .AgentAPITLSSecret }}
            - mountPath: /tmp/agent-cert
              readOnly: true
              name: {{ .AgentAPITLSSecret }}
            {{- end }}
            {{- if .ArtifactRequest }}
              {{- if and .ArtifactRequest.VolumeMountPath (or .ArtifactRequest.StorageClassName .ArtifactRequest.UseDefaultStorageClassName) }}
            - name: artifact-volume
              mountPath: {{ .ArtifactRequest.VolumeMountPath }}
              {{- end }}
            {{- end }}
            {{- range $configmap := .EnvConfigMaps }}
            {{- if and $configmap.Mount $configmap.Reference }}
            - name: {{ $configmap.Reference.Name }}
              mountPath: {{ $configmap.MountPath }}
            {{- end }}
            {{- end }}
            {{- range $secret := .EnvSecrets }}
            {{- if and $secret.Mount $secret.Reference }}
            - name: {{ $secret.Reference.Name }}
              mountPath: {{ $secret.MountPath }}
            {{- end }}
            {{- end }}
          volumes:
          {{- if not (and  .ArtifactRequest (eq .ArtifactRequest.VolumeMountPath "/data")) }}
          - name: data-volume
            emptyDir: {}
          {{ end }} 
          {{- if .CertificateSecret }}
          - name: {{ .CertificateSecret }}
            secret:
              secretName: {{ .CertificateSecret }}
          {{- end }}
          {{- if .RunnerCustomCASecret }}
          - name: {{ .RunnerCustomCASecret }}
            secret:
              secretName: {{ .RunnerCustomCASecret }}
              defaultMode: 420
          {{- end }}
          {{- if .AgentAPITLSSecret }}
          - name: {{ .AgentAPITLSSecret }}
            secret:
              secretName: {{ .AgentAPITLSSecret }}
          {{- end }}
          {{- if .ArtifactRequest }}
            {{- if and .ArtifactRequest.VolumeMountPath (or .ArtifactRequest.StorageClassName .ArtifactRequest.UseDefaultStorageClassName) }}
          - name: artifact-volume
            persistentVolumeClaim:
              claimName: {{ .Name }}-pvc
            {{- end }}
          {{- end }}
          {{- range $configmap := .EnvConfigMaps }}
          {{- if and $configmap.Mount $configmap.Reference }}
          - name: {{ $configmap.Reference.Name }}
            configmap:
              name: {{ $configmap.Reference.Name }}
          {{- end }}
          {{- end }}
          {{- range $secret := .EnvSecrets }}
          {{- if and $secret.Mount $secret.Reference }}
          - name: {{ $secret.Reference.Name }}
            secret:
              secretName: {{ $secret.Reference.Name }}
          {{- end }}
          {{- end }}
          restartPolicy: Never
          {{- if .ServiceAccountName }}
          serviceAccountName: {{ .ServiceAccountName }}
          {{- end }}
          {{- if gt (len .ImagePullSecrets) 0 }}
          imagePullSecrets:
          {{- range $secret := .ImagePullSecrets }}
          - name: {{ $secret -}}
          {{- end }}
          {{- end }}
      backoffLimit: 0
      ttlSecondsAfterFinished: 180
    
  pvc-template.yml: |-
    {{ if .ArtifactRequest }}
    apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: {{ .Name }}-pvc
      namespace: {{ .Namespace }}
    spec:
      {{- if .ArtifactRequest.StorageClassName }}
      storageClassName: {{ .ArtifactRequest.StorageClassName }}
      {{- else if .ArtifactRequest.UseDefaultStorageClassName }}
      storageClassName: {{ .DefaultStorageClassName }}
      {{- end }}
      accessModes:
      {{- if .ArtifactRequest.SharedBetweenPods }}
        - ReadWriteMany
      {{- else }}
        - ReadWriteOnce
      {{- end }}
      resources:
        requests:
          storage: 1Gi
    {{ end }}
  slack-config.json: |-
    [
      {
        "ChannelID": "",
        "selector": {},
        "testName": [],
        "testSuiteName": [],
        "events": [
          "start-test",
          "end-test-success",
          "end-test-failed",
          "end-test-aborted",
          "end-test-timeout",
          "start-testsuite",
          "end-testsuite-success",
          "end-testsuite-failed",
          "end-testsuite-aborted",
          "end-testsuite-timeout"
        ]
      }
    ]
    
  slack-template.json: |-
    {
      "blocks": [
        {
          "type": "section",
          "text": {
            "type": "plain_text",
            "emoji": true,
            "text": "Execution {{ .ExecutionName }} of {{ .TestName }} status {{ .Status }}"
          }
        },
        {
          "type": "context",
          "elements": [
            {
              "type": "image",
                "image_url": "{{ if eq .Status "failed" }}https://raw.githubusercontent.com/kubeshop/testkube/d3380bc4bf4534ef1fb88cdce5d346dca8898986/assets/imageFailed.png{{ else if eq .Status "passed" }}https://raw.githubusercontent.com/kubeshop/testkube/d3380bc4bf4534ef1fb88cdce5d346dca8898986/assets/imagePassed.png{{ else }}https://raw.githubusercontent.com/kubeshop/testkube/d3380bc4bf4534ef1fb88cdce5d346dca8898986/assets/imagePending.png{{ end }}",
              "alt_text": "notifications warning icon"
            }
            {{ if (gt .TotalSteps 0 )}}
            ,
            {
              "type": "mrkdwn",
              "text": "*   {{ .FailedSteps }}/{{ .TotalSteps }} STEPS FAILED*"
            }
            {{ end }}
          ]
        },
        {
          "type": "divider"
        },
        {
          "type": "section",
          "fields": [
            {
              "type": "mrkdwn",
              "text": "*Test Name*"
            },
            {
              "type": "mrkdwn",
              "text": "*Type*"
            },
            {
              "type": "plain_text",
              "text": "{{ .TestName }}",
              "emoji": true
            },
            {
              "type": "plain_text",
              "text": "{{ .TestType }}",
              "emoji": true
            }
          ]
        },
        {{ if .Namespace}}
        {
          "type": "section",
          "fields": [
            {
              "type": "mrkdwn",
              "text": "*Namespace*"
            },
            {
              "type": "mrkdwn",
              "text": "*Labels*"
            },
            {
              "type": "plain_text",
              "text": "{{ .Namespace }} ",
              "emoji": true
            },
            {
              "type": "plain_text",
              "text": "{{ .Labels }} ",
              "emoji": true
            }
          ]
        },
        {{ end }}
        {
          "type": "section",
          "fields": [
            {
              "type": "mrkdwn",
              "text": "*Start Time*"
            },
            {
              "type": "mrkdwn",
              "text": "*End Time*"
            },
            {
              "type": "plain_text",
              "text": "{{ .StartTime }}",
              "emoji": true
            },
            {
              "type": "plain_text",
              "text": "{{ .EndTime }}",
              "emoji": true
            }
          ]
        },
        {{ if .Duration }}
        {
          "type": "section",
          "fields": [
            {
              "type": "mrkdwn",
              "text": "*Duration*"
            },
            {
              "type": "mrkdwn",
              "text": " "
            },
            {
              "type": "plain_text",
              "text": "{{ .Duration }}",
              "emoji": true
            }
          ]
        },
        {{ end }}
        {
          "type": "divider"
        },
        {{ if .ClusterName }}
        {
          "type": "section",
          "text": {
            "type": "mrkdwn",
            "text": "Cluster Name: {{ .ClusterName }}"
          }
        },
        {{ end }}
        {
          "type": "section",
          "text": {
            "type": "mrkdwn",
            "text": "*Test Execution CLI*"
          }
        },
        {
          "type": "section",
          "text": {
            "type": "mrkdwn",
            "text": "`kubectl testkube get execution {{ .ExecutionName }} `\n"
          }
        },
        {{ if eq .TestType "Test Suite" }}
        {
          "type": "section",
          "text": {
            "type": "mrkdwn",
            "text": "Test Suite URI: {{ .DashboardURI }}/test-suites/{{ .TestName }}"
          }
        },
        {
          "type": "section",
          "text": {
            "type": "mrkdwn",
            "text": "Test Suite Execution URI: {{ .DashboardURI }}/test-suites/{{ .TestName }}/executions/{{ .ExecutionID }}"
          }
        },
        {{ else }}
        {
          "type": "section",
          "text": {
            "type": "mrkdwn",
            "text": "Test URI: {{ .DashboardURI }}/tests/{{ .TestName }}"
          }
        },
        {
          "type": "section",
          "text": {
            "type": "mrkdwn",
            "text": "Test Execution URI: {{ .DashboardURI }}/tests/{{ .TestName }}/executions/{{ .ExecutionID }}"
          }
        },
        {{ end }}
        {
          "type": "divider"
        }
      ]
    }
    
  slave-pod-template.yml: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: "{{ .Name }}"
      namespace: {{ .Namespace }}
      ownerReferences:
      - apiVersion: batch/v1
        kind: job
        name: {{ .JobName }}
        uid: {{ .JobUID }}
    spec:
      {{- if gt .ActiveDeadlineSeconds 0 }}
      activeDeadlineSeconds: {{ .ActiveDeadlineSeconds }}
      {{- end }}
      {{- if not (and  .ArtifactRequest (eq .ArtifactRequest.VolumeMountPath "/data")) }}
      initContainers:
      - name: init
        {{- if .Registry }}
        image: {{ .Registry }}/{{ .InitImage }}
        {{- else }}
        image: {{ .InitImage }}
        {{- end }}
        imagePullPolicy: IfNotPresent
        command: 
          - "/bin/runner"
          - '{{ .Jsn }}'
        {{- if .RunnerCustomCASecret }}
        env:
          - name: SSL_CERT_DIR
            value: /etc/testkube/certs
        {{- end }}
        volumeMounts:
        - name: data-volume
          mountPath: /data
        {{- if .CertificateSecret }}
        - name: {{ .CertificateSecret }}
          mountPath: /etc/certs
        {{- end }}
        {{- if .RunnerCustomCASecret }}
        - name: {{ .RunnerCustomCASecret }}
          mountPath: /etc/testkube/certs/testkube-custom-ca.pem
          readOnly: true
          subPath: ca.crt
        {{- end }}
        {{- if .ArtifactRequest }}
          {{- if and .ArtifactRequest.VolumeMountPath (or .ArtifactRequest.StorageClassName .ArtifactRequest.UseDefaultStorageClassName) }}
        - name: artifact-volume
          mountPath: {{ .ArtifactRequest.VolumeMountPath }}
          {{- end }}
        {{- end }}
        {{- range $configmap := .EnvConfigMaps }}
        {{- if and $configmap.Mount $configmap.Reference }}
        - name: {{ $configmap.Reference.Name }}
          mountPath: {{ $configmap.MountPath }}
        {{- end }}
        {{- end }}
        {{- range $secret := .EnvSecrets }}
        {{- if and $secret.Mount $secret.Reference }}
        - name: {{ $secret.Reference.Name }}
          mountPath: {{ $secret.MountPath }}
        {{- end }}
        {{- end }}
      {{ end }}
      containers:
      {{ if .Features.LogsV2 -}}
      - name: "main-logs"
        {{- if .Registry }}
        image: {{ .Registry }}/{{ .LogSidecarImage }}
        {{- else }}
        image: {{ .LogSidecarImage }}
        {{- end }}
        imagePullPolicy: IfNotPresent
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          value: {{ .Namespace }}
        - name: NATS_URI
          value: {{ .NatsUri }}
        - name: ID
          value: {{ .JobName }}
        - name: GROUP
          value: test-slave
        - name: SOURCE
          value: "job-slave-pod:{{ .Name }}"
      {{- end }}
      - name: main
        {{- if .Registry }}
        image: {{ .Registry }}/{{ .Image }}
        {{- else }}
        image: {{ .Image }}
        {{- end }}
        imagePullPolicy: IfNotPresent
        ports:
        {{- range $port := .Ports }}
        - name: {{ $port.Name }}
          containerPort: {{ $port.ContainerPort }}
        {{- end}}
        {{- range $port := .Ports }}
        {{- if eq $port.Name "server-port" }}  
        livenessProbe:
          tcpSocket:
            port: {{ $port.ContainerPort }}
          failureThreshold: 3
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          tcpSocket:
            port: {{ $port.ContainerPort }}
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 1
        {{- end }}
        {{- end }}
        {{- if .Resources }}
        resources:
          {{- if .Resources.Limits }}
          limits:
            {{- if .Resources.Limits.Cpu }}
            cpu: {{ .Resources.Limits.Cpu }}
            {{- end }}
            {{- if .Resources.Limits.Memory }}
            memory: {{ .Resources.Limits.Memory }}
            {{- end }}
          {{- end }}
          {{- if .Resources.Requests }}
          requests:
            {{- if .Resources.Requests.Cpu }}
            cpu: {{ .Resources.Requests.Cpu }}
            {{- end }}
            {{- if .Resources.Requests.Memory }}
            memory: {{ .Resources.Requests.Memory }}
            {{- end }}
          {{- end }}
        {{- end }}
        volumeMounts:
        {{- if not (and  .ArtifactRequest (eq .ArtifactRequest.VolumeMountPath "/data")) }}
        - name: data-volume
          mountPath: /data
        {{ end }}
        {{- if .CertificateSecret }}
        - name: {{ .CertificateSecret }}
          mountPath: /etc/certs
        {{- end }}
        {{- if .ArtifactRequest }}
          {{- if and .ArtifactRequest.VolumeMountPath (or .ArtifactRequest.StorageClassName .ArtifactRequest.UseDefaultStorageClassName) }}
        - name: artifact-volume
          mountPath: {{ .ArtifactRequest.VolumeMountPath }}
          {{- end }}
        {{- end }}
        {{- range $configmap := .EnvConfigMaps }}
        {{- if and $configmap.Mount $configmap.Reference }}
        - name: {{ $configmap.Reference.Name }}
          mountPath: {{ $configmap.MountPath }}
        {{- end }}
        {{- end }}
        {{- range $secret := .EnvSecrets }}
        {{- if and $secret.Mount $secret.Reference }}
        - name: {{ $secret.Reference.Name }}
          mountPath: {{ $secret.MountPath }}
        {{- end }}
        {{- end }}
      volumes:
      {{- if not (and  .ArtifactRequest (eq .ArtifactRequest.VolumeMountPath "/data")) }}
      - name: data-volume
        emptyDir: {}
      {{ end }}
      {{- if .CertificateSecret }}
      - name: {{ .CertificateSecret }}
        secret:
          secretName: {{ .CertificateSecret }}
      {{- end }}
      {{- if .RunnerCustomCASecret }}
      - name: {{ .RunnerCustomCASecret }}
        secret:
          secretName: {{ .RunnerCustomCASecret }}
          defaultMode: 420
      {{- end }}
      {{- if .ArtifactRequest }}
        {{- if and .ArtifactRequest.VolumeMountPath (or .ArtifactRequest.StorageClassName .ArtifactRequest.UseDefaultStorageClassName) }}
      - name: artifact-volume
        persistentVolumeClaim:
          claimName: {{ .JobName }}-pvc
        {{- end }}
      {{- end }}
      {{- range $configmap := .EnvConfigMaps }}
      {{- if and $configmap.Mount $configmap.Reference }}
      - name: {{ $configmap.Reference.Name }}
        configmap:
          name: {{ $configmap.Reference.Name }}
      {{- end }}
      {{- end }}
      {{- range $secret := .EnvSecrets }}
      {{- if and $secret.Mount $secret.Reference }}
      - name: {{ $secret.Reference.Name }}
        secret:
          secretName: {{ $secret.Reference.Name }}
      {{- end }}
      {{- end }}
      restartPolicy: Always
      {{- if .ServiceAccountName }}
      serviceAccountName: {{ .ServiceAccountName }}
      {{- end }}
      {{- if gt (len .ImagePullSecrets) 0 }}
      imagePullSecrets:
      {{- range $secret := .ImagePullSecrets }}
      - name: {{ $secret -}}
      {{- end }}
      {{- end }}
    
  enabledExecutors: ""
---
# Source: testkube/charts/testkube-operator/templates/configmap.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 47f0dfc1.testkube.io
kind: ConfigMap
metadata:
  name: testkube-operator-manager-config
  namespace: default
---
# Source: testkube/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: testkube-global-config
data:
  helmchartVersion: 1.17.40
---
# Source: testkube/charts/mongodb/templates/standalone/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: testkube-mongodb
  namespace: "default"
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-13.10.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: testkube/charts/testkube-api/templates/minio.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  # This name uniquely identifies the PVC. This is used in deployment.
  name: testkube-minio-pv-claim-default
spec:
  accessModes:
  - "ReadWriteOnce"
  resources:
    requests:
      storage: 10Gi
---
# Source: testkube/charts/testkube-operator/templates/executor.testkube.io_executors.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: executors.executor.testkube.io
spec:
  group: executor.testkube.io
  names:
    kind: Executor
    listKind: ExecutorList
    plural: executors
    singular: executor
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Executor is the Schema for the executors API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ExecutorSpec defines the desired state of Executor
            properties:
              args:
                description: executor binary arguments
                items:
                  type: string
                type: array
              command:
                description: executor default binary command
                items:
                  type: string
                type: array
              content_types:
                description: ContentTypes list of handled content types
                items:
                  enum:
                  - string
                  - file-uri
                  - git-file
                  - git-dir
                  - git
                  type: string
                type: array
              executor_type:
                description: ExecutorType one of "rest" for rest openapi based executors
                  or "job" which will be default runners for testkube or "container"
                  for container executors
                enum:
                - job
                - container
                type: string
              features:
                description: Features list of possible features which executor handles
                items:
                  enum:
                  - artifacts
                  - junit-report
                  type: string
                type: array
              image:
                description: Image for kube-job
                type: string
              imagePullSecrets:
                description: container executor default image pull secrets
                items:
                  description: LocalObjectReference contains enough information to
                    let you locate the referenced object inside the same namespace.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                type: array
              job_template:
                description: Job template to launch executor
                type: string
              jobTemplateReference:
                description: name of the template resource
                type: string
              meta:
                description: Meta data about executor
                properties:
                  docsURI:
                    description: URI for executor docs
                    type: string
                  iconURI:
                    description: URI for executor icon
                    type: string
                  tooltips:
                    additionalProperties:
                      type: string
                    description: executor tooltips
                    type: object
                type: object
              slaves:
                description: Slaves data to run test in distributed environment
                properties:
                  image:
                    type: string
                required:
                - image
                type: object
              types:
                description: Types defines what types can be handled by executor e.g.
                  "postman/collection", ":curl/command" etc
                items:
                  type: string
                type: array
              uri:
                description: URI for rest based executors
                type: string
              useDataDirAsWorkingDir:
                description: use data dir as working dir for executor
                type: boolean
            type: object
          status:
            description: ExecutorStatus defines the observed state of Executor
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: testkube/charts/testkube-operator/templates/executor.testkube.io_webhooks.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: webhooks.executor.testkube.io
spec:
  group: executor.testkube.io
  names:
    kind: Webhook
    listKind: WebhookList
    plural: webhooks
    singular: webhook
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Webhook is the Schema for the webhooks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: WebhookSpec defines the desired state of Webhook
            properties:
              events:
                description: Events declare list if events on which webhook should
                  be called
                items:
                  enum:
                  - start-test
                  - end-test-success
                  - end-test-failed
                  - end-test-aborted
                  - end-test-timeout
                  - start-testsuite
                  - end-testsuite-success
                  - end-testsuite-failed
                  - end-testsuite-aborted
                  - end-testsuite-timeout
                  type: string
                type: array
              headers:
                additionalProperties:
                  type: string
                description: webhook headers (golang template supported)
                type: object
              payloadObjectField:
                description: will load the generated payload for notification inside
                  the object
                type: string
              payloadTemplate:
                description: golang based template for notification payload
                type: string
              payloadTemplateReference:
                description: name of the template resource
                type: string
              selector:
                description: Labels to filter for tests and test suites
                type: string
              uri:
                description: Uri is address where webhook should be made (golang template
                  supported)
                type: string
            type: object
          status:
            description: WebhookStatus defines the observed state of Webhook
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: testkube/charts/testkube-operator/templates/tests.testkube.io_scripts.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: scripts.tests.testkube.io
spec:
  group: tests.testkube.io
  names:
    kind: Script
    listKind: ScriptList
    plural: scripts
    singular: script
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Script is the Schema for the scripts API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ScriptSpec defines the desired state of Script
            properties:
              content:
                description: script content as string (content depends from executor)
                type: string
              input-type:
                description: 'script content type can be:  - direct content - created
                  from file, - git repo directory checkout in case when test is some
                  kind of project or have more than one file,'
                type: string
              name:
                description: script execution custom name
                type: string
              params:
                additionalProperties:
                  type: string
                description: execution params passed to executor
                type: object
              repository:
                description: repository details if exists
                properties:
                  branch:
                    description: branch/tag name for checkout
                    type: string
                  path:
                    description: if needed we can checkout particular path (dir or
                      file) in case of BIG/mono repositories
                    type: string
                  token:
                    description: git auth token for private repositories
                    type: string
                  type:
                    description: Type_ repository type
                    type: string
                  uri:
                    description: Uri of content file or git directory
                    type: string
                  username:
                    description: git auth username for private repositories
                    type: string
                required:
                - branch
                - type
                - uri
                type: object
              tags:
                items:
                  type: string
                type: array
              type:
                description: script type
                type: string
            type: object
          status:
            description: ScriptStatus defines the observed state of Script
            properties:
              executions_count:
                type: integer
              last_execution:
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v2
    schema:
      openAPIV3Schema:
        description: Script is the Schema for the scripts API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ScriptSpec defines the desired state of Script
            properties:
              content:
                description: script content object
                properties:
                  data:
                    description: script content body
                    type: string
                  repository:
                    description: repository of script content
                    properties:
                      branch:
                        description: branch/tag name for checkout
                        type: string
                      path:
                        description: if needed we can checkout particular path (dir
                          or file) in case of BIG/mono repositories
                        type: string
                      token:
                        description: git auth token for private repositories
                        type: string
                      type:
                        description: VCS repository type
                        type: string
                      uri:
                        description: uri of content file or git directory
                        type: string
                      username:
                        description: git auth username for private repositories
                        type: string
                    required:
                    - branch
                    - type
                    - uri
                    type: object
                  type:
                    description: script type
                    type: string
                  uri:
                    description: uri of script content
                    type: string
                type: object
              name:
                description: script execution custom name
                type: string
              params:
                additionalProperties:
                  type: string
                description: execution params passed to executor
                type: object
              tags:
                description: script tags
                items:
                  type: string
                type: array
              type:
                description: script type
                type: string
            type: object
          status:
            description: ScriptStatus defines the observed state of Script
            properties:
              executions_count:
                type: integer
              last_execution:
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: testkube/charts/testkube-operator/templates/tests.testkube.io_templates.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: templates.tests.testkube.io
spec:
  group: tests.testkube.io
  names:
    kind: Template
    listKind: TemplateList
    plural: templates
    singular: template
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Template is the Schema for the Templates API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TemplateSpec defines the desired state of Template
            properties:
              body:
                description: template body to use
                type: string
              type:
                description: TemplateType defines template type by purpose
                enum:
                - job
                - container
                - cronjob
                - scraper
                - pvc
                - webhook
                - pod
                type: string
            required:
            - body
            - type
            type: object
          status:
            description: TemplateStatus defines the observed state of Template
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: testkube/charts/testkube-operator/templates/tests.testkube.io_testexecutions.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: testexecutions.tests.testkube.io
spec:
  group: tests.testkube.io
  names:
    kind: TestExecution
    listKind: TestExecutionList
    plural: testexecutions
    singular: testexecution
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: TestExecution is the Schema for the testexecutions API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TestExecutionSpec defines the desired state of TestExecution
            properties:
              executionRequest:
                description: test execution request body
                properties:
                  activeDeadlineSeconds:
                    description: Optional duration in seconds the pod may be active
                      on the node relative to StartTime before the system will actively
                      try to mark it failed and kill associated containers. Value
                      must be a positive integer.
                    format: int64
                    type: integer
                  args:
                    description: additional executor binary arguments
                    items:
                      type: string
                    type: array
                  argsMode:
                    description: usage mode for arguments
                    enum:
                    - append
                    - override
                    - replace
                    type: string
                  artifactRequest:
                    description: artifact request body with test artifacts
                    properties:
                      dirs:
                        description: artifact directories for scraping
                        items:
                          type: string
                        type: array
                      masks:
                        description: regexp to filter scraped artifacts, single or
                          comma separated
                        items:
                          type: string
                        type: array
                      omitFolderPerExecution:
                        description: don't use a separate folder for execution artifacts
                        type: boolean
                      sharedBetweenPods:
                        description: whether to share volume between pods
                        type: boolean
                      storageBucket:
                        description: artifact bucket storage
                        type: string
                      storageClassName:
                        description: artifact storage class name for container executor
                        type: string
                      useDefaultStorageClassName:
                        description: whether to use default storage class name
                        type: boolean
                      volumeMountPath:
                        description: artifact volume mount path for container executor
                        type: string
                    type: object
                  command:
                    description: executor binary command
                    items:
                      type: string
                    type: array
                  cronJobTemplate:
                    description: cron job template extensions
                    type: string
                  envConfigMaps:
                    description: config map references
                    items:
                      description: Reference to env resource
                      properties:
                        mapToVariables:
                          description: whether we shoud map to variables from resource
                          type: boolean
                        mount:
                          description: whether we shoud mount resource
                          type: boolean
                        mountPath:
                          description: where we shoud mount resource
                          type: string
                        reference:
                          description: LocalObjectReference contains enough information
                            to let you locate the referenced object inside the same
                            namespace.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                      required:
                      - reference
                      type: object
                    type: array
                  envSecrets:
                    description: secret references
                    items:
                      description: Reference to env resource
                      properties:
                        mapToVariables:
                          description: whether we shoud map to variables from resource
                          type: boolean
                        mount:
                          description: whether we shoud mount resource
                          type: boolean
                        mountPath:
                          description: where we shoud mount resource
                          type: string
                        reference:
                          description: LocalObjectReference contains enough information
                            to let you locate the referenced object inside the same
                            namespace.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                      required:
                      - reference
                      type: object
                    type: array
                  envs:
                    additionalProperties:
                      type: string
                    description: 'Environment variables passed to executor. Deprecated:
                      use Basic Variables instead'
                    type: object
                  executePostRunScriptBeforeScraping:
                    description: execute post run script before scraping (prebuilt
                      executor only)
                    type: boolean
                  executionLabels:
                    additionalProperties:
                      type: string
                    description: test execution labels
                    type: object
                  executionNamespace:
                    description: namespace for test execution (Pro edition only)
                    type: string
                  httpProxy:
                    description: http proxy for executor containers
                    type: string
                  httpsProxy:
                    description: https proxy for executor containers
                    type: string
                  image:
                    description: container executor image
                    type: string
                  imagePullSecrets:
                    description: container executor image pull secrets
                    items:
                      description: LocalObjectReference contains enough information
                        to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    type: array
                  isVariablesFileUploaded:
                    type: boolean
                  jobTemplate:
                    description: job template extensions
                    type: string
                  name:
                    description: test execution custom name
                    type: string
                  namespace:
                    description: test kubernetes namespace (\"testkube\" when not
                      set)
                    type: string
                  negativeTest:
                    description: negative test will fail the execution if it is a
                      success and it will succeed if it is a failure
                    type: boolean
                  number:
                    description: test execution number
                    format: int32
                    type: integer
                  postRunScript:
                    description: script to run after test execution
                    type: string
                  preRunScript:
                    description: script to run before test execution
                    type: string
                  runningContext:
                    description: running context for test or test suite execution
                    properties:
                      context:
                        description: Context value depending from its type
                        type: string
                      type:
                        description: One of possible context types
                        enum:
                        - user-cli
                        - user-ui
                        - testsuite
                        - testtrigger
                        - scheduler
                        - testexecution
                        - testsuiteexecution
                        type: string
                    required:
                    - type
                    type: object
                  scraperTemplate:
                    description: scraper template extensions
                    type: string
                  secretEnvs:
                    additionalProperties:
                      type: string
                    description: 'Execution variables passed to executor from secrets.
                      Deprecated: use Secret Variables instead'
                    type: object
                  slavePodRequest:
                    description: pod request body
                    properties:
                      podTemplate:
                        description: pod template extensions
                        type: string
                      podTemplateReference:
                        description: name of the template resource
                        type: string
                      resources:
                        description: pod resources request specification
                        properties:
                          limits:
                            description: resource request specification
                            properties:
                              cpu:
                                description: requested cpu units
                                type: string
                              memory:
                                description: requested memory units
                                type: string
                            type: object
                          requests:
                            description: resource request specification
                            properties:
                              cpu:
                                description: requested cpu units
                                type: string
                              memory:
                                description: requested memory units
                                type: string
                            type: object
                        type: object
                    type: object
                  sourceScripts:
                    description: run scripts using source command (container executor only)
                    type: boolean
                  sync:
                    description: whether to start execution sync or async
                    type: boolean
                  testSecretUUID:
                    description: test secret uuid
                    type: string
                  testSuiteName:
                    description: unique test suite name (CRD Test suite name), if
                      it's run as a part of test suite
                    type: string
                  testSuiteSecretUUID:
                    description: test suite secret uuid, if it's run as a part of
                      test suite
                    type: string
                  variables:
                    additionalProperties:
                      properties:
                        name:
                          description: variable name
                          type: string
                        type:
                          description: variable type
                          type: string
                        value:
                          description: variable string value
                          type: string
                        valueFrom:
                          description: or load it from var source
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      type: object
                    type: object
                  variablesFile:
                    description: variables file content - need to be in format for
                      particular executor (e.g. postman envs file)
                    type: string
                type: object
              test:
                properties:
                  name:
                    description: object name
                    type: string
                  namespace:
                    description: object kubernetes namespace
                    type: string
                required:
                - name
                type: object
            required:
            - test
            type: object
          status:
            description: TestExecutionStatus defines the observed state of TestExecution
            properties:
              generation:
                description: test execution generation
                format: int64
                type: integer
              latestExecution:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                properties:
                  args:
                    description: additional arguments/flags passed to executor binary
                    items:
                      type: string
                    type: array
                  args_mode:
                    description: usage mode for arguments
                    enum:
                    - append
                    - override
                    - replace
                    type: string
                  artifactRequest:
                    description: artifact request body with test artifacts
                    properties:
                      dirs:
                        description: artifact directories for scraping
                        items:
                          type: string
                        type: array
                      masks:
                        description: regexp to filter scraped artifacts, single or
                          comma separated
                        items:
                          type: string
                        type: array
                      omitFolderPerExecution:
                        description: don't use a separate folder for execution artifacts
                        type: boolean
                      sharedBetweenPods:
                        description: whether to share volume between pods
                        type: boolean
                      storageBucket:
                        description: artifact bucket storage
                        type: string
                      storageClassName:
                        description: artifact storage class name for container executor
                        type: string
                      useDefaultStorageClassName:
                        description: whether to use default storage class name
                        type: boolean
                      volumeMountPath:
                        description: artifact volume mount path for container executor
                        type: string
                    type: object
                  bucketName:
                    description: minio bucket name to get uploads from
                    type: string
                  command:
                    description: executor image command
                    items:
                      type: string
                    type: array
                  containerShell:
                    description: shell used in container executor
                    type: string
                  content:
                    description: TestContent defines test content
                    properties:
                      data:
                        description: test content body
                        type: string
                      repository:
                        description: repository of test content
                        properties:
                          authType:
                            description: auth type for git requests
                            enum:
                            - basic
                            - header
                            type: string
                          branch:
                            description: branch/tag name for checkout
                            type: string
                          certificateSecret:
                            description: git auth certificate secret for private repositories
                            type: string
                          commit:
                            description: commit id (sha) for checkout
                            type: string
                          path:
                            description: if needed we can checkout particular path
                              (dir or file) in case of BIG/mono repositories
                            type: string
                          tokenSecret:
                            description: Testkube internal reference for secret storage
                              in Kubernetes secrets
                            properties:
                              key:
                                description: object key
                                type: string
                              name:
                                description: object name
                                type: string
                              namespace:
                                description: object kubernetes namespace
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          type:
                            description: VCS repository type
                            type: string
                          uri:
                            description: uri of content file or git directory
                            type: string
                          usernameSecret:
                            description: Testkube internal reference for secret storage
                              in Kubernetes secrets
                            properties:
                              key:
                                description: object key
                                type: string
                              name:
                                description: object name
                                type: string
                              namespace:
                                description: object kubernetes namespace
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          workingDir:
                            description: if provided we checkout the whole repository
                              and run test from this directory
                            type: string
                        type: object
                      type:
                        description: test type
                        enum:
                        - string
                        - file-uri
                        - git-file
                        - git-dir
                        - git
                        type: string
                      uri:
                        description: uri of test content
                        type: string
                    type: object
                  duration:
                    description: test duration
                    type: string
                  durationMs:
                    description: test duration in milliseconds
                    format: int32
                    type: integer
                  endTime:
                    description: test end time
                    format: date-time
                    type: string
                  envs:
                    additionalProperties:
                      type: string
                    description: 'Environment variables passed to executor. Deprecated:
                      use Basic Variables instead'
                    type: object
                  executePostRunScriptBeforeScraping:
                    description: execute post run script before scraping (prebuilt
                      executor only)
                    type: boolean
                  executionNamespace:
                    description: namespace for test execution (Pro edition only)
                    type: string
                  executionResult:
                    description: execution result returned from executor
                    properties:
                      errorMessage:
                        description: error message when status is error, separate
                          to output as output can be partial in case of error
                        type: string
                      reports:
                        properties:
                          junit:
                            type: string
                        type: object
                      status:
                        enum:
                        - queued
                        - running
                        - passed
                        - failed
                        - aborted
                        - timeout
                        type: string
                      steps:
                        description: execution steps (for collection of requests)
                        items:
                          description: execution result data
                          properties:
                            assertionResults:
                              items:
                                description: execution result data
                                properties:
                                  errorMessage:
                                    type: string
                                  name:
                                    type: string
                                  status:
                                    type: string
                                type: object
                              type: array
                            duration:
                              type: string
                            name:
                              description: step name
                              type: string
                            status:
                              description: execution step status
                              type: string
                          required:
                          - name
                          - status
                          type: object
                        type: array
                    required:
                    - status
                    type: object
                  id:
                    description: execution id
                    type: string
                  isVariablesFileUploaded:
                    description: in case the variables file is too big, it will be
                      uploaded to storage
                    type: boolean
                  labels:
                    additionalProperties:
                      type: string
                    description: test and execution labels
                    type: object
                  name:
                    description: execution name
                    type: string
                  number:
                    description: execution number
                    format: int32
                    type: integer
                  postRunScript:
                    description: script to run after test execution
                    type: string
                  preRunScript:
                    description: script to run before test execution
                    type: string
                  runningContext:
                    description: running context for test or test suite execution
                    properties:
                      context:
                        description: Context value depending from its type
                        type: string
                      type:
                        description: One of possible context types
                        enum:
                        - user-cli
                        - user-ui
                        - testsuite
                        - testtrigger
                        - scheduler
                        - testexecution
                        - testsuiteexecution
                        type: string
                    required:
                    - type
                    type: object
                  slavePodRequest:
                    description: pod request body
                    properties:
                      podTemplate:
                        description: pod template extensions
                        type: string
                      podTemplateReference:
                        description: name of the template resource
                        type: string
                      resources:
                        description: pod resources request specification
                        properties:
                          limits:
                            description: resource request specification
                            properties:
                              cpu:
                                description: requested cpu units
                                type: string
                              memory:
                                description: requested memory units
                                type: string
                            type: object
                          requests:
                            description: resource request specification
                            properties:
                              cpu:
                                description: requested cpu units
                                type: string
                              memory:
                                description: requested memory units
                                type: string
                            type: object
                        type: object
                    type: object
                  sourceScripts:
                    description: run scripts using source command (container executor only)
                    type: boolean
                  startTime:
                    description: test start time
                    format: date-time
                    type: string
                  testName:
                    description: unique test name (CRD Test name)
                    type: string
                  testNamespace:
                    description: test namespace
                    type: string
                  testSecretUUID:
                    description: test secret uuid
                    type: string
                  testSuiteName:
                    description: unique test suite name (CRD Test suite name), if
                      it's run as a part of test suite
                    type: string
                  testSuiteSecretUUID:
                    description: test suite secret uuid, if it's run as a part of
                      test suite
                    type: string
                  testType:
                    description: test type e.g. postman/collection
                    type: string
                  uploads:
                    description: list of file paths that need to be copied into the
                      test from uploads
                    items:
                      type: string
                    type: array
                  variables:
                    additionalProperties:
                      properties:
                        name:
                          description: variable name
                          type: string
                        type:
                          description: variable type
                          type: string
                        value:
                          description: variable string value
                          type: string
                        valueFrom:
                          description: or load it from var source
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      type: object
                    type: object
                  variablesFile:
                    description: variables file content - need to be in format for
                      particular executor (e.g. postman envs file)
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: testkube/charts/testkube-operator/templates/tests.testkube.io_tests.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: tests.tests.testkube.io
spec:
  group: tests.testkube.io
  names:
    kind: Test
    listKind: TestList
    plural: tests
    singular: test
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Test is the Schema for the tests API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TestSpec defines the desired state of Test
            properties:
              after:
                description: After steps is list of scripts which will be sequentially
                  orchestrated
                items:
                  description: TestStepSpec will of particular type will have config
                    for possible step types
                  properties:
                    delay:
                      properties:
                        duration:
                          description: Duration in ms
                          format: int32
                          type: integer
                      type: object
                    execute:
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                        stopOnFailure:
                          type: boolean
                      type: object
                    type:
                      type: string
                  type: object
                type: array
              before:
                description: Before steps is list of scripts which will be sequentially
                  orchestrated
                items:
                  description: TestStepSpec will of particular type will have config
                    for possible step types
                  properties:
                    delay:
                      properties:
                        duration:
                          description: Duration in ms
                          format: int32
                          type: integer
                      type: object
                    execute:
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                        stopOnFailure:
                          type: boolean
                      type: object
                    type:
                      type: string
                  type: object
                type: array
              description:
                type: string
              repeats:
                type: integer
              steps:
                description: Steps is list of scripts which will be sequentially orchestrated
                items:
                  description: TestStepSpec will of particular type will have config
                    for possible step types
                  properties:
                    delay:
                      properties:
                        duration:
                          description: Duration in ms
                          format: int32
                          type: integer
                      type: object
                    execute:
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                        stopOnFailure:
                          type: boolean
                      type: object
                    type:
                      type: string
                  type: object
                type: array
              tags:
                items:
                  type: string
                type: array
            type: object
          status:
            description: TestStatus defines the observed state of Test
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v2
    schema:
      openAPIV3Schema:
        description: Test is the Schema for the tests API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TestSpec defines the desired state of Test
            properties:
              content:
                description: test content object
                properties:
                  data:
                    description: test content body
                    type: string
                  repository:
                    description: repository of test content
                    properties:
                      branch:
                        description: branch/tag name for checkout
                        type: string
                      commit:
                        description: commit id (sha) for checkout
                        type: string
                      path:
                        description: if needed we can checkout particular path (dir
                          or file) in case of BIG/mono repositories
                        type: string
                      token:
                        description: git auth token for private repositories
                        type: string
                      type:
                        description: VCS repository type
                        type: string
                      uri:
                        description: uri of content file or git directory
                        type: string
                      username:
                        description: git auth username for private repositories
                        type: string
                    required:
                    - type
                    - uri
                    type: object
                  type:
                    description: test type
                    type: string
                  uri:
                    description: uri of test content
                    type: string
                type: object
              executorArgs:
                description: additional executor binary arguments
                items:
                  type: string
                type: array
              name:
                description: test execution custom name
                type: string
              params:
                additionalProperties:
                  type: string
                description: DEPRECATED execution params passed to executor
                type: object
              schedule:
                description: schedule in cron job format for scheduled test execution
                type: string
              type:
                description: test type
                type: string
              variables:
                additionalProperties:
                  properties:
                    name:
                      description: variable name
                      type: string
                    type:
                      description: variable type
                      type: string
                    value:
                      description: variable string value
                      type: string
                    valueFrom:
                      description: or load it from var source
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        fieldRef:
                          description: 'Selects a field of the pod: supports metadata.name,
                            metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP,
                            status.podIP, status.podIPs.'
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                        resourceFieldRef:
                          description: 'Selects a resource of the container: only
                            resources limits and requests (limits.cpu, limits.memory,
                            limits.ephemeral-storage, requests.cpu, requests.memory
                            and requests.ephemeral-storage) are currently supported.'
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                description: Variables are new params with secrets attached
                type: object
            type: object
          status:
            description: TestStatus defines the observed state of Test
            properties:
              executions_count:
                type: integer
              last_execution:
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .spec.type
      name: Type
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v3
    schema:
      openAPIV3Schema:
        description: Test is the Schema for the tests API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TestSpec defines the desired state of Test
            properties:
              content:
                description: test content object
                properties:
                  data:
                    description: test content body
                    type: string
                  repository:
                    description: repository of test content
                    properties:
                      authType:
                        description: auth type for git requests
                        enum:
                        - basic
                        - header
                        type: string
                      branch:
                        description: branch/tag name for checkout
                        type: string
                      certificateSecret:
                        description: git auth certificate secret for private repositories
                        type: string
                      commit:
                        description: commit id (sha) for checkout
                        type: string
                      path:
                        description: if needed we can checkout particular path (dir
                          or file) in case of BIG/mono repositories
                        type: string
                      tokenSecret:
                        description: SecretRef is the Testkube internal reference
                          for secret storage in Kubernetes secrets
                        properties:
                          key:
                            description: object key
                            type: string
                          name:
                            description: object name
                            type: string
                        required:
                        - key
                        - name
                        type: object
                      type:
                        description: VCS repository type
                        type: string
                      uri:
                        description: uri of content file or git directory
                        type: string
                      usernameSecret:
                        description: SecretRef is the Testkube internal reference
                          for secret storage in Kubernetes secrets
                        properties:
                          key:
                            description: object key
                            type: string
                          name:
                            description: object name
                            type: string
                        required:
                        - key
                        - name
                        type: object
                      workingDir:
                        description: if provided we checkout the whole repository
                          and run test from this directory
                        type: string
                    type: object
                  type:
                    description: test type
                    enum:
                    - string
                    - file-uri
                    - git-file
                    - git-dir
                    - git
                    type: string
                  uri:
                    description: uri of test content
                    type: string
                type: object
              description:
                description: test description
                type: string
              executionRequest:
                description: test execution request body
                properties:
                  activeDeadlineSeconds:
                    description: Optional duration in seconds the pod may be active
                      on the node relative to StartTime before the system will actively
                      try to mark it failed and kill associated containers. Value
                      must be a positive integer.
                    format: int64
                    type: integer
                  args:
                    description: additional executor binary arguments
                    items:
                      type: string
                    type: array
                  argsMode:
                    description: usage mode for arguments
                    enum:
                    - append
                    - override
                    - replace
                    type: string
                  artifactRequest:
                    description: artifact request body with test artifacts
                    properties:
                      dirs:
                        description: artifact directories for scraping
                        items:
                          type: string
                        type: array
                      masks:
                        description: regexp to filter scraped artifacts, single or
                          comma separated
                        items:
                          type: string
                        type: array
                      omitFolderPerExecution:
                        description: don't use a separate folder for execution artifacts
                        type: boolean
                      sharedBetweenPods:
                        description: whether to share volume between pods
                        type: boolean
                      storageBucket:
                        description: artifact bucket storage
                        type: string
                      storageClassName:
                        description: artifact storage class name for container executor
                        type: string
                      useDefaultStorageClassName:
                        description: whether to use default storage class name
                        type: boolean
                      volumeMountPath:
                        description: artifact volume mount path for container executor
                        type: string
                    type: object
                  command:
                    description: executor binary command
                    items:
                      type: string
                    type: array
                  cronJobTemplate:
                    description: cron job template extensions
                    type: string
                  cronJobTemplateReference:
                    description: name of the template resource
                    type: string
                  envConfigMaps:
                    description: config map references
                    items:
                      description: Reference to env resource
                      properties:
                        mapToVariables:
                          description: whether we shoud map to variables from resource
                          type: boolean
                        mount:
                          description: whether we shoud mount resource
                          type: boolean
                        mountPath:
                          description: where we shoud mount resource
                          type: string
                        reference:
                          description: LocalObjectReference contains enough information
                            to let you locate the referenced object inside the same
                            namespace.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                      required:
                      - reference
                      type: object
                    type: array
                  envSecrets:
                    description: secret references
                    items:
                      description: Reference to env resource
                      properties:
                        mapToVariables:
                          description: whether we shoud map to variables from resource
                          type: boolean
                        mount:
                          description: whether we shoud mount resource
                          type: boolean
                        mountPath:
                          description: where we shoud mount resource
                          type: string
                        reference:
                          description: LocalObjectReference contains enough information
                            to let you locate the referenced object inside the same
                            namespace.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                      required:
                      - reference
                      type: object
                    type: array
                  envs:
                    additionalProperties:
                      type: string
                    description: 'Environment variables passed to executor. Deprecated:
                      use Basic Variables instead'
                    type: object
                  executePostRunScriptBeforeScraping:
                    description: execute post run script before scraping (prebuilt
                      executor only)
                    type: boolean
                  executionLabels:
                    additionalProperties:
                      type: string
                    description: test execution labels
                    type: object
                  executionNamespace:
                    description: namespace for test execution (Pro edition only)
                    type: string
                  httpProxy:
                    description: http proxy for executor containers
                    type: string
                  httpsProxy:
                    description: https proxy for executor containers
                    type: string
                  image:
                    description: container executor image
                    type: string
                  imagePullSecrets:
                    description: container executor image pull secrets
                    items:
                      description: LocalObjectReference contains enough information
                        to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    type: array
                  isVariablesFileUploaded:
                    type: boolean
                  jobTemplate:
                    description: job template extensions
                    type: string
                  jobTemplateReference:
                    description: name of the template resource
                    type: string
                  name:
                    description: test execution custom name
                    type: string
                  namespace:
                    description: test kubernetes namespace (\"testkube\" when not
                      set)
                    type: string
                  negativeTest:
                    description: negative test will fail the execution if it is a
                      success and it will succeed if it is a failure
                    type: boolean
                  number:
                    description: test execution number
                    format: int32
                    type: integer
                  postRunScript:
                    description: script to run after test execution
                    type: string
                  preRunScript:
                    description: script to run before test execution
                    type: string
                  pvcTemplate:
                    description: pvc template extensions
                    type: string
                  pvcTemplateReference:
                    description: name of the template resource
                    type: string
                  scraperTemplate:
                    description: scraper template extensions
                    type: string
                  scraperTemplateReference:
                    description: name of the template resource
                    type: string
                  secretEnvs:
                    additionalProperties:
                      type: string
                    description: 'Execution variables passed to executor from secrets.
                      Deprecated: use Secret Variables instead'
                    type: object
                  slavePodRequest:
                    description: pod request body
                    properties:
                      podTemplate:
                        description: pod template extensions
                        type: string
                      podTemplateReference:
                        description: name of the template resource
                        type: string
                      resources:
                        description: pod resources request specification
                        properties:
                          limits:
                            description: resource request specification
                            properties:
                              cpu:
                                description: requested cpu units
                                type: string
                              memory:
                                description: requested memory units
                                type: string
                            type: object
                          requests:
                            description: resource request specification
                            properties:
                              cpu:
                                description: requested cpu units
                                type: string
                              memory:
                                description: requested memory units
                                type: string
                            type: object
                        type: object
                    type: object
                  sourceScripts:
                    description: run scripts using source command (container executor only)
                    type: boolean
                  sync:
                    description: whether to start execution sync or async
                    type: boolean
                  testSecretUUID:
                    description: test secret uuid
                    type: string
                  testSuiteName:
                    description: unique test suite name (CRD Test suite name), if
                      it's run as a part of test suite
                    type: string
                  testSuiteSecretUUID:
                    description: test suite secret uuid, if it's run as a part of
                      test suite
                    type: string
                  variables:
                    additionalProperties:
                      properties:
                        name:
                          description: variable name
                          type: string
                        type:
                          description: variable type
                          type: string
                        value:
                          description: variable string value
                          type: string
                        valueFrom:
                          description: or load it from var source
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      type: object
                    type: object
                  variablesFile:
                    description: variables file content - need to be in format for
                      particular executor (e.g. postman envs file)
                    type: string
                type: object
              name:
                description: test name
                type: string
              schedule:
                description: schedule in cron job format for scheduled test execution
                type: string
              source:
                description: reference to test source resource
                type: string
              type:
                description: test type
                type: string
              uploads:
                description: files to be used from minio uploads
                items:
                  type: string
                type: array
            type: object
          status:
            description: TestStatus defines the observed state of Test
            properties:
              latestExecution:
                description: latest execution result
                properties:
                  endTime:
                    description: test end time
                    format: date-time
                    type: string
                  id:
                    description: execution id
                    type: string
                  number:
                    description: execution number
                    format: int32
                    type: integer
                  startTime:
                    description: test start time
                    format: date-time
                    type: string
                  status:
                    enum:
                    - queued
                    - running
                    - passed
                    - failed
                    - aborted
                    - timeout
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: testkube/charts/testkube-operator/templates/tests.testkube.io_testsources.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: testsources.tests.testkube.io
spec:
  group: tests.testkube.io
  names:
    kind: TestSource
    listKind: TestSourceList
    plural: testsources
    singular: testsource
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: TestSource is the Schema for the testsources API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TestSourceSpec defines the desired state of TestSource
            properties:
              data:
                description: test content body
                type: string
              repository:
                description: repository of test content
                properties:
                  authType:
                    description: auth type for git requests
                    enum:
                    - basic
                    - header
                    type: string
                  branch:
                    description: branch/tag name for checkout
                    type: string
                  certificateSecret:
                    description: git auth certificate secret for private repositories
                    type: string
                  commit:
                    description: commit id (sha) for checkout
                    type: string
                  path:
                    description: If specified, does a sparse checkout of the repository
                      at the given path
                    type: string
                  tokenSecret:
                    description: SecretRef is the Testkube internal reference for
                      secret storage in Kubernetes secrets
                    properties:
                      key:
                        description: object key
                        type: string
                      name:
                        description: object name
                        type: string
                    required:
                    - key
                    - name
                    type: object
                  type:
                    description: VCS repository type
                    type: string
                  uri:
                    description: uri of content file or git directory
                    type: string
                  usernameSecret:
                    description: SecretRef is the Testkube internal reference for
                      secret storage in Kubernetes secrets
                    properties:
                      key:
                        description: object key
                        type: string
                      name:
                        description: object name
                        type: string
                    required:
                    - key
                    - name
                    type: object
                  workingDir:
                    description: if provided we checkout the whole repository and
                      run test from this directory
                    type: string
                required:
                - type
                - uri
                type: object
              type:
                enum:
                - string
                - file-uri
                - git-file
                - git-dir
                - git
                type: string
              uri:
                description: uri of test content
                type: string
            type: object
          status:
            description: TestSourceStatus defines the observed state of TestSource
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: testkube/charts/testkube-operator/templates/tests.testkube.io_testsuiteexecutions.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: testsuiteexecutions.tests.testkube.io
spec:
  group: tests.testkube.io
  names:
    kind: TestSuiteExecution
    listKind: TestSuiteExecutionList
    plural: testsuiteexecutions
    singular: testsuiteexecution
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: TestSuiteExecution is the Schema for the testsuiteexecutions
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TestSuiteExecutionSpec defines the desired state of TestSuiteExecution
            properties:
              executionRequest:
                description: test suite execution request body
                properties:
                  concurrencyLevel:
                    description: number of tests run in parallel
                    format: int32
                    type: integer
                  contentRequest:
                    description: test content request body
                    properties:
                      repository:
                        description: repository parameters for tests in git repositories
                        properties:
                          branch:
                            description: branch/tag name for checkout
                            type: string
                          commit:
                            description: commit id (sha) for checkout
                            type: string
                          path:
                            description: if needed we can checkout particular path
                              (dir or file) in case of BIG/mono repositories
                            type: string
                          workingDir:
                            description: if provided we checkout the whole repository
                              and run test from this directory
                            type: string
                        type: object
                    type: object
                  cronJobTemplate:
                    description: cron job template extensions
                    type: string
                  executionLabels:
                    additionalProperties:
                      type: string
                    description: execution labels
                    type: object
                  httpProxy:
                    description: http proxy for executor containers
                    type: string
                  httpsProxy:
                    description: https proxy for executor containers
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: test suite labels
                    type: object
                  name:
                    description: test execution custom name
                    type: string
                  namespace:
                    description: test kubernetes namespace (\"testkube\" when not
                      set)
                    type: string
                  number:
                    description: test suite execution number
                    format: int32
                    type: integer
                  runningContext:
                    description: running context for test or test suite execution
                    properties:
                      context:
                        description: Context value depending from its type
                        type: string
                      type:
                        description: One of possible context types
                        enum:
                        - user-cli
                        - user-ui
                        - testsuite
                        - testtrigger
                        - scheduler
                        - testexecution
                        - testsuiteexecution
                        type: string
                    required:
                    - type
                    type: object
                  secretUUID:
                    description: secret uuid
                    type: string
                  sync:
                    description: whether to start execution sync or async
                    type: boolean
                  testSuiteExecutionName:
                    description: test suite execution name started the test suite
                      execution
                    type: string
                  timeout:
                    description: duration in seconds the test suite may be active,
                      until its stopped
                    format: int32
                    type: integer
                  variables:
                    additionalProperties:
                      properties:
                        name:
                          description: variable name
                          type: string
                        type:
                          description: variable type
                          type: string
                        value:
                          description: variable string value
                          type: string
                        valueFrom:
                          description: or load it from var source
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      type: object
                    type: object
                type: object
              testSuite:
                properties:
                  name:
                    description: object name
                    type: string
                  namespace:
                    description: object kubernetes namespace
                    type: string
                required:
                - name
                type: object
            required:
            - testSuite
            type: object
          status:
            description: TestSuiteExecutionStatus defines the observed state of TestSuiteExecution
            properties:
              generation:
                description: test status execution generation
                format: int64
                type: integer
              latestExecution:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                properties:
                  duration:
                    description: test duration
                    type: string
                  durationMs:
                    description: test duration in ms
                    format: int32
                    type: integer
                  endTime:
                    description: test end time
                    format: date-time
                    type: string
                  envs:
                    additionalProperties:
                      type: string
                    description: 'Environment variables passed to executor. Deprecated:
                      use Basic Variables instead'
                    type: object
                  executeStepResults:
                    description: batch steps execution results
                    items:
                      description: execution result returned from executor
                      properties:
                        duration:
                          description: step duration
                          type: string
                        endTime:
                          description: step end time
                          format: date-time
                          type: string
                        execute:
                          items:
                            description: execution result returned from executor
                            properties:
                              execution:
                                description: test execution
                                properties:
                                  args:
                                    description: additional arguments/flags passed
                                      to executor binary
                                    items:
                                      type: string
                                    type: array
                                  args_mode:
                                    description: usage mode for arguments
                                    enum:
                                    - append
                                    - override
                                    - replace
                                    type: string
                                  artifactRequest:
                                    description: artifact request body with test artifacts
                                    properties:
                                      dirs:
                                        description: artifact directories for scraping
                                        items:
                                          type: string
                                        type: array
                                      masks:
                                        description: regexp to filter scraped artifacts,
                                          single or comma separated
                                        items:
                                          type: string
                                        type: array
                                      omitFolderPerExecution:
                                        description: don't use a separate folder for
                                          execution artifacts
                                        type: boolean
                                      sharedBetweenPods:
                                        description: whether to share volume between
                                          pods
                                        type: boolean
                                      storageBucket:
                                        description: artifact bucket storage
                                        type: string
                                      storageClassName:
                                        description: artifact storage class name for
                                          container executor
                                        type: string
                                      useDefaultStorageClassName:
                                        description: whether to use default storage
                                          class name
                                        type: boolean
                                      volumeMountPath:
                                        description: artifact volume mount path for
                                          container executor
                                        type: string
                                    type: object
                                  bucketName:
                                    description: minio bucket name to get uploads
                                      from
                                    type: string
                                  command:
                                    description: executor image command
                                    items:
                                      type: string
                                    type: array
                                  containerShell:
                                    description: shell used in container executor
                                    type: string
                                  content:
                                    description: TestContent defines test content
                                    properties:
                                      data:
                                        description: test content body
                                        type: string
                                      repository:
                                        description: repository of test content
                                        properties:
                                          authType:
                                            description: auth type for git requests
                                            enum:
                                            - basic
                                            - header
                                            type: string
                                          branch:
                                            description: branch/tag name for checkout
                                            type: string
                                          certificateSecret:
                                            description: git auth certificate secret
                                              for private repositories
                                            type: string
                                          commit:
                                            description: commit id (sha) for checkout
                                            type: string
                                          path:
                                            description: if needed we can checkout
                                              particular path (dir or file) in case
                                              of BIG/mono repositories
                                            type: string
                                          tokenSecret:
                                            description: Testkube internal reference
                                              for secret storage in Kubernetes secrets
                                            properties:
                                              key:
                                                description: object key
                                                type: string
                                              name:
                                                description: object name
                                                type: string
                                              namespace:
                                                description: object kubernetes namespace
                                                type: string
                                            required:
                                            - key
                                            - name
                                            type: object
                                          type:
                                            description: VCS repository type
                                            type: string
                                          uri:
                                            description: uri of content file or git
                                              directory
                                            type: string
                                          usernameSecret:
                                            description: Testkube internal reference
                                              for secret storage in Kubernetes secrets
                                            properties:
                                              key:
                                                description: object key
                                                type: string
                                              name:
                                                description: object name
                                                type: string
                                              namespace:
                                                description: object kubernetes namespace
                                                type: string
                                            required:
                                            - key
                                            - name
                                            type: object
                                          workingDir:
                                            description: if provided we checkout the
                                              whole repository and run test from this
                                              directory
                                            type: string
                                        type: object
                                      type:
                                        description: test type
                                        enum:
                                        - string
                                        - file-uri
                                        - git-file
                                        - git-dir
                                        - git
                                        type: string
                                      uri:
                                        description: uri of test content
                                        type: string
                                    type: object
                                  duration:
                                    description: test duration
                                    type: string
                                  durationMs:
                                    description: test duration in milliseconds
                                    format: int32
                                    type: integer
                                  endTime:
                                    description: test end time
                                    format: date-time
                                    type: string
                                  envs:
                                    additionalProperties:
                                      type: string
                                    description: 'Environment variables passed to
                                      executor. Deprecated: use Basic Variables instead'
                                    type: object
                                  executePostRunScriptBeforeScraping:
                                    description: execute post run script before scraping
                                      (prebuilt executor only)
                                    type: boolean
                                  executionNamespace:
                                    description: namespace for test execution (Pro
                                      edition only)
                                    type: string
                                  executionResult:
                                    description: execution result returned from executor
                                    properties:
                                      errorMessage:
                                        description: error message when status is
                                          error, separate to output as output can
                                          be partial in case of error
                                        type: string
                                      reports:
                                        properties:
                                          junit:
                                            type: string
                                        type: object
                                      status:
                                        enum:
                                        - queued
                                        - running
                                        - passed
                                        - failed
                                        - aborted
                                        - timeout
                                        type: string
                                      steps:
                                        description: execution steps (for collection
                                          of requests)
                                        items:
                                          description: execution result data
                                          properties:
                                            assertionResults:
                                              items:
                                                description: execution result data
                                                properties:
                                                  errorMessage:
                                                    type: string
                                                  name:
                                                    type: string
                                                  status:
                                                    type: string
                                                type: object
                                              type: array
                                            duration:
                                              type: string
                                            name:
                                              description: step name
                                              type: string
                                            status:
                                              description: execution step status
                                              type: string
                                          required:
                                          - name
                                          - status
                                          type: object
                                        type: array
                                    required:
                                    - status
                                    type: object
                                  id:
                                    description: execution id
                                    type: string
                                  isVariablesFileUploaded:
                                    description: in case the variables file is too
                                      big, it will be uploaded to storage
                                    type: boolean
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: test and execution labels
                                    type: object
                                  name:
                                    description: execution name
                                    type: string
                                  number:
                                    description: execution number
                                    format: int32
                                    type: integer
                                  postRunScript:
                                    description: script to run after test execution
                                    type: string
                                  preRunScript:
                                    description: script to run before test execution
                                    type: string
                                  runningContext:
                                    description: running context for test or test
                                      suite execution
                                    properties:
                                      context:
                                        description: Context value depending from
                                          its type
                                        type: string
                                      type:
                                        description: One of possible context types
                                        enum:
                                        - user-cli
                                        - user-ui
                                        - testsuite
                                        - testtrigger
                                        - scheduler
                                        - testexecution
                                        - testsuiteexecution
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  slavePodRequest:
                                    description: pod request body
                                    properties:
                                      podTemplate:
                                        description: pod template extensions
                                        type: string
                                      podTemplateReference:
                                        description: name of the template resource
                                        type: string
                                      resources:
                                        description: pod resources request specification
                                        properties:
                                          limits:
                                            description: resource request specification
                                            properties:
                                              cpu:
                                                description: requested cpu units
                                                type: string
                                              memory:
                                                description: requested memory units
                                                type: string
                                            type: object
                                          requests:
                                            description: resource request specification
                                            properties:
                                              cpu:
                                                description: requested cpu units
                                                type: string
                                              memory:
                                                description: requested memory units
                                                type: string
                                            type: object
                                        type: object
                                    type: object
                                  sourceScripts:
                                    description: run scripts using source command (container executor only)
                                    type: boolean
                                  startTime:
                                    description: test start time
                                    format: date-time
                                    type: string
                                  testExecutionName:
                                    description: test execution name started the test
                                      execution
                                    type: string
                                  testName:
                                    description: unique test name (CRD Test name)
                                    type: string
                                  testNamespace:
                                    description: test namespace
                                    type: string
                                  testSecretUUID:
                                    description: test secret uuid
                                    type: string
                                  testSuiteName:
                                    description: unique test suite name (CRD Test
                                      suite name), if it's run as a part of test suite
                                    type: string
                                  testSuiteSecretUUID:
                                    description: test suite secret uuid, if it's run
                                      as a part of test suite
                                    type: string
                                  testType:
                                    description: test type e.g. postman/collection
                                    type: string
                                  uploads:
                                    description: list of file paths that need to be
                                      copied into the test from uploads
                                    items:
                                      type: string
                                    type: array
                                  variables:
                                    additionalProperties:
                                      properties:
                                        name:
                                          description: variable name
                                          type: string
                                        type:
                                          description: variable type
                                          type: string
                                        value:
                                          description: variable string value
                                          type: string
                                        valueFrom:
                                          description: or load it from var source
                                          properties:
                                            configMapKeyRef:
                                              description: Selects a key of a ConfigMap.
                                              properties:
                                                key:
                                                  description: The key to select.
                                                  type: string
                                                name:
                                                  description: 'Name of the referent.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    TODO: Add other useful fields.
                                                    apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the
                                                    ConfigMap or its key must be defined
                                                  type: boolean
                                              required:
                                              - key
                                              type: object
                                            fieldRef:
                                              description: 'Selects a field of the
                                                pod: supports metadata.name, metadata.namespace,
                                                `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                                spec.nodeName, spec.serviceAccountName,
                                                status.hostIP, status.podIP, status.podIPs.'
                                              properties:
                                                apiVersion:
                                                  description: Version of the schema
                                                    the FieldPath is written in terms
                                                    of, defaults to "v1".
                                                  type: string
                                                fieldPath:
                                                  description: Path of the field to
                                                    select in the specified API version.
                                                  type: string
                                              required:
                                              - fieldPath
                                              type: object
                                            resourceFieldRef:
                                              description: 'Selects a resource of
                                                the container: only resources limits
                                                and requests (limits.cpu, limits.memory,
                                                limits.ephemeral-storage, requests.cpu,
                                                requests.memory and requests.ephemeral-storage)
                                                are currently supported.'
                                              properties:
                                                containerName:
                                                  description: 'Container name: required
                                                    for volumes, optional for env
                                                    vars'
                                                  type: string
                                                divisor:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Specifies the output
                                                    format of the exposed resources,
                                                    defaults to "1"
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                resource:
                                                  description: 'Required: resource
                                                    to select'
                                                  type: string
                                              required:
                                              - resource
                                              type: object
                                            secretKeyRef:
                                              description: Selects a key of a secret
                                                in the pod's namespace
                                              properties:
                                                key:
                                                  description: The key of the secret
                                                    to select from.  Must be a valid
                                                    secret key.
                                                  type: string
                                                name:
                                                  description: 'Name of the referent.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    TODO: Add other useful fields.
                                                    apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the
                                                    Secret or its key must be defined
                                                  type: boolean
                                              required:
                                              - key
                                              type: object
                                          type: object
                                      type: object
                                    type: object
                                  variablesFile:
                                    description: variables file content - need to
                                      be in format for particular executor (e.g. postman
                                      envs file)
                                    type: string
                                type: object
                              step:
                                properties:
                                  delay:
                                    description: delay duration in time units
                                    type: string
                                  test:
                                    description: object name
                                    type: string
                                type: object
                              test:
                                properties:
                                  name:
                                    description: object name
                                    type: string
                                  namespace:
                                    description: object kubernetes namespace
                                    type: string
                                required:
                                - name
                                type: object
                            type: object
                          type: array
                        startTime:
                          description: step start time
                          format: date-time
                          type: string
                        step:
                          description: set of steps run in parallel
                          properties:
                            execute:
                              items:
                                properties:
                                  delay:
                                    description: delay duration in time units
                                    type: string
                                  test:
                                    description: object name
                                    type: string
                                type: object
                              type: array
                            stopOnFailure:
                              type: boolean
                          required:
                          - stopOnFailure
                          type: object
                      type: object
                    type: array
                  id:
                    description: execution id
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: test suite labels
                    type: object
                  name:
                    description: execution name
                    type: string
                  runningContext:
                    description: running context for test or test suite execution
                    properties:
                      context:
                        description: Context value depending from its type
                        type: string
                      type:
                        description: One of possible context types
                        enum:
                        - user-cli
                        - user-ui
                        - testsuite
                        - testtrigger
                        - scheduler
                        - testexecution
                        - testsuiteexecution
                        type: string
                    required:
                    - type
                    type: object
                  secretUUID:
                    description: secret uuid
                    type: string
                  startTime:
                    description: test start time
                    format: date-time
                    type: string
                  status:
                    enum:
                    - queued
                    - running
                    - passed
                    - failed
                    - aborting
                    - aborted
                    - timeout
                    type: string
                  stepResults:
                    description: steps execution results
                    items:
                      description: execution result returned from executor
                      properties:
                        execution:
                          description: test execution
                          properties:
                            args:
                              description: additional arguments/flags passed to executor
                                binary
                              items:
                                type: string
                              type: array
                            args_mode:
                              description: usage mode for arguments
                              enum:
                              - append
                              - override
                              - replace
                              type: string
                            artifactRequest:
                              description: artifact request body with test artifacts
                              properties:
                                dirs:
                                  description: artifact directories for scraping
                                  items:
                                    type: string
                                  type: array
                                masks:
                                  description: regexp to filter scraped artifacts,
                                    single or comma separated
                                  items:
                                    type: string
                                  type: array
                                omitFolderPerExecution:
                                  description: don't use a separate folder for execution
                                    artifacts
                                  type: boolean
                                sharedBetweenPods:
                                  description: whether to share volume between pods
                                  type: boolean
                                storageBucket:
                                  description: artifact bucket storage
                                  type: string
                                storageClassName:
                                  description: artifact storage class name for container
                                    executor
                                  type: string
                                useDefaultStorageClassName:
                                  description: whether to use default storage class
                                    name
                                  type: boolean
                                volumeMountPath:
                                  description: artifact volume mount path for container
                                    executor
                                  type: string
                              type: object
                            bucketName:
                              description: minio bucket name to get uploads from
                              type: string
                            command:
                              description: executor image command
                              items:
                                type: string
                              type: array
                            containerShell:
                              description: shell used in container executor
                              type: string
                            content:
                              description: TestContent defines test content
                              properties:
                                data:
                                  description: test content body
                                  type: string
                                repository:
                                  description: repository of test content
                                  properties:
                                    authType:
                                      description: auth type for git requests
                                      enum:
                                      - basic
                                      - header
                                      type: string
                                    branch:
                                      description: branch/tag name for checkout
                                      type: string
                                    certificateSecret:
                                      description: git auth certificate secret for
                                        private repositories
                                      type: string
                                    commit:
                                      description: commit id (sha) for checkout
                                      type: string
                                    path:
                                      description: if needed we can checkout particular
                                        path (dir or file) in case of BIG/mono repositories
                                      type: string
                                    tokenSecret:
                                      description: Testkube internal reference for
                                        secret storage in Kubernetes secrets
                                      properties:
                                        key:
                                          description: object key
                                          type: string
                                        name:
                                          description: object name
                                          type: string
                                        namespace:
                                          description: object kubernetes namespace
                                          type: string
                                      required:
                                      - key
                                      - name
                                      type: object
                                    type:
                                      description: VCS repository type
                                      type: string
                                    uri:
                                      description: uri of content file or git directory
                                      type: string
                                    usernameSecret:
                                      description: Testkube internal reference for
                                        secret storage in Kubernetes secrets
                                      properties:
                                        key:
                                          description: object key
                                          type: string
                                        name:
                                          description: object name
                                          type: string
                                        namespace:
                                          description: object kubernetes namespace
                                          type: string
                                      required:
                                      - key
                                      - name
                                      type: object
                                    workingDir:
                                      description: if provided we checkout the whole
                                        repository and run test from this directory
                                      type: string
                                  type: object
                                type:
                                  description: test type
                                  enum:
                                  - string
                                  - file-uri
                                  - git-file
                                  - git-dir
                                  - git
                                  type: string
                                uri:
                                  description: uri of test content
                                  type: string
                              type: object
                            duration:
                              description: test duration
                              type: string
                            durationMs:
                              description: test duration in milliseconds
                              format: int32
                              type: integer
                            endTime:
                              description: test end time
                              format: date-time
                              type: string
                            envs:
                              additionalProperties:
                                type: string
                              description: 'Environment variables passed to executor.
                                Deprecated: use Basic Variables instead'
                              type: object
                            executePostRunScriptBeforeScraping:
                              description: execute post run script before scraping
                                (prebuilt executor only)
                              type: boolean
                            executionNamespace:
                              description: namespace for test execution (Pro edition
                                only)
                              type: string
                            executionResult:
                              description: execution result returned from executor
                              properties:
                                errorMessage:
                                  description: error message when status is error,
                                    separate to output as output can be partial in
                                    case of error
                                  type: string
                                reports:
                                  properties:
                                    junit:
                                      type: string
                                  type: object
                                status:
                                  enum:
                                  - queued
                                  - running
                                  - passed
                                  - failed
                                  - aborted
                                  - timeout
                                  type: string
                                steps:
                                  description: execution steps (for collection of
                                    requests)
                                  items:
                                    description: execution result data
                                    properties:
                                      assertionResults:
                                        items:
                                          description: execution result data
                                          properties:
                                            errorMessage:
                                              type: string
                                            name:
                                              type: string
                                            status:
                                              type: string
                                          type: object
                                        type: array
                                      duration:
                                        type: string
                                      name:
                                        description: step name
                                        type: string
                                      status:
                                        description: execution step status
                                        type: string
                                    required:
                                    - name
                                    - status
                                    type: object
                                  type: array
                              required:
                              - status
                              type: object
                            id:
                              description: execution id
                              type: string
                            isVariablesFileUploaded:
                              description: in case the variables file is too big,
                                it will be uploaded to storage
                              type: boolean
                            labels:
                              additionalProperties:
                                type: string
                              description: test and execution labels
                              type: object
                            name:
                              description: execution name
                              type: string
                            number:
                              description: execution number
                              format: int32
                              type: integer
                            postRunScript:
                              description: script to run after test execution
                              type: string
                            preRunScript:
                              description: script to run before test execution
                              type: string
                            runningContext:
                              description: running context for test or test suite
                                execution
                              properties:
                                context:
                                  description: Context value depending from its type
                                  type: string
                                type:
                                  description: One of possible context types
                                  enum:
                                  - user-cli
                                  - user-ui
                                  - testsuite
                                  - testtrigger
                                  - scheduler
                                  - testexecution
                                  - testsuiteexecution
                                  type: string
                              required:
                              - type
                              type: object
                            slavePodRequest:
                              description: pod request body
                              properties:
                                podTemplate:
                                  description: pod template extensions
                                  type: string
                                podTemplateReference:
                                  description: name of the template resource
                                  type: string
                                resources:
                                  description: pod resources request specification
                                  properties:
                                    limits:
                                      description: resource request specification
                                      properties:
                                        cpu:
                                          description: requested cpu units
                                          type: string
                                        memory:
                                          description: requested memory units
                                          type: string
                                      type: object
                                    requests:
                                      description: resource request specification
                                      properties:
                                        cpu:
                                          description: requested cpu units
                                          type: string
                                        memory:
                                          description: requested memory units
                                          type: string
                                      type: object
                                  type: object
                              type: object
                            sourceScripts:
                              description: run scripts using source command (container executor only)
                              type: boolean
                            startTime:
                              description: test start time
                              format: date-time
                              type: string
                            testExecutionName:
                              description: test execution name started the test execution
                              type: string
                            testName:
                              description: unique test name (CRD Test name)
                              type: string
                            testNamespace:
                              description: test namespace
                              type: string
                            testSecretUUID:
                              description: test secret uuid
                              type: string
                            testSuiteName:
                              description: unique test suite name (CRD Test suite
                                name), if it's run as a part of test suite
                              type: string
                            testSuiteSecretUUID:
                              description: test suite secret uuid, if it's run as
                                a part of test suite
                              type: string
                            testType:
                              description: test type e.g. postman/collection
                              type: string
                            uploads:
                              description: list of file paths that need to be copied
                                into the test from uploads
                              items:
                                type: string
                              type: array
                            variables:
                              additionalProperties:
                                properties:
                                  name:
                                    description: variable name
                                    type: string
                                  type:
                                    description: variable type
                                    type: string
                                  value:
                                    description: variable string value
                                    type: string
                                  valueFrom:
                                    description: or load it from var source
                                    properties:
                                      configMapKeyRef:
                                        description: Selects a key of a ConfigMap.
                                        properties:
                                          key:
                                            description: The key to select.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                      fieldRef:
                                        description: 'Selects a field of the pod:
                                          supports metadata.name, metadata.namespace,
                                          `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                          spec.nodeName, spec.serviceAccountName,
                                          status.hostIP, status.podIP, status.podIPs.'
                                        properties:
                                          apiVersion:
                                            description: Version of the schema the
                                              FieldPath is written in terms of, defaults
                                              to "v1".
                                            type: string
                                          fieldPath:
                                            description: Path of the field to select
                                              in the specified API version.
                                            type: string
                                        required:
                                        - fieldPath
                                        type: object
                                      resourceFieldRef:
                                        description: 'Selects a resource of the container:
                                          only resources limits and requests (limits.cpu,
                                          limits.memory, limits.ephemeral-storage,
                                          requests.cpu, requests.memory and requests.ephemeral-storage)
                                          are currently supported.'
                                        properties:
                                          containerName:
                                            description: 'Container name: required
                                              for volumes, optional for env vars'
                                            type: string
                                          divisor:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            description: Specifies the output format
                                              of the exposed resources, defaults to
                                              "1"
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          resource:
                                            description: 'Required: resource to select'
                                            type: string
                                        required:
                                        - resource
                                        type: object
                                      secretKeyRef:
                                        description: Selects a key of a secret in
                                          the pod's namespace
                                        properties:
                                          key:
                                            description: The key of the secret to
                                              select from.  Must be a valid secret
                                              key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                    type: object
                                type: object
                              type: object
                            variablesFile:
                              description: variables file content - need to be in
                                format for particular executor (e.g. postman envs
                                file)
                              type: string
                          type: object
                        step:
                          properties:
                            delay:
                              properties:
                                duration:
                                  description: delay duration in milliseconds
                                  format: int32
                                  type: integer
                              required:
                              - duration
                              type: object
                            execute:
                              properties:
                                name:
                                  description: object name
                                  type: string
                                namespace:
                                  description: object kubernetes namespace
                                  type: string
                              required:
                              - name
                              type: object
                            stopTestOnFailure:
                              type: boolean
                          required:
                          - stopTestOnFailure
                          type: object
                        test:
                          properties:
                            name:
                              description: object name
                              type: string
                            namespace:
                              description: object kubernetes namespace
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    type: array
                  testSuite:
                    properties:
                      name:
                        description: object name
                        type: string
                      namespace:
                        description: object kubernetes namespace
                        type: string
                    required:
                    - name
                    type: object
                  testSuiteExecutionName:
                    description: test suite execution name started the test suite
                      execution
                    type: string
                  variables:
                    additionalProperties:
                      properties:
                        name:
                          description: variable name
                          type: string
                        type:
                          description: variable type
                          type: string
                        value:
                          description: variable string value
                          type: string
                        valueFrom:
                          description: or load it from var source
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      type: object
                    type: object
                required:
                - id
                - name
                - testSuite
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: testkube/charts/testkube-operator/templates/tests.testkube.io_testsuites.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: testsuites.tests.testkube.io
spec:
  group: tests.testkube.io
  names:
    kind: TestSuite
    listKind: TestSuiteList
    plural: testsuites
    singular: testsuite
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: TestSuite is the Schema for the testsuites API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TestSuiteSpec defines the desired state of TestSuite
            properties:
              after:
                description: After steps is list of tests which will be sequentially
                  orchestrated
                items:
                  description: TestSuiteStepSpec will of particular type will have
                    config for possible step types
                  properties:
                    delay:
                      description: TestSuiteStepDelay contains step delay parameters
                      properties:
                        duration:
                          description: Duration in ms
                          format: int32
                          type: integer
                      type: object
                    execute:
                      description: TestSuiteStepExecute defines step to be executed
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                        stopOnFailure:
                          type: boolean
                      type: object
                    type:
                      type: string
                  type: object
                type: array
              before:
                description: Before steps is list of tests which will be sequentially
                  orchestrated
                items:
                  description: TestSuiteStepSpec will of particular type will have
                    config for possible step types
                  properties:
                    delay:
                      description: TestSuiteStepDelay contains step delay parameters
                      properties:
                        duration:
                          description: Duration in ms
                          format: int32
                          type: integer
                      type: object
                    execute:
                      description: TestSuiteStepExecute defines step to be executed
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                        stopOnFailure:
                          type: boolean
                      type: object
                    type:
                      type: string
                  type: object
                type: array
              description:
                type: string
              params:
                additionalProperties:
                  type: string
                description: DEPRECATED execution params passed to executor
                type: object
              repeats:
                type: integer
              schedule:
                description: schedule in cron job format for scheduled test execution
                type: string
              steps:
                description: Steps is list of tests which will be sequentially orchestrated
                items:
                  description: TestSuiteStepSpec will of particular type will have
                    config for possible step types
                  properties:
                    delay:
                      description: TestSuiteStepDelay contains step delay parameters
                      properties:
                        duration:
                          description: Duration in ms
                          format: int32
                          type: integer
                      type: object
                    execute:
                      description: TestSuiteStepExecute defines step to be executed
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                        stopOnFailure:
                          type: boolean
                      type: object
                    type:
                      type: string
                  type: object
                type: array
              variables:
                additionalProperties:
                  properties:
                    name:
                      description: variable name
                      type: string
                    type:
                      description: variable type
                      type: string
                    value:
                      description: variable string value
                      type: string
                    valueFrom:
                      description: or load it from var source
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        fieldRef:
                          description: 'Selects a field of the pod: supports metadata.name,
                            metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP,
                            status.podIP, status.podIPs.'
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                        resourceFieldRef:
                          description: 'Selects a resource of the container: only
                            resources limits and requests (limits.cpu, limits.memory,
                            limits.ephemeral-storage, requests.cpu, requests.memory
                            and requests.ephemeral-storage) are currently supported.'
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                description: Variables are new params with secrets attached
                type: object
            type: object
          status:
            description: TestSuiteStatus defines the observed state of TestSuite
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v2
    schema:
      openAPIV3Schema:
        description: TestSuite is the Schema for the testsuites API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TestSuiteSpec defines the desired state of TestSuite
            properties:
              after:
                description: After steps is list of tests which will be sequentially
                  orchestrated
                items:
                  description: TestSuiteStepSpec for particular type will have config
                    for possible step types
                  properties:
                    delay:
                      description: TestSuiteStepDelay contains step delay parameters
                      properties:
                        duration:
                          description: Duration in ms
                          format: int32
                          type: integer
                      type: object
                    execute:
                      description: TestSuiteStepExecute defines step to be executed
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                        stopOnFailure:
                          type: boolean
                      type: object
                    type:
                      description: TestSuiteStepType defines different type of test
                        suite steps
                      enum:
                      - execute
                      - delay
                      type: string
                  type: object
                type: array
              before:
                description: Before steps is list of tests which will be sequentially
                  orchestrated
                items:
                  description: TestSuiteStepSpec for particular type will have config
                    for possible step types
                  properties:
                    delay:
                      description: TestSuiteStepDelay contains step delay parameters
                      properties:
                        duration:
                          description: Duration in ms
                          format: int32
                          type: integer
                      type: object
                    execute:
                      description: TestSuiteStepExecute defines step to be executed
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                        stopOnFailure:
                          type: boolean
                      type: object
                    type:
                      description: TestSuiteStepType defines different type of test
                        suite steps
                      enum:
                      - execute
                      - delay
                      type: string
                  type: object
                type: array
              description:
                type: string
              executionRequest:
                description: TestSuiteExecutionRequest defines the execution request
                  body
                properties:
                  cronJobTemplate:
                    description: cron job template extensions
                    type: string
                  executionLabels:
                    additionalProperties:
                      type: string
                    description: execution labels
                    type: object
                  httpProxy:
                    description: http proxy for executor containers
                    type: string
                  httpsProxy:
                    description: https proxy for executor containers
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: test suite labels
                    type: object
                  name:
                    description: test execution custom name
                    type: string
                  namespace:
                    description: test kubernetes namespace (\"testkube\" when not
                      set)
                    type: string
                  secretUUID:
                    description: secret uuid
                    type: string
                  sync:
                    description: whether to start execution sync or async
                    type: boolean
                  timeout:
                    description: timeout for test suite execution
                    format: int32
                    type: integer
                  variables:
                    additionalProperties:
                      properties:
                        name:
                          description: variable name
                          type: string
                        type:
                          description: variable type
                          type: string
                        value:
                          description: variable string value
                          type: string
                        valueFrom:
                          description: or load it from var source
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      type: object
                    type: object
                type: object
              repeats:
                type: integer
              schedule:
                description: schedule in cron job format for scheduled test execution
                type: string
              steps:
                description: Steps is list of tests which will be sequentially orchestrated
                items:
                  description: TestSuiteStepSpec for particular type will have config
                    for possible step types
                  properties:
                    delay:
                      description: TestSuiteStepDelay contains step delay parameters
                      properties:
                        duration:
                          description: Duration in ms
                          format: int32
                          type: integer
                      type: object
                    execute:
                      description: TestSuiteStepExecute defines step to be executed
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                        stopOnFailure:
                          type: boolean
                      type: object
                    type:
                      description: TestSuiteStepType defines different type of test
                        suite steps
                      enum:
                      - execute
                      - delay
                      type: string
                  type: object
                type: array
            type: object
          status:
            description: TestSuiteStatus defines the observed state of TestSuite
            properties:
              latestExecution:
                description: latest execution result
                properties:
                  endTime:
                    description: test suite execution end time
                    format: date-time
                    type: string
                  id:
                    description: execution id
                    type: string
                  startTime:
                    description: test suite execution start time
                    format: date-time
                    type: string
                  status:
                    enum:
                    - queued
                    - running
                    - passed
                    - failed
                    - aborting
                    - aborted
                    - timeout
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v3
    schema:
      openAPIV3Schema:
        description: TestSuite is the Schema for the testsuites API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TestSuiteSpec defines the desired state of TestSuite
            properties:
              after:
                description: After batch steps is list of batch tests which will be
                  sequentially orchestrated for parallel tests in each batch
                items:
                  description: TestSuiteBatchStep is set of steps run in parallel
                  properties:
                    downloadArtifacts:
                      description: options to download artifacts from previous steps
                      properties:
                        allPreviousSteps:
                          type: boolean
                        previousStepNumbers:
                          description: previous step numbers starting from 1
                          items:
                            format: int32
                            type: integer
                          type: array
                        previousTestNames:
                          description: previous test names
                          items:
                            type: string
                          type: array
                      type: object
                    execute:
                      items:
                        description: TestSuiteStepSpec for particular type will have
                          config for possible step types
                        properties:
                          delay:
                            description: delay duration in time units
                            format: duration
                            type: string
                          executionRequest:
                            description: TestSuiteStepExecutionRequest contains parameters
                              to be used by the executions. These fields will be passed
                              to the execution when a Test Suite is queued for execution.
                              TestSuiteStepExecutionRequest parameters have the highest
                              priority. They override the values coming from Test
                              Suites, Tests, and Test Executions.
                            properties:
                              args:
                                description: additional executor binary arguments
                                items:
                                  type: string
                                type: array
                              argsMode:
                                description: usage mode for arguments
                                enum:
                                - append
                                - override
                                - replace
                                type: string
                              command:
                                description: executor binary command
                                items:
                                  type: string
                                type: array
                              cronJobTemplate:
                                description: cron job template extensions
                                type: string
                              cronJobTemplateReference:
                                description: cron job template extensions reference
                                type: string
                              executionLabels:
                                additionalProperties:
                                  type: string
                                description: test execution labels
                                type: object
                              httpProxy:
                                description: http proxy for executor containers
                                type: string
                              httpsProxy:
                                description: https proxy for executor containers
                                type: string
                              jobTemplate:
                                description: job template extensions
                                type: string
                              jobTemplateReference:
                                description: job template extensions reference
                                type: string
                              negativeTest:
                                description: negative test will fail the execution
                                  if it is a success and it will succeed if it is
                                  a failure
                                type: boolean
                              pvcTemplate:
                                description: pvc template extensions
                                type: string
                              pvcTemplateReference:
                                description: pvc template extensions reference
                                type: string
                              runningContext:
                                description: RunningContext for test or test suite
                                  execution
                                properties:
                                  context:
                                    description: Context value depending from its
                                      type
                                    type: string
                                  type:
                                    description: One of possible context types
                                    type: string
                                required:
                                - type
                                type: object
                              scraperTemplate:
                                description: scraper template extensions
                                type: string
                              scraperTemplateReference:
                                description: scraper template extensions reference
                                type: string
                              sync:
                                description: whether to start execution sync or async
                                type: boolean
                              variables:
                                additionalProperties:
                                  properties:
                                    name:
                                      description: variable name
                                      type: string
                                    type:
                                      description: variable type
                                      type: string
                                    value:
                                      description: variable string value
                                      type: string
                                    valueFrom:
                                      description: or load it from var source
                                      properties:
                                        configMapKeyRef:
                                          description: Selects a key of a ConfigMap.
                                          properties:
                                            key:
                                              description: The key to select.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the ConfigMap
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                        fieldRef:
                                          description: 'Selects a field of the pod:
                                            supports metadata.name, metadata.namespace,
                                            `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                            spec.nodeName, spec.serviceAccountName,
                                            status.hostIP, status.podIP, status.podIPs.'
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the
                                                FieldPath is written in terms of,
                                                defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select
                                                in the specified API version.
                                              type: string
                                          required:
                                          - fieldPath
                                          type: object
                                        resourceFieldRef:
                                          description: 'Selects a resource of the
                                            container: only resources limits and requests
                                            (limits.cpu, limits.memory, limits.ephemeral-storage,
                                            requests.cpu, requests.memory and requests.ephemeral-storage)
                                            are currently supported.'
                                          properties:
                                            containerName:
                                              description: 'Container name: required
                                                for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Specifies the output format
                                                of the exposed resources, defaults
                                                to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to
                                                select'
                                              type: string
                                          required:
                                          - resource
                                          type: object
                                        secretKeyRef:
                                          description: Selects a key of a secret in
                                            the pod's namespace
                                          properties:
                                            key:
                                              description: The key of the secret to
                                                select from.  Must be a valid secret
                                                key.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the Secret
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                      type: object
                                  type: object
                                type: object
                            type: object
                          test:
                            description: object name
                            type: string
                        type: object
                      type: array
                    stopOnFailure:
                      type: boolean
                  required:
                  - stopOnFailure
                  type: object
                type: array
              before:
                description: Before batch steps is list of batch tests which will
                  be sequentially orchestrated for parallel tests in each batch
                items:
                  description: TestSuiteBatchStep is set of steps run in parallel
                  properties:
                    downloadArtifacts:
                      description: options to download artifacts from previous steps
                      properties:
                        allPreviousSteps:
                          type: boolean
                        previousStepNumbers:
                          description: previous step numbers starting from 1
                          items:
                            format: int32
                            type: integer
                          type: array
                        previousTestNames:
                          description: previous test names
                          items:
                            type: string
                          type: array
                      type: object
                    execute:
                      items:
                        description: TestSuiteStepSpec for particular type will have
                          config for possible step types
                        properties:
                          delay:
                            description: delay duration in time units
                            format: duration
                            type: string
                          executionRequest:
                            description: TestSuiteStepExecutionRequest contains parameters
                              to be used by the executions. These fields will be passed
                              to the execution when a Test Suite is queued for execution.
                              TestSuiteStepExecutionRequest parameters have the highest
                              priority. They override the values coming from Test
                              Suites, Tests, and Test Executions.
                            properties:
                              args:
                                description: additional executor binary arguments
                                items:
                                  type: string
                                type: array
                              argsMode:
                                description: usage mode for arguments
                                enum:
                                - append
                                - override
                                - replace
                                type: string
                              command:
                                description: executor binary command
                                items:
                                  type: string
                                type: array
                              cronJobTemplate:
                                description: cron job template extensions
                                type: string
                              cronJobTemplateReference:
                                description: cron job template extensions reference
                                type: string
                              executionLabels:
                                additionalProperties:
                                  type: string
                                description: test execution labels
                                type: object
                              httpProxy:
                                description: http proxy for executor containers
                                type: string
                              httpsProxy:
                                description: https proxy for executor containers
                                type: string
                              jobTemplate:
                                description: job template extensions
                                type: string
                              jobTemplateReference:
                                description: job template extensions reference
                                type: string
                              negativeTest:
                                description: negative test will fail the execution
                                  if it is a success and it will succeed if it is
                                  a failure
                                type: boolean
                              pvcTemplate:
                                description: pvc template extensions
                                type: string
                              pvcTemplateReference:
                                description: pvc template extensions reference
                                type: string
                              runningContext:
                                description: RunningContext for test or test suite
                                  execution
                                properties:
                                  context:
                                    description: Context value depending from its
                                      type
                                    type: string
                                  type:
                                    description: One of possible context types
                                    type: string
                                required:
                                - type
                                type: object
                              scraperTemplate:
                                description: scraper template extensions
                                type: string
                              scraperTemplateReference:
                                description: scraper template extensions reference
                                type: string
                              sync:
                                description: whether to start execution sync or async
                                type: boolean
                              variables:
                                additionalProperties:
                                  properties:
                                    name:
                                      description: variable name
                                      type: string
                                    type:
                                      description: variable type
                                      type: string
                                    value:
                                      description: variable string value
                                      type: string
                                    valueFrom:
                                      description: or load it from var source
                                      properties:
                                        configMapKeyRef:
                                          description: Selects a key of a ConfigMap.
                                          properties:
                                            key:
                                              description: The key to select.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the ConfigMap
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                        fieldRef:
                                          description: 'Selects a field of the pod:
                                            supports metadata.name, metadata.namespace,
                                            `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                            spec.nodeName, spec.serviceAccountName,
                                            status.hostIP, status.podIP, status.podIPs.'
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the
                                                FieldPath is written in terms of,
                                                defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select
                                                in the specified API version.
                                              type: string
                                          required:
                                          - fieldPath
                                          type: object
                                        resourceFieldRef:
                                          description: 'Selects a resource of the
                                            container: only resources limits and requests
                                            (limits.cpu, limits.memory, limits.ephemeral-storage,
                                            requests.cpu, requests.memory and requests.ephemeral-storage)
                                            are currently supported.'
                                          properties:
                                            containerName:
                                              description: 'Container name: required
                                                for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Specifies the output format
                                                of the exposed resources, defaults
                                                to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to
                                                select'
                                              type: string
                                          required:
                                          - resource
                                          type: object
                                        secretKeyRef:
                                          description: Selects a key of a secret in
                                            the pod's namespace
                                          properties:
                                            key:
                                              description: The key of the secret to
                                                select from.  Must be a valid secret
                                                key.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the Secret
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                      type: object
                                  type: object
                                type: object
                            type: object
                          test:
                            description: object name
                            type: string
                        type: object
                      type: array
                    stopOnFailure:
                      type: boolean
                  required:
                  - stopOnFailure
                  type: object
                type: array
              description:
                type: string
              executionRequest:
                description: test suite execution request body
                properties:
                  cronJobTemplate:
                    description: cron job template extensions
                    type: string
                  cronJobTemplateReference:
                    description: name of the template resource
                    type: string
                  executionLabels:
                    additionalProperties:
                      type: string
                    description: execution labels
                    type: object
                  httpProxy:
                    description: http proxy for executor containers
                    type: string
                  httpsProxy:
                    description: https proxy for executor containers
                    type: string
                  jobTemplate:
                    description: job template extensions
                    type: string
                  jobTemplateReference:
                    description: name of the template resource
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: test suite labels
                    type: object
                  name:
                    description: test execution custom name
                    type: string
                  namespace:
                    description: test kubernetes namespace (\"testkube\" when not
                      set)
                    type: string
                  pvcTemplate:
                    description: pvc template extensions
                    type: string
                  pvcTemplateReference:
                    description: name of the template resource
                    type: string
                  scraperTemplate:
                    description: scraper template extensions
                    type: string
                  scraperTemplateReference:
                    description: name of the template resource
                    type: string
                  secretUUID:
                    description: secret uuid
                    type: string
                  sync:
                    description: whether to start execution sync or async
                    type: boolean
                  timeout:
                    description: timeout for test suite execution
                    format: int32
                    type: integer
                  variables:
                    additionalProperties:
                      properties:
                        name:
                          description: variable name
                          type: string
                        type:
                          description: variable type
                          type: string
                        value:
                          description: variable string value
                          type: string
                        valueFrom:
                          description: or load it from var source
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      type: object
                    type: object
                type: object
              repeats:
                type: integer
              schedule:
                description: schedule in cron job format for scheduled test execution
                type: string
              steps:
                description: Batch steps is list of batch tests which will be sequentially
                  orchestrated for parallel tests in each batch
                items:
                  description: TestSuiteBatchStep is set of steps run in parallel
                  properties:
                    downloadArtifacts:
                      description: options to download artifacts from previous steps
                      properties:
                        allPreviousSteps:
                          type: boolean
                        previousStepNumbers:
                          description: previous step numbers starting from 1
                          items:
                            format: int32
                            type: integer
                          type: array
                        previousTestNames:
                          description: previous test names
                          items:
                            type: string
                          type: array
                      type: object
                    execute:
                      items:
                        description: TestSuiteStepSpec for particular type will have
                          config for possible step types
                        properties:
                          delay:
                            description: delay duration in time units
                            format: duration
                            type: string
                          executionRequest:
                            description: TestSuiteStepExecutionRequest contains parameters
                              to be used by the executions. These fields will be passed
                              to the execution when a Test Suite is queued for execution.
                              TestSuiteStepExecutionRequest parameters have the highest
                              priority. They override the values coming from Test
                              Suites, Tests, and Test Executions.
                            properties:
                              args:
                                description: additional executor binary arguments
                                items:
                                  type: string
                                type: array
                              argsMode:
                                description: usage mode for arguments
                                enum:
                                - append
                                - override
                                - replace
                                type: string
                              command:
                                description: executor binary command
                                items:
                                  type: string
                                type: array
                              cronJobTemplate:
                                description: cron job template extensions
                                type: string
                              cronJobTemplateReference:
                                description: cron job template extensions reference
                                type: string
                              executionLabels:
                                additionalProperties:
                                  type: string
                                description: test execution labels
                                type: object
                              httpProxy:
                                description: http proxy for executor containers
                                type: string
                              httpsProxy:
                                description: https proxy for executor containers
                                type: string
                              jobTemplate:
                                description: job template extensions
                                type: string
                              jobTemplateReference:
                                description: job template extensions reference
                                type: string
                              negativeTest:
                                description: negative test will fail the execution
                                  if it is a success and it will succeed if it is
                                  a failure
                                type: boolean
                              pvcTemplate:
                                description: pvc template extensions
                                type: string
                              pvcTemplateReference:
                                description: pvc template extensions reference
                                type: string
                              runningContext:
                                description: RunningContext for test or test suite
                                  execution
                                properties:
                                  context:
                                    description: Context value depending from its
                                      type
                                    type: string
                                  type:
                                    description: One of possible context types
                                    type: string
                                required:
                                - type
                                type: object
                              scraperTemplate:
                                description: scraper template extensions
                                type: string
                              scraperTemplateReference:
                                description: scraper template extensions reference
                                type: string
                              sync:
                                description: whether to start execution sync or async
                                type: boolean
                              variables:
                                additionalProperties:
                                  properties:
                                    name:
                                      description: variable name
                                      type: string
                                    type:
                                      description: variable type
                                      type: string
                                    value:
                                      description: variable string value
                                      type: string
                                    valueFrom:
                                      description: or load it from var source
                                      properties:
                                        configMapKeyRef:
                                          description: Selects a key of a ConfigMap.
                                          properties:
                                            key:
                                              description: The key to select.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the ConfigMap
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                        fieldRef:
                                          description: 'Selects a field of the pod:
                                            supports metadata.name, metadata.namespace,
                                            `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                            spec.nodeName, spec.serviceAccountName,
                                            status.hostIP, status.podIP, status.podIPs.'
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the
                                                FieldPath is written in terms of,
                                                defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select
                                                in the specified API version.
                                              type: string
                                          required:
                                          - fieldPath
                                          type: object
                                        resourceFieldRef:
                                          description: 'Selects a resource of the
                                            container: only resources limits and requests
                                            (limits.cpu, limits.memory, limits.ephemeral-storage,
                                            requests.cpu, requests.memory and requests.ephemeral-storage)
                                            are currently supported.'
                                          properties:
                                            containerName:
                                              description: 'Container name: required
                                                for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Specifies the output format
                                                of the exposed resources, defaults
                                                to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to
                                                select'
                                              type: string
                                          required:
                                          - resource
                                          type: object
                                        secretKeyRef:
                                          description: Selects a key of a secret in
                                            the pod's namespace
                                          properties:
                                            key:
                                              description: The key of the secret to
                                                select from.  Must be a valid secret
                                                key.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the Secret
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                      type: object
                                  type: object
                                type: object
                            type: object
                          test:
                            description: object name
                            type: string
                        type: object
                      type: array
                    stopOnFailure:
                      type: boolean
                  required:
                  - stopOnFailure
                  type: object
                type: array
            type: object
          status:
            description: TestSuiteStatus defines the observed state of TestSuite
            properties:
              latestExecution:
                description: latest execution result
                properties:
                  endTime:
                    description: test suite execution end time
                    format: date-time
                    type: string
                  id:
                    description: execution id
                    type: string
                  startTime:
                    description: test suite execution start time
                    format: date-time
                    type: string
                  status:
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: testkube/charts/testkube-operator/templates/tests.testkube.io_testtriggers.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: testtriggers.tests.testkube.io
spec:
  group: tests.testkube.io
  names:
    kind: TestTrigger
    listKind: TestTriggerList
    plural: testtriggers
    singular: testtrigger
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.resource
      name: Resource
      type: string
    - jsonPath: .spec.event
      name: Event
      type: string
    - jsonPath: .spec.execution
      name: Execution
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: TestTrigger is the Schema for the testtriggers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TestTriggerSpec defines the desired state of TestTrigger
            properties:
              action:
                description: Action represents what needs to be executed for selected
                  Execution
                enum:
                - run
                type: string
              concurrencyPolicy:
                description: ConcurrencyPolicy defines concurrency policy for selected
                  Execution
                enum:
                - allow
                - forbid
                - replace
                type: string
              conditionSpec:
                description: What resource conditions should be matched
                properties:
                  conditions:
                    description: list of test trigger conditions
                    items:
                      description: TestTriggerCondition is used for definition of
                        the condition for test triggers
                      properties:
                        reason:
                          description: test trigger condition reason
                          type: string
                        status:
                          description: TestTriggerConditionStatuses defines condition
                            statuses for test triggers
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        ttl:
                          description: duration in seconds in the past from current
                            time when the condition is still valid
                          format: int32
                          type: integer
                        type:
                          description: test trigger condition
                          type: string
                      required:
                      - status
                      - type
                      type: object
                    type: array
                  delay:
                    description: duration in seconds the test trigger waits between
                      condition check
                    format: int32
                    type: integer
                  timeout:
                    description: duration in seconds the test trigger waits for conditions,
                      until its stopped
                    format: int32
                    type: integer
                type: object
              delay:
                description: Delay is a duration string which specifies how long should
                  the test be delayed after a trigger is matched
                format: duration
                type: string
              event:
                description: On which Event for a Resource should an Action be triggered
                enum:
                - created
                - modified
                - deleted
                - deployment-scale-update
                - deployment-image-update
                - deployment-env-update
                - deployment-containers-modified
                type: string
              execution:
                description: Execution identifies for which test execution should
                  an Action be executed
                enum:
                - test
                - testsuite
                type: string
              probeSpec:
                description: What resource probes should be matched
                properties:
                  delay:
                    description: duration in seconds the test trigger waits between
                      probes
                    format: int32
                    type: integer
                  probes:
                    description: list of test trigger probes
                    items:
                      description: TestTriggerProbe is used for definition of the
                        probe for test triggers
                      properties:
                        headers:
                          additionalProperties:
                            type: string
                          description: test trigger condition probe headers to submit
                          type: object
                        host:
                          description: test trigger condition probe host, default
                            is pod ip or service name
                          type: string
                        path:
                          description: test trigger condition probe path to check,
                            default is /
                          type: string
                        port:
                          description: test trigger condition probe port to connect
                          format: int32
                          type: integer
                        scheme:
                          description: test trigger condition probe scheme to connect
                            to host, default is http
                          type: string
                      type: object
                    type: array
                  timeout:
                    description: duration in seconds the test trigger waits for probes,
                      until its stopped
                    format: int32
                    type: integer
                type: object
              resource:
                description: For which Resource do we monitor Event which triggers
                  an Action on certain conditions
                enum:
                - pod
                - deployment
                - statefulset
                - daemonset
                - service
                - ingress
                - event
                - configmap
                type: string
              resourceSelector:
                description: ResourceSelector identifies which Kubernetes Objects
                  should be watched
                properties:
                  labelSelector:
                    description: LabelSelector is used to identify a group of Kubernetes
                      Objects based on their metadata labels
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                  name:
                    description: Name selector is used to identify a Kubernetes Object
                      based on the metadata name
                    type: string
                  nameRegex:
                    description: kubernetes resource name regex
                    type: string
                  namespace:
                    description: Namespace of the Kubernetes object
                    type: string
                type: object
              testSelector:
                description: TestSelector identifies on which Testkube Kubernetes
                  Objects an Action should be taken
                properties:
                  labelSelector:
                    description: LabelSelector is used to identify a group of Kubernetes
                      Objects based on their metadata labels
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                  name:
                    description: Name selector is used to identify a Kubernetes Object
                      based on the metadata name
                    type: string
                  nameRegex:
                    description: kubernetes resource name regex
                    type: string
                  namespace:
                    description: Namespace of the Kubernetes object
                    type: string
                type: object
            required:
            - action
            - event
            - execution
            - resource
            - resourceSelector
            - testSelector
            type: object
          status:
            description: TestTriggerStatus defines the observed state of TestTrigger
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: testkube/charts/testkube-operator/templates/testworkflows.testkube.io_testworkflows.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: testworkflows.testworkflows.testkube.io
spec:
  group: testworkflows.testkube.io
  names:
    kind: TestWorkflow
    listKind: TestWorkflowList
    plural: testworkflows
    singular: testworkflow
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: TestWorkflow is the Schema for the workflows API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          description:
            description: TestWorkflow readable description
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TestWorkflow specification
            properties:
              after:
                description: steps to run at the end of the workflow
                items:
                  properties:
                    artifacts:
                      description: scrape artifacts from the volumes
                      properties:
                        compress:
                          description: compression options for the artifacts
                          properties:
                            name:
                              description: artifact name
                              minLength: 1
                              type: string
                          required:
                          - name
                          type: object
                        paths:
                          description: paths to fetch from the container
                          items:
                            type: string
                          type: array
                        workingDir:
                          description: working directory to override, so it will be
                            used as a base dir
                          type: string
                      type: object
                    condition:
                      description: 'expression to declare under which conditions the
                        step should be run defaults to: "passed", except artifacts
                        where it defaults to "always"'
                      type: string
                    container:
                      description: defaults for the containers in this step
                      properties:
                        args:
                          description: override default command in the image (empty
                            string to default CMD of the image)
                          items:
                            type: string
                          type: array
                        command:
                          description: override default command in the image (empty
                            string to default ENTRYPOINT of the image)
                          items:
                            type: string
                          type: array
                        env:
                          description: environment variables to append to the container
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are
                                  expanded using the previously defined environment
                                  variables in the container and any service environment
                                  variables. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged.
                                  Double $$ are reduced to a single $, which allows
                                  for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                  will produce the string literal "$(VAR_NAME)". Escaped
                                  references will never be expanded, regardless of
                                  whether the variable exists or not. Defaults to
                                  "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                      metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                      `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                      spec.serviceAccountName, status.hostIP, status.podIP,
                                      status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage, requests.cpu,
                                      requests.memory and requests.ephemeral-storage)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        envFrom:
                          description: external environment variables to append to
                            the container
                          items:
                            description: EnvFromSource represents the source of a
                              set of ConfigMaps
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                                type: object
                              prefix:
                                description: An optional identifier to prepend to
                                  each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                                type: object
                            type: object
                          type: array
                        image:
                          description: image to be used for the container
                          type: string
                        imagePullPolicy:
                          description: pulling policy for the image
                          type: string
                        resources:
                          description: expected resources for the container
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                x-kubernetes-int-or-string: true
                              description: resource limits for the container
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                x-kubernetes-int-or-string: true
                              description: resource requests for the container
                              type: object
                          type: object
                        securityContext:
                          description: security context for the container
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether
                                a process can gain more privileges than its parent
                                process. This bool directly controls if the no_new_privs
                                flag will be set on the container process. AllowPrivilegeEscalation
                                is true always when the container is: 1) run as Privileged
                                2) has CAP_SYS_ADMIN Note that this field cannot be
                                set when spec.os.name is windows.'
                              type: boolean
                            capabilities:
                              description: The capabilities to add/drop when running
                                containers. Defaults to the default set of capabilities
                                granted by the container runtime. Note that this field
                                cannot be set when spec.os.name is windows.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              description: Run container in privileged mode. Processes
                                in privileged containers are essentially equivalent
                                to root on the host. Defaults to false. Note that
                                this field cannot be set when spec.os.name is windows.
                              type: boolean
                            procMount:
                              description: procMount denotes the type of proc mount
                                to use for the containers. The default is DefaultProcMount
                                which uses the container runtime defaults for readonly
                                paths and masked paths. This requires the ProcMountType
                                feature flag to be enabled. Note that this field cannot
                                be set when spec.os.name is windows.
                              type: string
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only
                                root filesystem. Default is false. Note that this
                                field cannot be set when spec.os.name is windows.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container
                                process. Uses runtime default if unset. May also be
                                set in PodSecurityContext.  If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is windows.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as
                                a non-root user. If true, the Kubelet will validate
                                the image at runtime to ensure that it does not run
                                as UID 0 (root) and fail to start the container if
                                it does. If unset or false, no such validation will
                                be performed. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container
                                process. Defaults to user specified in image metadata
                                if unspecified. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name
                                is windows.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: The SELinux context to be applied to the
                                container. If unspecified, the container runtime will
                                allocate a random SELinux context for each container.  May
                                also be set in PodSecurityContext.  If set in both
                                SecurityContext and PodSecurityContext, the value
                                specified in SecurityContext takes precedence. Note
                                that this field cannot be set when spec.os.name is
                                windows.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies
                                    to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies
                                    to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies
                                    to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies
                                    to the container.
                                  type: string
                              type: object
                            seccompProfile:
                              description: The seccomp options to use by this container.
                                If seccomp options are provided at both the pod &
                                container level, the container options override the
                                pod options. Note that this field cannot be set when
                                spec.os.name is windows.
                              properties:
                                localhostProfile:
                                  description: localhostProfile indicates a profile
                                    defined in a file on the node should be used.
                                    The profile must be preconfigured on the node
                                    to work. Must be a descending path, relative to
                                    the kubelet's configured seccomp profile location.
                                    Must be set if type is "Localhost". Must NOT be
                                    set for any other type.
                                  type: string
                                type:
                                  description: "type indicates which kind of seccomp
                                    profile will be applied. Valid options are: \n
                                    Localhost - a profile defined in a file on the
                                    node should be used. RuntimeDefault - the container
                                    runtime default profile should be used. Unconfined
                                    - no profile should be applied."
                                  type: string
                              required:
                              - type
                              type: object
                            windowsOptions:
                              description: The Windows specific settings applied to
                                all containers. If unspecified, the options from the
                                PodSecurityContext will be used. If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is linux.
                              properties:
                                gmsaCredentialSpec:
                                  description: GMSACredentialSpec is where the GMSA
                                    admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                    inlines the contents of the GMSA credential spec
                                    named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name
                                    of the GMSA credential spec to use.
                                  type: string
                                hostProcess:
                                  description: HostProcess determines if a container
                                    should be run as a 'Host Process' container. All
                                    of a Pod's containers must have the same effective
                                    HostProcess value (it is not allowed to have a
                                    mix of HostProcess containers and non-HostProcess
                                    containers). In addition, if HostProcess is true
                                    then HostNetwork must also be set to true.
                                  type: boolean
                                runAsUserName:
                                  description: The UserName in Windows to run the
                                    entrypoint of the container process. Defaults
                                    to the user specified in image metadata if unspecified.
                                    May also be set in PodSecurityContext. If set
                                    in both SecurityContext and PodSecurityContext,
                                    the value specified in SecurityContext takes precedence.
                                  type: string
                              type: object
                          type: object
                        volumeMounts:
                          description: volume mounts to append to the container
                          items:
                            description: VolumeMount describes a mounting of a Volume
                              within a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the
                                  volume should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts
                                  are propagated from the host to container and the
                                  other way around. When not set, MountPropagationNone
                                  is used. This field is beta in 1.10.
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write
                                  otherwise (false or unspecified). Defaults to false.
                                type: boolean
                              subPath:
                                description: Path within the volume from which the
                                  container's volume should be mounted. Defaults to
                                  "" (volume's root).
                                type: string
                              subPathExpr:
                                description: Expanded path within the volume from
                                  which the container's volume should be mounted.
                                  Behaves similarly to SubPath but environment variable
                                  references $(VAR_NAME) are expanded using the container's
                                  environment. Defaults to "" (volume's root). SubPathExpr
                                  and SubPath are mutually exclusive.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                        workingDir:
                          description: override default working directory in the image
                            (empty string to default WORKDIR for the image)
                          type: string
                      type: object
                    content:
                      description: content that should be fetched for this step
                      properties:
                        files:
                          description: files to load
                          items:
                            properties:
                              content:
                                description: plain-text content to put inside
                                type: string
                              contentFrom:
                                description: external source to use
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                      metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                      `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                      spec.serviceAccountName, status.hostIP, status.podIP,
                                      status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage, requests.cpu,
                                      requests.memory and requests.ephemeral-storage)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                              mode:
                                description: mode to use for the file
                                format: int32
                                type: integer
                              path:
                                description: path where the file should be accessible
                                  at
                                minLength: 1
                                type: string
                            required:
                            - path
                            type: object
                          type: array
                        git:
                          description: git repository details
                          properties:
                            authType:
                              description: authorization type for the credentials
                              enum:
                              - basic
                              - header
                              type: string
                            mountPath:
                              description: where to mount the fetched repository contents
                                (defaults to "repo" directory in the data volume)
                              type: string
                            paths:
                              description: paths to fetch for the sparse checkout
                              items:
                                type: string
                              type: array
                            revision:
                              description: branch, commit or a tag name to fetch
                              type: string
                            token:
                              description: plain text token to fetch with
                              type: string
                            tokenFrom:
                              description: external token to fetch with
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                            uri:
                              description: uri for the Git repository
                              type: string
                            username:
                              description: plain text username to fetch with
                              type: string
                            usernameFrom:
                              description: external username to fetch with
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          type: object
                      type: object
                    delay:
                      description: delay before the step
                      pattern: ^((0|[1-9][0-9]*)h)?((0|[1-9][0-9]*)m)?((0|[1-9][0-9]*)s)?((0|[1-9][0-9]*)ms)?$
                      type: string
                    execute:
                      description: execute other Testkube resources
                      properties:
                        async:
                          description: only schedule the resources, don't watch the
                            results (unless it is needed for parallelism)
                          type: boolean
                        parallelism:
                          description: how many resources could be scheduled in parallel
                          format: int32
                          type: integer
                        tests:
                          description: tests to run
                          items:
                            properties:
                              count:
                                anyOf:
                                - type: integer
                                - type: string
                                description: static number of sharded instances to
                                  spawn
                                x-kubernetes-int-or-string: true
                              description:
                                description: test execution description to display
                                type: string
                              executionRequest:
                                description: pass the execution request overrides
                                properties:
                                  activeDeadlineSeconds:
                                    description: Optional duration in seconds the
                                      pod may be active on the node relative to StartTime
                                      before the system will actively try to mark
                                      it failed and kill associated containers. Value
                                      must be a positive integer.
                                    format: int64
                                    type: integer
                                  args:
                                    description: additional executor binary arguments
                                    items:
                                      type: string
                                    type: array
                                  argsMode:
                                    description: usage mode for arguments
                                    enum:
                                    - append
                                    - override
                                    - replace
                                    type: string
                                  artifactRequest:
                                    description: artifact request body with test artifacts
                                    properties:
                                      dirs:
                                        description: artifact directories for scraping
                                        items:
                                          type: string
                                        type: array
                                      masks:
                                        description: regexp to filter scraped artifacts,
                                          single or comma separated
                                        items:
                                          type: string
                                        type: array
                                      omitFolderPerExecution:
                                        description: don't use a separate folder for
                                          execution artifacts
                                        type: boolean
                                      sharedBetweenPods:
                                        description: whether to share volume between
                                          pods
                                        type: boolean
                                      storageBucket:
                                        description: artifact bucket storage
                                        type: string
                                      storageClassName:
                                        description: artifact storage class name for
                                          container executor
                                        type: string
                                      useDefaultStorageClassName:
                                        description: whether to use default storage
                                          class name
                                        type: boolean
                                      volumeMountPath:
                                        description: artifact volume mount path for
                                          container executor
                                        type: string
                                    type: object
                                  command:
                                    description: executor binary command
                                    items:
                                      type: string
                                    type: array
                                  cronJobTemplate:
                                    description: cron job template extensions
                                    type: string
                                  envConfigMaps:
                                    description: config map references
                                    items:
                                      description: Reference to env resource
                                      properties:
                                        mapToVariables:
                                          description: whether we shoud map to variables
                                            from resource
                                          type: boolean
                                        mount:
                                          description: whether we shoud mount resource
                                          type: boolean
                                        mountPath:
                                          description: where we shoud mount resource
                                          type: string
                                        reference:
                                          description: LocalObjectReference contains
                                            enough information to let you locate the
                                            referenced object inside the same namespace.
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                      required:
                                      - reference
                                      type: object
                                    type: array
                                  envSecrets:
                                    description: secret references
                                    items:
                                      description: Reference to env resource
                                      properties:
                                        mapToVariables:
                                          description: whether we shoud map to variables
                                            from resource
                                          type: boolean
                                        mount:
                                          description: whether we shoud mount resource
                                          type: boolean
                                        mountPath:
                                          description: where we shoud mount resource
                                          type: string
                                        reference:
                                          description: LocalObjectReference contains
                                            enough information to let you locate the
                                            referenced object inside the same namespace.
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                      required:
                                      - reference
                                      type: object
                                    type: array
                                  executePostRunScriptBeforeScraping:
                                    description: execute post run script before scraping
                                      (prebuilt executor only)
                                    type: boolean
                                  executionLabels:
                                    additionalProperties:
                                      type: string
                                    description: test execution labels
                                    type: object
                                  executionNamespace:
                                    description: namespace for test execution (Pro
                                      edition only)
                                    type: string
                                  httpProxy:
                                    description: http proxy for executor containers
                                    type: string
                                  httpsProxy:
                                    description: https proxy for executor containers
                                    type: string
                                  image:
                                    description: container executor image
                                    type: string
                                  imagePullSecrets:
                                    description: container executor image pull secrets
                                    items:
                                      description: LocalObjectReference contains enough
                                        information to let you locate the referenced
                                        object inside the same namespace.
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    type: array
                                  isVariablesFileUploaded:
                                    type: boolean
                                  jobTemplate:
                                    description: job template extensions
                                    type: string
                                  name:
                                    description: test execution custom name
                                    type: string
                                  negativeTest:
                                    description: negative test will fail the execution
                                      if it is a success and it will succeed if it
                                      is a failure
                                    type: boolean
                                  postRunScript:
                                    description: script to run after test execution
                                    type: string
                                  preRunScript:
                                    description: script to run before test execution
                                    type: string
                                  scraperTemplate:
                                    description: scraper template extensions
                                    type: string
                                  sourceScripts:
                                    description: run scripts using source command
                                      (container executor only)
                                    type: boolean
                                  sync:
                                    description: whether to start execution sync or
                                      async
                                    type: boolean
                                  testSecretUUID:
                                    description: test secret uuid
                                    type: string
                                  variables:
                                    additionalProperties:
                                      properties:
                                        name:
                                          description: variable name
                                          type: string
                                        type:
                                          description: variable type
                                          type: string
                                        value:
                                          description: variable string value
                                          type: string
                                        valueFrom:
                                          description: or load it from var source
                                          properties:
                                            configMapKeyRef:
                                              description: Selects a key of a ConfigMap.
                                              properties:
                                                key:
                                                  description: The key to select.
                                                  type: string
                                                name:
                                                  description: 'Name of the referent.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    TODO: Add other useful fields.
                                                    apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the
                                                    ConfigMap or its key must be defined
                                                  type: boolean
                                              required:
                                              - key
                                              type: object
                                            fieldRef:
                                              description: 'Selects a field of the
                                                pod: supports metadata.name, metadata.namespace,
                                                `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                                spec.nodeName, spec.serviceAccountName,
                                                status.hostIP, status.podIP, status.podIPs.'
                                              properties:
                                                apiVersion:
                                                  description: Version of the schema
                                                    the FieldPath is written in terms
                                                    of, defaults to "v1".
                                                  type: string
                                                fieldPath:
                                                  description: Path of the field to
                                                    select in the specified API version.
                                                  type: string
                                              required:
                                              - fieldPath
                                              type: object
                                            resourceFieldRef:
                                              description: 'Selects a resource of
                                                the container: only resources limits
                                                and requests (limits.cpu, limits.memory,
                                                limits.ephemeral-storage, requests.cpu,
                                                requests.memory and requests.ephemeral-storage)
                                                are currently supported.'
                                              properties:
                                                containerName:
                                                  description: 'Container name: required
                                                    for volumes, optional for env
                                                    vars'
                                                  type: string
                                                divisor:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Specifies the output
                                                    format of the exposed resources,
                                                    defaults to "1"
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                resource:
                                                  description: 'Required: resource
                                                    to select'
                                                  type: string
                                              required:
                                              - resource
                                              type: object
                                            secretKeyRef:
                                              description: Selects a key of a secret
                                                in the pod's namespace
                                              properties:
                                                key:
                                                  description: The key of the secret
                                                    to select from.  Must be a valid
                                                    secret key.
                                                  type: string
                                                name:
                                                  description: 'Name of the referent.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    TODO: Add other useful fields.
                                                    apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the
                                                    Secret or its key must be defined
                                                  type: boolean
                                              required:
                                              - key
                                              type: object
                                          type: object
                                      type: object
                                    type: object
                                  variablesFile:
                                    description: variables file content - need to
                                      be in format for particular executor (e.g. postman
                                      envs file)
                                    type: string
                                type: object
                              matrix:
                                description: matrix of parameters to spawn instances
                                  (static)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              maxCount:
                                anyOf:
                                - type: integer
                                - type: string
                                description: dynamic number of sharded instances to
                                  spawn - it will be lowered if there is not enough
                                  sharded values
                                x-kubernetes-int-or-string: true
                              name:
                                description: test name to run
                                type: string
                              shards:
                                description: parameters that should be distributed
                                  across sharded instances
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          type: array
                        workflows:
                          description: workflows to run
                          items:
                            properties:
                              config:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  x-kubernetes-int-or-string: true
                                description: configuration to pass for the workflow
                                type: object
                              count:
                                anyOf:
                                - type: integer
                                - type: string
                                description: static number of sharded instances to
                                  spawn
                                x-kubernetes-int-or-string: true
                              description:
                                description: test workflow execution description to
                                  display
                                type: string
                              executionName:
                                description: unique execution name to use
                                type: string
                              matrix:
                                description: matrix of parameters to spawn instances
                                  (static)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              maxCount:
                                anyOf:
                                - type: integer
                                - type: string
                                description: dynamic number of sharded instances to
                                  spawn - it will be lowered if there is not enough
                                  sharded values
                                x-kubernetes-int-or-string: true
                              name:
                                description: workflow name to run
                                type: string
                              shards:
                                description: parameters that should be distributed
                                  across sharded instances
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          type: array
                      type: object
                    name:
                      description: readable name for the step
                      type: string
                    negative:
                      description: is the step expected to fail
                      type: boolean
                    optional:
                      description: is the step optional, so its failure won't affect
                        the TestWorkflow result
                      type: boolean
                    retry:
                      description: policy for retrying the step
                      properties:
                        count:
                          description: how many times at most it should retry
                          format: int32
                          minimum: 1
                          type: integer
                        until:
                          description: 'until when it should retry (defaults to: "passed")'
                          type: string
                      type: object
                    run:
                      description: run specific container in the current step
                      properties:
                        args:
                          description: override default command in the image (empty
                            string to default CMD of the image)
                          items:
                            type: string
                          type: array
                        command:
                          description: override default command in the image (empty
                            string to default ENTRYPOINT of the image)
                          items:
                            type: string
                          type: array
                        env:
                          description: environment variables to append to the container
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are
                                  expanded using the previously defined environment
                                  variables in the container and any service environment
                                  variables. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged.
                                  Double $$ are reduced to a single $, which allows
                                  for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                  will produce the string literal "$(VAR_NAME)". Escaped
                                  references will never be expanded, regardless of
                                  whether the variable exists or not. Defaults to
                                  "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                      metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                      `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                      spec.serviceAccountName, status.hostIP, status.podIP,
                                      status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage, requests.cpu,
                                      requests.memory and requests.ephemeral-storage)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        envFrom:
                          description: external environment variables to append to
                            the container
                          items:
                            description: EnvFromSource represents the source of a
                              set of ConfigMaps
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                                type: object
                              prefix:
                                description: An optional identifier to prepend to
                                  each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                                type: object
                            type: object
                          type: array
                        image:
                          description: image to be used for the container
                          type: string
                        imagePullPolicy:
                          description: pulling policy for the image
                          type: string
                        resources:
                          description: expected resources for the container
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                x-kubernetes-int-or-string: true
                              description: resource limits for the container
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                x-kubernetes-int-or-string: true
                              description: resource requests for the container
                              type: object
                          type: object
                        securityContext:
                          description: security context for the container
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether
                                a process can gain more privileges than its parent
                                process. This bool directly controls if the no_new_privs
                                flag will be set on the container process. AllowPrivilegeEscalation
                                is true always when the container is: 1) run as Privileged
                                2) has CAP_SYS_ADMIN Note that this field cannot be
                                set when spec.os.name is windows.'
                              type: boolean
                            capabilities:
                              description: The capabilities to add/drop when running
                                containers. Defaults to the default set of capabilities
                                granted by the container runtime. Note that this field
                                cannot be set when spec.os.name is windows.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              description: Run container in privileged mode. Processes
                                in privileged containers are essentially equivalent
                                to root on the host. Defaults to false. Note that
                                this field cannot be set when spec.os.name is windows.
                              type: boolean
                            procMount:
                              description: procMount denotes the type of proc mount
                                to use for the containers. The default is DefaultProcMount
                                which uses the container runtime defaults for readonly
                                paths and masked paths. This requires the ProcMountType
                                feature flag to be enabled. Note that this field cannot
                                be set when spec.os.name is windows.
                              type: string
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only
                                root filesystem. Default is false. Note that this
                                field cannot be set when spec.os.name is windows.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container
                                process. Uses runtime default if unset. May also be
                                set in PodSecurityContext.  If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is windows.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as
                                a non-root user. If true, the Kubelet will validate
                                the image at runtime to ensure that it does not run
                                as UID 0 (root) and fail to start the container if
                                it does. If unset or false, no such validation will
                                be performed. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container
                                process. Defaults to user specified in image metadata
                                if unspecified. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name
                                is windows.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: The SELinux context to be applied to the
                                container. If unspecified, the container runtime will
                                allocate a random SELinux context for each container.  May
                                also be set in PodSecurityContext.  If set in both
                                SecurityContext and PodSecurityContext, the value
                                specified in SecurityContext takes precedence. Note
                                that this field cannot be set when spec.os.name is
                                windows.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies
                                    to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies
                                    to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies
                                    to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies
                                    to the container.
                                  type: string
                              type: object
                            seccompProfile:
                              description: The seccomp options to use by this container.
                                If seccomp options are provided at both the pod &
                                container level, the container options override the
                                pod options. Note that this field cannot be set when
                                spec.os.name is windows.
                              properties:
                                localhostProfile:
                                  description: localhostProfile indicates a profile
                                    defined in a file on the node should be used.
                                    The profile must be preconfigured on the node
                                    to work. Must be a descending path, relative to
                                    the kubelet's configured seccomp profile location.
                                    Must be set if type is "Localhost". Must NOT be
                                    set for any other type.
                                  type: string
                                type:
                                  description: "type indicates which kind of seccomp
                                    profile will be applied. Valid options are: \n
                                    Localhost - a profile defined in a file on the
                                    node should be used. RuntimeDefault - the container
                                    runtime default profile should be used. Unconfined
                                    - no profile should be applied."
                                  type: string
                              required:
                              - type
                              type: object
                            windowsOptions:
                              description: The Windows specific settings applied to
                                all containers. If unspecified, the options from the
                                PodSecurityContext will be used. If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is linux.
                              properties:
                                gmsaCredentialSpec:
                                  description: GMSACredentialSpec is where the GMSA
                                    admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                    inlines the contents of the GMSA credential spec
                                    named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name
                                    of the GMSA credential spec to use.
                                  type: string
                                hostProcess:
                                  description: HostProcess determines if a container
                                    should be run as a 'Host Process' container. All
                                    of a Pod's containers must have the same effective
                                    HostProcess value (it is not allowed to have a
                                    mix of HostProcess containers and non-HostProcess
                                    containers). In addition, if HostProcess is true
                                    then HostNetwork must also be set to true.
                                  type: boolean
                                runAsUserName:
                                  description: The UserName in Windows to run the
                                    entrypoint of the container process. Defaults
                                    to the user specified in image metadata if unspecified.
                                    May also be set in PodSecurityContext. If set
                                    in both SecurityContext and PodSecurityContext,
                                    the value specified in SecurityContext takes precedence.
                                  type: string
                              type: object
                          type: object
                        shell:
                          description: script to run in a default shell for the container
                          type: string
                        volumeMounts:
                          description: volume mounts to append to the container
                          items:
                            description: VolumeMount describes a mounting of a Volume
                              within a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the
                                  volume should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts
                                  are propagated from the host to container and the
                                  other way around. When not set, MountPropagationNone
                                  is used. This field is beta in 1.10.
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write
                                  otherwise (false or unspecified). Defaults to false.
                                type: boolean
                              subPath:
                                description: Path within the volume from which the
                                  container's volume should be mounted. Defaults to
                                  "" (volume's root).
                                type: string
                              subPathExpr:
                                description: Expanded path within the volume from
                                  which the container's volume should be mounted.
                                  Behaves similarly to SubPath but environment variable
                                  references $(VAR_NAME) are expanded using the container's
                                  environment. Defaults to "" (volume's root). SubPathExpr
                                  and SubPath are mutually exclusive.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                        workingDir:
                          description: override default working directory in the image
                            (empty string to default WORKDIR for the image)
                          type: string
                      type: object
                    setup:
                      description: steps to run before other operations in this step
                      x-kubernetes-preserve-unknown-fields: true
                    shell:
                      description: script to run in a default shell for the container
                      type: string
                    steps:
                      description: sub-steps to run
                      x-kubernetes-preserve-unknown-fields: true
                    template:
                      description: single template to run in this step
                      properties:
                        config:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            x-kubernetes-int-or-string: true
                          description: trait configuration values if needed
                          type: object
                        name:
                          description: name of the template to include
                          type: string
                      required:
                      - name
                      type: object
                    timeout:
                      description: maximum time this step may take
                      pattern: ^((0|[1-9][0-9]*)h)?((0|[1-9][0-9]*)m)?((0|[1-9][0-9]*)s)?((0|[1-9][0-9]*)ms)?$
                      type: string
                    use:
                      description: multiple templates to include in this step
                      items:
                        description: TemplateRef is the reference for the template
                          inclusion
                        properties:
                          config:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              x-kubernetes-int-or-string: true
                            description: trait configuration values if needed
                            type: object
                          name:
                            description: name of the template to include
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    workingDir:
                      description: working directory to use for this step
                      type: string
                  type: object
                type: array
              config:
                additionalProperties:
                  properties:
                    default:
                      anyOf:
                      - type: integer
                      - type: string
                      description: default value - if not provided, the parameter
                        is required
                      x-kubernetes-int-or-string: true
                    description:
                      description: parameter description
                      type: string
                    enum:
                      description: the list of allowed values, when limited
                      items:
                        type: string
                      type: array
                    example:
                      anyOf:
                      - type: integer
                      - type: string
                      description: exemplary value
                      x-kubernetes-int-or-string: true
                    exclusiveMaximum:
                      description: maximum value for the number (exclusive)
                      format: int64
                      type: integer
                    exclusiveMinimum:
                      description: minimum value for the number (exclusive)
                      format: int64
                      type: integer
                    format:
                      description: predefined format for the string
                      type: string
                    maxLength:
                      description: maximum length for the string
                      format: int64
                      type: integer
                    maximum:
                      description: maximum value for the number (inclusive)
                      format: int64
                      type: integer
                    minLength:
                      description: minimum length for the string
                      format: int64
                      type: integer
                    minimum:
                      description: minimum value for the number (inclusive)
                      format: int64
                      type: integer
                    multipleOf:
                      description: the number needs to be multiple of this value
                      format: int64
                      type: integer
                    pattern:
                      description: regular expression to match
                      type: string
                    type:
                      default: string
                      description: type of the parameter
                      enum:
                      - string
                      - integer
                      - number
                      - boolean
                      type: string
                  type: object
                description: make the instance configurable with some input data for
                  scheduling it
                type: object
              container:
                description: defaults for the containers for all the TestWorkflow
                  steps
                properties:
                  args:
                    description: override default command in the image (empty string
                      to default CMD of the image)
                    items:
                      type: string
                    type: array
                  command:
                    description: override default command in the image (empty string
                      to default ENTRYPOINT of the image)
                    items:
                      type: string
                    type: array
                  env:
                    description: environment variables to append to the container
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: 'Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in
                            the container and any service environment variables. If
                            a variable cannot be resolved, the reference in the input
                            string will be unchanged. Double $$ are reduced to a single
                            $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Defaults to "".'
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  envFrom:
                    description: external environment variables to append to the container
                    items:
                      description: EnvFromSource represents the source of a set of
                        ConfigMaps
                      properties:
                        configMapRef:
                          description: The ConfigMap to select from
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap must be defined
                              type: boolean
                          type: object
                        prefix:
                          description: An optional identifier to prepend to each key
                            in the ConfigMap. Must be a C_IDENTIFIER.
                          type: string
                        secretRef:
                          description: The Secret to select from
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret must be defined
                              type: boolean
                          type: object
                      type: object
                    type: array
                  image:
                    description: image to be used for the container
                    type: string
                  imagePullPolicy:
                    description: pulling policy for the image
                    type: string
                  resources:
                    description: expected resources for the container
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          x-kubernetes-int-or-string: true
                        description: resource limits for the container
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          x-kubernetes-int-or-string: true
                        description: resource requests for the container
                        type: object
                    type: object
                  securityContext:
                    description: security context for the container
                    properties:
                      allowPrivilegeEscalation:
                        description: 'AllowPrivilegeEscalation controls whether a
                          process can gain more privileges than its parent process.
                          This bool directly controls if the no_new_privs flag will
                          be set on the container process. AllowPrivilegeEscalation
                          is true always when the container is: 1) run as Privileged
                          2) has CAP_SYS_ADMIN Note that this field cannot be set
                          when spec.os.name is windows.'
                        type: boolean
                      capabilities:
                        description: The capabilities to add/drop when running containers.
                          Defaults to the default set of capabilities granted by the
                          container runtime. Note that this field cannot be set when
                          spec.os.name is windows.
                        properties:
                          add:
                            description: Added capabilities
                            items:
                              description: Capability represent POSIX capabilities
                                type
                              type: string
                            type: array
                          drop:
                            description: Removed capabilities
                            items:
                              description: Capability represent POSIX capabilities
                                type
                              type: string
                            type: array
                        type: object
                      privileged:
                        description: Run container in privileged mode. Processes in
                          privileged containers are essentially equivalent to root
                          on the host. Defaults to false. Note that this field cannot
                          be set when spec.os.name is windows.
                        type: boolean
                      procMount:
                        description: procMount denotes the type of proc mount to use
                          for the containers. The default is DefaultProcMount which
                          uses the container runtime defaults for readonly paths and
                          masked paths. This requires the ProcMountType feature flag
                          to be enabled. Note that this field cannot be set when spec.os.name
                          is windows.
                        type: string
                      readOnlyRootFilesystem:
                        description: Whether this container has a read-only root filesystem.
                          Default is false. Note that this field cannot be set when
                          spec.os.name is windows.
                        type: boolean
                      runAsGroup:
                        description: The GID to run the entrypoint of the container
                          process. Uses runtime default if unset. May also be set
                          in PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext
                          takes precedence. Note that this field cannot be set when
                          spec.os.name is windows.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: Indicates that the container must run as a non-root
                          user. If true, the Kubelet will validate the image at runtime
                          to ensure that it does not run as UID 0 (root) and fail
                          to start the container if it does. If unset or false, no
                          such validation will be performed. May also be set in PodSecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence.
                        type: boolean
                      runAsUser:
                        description: The UID to run the entrypoint of the container
                          process. Defaults to user specified in image metadata if
                          unspecified. May also be set in PodSecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence. Note
                          that this field cannot be set when spec.os.name is windows.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: The SELinux context to be applied to the container.
                          If unspecified, the container runtime will allocate a random
                          SELinux context for each container.  May also be set in
                          PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext
                          takes precedence. Note that this field cannot be set when
                          spec.os.name is windows.
                        properties:
                          level:
                            description: Level is SELinux level label that applies
                              to the container.
                            type: string
                          role:
                            description: Role is a SELinux role label that applies
                              to the container.
                            type: string
                          type:
                            description: Type is a SELinux type label that applies
                              to the container.
                            type: string
                          user:
                            description: User is a SELinux user label that applies
                              to the container.
                            type: string
                        type: object
                      seccompProfile:
                        description: The seccomp options to use by this container.
                          If seccomp options are provided at both the pod & container
                          level, the container options override the pod options. Note
                          that this field cannot be set when spec.os.name is windows.
                        properties:
                          localhostProfile:
                            description: localhostProfile indicates a profile defined
                              in a file on the node should be used. The profile must
                              be preconfigured on the node to work. Must be a descending
                              path, relative to the kubelet's configured seccomp profile
                              location. Must be set if type is "Localhost". Must NOT
                              be set for any other type.
                            type: string
                          type:
                            description: "type indicates which kind of seccomp profile
                              will be applied. Valid options are: \n Localhost - a
                              profile defined in a file on the node should be used.
                              RuntimeDefault - the container runtime default profile
                              should be used. Unconfined - no profile should be applied."
                            type: string
                        required:
                        - type
                        type: object
                      windowsOptions:
                        description: The Windows specific settings applied to all
                          containers. If unspecified, the options from the PodSecurityContext
                          will be used. If set in both SecurityContext and PodSecurityContext,
                          the value specified in SecurityContext takes precedence.
                          Note that this field cannot be set when spec.os.name is
                          linux.
                        properties:
                          gmsaCredentialSpec:
                            description: GMSACredentialSpec is where the GMSA admission
                              webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                              inlines the contents of the GMSA credential spec named
                              by the GMSACredentialSpecName field.
                            type: string
                          gmsaCredentialSpecName:
                            description: GMSACredentialSpecName is the name of the
                              GMSA credential spec to use.
                            type: string
                          hostProcess:
                            description: HostProcess determines if a container should
                              be run as a 'Host Process' container. All of a Pod's
                              containers must have the same effective HostProcess
                              value (it is not allowed to have a mix of HostProcess
                              containers and non-HostProcess containers). In addition,
                              if HostProcess is true then HostNetwork must also be
                              set to true.
                            type: boolean
                          runAsUserName:
                            description: The UserName in Windows to run the entrypoint
                              of the container process. Defaults to the user specified
                              in image metadata if unspecified. May also be set in
                              PodSecurityContext. If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            type: string
                        type: object
                    type: object
                  volumeMounts:
                    description: volume mounts to append to the container
                    items:
                      description: VolumeMount describes a mounting of a Volume within
                        a container.
                      properties:
                        mountPath:
                          description: Path within the container at which the volume
                            should be mounted.  Must not contain ':'.
                          type: string
                        mountPropagation:
                          description: mountPropagation determines how mounts are
                            propagated from the host to container and the other way
                            around. When not set, MountPropagationNone is used. This
                            field is beta in 1.10.
                          type: string
                        name:
                          description: This must match the Name of a Volume.
                          type: string
                        readOnly:
                          description: Mounted read-only if true, read-write otherwise
                            (false or unspecified). Defaults to false.
                          type: boolean
                        subPath:
                          description: Path within the volume from which the container's
                            volume should be mounted. Defaults to "" (volume's root).
                          type: string
                        subPathExpr:
                          description: Expanded path within the volume from which
                            the container's volume should be mounted. Behaves similarly
                            to SubPath but environment variable references $(VAR_NAME)
                            are expanded using the container's environment. Defaults
                            to "" (volume's root). SubPathExpr and SubPath are mutually
                            exclusive.
                          type: string
                      required:
                      - mountPath
                      - name
                      type: object
                    type: array
                  workingDir:
                    description: override default working directory in the image (empty
                      string to default WORKDIR for the image)
                    type: string
                type: object
              content:
                description: global content that should be fetched into all containers
                properties:
                  files:
                    description: files to load
                    items:
                      properties:
                        content:
                          description: plain-text content to put inside
                          type: string
                        contentFrom:
                          description: external source to use
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                        mode:
                          description: mode to use for the file
                          format: int32
                          type: integer
                        path:
                          description: path where the file should be accessible at
                          minLength: 1
                          type: string
                      required:
                      - path
                      type: object
                    type: array
                  git:
                    description: git repository details
                    properties:
                      authType:
                        description: authorization type for the credentials
                        enum:
                        - basic
                        - header
                        type: string
                      mountPath:
                        description: where to mount the fetched repository contents
                          (defaults to "repo" directory in the data volume)
                        type: string
                      paths:
                        description: paths to fetch for the sparse checkout
                        items:
                          type: string
                        type: array
                      revision:
                        description: branch, commit or a tag name to fetch
                        type: string
                      token:
                        description: plain text token to fetch with
                        type: string
                      tokenFrom:
                        description: external token to fetch with
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          fieldRef:
                            description: 'Selects a field of the pod: supports metadata.name,
                              metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                              spec.nodeName, spec.serviceAccountName, status.hostIP,
                              status.podIP, status.podIPs.'
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is
                                  written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified
                                  API version.
                                type: string
                            required:
                            - fieldPath
                            type: object
                          resourceFieldRef:
                            description: 'Selects a resource of the container: only
                              resources limits and requests (limits.cpu, limits.memory,
                              limits.ephemeral-storage, requests.cpu, requests.memory
                              and requests.ephemeral-storage) are currently supported.'
                            properties:
                              containerName:
                                description: 'Container name: required for volumes,
                                  optional for env vars'
                                type: string
                              divisor:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Specifies the output format of the exposed
                                  resources, defaults to "1"
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              resource:
                                description: 'Required: resource to select'
                                type: string
                            required:
                            - resource
                            type: object
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                      uri:
                        description: uri for the Git repository
                        type: string
                      username:
                        description: plain text username to fetch with
                        type: string
                      usernameFrom:
                        description: external username to fetch with
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          fieldRef:
                            description: 'Selects a field of the pod: supports metadata.name,
                              metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                              spec.nodeName, spec.serviceAccountName, status.hostIP,
                              status.podIP, status.podIPs.'
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is
                                  written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified
                                  API version.
                                type: string
                            required:
                            - fieldPath
                            type: object
                          resourceFieldRef:
                            description: 'Selects a resource of the container: only
                              resources limits and requests (limits.cpu, limits.memory,
                              limits.ephemeral-storage, requests.cpu, requests.memory
                              and requests.ephemeral-storage) are currently supported.'
                            properties:
                              containerName:
                                description: 'Container name: required for volumes,
                                  optional for env vars'
                                type: string
                              divisor:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Specifies the output format of the exposed
                                  resources, defaults to "1"
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              resource:
                                description: 'Required: resource to select'
                                type: string
                            required:
                            - resource
                            type: object
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                    type: object
                type: object
              events:
                description: events triggering execution of the test workflow
                items:
                  properties:
                    cronjob:
                      description: cron job configuration
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: annotations to attach to the cron job
                          type: object
                        cron:
                          description: cron schedule to run a test workflow
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels to attach to the cron job
                          type: object
                      required:
                      - cron
                      type: object
                  type: object
                type: array
              job:
                description: configuration for the scheduled job
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: annotations added to the scheduled job
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: labels added to the scheduled job
                    type: object
                type: object
              pod:
                description: configuration for the scheduled pod
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: annotations added to the scheduled pod
                    type: object
                  imagePullSecrets:
                    description: references to secrets with credentials for pulling
                      the images from registry
                    items:
                      description: LocalObjectReference contains enough information
                        to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    description: labels added to the scheduled pod
                    type: object
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: node selector to define on which node the pod should
                      land
                    type: object
                  serviceAccountName:
                    description: default service account name for the scheduled pod
                    type: string
                  volumes:
                    description: volumes to include in the pod
                    items:
                      description: Volume represents a named volume in a pod that
                        may be accessed by any container in the pod.
                      properties:
                        awsElasticBlockStore:
                          description: 'awsElasticBlockStore represents an AWS Disk
                            resource that is attached to a kubelet''s host machine
                            and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                          properties:
                            fsType:
                              description: 'fsType is the filesystem type of the volume
                                that you want to mount. Tip: Ensure that the filesystem
                                type is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                              type: string
                            partition:
                              description: 'partition is the partition in the volume
                                that you want to mount. If omitted, the default is
                                to mount by volume name. Examples: For volume /dev/sda1,
                                you specify the partition as "1". Similarly, the volume
                                partition for /dev/sda is "0" (or you can leave the
                                property empty).'
                              format: int32
                              type: integer
                            readOnly:
                              description: 'readOnly value true will force the readOnly
                                setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                              type: boolean
                            volumeID:
                              description: 'volumeID is unique ID of the persistent
                                disk resource in AWS (Amazon EBS volume). More info:
                                https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                              type: string
                          required:
                          - volumeID
                          type: object
                        azureDisk:
                          description: azureDisk represents an Azure Data Disk mount
                            on the host and bind mount to the pod.
                          properties:
                            cachingMode:
                              description: 'cachingMode is the Host Caching mode:
                                None, Read Only, Read Write.'
                              type: string
                            diskName:
                              description: diskName is the Name of the data disk in
                                the blob storage
                              type: string
                            diskURI:
                              description: diskURI is the URI of data disk in the
                                blob storage
                              type: string
                            fsType:
                              description: fsType is Filesystem type to mount. Must
                                be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                to be "ext4" if unspecified.
                              type: string
                            kind:
                              description: 'kind expected values are Shared: multiple
                                blob disks per storage account  Dedicated: single
                                blob disk per storage account  Managed: azure managed
                                data disk (only in managed availability set). defaults
                                to shared'
                              type: string
                            readOnly:
                              description: readOnly Defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                          required:
                          - diskName
                          - diskURI
                          type: object
                        azureFile:
                          description: azureFile represents an Azure File Service
                            mount on the host and bind mount to the pod.
                          properties:
                            readOnly:
                              description: readOnly defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretName:
                              description: secretName is the  name of secret that
                                contains Azure Storage Account Name and Key
                              type: string
                            shareName:
                              description: shareName is the azure share Name
                              type: string
                          required:
                          - secretName
                          - shareName
                          type: object
                        cephfs:
                          description: cephFS represents a Ceph FS mount on the host
                            that shares a pod's lifetime
                          properties:
                            monitors:
                              description: 'monitors is Required: Monitors is a collection
                                of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              items:
                                type: string
                              type: array
                            path:
                              description: 'path is Optional: Used as the mounted
                                root, rather than the full Ceph tree, default is /'
                              type: string
                            readOnly:
                              description: 'readOnly is Optional: Defaults to false
                                (read/write). ReadOnly here will force the ReadOnly
                                setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              type: boolean
                            secretFile:
                              description: 'secretFile is Optional: SecretFile is
                                the path to key ring for User, default is /etc/ceph/user.secret
                                More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              type: string
                            secretRef:
                              description: 'secretRef is Optional: SecretRef is reference
                                to the authentication secret for User, default is
                                empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                            user:
                              description: 'user is optional: User is the rados user
                                name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              type: string
                          required:
                          - monitors
                          type: object
                        cinder:
                          description: 'cinder represents a cinder volume attached
                            and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                          properties:
                            fsType:
                              description: 'fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Examples: "ext4", "xfs", "ntfs". Implicitly
                                inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                              type: string
                            readOnly:
                              description: 'readOnly defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                              type: boolean
                            secretRef:
                              description: 'secretRef is optional: points to a secret
                                object containing parameters used to connect to OpenStack.'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                            volumeID:
                              description: 'volumeID used to identify the volume in
                                cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                              type: string
                          required:
                          - volumeID
                          type: object
                        configMap:
                          description: configMap represents a configMap that should
                            populate this volume
                          properties:
                            defaultMode:
                              description: 'defaultMode is optional: mode bits used
                                to set permissions on created files by default. Must
                                be an octal value between 0000 and 0777 or a decimal
                                value between 0 and 511. YAML accepts both octal and
                                decimal values, JSON requires decimal values for mode
                                bits. Defaults to 0644. Directories within the path
                                are not affected by this setting. This might be in
                                conflict with other options that affect the file mode,
                                like fsGroup, and the result can be other mode bits
                                set.'
                              format: int32
                              type: integer
                            items:
                              description: items if unspecified, each key-value pair
                                in the Data field of the referenced ConfigMap will
                                be projected into the volume as a file whose name
                                is the key and content is the value. If specified,
                                the listed keys will be projected into the specified
                                paths, and unlisted keys will not be present. If a
                                key is specified which is not present in the ConfigMap,
                                the volume setup will error unless it is marked optional.
                                Paths must be relative and may not contain the '..'
                                path or start with '..'.
                              items:
                                description: Maps a string key to a path within a
                                  volume.
                                properties:
                                  key:
                                    description: key is the key to project.
                                    type: string
                                  mode:
                                    description: 'mode is Optional: mode bits used
                                      to set permissions on this file. Must be an
                                      octal value between 0000 and 0777 or a decimal
                                      value between 0 and 511. YAML accepts both octal
                                      and decimal values, JSON requires decimal values
                                      for mode bits. If not specified, the volume
                                      defaultMode will be used. This might be in conflict
                                      with other options that affect the file mode,
                                      like fsGroup, and the result can be other mode
                                      bits set.'
                                    format: int32
                                    type: integer
                                  path:
                                    description: path is the relative path of the
                                      file to map the key to. May not be an absolute
                                      path. May not contain the path element '..'.
                                      May not start with the string '..'.
                                    type: string
                                required:
                                - key
                                - path
                                type: object
                              type: array
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: optional specify whether the ConfigMap
                                or its keys must be defined
                              type: boolean
                          type: object
                        csi:
                          description: csi (Container Storage Interface) represents
                            ephemeral storage that is handled by certain external
                            CSI drivers (Beta feature).
                          properties:
                            driver:
                              description: driver is the name of the CSI driver that
                                handles this volume. Consult with your admin for the
                                correct name as registered in the cluster.
                              type: string
                            fsType:
                              description: fsType to mount. Ex. "ext4", "xfs", "ntfs".
                                If not provided, the empty value is passed to the
                                associated CSI driver which will determine the default
                                filesystem to apply.
                              type: string
                            nodePublishSecretRef:
                              description: nodePublishSecretRef is a reference to
                                the secret object containing sensitive information
                                to pass to the CSI driver to complete the CSI NodePublishVolume
                                and NodeUnpublishVolume calls. This field is optional,
                                and  may be empty if no secret is required. If the
                                secret object contains more than one secret, all secret
                                references are passed.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                            readOnly:
                              description: readOnly specifies a read-only configuration
                                for the volume. Defaults to false (read/write).
                              type: boolean
                            volumeAttributes:
                              additionalProperties:
                                type: string
                              description: volumeAttributes stores driver-specific
                                properties that are passed to the CSI driver. Consult
                                your driver's documentation for supported values.
                              type: object
                          required:
                          - driver
                          type: object
                        downwardAPI:
                          description: downwardAPI represents downward API about the
                            pod that should populate this volume
                          properties:
                            defaultMode:
                              description: 'Optional: mode bits to use on created
                                files by default. Must be a Optional: mode bits used
                                to set permissions on created files by default. Must
                                be an octal value between 0000 and 0777 or a decimal
                                value between 0 and 511. YAML accepts both octal and
                                decimal values, JSON requires decimal values for mode
                                bits. Defaults to 0644. Directories within the path
                                are not affected by this setting. This might be in
                                conflict with other options that affect the file mode,
                                like fsGroup, and the result can be other mode bits
                                set.'
                              format: int32
                              type: integer
                            items:
                              description: Items is a list of downward API volume
                                file
                              items:
                                description: DownwardAPIVolumeFile represents information
                                  to create the file containing the pod field
                                properties:
                                  fieldRef:
                                    description: 'Required: Selects a field of the
                                      pod: only annotations, labels, name and namespace
                                      are supported.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  mode:
                                    description: 'Optional: mode bits used to set
                                      permissions on this file, must be an octal value
                                      between 0000 and 0777 or a decimal value between
                                      0 and 511. YAML accepts both octal and decimal
                                      values, JSON requires decimal values for mode
                                      bits. If not specified, the volume defaultMode
                                      will be used. This might be in conflict with
                                      other options that affect the file mode, like
                                      fsGroup, and the result can be other mode bits
                                      set.'
                                    format: int32
                                    type: integer
                                  path:
                                    description: 'Required: Path is  the relative
                                      path name of the file to be created. Must not
                                      be absolute or contain the ''..'' path. Must
                                      be utf-8 encoded. The first item of the relative
                                      path must not start with ''..'''
                                    type: string
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, requests.cpu and requests.memory)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                required:
                                - path
                                type: object
                              type: array
                          type: object
                        emptyDir:
                          description: 'emptyDir represents a temporary directory
                            that shares a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                          properties:
                            medium:
                              description: 'medium represents what type of storage
                                medium should back this directory. The default is
                                "" which means to use the node''s default medium.
                                Must be an empty string (default) or Memory. More
                                info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                              type: string
                            sizeLimit:
                              anyOf:
                              - type: integer
                              - type: string
                              description: 'sizeLimit is the total amount of local
                                storage required for this EmptyDir volume. The size
                                limit is also applicable for memory medium. The maximum
                                usage on memory medium EmptyDir would be the minimum
                                value between the SizeLimit specified here and the
                                sum of memory limits of all containers in a pod. The
                                default is nil which means that the limit is undefined.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          type: object
                        ephemeral:
                          description: "ephemeral represents a volume that is handled
                            by a cluster storage driver. The volume's lifecycle is
                            tied to the pod that defines it - it will be created before
                            the pod starts, and deleted when the pod is removed. \n
                            Use this if: a) the volume is only needed while the pod
                            runs, b) features of normal volumes like restoring from
                            snapshot or capacity tracking are needed, c) the storage
                            driver is specified through a storage class, and d) the
                            storage driver supports dynamic volume provisioning through
                            a PersistentVolumeClaim (see EphemeralVolumeSource for
                            more information on the connection between this volume
                            type and PersistentVolumeClaim). \n Use PersistentVolumeClaim
                            or one of the vendor-specific APIs for volumes that persist
                            for longer than the lifecycle of an individual pod. \n
                            Use CSI for light-weight local ephemeral volumes if the
                            CSI driver is meant to be used that way - see the documentation
                            of the driver for more information. \n A pod can use both
                            types of ephemeral volumes and persistent volumes at the
                            same time."
                          properties:
                            volumeClaimTemplate:
                              description: "Will be used to create a stand-alone PVC
                                to provision the volume. The pod in which this EphemeralVolumeSource
                                is embedded will be the owner of the PVC, i.e. the
                                PVC will be deleted together with the pod.  The name
                                of the PVC will be `<pod name>-<volume name>` where
                                `<volume name>` is the name from the `PodSpec.Volumes`
                                array entry. Pod validation will reject the pod if
                                the concatenated name is not valid for a PVC (for
                                example, too long). \n An existing PVC with that name
                                that is not owned by the pod will *not* be used for
                                the pod to avoid using an unrelated volume by mistake.
                                Starting the pod is then blocked until the unrelated
                                PVC is removed. If such a pre-created PVC is meant
                                to be used by the pod, the PVC has to updated with
                                an owner reference to the pod once the pod exists.
                                Normally this should not be necessary, but it may
                                be useful when manually reconstructing a broken cluster.
                                \n This field is read-only and no changes will be
                                made by Kubernetes to the PVC after it has been created.
                                \n Required, must not be nil."
                              properties:
                                metadata:
                                  description: May contain labels and annotations
                                    that will be copied into the PVC when creating
                                    it. No other fields are allowed and will be rejected
                                    during validation.
                                  type: object
                                spec:
                                  description: The specification for the PersistentVolumeClaim.
                                    The entire content is copied unchanged into the
                                    PVC that gets created from this template. The
                                    same fields as in a PersistentVolumeClaim are
                                    also valid here.
                                  properties:
                                    accessModes:
                                      description: 'accessModes contains the desired
                                        access modes the volume should have. More
                                        info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                      items:
                                        type: string
                                      type: array
                                    dataSource:
                                      description: 'dataSource field can be used to
                                        specify either: * An existing VolumeSnapshot
                                        object (snapshot.storage.k8s.io/VolumeSnapshot)
                                        * An existing PVC (PersistentVolumeClaim)
                                        If the provisioner or an external controller
                                        can support the specified data source, it
                                        will create a new volume based on the contents
                                        of the specified data source. When the AnyVolumeDataSource
                                        feature gate is enabled, dataSource contents
                                        will be copied to dataSourceRef, and dataSourceRef
                                        contents will be copied to dataSource when
                                        dataSourceRef.namespace is not specified.
                                        If the namespace is specified, then dataSourceRef
                                        will not be copied to dataSource.'
                                      properties:
                                        apiGroup:
                                          description: APIGroup is the group for the
                                            resource being referenced. If APIGroup
                                            is not specified, the specified Kind must
                                            be in the core API group. For any other
                                            third-party types, APIGroup is required.
                                          type: string
                                        kind:
                                          description: Kind is the type of resource
                                            being referenced
                                          type: string
                                        name:
                                          description: Name is the name of resource
                                            being referenced
                                          type: string
                                      required:
                                      - kind
                                      - name
                                      type: object
                                    dataSourceRef:
                                      description: 'dataSourceRef specifies the object
                                        from which to populate the volume with data,
                                        if a non-empty volume is desired. This may
                                        be any object from a non-empty API group (non
                                        core object) or a PersistentVolumeClaim object.
                                        When this field is specified, volume binding
                                        will only succeed if the type of the specified
                                        object matches some installed volume populator
                                        or dynamic provisioner. This field will replace
                                        the functionality of the dataSource field
                                        and as such if both fields are non-empty,
                                        they must have the same value. For backwards
                                        compatibility, when namespace isn''t specified
                                        in dataSourceRef, both fields (dataSource
                                        and dataSourceRef) will be set to the same
                                        value automatically if one of them is empty
                                        and the other is non-empty. When namespace
                                        is specified in dataSourceRef, dataSource
                                        isn''t set to the same value and must be empty.
                                        There are three important differences between
                                        dataSource and dataSourceRef: * While dataSource
                                        only allows two specific types of objects,
                                        dataSourceRef allows any non-core object,
                                        as well as PersistentVolumeClaim objects.
                                        * While dataSource ignores disallowed values
                                        (dropping them), dataSourceRef preserves all
                                        values, and generates an error if a disallowed
                                        value is specified. * While dataSource only
                                        allows local objects, dataSourceRef allows
                                        objects in any namespaces. (Beta) Using this
                                        field requires the AnyVolumeDataSource feature
                                        gate to be enabled. (Alpha) Using the namespace
                                        field of dataSourceRef requires the CrossNamespaceVolumeDataSource
                                        feature gate to be enabled.'
                                      properties:
                                        apiGroup:
                                          description: APIGroup is the group for the
                                            resource being referenced. If APIGroup
                                            is not specified, the specified Kind must
                                            be in the core API group. For any other
                                            third-party types, APIGroup is required.
                                          type: string
                                        kind:
                                          description: Kind is the type of resource
                                            being referenced
                                          type: string
                                        name:
                                          description: Name is the name of resource
                                            being referenced
                                          type: string
                                        namespace:
                                          description: Namespace is the namespace
                                            of resource being referenced Note that
                                            when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant
                                            object is required in the referent namespace
                                            to allow that namespace's owner to accept
                                            the reference. See the ReferenceGrant
                                            documentation for details. (Alpha) This
                                            field requires the CrossNamespaceVolumeDataSource
                                            feature gate to be enabled.
                                          type: string
                                      required:
                                      - kind
                                      - name
                                      type: object
                                    resources:
                                      description: 'resources represents the minimum
                                        resources the volume should have. If RecoverVolumeExpansionFailure
                                        feature is enabled users are allowed to specify
                                        resource requirements that are lower than
                                        previous value but must still be higher than
                                        capacity recorded in the status field of the
                                        claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                      properties:
                                        claims:
                                          description: "Claims lists the names of
                                            resources, defined in spec.resourceClaims,
                                            that are used by this container. \n This
                                            is an alpha field and requires enabling
                                            the DynamicResourceAllocation feature
                                            gate. \n This field is immutable. It can
                                            only be set for containers."
                                          items:
                                            description: ResourceClaim references
                                              one entry in PodSpec.ResourceClaims.
                                            properties:
                                              name:
                                                description: Name must match the name
                                                  of one entry in pod.spec.resourceClaims
                                                  of the Pod where this field is used.
                                                  It makes that resource available
                                                  inside a container.
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                          x-kubernetes-list-map-keys:
                                          - name
                                          x-kubernetes-list-type: map
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Limits describes the maximum
                                            amount of compute resources allowed. More
                                            info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Requests describes the minimum
                                            amount of compute resources required.
                                            If Requests is omitted for a container,
                                            it defaults to Limits if that is explicitly
                                            specified, otherwise to an implementation-defined
                                            value. Requests cannot exceed Limits.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                      type: object
                                    selector:
                                      description: selector is a label query over
                                        volumes to consider for binding.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    storageClassName:
                                      description: 'storageClassName is the name of
                                        the StorageClass required by the claim. More
                                        info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                      type: string
                                    volumeMode:
                                      description: volumeMode defines what type of
                                        volume is required by the claim. Value of
                                        Filesystem is implied when not included in
                                        claim spec.
                                      type: string
                                    volumeName:
                                      description: volumeName is the binding reference
                                        to the PersistentVolume backing this claim.
                                      type: string
                                  type: object
                              required:
                              - spec
                              type: object
                          type: object
                        fc:
                          description: fc represents a Fibre Channel resource that
                            is attached to a kubelet's host machine and then exposed
                            to the pod.
                          properties:
                            fsType:
                              description: 'fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                to be "ext4" if unspecified. TODO: how do we prevent
                                errors in the filesystem from compromising the machine'
                              type: string
                            lun:
                              description: 'lun is Optional: FC target lun number'
                              format: int32
                              type: integer
                            readOnly:
                              description: 'readOnly is Optional: Defaults to false
                                (read/write). ReadOnly here will force the ReadOnly
                                setting in VolumeMounts.'
                              type: boolean
                            targetWWNs:
                              description: 'targetWWNs is Optional: FC target worldwide
                                names (WWNs)'
                              items:
                                type: string
                              type: array
                            wwids:
                              description: 'wwids Optional: FC volume world wide identifiers
                                (wwids) Either wwids or combination of targetWWNs
                                and lun must be set, but not both simultaneously.'
                              items:
                                type: string
                              type: array
                          type: object
                        flexVolume:
                          description: flexVolume represents a generic volume resource
                            that is provisioned/attached using an exec based plugin.
                          properties:
                            driver:
                              description: driver is the name of the driver to use
                                for this volume.
                              type: string
                            fsType:
                              description: fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". The default filesystem
                                depends on FlexVolume script.
                              type: string
                            options:
                              additionalProperties:
                                type: string
                              description: 'options is Optional: this field holds
                                extra command options if any.'
                              type: object
                            readOnly:
                              description: 'readOnly is Optional: defaults to false
                                (read/write). ReadOnly here will force the ReadOnly
                                setting in VolumeMounts.'
                              type: boolean
                            secretRef:
                              description: 'secretRef is Optional: secretRef is reference
                                to the secret object containing sensitive information
                                to pass to the plugin scripts. This may be empty if
                                no secret object is specified. If the secret object
                                contains more than one secret, all secrets are passed
                                to the plugin scripts.'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                          required:
                          - driver
                          type: object
                        flocker:
                          description: flocker represents a Flocker volume attached
                            to a kubelet's host machine. This depends on the Flocker
                            control service being running
                          properties:
                            datasetName:
                              description: datasetName is Name of the dataset stored
                                as metadata -> name on the dataset for Flocker should
                                be considered as deprecated
                              type: string
                            datasetUUID:
                              description: datasetUUID is the UUID of the dataset.
                                This is unique identifier of a Flocker dataset
                              type: string
                          type: object
                        gcePersistentDisk:
                          description: 'gcePersistentDisk represents a GCE Disk resource
                            that is attached to a kubelet''s host machine and then
                            exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                          properties:
                            fsType:
                              description: 'fsType is filesystem type of the volume
                                that you want to mount. Tip: Ensure that the filesystem
                                type is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                              type: string
                            partition:
                              description: 'partition is the partition in the volume
                                that you want to mount. If omitted, the default is
                                to mount by volume name. Examples: For volume /dev/sda1,
                                you specify the partition as "1". Similarly, the volume
                                partition for /dev/sda is "0" (or you can leave the
                                property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                              format: int32
                              type: integer
                            pdName:
                              description: 'pdName is unique name of the PD resource
                                in GCE. Used to identify the disk in GCE. More info:
                                https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                              type: string
                            readOnly:
                              description: 'readOnly here will force the ReadOnly
                                setting in VolumeMounts. Defaults to false. More info:
                                https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                              type: boolean
                          required:
                          - pdName
                          type: object
                        gitRepo:
                          description: 'gitRepo represents a git repository at a particular
                            revision. DEPRECATED: GitRepo is deprecated. To provision
                            a container with a git repo, mount an EmptyDir into an
                            InitContainer that clones the repo using git, then mount
                            the EmptyDir into the Pod''s container.'
                          properties:
                            directory:
                              description: directory is the target directory name.
                                Must not contain or start with '..'.  If '.' is supplied,
                                the volume directory will be the git repository.  Otherwise,
                                if specified, the volume will contain the git repository
                                in the subdirectory with the given name.
                              type: string
                            repository:
                              description: repository is the URL
                              type: string
                            revision:
                              description: revision is the commit hash for the specified
                                revision.
                              type: string
                          required:
                          - repository
                          type: object
                        glusterfs:
                          description: 'glusterfs represents a Glusterfs mount on
                            the host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                          properties:
                            endpoints:
                              description: 'endpoints is the endpoint name that details
                                Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                              type: string
                            path:
                              description: 'path is the Glusterfs volume path. More
                                info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                              type: string
                            readOnly:
                              description: 'readOnly here will force the Glusterfs
                                volume to be mounted with read-only permissions. Defaults
                                to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                              type: boolean
                          required:
                          - endpoints
                          - path
                          type: object
                        hostPath:
                          description: 'hostPath represents a pre-existing file or
                            directory on the host machine that is directly exposed
                            to the container. This is generally used for system agents
                            or other privileged things that are allowed to see the
                            host machine. Most containers will NOT need this. More
                            info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                            --- TODO(jonesdl) We need to restrict who can use host
                            directory mounts and who can/can not mount host directories
                            as read/write.'
                          properties:
                            path:
                              description: 'path of the directory on the host. If
                                the path is a symlink, it will follow the link to
                                the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                              type: string
                            type:
                              description: 'type for HostPath Volume Defaults to ""
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                              type: string
                          required:
                          - path
                          type: object
                        iscsi:
                          description: 'iscsi represents an ISCSI Disk resource that
                            is attached to a kubelet''s host machine and then exposed
                            to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                          properties:
                            chapAuthDiscovery:
                              description: chapAuthDiscovery defines whether support
                                iSCSI Discovery CHAP authentication
                              type: boolean
                            chapAuthSession:
                              description: chapAuthSession defines whether support
                                iSCSI Session CHAP authentication
                              type: boolean
                            fsType:
                              description: 'fsType is the filesystem type of the volume
                                that you want to mount. Tip: Ensure that the filesystem
                                type is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                              type: string
                            initiatorName:
                              description: initiatorName is the custom iSCSI Initiator
                                Name. If initiatorName is specified with iscsiInterface
                                simultaneously, new iSCSI interface <target portal>:<volume
                                name> will be created for the connection.
                              type: string
                            iqn:
                              description: iqn is the target iSCSI Qualified Name.
                              type: string
                            iscsiInterface:
                              description: iscsiInterface is the interface Name that
                                uses an iSCSI transport. Defaults to 'default' (tcp).
                              type: string
                            lun:
                              description: lun represents iSCSI Target Lun number.
                              format: int32
                              type: integer
                            portals:
                              description: portals is the iSCSI Target Portal List.
                                The portal is either an IP or ip_addr:port if the
                                port is other than default (typically TCP ports 860
                                and 3260).
                              items:
                                type: string
                              type: array
                            readOnly:
                              description: readOnly here will force the ReadOnly setting
                                in VolumeMounts. Defaults to false.
                              type: boolean
                            secretRef:
                              description: secretRef is the CHAP Secret for iSCSI
                                target and initiator authentication
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                            targetPortal:
                              description: targetPortal is iSCSI Target Portal. The
                                Portal is either an IP or ip_addr:port if the port
                                is other than default (typically TCP ports 860 and
                                3260).
                              type: string
                          required:
                          - iqn
                          - lun
                          - targetPortal
                          type: object
                        name:
                          description: 'name of the volume. Must be a DNS_LABEL and
                            unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        nfs:
                          description: 'nfs represents an NFS mount on the host that
                            shares a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                          properties:
                            path:
                              description: 'path that is exported by the NFS server.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                              type: string
                            readOnly:
                              description: 'readOnly here will force the NFS export
                                to be mounted with read-only permissions. Defaults
                                to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                              type: boolean
                            server:
                              description: 'server is the hostname or IP address of
                                the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                              type: string
                          required:
                          - path
                          - server
                          type: object
                        persistentVolumeClaim:
                          description: 'persistentVolumeClaimVolumeSource represents
                            a reference to a PersistentVolumeClaim in the same namespace.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                          properties:
                            claimName:
                              description: 'claimName is the name of a PersistentVolumeClaim
                                in the same namespace as the pod using this volume.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                              type: string
                            readOnly:
                              description: readOnly Will force the ReadOnly setting
                                in VolumeMounts. Default false.
                              type: boolean
                          required:
                          - claimName
                          type: object
                        photonPersistentDisk:
                          description: photonPersistentDisk represents a PhotonController
                            persistent disk attached and mounted on kubelets host
                            machine
                          properties:
                            fsType:
                              description: fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                to be "ext4" if unspecified.
                              type: string
                            pdID:
                              description: pdID is the ID that identifies Photon Controller
                                persistent disk
                              type: string
                          required:
                          - pdID
                          type: object
                        portworxVolume:
                          description: portworxVolume represents a portworx volume
                            attached and mounted on kubelets host machine
                          properties:
                            fsType:
                              description: fSType represents the filesystem type to
                                mount Must be a filesystem type supported by the host
                                operating system. Ex. "ext4", "xfs". Implicitly inferred
                                to be "ext4" if unspecified.
                              type: string
                            readOnly:
                              description: readOnly defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            volumeID:
                              description: volumeID uniquely identifies a Portworx
                                volume
                              type: string
                          required:
                          - volumeID
                          type: object
                        projected:
                          description: projected items for all in one resources secrets,
                            configmaps, and downward API
                          properties:
                            defaultMode:
                              description: defaultMode are the mode bits used to set
                                permissions on created files by default. Must be an
                                octal value between 0000 and 0777 or a decimal value
                                between 0 and 511. YAML accepts both octal and decimal
                                values, JSON requires decimal values for mode bits.
                                Directories within the path are not affected by this
                                setting. This might be in conflict with other options
                                that affect the file mode, like fsGroup, and the result
                                can be other mode bits set.
                              format: int32
                              type: integer
                            sources:
                              description: sources is the list of volume projections
                              items:
                                description: Projection that may be projected along
                                  with other supported volume types
                                properties:
                                  configMap:
                                    description: configMap information about the configMap
                                      data to project
                                    properties:
                                      items:
                                        description: items if unspecified, each key-value
                                          pair in the Data field of the referenced
                                          ConfigMap will be projected into the volume
                                          as a file whose name is the key and content
                                          is the value. If specified, the listed keys
                                          will be projected into the specified paths,
                                          and unlisted keys will not be present. If
                                          a key is specified which is not present
                                          in the ConfigMap, the volume setup will
                                          error unless it is marked optional. Paths
                                          must be relative and may not contain the
                                          '..' path or start with '..'.
                                        items:
                                          description: Maps a string key to a path
                                            within a volume.
                                          properties:
                                            key:
                                              description: key is the key to project.
                                              type: string
                                            mode:
                                              description: 'mode is Optional: mode
                                                bits used to set permissions on this
                                                file. Must be an octal value between
                                                0000 and 0777 or a decimal value between
                                                0 and 511. YAML accepts both octal
                                                and decimal values, JSON requires
                                                decimal values for mode bits. If not
                                                specified, the volume defaultMode
                                                will be used. This might be in conflict
                                                with other options that affect the
                                                file mode, like fsGroup, and the result
                                                can be other mode bits set.'
                                              format: int32
                                              type: integer
                                            path:
                                              description: path is the relative path
                                                of the file to map the key to. May
                                                not be an absolute path. May not contain
                                                the path element '..'. May not start
                                                with the string '..'.
                                              type: string
                                          required:
                                          - key
                                          - path
                                          type: object
                                        type: array
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: optional specify whether the
                                          ConfigMap or its keys must be defined
                                        type: boolean
                                    type: object
                                  downwardAPI:
                                    description: downwardAPI information about the
                                      downwardAPI data to project
                                    properties:
                                      items:
                                        description: Items is a list of DownwardAPIVolume
                                          file
                                        items:
                                          description: DownwardAPIVolumeFile represents
                                            information to create the file containing
                                            the pod field
                                          properties:
                                            fieldRef:
                                              description: 'Required: Selects a field
                                                of the pod: only annotations, labels,
                                                name and namespace are supported.'
                                              properties:
                                                apiVersion:
                                                  description: Version of the schema
                                                    the FieldPath is written in terms
                                                    of, defaults to "v1".
                                                  type: string
                                                fieldPath:
                                                  description: Path of the field to
                                                    select in the specified API version.
                                                  type: string
                                              required:
                                              - fieldPath
                                              type: object
                                            mode:
                                              description: 'Optional: mode bits used
                                                to set permissions on this file, must
                                                be an octal value between 0000 and
                                                0777 or a decimal value between 0
                                                and 511. YAML accepts both octal and
                                                decimal values, JSON requires decimal
                                                values for mode bits. If not specified,
                                                the volume defaultMode will be used.
                                                This might be in conflict with other
                                                options that affect the file mode,
                                                like fsGroup, and the result can be
                                                other mode bits set.'
                                              format: int32
                                              type: integer
                                            path:
                                              description: 'Required: Path is  the
                                                relative path name of the file to
                                                be created. Must not be absolute or
                                                contain the ''..'' path. Must be utf-8
                                                encoded. The first item of the relative
                                                path must not start with ''..'''
                                              type: string
                                            resourceFieldRef:
                                              description: 'Selects a resource of
                                                the container: only resources limits
                                                and requests (limits.cpu, limits.memory,
                                                requests.cpu and requests.memory)
                                                are currently supported.'
                                              properties:
                                                containerName:
                                                  description: 'Container name: required
                                                    for volumes, optional for env
                                                    vars'
                                                  type: string
                                                divisor:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Specifies the output
                                                    format of the exposed resources,
                                                    defaults to "1"
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                resource:
                                                  description: 'Required: resource
                                                    to select'
                                                  type: string
                                              required:
                                              - resource
                                              type: object
                                          required:
                                          - path
                                          type: object
                                        type: array
                                    type: object
                                  secret:
                                    description: secret information about the secret
                                      data to project
                                    properties:
                                      items:
                                        description: items if unspecified, each key-value
                                          pair in the Data field of the referenced
                                          Secret will be projected into the volume
                                          as a file whose name is the key and content
                                          is the value. If specified, the listed keys
                                          will be projected into the specified paths,
                                          and unlisted keys will not be present. If
                                          a key is specified which is not present
                                          in the Secret, the volume setup will error
                                          unless it is marked optional. Paths must
                                          be relative and may not contain the '..'
                                          path or start with '..'.
                                        items:
                                          description: Maps a string key to a path
                                            within a volume.
                                          properties:
                                            key:
                                              description: key is the key to project.
                                              type: string
                                            mode:
                                              description: 'mode is Optional: mode
                                                bits used to set permissions on this
                                                file. Must be an octal value between
                                                0000 and 0777 or a decimal value between
                                                0 and 511. YAML accepts both octal
                                                and decimal values, JSON requires
                                                decimal values for mode bits. If not
                                                specified, the volume defaultMode
                                                will be used. This might be in conflict
                                                with other options that affect the
                                                file mode, like fsGroup, and the result
                                                can be other mode bits set.'
                                              format: int32
                                              type: integer
                                            path:
                                              description: path is the relative path
                                                of the file to map the key to. May
                                                not be an absolute path. May not contain
                                                the path element '..'. May not start
                                                with the string '..'.
                                              type: string
                                          required:
                                          - key
                                          - path
                                          type: object
                                        type: array
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: optional field specify whether
                                          the Secret or its key must be defined
                                        type: boolean
                                    type: object
                                  serviceAccountToken:
                                    description: serviceAccountToken is information
                                      about the serviceAccountToken data to project
                                    properties:
                                      audience:
                                        description: audience is the intended audience
                                          of the token. A recipient of a token must
                                          identify itself with an identifier specified
                                          in the audience of the token, and otherwise
                                          should reject the token. The audience defaults
                                          to the identifier of the apiserver.
                                        type: string
                                      expirationSeconds:
                                        description: expirationSeconds is the requested
                                          duration of validity of the service account
                                          token. As the token approaches expiration,
                                          the kubelet volume plugin will proactively
                                          rotate the service account token. The kubelet
                                          will start trying to rotate the token if
                                          the token is older than 80 percent of its
                                          time to live or if the token is older than
                                          24 hours.Defaults to 1 hour and must be
                                          at least 10 minutes.
                                        format: int64
                                        type: integer
                                      path:
                                        description: path is the path relative to
                                          the mount point of the file to project the
                                          token into.
                                        type: string
                                    required:
                                    - path
                                    type: object
                                type: object
                              type: array
                          type: object
                        quobyte:
                          description: quobyte represents a Quobyte mount on the host
                            that shares a pod's lifetime
                          properties:
                            group:
                              description: group to map volume access to Default is
                                no group
                              type: string
                            readOnly:
                              description: readOnly here will force the Quobyte volume
                                to be mounted with read-only permissions. Defaults
                                to false.
                              type: boolean
                            registry:
                              description: registry represents a single or multiple
                                Quobyte Registry services specified as a string as
                                host:port pair (multiple entries are separated with
                                commas) which acts as the central registry for volumes
                              type: string
                            tenant:
                              description: tenant owning the given Quobyte volume
                                in the Backend Used with dynamically provisioned Quobyte
                                volumes, value is set by the plugin
                              type: string
                            user:
                              description: user to map volume access to Defaults to
                                serivceaccount user
                              type: string
                            volume:
                              description: volume is a string that references an already
                                created Quobyte volume by name.
                              type: string
                          required:
                          - registry
                          - volume
                          type: object
                        rbd:
                          description: 'rbd represents a Rados Block Device mount
                            on the host that shares a pod''s lifetime. More info:
                            https://examples.k8s.io/volumes/rbd/README.md'
                          properties:
                            fsType:
                              description: 'fsType is the filesystem type of the volume
                                that you want to mount. Tip: Ensure that the filesystem
                                type is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                              type: string
                            image:
                              description: 'image is the rados image name. More info:
                                https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                            keyring:
                              description: 'keyring is the path to key ring for RBDUser.
                                Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                            monitors:
                              description: 'monitors is a collection of Ceph monitors.
                                More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              items:
                                type: string
                              type: array
                            pool:
                              description: 'pool is the rados pool name. Default is
                                rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                            readOnly:
                              description: 'readOnly here will force the ReadOnly
                                setting in VolumeMounts. Defaults to false. More info:
                                https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: boolean
                            secretRef:
                              description: 'secretRef is name of the authentication
                                secret for RBDUser. If provided overrides keyring.
                                Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                            user:
                              description: 'user is the rados user name. Default is
                                admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                          required:
                          - image
                          - monitors
                          type: object
                        scaleIO:
                          description: scaleIO represents a ScaleIO persistent volume
                            attached and mounted on Kubernetes nodes.
                          properties:
                            fsType:
                              description: fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
                              type: string
                            gateway:
                              description: gateway is the host address of the ScaleIO
                                API Gateway.
                              type: string
                            protectionDomain:
                              description: protectionDomain is the name of the ScaleIO
                                Protection Domain for the configured storage.
                              type: string
                            readOnly:
                              description: readOnly Defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretRef:
                              description: secretRef references to the secret for
                                ScaleIO user and other sensitive information. If this
                                is not provided, Login operation will fail.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                            sslEnabled:
                              description: sslEnabled Flag enable/disable SSL communication
                                with Gateway, default false
                              type: boolean
                            storageMode:
                              description: storageMode indicates whether the storage
                                for a volume should be ThickProvisioned or ThinProvisioned.
                                Default is ThinProvisioned.
                              type: string
                            storagePool:
                              description: storagePool is the ScaleIO Storage Pool
                                associated with the protection domain.
                              type: string
                            system:
                              description: system is the name of the storage system
                                as configured in ScaleIO.
                              type: string
                            volumeName:
                              description: volumeName is the name of a volume already
                                created in the ScaleIO system that is associated with
                                this volume source.
                              type: string
                          required:
                          - gateway
                          - secretRef
                          - system
                          type: object
                        secret:
                          description: 'secret represents a secret that should populate
                            this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                          properties:
                            defaultMode:
                              description: 'defaultMode is Optional: mode bits used
                                to set permissions on created files by default. Must
                                be an octal value between 0000 and 0777 or a decimal
                                value between 0 and 511. YAML accepts both octal and
                                decimal values, JSON requires decimal values for mode
                                bits. Defaults to 0644. Directories within the path
                                are not affected by this setting. This might be in
                                conflict with other options that affect the file mode,
                                like fsGroup, and the result can be other mode bits
                                set.'
                              format: int32
                              type: integer
                            items:
                              description: items If unspecified, each key-value pair
                                in the Data field of the referenced Secret will be
                                projected into the volume as a file whose name is
                                the key and content is the value. If specified, the
                                listed keys will be projected into the specified paths,
                                and unlisted keys will not be present. If a key is
                                specified which is not present in the Secret, the
                                volume setup will error unless it is marked optional.
                                Paths must be relative and may not contain the '..'
                                path or start with '..'.
                              items:
                                description: Maps a string key to a path within a
                                  volume.
                                properties:
                                  key:
                                    description: key is the key to project.
                                    type: string
                                  mode:
                                    description: 'mode is Optional: mode bits used
                                      to set permissions on this file. Must be an
                                      octal value between 0000 and 0777 or a decimal
                                      value between 0 and 511. YAML accepts both octal
                                      and decimal values, JSON requires decimal values
                                      for mode bits. If not specified, the volume
                                      defaultMode will be used. This might be in conflict
                                      with other options that affect the file mode,
                                      like fsGroup, and the result can be other mode
                                      bits set.'
                                    format: int32
                                    type: integer
                                  path:
                                    description: path is the relative path of the
                                      file to map the key to. May not be an absolute
                                      path. May not contain the path element '..'.
                                      May not start with the string '..'.
                                    type: string
                                required:
                                - key
                                - path
                                type: object
                              type: array
                            optional:
                              description: optional field specify whether the Secret
                                or its keys must be defined
                              type: boolean
                            secretName:
                              description: 'secretName is the name of the secret in
                                the pod''s namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                              type: string
                          type: object
                        storageos:
                          description: storageOS represents a StorageOS volume attached
                            and mounted on Kubernetes nodes.
                          properties:
                            fsType:
                              description: fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                to be "ext4" if unspecified.
                              type: string
                            readOnly:
                              description: readOnly defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretRef:
                              description: secretRef specifies the secret to use for
                                obtaining the StorageOS API credentials.  If not specified,
                                default values will be attempted.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                            volumeName:
                              description: volumeName is the human-readable name of
                                the StorageOS volume.  Volume names are only unique
                                within a namespace.
                              type: string
                            volumeNamespace:
                              description: volumeNamespace specifies the scope of
                                the volume within StorageOS.  If no namespace is specified
                                then the Pod's namespace will be used.  This allows
                                the Kubernetes name scoping to be mirrored within
                                StorageOS for tighter integration. Set VolumeName
                                to any name to override the default behaviour. Set
                                to "default" if you are not using namespaces within
                                StorageOS. Namespaces that do not pre-exist within
                                StorageOS will be created.
                              type: string
                          type: object
                        vsphereVolume:
                          description: vsphereVolume represents a vSphere volume attached
                            and mounted on kubelets host machine
                          properties:
                            fsType:
                              description: fsType is filesystem type to mount. Must
                                be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                to be "ext4" if unspecified.
                              type: string
                            storagePolicyID:
                              description: storagePolicyID is the storage Policy Based
                                Management (SPBM) profile ID associated with the StoragePolicyName.
                              type: string
                            storagePolicyName:
                              description: storagePolicyName is the storage Policy
                                Based Management (SPBM) profile name.
                              type: string
                            volumePath:
                              description: volumePath is the path that identifies
                                vSphere volume vmdk
                              type: string
                          required:
                          - volumePath
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                type: object
              setup:
                description: steps for setting up the workflow
                items:
                  properties:
                    artifacts:
                      description: scrape artifacts from the volumes
                      properties:
                        compress:
                          description: compression options for the artifacts
                          properties:
                            name:
                              description: artifact name
                              minLength: 1
                              type: string
                          required:
                          - name
                          type: object
                        paths:
                          description: paths to fetch from the container
                          items:
                            type: string
                          type: array
                        workingDir:
                          description: working directory to override, so it will be
                            used as a base dir
                          type: string
                      type: object
                    condition:
                      description: 'expression to declare under which conditions the
                        step should be run defaults to: "passed", except artifacts
                        where it defaults to "always"'
                      type: string
                    container:
                      description: defaults for the containers in this step
                      properties:
                        args:
                          description: override default command in the image (empty
                            string to default CMD of the image)
                          items:
                            type: string
                          type: array
                        command:
                          description: override default command in the image (empty
                            string to default ENTRYPOINT of the image)
                          items:
                            type: string
                          type: array
                        env:
                          description: environment variables to append to the container
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are
                                  expanded using the previously defined environment
                                  variables in the container and any service environment
                                  variables. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged.
                                  Double $$ are reduced to a single $, which allows
                                  for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                  will produce the string literal "$(VAR_NAME)". Escaped
                                  references will never be expanded, regardless of
                                  whether the variable exists or not. Defaults to
                                  "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                      metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                      `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                      spec.serviceAccountName, status.hostIP, status.podIP,
                                      status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage, requests.cpu,
                                      requests.memory and requests.ephemeral-storage)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        envFrom:
                          description: external environment variables to append to
                            the container
                          items:
                            description: EnvFromSource represents the source of a
                              set of ConfigMaps
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                                type: object
                              prefix:
                                description: An optional identifier to prepend to
                                  each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                                type: object
                            type: object
                          type: array
                        image:
                          description: image to be used for the container
                          type: string
                        imagePullPolicy:
                          description: pulling policy for the image
                          type: string
                        resources:
                          description: expected resources for the container
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                x-kubernetes-int-or-string: true
                              description: resource limits for the container
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                x-kubernetes-int-or-string: true
                              description: resource requests for the container
                              type: object
                          type: object
                        securityContext:
                          description: security context for the container
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether
                                a process can gain more privileges than its parent
                                process. This bool directly controls if the no_new_privs
                                flag will be set on the container process. AllowPrivilegeEscalation
                                is true always when the container is: 1) run as Privileged
                                2) has CAP_SYS_ADMIN Note that this field cannot be
                                set when spec.os.name is windows.'
                              type: boolean
                            capabilities:
                              description: The capabilities to add/drop when running
                                containers. Defaults to the default set of capabilities
                                granted by the container runtime. Note that this field
                                cannot be set when spec.os.name is windows.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              description: Run container in privileged mode. Processes
                                in privileged containers are essentially equivalent
                                to root on the host. Defaults to false. Note that
                                this field cannot be set when spec.os.name is windows.
                              type: boolean
                            procMount:
                              description: procMount denotes the type of proc mount
                                to use for the containers. The default is DefaultProcMount
                                which uses the container runtime defaults for readonly
                                paths and masked paths. This requires the ProcMountType
                                feature flag to be enabled. Note that this field cannot
                                be set when spec.os.name is windows.
                              type: string
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only
                                root filesystem. Default is false. Note that this
                                field cannot be set when spec.os.name is windows.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container
                                process. Uses runtime default if unset. May also be
                                set in PodSecurityContext.  If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is windows.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as
                                a non-root user. If true, the Kubelet will validate
                                the image at runtime to ensure that it does not run
                                as UID 0 (root) and fail to start the container if
                                it does. If unset or false, no such validation will
                                be performed. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container
                                process. Defaults to user specified in image metadata
                                if unspecified. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name
                                is windows.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: The SELinux context to be applied to the
                                container. If unspecified, the container runtime will
                                allocate a random SELinux context for each container.  May
                                also be set in PodSecurityContext.  If set in both
                                SecurityContext and PodSecurityContext, the value
                                specified in SecurityContext takes precedence. Note
                                that this field cannot be set when spec.os.name is
                                windows.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies
                                    to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies
                                    to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies
                                    to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies
                                    to the container.
                                  type: string
                              type: object
                            seccompProfile:
                              description: The seccomp options to use by this container.
                                If seccomp options are provided at both the pod &
                                container level, the container options override the
                                pod options. Note that this field cannot be set when
                                spec.os.name is windows.
                              properties:
                                localhostProfile:
                                  description: localhostProfile indicates a profile
                                    defined in a file on the node should be used.
                                    The profile must be preconfigured on the node
                                    to work. Must be a descending path, relative to
                                    the kubelet's configured seccomp profile location.
                                    Must be set if type is "Localhost". Must NOT be
                                    set for any other type.
                                  type: string
                                type:
                                  description: "type indicates which kind of seccomp
                                    profile will be applied. Valid options are: \n
                                    Localhost - a profile defined in a file on the
                                    node should be used. RuntimeDefault - the container
                                    runtime default profile should be used. Unconfined
                                    - no profile should be applied."
                                  type: string
                              required:
                              - type
                              type: object
                            windowsOptions:
                              description: The Windows specific settings applied to
                                all containers. If unspecified, the options from the
                                PodSecurityContext will be used. If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is linux.
                              properties:
                                gmsaCredentialSpec:
                                  description: GMSACredentialSpec is where the GMSA
                                    admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                    inlines the contents of the GMSA credential spec
                                    named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name
                                    of the GMSA credential spec to use.
                                  type: string
                                hostProcess:
                                  description: HostProcess determines if a container
                                    should be run as a 'Host Process' container. All
                                    of a Pod's containers must have the same effective
                                    HostProcess value (it is not allowed to have a
                                    mix of HostProcess containers and non-HostProcess
                                    containers). In addition, if HostProcess is true
                                    then HostNetwork must also be set to true.
                                  type: boolean
                                runAsUserName:
                                  description: The UserName in Windows to run the
                                    entrypoint of the container process. Defaults
                                    to the user specified in image metadata if unspecified.
                                    May also be set in PodSecurityContext. If set
                                    in both SecurityContext and PodSecurityContext,
                                    the value specified in SecurityContext takes precedence.
                                  type: string
                              type: object
                          type: object
                        volumeMounts:
                          description: volume mounts to append to the container
                          items:
                            description: VolumeMount describes a mounting of a Volume
                              within a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the
                                  volume should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts
                                  are propagated from the host to container and the
                                  other way around. When not set, MountPropagationNone
                                  is used. This field is beta in 1.10.
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write
                                  otherwise (false or unspecified). Defaults to false.
                                type: boolean
                              subPath:
                                description: Path within the volume from which the
                                  container's volume should be mounted. Defaults to
                                  "" (volume's root).
                                type: string
                              subPathExpr:
                                description: Expanded path within the volume from
                                  which the container's volume should be mounted.
                                  Behaves similarly to SubPath but environment variable
                                  references $(VAR_NAME) are expanded using the container's
                                  environment. Defaults to "" (volume's root). SubPathExpr
                                  and SubPath are mutually exclusive.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                        workingDir:
                          description: override default working directory in the image
                            (empty string to default WORKDIR for the image)
                          type: string
                      type: object
                    content:
                      description: content that should be fetched for this step
                      properties:
                        files:
                          description: files to load
                          items:
                            properties:
                              content:
                                description: plain-text content to put inside
                                type: string
                              contentFrom:
                                description: external source to use
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                      metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                      `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                      spec.serviceAccountName, status.hostIP, status.podIP,
                                      status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage, requests.cpu,
                                      requests.memory and requests.ephemeral-storage)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                              mode:
                                description: mode to use for the file
                                format: int32
                                type: integer
                              path:
                                description: path where the file should be accessible
                                  at
                                minLength: 1
                                type: string
                            required:
                            - path
                            type: object
                          type: array
                        git:
                          description: git repository details
                          properties:
                            authType:
                              description: authorization type for the credentials
                              enum:
                              - basic
                              - header
                              type: string
                            mountPath:
                              description: where to mount the fetched repository contents
                                (defaults to "repo" directory in the data volume)
                              type: string
                            paths:
                              description: paths to fetch for the sparse checkout
                              items:
                                type: string
                              type: array
                            revision:
                              description: branch, commit or a tag name to fetch
                              type: string
                            token:
                              description: plain text token to fetch with
                              type: string
                            tokenFrom:
                              description: external token to fetch with
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                            uri:
                              description: uri for the Git repository
                              type: string
                            username:
                              description: plain text username to fetch with
                              type: string
                            usernameFrom:
                              description: external username to fetch with
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          type: object
                      type: object
                    delay:
                      description: delay before the step
                      pattern: ^((0|[1-9][0-9]*)h)?((0|[1-9][0-9]*)m)?((0|[1-9][0-9]*)s)?((0|[1-9][0-9]*)ms)?$
                      type: string
                    execute:
                      description: execute other Testkube resources
                      properties:
                        async:
                          description: only schedule the resources, don't watch the
                            results (unless it is needed for parallelism)
                          type: boolean
                        parallelism:
                          description: how many resources could be scheduled in parallel
                          format: int32
                          type: integer
                        tests:
                          description: tests to run
                          items:
                            properties:
                              count:
                                anyOf:
                                - type: integer
                                - type: string
                                description: static number of sharded instances to
                                  spawn
                                x-kubernetes-int-or-string: true
                              description:
                                description: test execution description to display
                                type: string
                              executionRequest:
                                description: pass the execution request overrides
                                properties:
                                  activeDeadlineSeconds:
                                    description: Optional duration in seconds the
                                      pod may be active on the node relative to StartTime
                                      before the system will actively try to mark
                                      it failed and kill associated containers. Value
                                      must be a positive integer.
                                    format: int64
                                    type: integer
                                  args:
                                    description: additional executor binary arguments
                                    items:
                                      type: string
                                    type: array
                                  argsMode:
                                    description: usage mode for arguments
                                    enum:
                                    - append
                                    - override
                                    - replace
                                    type: string
                                  artifactRequest:
                                    description: artifact request body with test artifacts
                                    properties:
                                      dirs:
                                        description: artifact directories for scraping
                                        items:
                                          type: string
                                        type: array
                                      masks:
                                        description: regexp to filter scraped artifacts,
                                          single or comma separated
                                        items:
                                          type: string
                                        type: array
                                      omitFolderPerExecution:
                                        description: don't use a separate folder for
                                          execution artifacts
                                        type: boolean
                                      sharedBetweenPods:
                                        description: whether to share volume between
                                          pods
                                        type: boolean
                                      storageBucket:
                                        description: artifact bucket storage
                                        type: string
                                      storageClassName:
                                        description: artifact storage class name for
                                          container executor
                                        type: string
                                      useDefaultStorageClassName:
                                        description: whether to use default storage
                                          class name
                                        type: boolean
                                      volumeMountPath:
                                        description: artifact volume mount path for
                                          container executor
                                        type: string
                                    type: object
                                  command:
                                    description: executor binary command
                                    items:
                                      type: string
                                    type: array
                                  cronJobTemplate:
                                    description: cron job template extensions
                                    type: string
                                  envConfigMaps:
                                    description: config map references
                                    items:
                                      description: Reference to env resource
                                      properties:
                                        mapToVariables:
                                          description: whether we shoud map to variables
                                            from resource
                                          type: boolean
                                        mount:
                                          description: whether we shoud mount resource
                                          type: boolean
                                        mountPath:
                                          description: where we shoud mount resource
                                          type: string
                                        reference:
                                          description: LocalObjectReference contains
                                            enough information to let you locate the
                                            referenced object inside the same namespace.
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                      required:
                                      - reference
                                      type: object
                                    type: array
                                  envSecrets:
                                    description: secret references
                                    items:
                                      description: Reference to env resource
                                      properties:
                                        mapToVariables:
                                          description: whether we shoud map to variables
                                            from resource
                                          type: boolean
                                        mount:
                                          description: whether we shoud mount resource
                                          type: boolean
                                        mountPath:
                                          description: where we shoud mount resource
                                          type: string
                                        reference:
                                          description: LocalObjectReference contains
                                            enough information to let you locate the
                                            referenced object inside the same namespace.
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                      required:
                                      - reference
                                      type: object
                                    type: array
                                  executePostRunScriptBeforeScraping:
                                    description: execute post run script before scraping
                                      (prebuilt executor only)
                                    type: boolean
                                  executionLabels:
                                    additionalProperties:
                                      type: string
                                    description: test execution labels
                                    type: object
                                  executionNamespace:
                                    description: namespace for test execution (Pro
                                      edition only)
                                    type: string
                                  httpProxy:
                                    description: http proxy for executor containers
                                    type: string
                                  httpsProxy:
                                    description: https proxy for executor containers
                                    type: string
                                  image:
                                    description: container executor image
                                    type: string
                                  imagePullSecrets:
                                    description: container executor image pull secrets
                                    items:
                                      description: LocalObjectReference contains enough
                                        information to let you locate the referenced
                                        object inside the same namespace.
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    type: array
                                  isVariablesFileUploaded:
                                    type: boolean
                                  jobTemplate:
                                    description: job template extensions
                                    type: string
                                  name:
                                    description: test execution custom name
                                    type: string
                                  negativeTest:
                                    description: negative test will fail the execution
                                      if it is a success and it will succeed if it
                                      is a failure
                                    type: boolean
                                  postRunScript:
                                    description: script to run after test execution
                                    type: string
                                  preRunScript:
                                    description: script to run before test execution
                                    type: string
                                  scraperTemplate:
                                    description: scraper template extensions
                                    type: string
                                  sourceScripts:
                                    description: run scripts using source command
                                      (container executor only)
                                    type: boolean
                                  sync:
                                    description: whether to start execution sync or
                                      async
                                    type: boolean
                                  testSecretUUID:
                                    description: test secret uuid
                                    type: string
                                  variables:
                                    additionalProperties:
                                      properties:
                                        name:
                                          description: variable name
                                          type: string
                                        type:
                                          description: variable type
                                          type: string
                                        value:
                                          description: variable string value
                                          type: string
                                        valueFrom:
                                          description: or load it from var source
                                          properties:
                                            configMapKeyRef:
                                              description: Selects a key of a ConfigMap.
                                              properties:
                                                key:
                                                  description: The key to select.
                                                  type: string
                                                name:
                                                  description: 'Name of the referent.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    TODO: Add other useful fields.
                                                    apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the
                                                    ConfigMap or its key must be defined
                                                  type: boolean
                                              required:
                                              - key
                                              type: object
                                            fieldRef:
                                              description: 'Selects a field of the
                                                pod: supports metadata.name, metadata.namespace,
                                                `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                                spec.nodeName, spec.serviceAccountName,
                                                status.hostIP, status.podIP, status.podIPs.'
                                              properties:
                                                apiVersion:
                                                  description: Version of the schema
                                                    the FieldPath is written in terms
                                                    of, defaults to "v1".
                                                  type: string
                                                fieldPath:
                                                  description: Path of the field to
                                                    select in the specified API version.
                                                  type: string
                                              required:
                                              - fieldPath
                                              type: object
                                            resourceFieldRef:
                                              description: 'Selects a resource of
                                                the container: only resources limits
                                                and requests (limits.cpu, limits.memory,
                                                limits.ephemeral-storage, requests.cpu,
                                                requests.memory and requests.ephemeral-storage)
                                                are currently supported.'
                                              properties:
                                                containerName:
                                                  description: 'Container name: required
                                                    for volumes, optional for env
                                                    vars'
                                                  type: string
                                                divisor:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Specifies the output
                                                    format of the exposed resources,
                                                    defaults to "1"
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                resource:
                                                  description: 'Required: resource
                                                    to select'
                                                  type: string
                                              required:
                                              - resource
                                              type: object
                                            secretKeyRef:
                                              description: Selects a key of a secret
                                                in the pod's namespace
                                              properties:
                                                key:
                                                  description: The key of the secret
                                                    to select from.  Must be a valid
                                                    secret key.
                                                  type: string
                                                name:
                                                  description: 'Name of the referent.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    TODO: Add other useful fields.
                                                    apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the
                                                    Secret or its key must be defined
                                                  type: boolean
                                              required:
                                              - key
                                              type: object
                                          type: object
                                      type: object
                                    type: object
                                  variablesFile:
                                    description: variables file content - need to
                                      be in format for particular executor (e.g. postman
                                      envs file)
                                    type: string
                                type: object
                              matrix:
                                description: matrix of parameters to spawn instances
                                  (static)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              maxCount:
                                anyOf:
                                - type: integer
                                - type: string
                                description: dynamic number of sharded instances to
                                  spawn - it will be lowered if there is not enough
                                  sharded values
                                x-kubernetes-int-or-string: true
                              name:
                                description: test name to run
                                type: string
                              shards:
                                description: parameters that should be distributed
                                  across sharded instances
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          type: array
                        workflows:
                          description: workflows to run
                          items:
                            properties:
                              config:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  x-kubernetes-int-or-string: true
                                description: configuration to pass for the workflow
                                type: object
                              count:
                                anyOf:
                                - type: integer
                                - type: string
                                description: static number of sharded instances to
                                  spawn
                                x-kubernetes-int-or-string: true
                              description:
                                description: test workflow execution description to
                                  display
                                type: string
                              executionName:
                                description: unique execution name to use
                                type: string
                              matrix:
                                description: matrix of parameters to spawn instances
                                  (static)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              maxCount:
                                anyOf:
                                - type: integer
                                - type: string
                                description: dynamic number of sharded instances to
                                  spawn - it will be lowered if there is not enough
                                  sharded values
                                x-kubernetes-int-or-string: true
                              name:
                                description: workflow name to run
                                type: string
                              shards:
                                description: parameters that should be distributed
                                  across sharded instances
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          type: array
                      type: object
                    name:
                      description: readable name for the step
                      type: string
                    negative:
                      description: is the step expected to fail
                      type: boolean
                    optional:
                      description: is the step optional, so its failure won't affect
                        the TestWorkflow result
                      type: boolean
                    retry:
                      description: policy for retrying the step
                      properties:
                        count:
                          description: how many times at most it should retry
                          format: int32
                          minimum: 1
                          type: integer
                        until:
                          description: 'until when it should retry (defaults to: "passed")'
                          type: string
                      type: object
                    run:
                      description: run specific container in the current step
                      properties:
                        args:
                          description: override default command in the image (empty
                            string to default CMD of the image)
                          items:
                            type: string
                          type: array
                        command:
                          description: override default command in the image (empty
                            string to default ENTRYPOINT of the image)
                          items:
                            type: string
                          type: array
                        env:
                          description: environment variables to append to the container
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are
                                  expanded using the previously defined environment
                                  variables in the container and any service environment
                                  variables. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged.
                                  Double $$ are reduced to a single $, which allows
                                  for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                  will produce the string literal "$(VAR_NAME)". Escaped
                                  references will never be expanded, regardless of
                                  whether the variable exists or not. Defaults to
                                  "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                      metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                      `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                      spec.serviceAccountName, status.hostIP, status.podIP,
                                      status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage, requests.cpu,
                                      requests.memory and requests.ephemeral-storage)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        envFrom:
                          description: external environment variables to append to
                            the container
                          items:
                            description: EnvFromSource represents the source of a
                              set of ConfigMaps
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                                type: object
                              prefix:
                                description: An optional identifier to prepend to
                                  each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                                type: object
                            type: object
                          type: array
                        image:
                          description: image to be used for the container
                          type: string
                        imagePullPolicy:
                          description: pulling policy for the image
                          type: string
                        resources:
                          description: expected resources for the container
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                x-kubernetes-int-or-string: true
                              description: resource limits for the container
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                x-kubernetes-int-or-string: true
                              description: resource requests for the container
                              type: object
                          type: object
                        securityContext:
                          description: security context for the container
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether
                                a process can gain more privileges than its parent
                                process. This bool directly controls if the no_new_privs
                                flag will be set on the container process. AllowPrivilegeEscalation
                                is true always when the container is: 1) run as Privileged
                                2) has CAP_SYS_ADMIN Note that this field cannot be
                                set when spec.os.name is windows.'
                              type: boolean
                            capabilities:
                              description: The capabilities to add/drop when running
                                containers. Defaults to the default set of capabilities
                                granted by the container runtime. Note that this field
                                cannot be set when spec.os.name is windows.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              description: Run container in privileged mode. Processes
                                in privileged containers are essentially equivalent
                                to root on the host. Defaults to false. Note that
                                this field cannot be set when spec.os.name is windows.
                              type: boolean
                            procMount:
                              description: procMount denotes the type of proc mount
                                to use for the containers. The default is DefaultProcMount
                                which uses the container runtime defaults for readonly
                                paths and masked paths. This requires the ProcMountType
                                feature flag to be enabled. Note that this field cannot
                                be set when spec.os.name is windows.
                              type: string
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only
                                root filesystem. Default is false. Note that this
                                field cannot be set when spec.os.name is windows.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container
                                process. Uses runtime default if unset. May also be
                                set in PodSecurityContext.  If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is windows.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as
                                a non-root user. If true, the Kubelet will validate
                                the image at runtime to ensure that it does not run
                                as UID 0 (root) and fail to start the container if
                                it does. If unset or false, no such validation will
                                be performed. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container
                                process. Defaults to user specified in image metadata
                                if unspecified. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name
                                is windows.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: The SELinux context to be applied to the
                                container. If unspecified, the container runtime will
                                allocate a random SELinux context for each container.  May
                                also be set in PodSecurityContext.  If set in both
                                SecurityContext and PodSecurityContext, the value
                                specified in SecurityContext takes precedence. Note
                                that this field cannot be set when spec.os.name is
                                windows.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies
                                    to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies
                                    to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies
                                    to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies
                                    to the container.
                                  type: string
                              type: object
                            seccompProfile:
                              description: The seccomp options to use by this container.
                                If seccomp options are provided at both the pod &
                                container level, the container options override the
                                pod options. Note that this field cannot be set when
                                spec.os.name is windows.
                              properties:
                                localhostProfile:
                                  description: localhostProfile indicates a profile
                                    defined in a file on the node should be used.
                                    The profile must be preconfigured on the node
                                    to work. Must be a descending path, relative to
                                    the kubelet's configured seccomp profile location.
                                    Must be set if type is "Localhost". Must NOT be
                                    set for any other type.
                                  type: string
                                type:
                                  description: "type indicates which kind of seccomp
                                    profile will be applied. Valid options are: \n
                                    Localhost - a profile defined in a file on the
                                    node should be used. RuntimeDefault - the container
                                    runtime default profile should be used. Unconfined
                                    - no profile should be applied."
                                  type: string
                              required:
                              - type
                              type: object
                            windowsOptions:
                              description: The Windows specific settings applied to
                                all containers. If unspecified, the options from the
                                PodSecurityContext will be used. If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is linux.
                              properties:
                                gmsaCredentialSpec:
                                  description: GMSACredentialSpec is where the GMSA
                                    admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                    inlines the contents of the GMSA credential spec
                                    named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name
                                    of the GMSA credential spec to use.
                                  type: string
                                hostProcess:
                                  description: HostProcess determines if a container
                                    should be run as a 'Host Process' container. All
                                    of a Pod's containers must have the same effective
                                    HostProcess value (it is not allowed to have a
                                    mix of HostProcess containers and non-HostProcess
                                    containers). In addition, if HostProcess is true
                                    then HostNetwork must also be set to true.
                                  type: boolean
                                runAsUserName:
                                  description: The UserName in Windows to run the
                                    entrypoint of the container process. Defaults
                                    to the user specified in image metadata if unspecified.
                                    May also be set in PodSecurityContext. If set
                                    in both SecurityContext and PodSecurityContext,
                                    the value specified in SecurityContext takes precedence.
                                  type: string
                              type: object
                          type: object
                        shell:
                          description: script to run in a default shell for the container
                          type: string
                        volumeMounts:
                          description: volume mounts to append to the container
                          items:
                            description: VolumeMount describes a mounting of a Volume
                              within a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the
                                  volume should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts
                                  are propagated from the host to container and the
                                  other way around. When not set, MountPropagationNone
                                  is used. This field is beta in 1.10.
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write
                                  otherwise (false or unspecified). Defaults to false.
                                type: boolean
                              subPath:
                                description: Path within the volume from which the
                                  container's volume should be mounted. Defaults to
                                  "" (volume's root).
                                type: string
                              subPathExpr:
                                description: Expanded path within the volume from
                                  which the container's volume should be mounted.
                                  Behaves similarly to SubPath but environment variable
                                  references $(VAR_NAME) are expanded using the container's
                                  environment. Defaults to "" (volume's root). SubPathExpr
                                  and SubPath are mutually exclusive.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                        workingDir:
                          description: override default working directory in the image
                            (empty string to default WORKDIR for the image)
                          type: string
                      type: object
                    setup:
                      description: steps to run before other operations in this step
                      x-kubernetes-preserve-unknown-fields: true
                    shell:
                      description: script to run in a default shell for the container
                      type: string
                    steps:
                      description: sub-steps to run
                      x-kubernetes-preserve-unknown-fields: true
                    template:
                      description: single template to run in this step
                      properties:
                        config:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            x-kubernetes-int-or-string: true
                          description: trait configuration values if needed
                          type: object
                        name:
                          description: name of the template to include
                          type: string
                      required:
                      - name
                      type: object
                    timeout:
                      description: maximum time this step may take
                      pattern: ^((0|[1-9][0-9]*)h)?((0|[1-9][0-9]*)m)?((0|[1-9][0-9]*)s)?((0|[1-9][0-9]*)ms)?$
                      type: string
                    use:
                      description: multiple templates to include in this step
                      items:
                        description: TemplateRef is the reference for the template
                          inclusion
                        properties:
                          config:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              x-kubernetes-int-or-string: true
                            description: trait configuration values if needed
                            type: object
                          name:
                            description: name of the template to include
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    workingDir:
                      description: working directory to use for this step
                      type: string
                  type: object
                type: array
              steps:
                description: steps to execute in the workflow
                items:
                  properties:
                    artifacts:
                      description: scrape artifacts from the volumes
                      properties:
                        compress:
                          description: compression options for the artifacts
                          properties:
                            name:
                              description: artifact name
                              minLength: 1
                              type: string
                          required:
                          - name
                          type: object
                        paths:
                          description: paths to fetch from the container
                          items:
                            type: string
                          type: array
                        workingDir:
                          description: working directory to override, so it will be
                            used as a base dir
                          type: string
                      type: object
                    condition:
                      description: 'expression to declare under which conditions the
                        step should be run defaults to: "passed", except artifacts
                        where it defaults to "always"'
                      type: string
                    container:
                      description: defaults for the containers in this step
                      properties:
                        args:
                          description: override default command in the image (empty
                            string to default CMD of the image)
                          items:
                            type: string
                          type: array
                        command:
                          description: override default command in the image (empty
                            string to default ENTRYPOINT of the image)
                          items:
                            type: string
                          type: array
                        env:
                          description: environment variables to append to the container
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are
                                  expanded using the previously defined environment
                                  variables in the container and any service environment
                                  variables. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged.
                                  Double $$ are reduced to a single $, which allows
                                  for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                  will produce the string literal "$(VAR_NAME)". Escaped
                                  references will never be expanded, regardless of
                                  whether the variable exists or not. Defaults to
                                  "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                      metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                      `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                      spec.serviceAccountName, status.hostIP, status.podIP,
                                      status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage, requests.cpu,
                                      requests.memory and requests.ephemeral-storage)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        envFrom:
                          description: external environment variables to append to
                            the container
                          items:
                            description: EnvFromSource represents the source of a
                              set of ConfigMaps
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                                type: object
                              prefix:
                                description: An optional identifier to prepend to
                                  each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                                type: object
                            type: object
                          type: array
                        image:
                          description: image to be used for the container
                          type: string
                        imagePullPolicy:
                          description: pulling policy for the image
                          type: string
                        resources:
                          description: expected resources for the container
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                x-kubernetes-int-or-string: true
                              description: resource limits for the container
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                x-kubernetes-int-or-string: true
                              description: resource requests for the container
                              type: object
                          type: object
                        securityContext:
                          description: security context for the container
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether
                                a process can gain more privileges than its parent
                                process. This bool directly controls if the no_new_privs
                                flag will be set on the container process. AllowPrivilegeEscalation
                                is true always when the container is: 1) run as Privileged
                                2) has CAP_SYS_ADMIN Note that this field cannot be
                                set when spec.os.name is windows.'
                              type: boolean
                            capabilities:
                              description: The capabilities to add/drop when running
                                containers. Defaults to the default set of capabilities
                                granted by the container runtime. Note that this field
                                cannot be set when spec.os.name is windows.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              description: Run container in privileged mode. Processes
                                in privileged containers are essentially equivalent
                                to root on the host. Defaults to false. Note that
                                this field cannot be set when spec.os.name is windows.
                              type: boolean
                            procMount:
                              description: procMount denotes the type of proc mount
                                to use for the containers. The default is DefaultProcMount
                                which uses the container runtime defaults for readonly
                                paths and masked paths. This requires the ProcMountType
                                feature flag to be enabled. Note that this field cannot
                                be set when spec.os.name is windows.
                              type: string
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only
                                root filesystem. Default is false. Note that this
                                field cannot be set when spec.os.name is windows.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container
                                process. Uses runtime default if unset. May also be
                                set in PodSecurityContext.  If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is windows.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as
                                a non-root user. If true, the Kubelet will validate
                                the image at runtime to ensure that it does not run
                                as UID 0 (root) and fail to start the container if
                                it does. If unset or false, no such validation will
                                be performed. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container
                                process. Defaults to user specified in image metadata
                                if unspecified. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name
                                is windows.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: The SELinux context to be applied to the
                                container. If unspecified, the container runtime will
                                allocate a random SELinux context for each container.  May
                                also be set in PodSecurityContext.  If set in both
                                SecurityContext and PodSecurityContext, the value
                                specified in SecurityContext takes precedence. Note
                                that this field cannot be set when spec.os.name is
                                windows.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies
                                    to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies
                                    to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies
                                    to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies
                                    to the container.
                                  type: string
                              type: object
                            seccompProfile:
                              description: The seccomp options to use by this container.
                                If seccomp options are provided at both the pod &
                                container level, the container options override the
                                pod options. Note that this field cannot be set when
                                spec.os.name is windows.
                              properties:
                                localhostProfile:
                                  description: localhostProfile indicates a profile
                                    defined in a file on the node should be used.
                                    The profile must be preconfigured on the node
                                    to work. Must be a descending path, relative to
                                    the kubelet's configured seccomp profile location.
                                    Must be set if type is "Localhost". Must NOT be
                                    set for any other type.
                                  type: string
                                type:
                                  description: "type indicates which kind of seccomp
                                    profile will be applied. Valid options are: \n
                                    Localhost - a profile defined in a file on the
                                    node should be used. RuntimeDefault - the container
                                    runtime default profile should be used. Unconfined
                                    - no profile should be applied."
                                  type: string
                              required:
                              - type
                              type: object
                            windowsOptions:
                              description: The Windows specific settings applied to
                                all containers. If unspecified, the options from the
                                PodSecurityContext will be used. If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is linux.
                              properties:
                                gmsaCredentialSpec:
                                  description: GMSACredentialSpec is where the GMSA
                                    admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                    inlines the contents of the GMSA credential spec
                                    named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name
                                    of the GMSA credential spec to use.
                                  type: string
                                hostProcess:
                                  description: HostProcess determines if a container
                                    should be run as a 'Host Process' container. All
                                    of a Pod's containers must have the same effective
                                    HostProcess value (it is not allowed to have a
                                    mix of HostProcess containers and non-HostProcess
                                    containers). In addition, if HostProcess is true
                                    then HostNetwork must also be set to true.
                                  type: boolean
                                runAsUserName:
                                  description: The UserName in Windows to run the
                                    entrypoint of the container process. Defaults
                                    to the user specified in image metadata if unspecified.
                                    May also be set in PodSecurityContext. If set
                                    in both SecurityContext and PodSecurityContext,
                                    the value specified in SecurityContext takes precedence.
                                  type: string
                              type: object
                          type: object
                        volumeMounts:
                          description: volume mounts to append to the container
                          items:
                            description: VolumeMount describes a mounting of a Volume
                              within a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the
                                  volume should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts
                                  are propagated from the host to container and the
                                  other way around. When not set, MountPropagationNone
                                  is used. This field is beta in 1.10.
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write
                                  otherwise (false or unspecified). Defaults to false.
                                type: boolean
                              subPath:
                                description: Path within the volume from which the
                                  container's volume should be mounted. Defaults to
                                  "" (volume's root).
                                type: string
                              subPathExpr:
                                description: Expanded path within the volume from
                                  which the container's volume should be mounted.
                                  Behaves similarly to SubPath but environment variable
                                  references $(VAR_NAME) are expanded using the container's
                                  environment. Defaults to "" (volume's root). SubPathExpr
                                  and SubPath are mutually exclusive.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                        workingDir:
                          description: override default working directory in the image
                            (empty string to default WORKDIR for the image)
                          type: string
                      type: object
                    content:
                      description: content that should be fetched for this step
                      properties:
                        files:
                          description: files to load
                          items:
                            properties:
                              content:
                                description: plain-text content to put inside
                                type: string
                              contentFrom:
                                description: external source to use
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                      metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                      `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                      spec.serviceAccountName, status.hostIP, status.podIP,
                                      status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage, requests.cpu,
                                      requests.memory and requests.ephemeral-storage)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                              mode:
                                description: mode to use for the file
                                format: int32
                                type: integer
                              path:
                                description: path where the file should be accessible
                                  at
                                minLength: 1
                                type: string
                            required:
                            - path
                            type: object
                          type: array
                        git:
                          description: git repository details
                          properties:
                            authType:
                              description: authorization type for the credentials
                              enum:
                              - basic
                              - header
                              type: string
                            mountPath:
                              description: where to mount the fetched repository contents
                                (defaults to "repo" directory in the data volume)
                              type: string
                            paths:
                              description: paths to fetch for the sparse checkout
                              items:
                                type: string
                              type: array
                            revision:
                              description: branch, commit or a tag name to fetch
                              type: string
                            token:
                              description: plain text token to fetch with
                              type: string
                            tokenFrom:
                              description: external token to fetch with
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                            uri:
                              description: uri for the Git repository
                              type: string
                            username:
                              description: plain text username to fetch with
                              type: string
                            usernameFrom:
                              description: external username to fetch with
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          type: object
                      type: object
                    delay:
                      description: delay before the step
                      pattern: ^((0|[1-9][0-9]*)h)?((0|[1-9][0-9]*)m)?((0|[1-9][0-9]*)s)?((0|[1-9][0-9]*)ms)?$
                      type: string
                    execute:
                      description: execute other Testkube resources
                      properties:
                        async:
                          description: only schedule the resources, don't watch the
                            results (unless it is needed for parallelism)
                          type: boolean
                        parallelism:
                          description: how many resources could be scheduled in parallel
                          format: int32
                          type: integer
                        tests:
                          description: tests to run
                          items:
                            properties:
                              count:
                                anyOf:
                                - type: integer
                                - type: string
                                description: static number of sharded instances to
                                  spawn
                                x-kubernetes-int-or-string: true
                              description:
                                description: test execution description to display
                                type: string
                              executionRequest:
                                description: pass the execution request overrides
                                properties:
                                  activeDeadlineSeconds:
                                    description: Optional duration in seconds the
                                      pod may be active on the node relative to StartTime
                                      before the system will actively try to mark
                                      it failed and kill associated containers. Value
                                      must be a positive integer.
                                    format: int64
                                    type: integer
                                  args:
                                    description: additional executor binary arguments
                                    items:
                                      type: string
                                    type: array
                                  argsMode:
                                    description: usage mode for arguments
                                    enum:
                                    - append
                                    - override
                                    - replace
                                    type: string
                                  artifactRequest:
                                    description: artifact request body with test artifacts
                                    properties:
                                      dirs:
                                        description: artifact directories for scraping
                                        items:
                                          type: string
                                        type: array
                                      masks:
                                        description: regexp to filter scraped artifacts,
                                          single or comma separated
                                        items:
                                          type: string
                                        type: array
                                      omitFolderPerExecution:
                                        description: don't use a separate folder for
                                          execution artifacts
                                        type: boolean
                                      sharedBetweenPods:
                                        description: whether to share volume between
                                          pods
                                        type: boolean
                                      storageBucket:
                                        description: artifact bucket storage
                                        type: string
                                      storageClassName:
                                        description: artifact storage class name for
                                          container executor
                                        type: string
                                      useDefaultStorageClassName:
                                        description: whether to use default storage
                                          class name
                                        type: boolean
                                      volumeMountPath:
                                        description: artifact volume mount path for
                                          container executor
                                        type: string
                                    type: object
                                  command:
                                    description: executor binary command
                                    items:
                                      type: string
                                    type: array
                                  cronJobTemplate:
                                    description: cron job template extensions
                                    type: string
                                  envConfigMaps:
                                    description: config map references
                                    items:
                                      description: Reference to env resource
                                      properties:
                                        mapToVariables:
                                          description: whether we shoud map to variables
                                            from resource
                                          type: boolean
                                        mount:
                                          description: whether we shoud mount resource
                                          type: boolean
                                        mountPath:
                                          description: where we shoud mount resource
                                          type: string
                                        reference:
                                          description: LocalObjectReference contains
                                            enough information to let you locate the
                                            referenced object inside the same namespace.
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                      required:
                                      - reference
                                      type: object
                                    type: array
                                  envSecrets:
                                    description: secret references
                                    items:
                                      description: Reference to env resource
                                      properties:
                                        mapToVariables:
                                          description: whether we shoud map to variables
                                            from resource
                                          type: boolean
                                        mount:
                                          description: whether we shoud mount resource
                                          type: boolean
                                        mountPath:
                                          description: where we shoud mount resource
                                          type: string
                                        reference:
                                          description: LocalObjectReference contains
                                            enough information to let you locate the
                                            referenced object inside the same namespace.
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                      required:
                                      - reference
                                      type: object
                                    type: array
                                  executePostRunScriptBeforeScraping:
                                    description: execute post run script before scraping
                                      (prebuilt executor only)
                                    type: boolean
                                  executionLabels:
                                    additionalProperties:
                                      type: string
                                    description: test execution labels
                                    type: object
                                  executionNamespace:
                                    description: namespace for test execution (Pro
                                      edition only)
                                    type: string
                                  httpProxy:
                                    description: http proxy for executor containers
                                    type: string
                                  httpsProxy:
                                    description: https proxy for executor containers
                                    type: string
                                  image:
                                    description: container executor image
                                    type: string
                                  imagePullSecrets:
                                    description: container executor image pull secrets
                                    items:
                                      description: LocalObjectReference contains enough
                                        information to let you locate the referenced
                                        object inside the same namespace.
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    type: array
                                  isVariablesFileUploaded:
                                    type: boolean
                                  jobTemplate:
                                    description: job template extensions
                                    type: string
                                  name:
                                    description: test execution custom name
                                    type: string
                                  negativeTest:
                                    description: negative test will fail the execution
                                      if it is a success and it will succeed if it
                                      is a failure
                                    type: boolean
                                  postRunScript:
                                    description: script to run after test execution
                                    type: string
                                  preRunScript:
                                    description: script to run before test execution
                                    type: string
                                  scraperTemplate:
                                    description: scraper template extensions
                                    type: string
                                  sourceScripts:
                                    description: run scripts using source command
                                      (container executor only)
                                    type: boolean
                                  sync:
                                    description: whether to start execution sync or
                                      async
                                    type: boolean
                                  testSecretUUID:
                                    description: test secret uuid
                                    type: string
                                  variables:
                                    additionalProperties:
                                      properties:
                                        name:
                                          description: variable name
                                          type: string
                                        type:
                                          description: variable type
                                          type: string
                                        value:
                                          description: variable string value
                                          type: string
                                        valueFrom:
                                          description: or load it from var source
                                          properties:
                                            configMapKeyRef:
                                              description: Selects a key of a ConfigMap.
                                              properties:
                                                key:
                                                  description: The key to select.
                                                  type: string
                                                name:
                                                  description: 'Name of the referent.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    TODO: Add other useful fields.
                                                    apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the
                                                    ConfigMap or its key must be defined
                                                  type: boolean
                                              required:
                                              - key
                                              type: object
                                            fieldRef:
                                              description: 'Selects a field of the
                                                pod: supports metadata.name, metadata.namespace,
                                                `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                                spec.nodeName, spec.serviceAccountName,
                                                status.hostIP, status.podIP, status.podIPs.'
                                              properties:
                                                apiVersion:
                                                  description: Version of the schema
                                                    the FieldPath is written in terms
                                                    of, defaults to "v1".
                                                  type: string
                                                fieldPath:
                                                  description: Path of the field to
                                                    select in the specified API version.
                                                  type: string
                                              required:
                                              - fieldPath
                                              type: object
                                            resourceFieldRef:
                                              description: 'Selects a resource of
                                                the container: only resources limits
                                                and requests (limits.cpu, limits.memory,
                                                limits.ephemeral-storage, requests.cpu,
                                                requests.memory and requests.ephemeral-storage)
                                                are currently supported.'
                                              properties:
                                                containerName:
                                                  description: 'Container name: required
                                                    for volumes, optional for env
                                                    vars'
                                                  type: string
                                                divisor:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Specifies the output
                                                    format of the exposed resources,
                                                    defaults to "1"
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                resource:
                                                  description: 'Required: resource
                                                    to select'
                                                  type: string
                                              required:
                                              - resource
                                              type: object
                                            secretKeyRef:
                                              description: Selects a key of a secret
                                                in the pod's namespace
                                              properties:
                                                key:
                                                  description: The key of the secret
                                                    to select from.  Must be a valid
                                                    secret key.
                                                  type: string
                                                name:
                                                  description: 'Name of the referent.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    TODO: Add other useful fields.
                                                    apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the
                                                    Secret or its key must be defined
                                                  type: boolean
                                              required:
                                              - key
                                              type: object
                                          type: object
                                      type: object
                                    type: object
                                  variablesFile:
                                    description: variables file content - need to
                                      be in format for particular executor (e.g. postman
                                      envs file)
                                    type: string
                                type: object
                              matrix:
                                description: matrix of parameters to spawn instances
                                  (static)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              maxCount:
                                anyOf:
                                - type: integer
                                - type: string
                                description: dynamic number of sharded instances to
                                  spawn - it will be lowered if there is not enough
                                  sharded values
                                x-kubernetes-int-or-string: true
                              name:
                                description: test name to run
                                type: string
                              shards:
                                description: parameters that should be distributed
                                  across sharded instances
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          type: array
                        workflows:
                          description: workflows to run
                          items:
                            properties:
                              config:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  x-kubernetes-int-or-string: true
                                description: configuration to pass for the workflow
                                type: object
                              count:
                                anyOf:
                                - type: integer
                                - type: string
                                description: static number of sharded instances to
                                  spawn
                                x-kubernetes-int-or-string: true
                              description:
                                description: test workflow execution description to
                                  display
                                type: string
                              executionName:
                                description: unique execution name to use
                                type: string
                              matrix:
                                description: matrix of parameters to spawn instances
                                  (static)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              maxCount:
                                anyOf:
                                - type: integer
                                - type: string
                                description: dynamic number of sharded instances to
                                  spawn - it will be lowered if there is not enough
                                  sharded values
                                x-kubernetes-int-or-string: true
                              name:
                                description: workflow name to run
                                type: string
                              shards:
                                description: parameters that should be distributed
                                  across sharded instances
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          type: array
                      type: object
                    name:
                      description: readable name for the step
                      type: string
                    negative:
                      description: is the step expected to fail
                      type: boolean
                    optional:
                      description: is the step optional, so its failure won't affect
                        the TestWorkflow result
                      type: boolean
                    retry:
                      description: policy for retrying the step
                      properties:
                        count:
                          description: how many times at most it should retry
                          format: int32
                          minimum: 1
                          type: integer
                        until:
                          description: 'until when it should retry (defaults to: "passed")'
                          type: string
                      type: object
                    run:
                      description: run specific container in the current step
                      properties:
                        args:
                          description: override default command in the image (empty
                            string to default CMD of the image)
                          items:
                            type: string
                          type: array
                        command:
                          description: override default command in the image (empty
                            string to default ENTRYPOINT of the image)
                          items:
                            type: string
                          type: array
                        env:
                          description: environment variables to append to the container
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are
                                  expanded using the previously defined environment
                                  variables in the container and any service environment
                                  variables. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged.
                                  Double $$ are reduced to a single $, which allows
                                  for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                  will produce the string literal "$(VAR_NAME)". Escaped
                                  references will never be expanded, regardless of
                                  whether the variable exists or not. Defaults to
                                  "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                      metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                      `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                      spec.serviceAccountName, status.hostIP, status.podIP,
                                      status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage, requests.cpu,
                                      requests.memory and requests.ephemeral-storage)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        envFrom:
                          description: external environment variables to append to
                            the container
                          items:
                            description: EnvFromSource represents the source of a
                              set of ConfigMaps
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                                type: object
                              prefix:
                                description: An optional identifier to prepend to
                                  each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                                type: object
                            type: object
                          type: array
                        image:
                          description: image to be used for the container
                          type: string
                        imagePullPolicy:
                          description: pulling policy for the image
                          type: string
                        resources:
                          description: expected resources for the container
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                x-kubernetes-int-or-string: true
                              description: resource limits for the container
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                x-kubernetes-int-or-string: true
                              description: resource requests for the container
                              type: object
                          type: object
                        securityContext:
                          description: security context for the container
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether
                                a process can gain more privileges than its parent
                                process. This bool directly controls if the no_new_privs
                                flag will be set on the container process. AllowPrivilegeEscalation
                                is true always when the container is: 1) run as Privileged
                                2) has CAP_SYS_ADMIN Note that this field cannot be
                                set when spec.os.name is windows.'
                              type: boolean
                            capabilities:
                              description: The capabilities to add/drop when running
                                containers. Defaults to the default set of capabilities
                                granted by the container runtime. Note that this field
                                cannot be set when spec.os.name is windows.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              description: Run container in privileged mode. Processes
                                in privileged containers are essentially equivalent
                                to root on the host. Defaults to false. Note that
                                this field cannot be set when spec.os.name is windows.
                              type: boolean
                            procMount:
                              description: procMount denotes the type of proc mount
                                to use for the containers. The default is DefaultProcMount
                                which uses the container runtime defaults for readonly
                                paths and masked paths. This requires the ProcMountType
                                feature flag to be enabled. Note that this field cannot
                                be set when spec.os.name is windows.
                              type: string
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only
                                root filesystem. Default is false. Note that this
                                field cannot be set when spec.os.name is windows.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container
                                process. Uses runtime default if unset. May also be
                                set in PodSecurityContext.  If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is windows.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as
                                a non-root user. If true, the Kubelet will validate
                                the image at runtime to ensure that it does not run
                                as UID 0 (root) and fail to start the container if
                                it does. If unset or false, no such validation will
                                be performed. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container
                                process. Defaults to user specified in image metadata
                                if unspecified. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name
                                is windows.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: The SELinux context to be applied to the
                                container. If unspecified, the container runtime will
                                allocate a random SELinux context for each container.  May
                                also be set in PodSecurityContext.  If set in both
                                SecurityContext and PodSecurityContext, the value
                                specified in SecurityContext takes precedence. Note
                                that this field cannot be set when spec.os.name is
                                windows.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies
                                    to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies
                                    to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies
                                    to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies
                                    to the container.
                                  type: string
                              type: object
                            seccompProfile:
                              description: The seccomp options to use by this container.
                                If seccomp options are provided at both the pod &
                                container level, the container options override the
                                pod options. Note that this field cannot be set when
                                spec.os.name is windows.
                              properties:
                                localhostProfile:
                                  description: localhostProfile indicates a profile
                                    defined in a file on the node should be used.
                                    The profile must be preconfigured on the node
                                    to work. Must be a descending path, relative to
                                    the kubelet's configured seccomp profile location.
                                    Must be set if type is "Localhost". Must NOT be
                                    set for any other type.
                                  type: string
                                type:
                                  description: "type indicates which kind of seccomp
                                    profile will be applied. Valid options are: \n
                                    Localhost - a profile defined in a file on the
                                    node should be used. RuntimeDefault - the container
                                    runtime default profile should be used. Unconfined
                                    - no profile should be applied."
                                  type: string
                              required:
                              - type
                              type: object
                            windowsOptions:
                              description: The Windows specific settings applied to
                                all containers. If unspecified, the options from the
                                PodSecurityContext will be used. If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is linux.
                              properties:
                                gmsaCredentialSpec:
                                  description: GMSACredentialSpec is where the GMSA
                                    admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                    inlines the contents of the GMSA credential spec
                                    named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name
                                    of the GMSA credential spec to use.
                                  type: string
                                hostProcess:
                                  description: HostProcess determines if a container
                                    should be run as a 'Host Process' container. All
                                    of a Pod's containers must have the same effective
                                    HostProcess value (it is not allowed to have a
                                    mix of HostProcess containers and non-HostProcess
                                    containers). In addition, if HostProcess is true
                                    then HostNetwork must also be set to true.
                                  type: boolean
                                runAsUserName:
                                  description: The UserName in Windows to run the
                                    entrypoint of the container process. Defaults
                                    to the user specified in image metadata if unspecified.
                                    May also be set in PodSecurityContext. If set
                                    in both SecurityContext and PodSecurityContext,
                                    the value specified in SecurityContext takes precedence.
                                  type: string
                              type: object
                          type: object
                        shell:
                          description: script to run in a default shell for the container
                          type: string
                        volumeMounts:
                          description: volume mounts to append to the container
                          items:
                            description: VolumeMount describes a mounting of a Volume
                              within a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the
                                  volume should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts
                                  are propagated from the host to container and the
                                  other way around. When not set, MountPropagationNone
                                  is used. This field is beta in 1.10.
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write
                                  otherwise (false or unspecified). Defaults to false.
                                type: boolean
                              subPath:
                                description: Path within the volume from which the
                                  container's volume should be mounted. Defaults to
                                  "" (volume's root).
                                type: string
                              subPathExpr:
                                description: Expanded path within the volume from
                                  which the container's volume should be mounted.
                                  Behaves similarly to SubPath but environment variable
                                  references $(VAR_NAME) are expanded using the container's
                                  environment. Defaults to "" (volume's root). SubPathExpr
                                  and SubPath are mutually exclusive.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                        workingDir:
                          description: override default working directory in the image
                            (empty string to default WORKDIR for the image)
                          type: string
                      type: object
                    setup:
                      description: steps to run before other operations in this step
                      x-kubernetes-preserve-unknown-fields: true
                    shell:
                      description: script to run in a default shell for the container
                      type: string
                    steps:
                      description: sub-steps to run
                      x-kubernetes-preserve-unknown-fields: true
                    template:
                      description: single template to run in this step
                      properties:
                        config:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            x-kubernetes-int-or-string: true
                          description: trait configuration values if needed
                          type: object
                        name:
                          description: name of the template to include
                          type: string
                      required:
                      - name
                      type: object
                    timeout:
                      description: maximum time this step may take
                      pattern: ^((0|[1-9][0-9]*)h)?((0|[1-9][0-9]*)m)?((0|[1-9][0-9]*)s)?((0|[1-9][0-9]*)ms)?$
                      type: string
                    use:
                      description: multiple templates to include in this step
                      items:
                        description: TemplateRef is the reference for the template
                          inclusion
                        properties:
                          config:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              x-kubernetes-int-or-string: true
                            description: trait configuration values if needed
                            type: object
                          name:
                            description: name of the template to include
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    workingDir:
                      description: working directory to use for this step
                      type: string
                  type: object
                type: array
              use:
                description: templates to include at a top-level of workflow
                items:
                  description: TemplateRef is the reference for the template inclusion
                  properties:
                    config:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        x-kubernetes-int-or-string: true
                      description: trait configuration values if needed
                      type: object
                    name:
                      description: name of the template to include
                      type: string
                  required:
                  - name
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: testkube/charts/testkube-operator/templates/testworkflows.testkube.io_testworkflowtemplates.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: testworkflowtemplates.testworkflows.testkube.io
spec:
  group: testworkflows.testkube.io
  names:
    kind: TestWorkflowTemplate
    listKind: TestWorkflowTemplateList
    plural: testworkflowtemplates
    singular: testworkflowtemplate
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: TestWorkflowTemplate is the Schema for the workflows API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          description:
            description: TestWorkflowTemplate readable description
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TestWorkflowTemplate specification
            properties:
              after:
                description: steps to run at the end of the workflow
                items:
                  properties:
                    artifacts:
                      description: scrape artifacts from the volumes
                      properties:
                        compress:
                          description: compression options for the artifacts
                          properties:
                            name:
                              description: artifact name
                              minLength: 1
                              type: string
                          required:
                          - name
                          type: object
                        paths:
                          description: paths to fetch from the container
                          items:
                            type: string
                          type: array
                        workingDir:
                          description: working directory to override, so it will be
                            used as a base dir
                          type: string
                      type: object
                    condition:
                      description: 'expression to declare under which conditions the
                        step should be run defaults to: "passed", except artifacts
                        where it defaults to "always"'
                      type: string
                    container:
                      description: defaults for the containers in this step
                      properties:
                        args:
                          description: override default command in the image (empty
                            string to default CMD of the image)
                          items:
                            type: string
                          type: array
                        command:
                          description: override default command in the image (empty
                            string to default ENTRYPOINT of the image)
                          items:
                            type: string
                          type: array
                        env:
                          description: environment variables to append to the container
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are
                                  expanded using the previously defined environment
                                  variables in the container and any service environment
                                  variables. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged.
                                  Double $$ are reduced to a single $, which allows
                                  for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                  will produce the string literal "$(VAR_NAME)". Escaped
                                  references will never be expanded, regardless of
                                  whether the variable exists or not. Defaults to
                                  "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                      metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                      `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                      spec.serviceAccountName, status.hostIP, status.podIP,
                                      status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage, requests.cpu,
                                      requests.memory and requests.ephemeral-storage)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        envFrom:
                          description: external environment variables to append to
                            the container
                          items:
                            description: EnvFromSource represents the source of a
                              set of ConfigMaps
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                                type: object
                              prefix:
                                description: An optional identifier to prepend to
                                  each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                                type: object
                            type: object
                          type: array
                        image:
                          description: image to be used for the container
                          type: string
                        imagePullPolicy:
                          description: pulling policy for the image
                          type: string
                        resources:
                          description: expected resources for the container
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                x-kubernetes-int-or-string: true
                              description: resource limits for the container
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                x-kubernetes-int-or-string: true
                              description: resource requests for the container
                              type: object
                          type: object
                        securityContext:
                          description: security context for the container
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether
                                a process can gain more privileges than its parent
                                process. This bool directly controls if the no_new_privs
                                flag will be set on the container process. AllowPrivilegeEscalation
                                is true always when the container is: 1) run as Privileged
                                2) has CAP_SYS_ADMIN Note that this field cannot be
                                set when spec.os.name is windows.'
                              type: boolean
                            capabilities:
                              description: The capabilities to add/drop when running
                                containers. Defaults to the default set of capabilities
                                granted by the container runtime. Note that this field
                                cannot be set when spec.os.name is windows.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              description: Run container in privileged mode. Processes
                                in privileged containers are essentially equivalent
                                to root on the host. Defaults to false. Note that
                                this field cannot be set when spec.os.name is windows.
                              type: boolean
                            procMount:
                              description: procMount denotes the type of proc mount
                                to use for the containers. The default is DefaultProcMount
                                which uses the container runtime defaults for readonly
                                paths and masked paths. This requires the ProcMountType
                                feature flag to be enabled. Note that this field cannot
                                be set when spec.os.name is windows.
                              type: string
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only
                                root filesystem. Default is false. Note that this
                                field cannot be set when spec.os.name is windows.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container
                                process. Uses runtime default if unset. May also be
                                set in PodSecurityContext.  If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is windows.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as
                                a non-root user. If true, the Kubelet will validate
                                the image at runtime to ensure that it does not run
                                as UID 0 (root) and fail to start the container if
                                it does. If unset or false, no such validation will
                                be performed. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container
                                process. Defaults to user specified in image metadata
                                if unspecified. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name
                                is windows.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: The SELinux context to be applied to the
                                container. If unspecified, the container runtime will
                                allocate a random SELinux context for each container.  May
                                also be set in PodSecurityContext.  If set in both
                                SecurityContext and PodSecurityContext, the value
                                specified in SecurityContext takes precedence. Note
                                that this field cannot be set when spec.os.name is
                                windows.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies
                                    to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies
                                    to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies
                                    to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies
                                    to the container.
                                  type: string
                              type: object
                            seccompProfile:
                              description: The seccomp options to use by this container.
                                If seccomp options are provided at both the pod &
                                container level, the container options override the
                                pod options. Note that this field cannot be set when
                                spec.os.name is windows.
                              properties:
                                localhostProfile:
                                  description: localhostProfile indicates a profile
                                    defined in a file on the node should be used.
                                    The profile must be preconfigured on the node
                                    to work. Must be a descending path, relative to
                                    the kubelet's configured seccomp profile location.
                                    Must be set if type is "Localhost". Must NOT be
                                    set for any other type.
                                  type: string
                                type:
                                  description: "type indicates which kind of seccomp
                                    profile will be applied. Valid options are: \n
                                    Localhost - a profile defined in a file on the
                                    node should be used. RuntimeDefault - the container
                                    runtime default profile should be used. Unconfined
                                    - no profile should be applied."
                                  type: string
                              required:
                              - type
                              type: object
                            windowsOptions:
                              description: The Windows specific settings applied to
                                all containers. If unspecified, the options from the
                                PodSecurityContext will be used. If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is linux.
                              properties:
                                gmsaCredentialSpec:
                                  description: GMSACredentialSpec is where the GMSA
                                    admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                    inlines the contents of the GMSA credential spec
                                    named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name
                                    of the GMSA credential spec to use.
                                  type: string
                                hostProcess:
                                  description: HostProcess determines if a container
                                    should be run as a 'Host Process' container. All
                                    of a Pod's containers must have the same effective
                                    HostProcess value (it is not allowed to have a
                                    mix of HostProcess containers and non-HostProcess
                                    containers). In addition, if HostProcess is true
                                    then HostNetwork must also be set to true.
                                  type: boolean
                                runAsUserName:
                                  description: The UserName in Windows to run the
                                    entrypoint of the container process. Defaults
                                    to the user specified in image metadata if unspecified.
                                    May also be set in PodSecurityContext. If set
                                    in both SecurityContext and PodSecurityContext,
                                    the value specified in SecurityContext takes precedence.
                                  type: string
                              type: object
                          type: object
                        volumeMounts:
                          description: volume mounts to append to the container
                          items:
                            description: VolumeMount describes a mounting of a Volume
                              within a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the
                                  volume should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts
                                  are propagated from the host to container and the
                                  other way around. When not set, MountPropagationNone
                                  is used. This field is beta in 1.10.
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write
                                  otherwise (false or unspecified). Defaults to false.
                                type: boolean
                              subPath:
                                description: Path within the volume from which the
                                  container's volume should be mounted. Defaults to
                                  "" (volume's root).
                                type: string
                              subPathExpr:
                                description: Expanded path within the volume from
                                  which the container's volume should be mounted.
                                  Behaves similarly to SubPath but environment variable
                                  references $(VAR_NAME) are expanded using the container's
                                  environment. Defaults to "" (volume's root). SubPathExpr
                                  and SubPath are mutually exclusive.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                        workingDir:
                          description: override default working directory in the image
                            (empty string to default WORKDIR for the image)
                          type: string
                      type: object
                    content:
                      description: content that should be fetched for this step
                      properties:
                        files:
                          description: files to load
                          items:
                            properties:
                              content:
                                description: plain-text content to put inside
                                type: string
                              contentFrom:
                                description: external source to use
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                      metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                      `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                      spec.serviceAccountName, status.hostIP, status.podIP,
                                      status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage, requests.cpu,
                                      requests.memory and requests.ephemeral-storage)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                              mode:
                                description: mode to use for the file
                                format: int32
                                type: integer
                              path:
                                description: path where the file should be accessible
                                  at
                                minLength: 1
                                type: string
                            required:
                            - path
                            type: object
                          type: array
                        git:
                          description: git repository details
                          properties:
                            authType:
                              description: authorization type for the credentials
                              enum:
                              - basic
                              - header
                              type: string
                            mountPath:
                              description: where to mount the fetched repository contents
                                (defaults to "repo" directory in the data volume)
                              type: string
                            paths:
                              description: paths to fetch for the sparse checkout
                              items:
                                type: string
                              type: array
                            revision:
                              description: branch, commit or a tag name to fetch
                              type: string
                            token:
                              description: plain text token to fetch with
                              type: string
                            tokenFrom:
                              description: external token to fetch with
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                            uri:
                              description: uri for the Git repository
                              type: string
                            username:
                              description: plain text username to fetch with
                              type: string
                            usernameFrom:
                              description: external username to fetch with
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          type: object
                      type: object
                    delay:
                      description: delay before the step
                      pattern: ^((0|[1-9][0-9]*)h)?((0|[1-9][0-9]*)m)?((0|[1-9][0-9]*)s)?((0|[1-9][0-9]*)ms)?$
                      type: string
                    execute:
                      description: execute other Testkube resources
                      properties:
                        async:
                          description: only schedule the resources, don't watch the
                            results (unless it is needed for parallelism)
                          type: boolean
                        parallelism:
                          description: how many resources could be scheduled in parallel
                          format: int32
                          type: integer
                        tests:
                          description: tests to run
                          items:
                            properties:
                              count:
                                anyOf:
                                - type: integer
                                - type: string
                                description: static number of sharded instances to
                                  spawn
                                x-kubernetes-int-or-string: true
                              description:
                                description: test execution description to display
                                type: string
                              executionRequest:
                                description: pass the execution request overrides
                                properties:
                                  activeDeadlineSeconds:
                                    description: Optional duration in seconds the
                                      pod may be active on the node relative to StartTime
                                      before the system will actively try to mark
                                      it failed and kill associated containers. Value
                                      must be a positive integer.
                                    format: int64
                                    type: integer
                                  args:
                                    description: additional executor binary arguments
                                    items:
                                      type: string
                                    type: array
                                  argsMode:
                                    description: usage mode for arguments
                                    enum:
                                    - append
                                    - override
                                    - replace
                                    type: string
                                  artifactRequest:
                                    description: artifact request body with test artifacts
                                    properties:
                                      dirs:
                                        description: artifact directories for scraping
                                        items:
                                          type: string
                                        type: array
                                      masks:
                                        description: regexp to filter scraped artifacts,
                                          single or comma separated
                                        items:
                                          type: string
                                        type: array
                                      omitFolderPerExecution:
                                        description: don't use a separate folder for
                                          execution artifacts
                                        type: boolean
                                      sharedBetweenPods:
                                        description: whether to share volume between
                                          pods
                                        type: boolean
                                      storageBucket:
                                        description: artifact bucket storage
                                        type: string
                                      storageClassName:
                                        description: artifact storage class name for
                                          container executor
                                        type: string
                                      useDefaultStorageClassName:
                                        description: whether to use default storage
                                          class name
                                        type: boolean
                                      volumeMountPath:
                                        description: artifact volume mount path for
                                          container executor
                                        type: string
                                    type: object
                                  command:
                                    description: executor binary command
                                    items:
                                      type: string
                                    type: array
                                  cronJobTemplate:
                                    description: cron job template extensions
                                    type: string
                                  envConfigMaps:
                                    description: config map references
                                    items:
                                      description: Reference to env resource
                                      properties:
                                        mapToVariables:
                                          description: whether we shoud map to variables
                                            from resource
                                          type: boolean
                                        mount:
                                          description: whether we shoud mount resource
                                          type: boolean
                                        mountPath:
                                          description: where we shoud mount resource
                                          type: string
                                        reference:
                                          description: LocalObjectReference contains
                                            enough information to let you locate the
                                            referenced object inside the same namespace.
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                      required:
                                      - reference
                                      type: object
                                    type: array
                                  envSecrets:
                                    description: secret references
                                    items:
                                      description: Reference to env resource
                                      properties:
                                        mapToVariables:
                                          description: whether we shoud map to variables
                                            from resource
                                          type: boolean
                                        mount:
                                          description: whether we shoud mount resource
                                          type: boolean
                                        mountPath:
                                          description: where we shoud mount resource
                                          type: string
                                        reference:
                                          description: LocalObjectReference contains
                                            enough information to let you locate the
                                            referenced object inside the same namespace.
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                      required:
                                      - reference
                                      type: object
                                    type: array
                                  executePostRunScriptBeforeScraping:
                                    description: execute post run script before scraping
                                      (prebuilt executor only)
                                    type: boolean
                                  executionLabels:
                                    additionalProperties:
                                      type: string
                                    description: test execution labels
                                    type: object
                                  executionNamespace:
                                    description: namespace for test execution (Pro
                                      edition only)
                                    type: string
                                  httpProxy:
                                    description: http proxy for executor containers
                                    type: string
                                  httpsProxy:
                                    description: https proxy for executor containers
                                    type: string
                                  image:
                                    description: container executor image
                                    type: string
                                  imagePullSecrets:
                                    description: container executor image pull secrets
                                    items:
                                      description: LocalObjectReference contains enough
                                        information to let you locate the referenced
                                        object inside the same namespace.
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    type: array
                                  isVariablesFileUploaded:
                                    type: boolean
                                  jobTemplate:
                                    description: job template extensions
                                    type: string
                                  name:
                                    description: test execution custom name
                                    type: string
                                  negativeTest:
                                    description: negative test will fail the execution
                                      if it is a success and it will succeed if it
                                      is a failure
                                    type: boolean
                                  postRunScript:
                                    description: script to run after test execution
                                    type: string
                                  preRunScript:
                                    description: script to run before test execution
                                    type: string
                                  scraperTemplate:
                                    description: scraper template extensions
                                    type: string
                                  sourceScripts:
                                    description: run scripts using source command
                                      (container executor only)
                                    type: boolean
                                  sync:
                                    description: whether to start execution sync or
                                      async
                                    type: boolean
                                  testSecretUUID:
                                    description: test secret uuid
                                    type: string
                                  variables:
                                    additionalProperties:
                                      properties:
                                        name:
                                          description: variable name
                                          type: string
                                        type:
                                          description: variable type
                                          type: string
                                        value:
                                          description: variable string value
                                          type: string
                                        valueFrom:
                                          description: or load it from var source
                                          properties:
                                            configMapKeyRef:
                                              description: Selects a key of a ConfigMap.
                                              properties:
                                                key:
                                                  description: The key to select.
                                                  type: string
                                                name:
                                                  description: 'Name of the referent.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    TODO: Add other useful fields.
                                                    apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the
                                                    ConfigMap or its key must be defined
                                                  type: boolean
                                              required:
                                              - key
                                              type: object
                                            fieldRef:
                                              description: 'Selects a field of the
                                                pod: supports metadata.name, metadata.namespace,
                                                `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                                spec.nodeName, spec.serviceAccountName,
                                                status.hostIP, status.podIP, status.podIPs.'
                                              properties:
                                                apiVersion:
                                                  description: Version of the schema
                                                    the FieldPath is written in terms
                                                    of, defaults to "v1".
                                                  type: string
                                                fieldPath:
                                                  description: Path of the field to
                                                    select in the specified API version.
                                                  type: string
                                              required:
                                              - fieldPath
                                              type: object
                                            resourceFieldRef:
                                              description: 'Selects a resource of
                                                the container: only resources limits
                                                and requests (limits.cpu, limits.memory,
                                                limits.ephemeral-storage, requests.cpu,
                                                requests.memory and requests.ephemeral-storage)
                                                are currently supported.'
                                              properties:
                                                containerName:
                                                  description: 'Container name: required
                                                    for volumes, optional for env
                                                    vars'
                                                  type: string
                                                divisor:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Specifies the output
                                                    format of the exposed resources,
                                                    defaults to "1"
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                resource:
                                                  description: 'Required: resource
                                                    to select'
                                                  type: string
                                              required:
                                              - resource
                                              type: object
                                            secretKeyRef:
                                              description: Selects a key of a secret
                                                in the pod's namespace
                                              properties:
                                                key:
                                                  description: The key of the secret
                                                    to select from.  Must be a valid
                                                    secret key.
                                                  type: string
                                                name:
                                                  description: 'Name of the referent.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    TODO: Add other useful fields.
                                                    apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the
                                                    Secret or its key must be defined
                                                  type: boolean
                                              required:
                                              - key
                                              type: object
                                          type: object
                                      type: object
                                    type: object
                                  variablesFile:
                                    description: variables file content - need to
                                      be in format for particular executor (e.g. postman
                                      envs file)
                                    type: string
                                type: object
                              matrix:
                                description: matrix of parameters to spawn instances
                                  (static)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              maxCount:
                                anyOf:
                                - type: integer
                                - type: string
                                description: dynamic number of sharded instances to
                                  spawn - it will be lowered if there is not enough
                                  sharded values
                                x-kubernetes-int-or-string: true
                              name:
                                description: test name to run
                                type: string
                              shards:
                                description: parameters that should be distributed
                                  across sharded instances
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          type: array
                        workflows:
                          description: workflows to run
                          items:
                            properties:
                              config:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  x-kubernetes-int-or-string: true
                                description: configuration to pass for the workflow
                                type: object
                              count:
                                anyOf:
                                - type: integer
                                - type: string
                                description: static number of sharded instances to
                                  spawn
                                x-kubernetes-int-or-string: true
                              description:
                                description: test workflow execution description to
                                  display
                                type: string
                              executionName:
                                description: unique execution name to use
                                type: string
                              matrix:
                                description: matrix of parameters to spawn instances
                                  (static)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              maxCount:
                                anyOf:
                                - type: integer
                                - type: string
                                description: dynamic number of sharded instances to
                                  spawn - it will be lowered if there is not enough
                                  sharded values
                                x-kubernetes-int-or-string: true
                              name:
                                description: workflow name to run
                                type: string
                              shards:
                                description: parameters that should be distributed
                                  across sharded instances
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          type: array
                      type: object
                    name:
                      description: readable name for the step
                      type: string
                    negative:
                      description: is the step expected to fail
                      type: boolean
                    optional:
                      description: is the step optional, so its failure won't affect
                        the TestWorkflow result
                      type: boolean
                    retry:
                      description: policy for retrying the step
                      properties:
                        count:
                          description: how many times at most it should retry
                          format: int32
                          minimum: 1
                          type: integer
                        until:
                          description: 'until when it should retry (defaults to: "passed")'
                          type: string
                      type: object
                    run:
                      description: run specific container in the current step
                      properties:
                        args:
                          description: override default command in the image (empty
                            string to default CMD of the image)
                          items:
                            type: string
                          type: array
                        command:
                          description: override default command in the image (empty
                            string to default ENTRYPOINT of the image)
                          items:
                            type: string
                          type: array
                        env:
                          description: environment variables to append to the container
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are
                                  expanded using the previously defined environment
                                  variables in the container and any service environment
                                  variables. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged.
                                  Double $$ are reduced to a single $, which allows
                                  for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                  will produce the string literal "$(VAR_NAME)". Escaped
                                  references will never be expanded, regardless of
                                  whether the variable exists or not. Defaults to
                                  "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                      metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                      `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                      spec.serviceAccountName, status.hostIP, status.podIP,
                                      status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage, requests.cpu,
                                      requests.memory and requests.ephemeral-storage)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        envFrom:
                          description: external environment variables to append to
                            the container
                          items:
                            description: EnvFromSource represents the source of a
                              set of ConfigMaps
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                                type: object
                              prefix:
                                description: An optional identifier to prepend to
                                  each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                                type: object
                            type: object
                          type: array
                        image:
                          description: image to be used for the container
                          type: string
                        imagePullPolicy:
                          description: pulling policy for the image
                          type: string
                        resources:
                          description: expected resources for the container
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                x-kubernetes-int-or-string: true
                              description: resource limits for the container
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                x-kubernetes-int-or-string: true
                              description: resource requests for the container
                              type: object
                          type: object
                        securityContext:
                          description: security context for the container
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether
                                a process can gain more privileges than its parent
                                process. This bool directly controls if the no_new_privs
                                flag will be set on the container process. AllowPrivilegeEscalation
                                is true always when the container is: 1) run as Privileged
                                2) has CAP_SYS_ADMIN Note that this field cannot be
                                set when spec.os.name is windows.'
                              type: boolean
                            capabilities:
                              description: The capabilities to add/drop when running
                                containers. Defaults to the default set of capabilities
                                granted by the container runtime. Note that this field
                                cannot be set when spec.os.name is windows.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              description: Run container in privileged mode. Processes
                                in privileged containers are essentially equivalent
                                to root on the host. Defaults to false. Note that
                                this field cannot be set when spec.os.name is windows.
                              type: boolean
                            procMount:
                              description: procMount denotes the type of proc mount
                                to use for the containers. The default is DefaultProcMount
                                which uses the container runtime defaults for readonly
                                paths and masked paths. This requires the ProcMountType
                                feature flag to be enabled. Note that this field cannot
                                be set when spec.os.name is windows.
                              type: string
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only
                                root filesystem. Default is false. Note that this
                                field cannot be set when spec.os.name is windows.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container
                                process. Uses runtime default if unset. May also be
                                set in PodSecurityContext.  If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is windows.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as
                                a non-root user. If true, the Kubelet will validate
                                the image at runtime to ensure that it does not run
                                as UID 0 (root) and fail to start the container if
                                it does. If unset or false, no such validation will
                                be performed. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container
                                process. Defaults to user specified in image metadata
                                if unspecified. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name
                                is windows.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: The SELinux context to be applied to the
                                container. If unspecified, the container runtime will
                                allocate a random SELinux context for each container.  May
                                also be set in PodSecurityContext.  If set in both
                                SecurityContext and PodSecurityContext, the value
                                specified in SecurityContext takes precedence. Note
                                that this field cannot be set when spec.os.name is
                                windows.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies
                                    to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies
                                    to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies
                                    to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies
                                    to the container.
                                  type: string
                              type: object
                            seccompProfile:
                              description: The seccomp options to use by this container.
                                If seccomp options are provided at both the pod &
                                container level, the container options override the
                                pod options. Note that this field cannot be set when
                                spec.os.name is windows.
                              properties:
                                localhostProfile:
                                  description: localhostProfile indicates a profile
                                    defined in a file on the node should be used.
                                    The profile must be preconfigured on the node
                                    to work. Must be a descending path, relative to
                                    the kubelet's configured seccomp profile location.
                                    Must be set if type is "Localhost". Must NOT be
                                    set for any other type.
                                  type: string
                                type:
                                  description: "type indicates which kind of seccomp
                                    profile will be applied. Valid options are: \n
                                    Localhost - a profile defined in a file on the
                                    node should be used. RuntimeDefault - the container
                                    runtime default profile should be used. Unconfined
                                    - no profile should be applied."
                                  type: string
                              required:
                              - type
                              type: object
                            windowsOptions:
                              description: The Windows specific settings applied to
                                all containers. If unspecified, the options from the
                                PodSecurityContext will be used. If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is linux.
                              properties:
                                gmsaCredentialSpec:
                                  description: GMSACredentialSpec is where the GMSA
                                    admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                    inlines the contents of the GMSA credential spec
                                    named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name
                                    of the GMSA credential spec to use.
                                  type: string
                                hostProcess:
                                  description: HostProcess determines if a container
                                    should be run as a 'Host Process' container. All
                                    of a Pod's containers must have the same effective
                                    HostProcess value (it is not allowed to have a
                                    mix of HostProcess containers and non-HostProcess
                                    containers). In addition, if HostProcess is true
                                    then HostNetwork must also be set to true.
                                  type: boolean
                                runAsUserName:
                                  description: The UserName in Windows to run the
                                    entrypoint of the container process. Defaults
                                    to the user specified in image metadata if unspecified.
                                    May also be set in PodSecurityContext. If set
                                    in both SecurityContext and PodSecurityContext,
                                    the value specified in SecurityContext takes precedence.
                                  type: string
                              type: object
                          type: object
                        shell:
                          description: script to run in a default shell for the container
                          type: string
                        volumeMounts:
                          description: volume mounts to append to the container
                          items:
                            description: VolumeMount describes a mounting of a Volume
                              within a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the
                                  volume should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts
                                  are propagated from the host to container and the
                                  other way around. When not set, MountPropagationNone
                                  is used. This field is beta in 1.10.
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write
                                  otherwise (false or unspecified). Defaults to false.
                                type: boolean
                              subPath:
                                description: Path within the volume from which the
                                  container's volume should be mounted. Defaults to
                                  "" (volume's root).
                                type: string
                              subPathExpr:
                                description: Expanded path within the volume from
                                  which the container's volume should be mounted.
                                  Behaves similarly to SubPath but environment variable
                                  references $(VAR_NAME) are expanded using the container's
                                  environment. Defaults to "" (volume's root). SubPathExpr
                                  and SubPath are mutually exclusive.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                        workingDir:
                          description: override default working directory in the image
                            (empty string to default WORKDIR for the image)
                          type: string
                      type: object
                    setup:
                      description: steps to run before other operations in this step
                      x-kubernetes-preserve-unknown-fields: true
                    shell:
                      description: script to run in a default shell for the container
                      type: string
                    steps:
                      description: sub-steps to run
                      x-kubernetes-preserve-unknown-fields: true
                    timeout:
                      description: maximum time this step may take
                      pattern: ^((0|[1-9][0-9]*)h)?((0|[1-9][0-9]*)m)?((0|[1-9][0-9]*)s)?((0|[1-9][0-9]*)ms)?$
                      type: string
                    workingDir:
                      description: working directory to use for this step
                      type: string
                  type: object
                type: array
              config:
                additionalProperties:
                  properties:
                    default:
                      anyOf:
                      - type: integer
                      - type: string
                      description: default value - if not provided, the parameter
                        is required
                      x-kubernetes-int-or-string: true
                    description:
                      description: parameter description
                      type: string
                    enum:
                      description: the list of allowed values, when limited
                      items:
                        type: string
                      type: array
                    example:
                      anyOf:
                      - type: integer
                      - type: string
                      description: exemplary value
                      x-kubernetes-int-or-string: true
                    exclusiveMaximum:
                      description: maximum value for the number (exclusive)
                      format: int64
                      type: integer
                    exclusiveMinimum:
                      description: minimum value for the number (exclusive)
                      format: int64
                      type: integer
                    format:
                      description: predefined format for the string
                      type: string
                    maxLength:
                      description: maximum length for the string
                      format: int64
                      type: integer
                    maximum:
                      description: maximum value for the number (inclusive)
                      format: int64
                      type: integer
                    minLength:
                      description: minimum length for the string
                      format: int64
                      type: integer
                    minimum:
                      description: minimum value for the number (inclusive)
                      format: int64
                      type: integer
                    multipleOf:
                      description: the number needs to be multiple of this value
                      format: int64
                      type: integer
                    pattern:
                      description: regular expression to match
                      type: string
                    type:
                      default: string
                      description: type of the parameter
                      enum:
                      - string
                      - integer
                      - number
                      - boolean
                      type: string
                  type: object
                description: make the instance configurable with some input data for
                  scheduling it
                type: object
              container:
                description: defaults for the containers for all the TestWorkflow
                  steps
                properties:
                  args:
                    description: override default command in the image (empty string
                      to default CMD of the image)
                    items:
                      type: string
                    type: array
                  command:
                    description: override default command in the image (empty string
                      to default ENTRYPOINT of the image)
                    items:
                      type: string
                    type: array
                  env:
                    description: environment variables to append to the container
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: 'Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in
                            the container and any service environment variables. If
                            a variable cannot be resolved, the reference in the input
                            string will be unchanged. Double $$ are reduced to a single
                            $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Defaults to "".'
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  envFrom:
                    description: external environment variables to append to the container
                    items:
                      description: EnvFromSource represents the source of a set of
                        ConfigMaps
                      properties:
                        configMapRef:
                          description: The ConfigMap to select from
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap must be defined
                              type: boolean
                          type: object
                        prefix:
                          description: An optional identifier to prepend to each key
                            in the ConfigMap. Must be a C_IDENTIFIER.
                          type: string
                        secretRef:
                          description: The Secret to select from
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret must be defined
                              type: boolean
                          type: object
                      type: object
                    type: array
                  image:
                    description: image to be used for the container
                    type: string
                  imagePullPolicy:
                    description: pulling policy for the image
                    type: string
                  resources:
                    description: expected resources for the container
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          x-kubernetes-int-or-string: true
                        description: resource limits for the container
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          x-kubernetes-int-or-string: true
                        description: resource requests for the container
                        type: object
                    type: object
                  securityContext:
                    description: security context for the container
                    properties:
                      allowPrivilegeEscalation:
                        description: 'AllowPrivilegeEscalation controls whether a
                          process can gain more privileges than its parent process.
                          This bool directly controls if the no_new_privs flag will
                          be set on the container process. AllowPrivilegeEscalation
                          is true always when the container is: 1) run as Privileged
                          2) has CAP_SYS_ADMIN Note that this field cannot be set
                          when spec.os.name is windows.'
                        type: boolean
                      capabilities:
                        description: The capabilities to add/drop when running containers.
                          Defaults to the default set of capabilities granted by the
                          container runtime. Note that this field cannot be set when
                          spec.os.name is windows.
                        properties:
                          add:
                            description: Added capabilities
                            items:
                              description: Capability represent POSIX capabilities
                                type
                              type: string
                            type: array
                          drop:
                            description: Removed capabilities
                            items:
                              description: Capability represent POSIX capabilities
                                type
                              type: string
                            type: array
                        type: object
                      privileged:
                        description: Run container in privileged mode. Processes in
                          privileged containers are essentially equivalent to root
                          on the host. Defaults to false. Note that this field cannot
                          be set when spec.os.name is windows.
                        type: boolean
                      procMount:
                        description: procMount denotes the type of proc mount to use
                          for the containers. The default is DefaultProcMount which
                          uses the container runtime defaults for readonly paths and
                          masked paths. This requires the ProcMountType feature flag
                          to be enabled. Note that this field cannot be set when spec.os.name
                          is windows.
                        type: string
                      readOnlyRootFilesystem:
                        description: Whether this container has a read-only root filesystem.
                          Default is false. Note that this field cannot be set when
                          spec.os.name is windows.
                        type: boolean
                      runAsGroup:
                        description: The GID to run the entrypoint of the container
                          process. Uses runtime default if unset. May also be set
                          in PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext
                          takes precedence. Note that this field cannot be set when
                          spec.os.name is windows.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: Indicates that the container must run as a non-root
                          user. If true, the Kubelet will validate the image at runtime
                          to ensure that it does not run as UID 0 (root) and fail
                          to start the container if it does. If unset or false, no
                          such validation will be performed. May also be set in PodSecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence.
                        type: boolean
                      runAsUser:
                        description: The UID to run the entrypoint of the container
                          process. Defaults to user specified in image metadata if
                          unspecified. May also be set in PodSecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence. Note
                          that this field cannot be set when spec.os.name is windows.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: The SELinux context to be applied to the container.
                          If unspecified, the container runtime will allocate a random
                          SELinux context for each container.  May also be set in
                          PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext
                          takes precedence. Note that this field cannot be set when
                          spec.os.name is windows.
                        properties:
                          level:
                            description: Level is SELinux level label that applies
                              to the container.
                            type: string
                          role:
                            description: Role is a SELinux role label that applies
                              to the container.
                            type: string
                          type:
                            description: Type is a SELinux type label that applies
                              to the container.
                            type: string
                          user:
                            description: User is a SELinux user label that applies
                              to the container.
                            type: string
                        type: object
                      seccompProfile:
                        description: The seccomp options to use by this container.
                          If seccomp options are provided at both the pod & container
                          level, the container options override the pod options. Note
                          that this field cannot be set when spec.os.name is windows.
                        properties:
                          localhostProfile:
                            description: localhostProfile indicates a profile defined
                              in a file on the node should be used. The profile must
                              be preconfigured on the node to work. Must be a descending
                              path, relative to the kubelet's configured seccomp profile
                              location. Must be set if type is "Localhost". Must NOT
                              be set for any other type.
                            type: string
                          type:
                            description: "type indicates which kind of seccomp profile
                              will be applied. Valid options are: \n Localhost - a
                              profile defined in a file on the node should be used.
                              RuntimeDefault - the container runtime default profile
                              should be used. Unconfined - no profile should be applied."
                            type: string
                        required:
                        - type
                        type: object
                      windowsOptions:
                        description: The Windows specific settings applied to all
                          containers. If unspecified, the options from the PodSecurityContext
                          will be used. If set in both SecurityContext and PodSecurityContext,
                          the value specified in SecurityContext takes precedence.
                          Note that this field cannot be set when spec.os.name is
                          linux.
                        properties:
                          gmsaCredentialSpec:
                            description: GMSACredentialSpec is where the GMSA admission
                              webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                              inlines the contents of the GMSA credential spec named
                              by the GMSACredentialSpecName field.
                            type: string
                          gmsaCredentialSpecName:
                            description: GMSACredentialSpecName is the name of the
                              GMSA credential spec to use.
                            type: string
                          hostProcess:
                            description: HostProcess determines if a container should
                              be run as a 'Host Process' container. All of a Pod's
                              containers must have the same effective HostProcess
                              value (it is not allowed to have a mix of HostProcess
                              containers and non-HostProcess containers). In addition,
                              if HostProcess is true then HostNetwork must also be
                              set to true.
                            type: boolean
                          runAsUserName:
                            description: The UserName in Windows to run the entrypoint
                              of the container process. Defaults to the user specified
                              in image metadata if unspecified. May also be set in
                              PodSecurityContext. If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            type: string
                        type: object
                    type: object
                  volumeMounts:
                    description: volume mounts to append to the container
                    items:
                      description: VolumeMount describes a mounting of a Volume within
                        a container.
                      properties:
                        mountPath:
                          description: Path within the container at which the volume
                            should be mounted.  Must not contain ':'.
                          type: string
                        mountPropagation:
                          description: mountPropagation determines how mounts are
                            propagated from the host to container and the other way
                            around. When not set, MountPropagationNone is used. This
                            field is beta in 1.10.
                          type: string
                        name:
                          description: This must match the Name of a Volume.
                          type: string
                        readOnly:
                          description: Mounted read-only if true, read-write otherwise
                            (false or unspecified). Defaults to false.
                          type: boolean
                        subPath:
                          description: Path within the volume from which the container's
                            volume should be mounted. Defaults to "" (volume's root).
                          type: string
                        subPathExpr:
                          description: Expanded path within the volume from which
                            the container's volume should be mounted. Behaves similarly
                            to SubPath but environment variable references $(VAR_NAME)
                            are expanded using the container's environment. Defaults
                            to "" (volume's root). SubPathExpr and SubPath are mutually
                            exclusive.
                          type: string
                      required:
                      - mountPath
                      - name
                      type: object
                    type: array
                  workingDir:
                    description: override default working directory in the image (empty
                      string to default WORKDIR for the image)
                    type: string
                type: object
              content:
                description: global content that should be fetched into all containers
                properties:
                  files:
                    description: files to load
                    items:
                      properties:
                        content:
                          description: plain-text content to put inside
                          type: string
                        contentFrom:
                          description: external source to use
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                        mode:
                          description: mode to use for the file
                          format: int32
                          type: integer
                        path:
                          description: path where the file should be accessible at
                          minLength: 1
                          type: string
                      required:
                      - path
                      type: object
                    type: array
                  git:
                    description: git repository details
                    properties:
                      authType:
                        description: authorization type for the credentials
                        enum:
                        - basic
                        - header
                        type: string
                      mountPath:
                        description: where to mount the fetched repository contents
                          (defaults to "repo" directory in the data volume)
                        type: string
                      paths:
                        description: paths to fetch for the sparse checkout
                        items:
                          type: string
                        type: array
                      revision:
                        description: branch, commit or a tag name to fetch
                        type: string
                      token:
                        description: plain text token to fetch with
                        type: string
                      tokenFrom:
                        description: external token to fetch with
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          fieldRef:
                            description: 'Selects a field of the pod: supports metadata.name,
                              metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                              spec.nodeName, spec.serviceAccountName, status.hostIP,
                              status.podIP, status.podIPs.'
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is
                                  written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified
                                  API version.
                                type: string
                            required:
                            - fieldPath
                            type: object
                          resourceFieldRef:
                            description: 'Selects a resource of the container: only
                              resources limits and requests (limits.cpu, limits.memory,
                              limits.ephemeral-storage, requests.cpu, requests.memory
                              and requests.ephemeral-storage) are currently supported.'
                            properties:
                              containerName:
                                description: 'Container name: required for volumes,
                                  optional for env vars'
                                type: string
                              divisor:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Specifies the output format of the exposed
                                  resources, defaults to "1"
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              resource:
                                description: 'Required: resource to select'
                                type: string
                            required:
                            - resource
                            type: object
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                      uri:
                        description: uri for the Git repository
                        type: string
                      username:
                        description: plain text username to fetch with
                        type: string
                      usernameFrom:
                        description: external username to fetch with
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          fieldRef:
                            description: 'Selects a field of the pod: supports metadata.name,
                              metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                              spec.nodeName, spec.serviceAccountName, status.hostIP,
                              status.podIP, status.podIPs.'
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is
                                  written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified
                                  API version.
                                type: string
                            required:
                            - fieldPath
                            type: object
                          resourceFieldRef:
                            description: 'Selects a resource of the container: only
                              resources limits and requests (limits.cpu, limits.memory,
                              limits.ephemeral-storage, requests.cpu, requests.memory
                              and requests.ephemeral-storage) are currently supported.'
                            properties:
                              containerName:
                                description: 'Container name: required for volumes,
                                  optional for env vars'
                                type: string
                              divisor:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Specifies the output format of the exposed
                                  resources, defaults to "1"
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              resource:
                                description: 'Required: resource to select'
                                type: string
                            required:
                            - resource
                            type: object
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                    type: object
                type: object
              events:
                description: events triggering execution of the test workflow
                items:
                  properties:
                    cronjob:
                      description: cron job configuration
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: annotations to attach to the cron job
                          type: object
                        cron:
                          description: cron schedule to run a test workflow
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels to attach to the cron job
                          type: object
                      required:
                      - cron
                      type: object
                  type: object
                type: array
              job:
                description: configuration for the scheduled job
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: annotations added to the scheduled job
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: labels added to the scheduled job
                    type: object
                type: object
              pod:
                description: configuration for the scheduled pod
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: annotations added to the scheduled pod
                    type: object
                  imagePullSecrets:
                    description: references to secrets with credentials for pulling
                      the images from registry
                    items:
                      description: LocalObjectReference contains enough information
                        to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    description: labels added to the scheduled pod
                    type: object
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: node selector to define on which node the pod should
                      land
                    type: object
                  serviceAccountName:
                    description: default service account name for the scheduled pod
                    type: string
                  volumes:
                    description: volumes to include in the pod
                    items:
                      description: Volume represents a named volume in a pod that
                        may be accessed by any container in the pod.
                      properties:
                        awsElasticBlockStore:
                          description: 'awsElasticBlockStore represents an AWS Disk
                            resource that is attached to a kubelet''s host machine
                            and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                          properties:
                            fsType:
                              description: 'fsType is the filesystem type of the volume
                                that you want to mount. Tip: Ensure that the filesystem
                                type is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                              type: string
                            partition:
                              description: 'partition is the partition in the volume
                                that you want to mount. If omitted, the default is
                                to mount by volume name. Examples: For volume /dev/sda1,
                                you specify the partition as "1". Similarly, the volume
                                partition for /dev/sda is "0" (or you can leave the
                                property empty).'
                              format: int32
                              type: integer
                            readOnly:
                              description: 'readOnly value true will force the readOnly
                                setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                              type: boolean
                            volumeID:
                              description: 'volumeID is unique ID of the persistent
                                disk resource in AWS (Amazon EBS volume). More info:
                                https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                              type: string
                          required:
                          - volumeID
                          type: object
                        azureDisk:
                          description: azureDisk represents an Azure Data Disk mount
                            on the host and bind mount to the pod.
                          properties:
                            cachingMode:
                              description: 'cachingMode is the Host Caching mode:
                                None, Read Only, Read Write.'
                              type: string
                            diskName:
                              description: diskName is the Name of the data disk in
                                the blob storage
                              type: string
                            diskURI:
                              description: diskURI is the URI of data disk in the
                                blob storage
                              type: string
                            fsType:
                              description: fsType is Filesystem type to mount. Must
                                be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                to be "ext4" if unspecified.
                              type: string
                            kind:
                              description: 'kind expected values are Shared: multiple
                                blob disks per storage account  Dedicated: single
                                blob disk per storage account  Managed: azure managed
                                data disk (only in managed availability set). defaults
                                to shared'
                              type: string
                            readOnly:
                              description: readOnly Defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                          required:
                          - diskName
                          - diskURI
                          type: object
                        azureFile:
                          description: azureFile represents an Azure File Service
                            mount on the host and bind mount to the pod.
                          properties:
                            readOnly:
                              description: readOnly defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretName:
                              description: secretName is the  name of secret that
                                contains Azure Storage Account Name and Key
                              type: string
                            shareName:
                              description: shareName is the azure share Name
                              type: string
                          required:
                          - secretName
                          - shareName
                          type: object
                        cephfs:
                          description: cephFS represents a Ceph FS mount on the host
                            that shares a pod's lifetime
                          properties:
                            monitors:
                              description: 'monitors is Required: Monitors is a collection
                                of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              items:
                                type: string
                              type: array
                            path:
                              description: 'path is Optional: Used as the mounted
                                root, rather than the full Ceph tree, default is /'
                              type: string
                            readOnly:
                              description: 'readOnly is Optional: Defaults to false
                                (read/write). ReadOnly here will force the ReadOnly
                                setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              type: boolean
                            secretFile:
                              description: 'secretFile is Optional: SecretFile is
                                the path to key ring for User, default is /etc/ceph/user.secret
                                More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              type: string
                            secretRef:
                              description: 'secretRef is Optional: SecretRef is reference
                                to the authentication secret for User, default is
                                empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                            user:
                              description: 'user is optional: User is the rados user
                                name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              type: string
                          required:
                          - monitors
                          type: object
                        cinder:
                          description: 'cinder represents a cinder volume attached
                            and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                          properties:
                            fsType:
                              description: 'fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Examples: "ext4", "xfs", "ntfs". Implicitly
                                inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                              type: string
                            readOnly:
                              description: 'readOnly defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                              type: boolean
                            secretRef:
                              description: 'secretRef is optional: points to a secret
                                object containing parameters used to connect to OpenStack.'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                            volumeID:
                              description: 'volumeID used to identify the volume in
                                cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                              type: string
                          required:
                          - volumeID
                          type: object
                        configMap:
                          description: configMap represents a configMap that should
                            populate this volume
                          properties:
                            defaultMode:
                              description: 'defaultMode is optional: mode bits used
                                to set permissions on created files by default. Must
                                be an octal value between 0000 and 0777 or a decimal
                                value between 0 and 511. YAML accepts both octal and
                                decimal values, JSON requires decimal values for mode
                                bits. Defaults to 0644. Directories within the path
                                are not affected by this setting. This might be in
                                conflict with other options that affect the file mode,
                                like fsGroup, and the result can be other mode bits
                                set.'
                              format: int32
                              type: integer
                            items:
                              description: items if unspecified, each key-value pair
                                in the Data field of the referenced ConfigMap will
                                be projected into the volume as a file whose name
                                is the key and content is the value. If specified,
                                the listed keys will be projected into the specified
                                paths, and unlisted keys will not be present. If a
                                key is specified which is not present in the ConfigMap,
                                the volume setup will error unless it is marked optional.
                                Paths must be relative and may not contain the '..'
                                path or start with '..'.
                              items:
                                description: Maps a string key to a path within a
                                  volume.
                                properties:
                                  key:
                                    description: key is the key to project.
                                    type: string
                                  mode:
                                    description: 'mode is Optional: mode bits used
                                      to set permissions on this file. Must be an
                                      octal value between 0000 and 0777 or a decimal
                                      value between 0 and 511. YAML accepts both octal
                                      and decimal values, JSON requires decimal values
                                      for mode bits. If not specified, the volume
                                      defaultMode will be used. This might be in conflict
                                      with other options that affect the file mode,
                                      like fsGroup, and the result can be other mode
                                      bits set.'
                                    format: int32
                                    type: integer
                                  path:
                                    description: path is the relative path of the
                                      file to map the key to. May not be an absolute
                                      path. May not contain the path element '..'.
                                      May not start with the string '..'.
                                    type: string
                                required:
                                - key
                                - path
                                type: object
                              type: array
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: optional specify whether the ConfigMap
                                or its keys must be defined
                              type: boolean
                          type: object
                        csi:
                          description: csi (Container Storage Interface) represents
                            ephemeral storage that is handled by certain external
                            CSI drivers (Beta feature).
                          properties:
                            driver:
                              description: driver is the name of the CSI driver that
                                handles this volume. Consult with your admin for the
                                correct name as registered in the cluster.
                              type: string
                            fsType:
                              description: fsType to mount. Ex. "ext4", "xfs", "ntfs".
                                If not provided, the empty value is passed to the
                                associated CSI driver which will determine the default
                                filesystem to apply.
                              type: string
                            nodePublishSecretRef:
                              description: nodePublishSecretRef is a reference to
                                the secret object containing sensitive information
                                to pass to the CSI driver to complete the CSI NodePublishVolume
                                and NodeUnpublishVolume calls. This field is optional,
                                and  may be empty if no secret is required. If the
                                secret object contains more than one secret, all secret
                                references are passed.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                            readOnly:
                              description: readOnly specifies a read-only configuration
                                for the volume. Defaults to false (read/write).
                              type: boolean
                            volumeAttributes:
                              additionalProperties:
                                type: string
                              description: volumeAttributes stores driver-specific
                                properties that are passed to the CSI driver. Consult
                                your driver's documentation for supported values.
                              type: object
                          required:
                          - driver
                          type: object
                        downwardAPI:
                          description: downwardAPI represents downward API about the
                            pod that should populate this volume
                          properties:
                            defaultMode:
                              description: 'Optional: mode bits to use on created
                                files by default. Must be a Optional: mode bits used
                                to set permissions on created files by default. Must
                                be an octal value between 0000 and 0777 or a decimal
                                value between 0 and 511. YAML accepts both octal and
                                decimal values, JSON requires decimal values for mode
                                bits. Defaults to 0644. Directories within the path
                                are not affected by this setting. This might be in
                                conflict with other options that affect the file mode,
                                like fsGroup, and the result can be other mode bits
                                set.'
                              format: int32
                              type: integer
                            items:
                              description: Items is a list of downward API volume
                                file
                              items:
                                description: DownwardAPIVolumeFile represents information
                                  to create the file containing the pod field
                                properties:
                                  fieldRef:
                                    description: 'Required: Selects a field of the
                                      pod: only annotations, labels, name and namespace
                                      are supported.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  mode:
                                    description: 'Optional: mode bits used to set
                                      permissions on this file, must be an octal value
                                      between 0000 and 0777 or a decimal value between
                                      0 and 511. YAML accepts both octal and decimal
                                      values, JSON requires decimal values for mode
                                      bits. If not specified, the volume defaultMode
                                      will be used. This might be in conflict with
                                      other options that affect the file mode, like
                                      fsGroup, and the result can be other mode bits
                                      set.'
                                    format: int32
                                    type: integer
                                  path:
                                    description: 'Required: Path is  the relative
                                      path name of the file to be created. Must not
                                      be absolute or contain the ''..'' path. Must
                                      be utf-8 encoded. The first item of the relative
                                      path must not start with ''..'''
                                    type: string
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, requests.cpu and requests.memory)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                required:
                                - path
                                type: object
                              type: array
                          type: object
                        emptyDir:
                          description: 'emptyDir represents a temporary directory
                            that shares a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                          properties:
                            medium:
                              description: 'medium represents what type of storage
                                medium should back this directory. The default is
                                "" which means to use the node''s default medium.
                                Must be an empty string (default) or Memory. More
                                info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                              type: string
                            sizeLimit:
                              anyOf:
                              - type: integer
                              - type: string
                              description: 'sizeLimit is the total amount of local
                                storage required for this EmptyDir volume. The size
                                limit is also applicable for memory medium. The maximum
                                usage on memory medium EmptyDir would be the minimum
                                value between the SizeLimit specified here and the
                                sum of memory limits of all containers in a pod. The
                                default is nil which means that the limit is undefined.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          type: object
                        ephemeral:
                          description: "ephemeral represents a volume that is handled
                            by a cluster storage driver. The volume's lifecycle is
                            tied to the pod that defines it - it will be created before
                            the pod starts, and deleted when the pod is removed. \n
                            Use this if: a) the volume is only needed while the pod
                            runs, b) features of normal volumes like restoring from
                            snapshot or capacity tracking are needed, c) the storage
                            driver is specified through a storage class, and d) the
                            storage driver supports dynamic volume provisioning through
                            a PersistentVolumeClaim (see EphemeralVolumeSource for
                            more information on the connection between this volume
                            type and PersistentVolumeClaim). \n Use PersistentVolumeClaim
                            or one of the vendor-specific APIs for volumes that persist
                            for longer than the lifecycle of an individual pod. \n
                            Use CSI for light-weight local ephemeral volumes if the
                            CSI driver is meant to be used that way - see the documentation
                            of the driver for more information. \n A pod can use both
                            types of ephemeral volumes and persistent volumes at the
                            same time."
                          properties:
                            volumeClaimTemplate:
                              description: "Will be used to create a stand-alone PVC
                                to provision the volume. The pod in which this EphemeralVolumeSource
                                is embedded will be the owner of the PVC, i.e. the
                                PVC will be deleted together with the pod.  The name
                                of the PVC will be `<pod name>-<volume name>` where
                                `<volume name>` is the name from the `PodSpec.Volumes`
                                array entry. Pod validation will reject the pod if
                                the concatenated name is not valid for a PVC (for
                                example, too long). \n An existing PVC with that name
                                that is not owned by the pod will *not* be used for
                                the pod to avoid using an unrelated volume by mistake.
                                Starting the pod is then blocked until the unrelated
                                PVC is removed. If such a pre-created PVC is meant
                                to be used by the pod, the PVC has to updated with
                                an owner reference to the pod once the pod exists.
                                Normally this should not be necessary, but it may
                                be useful when manually reconstructing a broken cluster.
                                \n This field is read-only and no changes will be
                                made by Kubernetes to the PVC after it has been created.
                                \n Required, must not be nil."
                              properties:
                                metadata:
                                  description: May contain labels and annotations
                                    that will be copied into the PVC when creating
                                    it. No other fields are allowed and will be rejected
                                    during validation.
                                  type: object
                                spec:
                                  description: The specification for the PersistentVolumeClaim.
                                    The entire content is copied unchanged into the
                                    PVC that gets created from this template. The
                                    same fields as in a PersistentVolumeClaim are
                                    also valid here.
                                  properties:
                                    accessModes:
                                      description: 'accessModes contains the desired
                                        access modes the volume should have. More
                                        info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                      items:
                                        type: string
                                      type: array
                                    dataSource:
                                      description: 'dataSource field can be used to
                                        specify either: * An existing VolumeSnapshot
                                        object (snapshot.storage.k8s.io/VolumeSnapshot)
                                        * An existing PVC (PersistentVolumeClaim)
                                        If the provisioner or an external controller
                                        can support the specified data source, it
                                        will create a new volume based on the contents
                                        of the specified data source. When the AnyVolumeDataSource
                                        feature gate is enabled, dataSource contents
                                        will be copied to dataSourceRef, and dataSourceRef
                                        contents will be copied to dataSource when
                                        dataSourceRef.namespace is not specified.
                                        If the namespace is specified, then dataSourceRef
                                        will not be copied to dataSource.'
                                      properties:
                                        apiGroup:
                                          description: APIGroup is the group for the
                                            resource being referenced. If APIGroup
                                            is not specified, the specified Kind must
                                            be in the core API group. For any other
                                            third-party types, APIGroup is required.
                                          type: string
                                        kind:
                                          description: Kind is the type of resource
                                            being referenced
                                          type: string
                                        name:
                                          description: Name is the name of resource
                                            being referenced
                                          type: string
                                      required:
                                      - kind
                                      - name
                                      type: object
                                    dataSourceRef:
                                      description: 'dataSourceRef specifies the object
                                        from which to populate the volume with data,
                                        if a non-empty volume is desired. This may
                                        be any object from a non-empty API group (non
                                        core object) or a PersistentVolumeClaim object.
                                        When this field is specified, volume binding
                                        will only succeed if the type of the specified
                                        object matches some installed volume populator
                                        or dynamic provisioner. This field will replace
                                        the functionality of the dataSource field
                                        and as such if both fields are non-empty,
                                        they must have the same value. For backwards
                                        compatibility, when namespace isn''t specified
                                        in dataSourceRef, both fields (dataSource
                                        and dataSourceRef) will be set to the same
                                        value automatically if one of them is empty
                                        and the other is non-empty. When namespace
                                        is specified in dataSourceRef, dataSource
                                        isn''t set to the same value and must be empty.
                                        There are three important differences between
                                        dataSource and dataSourceRef: * While dataSource
                                        only allows two specific types of objects,
                                        dataSourceRef allows any non-core object,
                                        as well as PersistentVolumeClaim objects.
                                        * While dataSource ignores disallowed values
                                        (dropping them), dataSourceRef preserves all
                                        values, and generates an error if a disallowed
                                        value is specified. * While dataSource only
                                        allows local objects, dataSourceRef allows
                                        objects in any namespaces. (Beta) Using this
                                        field requires the AnyVolumeDataSource feature
                                        gate to be enabled. (Alpha) Using the namespace
                                        field of dataSourceRef requires the CrossNamespaceVolumeDataSource
                                        feature gate to be enabled.'
                                      properties:
                                        apiGroup:
                                          description: APIGroup is the group for the
                                            resource being referenced. If APIGroup
                                            is not specified, the specified Kind must
                                            be in the core API group. For any other
                                            third-party types, APIGroup is required.
                                          type: string
                                        kind:
                                          description: Kind is the type of resource
                                            being referenced
                                          type: string
                                        name:
                                          description: Name is the name of resource
                                            being referenced
                                          type: string
                                        namespace:
                                          description: Namespace is the namespace
                                            of resource being referenced Note that
                                            when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant
                                            object is required in the referent namespace
                                            to allow that namespace's owner to accept
                                            the reference. See the ReferenceGrant
                                            documentation for details. (Alpha) This
                                            field requires the CrossNamespaceVolumeDataSource
                                            feature gate to be enabled.
                                          type: string
                                      required:
                                      - kind
                                      - name
                                      type: object
                                    resources:
                                      description: 'resources represents the minimum
                                        resources the volume should have. If RecoverVolumeExpansionFailure
                                        feature is enabled users are allowed to specify
                                        resource requirements that are lower than
                                        previous value but must still be higher than
                                        capacity recorded in the status field of the
                                        claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                      properties:
                                        claims:
                                          description: "Claims lists the names of
                                            resources, defined in spec.resourceClaims,
                                            that are used by this container. \n This
                                            is an alpha field and requires enabling
                                            the DynamicResourceAllocation feature
                                            gate. \n This field is immutable. It can
                                            only be set for containers."
                                          items:
                                            description: ResourceClaim references
                                              one entry in PodSpec.ResourceClaims.
                                            properties:
                                              name:
                                                description: Name must match the name
                                                  of one entry in pod.spec.resourceClaims
                                                  of the Pod where this field is used.
                                                  It makes that resource available
                                                  inside a container.
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                          x-kubernetes-list-map-keys:
                                          - name
                                          x-kubernetes-list-type: map
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Limits describes the maximum
                                            amount of compute resources allowed. More
                                            info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Requests describes the minimum
                                            amount of compute resources required.
                                            If Requests is omitted for a container,
                                            it defaults to Limits if that is explicitly
                                            specified, otherwise to an implementation-defined
                                            value. Requests cannot exceed Limits.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                      type: object
                                    selector:
                                      description: selector is a label query over
                                        volumes to consider for binding.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    storageClassName:
                                      description: 'storageClassName is the name of
                                        the StorageClass required by the claim. More
                                        info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                      type: string
                                    volumeMode:
                                      description: volumeMode defines what type of
                                        volume is required by the claim. Value of
                                        Filesystem is implied when not included in
                                        claim spec.
                                      type: string
                                    volumeName:
                                      description: volumeName is the binding reference
                                        to the PersistentVolume backing this claim.
                                      type: string
                                  type: object
                              required:
                              - spec
                              type: object
                          type: object
                        fc:
                          description: fc represents a Fibre Channel resource that
                            is attached to a kubelet's host machine and then exposed
                            to the pod.
                          properties:
                            fsType:
                              description: 'fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                to be "ext4" if unspecified. TODO: how do we prevent
                                errors in the filesystem from compromising the machine'
                              type: string
                            lun:
                              description: 'lun is Optional: FC target lun number'
                              format: int32
                              type: integer
                            readOnly:
                              description: 'readOnly is Optional: Defaults to false
                                (read/write). ReadOnly here will force the ReadOnly
                                setting in VolumeMounts.'
                              type: boolean
                            targetWWNs:
                              description: 'targetWWNs is Optional: FC target worldwide
                                names (WWNs)'
                              items:
                                type: string
                              type: array
                            wwids:
                              description: 'wwids Optional: FC volume world wide identifiers
                                (wwids) Either wwids or combination of targetWWNs
                                and lun must be set, but not both simultaneously.'
                              items:
                                type: string
                              type: array
                          type: object
                        flexVolume:
                          description: flexVolume represents a generic volume resource
                            that is provisioned/attached using an exec based plugin.
                          properties:
                            driver:
                              description: driver is the name of the driver to use
                                for this volume.
                              type: string
                            fsType:
                              description: fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". The default filesystem
                                depends on FlexVolume script.
                              type: string
                            options:
                              additionalProperties:
                                type: string
                              description: 'options is Optional: this field holds
                                extra command options if any.'
                              type: object
                            readOnly:
                              description: 'readOnly is Optional: defaults to false
                                (read/write). ReadOnly here will force the ReadOnly
                                setting in VolumeMounts.'
                              type: boolean
                            secretRef:
                              description: 'secretRef is Optional: secretRef is reference
                                to the secret object containing sensitive information
                                to pass to the plugin scripts. This may be empty if
                                no secret object is specified. If the secret object
                                contains more than one secret, all secrets are passed
                                to the plugin scripts.'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                          required:
                          - driver
                          type: object
                        flocker:
                          description: flocker represents a Flocker volume attached
                            to a kubelet's host machine. This depends on the Flocker
                            control service being running
                          properties:
                            datasetName:
                              description: datasetName is Name of the dataset stored
                                as metadata -> name on the dataset for Flocker should
                                be considered as deprecated
                              type: string
                            datasetUUID:
                              description: datasetUUID is the UUID of the dataset.
                                This is unique identifier of a Flocker dataset
                              type: string
                          type: object
                        gcePersistentDisk:
                          description: 'gcePersistentDisk represents a GCE Disk resource
                            that is attached to a kubelet''s host machine and then
                            exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                          properties:
                            fsType:
                              description: 'fsType is filesystem type of the volume
                                that you want to mount. Tip: Ensure that the filesystem
                                type is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                              type: string
                            partition:
                              description: 'partition is the partition in the volume
                                that you want to mount. If omitted, the default is
                                to mount by volume name. Examples: For volume /dev/sda1,
                                you specify the partition as "1". Similarly, the volume
                                partition for /dev/sda is "0" (or you can leave the
                                property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                              format: int32
                              type: integer
                            pdName:
                              description: 'pdName is unique name of the PD resource
                                in GCE. Used to identify the disk in GCE. More info:
                                https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                              type: string
                            readOnly:
                              description: 'readOnly here will force the ReadOnly
                                setting in VolumeMounts. Defaults to false. More info:
                                https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                              type: boolean
                          required:
                          - pdName
                          type: object
                        gitRepo:
                          description: 'gitRepo represents a git repository at a particular
                            revision. DEPRECATED: GitRepo is deprecated. To provision
                            a container with a git repo, mount an EmptyDir into an
                            InitContainer that clones the repo using git, then mount
                            the EmptyDir into the Pod''s container.'
                          properties:
                            directory:
                              description: directory is the target directory name.
                                Must not contain or start with '..'.  If '.' is supplied,
                                the volume directory will be the git repository.  Otherwise,
                                if specified, the volume will contain the git repository
                                in the subdirectory with the given name.
                              type: string
                            repository:
                              description: repository is the URL
                              type: string
                            revision:
                              description: revision is the commit hash for the specified
                                revision.
                              type: string
                          required:
                          - repository
                          type: object
                        glusterfs:
                          description: 'glusterfs represents a Glusterfs mount on
                            the host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                          properties:
                            endpoints:
                              description: 'endpoints is the endpoint name that details
                                Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                              type: string
                            path:
                              description: 'path is the Glusterfs volume path. More
                                info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                              type: string
                            readOnly:
                              description: 'readOnly here will force the Glusterfs
                                volume to be mounted with read-only permissions. Defaults
                                to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                              type: boolean
                          required:
                          - endpoints
                          - path
                          type: object
                        hostPath:
                          description: 'hostPath represents a pre-existing file or
                            directory on the host machine that is directly exposed
                            to the container. This is generally used for system agents
                            or other privileged things that are allowed to see the
                            host machine. Most containers will NOT need this. More
                            info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                            --- TODO(jonesdl) We need to restrict who can use host
                            directory mounts and who can/can not mount host directories
                            as read/write.'
                          properties:
                            path:
                              description: 'path of the directory on the host. If
                                the path is a symlink, it will follow the link to
                                the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                              type: string
                            type:
                              description: 'type for HostPath Volume Defaults to ""
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                              type: string
                          required:
                          - path
                          type: object
                        iscsi:
                          description: 'iscsi represents an ISCSI Disk resource that
                            is attached to a kubelet''s host machine and then exposed
                            to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                          properties:
                            chapAuthDiscovery:
                              description: chapAuthDiscovery defines whether support
                                iSCSI Discovery CHAP authentication
                              type: boolean
                            chapAuthSession:
                              description: chapAuthSession defines whether support
                                iSCSI Session CHAP authentication
                              type: boolean
                            fsType:
                              description: 'fsType is the filesystem type of the volume
                                that you want to mount. Tip: Ensure that the filesystem
                                type is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                              type: string
                            initiatorName:
                              description: initiatorName is the custom iSCSI Initiator
                                Name. If initiatorName is specified with iscsiInterface
                                simultaneously, new iSCSI interface <target portal>:<volume
                                name> will be created for the connection.
                              type: string
                            iqn:
                              description: iqn is the target iSCSI Qualified Name.
                              type: string
                            iscsiInterface:
                              description: iscsiInterface is the interface Name that
                                uses an iSCSI transport. Defaults to 'default' (tcp).
                              type: string
                            lun:
                              description: lun represents iSCSI Target Lun number.
                              format: int32
                              type: integer
                            portals:
                              description: portals is the iSCSI Target Portal List.
                                The portal is either an IP or ip_addr:port if the
                                port is other than default (typically TCP ports 860
                                and 3260).
                              items:
                                type: string
                              type: array
                            readOnly:
                              description: readOnly here will force the ReadOnly setting
                                in VolumeMounts. Defaults to false.
                              type: boolean
                            secretRef:
                              description: secretRef is the CHAP Secret for iSCSI
                                target and initiator authentication
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                            targetPortal:
                              description: targetPortal is iSCSI Target Portal. The
                                Portal is either an IP or ip_addr:port if the port
                                is other than default (typically TCP ports 860 and
                                3260).
                              type: string
                          required:
                          - iqn
                          - lun
                          - targetPortal
                          type: object
                        name:
                          description: 'name of the volume. Must be a DNS_LABEL and
                            unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        nfs:
                          description: 'nfs represents an NFS mount on the host that
                            shares a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                          properties:
                            path:
                              description: 'path that is exported by the NFS server.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                              type: string
                            readOnly:
                              description: 'readOnly here will force the NFS export
                                to be mounted with read-only permissions. Defaults
                                to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                              type: boolean
                            server:
                              description: 'server is the hostname or IP address of
                                the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                              type: string
                          required:
                          - path
                          - server
                          type: object
                        persistentVolumeClaim:
                          description: 'persistentVolumeClaimVolumeSource represents
                            a reference to a PersistentVolumeClaim in the same namespace.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                          properties:
                            claimName:
                              description: 'claimName is the name of a PersistentVolumeClaim
                                in the same namespace as the pod using this volume.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                              type: string
                            readOnly:
                              description: readOnly Will force the ReadOnly setting
                                in VolumeMounts. Default false.
                              type: boolean
                          required:
                          - claimName
                          type: object
                        photonPersistentDisk:
                          description: photonPersistentDisk represents a PhotonController
                            persistent disk attached and mounted on kubelets host
                            machine
                          properties:
                            fsType:
                              description: fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                to be "ext4" if unspecified.
                              type: string
                            pdID:
                              description: pdID is the ID that identifies Photon Controller
                                persistent disk
                              type: string
                          required:
                          - pdID
                          type: object
                        portworxVolume:
                          description: portworxVolume represents a portworx volume
                            attached and mounted on kubelets host machine
                          properties:
                            fsType:
                              description: fSType represents the filesystem type to
                                mount Must be a filesystem type supported by the host
                                operating system. Ex. "ext4", "xfs". Implicitly inferred
                                to be "ext4" if unspecified.
                              type: string
                            readOnly:
                              description: readOnly defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            volumeID:
                              description: volumeID uniquely identifies a Portworx
                                volume
                              type: string
                          required:
                          - volumeID
                          type: object
                        projected:
                          description: projected items for all in one resources secrets,
                            configmaps, and downward API
                          properties:
                            defaultMode:
                              description: defaultMode are the mode bits used to set
                                permissions on created files by default. Must be an
                                octal value between 0000 and 0777 or a decimal value
                                between 0 and 511. YAML accepts both octal and decimal
                                values, JSON requires decimal values for mode bits.
                                Directories within the path are not affected by this
                                setting. This might be in conflict with other options
                                that affect the file mode, like fsGroup, and the result
                                can be other mode bits set.
                              format: int32
                              type: integer
                            sources:
                              description: sources is the list of volume projections
                              items:
                                description: Projection that may be projected along
                                  with other supported volume types
                                properties:
                                  configMap:
                                    description: configMap information about the configMap
                                      data to project
                                    properties:
                                      items:
                                        description: items if unspecified, each key-value
                                          pair in the Data field of the referenced
                                          ConfigMap will be projected into the volume
                                          as a file whose name is the key and content
                                          is the value. If specified, the listed keys
                                          will be projected into the specified paths,
                                          and unlisted keys will not be present. If
                                          a key is specified which is not present
                                          in the ConfigMap, the volume setup will
                                          error unless it is marked optional. Paths
                                          must be relative and may not contain the
                                          '..' path or start with '..'.
                                        items:
                                          description: Maps a string key to a path
                                            within a volume.
                                          properties:
                                            key:
                                              description: key is the key to project.
                                              type: string
                                            mode:
                                              description: 'mode is Optional: mode
                                                bits used to set permissions on this
                                                file. Must be an octal value between
                                                0000 and 0777 or a decimal value between
                                                0 and 511. YAML accepts both octal
                                                and decimal values, JSON requires
                                                decimal values for mode bits. If not
                                                specified, the volume defaultMode
                                                will be used. This might be in conflict
                                                with other options that affect the
                                                file mode, like fsGroup, and the result
                                                can be other mode bits set.'
                                              format: int32
                                              type: integer
                                            path:
                                              description: path is the relative path
                                                of the file to map the key to. May
                                                not be an absolute path. May not contain
                                                the path element '..'. May not start
                                                with the string '..'.
                                              type: string
                                          required:
                                          - key
                                          - path
                                          type: object
                                        type: array
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: optional specify whether the
                                          ConfigMap or its keys must be defined
                                        type: boolean
                                    type: object
                                  downwardAPI:
                                    description: downwardAPI information about the
                                      downwardAPI data to project
                                    properties:
                                      items:
                                        description: Items is a list of DownwardAPIVolume
                                          file
                                        items:
                                          description: DownwardAPIVolumeFile represents
                                            information to create the file containing
                                            the pod field
                                          properties:
                                            fieldRef:
                                              description: 'Required: Selects a field
                                                of the pod: only annotations, labels,
                                                name and namespace are supported.'
                                              properties:
                                                apiVersion:
                                                  description: Version of the schema
                                                    the FieldPath is written in terms
                                                    of, defaults to "v1".
                                                  type: string
                                                fieldPath:
                                                  description: Path of the field to
                                                    select in the specified API version.
                                                  type: string
                                              required:
                                              - fieldPath
                                              type: object
                                            mode:
                                              description: 'Optional: mode bits used
                                                to set permissions on this file, must
                                                be an octal value between 0000 and
                                                0777 or a decimal value between 0
                                                and 511. YAML accepts both octal and
                                                decimal values, JSON requires decimal
                                                values for mode bits. If not specified,
                                                the volume defaultMode will be used.
                                                This might be in conflict with other
                                                options that affect the file mode,
                                                like fsGroup, and the result can be
                                                other mode bits set.'
                                              format: int32
                                              type: integer
                                            path:
                                              description: 'Required: Path is  the
                                                relative path name of the file to
                                                be created. Must not be absolute or
                                                contain the ''..'' path. Must be utf-8
                                                encoded. The first item of the relative
                                                path must not start with ''..'''
                                              type: string
                                            resourceFieldRef:
                                              description: 'Selects a resource of
                                                the container: only resources limits
                                                and requests (limits.cpu, limits.memory,
                                                requests.cpu and requests.memory)
                                                are currently supported.'
                                              properties:
                                                containerName:
                                                  description: 'Container name: required
                                                    for volumes, optional for env
                                                    vars'
                                                  type: string
                                                divisor:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Specifies the output
                                                    format of the exposed resources,
                                                    defaults to "1"
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                resource:
                                                  description: 'Required: resource
                                                    to select'
                                                  type: string
                                              required:
                                              - resource
                                              type: object
                                          required:
                                          - path
                                          type: object
                                        type: array
                                    type: object
                                  secret:
                                    description: secret information about the secret
                                      data to project
                                    properties:
                                      items:
                                        description: items if unspecified, each key-value
                                          pair in the Data field of the referenced
                                          Secret will be projected into the volume
                                          as a file whose name is the key and content
                                          is the value. If specified, the listed keys
                                          will be projected into the specified paths,
                                          and unlisted keys will not be present. If
                                          a key is specified which is not present
                                          in the Secret, the volume setup will error
                                          unless it is marked optional. Paths must
                                          be relative and may not contain the '..'
                                          path or start with '..'.
                                        items:
                                          description: Maps a string key to a path
                                            within a volume.
                                          properties:
                                            key:
                                              description: key is the key to project.
                                              type: string
                                            mode:
                                              description: 'mode is Optional: mode
                                                bits used to set permissions on this
                                                file. Must be an octal value between
                                                0000 and 0777 or a decimal value between
                                                0 and 511. YAML accepts both octal
                                                and decimal values, JSON requires
                                                decimal values for mode bits. If not
                                                specified, the volume defaultMode
                                                will be used. This might be in conflict
                                                with other options that affect the
                                                file mode, like fsGroup, and the result
                                                can be other mode bits set.'
                                              format: int32
                                              type: integer
                                            path:
                                              description: path is the relative path
                                                of the file to map the key to. May
                                                not be an absolute path. May not contain
                                                the path element '..'. May not start
                                                with the string '..'.
                                              type: string
                                          required:
                                          - key
                                          - path
                                          type: object
                                        type: array
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: optional field specify whether
                                          the Secret or its key must be defined
                                        type: boolean
                                    type: object
                                  serviceAccountToken:
                                    description: serviceAccountToken is information
                                      about the serviceAccountToken data to project
                                    properties:
                                      audience:
                                        description: audience is the intended audience
                                          of the token. A recipient of a token must
                                          identify itself with an identifier specified
                                          in the audience of the token, and otherwise
                                          should reject the token. The audience defaults
                                          to the identifier of the apiserver.
                                        type: string
                                      expirationSeconds:
                                        description: expirationSeconds is the requested
                                          duration of validity of the service account
                                          token. As the token approaches expiration,
                                          the kubelet volume plugin will proactively
                                          rotate the service account token. The kubelet
                                          will start trying to rotate the token if
                                          the token is older than 80 percent of its
                                          time to live or if the token is older than
                                          24 hours.Defaults to 1 hour and must be
                                          at least 10 minutes.
                                        format: int64
                                        type: integer
                                      path:
                                        description: path is the path relative to
                                          the mount point of the file to project the
                                          token into.
                                        type: string
                                    required:
                                    - path
                                    type: object
                                type: object
                              type: array
                          type: object
                        quobyte:
                          description: quobyte represents a Quobyte mount on the host
                            that shares a pod's lifetime
                          properties:
                            group:
                              description: group to map volume access to Default is
                                no group
                              type: string
                            readOnly:
                              description: readOnly here will force the Quobyte volume
                                to be mounted with read-only permissions. Defaults
                                to false.
                              type: boolean
                            registry:
                              description: registry represents a single or multiple
                                Quobyte Registry services specified as a string as
                                host:port pair (multiple entries are separated with
                                commas) which acts as the central registry for volumes
                              type: string
                            tenant:
                              description: tenant owning the given Quobyte volume
                                in the Backend Used with dynamically provisioned Quobyte
                                volumes, value is set by the plugin
                              type: string
                            user:
                              description: user to map volume access to Defaults to
                                serivceaccount user
                              type: string
                            volume:
                              description: volume is a string that references an already
                                created Quobyte volume by name.
                              type: string
                          required:
                          - registry
                          - volume
                          type: object
                        rbd:
                          description: 'rbd represents a Rados Block Device mount
                            on the host that shares a pod''s lifetime. More info:
                            https://examples.k8s.io/volumes/rbd/README.md'
                          properties:
                            fsType:
                              description: 'fsType is the filesystem type of the volume
                                that you want to mount. Tip: Ensure that the filesystem
                                type is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                              type: string
                            image:
                              description: 'image is the rados image name. More info:
                                https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                            keyring:
                              description: 'keyring is the path to key ring for RBDUser.
                                Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                            monitors:
                              description: 'monitors is a collection of Ceph monitors.
                                More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              items:
                                type: string
                              type: array
                            pool:
                              description: 'pool is the rados pool name. Default is
                                rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                            readOnly:
                              description: 'readOnly here will force the ReadOnly
                                setting in VolumeMounts. Defaults to false. More info:
                                https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: boolean
                            secretRef:
                              description: 'secretRef is name of the authentication
                                secret for RBDUser. If provided overrides keyring.
                                Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                            user:
                              description: 'user is the rados user name. Default is
                                admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                          required:
                          - image
                          - monitors
                          type: object
                        scaleIO:
                          description: scaleIO represents a ScaleIO persistent volume
                            attached and mounted on Kubernetes nodes.
                          properties:
                            fsType:
                              description: fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
                              type: string
                            gateway:
                              description: gateway is the host address of the ScaleIO
                                API Gateway.
                              type: string
                            protectionDomain:
                              description: protectionDomain is the name of the ScaleIO
                                Protection Domain for the configured storage.
                              type: string
                            readOnly:
                              description: readOnly Defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretRef:
                              description: secretRef references to the secret for
                                ScaleIO user and other sensitive information. If this
                                is not provided, Login operation will fail.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                            sslEnabled:
                              description: sslEnabled Flag enable/disable SSL communication
                                with Gateway, default false
                              type: boolean
                            storageMode:
                              description: storageMode indicates whether the storage
                                for a volume should be ThickProvisioned or ThinProvisioned.
                                Default is ThinProvisioned.
                              type: string
                            storagePool:
                              description: storagePool is the ScaleIO Storage Pool
                                associated with the protection domain.
                              type: string
                            system:
                              description: system is the name of the storage system
                                as configured in ScaleIO.
                              type: string
                            volumeName:
                              description: volumeName is the name of a volume already
                                created in the ScaleIO system that is associated with
                                this volume source.
                              type: string
                          required:
                          - gateway
                          - secretRef
                          - system
                          type: object
                        secret:
                          description: 'secret represents a secret that should populate
                            this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                          properties:
                            defaultMode:
                              description: 'defaultMode is Optional: mode bits used
                                to set permissions on created files by default. Must
                                be an octal value between 0000 and 0777 or a decimal
                                value between 0 and 511. YAML accepts both octal and
                                decimal values, JSON requires decimal values for mode
                                bits. Defaults to 0644. Directories within the path
                                are not affected by this setting. This might be in
                                conflict with other options that affect the file mode,
                                like fsGroup, and the result can be other mode bits
                                set.'
                              format: int32
                              type: integer
                            items:
                              description: items If unspecified, each key-value pair
                                in the Data field of the referenced Secret will be
                                projected into the volume as a file whose name is
                                the key and content is the value. If specified, the
                                listed keys will be projected into the specified paths,
                                and unlisted keys will not be present. If a key is
                                specified which is not present in the Secret, the
                                volume setup will error unless it is marked optional.
                                Paths must be relative and may not contain the '..'
                                path or start with '..'.
                              items:
                                description: Maps a string key to a path within a
                                  volume.
                                properties:
                                  key:
                                    description: key is the key to project.
                                    type: string
                                  mode:
                                    description: 'mode is Optional: mode bits used
                                      to set permissions on this file. Must be an
                                      octal value between 0000 and 0777 or a decimal
                                      value between 0 and 511. YAML accepts both octal
                                      and decimal values, JSON requires decimal values
                                      for mode bits. If not specified, the volume
                                      defaultMode will be used. This might be in conflict
                                      with other options that affect the file mode,
                                      like fsGroup, and the result can be other mode
                                      bits set.'
                                    format: int32
                                    type: integer
                                  path:
                                    description: path is the relative path of the
                                      file to map the key to. May not be an absolute
                                      path. May not contain the path element '..'.
                                      May not start with the string '..'.
                                    type: string
                                required:
                                - key
                                - path
                                type: object
                              type: array
                            optional:
                              description: optional field specify whether the Secret
                                or its keys must be defined
                              type: boolean
                            secretName:
                              description: 'secretName is the name of the secret in
                                the pod''s namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                              type: string
                          type: object
                        storageos:
                          description: storageOS represents a StorageOS volume attached
                            and mounted on Kubernetes nodes.
                          properties:
                            fsType:
                              description: fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                to be "ext4" if unspecified.
                              type: string
                            readOnly:
                              description: readOnly defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretRef:
                              description: secretRef specifies the secret to use for
                                obtaining the StorageOS API credentials.  If not specified,
                                default values will be attempted.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                            volumeName:
                              description: volumeName is the human-readable name of
                                the StorageOS volume.  Volume names are only unique
                                within a namespace.
                              type: string
                            volumeNamespace:
                              description: volumeNamespace specifies the scope of
                                the volume within StorageOS.  If no namespace is specified
                                then the Pod's namespace will be used.  This allows
                                the Kubernetes name scoping to be mirrored within
                                StorageOS for tighter integration. Set VolumeName
                                to any name to override the default behaviour. Set
                                to "default" if you are not using namespaces within
                                StorageOS. Namespaces that do not pre-exist within
                                StorageOS will be created.
                              type: string
                          type: object
                        vsphereVolume:
                          description: vsphereVolume represents a vSphere volume attached
                            and mounted on kubelets host machine
                          properties:
                            fsType:
                              description: fsType is filesystem type to mount. Must
                                be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                to be "ext4" if unspecified.
                              type: string
                            storagePolicyID:
                              description: storagePolicyID is the storage Policy Based
                                Management (SPBM) profile ID associated with the StoragePolicyName.
                              type: string
                            storagePolicyName:
                              description: storagePolicyName is the storage Policy
                                Based Management (SPBM) profile name.
                              type: string
                            volumePath:
                              description: volumePath is the path that identifies
                                vSphere volume vmdk
                              type: string
                          required:
                          - volumePath
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                type: object
              setup:
                description: steps for setting up the workflow
                items:
                  properties:
                    artifacts:
                      description: scrape artifacts from the volumes
                      properties:
                        compress:
                          description: compression options for the artifacts
                          properties:
                            name:
                              description: artifact name
                              minLength: 1
                              type: string
                          required:
                          - name
                          type: object
                        paths:
                          description: paths to fetch from the container
                          items:
                            type: string
                          type: array
                        workingDir:
                          description: working directory to override, so it will be
                            used as a base dir
                          type: string
                      type: object
                    condition:
                      description: 'expression to declare under which conditions the
                        step should be run defaults to: "passed", except artifacts
                        where it defaults to "always"'
                      type: string
                    container:
                      description: defaults for the containers in this step
                      properties:
                        args:
                          description: override default command in the image (empty
                            string to default CMD of the image)
                          items:
                            type: string
                          type: array
                        command:
                          description: override default command in the image (empty
                            string to default ENTRYPOINT of the image)
                          items:
                            type: string
                          type: array
                        env:
                          description: environment variables to append to the container
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are
                                  expanded using the previously defined environment
                                  variables in the container and any service environment
                                  variables. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged.
                                  Double $$ are reduced to a single $, which allows
                                  for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                  will produce the string literal "$(VAR_NAME)". Escaped
                                  references will never be expanded, regardless of
                                  whether the variable exists or not. Defaults to
                                  "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                      metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                      `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                      spec.serviceAccountName, status.hostIP, status.podIP,
                                      status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage, requests.cpu,
                                      requests.memory and requests.ephemeral-storage)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        envFrom:
                          description: external environment variables to append to
                            the container
                          items:
                            description: EnvFromSource represents the source of a
                              set of ConfigMaps
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                                type: object
                              prefix:
                                description: An optional identifier to prepend to
                                  each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                                type: object
                            type: object
                          type: array
                        image:
                          description: image to be used for the container
                          type: string
                        imagePullPolicy:
                          description: pulling policy for the image
                          type: string
                        resources:
                          description: expected resources for the container
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                x-kubernetes-int-or-string: true
                              description: resource limits for the container
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                x-kubernetes-int-or-string: true
                              description: resource requests for the container
                              type: object
                          type: object
                        securityContext:
                          description: security context for the container
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether
                                a process can gain more privileges than its parent
                                process. This bool directly controls if the no_new_privs
                                flag will be set on the container process. AllowPrivilegeEscalation
                                is true always when the container is: 1) run as Privileged
                                2) has CAP_SYS_ADMIN Note that this field cannot be
                                set when spec.os.name is windows.'
                              type: boolean
                            capabilities:
                              description: The capabilities to add/drop when running
                                containers. Defaults to the default set of capabilities
                                granted by the container runtime. Note that this field
                                cannot be set when spec.os.name is windows.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              description: Run container in privileged mode. Processes
                                in privileged containers are essentially equivalent
                                to root on the host. Defaults to false. Note that
                                this field cannot be set when spec.os.name is windows.
                              type: boolean
                            procMount:
                              description: procMount denotes the type of proc mount
                                to use for the containers. The default is DefaultProcMount
                                which uses the container runtime defaults for readonly
                                paths and masked paths. This requires the ProcMountType
                                feature flag to be enabled. Note that this field cannot
                                be set when spec.os.name is windows.
                              type: string
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only
                                root filesystem. Default is false. Note that this
                                field cannot be set when spec.os.name is windows.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container
                                process. Uses runtime default if unset. May also be
                                set in PodSecurityContext.  If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is windows.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as
                                a non-root user. If true, the Kubelet will validate
                                the image at runtime to ensure that it does not run
                                as UID 0 (root) and fail to start the container if
                                it does. If unset or false, no such validation will
                                be performed. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container
                                process. Defaults to user specified in image metadata
                                if unspecified. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name
                                is windows.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: The SELinux context to be applied to the
                                container. If unspecified, the container runtime will
                                allocate a random SELinux context for each container.  May
                                also be set in PodSecurityContext.  If set in both
                                SecurityContext and PodSecurityContext, the value
                                specified in SecurityContext takes precedence. Note
                                that this field cannot be set when spec.os.name is
                                windows.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies
                                    to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies
                                    to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies
                                    to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies
                                    to the container.
                                  type: string
                              type: object
                            seccompProfile:
                              description: The seccomp options to use by this container.
                                If seccomp options are provided at both the pod &
                                container level, the container options override the
                                pod options. Note that this field cannot be set when
                                spec.os.name is windows.
                              properties:
                                localhostProfile:
                                  description: localhostProfile indicates a profile
                                    defined in a file on the node should be used.
                                    The profile must be preconfigured on the node
                                    to work. Must be a descending path, relative to
                                    the kubelet's configured seccomp profile location.
                                    Must be set if type is "Localhost". Must NOT be
                                    set for any other type.
                                  type: string
                                type:
                                  description: "type indicates which kind of seccomp
                                    profile will be applied. Valid options are: \n
                                    Localhost - a profile defined in a file on the
                                    node should be used. RuntimeDefault - the container
                                    runtime default profile should be used. Unconfined
                                    - no profile should be applied."
                                  type: string
                              required:
                              - type
                              type: object
                            windowsOptions:
                              description: The Windows specific settings applied to
                                all containers. If unspecified, the options from the
                                PodSecurityContext will be used. If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is linux.
                              properties:
                                gmsaCredentialSpec:
                                  description: GMSACredentialSpec is where the GMSA
                                    admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                    inlines the contents of the GMSA credential spec
                                    named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name
                                    of the GMSA credential spec to use.
                                  type: string
                                hostProcess:
                                  description: HostProcess determines if a container
                                    should be run as a 'Host Process' container. All
                                    of a Pod's containers must have the same effective
                                    HostProcess value (it is not allowed to have a
                                    mix of HostProcess containers and non-HostProcess
                                    containers). In addition, if HostProcess is true
                                    then HostNetwork must also be set to true.
                                  type: boolean
                                runAsUserName:
                                  description: The UserName in Windows to run the
                                    entrypoint of the container process. Defaults
                                    to the user specified in image metadata if unspecified.
                                    May also be set in PodSecurityContext. If set
                                    in both SecurityContext and PodSecurityContext,
                                    the value specified in SecurityContext takes precedence.
                                  type: string
                              type: object
                          type: object
                        volumeMounts:
                          description: volume mounts to append to the container
                          items:
                            description: VolumeMount describes a mounting of a Volume
                              within a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the
                                  volume should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts
                                  are propagated from the host to container and the
                                  other way around. When not set, MountPropagationNone
                                  is used. This field is beta in 1.10.
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write
                                  otherwise (false or unspecified). Defaults to false.
                                type: boolean
                              subPath:
                                description: Path within the volume from which the
                                  container's volume should be mounted. Defaults to
                                  "" (volume's root).
                                type: string
                              subPathExpr:
                                description: Expanded path within the volume from
                                  which the container's volume should be mounted.
                                  Behaves similarly to SubPath but environment variable
                                  references $(VAR_NAME) are expanded using the container's
                                  environment. Defaults to "" (volume's root). SubPathExpr
                                  and SubPath are mutually exclusive.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                        workingDir:
                          description: override default working directory in the image
                            (empty string to default WORKDIR for the image)
                          type: string
                      type: object
                    content:
                      description: content that should be fetched for this step
                      properties:
                        files:
                          description: files to load
                          items:
                            properties:
                              content:
                                description: plain-text content to put inside
                                type: string
                              contentFrom:
                                description: external source to use
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                      metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                      `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                      spec.serviceAccountName, status.hostIP, status.podIP,
                                      status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage, requests.cpu,
                                      requests.memory and requests.ephemeral-storage)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                              mode:
                                description: mode to use for the file
                                format: int32
                                type: integer
                              path:
                                description: path where the file should be accessible
                                  at
                                minLength: 1
                                type: string
                            required:
                            - path
                            type: object
                          type: array
                        git:
                          description: git repository details
                          properties:
                            authType:
                              description: authorization type for the credentials
                              enum:
                              - basic
                              - header
                              type: string
                            mountPath:
                              description: where to mount the fetched repository contents
                                (defaults to "repo" directory in the data volume)
                              type: string
                            paths:
                              description: paths to fetch for the sparse checkout
                              items:
                                type: string
                              type: array
                            revision:
                              description: branch, commit or a tag name to fetch
                              type: string
                            token:
                              description: plain text token to fetch with
                              type: string
                            tokenFrom:
                              description: external token to fetch with
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                            uri:
                              description: uri for the Git repository
                              type: string
                            username:
                              description: plain text username to fetch with
                              type: string
                            usernameFrom:
                              description: external username to fetch with
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          type: object
                      type: object
                    delay:
                      description: delay before the step
                      pattern: ^((0|[1-9][0-9]*)h)?((0|[1-9][0-9]*)m)?((0|[1-9][0-9]*)s)?((0|[1-9][0-9]*)ms)?$
                      type: string
                    execute:
                      description: execute other Testkube resources
                      properties:
                        async:
                          description: only schedule the resources, don't watch the
                            results (unless it is needed for parallelism)
                          type: boolean
                        parallelism:
                          description: how many resources could be scheduled in parallel
                          format: int32
                          type: integer
                        tests:
                          description: tests to run
                          items:
                            properties:
                              count:
                                anyOf:
                                - type: integer
                                - type: string
                                description: static number of sharded instances to
                                  spawn
                                x-kubernetes-int-or-string: true
                              description:
                                description: test execution description to display
                                type: string
                              executionRequest:
                                description: pass the execution request overrides
                                properties:
                                  activeDeadlineSeconds:
                                    description: Optional duration in seconds the
                                      pod may be active on the node relative to StartTime
                                      before the system will actively try to mark
                                      it failed and kill associated containers. Value
                                      must be a positive integer.
                                    format: int64
                                    type: integer
                                  args:
                                    description: additional executor binary arguments
                                    items:
                                      type: string
                                    type: array
                                  argsMode:
                                    description: usage mode for arguments
                                    enum:
                                    - append
                                    - override
                                    - replace
                                    type: string
                                  artifactRequest:
                                    description: artifact request body with test artifacts
                                    properties:
                                      dirs:
                                        description: artifact directories for scraping
                                        items:
                                          type: string
                                        type: array
                                      masks:
                                        description: regexp to filter scraped artifacts,
                                          single or comma separated
                                        items:
                                          type: string
                                        type: array
                                      omitFolderPerExecution:
                                        description: don't use a separate folder for
                                          execution artifacts
                                        type: boolean
                                      sharedBetweenPods:
                                        description: whether to share volume between
                                          pods
                                        type: boolean
                                      storageBucket:
                                        description: artifact bucket storage
                                        type: string
                                      storageClassName:
                                        description: artifact storage class name for
                                          container executor
                                        type: string
                                      useDefaultStorageClassName:
                                        description: whether to use default storage
                                          class name
                                        type: boolean
                                      volumeMountPath:
                                        description: artifact volume mount path for
                                          container executor
                                        type: string
                                    type: object
                                  command:
                                    description: executor binary command
                                    items:
                                      type: string
                                    type: array
                                  cronJobTemplate:
                                    description: cron job template extensions
                                    type: string
                                  envConfigMaps:
                                    description: config map references
                                    items:
                                      description: Reference to env resource
                                      properties:
                                        mapToVariables:
                                          description: whether we shoud map to variables
                                            from resource
                                          type: boolean
                                        mount:
                                          description: whether we shoud mount resource
                                          type: boolean
                                        mountPath:
                                          description: where we shoud mount resource
                                          type: string
                                        reference:
                                          description: LocalObjectReference contains
                                            enough information to let you locate the
                                            referenced object inside the same namespace.
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                      required:
                                      - reference
                                      type: object
                                    type: array
                                  envSecrets:
                                    description: secret references
                                    items:
                                      description: Reference to env resource
                                      properties:
                                        mapToVariables:
                                          description: whether we shoud map to variables
                                            from resource
                                          type: boolean
                                        mount:
                                          description: whether we shoud mount resource
                                          type: boolean
                                        mountPath:
                                          description: where we shoud mount resource
                                          type: string
                                        reference:
                                          description: LocalObjectReference contains
                                            enough information to let you locate the
                                            referenced object inside the same namespace.
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                      required:
                                      - reference
                                      type: object
                                    type: array
                                  executePostRunScriptBeforeScraping:
                                    description: execute post run script before scraping
                                      (prebuilt executor only)
                                    type: boolean
                                  executionLabels:
                                    additionalProperties:
                                      type: string
                                    description: test execution labels
                                    type: object
                                  executionNamespace:
                                    description: namespace for test execution (Pro
                                      edition only)
                                    type: string
                                  httpProxy:
                                    description: http proxy for executor containers
                                    type: string
                                  httpsProxy:
                                    description: https proxy for executor containers
                                    type: string
                                  image:
                                    description: container executor image
                                    type: string
                                  imagePullSecrets:
                                    description: container executor image pull secrets
                                    items:
                                      description: LocalObjectReference contains enough
                                        information to let you locate the referenced
                                        object inside the same namespace.
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    type: array
                                  isVariablesFileUploaded:
                                    type: boolean
                                  jobTemplate:
                                    description: job template extensions
                                    type: string
                                  name:
                                    description: test execution custom name
                                    type: string
                                  negativeTest:
                                    description: negative test will fail the execution
                                      if it is a success and it will succeed if it
                                      is a failure
                                    type: boolean
                                  postRunScript:
                                    description: script to run after test execution
                                    type: string
                                  preRunScript:
                                    description: script to run before test execution
                                    type: string
                                  scraperTemplate:
                                    description: scraper template extensions
                                    type: string
                                  sourceScripts:
                                    description: run scripts using source command
                                      (container executor only)
                                    type: boolean
                                  sync:
                                    description: whether to start execution sync or
                                      async
                                    type: boolean
                                  testSecretUUID:
                                    description: test secret uuid
                                    type: string
                                  variables:
                                    additionalProperties:
                                      properties:
                                        name:
                                          description: variable name
                                          type: string
                                        type:
                                          description: variable type
                                          type: string
                                        value:
                                          description: variable string value
                                          type: string
                                        valueFrom:
                                          description: or load it from var source
                                          properties:
                                            configMapKeyRef:
                                              description: Selects a key of a ConfigMap.
                                              properties:
                                                key:
                                                  description: The key to select.
                                                  type: string
                                                name:
                                                  description: 'Name of the referent.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    TODO: Add other useful fields.
                                                    apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the
                                                    ConfigMap or its key must be defined
                                                  type: boolean
                                              required:
                                              - key
                                              type: object
                                            fieldRef:
                                              description: 'Selects a field of the
                                                pod: supports metadata.name, metadata.namespace,
                                                `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                                spec.nodeName, spec.serviceAccountName,
                                                status.hostIP, status.podIP, status.podIPs.'
                                              properties:
                                                apiVersion:
                                                  description: Version of the schema
                                                    the FieldPath is written in terms
                                                    of, defaults to "v1".
                                                  type: string
                                                fieldPath:
                                                  description: Path of the field to
                                                    select in the specified API version.
                                                  type: string
                                              required:
                                              - fieldPath
                                              type: object
                                            resourceFieldRef:
                                              description: 'Selects a resource of
                                                the container: only resources limits
                                                and requests (limits.cpu, limits.memory,
                                                limits.ephemeral-storage, requests.cpu,
                                                requests.memory and requests.ephemeral-storage)
                                                are currently supported.'
                                              properties:
                                                containerName:
                                                  description: 'Container name: required
                                                    for volumes, optional for env
                                                    vars'
                                                  type: string
                                                divisor:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Specifies the output
                                                    format of the exposed resources,
                                                    defaults to "1"
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                resource:
                                                  description: 'Required: resource
                                                    to select'
                                                  type: string
                                              required:
                                              - resource
                                              type: object
                                            secretKeyRef:
                                              description: Selects a key of a secret
                                                in the pod's namespace
                                              properties:
                                                key:
                                                  description: The key of the secret
                                                    to select from.  Must be a valid
                                                    secret key.
                                                  type: string
                                                name:
                                                  description: 'Name of the referent.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    TODO: Add other useful fields.
                                                    apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the
                                                    Secret or its key must be defined
                                                  type: boolean
                                              required:
                                              - key
                                              type: object
                                          type: object
                                      type: object
                                    type: object
                                  variablesFile:
                                    description: variables file content - need to
                                      be in format for particular executor (e.g. postman
                                      envs file)
                                    type: string
                                type: object
                              matrix:
                                description: matrix of parameters to spawn instances
                                  (static)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              maxCount:
                                anyOf:
                                - type: integer
                                - type: string
                                description: dynamic number of sharded instances to
                                  spawn - it will be lowered if there is not enough
                                  sharded values
                                x-kubernetes-int-or-string: true
                              name:
                                description: test name to run
                                type: string
                              shards:
                                description: parameters that should be distributed
                                  across sharded instances
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          type: array
                        workflows:
                          description: workflows to run
                          items:
                            properties:
                              config:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  x-kubernetes-int-or-string: true
                                description: configuration to pass for the workflow
                                type: object
                              count:
                                anyOf:
                                - type: integer
                                - type: string
                                description: static number of sharded instances to
                                  spawn
                                x-kubernetes-int-or-string: true
                              description:
                                description: test workflow execution description to
                                  display
                                type: string
                              executionName:
                                description: unique execution name to use
                                type: string
                              matrix:
                                description: matrix of parameters to spawn instances
                                  (static)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              maxCount:
                                anyOf:
                                - type: integer
                                - type: string
                                description: dynamic number of sharded instances to
                                  spawn - it will be lowered if there is not enough
                                  sharded values
                                x-kubernetes-int-or-string: true
                              name:
                                description: workflow name to run
                                type: string
                              shards:
                                description: parameters that should be distributed
                                  across sharded instances
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          type: array
                      type: object
                    name:
                      description: readable name for the step
                      type: string
                    negative:
                      description: is the step expected to fail
                      type: boolean
                    optional:
                      description: is the step optional, so its failure won't affect
                        the TestWorkflow result
                      type: boolean
                    retry:
                      description: policy for retrying the step
                      properties:
                        count:
                          description: how many times at most it should retry
                          format: int32
                          minimum: 1
                          type: integer
                        until:
                          description: 'until when it should retry (defaults to: "passed")'
                          type: string
                      type: object
                    run:
                      description: run specific container in the current step
                      properties:
                        args:
                          description: override default command in the image (empty
                            string to default CMD of the image)
                          items:
                            type: string
                          type: array
                        command:
                          description: override default command in the image (empty
                            string to default ENTRYPOINT of the image)
                          items:
                            type: string
                          type: array
                        env:
                          description: environment variables to append to the container
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are
                                  expanded using the previously defined environment
                                  variables in the container and any service environment
                                  variables. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged.
                                  Double $$ are reduced to a single $, which allows
                                  for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                  will produce the string literal "$(VAR_NAME)". Escaped
                                  references will never be expanded, regardless of
                                  whether the variable exists or not. Defaults to
                                  "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                      metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                      `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                      spec.serviceAccountName, status.hostIP, status.podIP,
                                      status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage, requests.cpu,
                                      requests.memory and requests.ephemeral-storage)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        envFrom:
                          description: external environment variables to append to
                            the container
                          items:
                            description: EnvFromSource represents the source of a
                              set of ConfigMaps
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                                type: object
                              prefix:
                                description: An optional identifier to prepend to
                                  each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                                type: object
                            type: object
                          type: array
                        image:
                          description: image to be used for the container
                          type: string
                        imagePullPolicy:
                          description: pulling policy for the image
                          type: string
                        resources:
                          description: expected resources for the container
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                x-kubernetes-int-or-string: true
                              description: resource limits for the container
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                x-kubernetes-int-or-string: true
                              description: resource requests for the container
                              type: object
                          type: object
                        securityContext:
                          description: security context for the container
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether
                                a process can gain more privileges than its parent
                                process. This bool directly controls if the no_new_privs
                                flag will be set on the container process. AllowPrivilegeEscalation
                                is true always when the container is: 1) run as Privileged
                                2) has CAP_SYS_ADMIN Note that this field cannot be
                                set when spec.os.name is windows.'
                              type: boolean
                            capabilities:
                              description: The capabilities to add/drop when running
                                containers. Defaults to the default set of capabilities
                                granted by the container runtime. Note that this field
                                cannot be set when spec.os.name is windows.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              description: Run container in privileged mode. Processes
                                in privileged containers are essentially equivalent
                                to root on the host. Defaults to false. Note that
                                this field cannot be set when spec.os.name is windows.
                              type: boolean
                            procMount:
                              description: procMount denotes the type of proc mount
                                to use for the containers. The default is DefaultProcMount
                                which uses the container runtime defaults for readonly
                                paths and masked paths. This requires the ProcMountType
                                feature flag to be enabled. Note that this field cannot
                                be set when spec.os.name is windows.
                              type: string
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only
                                root filesystem. Default is false. Note that this
                                field cannot be set when spec.os.name is windows.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container
                                process. Uses runtime default if unset. May also be
                                set in PodSecurityContext.  If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is windows.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as
                                a non-root user. If true, the Kubelet will validate
                                the image at runtime to ensure that it does not run
                                as UID 0 (root) and fail to start the container if
                                it does. If unset or false, no such validation will
                                be performed. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container
                                process. Defaults to user specified in image metadata
                                if unspecified. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name
                                is windows.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: The SELinux context to be applied to the
                                container. If unspecified, the container runtime will
                                allocate a random SELinux context for each container.  May
                                also be set in PodSecurityContext.  If set in both
                                SecurityContext and PodSecurityContext, the value
                                specified in SecurityContext takes precedence. Note
                                that this field cannot be set when spec.os.name is
                                windows.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies
                                    to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies
                                    to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies
                                    to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies
                                    to the container.
                                  type: string
                              type: object
                            seccompProfile:
                              description: The seccomp options to use by this container.
                                If seccomp options are provided at both the pod &
                                container level, the container options override the
                                pod options. Note that this field cannot be set when
                                spec.os.name is windows.
                              properties:
                                localhostProfile:
                                  description: localhostProfile indicates a profile
                                    defined in a file on the node should be used.
                                    The profile must be preconfigured on the node
                                    to work. Must be a descending path, relative to
                                    the kubelet's configured seccomp profile location.
                                    Must be set if type is "Localhost". Must NOT be
                                    set for any other type.
                                  type: string
                                type:
                                  description: "type indicates which kind of seccomp
                                    profile will be applied. Valid options are: \n
                                    Localhost - a profile defined in a file on the
                                    node should be used. RuntimeDefault - the container
                                    runtime default profile should be used. Unconfined
                                    - no profile should be applied."
                                  type: string
                              required:
                              - type
                              type: object
                            windowsOptions:
                              description: The Windows specific settings applied to
                                all containers. If unspecified, the options from the
                                PodSecurityContext will be used. If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is linux.
                              properties:
                                gmsaCredentialSpec:
                                  description: GMSACredentialSpec is where the GMSA
                                    admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                    inlines the contents of the GMSA credential spec
                                    named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name
                                    of the GMSA credential spec to use.
                                  type: string
                                hostProcess:
                                  description: HostProcess determines if a container
                                    should be run as a 'Host Process' container. All
                                    of a Pod's containers must have the same effective
                                    HostProcess value (it is not allowed to have a
                                    mix of HostProcess containers and non-HostProcess
                                    containers). In addition, if HostProcess is true
                                    then HostNetwork must also be set to true.
                                  type: boolean
                                runAsUserName:
                                  description: The UserName in Windows to run the
                                    entrypoint of the container process. Defaults
                                    to the user specified in image metadata if unspecified.
                                    May also be set in PodSecurityContext. If set
                                    in both SecurityContext and PodSecurityContext,
                                    the value specified in SecurityContext takes precedence.
                                  type: string
                              type: object
                          type: object
                        shell:
                          description: script to run in a default shell for the container
                          type: string
                        volumeMounts:
                          description: volume mounts to append to the container
                          items:
                            description: VolumeMount describes a mounting of a Volume
                              within a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the
                                  volume should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts
                                  are propagated from the host to container and the
                                  other way around. When not set, MountPropagationNone
                                  is used. This field is beta in 1.10.
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write
                                  otherwise (false or unspecified). Defaults to false.
                                type: boolean
                              subPath:
                                description: Path within the volume from which the
                                  container's volume should be mounted. Defaults to
                                  "" (volume's root).
                                type: string
                              subPathExpr:
                                description: Expanded path within the volume from
                                  which the container's volume should be mounted.
                                  Behaves similarly to SubPath but environment variable
                                  references $(VAR_NAME) are expanded using the container's
                                  environment. Defaults to "" (volume's root). SubPathExpr
                                  and SubPath are mutually exclusive.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                        workingDir:
                          description: override default working directory in the image
                            (empty string to default WORKDIR for the image)
                          type: string
                      type: object
                    setup:
                      description: steps to run before other operations in this step
                      x-kubernetes-preserve-unknown-fields: true
                    shell:
                      description: script to run in a default shell for the container
                      type: string
                    steps:
                      description: sub-steps to run
                      x-kubernetes-preserve-unknown-fields: true
                    timeout:
                      description: maximum time this step may take
                      pattern: ^((0|[1-9][0-9]*)h)?((0|[1-9][0-9]*)m)?((0|[1-9][0-9]*)s)?((0|[1-9][0-9]*)ms)?$
                      type: string
                    workingDir:
                      description: working directory to use for this step
                      type: string
                  type: object
                type: array
              steps:
                description: steps to execute in the workflow
                items:
                  properties:
                    artifacts:
                      description: scrape artifacts from the volumes
                      properties:
                        compress:
                          description: compression options for the artifacts
                          properties:
                            name:
                              description: artifact name
                              minLength: 1
                              type: string
                          required:
                          - name
                          type: object
                        paths:
                          description: paths to fetch from the container
                          items:
                            type: string
                          type: array
                        workingDir:
                          description: working directory to override, so it will be
                            used as a base dir
                          type: string
                      type: object
                    condition:
                      description: 'expression to declare under which conditions the
                        step should be run defaults to: "passed", except artifacts
                        where it defaults to "always"'
                      type: string
                    container:
                      description: defaults for the containers in this step
                      properties:
                        args:
                          description: override default command in the image (empty
                            string to default CMD of the image)
                          items:
                            type: string
                          type: array
                        command:
                          description: override default command in the image (empty
                            string to default ENTRYPOINT of the image)
                          items:
                            type: string
                          type: array
                        env:
                          description: environment variables to append to the container
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are
                                  expanded using the previously defined environment
                                  variables in the container and any service environment
                                  variables. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged.
                                  Double $$ are reduced to a single $, which allows
                                  for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                  will produce the string literal "$(VAR_NAME)". Escaped
                                  references will never be expanded, regardless of
                                  whether the variable exists or not. Defaults to
                                  "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                      metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                      `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                      spec.serviceAccountName, status.hostIP, status.podIP,
                                      status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage, requests.cpu,
                                      requests.memory and requests.ephemeral-storage)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        envFrom:
                          description: external environment variables to append to
                            the container
                          items:
                            description: EnvFromSource represents the source of a
                              set of ConfigMaps
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                                type: object
                              prefix:
                                description: An optional identifier to prepend to
                                  each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                                type: object
                            type: object
                          type: array
                        image:
                          description: image to be used for the container
                          type: string
                        imagePullPolicy:
                          description: pulling policy for the image
                          type: string
                        resources:
                          description: expected resources for the container
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                x-kubernetes-int-or-string: true
                              description: resource limits for the container
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                x-kubernetes-int-or-string: true
                              description: resource requests for the container
                              type: object
                          type: object
                        securityContext:
                          description: security context for the container
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether
                                a process can gain more privileges than its parent
                                process. This bool directly controls if the no_new_privs
                                flag will be set on the container process. AllowPrivilegeEscalation
                                is true always when the container is: 1) run as Privileged
                                2) has CAP_SYS_ADMIN Note that this field cannot be
                                set when spec.os.name is windows.'
                              type: boolean
                            capabilities:
                              description: The capabilities to add/drop when running
                                containers. Defaults to the default set of capabilities
                                granted by the container runtime. Note that this field
                                cannot be set when spec.os.name is windows.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              description: Run container in privileged mode. Processes
                                in privileged containers are essentially equivalent
                                to root on the host. Defaults to false. Note that
                                this field cannot be set when spec.os.name is windows.
                              type: boolean
                            procMount:
                              description: procMount denotes the type of proc mount
                                to use for the containers. The default is DefaultProcMount
                                which uses the container runtime defaults for readonly
                                paths and masked paths. This requires the ProcMountType
                                feature flag to be enabled. Note that this field cannot
                                be set when spec.os.name is windows.
                              type: string
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only
                                root filesystem. Default is false. Note that this
                                field cannot be set when spec.os.name is windows.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container
                                process. Uses runtime default if unset. May also be
                                set in PodSecurityContext.  If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is windows.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as
                                a non-root user. If true, the Kubelet will validate
                                the image at runtime to ensure that it does not run
                                as UID 0 (root) and fail to start the container if
                                it does. If unset or false, no such validation will
                                be performed. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container
                                process. Defaults to user specified in image metadata
                                if unspecified. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name
                                is windows.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: The SELinux context to be applied to the
                                container. If unspecified, the container runtime will
                                allocate a random SELinux context for each container.  May
                                also be set in PodSecurityContext.  If set in both
                                SecurityContext and PodSecurityContext, the value
                                specified in SecurityContext takes precedence. Note
                                that this field cannot be set when spec.os.name is
                                windows.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies
                                    to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies
                                    to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies
                                    to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies
                                    to the container.
                                  type: string
                              type: object
                            seccompProfile:
                              description: The seccomp options to use by this container.
                                If seccomp options are provided at both the pod &
                                container level, the container options override the
                                pod options. Note that this field cannot be set when
                                spec.os.name is windows.
                              properties:
                                localhostProfile:
                                  description: localhostProfile indicates a profile
                                    defined in a file on the node should be used.
                                    The profile must be preconfigured on the node
                                    to work. Must be a descending path, relative to
                                    the kubelet's configured seccomp profile location.
                                    Must be set if type is "Localhost". Must NOT be
                                    set for any other type.
                                  type: string
                                type:
                                  description: "type indicates which kind of seccomp
                                    profile will be applied. Valid options are: \n
                                    Localhost - a profile defined in a file on the
                                    node should be used. RuntimeDefault - the container
                                    runtime default profile should be used. Unconfined
                                    - no profile should be applied."
                                  type: string
                              required:
                              - type
                              type: object
                            windowsOptions:
                              description: The Windows specific settings applied to
                                all containers. If unspecified, the options from the
                                PodSecurityContext will be used. If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is linux.
                              properties:
                                gmsaCredentialSpec:
                                  description: GMSACredentialSpec is where the GMSA
                                    admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                    inlines the contents of the GMSA credential spec
                                    named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name
                                    of the GMSA credential spec to use.
                                  type: string
                                hostProcess:
                                  description: HostProcess determines if a container
                                    should be run as a 'Host Process' container. All
                                    of a Pod's containers must have the same effective
                                    HostProcess value (it is not allowed to have a
                                    mix of HostProcess containers and non-HostProcess
                                    containers). In addition, if HostProcess is true
                                    then HostNetwork must also be set to true.
                                  type: boolean
                                runAsUserName:
                                  description: The UserName in Windows to run the
                                    entrypoint of the container process. Defaults
                                    to the user specified in image metadata if unspecified.
                                    May also be set in PodSecurityContext. If set
                                    in both SecurityContext and PodSecurityContext,
                                    the value specified in SecurityContext takes precedence.
                                  type: string
                              type: object
                          type: object
                        volumeMounts:
                          description: volume mounts to append to the container
                          items:
                            description: VolumeMount describes a mounting of a Volume
                              within a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the
                                  volume should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts
                                  are propagated from the host to container and the
                                  other way around. When not set, MountPropagationNone
                                  is used. This field is beta in 1.10.
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write
                                  otherwise (false or unspecified). Defaults to false.
                                type: boolean
                              subPath:
                                description: Path within the volume from which the
                                  container's volume should be mounted. Defaults to
                                  "" (volume's root).
                                type: string
                              subPathExpr:
                                description: Expanded path within the volume from
                                  which the container's volume should be mounted.
                                  Behaves similarly to SubPath but environment variable
                                  references $(VAR_NAME) are expanded using the container's
                                  environment. Defaults to "" (volume's root). SubPathExpr
                                  and SubPath are mutually exclusive.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                        workingDir:
                          description: override default working directory in the image
                            (empty string to default WORKDIR for the image)
                          type: string
                      type: object
                    content:
                      description: content that should be fetched for this step
                      properties:
                        files:
                          description: files to load
                          items:
                            properties:
                              content:
                                description: plain-text content to put inside
                                type: string
                              contentFrom:
                                description: external source to use
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                      metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                      `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                      spec.serviceAccountName, status.hostIP, status.podIP,
                                      status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage, requests.cpu,
                                      requests.memory and requests.ephemeral-storage)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                              mode:
                                description: mode to use for the file
                                format: int32
                                type: integer
                              path:
                                description: path where the file should be accessible
                                  at
                                minLength: 1
                                type: string
                            required:
                            - path
                            type: object
                          type: array
                        git:
                          description: git repository details
                          properties:
                            authType:
                              description: authorization type for the credentials
                              enum:
                              - basic
                              - header
                              type: string
                            mountPath:
                              description: where to mount the fetched repository contents
                                (defaults to "repo" directory in the data volume)
                              type: string
                            paths:
                              description: paths to fetch for the sparse checkout
                              items:
                                type: string
                              type: array
                            revision:
                              description: branch, commit or a tag name to fetch
                              type: string
                            token:
                              description: plain text token to fetch with
                              type: string
                            tokenFrom:
                              description: external token to fetch with
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                            uri:
                              description: uri for the Git repository
                              type: string
                            username:
                              description: plain text username to fetch with
                              type: string
                            usernameFrom:
                              description: external username to fetch with
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          type: object
                      type: object
                    delay:
                      description: delay before the step
                      pattern: ^((0|[1-9][0-9]*)h)?((0|[1-9][0-9]*)m)?((0|[1-9][0-9]*)s)?((0|[1-9][0-9]*)ms)?$
                      type: string
                    execute:
                      description: execute other Testkube resources
                      properties:
                        async:
                          description: only schedule the resources, don't watch the
                            results (unless it is needed for parallelism)
                          type: boolean
                        parallelism:
                          description: how many resources could be scheduled in parallel
                          format: int32
                          type: integer
                        tests:
                          description: tests to run
                          items:
                            properties:
                              count:
                                anyOf:
                                - type: integer
                                - type: string
                                description: static number of sharded instances to
                                  spawn
                                x-kubernetes-int-or-string: true
                              description:
                                description: test execution description to display
                                type: string
                              executionRequest:
                                description: pass the execution request overrides
                                properties:
                                  activeDeadlineSeconds:
                                    description: Optional duration in seconds the
                                      pod may be active on the node relative to StartTime
                                      before the system will actively try to mark
                                      it failed and kill associated containers. Value
                                      must be a positive integer.
                                    format: int64
                                    type: integer
                                  args:
                                    description: additional executor binary arguments
                                    items:
                                      type: string
                                    type: array
                                  argsMode:
                                    description: usage mode for arguments
                                    enum:
                                    - append
                                    - override
                                    - replace
                                    type: string
                                  artifactRequest:
                                    description: artifact request body with test artifacts
                                    properties:
                                      dirs:
                                        description: artifact directories for scraping
                                        items:
                                          type: string
                                        type: array
                                      masks:
                                        description: regexp to filter scraped artifacts,
                                          single or comma separated
                                        items:
                                          type: string
                                        type: array
                                      omitFolderPerExecution:
                                        description: don't use a separate folder for
                                          execution artifacts
                                        type: boolean
                                      sharedBetweenPods:
                                        description: whether to share volume between
                                          pods
                                        type: boolean
                                      storageBucket:
                                        description: artifact bucket storage
                                        type: string
                                      storageClassName:
                                        description: artifact storage class name for
                                          container executor
                                        type: string
                                      useDefaultStorageClassName:
                                        description: whether to use default storage
                                          class name
                                        type: boolean
                                      volumeMountPath:
                                        description: artifact volume mount path for
                                          container executor
                                        type: string
                                    type: object
                                  command:
                                    description: executor binary command
                                    items:
                                      type: string
                                    type: array
                                  cronJobTemplate:
                                    description: cron job template extensions
                                    type: string
                                  envConfigMaps:
                                    description: config map references
                                    items:
                                      description: Reference to env resource
                                      properties:
                                        mapToVariables:
                                          description: whether we shoud map to variables
                                            from resource
                                          type: boolean
                                        mount:
                                          description: whether we shoud mount resource
                                          type: boolean
                                        mountPath:
                                          description: where we shoud mount resource
                                          type: string
                                        reference:
                                          description: LocalObjectReference contains
                                            enough information to let you locate the
                                            referenced object inside the same namespace.
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                      required:
                                      - reference
                                      type: object
                                    type: array
                                  envSecrets:
                                    description: secret references
                                    items:
                                      description: Reference to env resource
                                      properties:
                                        mapToVariables:
                                          description: whether we shoud map to variables
                                            from resource
                                          type: boolean
                                        mount:
                                          description: whether we shoud mount resource
                                          type: boolean
                                        mountPath:
                                          description: where we shoud mount resource
                                          type: string
                                        reference:
                                          description: LocalObjectReference contains
                                            enough information to let you locate the
                                            referenced object inside the same namespace.
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                          type: object
                                      required:
                                      - reference
                                      type: object
                                    type: array
                                  executePostRunScriptBeforeScraping:
                                    description: execute post run script before scraping
                                      (prebuilt executor only)
                                    type: boolean
                                  executionLabels:
                                    additionalProperties:
                                      type: string
                                    description: test execution labels
                                    type: object
                                  executionNamespace:
                                    description: namespace for test execution (Pro
                                      edition only)
                                    type: string
                                  httpProxy:
                                    description: http proxy for executor containers
                                    type: string
                                  httpsProxy:
                                    description: https proxy for executor containers
                                    type: string
                                  image:
                                    description: container executor image
                                    type: string
                                  imagePullSecrets:
                                    description: container executor image pull secrets
                                    items:
                                      description: LocalObjectReference contains enough
                                        information to let you locate the referenced
                                        object inside the same namespace.
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    type: array
                                  isVariablesFileUploaded:
                                    type: boolean
                                  jobTemplate:
                                    description: job template extensions
                                    type: string
                                  name:
                                    description: test execution custom name
                                    type: string
                                  negativeTest:
                                    description: negative test will fail the execution
                                      if it is a success and it will succeed if it
                                      is a failure
                                    type: boolean
                                  postRunScript:
                                    description: script to run after test execution
                                    type: string
                                  preRunScript:
                                    description: script to run before test execution
                                    type: string
                                  scraperTemplate:
                                    description: scraper template extensions
                                    type: string
                                  sourceScripts:
                                    description: run scripts using source command
                                      (container executor only)
                                    type: boolean
                                  sync:
                                    description: whether to start execution sync or
                                      async
                                    type: boolean
                                  testSecretUUID:
                                    description: test secret uuid
                                    type: string
                                  variables:
                                    additionalProperties:
                                      properties:
                                        name:
                                          description: variable name
                                          type: string
                                        type:
                                          description: variable type
                                          type: string
                                        value:
                                          description: variable string value
                                          type: string
                                        valueFrom:
                                          description: or load it from var source
                                          properties:
                                            configMapKeyRef:
                                              description: Selects a key of a ConfigMap.
                                              properties:
                                                key:
                                                  description: The key to select.
                                                  type: string
                                                name:
                                                  description: 'Name of the referent.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    TODO: Add other useful fields.
                                                    apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the
                                                    ConfigMap or its key must be defined
                                                  type: boolean
                                              required:
                                              - key
                                              type: object
                                            fieldRef:
                                              description: 'Selects a field of the
                                                pod: supports metadata.name, metadata.namespace,
                                                `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                                spec.nodeName, spec.serviceAccountName,
                                                status.hostIP, status.podIP, status.podIPs.'
                                              properties:
                                                apiVersion:
                                                  description: Version of the schema
                                                    the FieldPath is written in terms
                                                    of, defaults to "v1".
                                                  type: string
                                                fieldPath:
                                                  description: Path of the field to
                                                    select in the specified API version.
                                                  type: string
                                              required:
                                              - fieldPath
                                              type: object
                                            resourceFieldRef:
                                              description: 'Selects a resource of
                                                the container: only resources limits
                                                and requests (limits.cpu, limits.memory,
                                                limits.ephemeral-storage, requests.cpu,
                                                requests.memory and requests.ephemeral-storage)
                                                are currently supported.'
                                              properties:
                                                containerName:
                                                  description: 'Container name: required
                                                    for volumes, optional for env
                                                    vars'
                                                  type: string
                                                divisor:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Specifies the output
                                                    format of the exposed resources,
                                                    defaults to "1"
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                resource:
                                                  description: 'Required: resource
                                                    to select'
                                                  type: string
                                              required:
                                              - resource
                                              type: object
                                            secretKeyRef:
                                              description: Selects a key of a secret
                                                in the pod's namespace
                                              properties:
                                                key:
                                                  description: The key of the secret
                                                    to select from.  Must be a valid
                                                    secret key.
                                                  type: string
                                                name:
                                                  description: 'Name of the referent.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    TODO: Add other useful fields.
                                                    apiVersion, kind, uid?'
                                                  type: string
                                                optional:
                                                  description: Specify whether the
                                                    Secret or its key must be defined
                                                  type: boolean
                                              required:
                                              - key
                                              type: object
                                          type: object
                                      type: object
                                    type: object
                                  variablesFile:
                                    description: variables file content - need to
                                      be in format for particular executor (e.g. postman
                                      envs file)
                                    type: string
                                type: object
                              matrix:
                                description: matrix of parameters to spawn instances
                                  (static)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              maxCount:
                                anyOf:
                                - type: integer
                                - type: string
                                description: dynamic number of sharded instances to
                                  spawn - it will be lowered if there is not enough
                                  sharded values
                                x-kubernetes-int-or-string: true
                              name:
                                description: test name to run
                                type: string
                              shards:
                                description: parameters that should be distributed
                                  across sharded instances
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          type: array
                        workflows:
                          description: workflows to run
                          items:
                            properties:
                              config:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  x-kubernetes-int-or-string: true
                                description: configuration to pass for the workflow
                                type: object
                              count:
                                anyOf:
                                - type: integer
                                - type: string
                                description: static number of sharded instances to
                                  spawn
                                x-kubernetes-int-or-string: true
                              description:
                                description: test workflow execution description to
                                  display
                                type: string
                              executionName:
                                description: unique execution name to use
                                type: string
                              matrix:
                                description: matrix of parameters to spawn instances
                                  (static)
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              maxCount:
                                anyOf:
                                - type: integer
                                - type: string
                                description: dynamic number of sharded instances to
                                  spawn - it will be lowered if there is not enough
                                  sharded values
                                x-kubernetes-int-or-string: true
                              name:
                                description: workflow name to run
                                type: string
                              shards:
                                description: parameters that should be distributed
                                  across sharded instances
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          type: array
                      type: object
                    name:
                      description: readable name for the step
                      type: string
                    negative:
                      description: is the step expected to fail
                      type: boolean
                    optional:
                      description: is the step optional, so its failure won't affect
                        the TestWorkflow result
                      type: boolean
                    retry:
                      description: policy for retrying the step
                      properties:
                        count:
                          description: how many times at most it should retry
                          format: int32
                          minimum: 1
                          type: integer
                        until:
                          description: 'until when it should retry (defaults to: "passed")'
                          type: string
                      type: object
                    run:
                      description: run specific container in the current step
                      properties:
                        args:
                          description: override default command in the image (empty
                            string to default CMD of the image)
                          items:
                            type: string
                          type: array
                        command:
                          description: override default command in the image (empty
                            string to default ENTRYPOINT of the image)
                          items:
                            type: string
                          type: array
                        env:
                          description: environment variables to append to the container
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are
                                  expanded using the previously defined environment
                                  variables in the container and any service environment
                                  variables. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged.
                                  Double $$ are reduced to a single $, which allows
                                  for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                  will produce the string literal "$(VAR_NAME)". Escaped
                                  references will never be expanded, regardless of
                                  whether the variable exists or not. Defaults to
                                  "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                      metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                      `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                      spec.serviceAccountName, status.hostIP, status.podIP,
                                      status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage, requests.cpu,
                                      requests.memory and requests.ephemeral-storage)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        envFrom:
                          description: external environment variables to append to
                            the container
                          items:
                            description: EnvFromSource represents the source of a
                              set of ConfigMaps
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                                type: object
                              prefix:
                                description: An optional identifier to prepend to
                                  each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                                type: object
                            type: object
                          type: array
                        image:
                          description: image to be used for the container
                          type: string
                        imagePullPolicy:
                          description: pulling policy for the image
                          type: string
                        resources:
                          description: expected resources for the container
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                x-kubernetes-int-or-string: true
                              description: resource limits for the container
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                x-kubernetes-int-or-string: true
                              description: resource requests for the container
                              type: object
                          type: object
                        securityContext:
                          description: security context for the container
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether
                                a process can gain more privileges than its parent
                                process. This bool directly controls if the no_new_privs
                                flag will be set on the container process. AllowPrivilegeEscalation
                                is true always when the container is: 1) run as Privileged
                                2) has CAP_SYS_ADMIN Note that this field cannot be
                                set when spec.os.name is windows.'
                              type: boolean
                            capabilities:
                              description: The capabilities to add/drop when running
                                containers. Defaults to the default set of capabilities
                                granted by the container runtime. Note that this field
                                cannot be set when spec.os.name is windows.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              description: Run container in privileged mode. Processes
                                in privileged containers are essentially equivalent
                                to root on the host. Defaults to false. Note that
                                this field cannot be set when spec.os.name is windows.
                              type: boolean
                            procMount:
                              description: procMount denotes the type of proc mount
                                to use for the containers. The default is DefaultProcMount
                                which uses the container runtime defaults for readonly
                                paths and masked paths. This requires the ProcMountType
                                feature flag to be enabled. Note that this field cannot
                                be set when spec.os.name is windows.
                              type: string
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only
                                root filesystem. Default is false. Note that this
                                field cannot be set when spec.os.name is windows.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container
                                process. Uses runtime default if unset. May also be
                                set in PodSecurityContext.  If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is windows.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as
                                a non-root user. If true, the Kubelet will validate
                                the image at runtime to ensure that it does not run
                                as UID 0 (root) and fail to start the container if
                                it does. If unset or false, no such validation will
                                be performed. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container
                                process. Defaults to user specified in image metadata
                                if unspecified. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name
                                is windows.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: The SELinux context to be applied to the
                                container. If unspecified, the container runtime will
                                allocate a random SELinux context for each container.  May
                                also be set in PodSecurityContext.  If set in both
                                SecurityContext and PodSecurityContext, the value
                                specified in SecurityContext takes precedence. Note
                                that this field cannot be set when spec.os.name is
                                windows.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies
                                    to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies
                                    to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies
                                    to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies
                                    to the container.
                                  type: string
                              type: object
                            seccompProfile:
                              description: The seccomp options to use by this container.
                                If seccomp options are provided at both the pod &
                                container level, the container options override the
                                pod options. Note that this field cannot be set when
                                spec.os.name is windows.
                              properties:
                                localhostProfile:
                                  description: localhostProfile indicates a profile
                                    defined in a file on the node should be used.
                                    The profile must be preconfigured on the node
                                    to work. Must be a descending path, relative to
                                    the kubelet's configured seccomp profile location.
                                    Must be set if type is "Localhost". Must NOT be
                                    set for any other type.
                                  type: string
                                type:
                                  description: "type indicates which kind of seccomp
                                    profile will be applied. Valid options are: \n
                                    Localhost - a profile defined in a file on the
                                    node should be used. RuntimeDefault - the container
                                    runtime default profile should be used. Unconfined
                                    - no profile should be applied."
                                  type: string
                              required:
                              - type
                              type: object
                            windowsOptions:
                              description: The Windows specific settings applied to
                                all containers. If unspecified, the options from the
                                PodSecurityContext will be used. If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. Note that this field cannot be set
                                when spec.os.name is linux.
                              properties:
                                gmsaCredentialSpec:
                                  description: GMSACredentialSpec is where the GMSA
                                    admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                    inlines the contents of the GMSA credential spec
                                    named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name
                                    of the GMSA credential spec to use.
                                  type: string
                                hostProcess:
                                  description: HostProcess determines if a container
                                    should be run as a 'Host Process' container. All
                                    of a Pod's containers must have the same effective
                                    HostProcess value (it is not allowed to have a
                                    mix of HostProcess containers and non-HostProcess
                                    containers). In addition, if HostProcess is true
                                    then HostNetwork must also be set to true.
                                  type: boolean
                                runAsUserName:
                                  description: The UserName in Windows to run the
                                    entrypoint of the container process. Defaults
                                    to the user specified in image metadata if unspecified.
                                    May also be set in PodSecurityContext. If set
                                    in both SecurityContext and PodSecurityContext,
                                    the value specified in SecurityContext takes precedence.
                                  type: string
                              type: object
                          type: object
                        shell:
                          description: script to run in a default shell for the container
                          type: string
                        volumeMounts:
                          description: volume mounts to append to the container
                          items:
                            description: VolumeMount describes a mounting of a Volume
                              within a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the
                                  volume should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts
                                  are propagated from the host to container and the
                                  other way around. When not set, MountPropagationNone
                                  is used. This field is beta in 1.10.
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write
                                  otherwise (false or unspecified). Defaults to false.
                                type: boolean
                              subPath:
                                description: Path within the volume from which the
                                  container's volume should be mounted. Defaults to
                                  "" (volume's root).
                                type: string
                              subPathExpr:
                                description: Expanded path within the volume from
                                  which the container's volume should be mounted.
                                  Behaves similarly to SubPath but environment variable
                                  references $(VAR_NAME) are expanded using the container's
                                  environment. Defaults to "" (volume's root). SubPathExpr
                                  and SubPath are mutually exclusive.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                        workingDir:
                          description: override default working directory in the image
                            (empty string to default WORKDIR for the image)
                          type: string
                      type: object
                    setup:
                      description: steps to run before other operations in this step
                      x-kubernetes-preserve-unknown-fields: true
                    shell:
                      description: script to run in a default shell for the container
                      type: string
                    steps:
                      description: sub-steps to run
                      x-kubernetes-preserve-unknown-fields: true
                    timeout:
                      description: maximum time this step may take
                      pattern: ^((0|[1-9][0-9]*)h)?((0|[1-9][0-9]*)m)?((0|[1-9][0-9]*)s)?((0|[1-9][0-9]*)ms)?$
                      type: string
                    workingDir:
                      description: working directory to use for this step
                      type: string
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: watchers-role-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - services
      - events
      - namespaces
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "apps"
    resources:
      - deployments
      - daemonsets
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "networking.k8s.io"
      - "extensions"
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
---
# Source: testkube/charts/testkube-operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-operator-manager-role
  labels:
  namespace: default
rules:
- apiGroups:
  - executor.testkube.io
  resources:
  - executors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - executor.testkube.io
  resources:
  - executors/finalizers
  verbs:
  - update
- apiGroups:
  - executor.testkube.io
  resources:
  - executors/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - scripts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tests.testkube.io
  resources:
  - scripts/finalizers
  verbs:
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - scripts/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - tests
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tests.testkube.io
  resources:
  - tests/finalizers
  verbs:
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - tests/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - testsuites
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tests.testkube.io
  resources:
  - testsuites/finalizers
  verbs:
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - testsuites/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - executor.testkube.io
  resources:
  - webhooks
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - executor.testkube.io
  resources:
  - webhooks/finalizers
  verbs:
  - update
- apiGroups:
  - executor.testkube.io
  resources:
  - webhooks/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - testsources
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tests.testkube.io
  resources:
  - testsources/finalizers
  verbs:
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - testsources/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - testtriggers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tests.testkube.io
  resources:
  - testtriggers/finalizers
  verbs:
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - testtriggers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - testexecutions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tests.testkube.io
  resources:
  - testexecutions/finalizers
  verbs:
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - testexecutions/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - testsuiteexecutions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tests.testkube.io
  resources:
  - testsuiteexecutions/finalizers
  verbs:
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - testsuiteexecutions/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - templates
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tests.testkube.io
  resources:
  - templates/finalizers
  verbs:
  - update
- apiGroups:
  - tests.testkube.io
  resources:
  - templates/status
  verbs:
  - get
  - patch
  - update
---
# Source: testkube/charts/testkube-operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-operator-metrics-reader
  labels:
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: testkube/charts/testkube-operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-operator-proxy-role
  labels:
  namespace: default
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: testkube/charts/testkube-operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-operator-leader-election-role
  labels:
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: testkube/charts/testkube-operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cronjobs-role
  labels:
  namespace: default
rules:
- apiGroups:
  - ""
  - "batch"
  resources:
  - cronjobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
  - deletecollection
---
# Source: testkube/charts/testkube-operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-testworkflows-role
  labels:
  namespace: default
rules:
  - apiGroups:
      - testworkflows.testkube.io
    resources:
      - testworkflows
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - testworkflows.testkube.io
    resources:
      - testworkflowtemplates
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: watchers-rb-release-name
  namespace: default
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name:  watchers-role-release-name
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: default
---
# Source: testkube/charts/testkube-operator/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-operator-manager-rolebinding
  labels:
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-operator-manager-role
subjects:
- kind: ServiceAccount
  name: testkube-operator-controller-manager
  namespace: default
---
# Source: testkube/charts/testkube-operator/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-operator-proxy-rolebinding
  labels:
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: testkube-operator-controller-manager
  namespace: default
---
# Source: testkube/charts/testkube-operator/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-operator-leader-election-rolebinding
  labels:
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: testkube-operator-controller-manager
  namespace: default
---
# Source: testkube/charts/testkube-operator/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-cronjobs-rolebinding
  labels:
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-cronjobs-role
subjects:
- kind: ServiceAccount
  name: testkube-operator-controller-manager
  namespace: default
---
# Source: testkube/charts/testkube-operator/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-testworkflows-rolebinding
  labels:
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-testworkflows-role
subjects:
- kind: ServiceAccount
  name: testkube-operator-controller-manager
  namespace: default
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: executors-role-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
rules:
  - apiGroups:
      - executor.testkube.io
    resources:
      - executors
    verbs:
      - get
      - watch
      - list
      - create
      - update
      - patch
      - delete
      - deletecollection
  - apiGroups:
      - executor.testkube.io
    resources:
      - executors/status
    verbs:
      - get
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: jobs-role-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
rules:
  - apiGroups:
    - batch
    resources:
      - jobs
    verbs:
      - get
      - watch
      - list
      - create
      - delete
      - deletecollection
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/log
    verbs:
      - get
      - watch
      - list
      - create
      - delete
      - deletecollection
---
# Source: testkube/charts/testkube-api/templates/role.yaml
# permissions for end users to edit tests.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: script-role-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
rules:
  - apiGroups:
      - tests.testkube.io
    resources:
      - scripts
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - tests.testkube.io
    resources:
      - scripts/status
    verbs:
      - get
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: test-role-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
rules:
  - apiGroups:
      - tests.testkube.io
    resources:
      - tests
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - tests.testkube.io
    resources:
      - tests/status
    verbs:
      - get
      - patch
      - update
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secrets-role-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: testsuite-role-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
rules:
  - apiGroups:
      - tests.testkube.io
    resources:
      - testsuites
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - tests.testkube.io
    resources:
      - testsuites/status
    verbs:
      - get
      - patch
      - update
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: webhook-role-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
rules:
  - apiGroups:
      - executor.testkube.io
    resources:
      - webhooks
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - executor.testkube.io
    resources:
      - webhooks/status
    verbs:
      - get
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: configmaps-role-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - get
      - patch
      - update
      - deletecollection
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: testsource-role-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
rules:
  - apiGroups:
      - tests.testkube.io
    resources:
      - testsources
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - tests.testkube.io
    resources:
      - testsources/status
    verbs:
      - get
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: testtriggers-role-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
rules:
  - apiGroups:
      - tests.testkube.io
    resources:
      - testtriggers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - tests.testkube.io
    resources:
      - testtriggers/status
    verbs:
      - get
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: persistentvolumeclaims-role-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
rules:
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - create
      - get
      - delete
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: testexecution-role-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
rules:
  - apiGroups:
      - tests.testkube.io
    resources:
      - testexecutions
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - tests.testkube.io
    resources:
      - testexecutions/status
    verbs:
      - get
      - patch
      - update
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: testsuiteexecution-role-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
rules:
  - apiGroups:
      - tests.testkube.io
    resources:
      - testsuiteexecutions
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - tests.testkube.io
    resources:
      - testsuiteexecutions/status
    verbs:
      - get
      - patch
      - update
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: template-role-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
rules:
  - apiGroups:
      - tests.testkube.io
    resources:
      - templates
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - tests.testkube.io
    resources:
      - templates/status
    verbs:
      - get
      - patch
      - update
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tests-job-role-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
rules:
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - get
      - watch
      - list
      - create
      - delete
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/log
    verbs:
      - get
      - watch
      - list
      - create
      - delete
  - apiGroups:
      - metrics.k8s.io
    resources:
      - pods
      - nodes
    verbs:
      - get
      - list
      - watch
---
# Source: testkube/charts/testkube-api/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: testworkflows-role-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
rules:
  - apiGroups:
      - testworkflows.testkube.io
    resources:
      - testworkflows
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - testworkflows.testkube.io
    resources:
      - testworkflowtemplates
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: executors-crb-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: executors-role-release-name
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: default
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: jobs-crb-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: jobs-role-release-name
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: default
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: scripts-crb-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: script-role-release-name
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: default
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tests-crb-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: test-role-release-name
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: default
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: secrets-crb-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: secrets-role-release-name
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: default
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: testsuites-crb-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: testsuite-role-release-name
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: default
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: webhooks-crb-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: webhook-role-release-name
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: default
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: configmaps-crb-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: configmaps-role-release-name
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: default
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: testsources-crb-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: testsource-role-release-name
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: default
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tests-job-crb-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tests-job-role-release-name
subjects:
  - kind: ServiceAccount
    name: testkube-api-server-tests-job
    namespace: default
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: testtriggers-crb-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: testtriggers-role-release-name
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: default
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: persistentvolumeclaims-crb-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: persistentvolumeclaims-role-release-name
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: default
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: testworkflows-crb-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: testworkflows-role-release-name
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: default
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: testexecutions-crb-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: testexecution-role-release-name
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: default
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: testsuiteexecutions-crb-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: testsuiteexecution-role-release-name
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: default
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: templates-crb-release-name
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: template-role-release-name
subjects:
  - kind: ServiceAccount
    name: testkube-api-server
    namespace: default
---
# Source: testkube/charts/mongodb/templates/standalone/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: testkube-mongodb
  namespace: "default"
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-13.10.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: "mongodb"
      port: 27017
      targetPort: mongodb
      nodePort: null
  selector:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: mongodb
---
# Source: testkube/charts/nats/templates/headless-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: nats
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nats
    app.kubernetes.io/version: 2.10.9
    helm.sh/chart: nats-1.1.7
  name: release-name-nats-headless
spec:
  clusterIP: None
  ports:
  - appProtocol: tcp
    name: nats
    port: 4222
    targetPort: nats
  - appProtocol: http
    name: monitor
    port: 8222
    targetPort: monitor
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: nats
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: nats
---
# Source: testkube/charts/nats/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: nats
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nats
    app.kubernetes.io/version: 2.10.9
    helm.sh/chart: nats-1.1.7
  name: release-name-nats
spec:
  ports:
  - appProtocol: tcp
    name: nats
    port: 4222
    targetPort: nats
  selector:
    app.kubernetes.io/component: nats
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: nats
---
# Source: testkube/charts/testkube-api/templates/minio.yaml
apiVersion: v1
kind: Service
metadata:
  # This name uniquely identifies the service
  name: testkube-minio-service-default
  labels:
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 9000
      protocol: TCP
    - name: web
      port: 9090
      protocol: TCP
    - name: https
      port: 9443
      protocol: TCP
  selector:
    # Looks for labels `app:minio` in the namespace and applies the spec
    app: testkube-minio-default
---
# Source: testkube/charts/testkube-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: testkube-api-server
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
spec:
  type: ClusterIP
  ports:
    - port: 8088
      targetPort: 8088
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
---
# Source: testkube/charts/testkube-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: testkube-operator-controller-manager-metrics-service
  labels:
    app.kubernetes.io/name: testkube-operator
    app.kubernetes.io/instance: release-name
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
# Source: testkube/charts/testkube-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: testkube-operator-webhook-service
  labels:
  namespace: default
spec:
  type: ClusterIP
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
# Source: testkube/charts/mongodb/templates/standalone/dep-sts.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: testkube-mongodb
  namespace: "default"
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-13.10.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: mongodb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb
        helm.sh/chart: mongodb-13.10.1
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: mongodb
    spec:
      
      serviceAccountName: testkube-mongodb
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mongodb
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: mongodb
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
      securityContext:
        fsGroup: 1001
        sysctls: []
      
      containers:
        - name: mongodb
          image: docker.io/zcube/bitnami-compat-mongodb:6.0.5-debian-11-r64
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: MONGODB_SYSTEM_LOG_VERBOSITY
              value: "0"
            - name: MONGODB_DISABLE_SYSTEM_LOG
              value: "no"
            - name: MONGODB_DISABLE_JAVASCRIPT
              value: "no"
            - name: MONGODB_ENABLE_JOURNAL
              value: "yes"
            - name: MONGODB_PORT_NUMBER
              value: "27017"
            - name: MONGODB_ENABLE_IPV6
              value: "no"
            - name: MONGODB_ENABLE_DIRECTORY_PER_DB
              value: "no"
          ports:
            - name: mongodb
              containerPort: 27017
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 10
            exec:
              command:
                - /bitnami/scripts/ping-mongodb.sh
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bitnami/scripts/readiness-probe.sh
          resources:
            limits: {}
            requests:
              cpu: 150m
              memory: 100Mi
          volumeMounts:
            - name: datadir
              mountPath: /bitnami/mongodb
              subPath: 
            - name: common-scripts
              mountPath: /bitnami/scripts
      volumes:
        - name: common-scripts
          configMap:
            name: testkube-mongodb-common-scripts
            defaultMode: 0550
        - name: datadir
          persistentVolumeClaim:
            claimName: testkube-mongodb
---
# Source: testkube/charts/nats/templates/nats-box/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: nats-box
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nats
    app.kubernetes.io/version: 2.10.9
    helm.sh/chart: nats-1.1.7
  name: release-name-nats-box
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: nats-box
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: nats
  template:
    metadata:
      labels:
        app.kubernetes.io/component: nats-box
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: nats
        app.kubernetes.io/version: 2.10.9
        helm.sh/chart: nats-1.1.7
    spec:
      containers:
      - args:
        - trap true INT TERM; sleep infinity & wait
        command:
        - sh
        - -ec
        - |
          work_dir="$(pwd)"
          mkdir -p "$XDG_CONFIG_HOME/nats"
          cd "$XDG_CONFIG_HOME/nats"
          if ! [ -s context ]; then
            ln -s /etc/nats-contexts context
          fi
          if ! [ -f context.txt ]; then
            echo -n "default" > context.txt
          fi
          cd "$work_dir"
          exec sh -ec "$0"
        image: natsio/nats-box:0.14.1
        name: nats-box
        volumeMounts:
        - mountPath: /etc/nats-contexts
          name: contexts
      enableServiceLinks: false
      tolerations:
      - effect: NoSchedule
        key: kubernetes.io/arch
        operator: Equal
        value: arm64
      volumes:
      - name: contexts
        secret:
          secretName: release-name-nats-box-contexts
---
# Source: testkube/charts/testkube-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: testkube-api-server
  labels:
    app.kubernetes.io/version: "1.17.29"
    helm.sh/chart: testkube-api-1.17.29
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: api-server
    app.kubernetes.io/instance: release-name
  annotations:
    checksum/config: 88fa91a49d239e976c0bf54e7a0a44c1938a6ad11fb9282cd2ba938e64c1e6c6
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: api-server
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/config: 88fa91a49d239e976c0bf54e7a0a44c1938a6ad11fb9282cd2ba938e64c1e6c6
      labels:
        app.kubernetes.io/name: api-server
        app.kubernetes.io/instance: release-name
    spec:
      
      serviceAccountName: testkube-api-server
      containers:
        - name: testkube-api
          env:
            - name: APISERVER_PORT
              value: "8088"
            - name: API_MONGO_DSN
              value: "mongodb://testkube-mongodb:27017"
            - name: API_MONGO_ALLOW_DISK_USE
              value: "true"
            - name: NATS_URI
              value: "nats://release-name-nats"
            - name: "NATS_SECURE"
              value: "false"
            - name: POSTMANEXECUTOR_URI
              value: ""
            - name: TESTKUBE_ANALYTICS_ENABLED
              value: "true"
            - name: SLACK_TOKEN
              value: ""
            - name: "STORAGE_ENDPOINT"
              value:  "testkube-minio-service-default:9000"
            - name: "STORAGE_BUCKET"
              value:  "testkube-artifacts"
            - name: "STORAGE_EXPIRATION"
              value:  "0"
            - name: "STORAGE_ACCESSKEYID"
              value: "minio"
            - name: "STORAGE_SECRETACCESSKEY"
              value: "minio123"
            - name: "STORAGE_REGION"
              value: ""
            - name: "STORAGE_TOKEN"
              value: ""
            - name: "STORAGE_SSL"
              value:  "false"
            - name: "STORAGE_SKIP_VERIFY"
              value:  "false"
            - name: "SCRAPPERENABLED"
              value:  "true"
            - name: "COMPRESSARTIFACTS"
              value:  "true"
            - name: "LOGS_BUCKET"
              value:  "testkube-logs"
            - name: "LOGS_STORAGE"
              value:  "minio"
            - name: TESTKUBE_NAMESPACE
              value: "default"
            - name: JOB_SERVICE_ACCOUNT_NAME
              value: testkube-api-server-tests-job
            - name: APISERVER_FULLNAME
              value: "testkube-api-server"
            - name: APISERVER_CONFIG
              value: "testkube-api-server-config-default"
            - name: APISERVER_HTTP_READBUFFERSIZE
              value: "8192"
            - name: TESTKUBE_OAUTH_CLIENTID
              value:  ""
            - name: TESTKUBE_OAUTH_CLIENTSECRET
              value:  ""
            - name: TESTKUBE_OAUTH_PROVIDER
              value:  "github"
            - name: TESTKUBE_OAUTH_SCOPES
              value:  ""
            - name: TESTKUBE_CLOUD_URL
              value:  "agent.testkube.io:443"
            - name: TESTKUBE_WATCHER_NAMESPACES
              value: ""
            - name: TESTKUBE_CONFIG_DIR
              value: /app/config
            - name: TESTKUBE_REGISTRY
              value:  
            - name: TESTKUBE_POD_START_TIMEOUT
              value:  "30m"
            - name: CDEVENTS_TARGET
              value: ""
            - name: TESTKUBE_DASHBOARD_URI
              value: ""
            - name: TESTKUBE_CLUSTER_NAME
              value: ""
            - name: TESTKUBE_HELMCHART_VERSION
              valueFrom:
                configMapKeyRef:
                  name: testkube-global-config
                  key: helmchartVersion
            - name: ENABLE_SECRETS_ENDPOINT
              value: "false"
            - name: DISABLE_MONGO_MIGRATIONS
              value: "false"
            - name: DISABLE_SECRET_CREATION
              value: "false"
            - name: TESTKUBE_DEFAULT_STORAGE_CLASS_NAME
              value: ""
            - name: TESTKUBE_TW_TOOLKIT_IMAGE
              value: "docker.io/kubeshop/testkube-tw-toolkit:1.17.29"
            - name: TESTKUBE_TW_INIT_IMAGE
              value: "docker.io/kubeshop/testkube-tw-init:1.17.29"
          image: docker.io/kubeshop/testkube-api-server:1.17.29
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8088
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 15
            httpGet:
              path: /health
              port: 8088
              scheme: HTTP
          readinessProbe:
            initialDelaySeconds: 30
            httpGet:
              path: /health
              port: 8088
              scheme: HTTP
          resources:
            requests:
              cpu: 200m
              memory: 200Mi
          volumeMounts:
            - mountPath: /app/config
              name: testkube-config
          securityContext:
            {}
      securityContext:
        {}
      volumes:
        - name: testkube-config
          configMap:
            name: testkube-api-server
      tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
---
# Source: testkube/charts/testkube-api/templates/minio.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  # This name uniquely identifies the Deployment
  name: testkube-minio-default
  labels:
spec:
  replicas: 1
  selector:
    matchLabels:
      app: testkube-minio-default # has to match .spec.template.metadata.labels
  strategy:
    # Specifies the strategy used to replace old Pods by new ones
    # Refer: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
    type: Recreate
  template:
    metadata:
      labels:
      # This label is used as a selector in Service definition
        app: testkube-minio-default
    spec:
      
      # Volumes used by this deployment
      volumes:
        - name: data
          # This volume is based on PVC
          persistentVolumeClaim:
            # Name of the PVC created earlier
            claimName: testkube-minio-pv-claim-default
      containers:
        - name: testkube-minio
          # Volume mounts for this container
          volumeMounts:
            # Volume 'data' is mounted to path '/data'
            - name: data
              mountPath: "/data"
          # Pulls the lastest Minio image from Docker Hub
          image: docker.io/minio/minio:RELEASE.2023-09-16T01-01-47Z
          imagePullPolicy: IfNotPresent
          args:
            - server
            - /data
            - --console-address
            - ":9090"
          env:
            # MinIO access key and secret key
            - name: MINIO_ROOT_USER
              value: minio
            - name: MINIO_ROOT_PASSWORD
              value: minio123
            - name: CONSOLE_PORT
              value: "9090"
            - name: CONSOLE_TLS_PORT
              value: "9443"
          ports:
            - containerPort: 9000
              name: http
            - containerPort: 9090
              name: web
            - containerPort: 9443
              name: https
          # Readiness probe detects situations when MinIO server instance
          # is not ready to accept traffic. Kubernetes doesn't forward
          # traffic to the pod while readiness checks fail.
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: 9000
            initialDelaySeconds: 3
            periodSeconds: 10
          # Liveness probe detects situations where MinIO server instance
          # is not working properly and needs restart. Kubernetes automatically
          # restarts the pods if liveness checks fail.
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
            initialDelaySeconds: 3
            periodSeconds: 10
          securityContext:
            {}
      securityContext:
        {}
      tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
---
# Source: testkube/charts/testkube-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: testkube-operator-controller-manager
  namespace: default
  labels:
    control-plane: controller-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      
      containers:
      - name: kube-rbac-proxy
        args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --v=10
        - --logtostderr=true
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9443
          name: https
        securityContext:
          readOnlyRootFilesystem: true
      - name: manager
        args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: docker.io/kubeshop/testkube-operator:1.17.15
        imagePullPolicy: 
        env:
        - name: APISERVER_FULLNAME
          value: "testkube-api-server"
        - name: APISERVER_PORT
          value: "8088"
        - name: APISERVER_TEMPLATE_CRONJOB
          value:
              "ICAgIGFwaVZlcnNpb246IGJhdGNoL3YxCiAgICBraW5kOiBDcm9uSm9iCiAgICBtZXRhZGF0YToKICAgICAgbmFtZTogInt7IC5OYW1lIH19IgogICAgICBuYW1lc3BhY2U6IHt7IC5OYW1lc3BhY2UgfX0KICAgICAgbGFiZWxzOgogICAgICAgIHRlc3RrdWJlOiB7eyAuUmVzb3VyY2VVUkkgfX0KICAgIHt7LSBpZiAuQXJnb0NEU3luYyB9fQogICAgICBvd25lclJlZmVyZW5jZXM6CiAgICAgIC0gYXBpVmVyc2lvbiB7eyAuR3JvdXAgfX0ve3sgLlZlcnNpb24gfX0KICAgICAgICBraW5kOiB7eyAuUmVzb3VyY2UgfX0KICAgICAgICBuYW1lOiB7eyAuSWQgfX0KICAgICAgICB1aWQ6IHt7IC5VSUQgfX0KICAgIHt7LSBlbmQgfX0KICAgIHNwZWM6CiAgICAgIHNjaGVkdWxlOiAie3sgLlNjaGVkdWxlIH19IgogICAgICBjb25jdXJyZW5jeVBvbGljeTogRm9yYmlkCiAgICAgIGpvYlRlbXBsYXRlOgogICAgICAgIHNwZWM6CiAgICAgICAgICB0ZW1wbGF0ZToKICAgICAgICAgICAgc3BlYzoKICAgICAgICAgICAgICBjb250YWluZXJzOgogICAgICAgICAgICAgIC0gbmFtZTogY3VybGltYWdlCiAgICAgICAgICAgICAgICB7ey0gaWYgLlJlZ2lzdHJ5IH19CiAgICAgICAgICAgICAgICBpbWFnZToge3sgLlJlZ2lzdHJ5IH19L2N1cmxpbWFnZXMvY3VybAogICAgICAgICAgICAgICAge3stIGVsc2UgfX0KICAgICAgICAgICAgICAgIGltYWdlOiBjdXJsaW1hZ2VzL2N1cmwKICAgICAgICAgICAgICAgIHt7LSBlbmQgfX0KICAgICAgICAgICAgICAgIGltYWdlUHVsbFBvbGljeTogSWZOb3RQcmVzZW50CiAgICAgICAgICAgICAgICBjb21tYW5kOgogICAgICAgICAgICAgICAgLSBzaAogICAgICAgICAgICAgICAgLSAtYwogICAgICAgICAgICAgICAgYXJnczoKICAgICAgICAgICAgICAgIC0gJ2N1cmwgLVggUE9TVCAtSCAiQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uIiAtZCAnJ3t7IC5EYXRhIH19JycgImh0dHA6Ly97eyAuU2VydmljZU5hbWUgfX06e3sgLlNlcnZpY2VQb3J0fX0vdjEve3sgLlJlc291cmNlVVJJIH19L3t7IC5JZCB9fS9leGVjdXRpb25zIicKICAgICAgICAgICAgICByZXN0YXJ0UG9saWN5OiBOZXZlcgogICAgICAgICAgYmFja29mZkxpbWl0OiAwCiAgICAgICAgICB0dGxTZWNvbmRzQWZ0ZXJGaW5pc2hlZDogMTgwCiAgICA="
        - name: APISERVER_REGISTRY
          value:  
        - name: NATS_URI
          value: "nats://release-name-nats"
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 3
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 3
          periodSeconds: 10
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      securityContext:
        {}
      serviceAccountName: testkube-operator-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
# Source: testkube/charts/nats/templates/stateful-set.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: nats
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nats
    app.kubernetes.io/version: 2.10.9
    helm.sh/chart: nats-1.1.7
  name: release-name-nats
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: nats
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: nats
  serviceName: release-name-nats-headless
  template:
    metadata:
      annotations:
        checksum/config: d76633f19ddeea3c493cb3341af2396b7fde46eb1b6d5978612fdbc6f0785605
      labels:
        app.kubernetes.io/component: nats
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: nats
        app.kubernetes.io/version: 2.10.9
        helm.sh/chart: nats-1.1.7
    spec:
      containers:
      - args:
        - --config
        - /etc/nats-config/nats.conf
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SERVER_NAME
          value: $(POD_NAME)
        image: nats:2.10.9-alpine
        lifecycle:
          preStop:
            exec:
              command:
              - nats-server
              - -sl=ldm=/var/run/nats/nats.pid
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz?js-enabled-only=true
            port: monitor
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: nats
        ports:
        - containerPort: 4222
          name: nats
        - containerPort: 8222
          name: monitor
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz?js-server-only=true
            port: monitor
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        startupProbe:
          failureThreshold: 90
          httpGet:
            path: /healthz
            port: monitor
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        volumeMounts:
        - mountPath: /etc/nats-config
          name: config
        - mountPath: /var/run/nats
          name: pid
        - mountPath: /data
          name: release-name-nats-js
      - args:
        - -pid
        - /var/run/nats/nats.pid
        - -config
        - /etc/nats-config/nats.conf
        image: natsio/nats-server-config-reloader:0.14.1
        name: reloader
        volumeMounts:
        - mountPath: /var/run/nats
          name: pid
        - mountPath: /etc/nats-config
          name: config
      enableServiceLinks: false
      shareProcessNamespace: true
      volumes:
      - configMap:
          name: release-name-nats-config
        name: config
      - emptyDir: {}
        name: pid
  volumeClaimTemplates:
  - metadata:
      name: release-name-nats-js
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
---
# Source: testkube/charts/testkube-api/templates/role.yaml
---
---
# Source: testkube/charts/testkube-api/templates/rolebinding.yaml
---
---
# Source: testkube/charts/testkube-operator/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: release-name-testkube-operator-webhook-admission
  annotations:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/version: "1.17.15"
    helm.sh/chart: testkube-operator-1.17.15
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: testkube-operator
    app.kubernetes.io/instance: release-name
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: testkube-operator-webhook-service
      namespace: default
      path: /validate-tests-testkube-io-v1-testtrigger
  failurePolicy: Fail
  name: vtesttrigger.kb.io
  rules:
  - apiGroups:
    - tests.testkube.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - testtriggers
    scope: Namespaced
  sideEffects: None
---
# Source: testkube/charts/testkube-operator/templates/pre-upgrade-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-operator-pre-upgrade-sa
  namespace: default
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "3"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
---
# Source: testkube/charts/testkube-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: testkube-operator-webhook-cert-mgr
  namespace: default
  labels:
    app.kubernetes.io/version: "1.17.15"
    helm.sh/chart: testkube-operator-1.17.15
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: testkube-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: admission-webhook
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
---
# Source: testkube/templates/pre-upgrade-sa-nats.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "nats-upgrade"
  labels:
  annotations:
    "helm.sh/hook": pre-upgrade,post-upgrade
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
---
# Source: testkube/templates/pre-upgrade-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "mongodb-upgrade"
  labels:
    app.kubernetes.io/component: mongodb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: mongodb-upgrade
  annotations:
    "helm.sh/hook": pre-upgrade,post-upgrade
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
---
# Source: testkube/charts/testkube-operator/templates/pre-upgrade-sa.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-operator-pre-upgrade-role
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-weight": "3"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
rules:
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["create","delete","get","list","patch","update","watch"]
---
# Source: testkube/charts/testkube-operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-webhook-cert-mgr
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/version: "1.17.15"
    helm.sh/chart: testkube-operator-1.17.15
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: testkube-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: admission-webhook
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - create
  - delete
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - get
  - update
- apiGroups:
  - "apiextensions.k8s.io"
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - update
---
# Source: testkube/charts/testkube-operator/templates/pre-upgrade-sa.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-operator-pre-upgrade-rolebinding
  namespace: default
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-weight": "3"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-operator-pre-upgrade-role
subjects:
  - kind: ServiceAccount
    name: release-name-operator-pre-upgrade-sa
    namespace: default
---
# Source: testkube/charts/testkube-operator/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-operator-webhook-cert-mgr
  namespace: default
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/version: "1.17.15"
    helm.sh/chart: testkube-operator-1.17.15
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: testkube-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: admission-webhook
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-webhook-cert-mgr
subjects:
  - kind: ServiceAccount
    name: testkube-operator-webhook-cert-mgr
    namespace: default
---
# Source: testkube/templates/pre-upgrade-sa-nats.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: "nats-upgrade"
  labels:
  annotations:
    "helm.sh/hook": pre-upgrade,post-upgrade
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
rules:
  - apiGroups: ["apps"]
    resources: ["deployments", "deployments/scale", "statefulsets"]
    verbs: ["create","delete","get","list","patch","update","watch"]
---
# Source: testkube/templates/pre-upgrade-sa.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: "mongodb-upgrade"
  labels:
    app.kubernetes.io/component: mongodb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: mongodb-upgrade
  annotations:
    "helm.sh/hook": pre-upgrade,post-upgrade
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
rules:
  - apiGroups: ["apps"]
    resources: ["deployments", "deployments/scale"]
    verbs: ["create","delete","get","list","patch","update","watch"]
---
# Source: testkube/templates/pre-upgrade-sa-nats.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "nats-upgrade"
  labels:
  annotations:
    "helm.sh/hook": pre-upgrade,post-upgrade
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "nats-upgrade"
subjects:
  - kind: ServiceAccount
    name: "nats-upgrade"
---
# Source: testkube/templates/pre-upgrade-sa.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "mongodb-upgrade"
  labels:
    app.kubernetes.io/component: mongodb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: mongodb-upgrade
  annotations:
    "helm.sh/hook": pre-upgrade,post-upgrade
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "mongodb-upgrade"
subjects:
  - kind: ServiceAccount
    name: "mongodb-upgrade"
---
# Source: testkube/charts/nats/templates/tests/request-reply.yaml
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/component: test-request-reply
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nats
    app.kubernetes.io/version: 2.10.9
    helm.sh/chart: nats-1.1.7
  name: release-name-nats-test-request-reply
spec:
  containers:
  - args:
    - nats reply --echo echo & pid="$!"; sleep 1; nats request echo hi > /tmp/resp;
      kill "$pid"; wait; grep -qF hi /tmp/resp
    command:
    - sh
    - -ec
    - |
      work_dir="$(pwd)"
      mkdir -p "$XDG_CONFIG_HOME/nats"
      cd "$XDG_CONFIG_HOME/nats"
      if ! [ -s context ]; then
        ln -s /etc/nats-contexts context
      fi
      if ! [ -f context.txt ]; then
        echo -n "default" > context.txt
      fi
      cd "$work_dir"
      exec sh -ec "$0"
    image: natsio/nats-box:0.14.1
    name: nats-box
    volumeMounts:
    - mountPath: /etc/nats-contexts
      name: contexts
  enableServiceLinks: false
  restartPolicy: Never
  tolerations:
  - effect: NoSchedule
    key: kubernetes.io/arch
    operator: Equal
    value: arm64
  volumes:
  - name: contexts
    secret:
      secretName: release-name-nats-box-contexts
---
# Source: testkube/charts/testkube-operator/templates/pre-upgrade.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-operator-pre-upgrade
  labels:
    helm.sh/chart: "testkube-operator-1.17.15"
    job-name: release-name-operator-pre-upgrade
  annotations:
    "helm.sh/hook": pre-upgrade, pre-install
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": before-hook-creation, hook-succeeded
spec:
  ttlSecondsAfterFinished: 100
  template:
    metadata:
      name: release-name-operator-pre-upgrade
      labels:
        app.kubernetes.io/component: testkube-operator
        app.kubernetes.io/name: release-name-operator-pre-upgrade
      annotations:
    spec:
      serviceAccountName:  release-name-operator-pre-upgrade-sa
      
      containers:
      - name: kubectl
        image: docker.io/bitnami/kubectl:1.28.2
        imagePullPolicy: IfNotPresent
        command:
        - /bin/bash
        - -c
        - >
            NAMESPACE=default
            echo "Checking if namespace ${NAMESPACE} exists"
              if kubectl get namespaces ${NAMESPACE}
                then echo "Namespace already exists";
              else
                echo "creating namespace ${NAMESPACE}"
                kubectl create namespace ${NAMESPACE};
              fi
        securityContext:
          {}
      securityContext:
        {}
      restartPolicy: Never
      tolerations: 
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
---
# Source: testkube/charts/testkube-operator/templates/webhook-cert-create.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: webhook-cert-create
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "6"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/version: "1.17.15"
    helm.sh/chart: testkube-operator-1.17.15
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: testkube-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: admission-webhook
  namespace: default
spec:
  ttlSecondsAfterFinished: 100
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/version: "1.17.15"
        helm.sh/chart: testkube-operator-1.17.15
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: testkube-operator
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: admission-webhook
    spec:
      
      initContainers:
        - name: migrate
          image: docker.io/rancher/kubectl:v1.23.7
          imagePullPolicy: IfNotPresent
          args:
            - delete
            - secret
            - webhook-server-cert
            - --namespace
            - default
            - --ignore-not-found
          securityContext:
            readOnlyRootFilesystem: true
      containers:
        - name: create
          image: docker.io/dpejcev/kube-webhook-certgen:1.0.11
          imagePullPolicy: Always
          args:
            - create
            - --host
            - testkube-operator-webhook-service.default,testkube-operator-webhook-service.default.svc
            - --namespace
            - default
            - --secret-name
            - webhook-server-cert
            - --key-name
            - tls.key
            - --cert-name
            - tls.crt
            - --ca-name
            - ca.crt
          securityContext:
            readOnlyRootFilesystem: true
      restartPolicy: OnFailure
      serviceAccountName: testkube-operator-webhook-cert-mgr
      nodeSelector: 
        kubernetes.io/os: linux
      tolerations: 
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
  backoffLimit: 5
---
# Source: testkube/charts/testkube-operator/templates/webhook-cert-patch.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: webhook-cert-patch
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "6"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/version: "1.17.15"
    helm.sh/chart: testkube-operator-1.17.15
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: testkube-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: admission-webhook
  namespace: default
spec:
  ttlSecondsAfterFinished: 100
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/version: "1.17.15"
        helm.sh/chart: testkube-operator-1.17.15
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: testkube-operator
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: admission-webhook
    spec:
      
      containers:
        - name: patch
          image: docker.io/dpejcev/kube-webhook-certgen:1.0.11
          imagePullPolicy: Always
          args:
            - patch
            - --namespace
            - default
            - --secret-name
            - webhook-server-cert
            - --webhook-name
            - release-name-testkube-operator-webhook-admission
            - --patch-validating=true
            - --patch-mutating=false
            - --crd-api-groups
            - tests.testkube.io,executor.testkube.io
          securityContext:
            readOnlyRootFilesystem: true
      restartPolicy: Never
      serviceAccountName: testkube-operator-webhook-cert-mgr
      nodeSelector: 
        kubernetes.io/os: linux
      tolerations: 
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
  backoffLimit: 1
---
# Source: testkube/templates/pre-upgrade-nats.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "nats-upgrade"
  labels:
    helm.sh/chart: "testkube-1.17.40"
    job-name: pre-upgrade
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  ttlSecondsAfterFinished: 100
  template:
    metadata:
      name: "nats-upgrade"
      labels:
        app.kubernetes.io/component: nats
        app.kubernetes.io/name: "nats-upgrade"
    spec:
      serviceAccountName: "nats-upgrade"
      
      containers:
      - name: kubectl
        image: docker.io/bitnami/kubectl:1.28.2
        imagePullPolicy: IfNotPresent
        command:
        - /bin/bash
        - -c
        - >
            export deployment_name=$(kubectl get deployments -n default -o custom-columns=NAME:.metadata.name | grep 'box');
            export sts_name=$(kubectl get sts -n default -o custom-columns=NAME:.metadata.name | grep 'nats');
            export current_nats_version=$(kubectl get sts $sts_name -o=jsonpath='{$.metadata.labels}' -n default | awk -F'chart' '{print $2}' | awk -F'[^0-9]+' '{ print $2"."$3"."$4 }');

            if [ "$current_nats_version" = "0.19.1" ];
              then kubectl delete deployment $deployment_name -n default;
                   kubectl delete sts $sts_name -n default;
              else echo "NATS version is up-to-date";
            fi
        securityContext:
          {}
      securityContext:
        {}
      restartPolicy: Never
      tolerations: 
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
---
# Source: testkube/templates/pre-upgrade.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "mongodb-upgrade"
  labels:
    app.kubernetes.io/component: mongodb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: mongodb-upgrade
    helm.sh/chart: "testkube-1.17.40"
    job-name: pre-upgrade
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  ttlSecondsAfterFinished: 100
  template:
    metadata:
      name: "mongodb-upgrade"
      labels:
        app.kubernetes.io/component: mongodb
        app.kubernetes.io/name: "mongodb-upgrade"
    spec:
      serviceAccountName: "mongodb-upgrade"
      
      containers:
      - name: kubectl
        image: docker.io/bitnami/kubectl:1.28.2
        imagePullPolicy: IfNotPresent
        command:
        - /bin/bash
        - -c
        - >
            export current_mongodb_version=$(kubectl get deployment release-name-mongodb -o=jsonpath='{$.spec.template.metadata.labels}' -n default | awk -F'helm.sh/chart' '{print $2}' | awk -F'[^0-9]+' '{ print $2 }');
            if [ "$current_mongodb_version" -eq "12" ];
              then kubectl scale deployment release-name-mongodb --replicas=0 -n default;
              else echo "MongoDB is up-to-date";
            fi
        securityContext:
          {}
      securityContext:
        {}
      restartPolicy: Never
      tolerations: 
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
---
# Source: testkube/charts/testkube-api/templates/testworkflows/builtin-templates/artillery.yaml
kind: TestWorkflowTemplate
apiVersion: testworkflows.testkube.io/v1
metadata:
  name: official--artillery--beta
  labels:
    testkube.io/name: Artillery
    testkube.io/wizard: enabled
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "19"
    helm.sh/hook-delete-policy: hook-failed,before-hook-creation
    testkube.io/categories: Load & Performance
    testkube.io/description: Run Artillery tests
    testkube.io/icon: artillery
    testkube.io/example: |
      config:
        target: "https://testkube.kubeshop.io/"
        phases:
        - duration: 1
          arrivalRate: 1
      scenarios:
      - flow:
          - get:
              url: "/"
          - think: 0.1
spec:
  config:
    version:
      description: Artillery version to use
      type: string
      default: 2.0.9
    artillery_binary:
      description: Artillery binary path
      type: string
      default: "/home/node/artillery/bin/run" # "run", or "artillery" (for older images)
    run:
      description: Run command
      type: string
      default: "artillery run"
  steps:
  - name: Run Artillery tests
    run:
      image: "artilleryio/artillery:{{ config.version }}"
      shell: |
        artillery() { {{ config.artillery_binary }} $@; }
        {{ config.run }}
---
# Source: testkube/charts/testkube-api/templates/testworkflows/builtin-templates/cypress.yaml
kind: TestWorkflowTemplate
apiVersion: testworkflows.testkube.io/v1
metadata:
  name: official--cypress--beta
  labels:
    testkube.io/name: Cypress
    testkube.io/wizard: enabled
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "19"
    helm.sh/hook-delete-policy: hook-failed,before-hook-creation
    testkube.io/categories: E2E
    testkube.io/description: Run Cypress tests
    testkube.io/icon: cypress
spec:
  config:
    dependencies_command:
      description: Command to install dependencies
      type: string
      default: npm install
    version:
      description: Cypress version to use
      type: string
      default: 13.6.4
    run:
      description: Run command
      type: string
      default: "npx cypress run"
  container:
    image: "cypress/included:{{ config.version }}"
  steps:
  - name: Install dependencies
    shell: "{{ config.dependencies_command }}"
  - name: Run Cypress tests
    shell: "{{ config.run }}"
---
# Source: testkube/charts/testkube-api/templates/testworkflows/builtin-templates/gradle.yaml
kind: TestWorkflowTemplate
apiVersion: testworkflows.testkube.io/v1
metadata:
  name: official--gradle--beta
  labels:
    testkube.io/name: Gradle
    testkube.io/wizard: enabled
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "19"
    helm.sh/hook-delete-policy: hook-failed,before-hook-creation
    testkube.io/categories: Other
    testkube.io/description: Gradle
    testkube.io/icon: gradle
spec:
  config:
    version:
      description: Gradle version to use
      type: string
      default: 8.7.0-jdk21-alpine
    run:
      description: Run command
      type: string
      default: "gradle --no-daemon test"
  steps:
  - name: Run Gradle command
    run:
      image: "gradle:{{ config.version }}"
      shell: "{{ config.run }}"
---
# Source: testkube/charts/testkube-api/templates/testworkflows/builtin-templates/jmeter.yaml
kind: TestWorkflowTemplate
apiVersion: testworkflows.testkube.io/v1
metadata:
  name: official--jmeter--beta
  labels:
    testkube.io/name: JMeter
    testkube.io/wizard: enabled
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "19"
    helm.sh/hook-delete-policy: hook-failed,before-hook-creation
    testkube.io/categories: Load & Performance
    testkube.io/description: Run JMeter Plan
    testkube.io/icon: jmeter
spec:
  config:
    version:
      description: JMeter version to use
      type: string
      default: "5.5"
    run:
      description: Run command
      type: string
      default: "jmeter -n"
  steps:
  - name: Run k6 tests
    run:
      image: "justb4/jmeter:{{ config.version }}"
      shell: "{{ config.run }}"
---
# Source: testkube/charts/testkube-api/templates/testworkflows/builtin-templates/k6.yaml
kind: TestWorkflowTemplate
apiVersion: testworkflows.testkube.io/v1
metadata:
  name: official--k6--beta
  labels:
    testkube.io/name: k6
    testkube.io/wizard: enabled
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "19"
    helm.sh/hook-delete-policy: hook-failed,before-hook-creation
    testkube.io/categories: Load & Performance
    testkube.io/description: Run k6 tests
    testkube.io/icon: k6
    testkube.io/example: |
      import http from 'k6/http';
      import { sleep } from 'k6';
      export default function () {
          http.get('https://test.k6.io');
          sleep(1);
      };
spec:
  config:
    version:
      description: k6 version to use
      type: string
      default: 0.49.0
    run:
      description: Run command
      type: string
      default: "k6 run"
  steps:
  - name: Run k6 tests
    run:
      image: "grafana/k6:{{ config.version }}"
      shell: "{{ config.run }}"
---
# Source: testkube/charts/testkube-api/templates/testworkflows/builtin-templates/maven.yaml
kind: TestWorkflowTemplate
apiVersion: testworkflows.testkube.io/v1
metadata:
  name: official--maven--beta
  labels:
    testkube.io/name: Maven
    testkube.io/wizard: enabled
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "19"
    helm.sh/hook-delete-policy: hook-failed,before-hook-creation
    testkube.io/categories: Other
    testkube.io/description: Maven
    testkube.io/icon: maven
spec:
  config:
    version:
      description: Maven version to use
      type: string
      default: 3.9.6-eclipse-temurin-22-alpine
    run:
      description: Run command
      type: string
      default: "mvn test"
  steps:
  - name: Run Maven command
    run:
      image: "maven:{{ config.version }}"
      shell: "{{ config.run }}"
---
# Source: testkube/charts/testkube-api/templates/testworkflows/builtin-templates/playwright.yaml
kind: TestWorkflowTemplate
apiVersion: testworkflows.testkube.io/v1
metadata:
  name: official--playwright--beta
  labels:
    testkube.io/name: Playwright
    testkube.io/wizard: enabled
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "19"
    helm.sh/hook-delete-policy: hook-failed,before-hook-creation
    testkube.io/categories: E2E
    testkube.io/description: Run Playwright tests
    testkube.io/icon: playwright
spec:
  config:
    dependencies_command:
      description: Command to install dependencies
      type: string
      default: npm ci
    version:
      description: Playwright version to use
      type: string
      default: 1.43.0
    run:
      description: Run command
      type: string
      default: "npx playwright test"
  container:
    image: "mcr.microsoft.com/playwright:v{{ config.version }}"
  steps:
  - name: Install dependencies
    shell: "{{ config.dependencies_command }}"
  - name: Run Playwright tests
    run:
      shell: "{{ config.run }}"
---
# Source: testkube/charts/testkube-api/templates/testworkflows/builtin-templates/postman.yaml
kind: TestWorkflowTemplate
apiVersion: testworkflows.testkube.io/v1
metadata:
  name: official--postman--beta
  labels:
    testkube.io/name: Postman
    testkube.io/wizard: enabled
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "19"
    helm.sh/hook-delete-policy: hook-failed,before-hook-creation
    testkube.io/categories: API
    testkube.io/description: Run Postman tests
    testkube.io/icon: postman
spec:
  config:
    version:
      description: Postman version to use
      type: string
      default: 6-alpine
    run:
      description: Run command
      type: string
      default: "newman run"
  steps:
  - name: Run Postman tests
    run:
      image: "postman/newman:{{ config.version }}"
      shell: "{{ config.run }}"
---
# Source: testkube/charts/testkube-api/templates/testworkflows/builtin-templates/serviceaccount.yaml
apiVersion: testworkflows.testkube.io/v1
kind: TestWorkflowTemplate
metadata:
  name: serviceaccount--fullaccess
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "19"
    helm.sh/hook-delete-policy: hook-failed,before-hook-creation
spec:
  pod:
    serviceAccountName: testkube-api-server
