---
# Source: owl/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-owl
  labels:
    helm.sh/chart: owl-0.5.1
    app.kubernetes.io/name: owl
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.11.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: owl/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name
  namespace: "default"
  labels:
    helm.sh/chart: owl-0.5.1
    app.kubernetes.io/name: owl
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.11.2"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  db.password: ""
  token.key: ""
---
# Source: owl/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name
  namespace: "default"
  labels:
    helm.sh/chart: owl-0.5.1
    app.kubernetes.io/name: owl
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.11.2"
    app.kubernetes.io/managed-by: Helm
data:
  db.user: ""
  db.host: ""
  db.ssl: "disable"
  db.database: ""
  db.port: "5432"

  token.enable: "true"
  token.issuer: ""

  sender.strategy: "0"
  sender.buff: "0"

  console.tokenProvider: ""
---
# Source: owl/templates/console/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-owl-console
  labels:
    helm.sh/chart: owl-0.5.1
    app.kubernetes.io/name: owl
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.11.2"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: console
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: owl
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: console
---
# Source: owl/templates/messager/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-owl-messager
  labels:
    helm.sh/chart: owl-0.5.1
    app.kubernetes.io/name: owl
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.11.2"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: messager
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: owl
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: messager
---
# Source: owl/templates/console/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-owl-console
  labels:
    helm.sh/chart: owl-0.5.1
    app.kubernetes.io/name: owl
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.11.2"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: console
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: owl
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: console
  template:
    metadata:
      labels:
        app.kubernetes.io/name: owl
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: console
    spec:
      serviceAccountName: release-name-owl
      securityContext:
        {}
      containers:
        - name: owl
          securityContext:
            {}
          image: "lishimeng/owl-console:v0.11.2"
          imagePullPolicy: IfNotPresent
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: db.password
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  name: release-name
                  key: db.user
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: release-name
                  key: db.host
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: release-name
                  key: db.port
            - name: DB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: release-name
                  key: db.database
            - name: DB_SSL
              valueFrom:
                configMapKeyRef:
                  name: release-name
                  key: db.ssl
            - name: CONSOLE_TOKENPROVIDER
              valueFrom:
                configMapKeyRef:
                  name: release-name
                  key: console.tokenProvider
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            {}
---
# Source: owl/templates/messager/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-owl-messager
  labels:
    helm.sh/chart: owl-0.5.1
    app.kubernetes.io/name: owl
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.11.2"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: messager
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: owl
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: messager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: owl
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: messager
    spec:
      serviceAccountName: release-name-owl
      securityContext:
        {}
      containers:
        - name: owl
          securityContext:
            {}
          image: "lishimeng/owl-messager:v0.11.2"
          imagePullPolicy: IfNotPresent
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: db.password
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  name: release-name
                  key: db.user
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: release-name
                  key: db.host
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: release-name
                  key: db.port
            - name: DB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: release-name
                  key: db.database
            - name: DB_SSL
              valueFrom:
                configMapKeyRef:
                  name: release-name
                  key: db.ssl

            - name: TOKEN_ENABLE
              valueFrom:
                configMapKeyRef:
                  name: release-name
                  key: token.enable
            - name: TOKEN_ISSUER
              valueFrom:
                configMapKeyRef:
                  name: release-name
                  key: token.issuer
            - name: TOKEN_KEY
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: token.key

            - name: SENDER_STRATEGY
              valueFrom:
                configMapKeyRef:
                  name: release-name
                  key: sender.strategy
            - name: SENDER_BUFF
              valueFrom:
                configMapKeyRef:
                  name: release-name
                  key: sender.buff

          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            {}
