---
# Source: haproxy/templates/pdb.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: release-name-haproxy
  labels:
    app.kubernetes.io/name: haproxy
    helm.sh/chart: haproxy-2.5.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: haproxy
      app.kubernetes.io/instance: release-name
---
# Source: haproxy/templates/configmap-ldap-tls.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "release-name-haproxy-ldap-tls"
  labels:
    app.kubernetes.io/name: haproxy
    helm.sh/chart: haproxy-2.5.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  haproxy.cfg: |
    global
      log stdout format raw local0
      maxconn  2048
      tune.bufsize  400000
      tune.ssl.default-dh-param  2048

    defaults
      log global
      option dontlognull
      timeout connect 5s
      timeout client 10s
      timeout server 10s
      timeout  check 15s
      timeout  check 15s
    
    frontend stats
      mode http
      bind *:9000
      stats enable
      stats uri /stats
      stats refresh 3s
      acl server_stopping stopping
      acl service_down nbsrv(backend) eq 0
      monitor-uri /healthz
      monitor fail if server_stopping || service_down
      option dontlog-normal
      option httplog
      http-request use-service prometheus-exporter if { path /metrics }

    frontend frontend
      bind *:30636
      mode tcp
      option tcplog
      default_backend backend

    backend backend
      server ldap  ssl verify required ca-file /etc/ssl/certs/ca-certificates.crt
---
# Source: haproxy/templates/metrics-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-haproxy-metrics
  namespace: "default"
  labels:
    app.kubernetes.io/name: haproxy
    helm.sh/chart: haproxy-2.5.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "metrics"
spec:
  type: ClusterIP
  ports:
    - name: metrics
      port: 9000
      targetPort: metrics
  selector:
    app.kubernetes.io/name: haproxy
    app.kubernetes.io/instance: release-name
---
# Source: haproxy/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-haproxy
  labels:
    app.kubernetes.io/name: haproxy
    helm.sh/chart: haproxy-2.5.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 30636
      targetPort: 30636
      protocol: TCP
      name: frontend
  selector:
    app.kubernetes.io/name: haproxy
    app.kubernetes.io/instance: release-name
---
# Source: haproxy/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-haproxy
  labels:
    app.kubernetes.io/name: haproxy
    helm.sh/chart: haproxy-2.5.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: haproxy
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: haproxy
        app.kubernetes.io/instance: release-name
      annotations:
        checksum/configmap: 92be512f60004e41f3b6f28c8c020d3e8657a362e526f2c699d47d47539b8758
    spec:
      containers:
        - name: haproxy
          image: "ghcr.io/vshn/haproxy-with-mysql:1.0.0"
          imagePullPolicy: IfNotPresent
          env:
          - name: CHECK_AUTH_CREDENTIALS
            valueFrom:
              secretKeyRef:
                name: release-name-haproxy-check-auth 
                key: auth-credentials
                optional: true
          ports:
            - name: frontend
              containerPort: 30636
              protocol: TCP
            - name: metrics
              containerPort: 9000
          readinessProbe:
            httpGet:
              path: /healthz
              port: metrics
            initialDelaySeconds: 3
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics
            initialDelaySeconds: 120
            periodSeconds: 20
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - name: haproxy-config
              mountPath: /etc/haproxy/
      volumes:
        - name: haproxy-config
          configMap:
            name: "release-name-haproxy-ldap-tls"
---
# Source: haproxy/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-haproxy-test-connection"
  labels:
    app.kubernetes.io/name: haproxy
    helm.sh/chart: haproxy-2.5.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['release-name-haproxy:30636']
  restartPolicy: Never
