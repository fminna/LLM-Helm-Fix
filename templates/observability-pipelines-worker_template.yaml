---
# Source: observability-pipelines-worker/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-observability-pipelines-worker
  namespace: default
  labels: 
    helm.sh/chart: observability-pipelines-worker-2.0.0
    app.kubernetes.io/name: observability-pipelines-worker
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "2.0.0"
---
# Source: observability-pipelines-worker/templates/secret-api-key.yaml
apiVersion: v1
kind: Secret
metadata:
  name: "release-name-observability-pipelines-worker-apikey"
  namespace: default
  labels: 
    helm.sh/chart: observability-pipelines-worker-2.0.0
    app.kubernetes.io/name: observability-pipelines-worker
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "2.0.0"
type: Opaque
data:
  api-key: "TUlTU0lORw=="
---
# Source: observability-pipelines-worker/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-observability-pipelines-worker
  namespace: default
  labels: 
    helm.sh/chart: observability-pipelines-worker-2.0.0
    app.kubernetes.io/name: observability-pipelines-worker
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "2.0.0"
spec:
  replicas: 1
  podManagementPolicy: OrderedReady
  selector:
    matchLabels: 
      app.kubernetes.io/name: observability-pipelines-worker
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/managed-by: Helm
  serviceName: release-name-observability-pipelines-worker-headless
  template:
    metadata:
      labels: 
        app.kubernetes.io/name: observability-pipelines-worker
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
      annotations:
    spec: 
      serviceAccountName: release-name-observability-pipelines-worker
      dnsPolicy: ClusterFirst
      containers:
        - name: worker
          image: "gcr.io/datadoghq/observability-pipelines-worker:2.0.0"
          imagePullPolicy: IfNotPresent
          args: 
            - run
          env:
            - name: DD_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "release-name-observability-pipelines-worker-apikey"
                  key: api-key
            - name: DD_OP_PIPELINE_ID
              value: 
            - name: DD_SITE
              value: "datadoghq.com"
            - name: DD_OP_DATA_DIR
              value: "/var/lib/observability-pipelines-worker"
            - name: DD_OP_API_ENABLED
              value: "false"
            - name: DD_OP_API_PLAYGROUND
              value: "true"
            - name: DD_OP_API_ADDRESS
              value: "127.0.0.1:8686"
          ports:
          volumeMounts:
            - name: data
              mountPath: "/var/lib/observability-pipelines-worker"
      terminationGracePeriodSeconds: 60
      volumes:
        - name: data
          emptyDir: {}
  volumeClaimTemplates:
