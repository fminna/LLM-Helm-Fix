---
# Source: orchestra-kube-oidc-proxy/templates/jetstack.yaml
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: kube-oidc-proxy-release-name
    app.kubernetes.io/name: openunison
    app.kubernetes.io/instance: openunison-release-name
    app.kubernetes.io/component: kube-oidc-proxy
    app.kubernetes.io/part-of: openunison
  name: kube-oidc-proxy-
  namespace: default
  
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 8443
    name: https-kube-oidc-proxy
  selector:
    app: kube-oidc-proxy-release-name
  type: "ClusterIP"
---
# Source: orchestra-kube-oidc-proxy/templates/jetstack.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kube-oidc-proxy-release-name
    app.kubernetes.io/name: openunison
    app.kubernetes.io/instance: openunison-release-name
    app.kubernetes.io/component: kube-oidc-proxy
    app.kubernetes.io/part-of: openunison
  name: kube-oidc-proxy-release-name
  namespace: default
  
  annotations:
    argocd.argoproj.io/sync-wave: "40"
  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kube-oidc-proxy-release-name
  template:
    metadata:
      labels:
        app: kube-oidc-proxy-release-name
        app.kubernetes.io/name: openunison
        app.kubernetes.io/instance: openunison-release-name
        app.kubernetes.io/component: kube-oidc-proxy
        app.kubernetes.io/part-of: openunison
    spec:
      serviceAccountName: openunison-
      containers:
      - image: ghcr.io/tremolosecurity/kube-oidc-proxy:1.0.6
        ports:
        - containerPort: 8443
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 10
        name: kube-oidc-proxy-release-name
        command: ["kube-oidc-proxy"]
        args:
          - "--secure-port=8443"
          - "--tls-cert-file=/etc/oidc/tls/crt.pem"
          - "--tls-private-key-file=/etc/oidc/tls/key.pem"
          - "--oidc-client-id=kubernetes"
          - "--oidc-issuer-url=https://k8sou.apps.domain.int/auth/idp/k8sIdp"
          - "--oidc-username-claim=sub"
          - "--oidc-groups-claim=groups"
          
          - "--oidc-ca-file=/etc/oidc/oidc-ca.pem"
          
          
          
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - "ALL"
          
          seccompProfile:
            type: RuntimeDefault
          runAsNonRoot: true
          runAsUser: 431
          runAsGroup: 433
          
        volumeMounts:
          
          - name: kube-oidc-proxy-config
            mountPath: /etc/oidc
            readOnly: true
          
          - name: kube-oidc-proxy-tls
            mountPath: /etc/oidc/tls
            readOnly: true
          
        
      volumes:
        
        - name: kube-oidc-proxy-config
          secret:
            secretName: ou-tls-certificate
            items:
            - key: tls.crt
              path: oidc-ca.pem
        
        
        - name: kube-oidc-proxy-tls
          secret:
            secretName: unison-tls
            items:
            - key: tls.crt
              path: crt.pem
            - key: tls.key
              path: key.pem
      tolerations:
      
      
      nodeSelector: {}
      

      
      automountServiceAccountToken: true
      
      securityContext:
        fsGroup: 10001
        supplementalGroups: [10001]
        seccompProfile:
          type: RuntimeDefault
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
