---
# Source: kubernetes-tagger/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kubernetes-tagger
  labels:
    app.kubernetes.io/name: kubernetes-tagger
    helm.sh/chart: kubernetes-tagger-1.1.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
# Source: kubernetes-tagger/templates/configmap.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: release-name-kubernetes-tagger
  labels:
    app.kubernetes.io/name: kubernetes-tagger
    helm.sh/chart: kubernetes-tagger-1.1.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    namespace: default
    
    aws:
      region: eu-west-3
    rules: []
---
# Source: kubernetes-tagger/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: release-name-kubernetes-tagger
  labels:
    app.kubernetes.io/name: kubernetes-tagger
    helm.sh/chart: kubernetes-tagger-1.1.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
      - services
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
      - services
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
---
# Source: kubernetes-tagger/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: release-name-kubernetes-tagger
  labels:
    app.kubernetes.io/name: kubernetes-tagger
    helm.sh/chart: kubernetes-tagger-1.1.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-kubernetes-tagger
subjects:
  - kind: ServiceAccount
    name: release-name-kubernetes-tagger
    namespace: default
---
# Source: kubernetes-tagger/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: kubernetes-tagger
    helm.sh/chart: kubernetes-tagger-1.1.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  name: release-name-kubernetes-tagger
spec:
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kubernetes-tagger
    app.kubernetes.io/instance: release-name
  type: "ClusterIP"
---
# Source: kubernetes-tagger/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kubernetes-tagger
  labels:
    app.kubernetes.io/name: kubernetes-tagger
    helm.sh/chart: kubernetes-tagger-1.1.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubernetes-tagger
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/config: 9f7ab320a281c178bfd4fa52e81061e6cec2d9d7f88ffd698b51a4ae9d0ec68f
      labels:
        app.kubernetes.io/name: kubernetes-tagger
        app.kubernetes.io/instance: release-name
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: kubernetes-tagger
          image: "oxynozeta/kubernetes-tagger:1.3.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8085
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          resources:
            
            {}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/kubernetes-tagger
              readOnly: true
      serviceAccountName: release-name-kubernetes-tagger
      volumes:
        - name: config-volume
          configMap:
            name: release-name-kubernetes-tagger
