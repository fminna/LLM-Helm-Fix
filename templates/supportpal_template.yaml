---
# Source: supportpal/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-supportpal
  labels:
    helm.sh/chart: supportpal-0.1.6
    app.kubernetes.io/name: supportpal
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: supportpal/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-supportpal
  labels:
    helm.sh/chart: supportpal-0.1.6
    app.kubernetes.io/name: supportpal
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "10Gi"
---
# Source: supportpal/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-supportpal
  labels:
    helm.sh/chart: supportpal-0.1.6
    app.kubernetes.io/name: supportpal
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: supportpal
    app.kubernetes.io/instance: release-name
---
# Source: supportpal/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-supportpal
  labels:
    helm.sh/chart: supportpal-0.1.6
    app.kubernetes.io/name: supportpal
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: supportpal
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: supportpal-0.1.6
        app.kubernetes.io/name: supportpal
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.16.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: release-name-supportpal
      securityContext:
        {}
      initContainers:
        - name: init-container
          image: "public.ecr.aws/supportpal/helpdesk-monolithic:4.0.4"
          command: ["sh", "-c", "if command -v sudo >/dev/null 2>&1; then sudo rm -f /etc/apt/sources.list.d/*; else rm -f /etc/apt/sources.list.d/*; fi && \
                            if command -v sudo >/dev/null 2>&1; then sudo apt-get update && sudo apt-get install -y rsync; else apt-get update && apt-get install -y rsync; fi && \
                            if [ -d /var/www/supportpal/storage/ ]; then \
                              if command -v sudo >/dev/null 2>&1; then \
                                sudo rsync -av --ignore-errors /var/www/supportpal/storage/* /mnt/storage/; \
                              else \
                                rsync -av --ignore-errors /var/www/supportpal/storage/* /mnt/storage/; \
                              fi; \
                            fi; \
                            if [ -d /var/www/supportpal/config/production/ ]; then \
                              if command -v sudo >/dev/null 2>&1; then \
                                sudo rsync -av --ignore-errors /var/www/supportpal/config/production/* /mnt/production/; \
                              else \
                                rsync -av --ignore-errors /var/www/supportpal/config/production/* /mnt/production/; \
                              fi; \
                            fi; \
                            if [ -d /var/www/supportpal/addons/ ]; then \
                              if command -v sudo >/dev/null 2>&1; then \
                                sudo rsync -av --ignore-errors /var/www/supportpal/addons/* /mnt/addons/; \
                              else \
                                rsync -av --ignore-errors /var/www/supportpal/addons/* /mnt/addons/; \
                              fi; \
                            fi; \
                            if [ -d /customization/ ]; then \
                              if command -v sudo >/dev/null 2>&1; then \
                                sudo rsync -av --ignore-errors /customization/* /mnt/customization/; \
                              else \
                                rsync -av --ignore-errors /customization/* /mnt/customization/; \
                              fi; \
                            fi; \
                            if [ ! -d /mnt/log/apache2 ]; then \
                              if command -v sudo >/dev/null 2>&1; then \
                                sudo mkdir -p /mnt/log/apache2; \
                              else \
                                mkdir -p /mnt/log/apache2; \
                              fi; \
                            fi; \
                            owner=$(stat -c '%U' /var/www/supportpal);
                            if command -v sudo >/dev/null 2>&1; then \
                              sudo find /mnt -type d -exec chown $owner:$owner {} +; \
                            else \
                              find /mnt -type d -exec chown $owner:$owner {} +; \
                            fi; "]
          volumeMounts:
            - name: release-name-supportpal
              mountPath: /mnt/production/
              subPath: supportpal_configs
            - name: release-name-supportpal
              mountPath: /mnt/storage/
              subPath: supportpal_storage
            - name: release-name-supportpal
              mountPath: /mnt/addons/
              subPath: supportpal_addons
            - name: release-name-supportpal
              mountPath: /mnt/log/
              subPath: supportpal_logs
            - name: release-name-supportpal
              mountPath: /mnt/customization/
              subPath: supportpal_customization
      containers:
        - name: supportpal
          securityContext:
            {}
          image: "public.ecr.aws/supportpal/helpdesk-monolithic:4.0.4"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
          resources:
            limits:
              cpu: 2
              memory: 3148Mi
            requests:
              cpu: 1
              memory: 2048Mi
          volumeMounts:
            - name: release-name-supportpal
              mountPath: /var/lib/mysql/
              subPath: supportpal_db
            - name: release-name-supportpal
              mountPath: /var/www/supportpal/config/production/
              subPath: supportpal_configs
            - name: release-name-supportpal
              mountPath: /redis-data/
              subPath: supportpal_redis
            - name: release-name-supportpal
              mountPath: /var/www/supportpal/storage/
              subPath: supportpal_storage
            - name: release-name-supportpal
              mountPath: /var/log/
              subPath: supportpal_logs
            - name: release-name-supportpal
              mountPath: /var/www/supportpal/addons/
              subPath: supportpal_addons
            - name: release-name-supportpal
              mountPath: /caddy/
              subPath: supportpal_caddy
            - name: release-name-supportpal
              mountPath: /meilisearch/
              subPath: supportpal_meilisearch
            - name: release-name-supportpal
              mountPath: /customization/
              subPath: supportpal_customization
      volumes:
        - name: release-name-supportpal
          persistentVolumeClaim:
            claimName: release-name-supportpal
---
# Source: supportpal/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-supportpal
  labels:
    helm.sh/chart: supportpal-0.1.6
    app.kubernetes.io/name: supportpal
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    acme.cert-manager.io/http01-edit-in-place: "true"
    cert-manager.io/cluster-issuer: letsencrypt
    cert-manager.io/issue-temporary-certificate: "true"
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options SAMEORIGIN always;
      add_header X-Content-Type-Options nosniff always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy strict-origin-when-cross-origin always;
      set $user_request 0;
      if ($request_method = GET) {
          set $user_request "GET";
      }
      if ($request_uri ~* "^(.*/)index\.php/?(.*)$") {
          set $user_request "${user_request}-index.php";
      }
      if ($user_request = "GET-index.php") {
          return 301 $1$2;
      }
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - "supportpal.example.com"
      secretName: helpdesk-tls
  rules:
    - host: "supportpal.example.com"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: release-name-supportpal
                port:
                  number: 8080
---
# Source: supportpal/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-supportpal-test-connection"
  labels:
    helm.sh/chart: supportpal-0.1.6
    app.kubernetes.io/name: supportpal
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-supportpal:8080']
  restartPolicy: Never
