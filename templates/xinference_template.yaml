---
# Source: xinference/templates/scripts.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: xinference-scripts
  labels:
    helm.sh/chart: xinference-0.7.5
    app.kubernetes.io/name: xinference
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
data:
  start.sh: |
    #!/bin/bash
    xinference --host 0.0.0.0
---
# Source: xinference/templates/clusterdefinition.yaml
apiVersion: apps.kubeblocks.io/v1alpha1
kind: ClusterDefinition
metadata:
  name: xinference
  labels:
    helm.sh/chart: xinference-0.7.5
    app.kubernetes.io/name: xinference
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  componentDefs:
    - name: xinference
      workloadType: Stateful
      characterType: xinference
      scriptSpecs:
        - name: xinference-scripts
          templateRef: xinference-scripts
          namespace: default
          volumeName: scripts
          defaultMode: 493
      service:
        ports:
          - name: xinference
            port: 9997
            targetPort: xinference
      podSpec:
        containers:
          - name: xinference
            imagePullPolicy: IfNotPresent
            securityContext:
              runAsUser: 0
              privileged: true
              allowPrivilegeEscalation: true
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
              - name: scripts
                mountPath: /scripts
            command:
              - /scripts/start.sh
            ports:
              - name: xinference
                containerPort: 9997
  connectionCredential:
    username: root
    password: ""
---
# Source: xinference/templates/clusterversion.yaml
apiVersion: apps.kubeblocks.io/v1alpha1
kind: ClusterVersion
metadata:
  name: xinference-latest
  labels:
    helm.sh/chart: xinference-0.7.5
    app.kubernetes.io/name: xinference
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubeblocks.io/is-default-cluster-version: "true"
spec:
  clusterDefinitionRef: xinference
  componentVersions:
    - componentDefRef: xinference
      versionsContext:
        containers:
          - name: xinference
            image:  docker.io/apecloud/xinference:latest-amd64
---
# Source: xinference/templates/clusterversion.yaml
apiVersion: apps.kubeblocks.io/v1alpha1
kind: ClusterVersion
metadata:
  name: xinference-cpu-latest
  labels:
    helm.sh/chart: xinference-0.7.5
    app.kubernetes.io/name: xinference
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  clusterDefinitionRef: xinference
  componentVersions:
    - componentDefRef: xinference
      versionsContext:
        initContainers:
          - name: download
            image: infracreate-registry.cn-zhangjiakou.cr.aliyuncs.com/apecloud/baichuan2-7b-gguf:ggml-model-q4
            command: ["sh", "-c", "cp /models/ggml-model-q4.gguf /models-target/"]
            volumeMounts:
              - name: models
                mountPath: /models-target
        containers:
          - name: xinference
            image: docker.io/apecloud/xinference:latest-cpu
            volumeMounts:
              - name: models
                mountPath: /models
              - name: scripts
                mountPath: /scripts
