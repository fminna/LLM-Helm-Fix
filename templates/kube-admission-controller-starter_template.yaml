---
# Source: kube-admission-controller-starter/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kube-admission-controller-starter
  labels:
    helm.sh/chart: kube-admission-controller-starter-0.2.0
    app.kubernetes.io/name: kube-admission-controller-starter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kube-admission-controller-starter/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-config
  namespace: default
data:
  production.json: |
    {
      "imageAcl": {
        "allowed": [],
        "blocked": ["badbox"],
        "strictMode": false
      },
      "log": {
        "level": "info"
      },
      "tls": {
        "enabled": true
      }
    }
---
# Source: kube-admission-controller-starter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kube-admission-controller-starter
  labels:
    helm.sh/chart: kube-admission-controller-starter-0.2.0
    app.kubernetes.io/name: kube-admission-controller-starter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: https
      protocol: TCP
      name: https
  selector:
    app.kubernetes.io/name: kube-admission-controller-starter
    app.kubernetes.io/instance: release-name
---
# Source: kube-admission-controller-starter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kube-admission-controller-starter
  labels:
    helm.sh/chart: kube-admission-controller-starter-0.2.0
    app.kubernetes.io/name: kube-admission-controller-starter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-admission-controller-starter
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kube-admission-controller-starter
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-kube-admission-controller-starter
      securityContext:
        {}
      volumes:
        - name: tls
          secret:
            secretName: kube-admission-controller-starter
            optional: false
        - name: config-volume
          configMap:
            name: release-name-config
            items:
              - key: production.json
                path: production.json
      containers:
        - volumeMounts:
          - name: tls
            mountPath: '/var/run/secrets/tls'
            readOnly: true
          - name: config-volume
            mountPath: /var/run/config/
            readOnly: true
          name: kube-admission-controller-starter
          securityContext:
            {}
          image: "ghcr.io/curium-rocks/kube-admission-controller-starter:main"
          imagePullPolicy: Always
          env:
          - name: NODE_CONFIG_DIR
            value: /var/run/config:/usr/src/app/config
          ports:
            - name: https
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: https
          readinessProbe:
            tcpSocket:
              port: https
          resources:
            limits:
              cpu: "0.2"
              memory: 128Mi
            requests:
              cpu: "0.1"
              memory: 64Mi
---
# Source: kube-admission-controller-starter/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: release-name-kube-admission-controller-starter
  labels:
    helm.sh/chart: kube-admission-controller-starter-0.2.0
    app.kubernetes.io/name: kube-admission-controller-starter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: release-name-kube-admission-controller-starter
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
---
# Source: kube-admission-controller-starter/templates/certificates.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: release-name-ca-certificate
spec:
  isCA: true
  commonName: release-name-self-signed-ca
  secretName: release-name-root-ca-secret
  privateKey:
    algorithm: ECDSA
    size: 256
  issuerRef:
    name: release-name-cluster-issuer
    kind: ClusterIssuer
    group: cert-manager.io
---
# Source: kube-admission-controller-starter/templates/certificates.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: release-name-tls-certificate-kube-admission-controller-starter
spec:
  secretName: kube-admission-controller-starter
  commonName: "release-name-kube-admission-controller-starter.default.svc"
  dnsNames:
    - "release-name-kube-admission-controller-starter"
    - "release-name-kube-admission-controller-starter.default"
    - "release-name-kube-admission-controller-starter.default.svc"
    - "release-name-kube-admission-controller-starter.default.svc.cluster.local"
  usages:
    - server auth
  issuerRef:
    name: release-name-issuer
    kind: Issuer
    group: cert-manager.io
---
# Source: kube-admission-controller-starter/templates/certificates.yaml
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: release-name-cluster-issuer
spec:
  selfSigned: {}
---
# Source: kube-admission-controller-starter/templates/certificates.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: release-name-issuer
spec:
  ca:
    secretName: release-name-root-ca-secret
---
# Source: kube-admission-controller-starter/templates/validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: release-name-kube-admission-controller-starter-hooks
webhooks:
- name:  release-name-kube-admission-controller-starter.default.svc
  admissionReviewVersions: ["v1"]
  sideEffects: None
  timeoutSeconds: 1
  failurePolicy: Ignore
  rules:
  - operations: ["CREATE"]
    apiGroups: ["*"]
    apiVersions: ["*"]
    resources: ["*"]
    scope: "*"
  clientConfig:
    service:
      namespace: default
      name: release-name-kube-admission-controller-starter
      path: /api/v1/admission
---
# Source: kube-admission-controller-starter/templates/self-signed-ca-inject-job.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: default
  name: release-name-post-install-job-sa
  labels:
    helm.sh/chart: kube-admission-controller-starter-0.2.0
    app.kubernetes.io/name: kube-admission-controller-starter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "0"
    "helm.sh/resource-policy": keep
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
---
# Source: kube-admission-controller-starter/templates/self-signed-ca-inject-job.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-ca-inject-scripts
  namespace: default
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "1"
    "helm.sh/resource-policy": delete
    "helm.sh/hook-delete-policy": "before-hook-creation"
data:
  inject-ca.sh: |
    #!/usr/bin/env sh
  
    # Need to wait and watch for the TLS secret to be create
    while ! kubectl get secret "$SECRET_NAME" --namespace "$RELEASE_NAMESPACE"; do echo "Waiting for TLS secret."; sleep 1; done
  
    # Once it's available we need to pull out the CA value
    TLS_PEM=$(kubectl --namespace $RELEASE_NAMESPACE get secret $SECRET_NAME -o jsonpath="{.data['tls\.crt']}")
    echo "$TLS_PEM"
  
    # Once we have the CA value we need to patch the validating webhook
    kubectl --namespace "$RELEASE_NAMESPACE" patch validatingwebhookconfiguration "$HOOK_NAME" -p "{\"webhooks\":[{\"name\":\"$HOOK_SVC_NAME\",\"clientConfig\":{\"caBundle\":\"$TLS_PEM\"}}]}"
---
# Source: kube-admission-controller-starter/templates/self-signed-ca-inject-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-validating-webhook-ca-injector
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "0"
    "helm.sh/resource-policy": delete
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
rules:
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["validatingwebhookconfigurations"]
  resourceNames: ["release-name-kube-admission-controller-starter-hooks"]
  verbs: ["get", "update", "patch"]
---
# Source: kube-admission-controller-starter/templates/self-signed-ca-inject-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-hook-read-secrets-binding
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "1"
    "helm.sh/resource-policy": delete
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
subjects:
- kind: ServiceAccount
  name:  release-name-post-install-job-sa
  namespace: default
roleRef:
  kind: ClusterRole 
  name: release-name-validating-webhook-ca-injector
  apiGroup: rbac.authorization.k8s.io
---
# Source: kube-admission-controller-starter/templates/self-signed-ca-inject-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: release-name-validating-webhook-tls-reader
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "0"
    "helm.sh/resource-policy": delete
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
rules:
- apiGroups: [""]
  resourceNames: ["kube-admission-controller-starter"]
  resources: ["secrets"]
  verbs: ["get"]
---
# Source: kube-admission-controller-starter/templates/self-signed-ca-inject-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-hook-read-secrets-binding
  namespace: default
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "1"
    "helm.sh/resource-policy": delete
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
subjects:
- kind: ServiceAccount
  name:  release-name-post-install-job-sa
  namespace: default
roleRef:
  kind: Role 
  name: release-name-validating-webhook-tls-reader
  apiGroup: rbac.authorization.k8s.io
---
# Source: kube-admission-controller-starter/templates/self-signed-ca-inject-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "release-name-ca-bundle-inject"
  namespace: "default"
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/version: 0.1.0
    helm.sh/chart: "kube-admission-controller-starter-0.2.0"
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "2"
    "helm.sh/resource-policy": delete
    "helm.sh/hook-delete-policy": "before-hook-creation"
spec:
  ttlSecondsAfterFinished: 600
  template:
    metadata:
      name: "release-name"
      namespace: "default"
      labels:
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/instance: "release-name"
        helm.sh/chart: "kube-admission-controller-starter-0.2.0"
    spec:
      securityContext:
        runAsUser: 2000
        runAsGroup: 2000
        fsGroup: 2000
      serviceAccountName: release-name-post-install-job-sa
      restartPolicy: Never
      volumes:
        - name: script
          configMap:
            name: release-name-ca-inject-scripts
            items:
              - key: inject-ca.sh
                path: entry-point.sh
                mode: 0755
      containers:
      - volumeMounts:
          - name: script
            mountPath: /job/
        name: post-install-job
        image: "ghcr.io/curium-rocks/docker-kubectl:main"
        imagePullPolicy: Always
        env:
          - name: SECRET_NAME
            value: "kube-admission-controller-starter"
          - name: RELEASE_NAMESPACE
            value: "default"
          - name: HOOK_NAME
            value: "release-name-kube-admission-controller-starter-hooks"
          - name: HOOK_SVC_NAME
            value: "release-name-kube-admission-controller-starter.default.svc"
        command: ["/job/entry-point.sh"]
