---
# Source: vcverifier/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-vcverifier
  namespace: "default"
  labels:
    app.kubernetes.io/name: vcverifier
    helm.sh/chart: vcverifier-2.3.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.0.1"
    app.kubernetes.io/managed-by: Helm
data:
  server.yaml: |-
    server:
      host: my-verifier.org
      port: 3000
      staticDir: views/static
      templateDir: views/

    m2m:
      authEnabled: false
      clientId: null
      credentialPath: null
      keyPath: null
      keyType: RSAPS256
      signatureType: null
      verificationMethod: null
      
    logging:
      jsonLogging: true
      level: WARN
      logRequests: true
      pathsToSkip:
      - /metrics
      - /health

    verifier:
      host: my-verifier.org
      port: 3000
      staticDir: views/static
      templateDir: views/
    
    configRepo:
      configEndpoint: http://credentials-config:8080/
---
# Source: vcverifier/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-vcverifier
  namespace: "default"
  labels:
    
    app.kubernetes.io/name: vcverifier
    helm.sh/chart: vcverifier-2.3.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 3000
      targetPort: backend
      protocol: TCP
  selector:
    app.kubernetes.io/name: vcverifier
    app.kubernetes.io/instance: release-name
---
# Source: vcverifier/templates/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: release-name-vcverifier
  namespace: "default"
  labels:
    
    app.kubernetes.io/name: vcverifier
    helm.sh/chart: vcverifier-2.3.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: vcverifier
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        
        app.kubernetes.io/name: vcverifier
        helm.sh/chart: vcverifier-2.3.0
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "2.0.1"
        app.kubernetes.io/managed-by: Helm
    spec: 
      serviceAccountName: default
      containers:
        - name: vcverifier
          image: "quay.io/fiware/vcverifier:4.0.1"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: backend
          env:
            - name: CONFIG_FILE
              value: /configs/server.yaml
          livenessProbe:
            httpGet:
              path: /health
              port: backend
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /health
              port: backend
            initialDelaySeconds: 4
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          resources:
            null
          ## workaround for missing db support
          volumeMounts:
            - mountPath: /configs/
              name: config-volume
      volumes:
      - name: config-volume
        configMap:
          name: release-name-vcverifier
