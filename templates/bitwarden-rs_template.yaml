---
# Source: bitwarden-rs/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-bitwarden-rs-config
  labels:
    app.kubernetes.io/name: bitwarden-rs
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - "ReadWriteMany"
  resources:
    requests:
      storage: "1Gi"
---
# Source: bitwarden-rs/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-bitwarden-rs
  labels:
    app.kubernetes.io/name: bitwarden-rs
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: ""
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: http
    - name: websocket
      protocol: TCP
      port: 3012
      targetPort: http
  selector:
    app.kubernetes.io/name: bitwarden-rs
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  type: ClusterIP
---
# Source: bitwarden-rs/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  release-name-bitwarden-rs
  labels:
    app.kubernetes.io/name: bitwarden-rs
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: bitwarden-rs-0.1.7
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: bitwarden-rs
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/managed-by: Helm
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bitwarden-rs
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
    spec:
      containers:
        - name: bitwarden-rs
          image: "vaultwarden/server:1.27.0-alpine"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
            - name: websocket
              containerPort: 3012
          volumeMounts:
            - mountPath: /data
              name: data
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 2
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 2
            failureThreshold: 5
          resources:
            limits:
              cpu: 1100m
              memory: 32Mi
            requests:
              cpu: 1100m
              memory: 32Mi
      nodeSelector:
        {}
      affinity:
        {}
      tolerations:
        []
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: release-name-bitwarden-rs-config
