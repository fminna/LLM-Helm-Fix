---
# Source: k8s-pvc-tagger/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-k8s-pvc-tagger
  labels:
    helm.sh/chart: k8s-pvc-tagger-2.0.8
    app.kubernetes.io/name: k8s-pvc-tagger
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.0.9"
    app.kubernetes.io/managed-by: Helm
---
# Source: k8s-pvc-tagger/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-k8s-pvc-tagger
rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - watch
---
# Source: k8s-pvc-tagger/templates/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-k8s-pvc-tagger
subjects:
  - kind: ServiceAccount
    name: release-name-k8s-pvc-tagger
    namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-k8s-pvc-tagger
  apiGroup: rbac.authorization.k8s.io
---
# Source: k8s-pvc-tagger/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-k8s-pvc-tagger
rules:
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
    - get
    - update
---
# Source: k8s-pvc-tagger/templates/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-k8s-pvc-tagger
subjects:
  - kind: ServiceAccount
    name: release-name-k8s-pvc-tagger
    namespace: default
roleRef:
  kind: Role
  name: release-name-k8s-pvc-tagger
  apiGroup: rbac.authorization.k8s.io
---
# Source: k8s-pvc-tagger/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-k8s-pvc-tagger
  labels:
    helm.sh/chart: k8s-pvc-tagger-2.0.8
    app.kubernetes.io/name: k8s-pvc-tagger
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.0.9"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8000
    targetPort: http
  - name: metrics
    port: 8001
    targetPort: metrics
  selector:
    app.kubernetes.io/name: k8s-pvc-tagger
    app.kubernetes.io/instance: release-name
---
# Source: k8s-pvc-tagger/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-k8s-pvc-tagger
  labels:
    helm.sh/chart: k8s-pvc-tagger-2.0.8
    app.kubernetes.io/name: k8s-pvc-tagger
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.0.9"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: k8s-pvc-tagger
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: k8s-pvc-tagger
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-k8s-pvc-tagger
      securityContext:
        {}
      containers:
        - name: k8s-pvc-tagger
          args:
            - --lease-id=$(POD_NAME)
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          securityContext:
            {}
          image: "ghcr.io/mtougeron/k8s-pvc-tagger:v1.0.9"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
            - name: metrics
              containerPort: 8001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources:
            {}
      hostNetwork: false
