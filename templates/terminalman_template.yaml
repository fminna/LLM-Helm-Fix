---
# Source: terminalman/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-terminalman
  labels:
    helm.sh/chart: terminalman-0.3.2
    app.kubernetes.io/name: terminalman
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: terminalman/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-terminalman-pvc
  labels:
    app.kubernetes.io/name: terminalman
    helm.sh/chart: terminalman-0.3.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
---
# Source: terminalman/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-terminalman-service
  labels:
    helm.sh/chart: terminalman-0.3.2
    app.kubernetes.io/name: terminalman
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: terminalman
    app.kubernetes.io/instance: release-name
---
# Source: terminalman/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-terminalman
  labels:
    helm.sh/chart: terminalman-0.3.2
    app.kubernetes.io/name: terminalman
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    authproxy.stakater.com/enabled: "true"
    authproxy.stakater.com/source-service-name: release-name-service
    authproxy.stakater.com/upstream-url: "http://localhost:7681/"
    authproxy.stakater.com/client-id: terminalman
    authproxy.stakater.com/client-secret: some_secret
    authproxy.stakater.com/listen: ":80"
    authproxy.stakater.com/discovery-url: http://cloudman-keycloak-http.cloudman.svc.cluster.local/auth/realms/master
    authproxy.stakater.com/oauth-uri: "/terminalman/oauth"
    # authproxy.stakater.com/verbose: "true"
    authproxy.stakater.com/gatekeeper-image: quay.io/keycloak/keycloak-gatekeeper:7.0.1
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: terminalman
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: terminalman
        app.kubernetes.io/instance: release-name
      annotations:
    spec:
      serviceAccountName: release-name-terminalman
      securityContext:
        {}
      containers:
        - name: terminalman
          command: ['ttyd', '--base-path', '/terminalman', 'bash']
          workingDir: /gvl
          securityContext:
            {}
          image: "cloudve/ttyd:latest"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /terminalman/
              port: 80
          readinessProbe:
            httpGet:
              path: /terminalman/
              port: 80
          resources:
            {}
          volumeMounts:
            - name: terminalman-data
              mountPath: /home/terminalman
      volumes:
        - name: terminalman-data
          persistentVolumeClaim:
            claimName: release-name-terminalman-pvc
---
# Source: terminalman/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: release-name-terminalman
  labels:
    helm.sh/chart: terminalman-0.3.2
    app.kubernetes.io/name: terminalman
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
    - host: 
      http:
        paths:
          - path: /terminalman
            backend:
              serviceName: release-name-terminalman-service
              servicePort: 80
---
# Source: terminalman/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-terminalman-test-connection"
  labels:
    helm.sh/chart: terminalman-0.3.2
    app.kubernetes.io/name: terminalman
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-terminalman:80']
  restartPolicy: Never
