---
# Source: egeria-server/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-egeria-server-env
  labels:
    helm.sh/chart: egeria-server-4.3.0
    app.kubernetes.io/name: egeria-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.3"
    app.kubernetes.io/managed-by: Helm
data:
  SERVER_PORT: "8080"
  SERVER_SSL_ENABLED: "false"
  JAVA_APP_JAR: "/deployments/server/omag-server-4.3.jar"
  LOADER_PATH: "/deployments/server/lib"
  OMAG_SERVERCONFIGFILE: "file:/deployments/server/conf/cocoMDS1.yml"
  DEBUG: "false"
---
# Source: egeria-server/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-egeria-server-conf
  labels:
    helm.sh/chart: egeria-server-4.3.0
    app.kubernetes.io/name: egeria-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.3"
    app.kubernetes.io/managed-by: Helm
data:
  cocoMDS1.json: |-
    {
      "class": "OMAGServerConfig",
      "versionId": "V2.0",
      "localServerName": "cocoMDS1",
      "localServerUserId": "OMAGServer",
      "maxPageSize": 1000,
      "accessServicesConfig": [
        {
          "class": "AccessServiceConfig",
          "accessServiceId": 200,
          "accessServiceDevelopmentStatus": "IN_DEVELOPMENT",
          "accessServiceAdminClass": "org.odpi.openmetadata.accessservices.assetcatalog.admin.AssetCatalogAdmin",
          "accessServiceName": "Asset Catalog",
          "accessServiceFullName": "Asset Catalog OMAS",
          "accessServiceURLMarker": "asset-catalog",
          "accessServiceDescription": "Search and understand your assets",
          "accessServiceWiki": "https://egeria-project.org/services/omas/asset-catalog/overview/",
          "accessServiceOperationalStatus": "ENABLED",
          "accessServiceOptions": {
            "SupportedTypesForSearch": [
              "RelationalTable",
              "TabularColumn",
              "TabularFileColumn",
              "RelationalColumn",
              "GlossaryTerm",
              "GlossaryCategory",
              "Process",
              "DataFile",
              "Asset",
              "Application",
              "SoftwareServerCapability"
            ]
          }
        },
        {
          "class": "AccessServiceConfig",
          "accessServiceId": 204,
          "accessServiceDevelopmentStatus": "IN_DEVELOPMENT",
          "accessServiceAdminClass": "org.odpi.openmetadata.accessservices.assetmanager.admin.AssetManagerAdmin",
          "accessServiceName": "Asset Manager",
          "accessServiceFullName": "Asset Manager OMAS",
          "accessServiceURLMarker": "asset-manager",
          "accessServiceDescription": "Manage metadata from a third party asset manager",
          "accessServiceWiki": "https://egeria-project.org/services/omas/asset-manager/overview/",
          "accessServiceOperationalStatus": "ENABLED"
        },
        {
          "class": "AccessServiceConfig",
          "accessServiceId": 210,
          "accessServiceDevelopmentStatus": "TECHNICAL_PREVIEW",
          "accessServiceAdminClass": "org.odpi.openmetadata.accessservices.datamanager.admin.DataManagerAdmin",
          "accessServiceName": "Data Manager",
          "accessServiceFullName": "Data Manager OMAS",
          "accessServiceURLMarker": "data-manager",
          "accessServiceDescription": "Capture changes to the data stores and data set managed by a data manager such as a database server, content manager or file system.",
          "accessServiceWiki": "https://egeria-project.org/services/omas/data-manager/overview/",
          "accessServiceOperationalStatus": "ENABLED"
        }
      ],
      "repositoryServicesConfig": {
        "class": "RepositoryServicesConfig",
        "auditLogConnections": [
          {
            "class": "Connection",
            "connectorType": {
              "class": "ConnectorType",
              "connectorProviderClassName": "org.odpi.openmetadata.adapters.repositoryservices.auditlogstore.console.ConsoleAuditLogStoreProvider"
            },
            "configurationProperties": {
              "supportedSeverities": [
                "Information",
                "Startup",
                "Shutdown"
              ]
            }
          }
        ],
        "localRepositoryConfig": {
          "class": "LocalRepositoryConfig",
          "metadataCollectionId": "838005fc-e09f-4688-af89-58254a155cc6",
          "localRepositoryLocalConnection": {
            "class": "Connection",
            "connectorType": {
              "class": "ConnectorType",
              "connectorProviderClassName": "org.odpi.openmetadata.adapters.repositoryservices.inmemory.repositoryconnector.InMemoryOMRSRepositoryConnectorProvider"
            }
          },
          "localRepositoryRemoteConnection": {
            "class": "Connection",
            "connectorType": {
              "class": "ConnectorType",
              "connectorProviderClassName": "org.odpi.openmetadata.adapters.repositoryservices.rest.repositoryconnector.OMRSRESTRepositoryConnectorProvider"
            },
            "endpoint": {
              "class": "Endpoint",
              "address": "https://localhost:9443/servers/cocoMDS1"
            }
          },
          "eventsToSaveRule": "ALL",
          "eventsToSendRule": "ALL"
        },
        "enterpriseAccessConfig": {
          "class": "EnterpriseAccessConfig",
          "enterpriseMetadataCollectionId": "df77a8e6-ef88-48a6-9462-ce5e9697c347",
          "enterpriseOMRSTopicConnection": {
            "class": "VirtualConnection",
            "connectorType": {
              "class": "ConnectorType",
              "connectorProviderClassName": "org.odpi.openmetadata.repositoryservices.connectors.omrstopic.OMRSTopicProvider"
            },
            "embeddedConnections": [
              {
                "class": "EmbeddedConnection",
                "embeddedConnection": {
                  "class": "Connection",
                  "connectorType": {
                    "class": "ConnectorType",
                    "connectorProviderClassName": "org.odpi.openmetadata.adapters.eventbus.topic.inmemory.InMemoryOpenMetadataTopicProvider"
                  },
                  "endpoint": {
                    "class": "Endpoint",
                    "address": "cocoMDS1.openmetadata.repositoryservices.enterprise.cocoMDS1.OMRSTopic"
                  },
                  "configurationProperties": {
                    "local.server.id": "996892b6-7299-4046-8928-b6687a7818ee"
                  }
                }
              }
            ]
          },
          "enterpriseOMRSTopicProtocolVersion": "V1"
        }
      }
    }
  cocoMDS1.yml: |-
    ---
    class: OMAGServerConfig
    localServerName: cocoMDS1
    localServerUserId: OMAGServer
    maxPageSize: 1000
    accessServicesConfig:
      - class: AccessServiceConfig
        accessServiceAdminClass: org.odpi.openmetadata.accessservices.assetcatalog.admin.AssetCatalogAdmin
        accessServiceName: Asset Catalog
        accessServiceOperationalStatus: ENABLED
        accessServiceOptions:
          SupportedTypesForSearch:
            - RelationalTable
            - TabularColumn
            - TabularFileColumn
            - RelationalColumn
            - GlossaryTerm
            - GlossaryCategory
            - Process
            - DataFile
            - Asset
            - Application
            - SoftwareServerCapability
      - class: AccessServiceConfig
        accessServiceAdminClass: org.odpi.openmetadata.accessservices.assetmanager.admin.AssetManagerAdmin
        accessServiceName: Asset Manager
        accessServiceOperationalStatus: ENABLED
      - class: AccessServiceConfig
        accessServiceAdminClass: org.odpi.openmetadata.accessservices.datamanager.admin.DataManagerAdmin
        accessServiceName: Data Manager
        accessServiceOperationalStatus: ENABLED
    repositoryServicesConfig:
      class: RepositoryServicesConfig
      auditLogConnections:
        - class: Connection
          connectorType:
            class: ConnectorType
            connectorProviderClassName: org.odpi.openmetadata.adapters.repositoryservices.auditlogstore.console.ConsoleAuditLogStoreProvider
          configurationProperties:
            supportedSeverities:
              - Information
              - Startup
              - Shutdown
      localRepositoryConfig:
        class: LocalRepositoryConfig
        metadataCollectionId: 838005fc-e09f-4688-af89-58254a155cc6
        localRepositoryLocalConnection:
          class: Connection
          connectorType:
            class: ConnectorType
            connectorProviderClassName: org.odpi.openmetadata.adapters.repositoryservices.inmemory.repositoryconnector.InMemoryOMRSRepositoryConnectorProvider
        localRepositoryRemoteConnection:
          class: Connection
          connectorType:
            class: ConnectorType
            connectorProviderClassName: org.odpi.openmetadata.adapters.repositoryservices.rest.repositoryconnector.OMRSRESTRepositoryConnectorProvider
          endpoint:
            class: Endpoint
            address: https://localhost:9443/servers/cocoMDS1
        eventsToSaveRule: ALL
        eventsToSendRule: ALL
      enterpriseAccessConfig:
        class: EnterpriseAccessConfig
        enterpriseMetadataCollectionId: df77a8e6-ef88-48a6-9462-ce5e9697c347
        enterpriseOMRSTopicConnection:
          class: VirtualConnection
          connectorType:
            class: ConnectorType
            connectorProviderClassName: org.odpi.openmetadata.repositoryservices.connectors.omrstopic.OMRSTopicProvider
          embeddedConnections:
            - class: EmbeddedConnection
              embeddedConnection:
                class: Connection
                connectorType:
                  class: ConnectorType
                  connectorProviderClassName: org.odpi.openmetadata.adapters.eventbus.topic.inmemory.InMemoryOpenMetadataTopicProvider
                endpoint:
                  class: Endpoint
                  address: cocoMDS1.openmetadata.repositoryservices.enterprise.cocoMDS1.OMRSTopic
                configurationProperties:
                  local.server.id: 996892b6-7299-4046-8928-b6687a7818ee
        enterpriseOMRSTopicProtocolVersion: V1
---
# Source: egeria-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-egeria-server
  labels:
    helm.sh/chart: egeria-server-4.3.0
    app.kubernetes.io/name: egeria-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.3"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: egeria-server
    app.kubernetes.io/instance: release-name
---
# Source: egeria-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-egeria-server
  labels:
    helm.sh/chart: egeria-server-4.3.0
    app.kubernetes.io/name: egeria-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.3"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: egeria-server
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: egeria-server
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: egeria-server
          securityContext:
            {}
          image: "quay.io/odpi/egeria:4.3"
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name:  release-name-egeria-server-env
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /actuator/health/livenessState
              port: http
          readinessProbe:
            httpGet:
              path: /actuator/health/readinessState
              port: http
          resources:
            {}
          volumeMounts:
            - name: release-name-egeria-server-conf-volume
              mountPath: /deployments/server/conf
              readOnly: true
      volumes:
        - name: release-name-egeria-server-conf-volume
          configMap:
            name: release-name-egeria-server-conf
---
# Source: egeria-server/templates/config.yaml
# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the Egeria project.
---
# Source: egeria-server/templates/deployment.yaml
# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the Egeria project.
---
# Source: egeria-server/templates/hpa.yaml
# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the Egeria project.
---
# Source: egeria-server/templates/ingress.yaml
# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the Egeria project.
---
# Source: egeria-server/templates/service.yaml
# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the Egeria project.
---
# Source: egeria-server/templates/serviceaccount.yaml
# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the Egeria project.
---
# Source: egeria-server/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-egeria-server-test-connection"
  labels:
    helm.sh/chart: egeria-server-4.3.0
    app.kubernetes.io/name: egeria-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-egeria-server:8080']
  restartPolicy: Never
