---
# Source: authn-service/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-authn-service
  labels:
    helm.sh/chart: authn-service-0.10.2
    app.kubernetes.io/name: authn-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.10.1"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: authn-service/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-authn-service
  labels:
    helm.sh/chart: authn-service-0.10.2
    app.kubernetes.io/name: authn-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.10.1"
    app.kubernetes.io/managed-by: Helm
data:
  AUTHN_PORT: "8082"
  AUTHN_DEBUG: "true"
  AUTHN_KUBECONFIG_CLUSTER_NAME: "krateo"
  AUTHN_KUBECONFIG_CRT_EXPIRES_IN: 24h
  AUTHN_KUBERNETES_URL: https://kube-apiserver:6443
  AUTHN_KUBECONFIG_PROXY_URL: https://krateo-gateway.krateo-system.svc:8443
  AUTHN_KUBECONFIG_CACRT: /tmp/ca.crt
  AUTHN_STORE_NAMESPACE: default
  POD_NAMESPACE: default
  AUTHN_CORS: "true"
  AUTHN_DUMP_ENV: "false"
---
# Source: authn-service/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-authn-service
  labels:
    helm.sh/chart: authn-service-0.10.2
    app.kubernetes.io/name: authn-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.10.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - get
  - list
  - create
  - update
# allow creating, deleting and retrieving any CertificateSigningRequest
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - create
  - list
  - delete
  - deletecollection
  - watch
# allow approving a CertificateSigningRequest:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resources:
  - signers
  resourceNames:
  - kubernetes.io/kube-apiserver-client
  verbs:
  - approve
# allow signing a CertificateSigningRequest:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/status
  verbs:
  - update
# krateo basic.authn crd
- apiGroups:
  - basic.authn.krateo.io
  resources:
  - users
  verbs:
  - get
  - list
  - watch
# krateo oauth.authn crd
- apiGroups:
  - oauth.authn.krateo.io
  resources:
  - githubconfigs
  verbs:
  - get
  - list
  - watch
# LDAP crd
- apiGroups:
  - ldap.authn.krateo.io
  resources:
  - ldapconfigs
  verbs:
  - get
  - list
  - watch
---
# Source: authn-service/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-authn-service
  labels:
    helm.sh/chart: authn-service-0.10.2
    app.kubernetes.io/name: authn-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.10.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-authn-service
subjects:
- kind: ServiceAccount
  name: release-name-authn-service
  namespace: default
---
# Source: authn-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-authn-service
  labels:
    helm.sh/chart: authn-service-0.10.2
    app.kubernetes.io/name: authn-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.10.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8082
      targetPort: http
      protocol: TCP
      name: http  
  selector:
    app.kubernetes.io/name: authn-service
    app.kubernetes.io/instance: release-name
---
# Source: authn-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-authn-service
  labels:
    helm.sh/chart: authn-service-0.10.2
    app.kubernetes.io/name: authn-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.10.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: authn-service
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: authn-service-0.10.2
        app.kubernetes.io/name: authn-service
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "0.10.1"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: release-name-authn-service
      securityContext:
        {}
      containers:
        - name: release-name-authn-service
          envFrom:
            - configMapRef:
                name: release-name-authn-service
          securityContext:
            {}
          image: "ghcr.io/krateoplatformops/authn-service:0.10.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8082
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {}
