---
# Source: slack-notifications/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-slack-notifications
  labels:
    helm.sh/chart: slack-notifications-0.1.7
    app.kubernetes.io/name: slack-notifications
    app.kubernetes.io/instance: release-name
spec:
  type: 
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: slack-notifications
    app.kubernetes.io/instance: release-name
---
# Source: slack-notifications/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-slack-notifications
  labels:
    helm.sh/chart: slack-notifications-0.1.7
    app.kubernetes.io/name: slack-notifications
    app.kubernetes.io/instance: release-name
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: slack-notifications
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: slack-notifications
        app.kubernetes.io/instance: release-name
    spec:
      containers:
        - name: slack-notifications
          image: "quay.io/ibmgaragecloud/slack-notifications:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: SLACK_URL
              valueFrom:
                secretKeyRef:
                  name: slack-secret
                  key: SLACK_URL
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
---
# Source: slack-notifications/templates/broker.yaml
apiVersion: eventing.knative.dev/v1
kind: Broker
metadata:
  name: default
---
# Source: slack-notifications/templates/trigger.yaml
apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  name: taskrun-success-trigger
spec:
  broker: default
  filter:
    attributes:
      type: dev.tekton.event.taskrun.successful.v1
  subscriber:
    ref:
     apiVersion: v1
     kind: Service
     name: release-name-slack-notifications
---
# Source: slack-notifications/templates/trigger.yaml
apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  name: taskrun-fail-trigger
spec:
  broker: default
  filter:
    attributes:
      type: dev.tekton.event.taskrun.failed.v1
  subscriber:
    ref:
     apiVersion: v1
     kind: Service
     name: release-name-slack-notifications
---
# Source: slack-notifications/templates/trigger.yaml
apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  name: pipelinerun-success-trigger
spec:
  broker: default
  filter:
    attributes:
      type: dev.tekton.event.pipelinerun.successful.v1
  subscriber:
    ref:
     apiVersion: v1
     kind: Service
     name: release-name-slack-notifications
---
# Source: slack-notifications/templates/trigger.yaml
apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  name: pipelinerun-fail-trigger
spec:
  broker: default
  filter:
    attributes:
      type: dev.tekton.event.pipelinerun.failed.v1
  subscriber:
    ref:
     apiVersion: v1
     kind: Service
     name: release-name-slack-notifications
