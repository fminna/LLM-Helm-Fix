---
# Source: core-provider/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-core-provider
  labels:
    helm.sh/chart: core-provider-0.13.6
    app.kubernetes.io/name: core-provider
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.13.6"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: core-provider/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-core-provider
  labels:
    helm.sh/chart: core-provider-0.13.6
    app.kubernetes.io/name: core-provider
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.13.6"
    app.kubernetes.io/managed-by: Helm
data:
  CORE_PROVIDER_DEBUG: "true"
  CDC_IMAGE_TAG: 0.6.1
---
# Source: core-provider/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-core-provider
rules:
- apiGroups:
  - core.krateo.io
  resources:
  - compositiondefinitions
  - compositiondefinitions/status
  - schemadefinitions
  - schemadefinitions/status
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - '*'
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  - rolebindings
  - clusterroles
  - clusterrolebindings
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
  - update
---
# Source: core-provider/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-core-provider
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name:  release-name-core-provider
subjects:
- kind: ServiceAccount
  name: release-name-core-provider
  namespace: default
---
# Source: core-provider/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-core-provider
  labels:
    helm.sh/chart: core-provider-0.13.6
    app.kubernetes.io/name: core-provider
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.13.6"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: core-provider
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: core-provider-0.13.6
        app.kubernetes.io/name: core-provider
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "0.13.6"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: release-name-core-provider
      securityContext:
        {}
      containers:
        - name: release-name-core-provider
          envFrom:
            - configMapRef:
                name: release-name-core-provider
          securityContext:
            {}
          image: "ghcr.io/krateoplatformops/core-provider:0.13.6"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            null
          readinessProbe:
            null
          resources:
            {}
          volumeMounts:
            - mountPath: /tmp
              name: tmp-dir
      volumes:
        - emptyDir: {}
          name: tmp-dir
