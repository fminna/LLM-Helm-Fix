---
# Source: service-restarter/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "release-name-service-account"
  namespace: "default"
---
# Source: service-restarter/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "release-name-cluster-role"
rules:
- apiGroups: ["extentions", "apps"]
  resources: ["deployments", "daemonsets", "statefulsets"]
  verbs: ["get", "patch"]
---
# Source: service-restarter/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "release-name-cluster-role-binding"
subjects:
- kind: ServiceAccount
  name: "release-name-service-account"
  namespace: "default"
roleRef:
  kind: ClusterRole
  name: "release-name-cluster-role"
  apiGroup: rbac.authorization.k8s.io
---
# Source: service-restarter/templates/cronjobs.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: "restart-ns1-nginx"
  namespace: "default"
spec:
  schedule: "* * * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: "release-name-service-account"
          containers:
          - name: kubectl
            image: "public.ecr.aws/bitnami/kubectl:1.28"
            imagePullPolicy: "IfNotPresent"
            command:
            - sh
            - -c
            args:
            - kubectl -n ns-1 rollout restart deployment nginx
            resources:
              limits:
                cpu: 50m
                memory: 64Mi
              requests:
                cpu: 50m
                memory: 64Mi
          restartPolicy: "OnFailure"
