---
# Source: lte-orc8r/templates/ha.pdb.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: ha
  name: orc8r-ha
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: ha
---
# Source: lte-orc8r/templates/lte.pdb.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: lte
  name: orc8r-lte
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: lte
---
# Source: lte-orc8r/templates/policydb.pdb.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: policydb
  name: orc8r-policydb
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: policydb
---
# Source: lte-orc8r/templates/smsd.pdb.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: smsd
  name: orc8r-smsd
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: smsd
---
# Source: lte-orc8r/templates/subscriberdb.pdb.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: subscriberdb
  name: orc8r-subscriberdb
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: subscriberdb
---
# Source: lte-orc8r/templates/ha.service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: lte-orc8r
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: lte-orc8r
    app.kubernetes.io/part-of: orc8r-app
    helm.sh/chart: lte-orc8r-0.2.1
  name: orc8r-ha
spec:
  ports:
  - name: grpc
    port: 9180
    targetPort: 9119
  selector:
    app.kubernetes.io/component: ha
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: lte-orc8r
  type: ClusterIP
---
# Source: lte-orc8r/templates/lte.service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    orc8r.io/obsidian_handlers_path_prefixes: |
      /magma/v1/lte, /magma/v1/lte/:network_id,
    orc8r.io/state_indexer_types: single_enodeb
    orc8r.io/state_indexer_version: "1"
    orc8r.io/stream_provider_streams: |
      apn_rule_mappings, base_names, network_wide_rules, policydb, rating_groups, subscriberdb,
  labels:
    app.kubernetes.io/component: lte-orc8r
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: lte-orc8r
    app.kubernetes.io/part-of: orc8r-app
    helm.sh/chart: lte-orc8r-0.2.1
    orc8r.io/analytics_collector: "true"
    orc8r.io/mconfig_builder: "true"
    orc8r.io/obsidian_handlers: "true"
    orc8r.io/state_indexer: "true"
    orc8r.io/stream_provider: "true"
  name: orc8r-lte
spec:
  ports:
  - name: grpc
    port: 9180
    targetPort: 9113
  - name: http
    port: 8080
    targetPort: 10113
  selector:
    app.kubernetes.io/component: lte
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: lte-orc8r
  type: ClusterIP
---
# Source: lte-orc8r/templates/policydb.service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    orc8r.io/obsidian_handlers_path_prefixes: |
      /magma/v1/lte/:network_id/policy_qos_profiles, /magma/v1/networks/:network_id/policies, /magma/v1/networks/:network_id/rating_groups
  labels:
    app.kubernetes.io/component: lte-orc8r
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: lte-orc8r
    app.kubernetes.io/part-of: orc8r-app
    helm.sh/chart: lte-orc8r-0.2.1
    orc8r.io/obsidian_handlers: "true"
  name: orc8r-policydb
spec:
  ports:
  - name: grpc
    port: 9180
    targetPort: 9085
  - name: http
    port: 8080
    targetPort: 10085
  selector:
    app.kubernetes.io/component: policydb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: lte-orc8r
  type: ClusterIP
---
# Source: lte-orc8r/templates/smsd.service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    orc8r.io/obsidian_handlers_path_prefixes: /magma/v1/lte/:network_id/sms
  labels:
    app.kubernetes.io/component: lte-orc8r
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: lte-orc8r
    app.kubernetes.io/part-of: orc8r-app
    helm.sh/chart: lte-orc8r-0.2.1
    orc8r.io/obsidian_handlers: "true"
  name: orc8r-smsd
spec:
  ports:
  - name: grpc
    port: 9180
    targetPort: 9120
  - name: http
    port: 8080
    targetPort: 10086
  selector:
    app.kubernetes.io/component: smsd
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: lte-orc8r
  type: ClusterIP
---
# Source: lte-orc8r/templates/subscriberdb.service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    orc8r.io/obsidian_handlers_path_prefixes: |
      /magma/v1/lte/:network_id/msisdns, /magma/v1/lte/:network_id/subscriber_state, /magma/v1/lte/:network_id/subscribers,
    orc8r.io/state_indexer_types: mobilityd_ipdesc_record
    orc8r.io/state_indexer_version: "1"
  labels:
    app.kubernetes.io/component: lte-orc8r
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: lte-orc8r
    app.kubernetes.io/part-of: orc8r-app
    helm.sh/chart: lte-orc8r-0.2.1
    orc8r.io/obsidian_handlers: "true"
    orc8r.io/state_indexer: "true"
  name: orc8r-subscriberdb
spec:
  ports:
  - name: grpc
    port: 9180
    targetPort: 9083
  - name: http
    port: 8080
    targetPort: 10083
  selector:
    app.kubernetes.io/component: subscriberdb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: lte-orc8r
  type: ClusterIP
---
# Source: lte-orc8r/templates/ha.deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: ha
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: lte-orc8r
    app.kubernetes.io/part-of: orc8r-app
    helm.sh/chart: lte-orc8r-0.2.1
  name: orc8r-ha
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: ha
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: lte-orc8r
  template:
    metadata:
      labels:
        app.kubernetes.io/component: ha
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/name: lte-orc8r
    spec:
      containers:
      - args:
        - /var/opt/magma/envdir
        - /var/opt/magma/bin/ha
        - -logtostderr=true
        - -v=0
        command:
        - /usr/bin/envdir
        env:
        - name: DATABASE_SOURCE
          valueFrom:
            secretKeyRef:
              key: postgres.connstr
              name: orc8r-controller
        - name: SQL_DRIVER
          value: postgres
        - name: SQL_DIALECT
          value: psql
        - name: SERVICE_HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SERVICE_REGISTRY_MODE
          value: yaml
        - name: HELM_RELEASE_NAME
          value: release-name
        - name: SERVICE_REGISTRY_NAMESPACE
          value: default
        image: <registry>/orc8r_base:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          initialDelaySeconds: 10
          periodSeconds: 30
          tcpSocket:
            port: 9119
        name: ha
        ports:
        - containerPort: 9119
          name: grpc
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          tcpSocket:
            port: 9119
        resources: {}
        volumeMounts:
        - mountPath: /var/opt/magma/certs
          name: certs
          readOnly: true
        - mountPath: /var/opt/magma/envdir
          name: envdir
          readOnly: true
        - mountPath: /var/opt/magma/configs/orc8r
          name: orc8r-secrets-configs-orc8r-orc8r
          readOnly: true
      volumes:
      - name: certs
        secret:
          secretName: orc8r-secrets-certs
      - name: envdir
        secret:
          secretName: orc8r-secrets-envdir
      - name: orc8r-secrets-configs-orc8r-orc8r
        secret:
          secretName: orc8r-secrets-configs-orc8r
---
# Source: lte-orc8r/templates/lte.deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: lte
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: lte-orc8r
    app.kubernetes.io/part-of: orc8r-app
    helm.sh/chart: lte-orc8r-0.2.1
  name: orc8r-lte
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: lte
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: lte-orc8r
  template:
    metadata:
      labels:
        app.kubernetes.io/component: lte
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/name: lte-orc8r
    spec:
      containers:
      - args:
        - /var/opt/magma/envdir
        - /var/opt/magma/bin/lte
        - -run_echo_server=true
        - -logtostderr=true
        - -v=0
        command:
        - /usr/bin/envdir
        env:
        - name: DATABASE_SOURCE
          valueFrom:
            secretKeyRef:
              key: postgres.connstr
              name: orc8r-controller
        - name: SQL_DRIVER
          value: postgres
        - name: SQL_DIALECT
          value: psql
        - name: SERVICE_HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SERVICE_REGISTRY_MODE
          value: yaml
        - name: HELM_RELEASE_NAME
          value: release-name
        - name: SERVICE_REGISTRY_NAMESPACE
          value: default
        image: <registry>/orc8r_base:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          initialDelaySeconds: 10
          periodSeconds: 30
          tcpSocket:
            port: 9113
        name: lte
        ports:
        - containerPort: 9113
          name: grpc
        - containerPort: 10113
          name: http
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          tcpSocket:
            port: 9113
        resources: {}
        volumeMounts:
        - mountPath: /var/opt/magma/certs
          name: certs
          readOnly: true
        - mountPath: /var/opt/magma/envdir
          name: envdir
          readOnly: true
        - mountPath: /var/opt/magma/configs/orc8r
          name: orc8r-secrets-configs-orc8r-orc8r
          readOnly: true
      volumes:
      - name: certs
        secret:
          secretName: orc8r-secrets-certs
      - name: envdir
        secret:
          secretName: orc8r-secrets-envdir
      - name: orc8r-secrets-configs-orc8r-orc8r
        secret:
          secretName: orc8r-secrets-configs-orc8r
---
# Source: lte-orc8r/templates/policydb.deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: policydb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: lte-orc8r
    app.kubernetes.io/part-of: orc8r-app
    helm.sh/chart: lte-orc8r-0.2.1
  name: orc8r-policydb
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: policydb
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: lte-orc8r
  template:
    metadata:
      labels:
        app.kubernetes.io/component: policydb
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/name: lte-orc8r
    spec:
      containers:
      - args:
        - /var/opt/magma/envdir
        - /var/opt/magma/bin/policydb
        - -run_echo_server=true
        - -logtostderr=true
        - -v=0
        command:
        - /usr/bin/envdir
        env:
        - name: DATABASE_SOURCE
          valueFrom:
            secretKeyRef:
              key: postgres.connstr
              name: orc8r-controller
        - name: SQL_DRIVER
          value: postgres
        - name: SQL_DIALECT
          value: psql
        - name: SERVICE_HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SERVICE_REGISTRY_MODE
          value: yaml
        - name: HELM_RELEASE_NAME
          value: release-name
        - name: SERVICE_REGISTRY_NAMESPACE
          value: default
        image: <registry>/orc8r_base:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          initialDelaySeconds: 10
          periodSeconds: 30
          tcpSocket:
            port: 9085
        name: policydb
        ports:
        - containerPort: 9085
          name: grpc
        - containerPort: 10085
          name: http
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          tcpSocket:
            port: 9085
        resources: {}
        volumeMounts:
        - mountPath: /var/opt/magma/certs
          name: certs
          readOnly: true
        - mountPath: /var/opt/magma/envdir
          name: envdir
          readOnly: true
        - mountPath: /var/opt/magma/configs/orc8r
          name: orc8r-secrets-configs-orc8r-orc8r
          readOnly: true
      volumes:
      - name: certs
        secret:
          secretName: orc8r-secrets-certs
      - name: envdir
        secret:
          secretName: orc8r-secrets-envdir
      - name: orc8r-secrets-configs-orc8r-orc8r
        secret:
          secretName: orc8r-secrets-configs-orc8r
---
# Source: lte-orc8r/templates/smsd.deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: smsd
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: lte-orc8r
    app.kubernetes.io/part-of: orc8r-app
    helm.sh/chart: lte-orc8r-0.2.1
  name: orc8r-smsd
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: smsd
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: lte-orc8r
  template:
    metadata:
      labels:
        app.kubernetes.io/component: smsd
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/name: lte-orc8r
    spec:
      containers:
      - args:
        - /var/opt/magma/envdir
        - /var/opt/magma/bin/smsd
        - -run_echo_server=true
        - -logtostderr=true
        - -v=0
        command:
        - /usr/bin/envdir
        env:
        - name: DATABASE_SOURCE
          valueFrom:
            secretKeyRef:
              key: postgres.connstr
              name: orc8r-controller
        - name: SQL_DRIVER
          value: postgres
        - name: SQL_DIALECT
          value: psql
        - name: SERVICE_HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SERVICE_REGISTRY_MODE
          value: yaml
        - name: HELM_RELEASE_NAME
          value: release-name
        - name: SERVICE_REGISTRY_NAMESPACE
          value: default
        image: <registry>/orc8r_base:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          initialDelaySeconds: 10
          periodSeconds: 30
          tcpSocket:
            port: 9120
        name: smsd
        ports:
        - containerPort: 9120
          name: grpc
        - containerPort: 10086
          name: http
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          tcpSocket:
            port: 9120
        resources: {}
        volumeMounts:
        - mountPath: /var/opt/magma/certs
          name: certs
          readOnly: true
        - mountPath: /var/opt/magma/envdir
          name: envdir
          readOnly: true
        - mountPath: /var/opt/magma/configs/orc8r
          name: orc8r-secrets-configs-orc8r-orc8r
          readOnly: true
      volumes:
      - name: certs
        secret:
          secretName: orc8r-secrets-certs
      - name: envdir
        secret:
          secretName: orc8r-secrets-envdir
      - name: orc8r-secrets-configs-orc8r-orc8r
        secret:
          secretName: orc8r-secrets-configs-orc8r
---
# Source: lte-orc8r/templates/subscriberdb.deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: subscriberdb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: lte-orc8r
    app.kubernetes.io/part-of: orc8r-app
    helm.sh/chart: lte-orc8r-0.2.1
  name: orc8r-subscriberdb
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: subscriberdb
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: lte-orc8r
  template:
    metadata:
      labels:
        app.kubernetes.io/component: subscriberdb
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/name: lte-orc8r
    spec:
      containers:
      - args:
        - /var/opt/magma/envdir
        - /var/opt/magma/bin/subscriberdb
        - -run_echo_server=true
        - -logtostderr=true
        - -v=0
        command:
        - /usr/bin/envdir
        env:
        - name: DATABASE_SOURCE
          valueFrom:
            secretKeyRef:
              key: postgres.connstr
              name: orc8r-controller
        - name: SQL_DRIVER
          value: postgres
        - name: SQL_DIALECT
          value: psql
        - name: SERVICE_HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SERVICE_REGISTRY_MODE
          value: yaml
        - name: HELM_RELEASE_NAME
          value: release-name
        - name: SERVICE_REGISTRY_NAMESPACE
          value: default
        image: <registry>/orc8r_base:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          initialDelaySeconds: 10
          periodSeconds: 30
          tcpSocket:
            port: 9083
        name: subscriberdb
        ports:
        - containerPort: 9083
          name: grpc
        - containerPort: 10083
          name: http
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          tcpSocket:
            port: 9083
        resources: {}
        volumeMounts:
        - mountPath: /var/opt/magma/certs
          name: certs
          readOnly: true
        - mountPath: /var/opt/magma/envdir
          name: envdir
          readOnly: true
        - mountPath: /var/opt/magma/configs/orc8r
          name: orc8r-secrets-configs-orc8r-orc8r
          readOnly: true
      volumes:
      - name: certs
        secret:
          secretName: orc8r-secrets-certs
      - name: envdir
        secret:
          secretName: orc8r-secrets-envdir
      - name: orc8r-secrets-configs-orc8r-orc8r
        secret:
          secretName: orc8r-secrets-configs-orc8r
