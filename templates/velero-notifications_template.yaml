---
# Source: velero-notifications/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-velero-notifications
  labels:
    helm.sh/chart: velero-notifications-1.1.0
    app.kubernetes.io/name: velero-notifications
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: velero-notifications/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-velero-notifications-secrets
type: Opaque
stringData:
  SLACK_WEBHOOK: ""
  SLACK_CHANNEL: ""

  EMAIL_SMTP_HOST: ""
  EMAIL_SMTP_PORT: "587"
  EMAIL_SMTP_USERNAME: ""
  EMAIL_SMTP_PASSWORD: ""

  WEBHOOK_URL: ""
---
# Source: velero-notifications/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-velero-notifications-config
data:
  VELERO_NAMESPACE: "velero"

  NOTIFICATION_PREFIX: ""

  ENABLE_SLACK_NOTIFICATIONS: "false"
  SLACK_FAILURES_ONLY: "true"
  SLACK_USERNAME: ""

  ENABLE_EMAIL_NOTIFICATIONS: "false"
  EMAIL_FAILURES_ONLY: "true"
  EMAIL_FROM_ADDRESS: ""
  EMAIL_TO_ADDRESS: ""

  ENABLE_WEBHOOK_NOTIFICATIONS: "false"
  WEBHOOK_FAILURES_ONLY: "false"
---
# Source: velero-notifications/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-velero-notifications
  labels:
    helm.sh/chart: velero-notifications-1.1.0
    app.kubernetes.io/name: velero-notifications
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: ["velero.io"]
  resources: ["backups"]
  verbs:     ["get", "list", "watch"]
- apiGroups: ["velero.io"]
  resources: ["restores"]
  verbs:     ["get", "list", "watch"]
---
# Source: velero-notifications/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-velero-notifications
  labels:
    helm.sh/chart: velero-notifications-1.1.0
    app.kubernetes.io/name: velero-notifications
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-velero-notifications
subjects:
- kind: ServiceAccount
  name: release-name-velero-notifications
  namespace: default
---
# Source: velero-notifications/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-velero-notifications
  labels:
    helm.sh/chart: velero-notifications-1.1.0
    app.kubernetes.io/name: velero-notifications
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: velero-notifications
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: velero-notifications
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-velero-notifications
      securityContext:
        {}
      containers:
        - name: velero-notifications
          securityContext:
            {}
          image: "ghcr.io/simoncaron/velero-notifications:1.0.0"
          imagePullPolicy: IfNotPresent
          resources:
            {}
          envFrom:
          - configMapRef:
              name: release-name-velero-notifications-config
          - secretRef:
              name: release-name-velero-notifications-secrets
