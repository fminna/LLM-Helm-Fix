---
# Source: tsn-ranksystem/templates/common.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: release-name-mariadbcreds
  namespace: default
  labels:
    app: "tsn-ranksystem-2.1.0"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "tsn-ranksystem"
    app.kubernetes.io/version: "latest"
    helm-revision: "1"
    helm.sh/chart: "tsn-ranksystem-2.1.0"
    release: "release-name"
stringData:
  jdbc: jdbc:sqlserver://release-name-mariadb:3306/ranksystem
  jdbc-mariadb: jdbc:mariadb://release-name-mariadb:3306/ranksystem
  jdbc-mysql: jdbc:mysql://release-name-mariadb:3306/ranksystem
  mariadb-password: PLACEHOLDERPASSWORD
  mariadb-root-password: PLACEHOLDERROOTPASSWORD
  plainhost: release-name-mariadb
  plainporthost: release-name-mariadb:3306
  url: sql://ranksystem:PLACEHOLDERPASSWORD@release-name-mariadb:3306/ranksystem
  urlnossl: sql://ranksystem:PLACEHOLDERPASSWORD@release-name-mariadb:3306/ranksystem?sslmode=disable
---
# Source: tsn-ranksystem/charts/mariadb/templates/common.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-mariadb-passinit
  namespace: default
  labels:
    app: "mariadb-14.0.6"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "mariadb"
    app.kubernetes.io/version: "11.3.2"
    helm-revision: "1"
    helm.sh/chart: "mariadb-14.0.6"
    release: "release-name"
data:
  passinit.sql: |
    ALTER USER root@'%' IDENTIFIED VIA mysql_native_password USING PASSWORD("PLACEHOLDERROOTPASSWORD");
    ALTER USER ranksystem@'%' IDENTIFIED VIA mysql_native_password USING PASSWORD("PLACEHOLDERPASSWORD");
    FLUSH PRIVILEGES;
---
# Source: tsn-ranksystem/charts/mariadb/templates/common.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-mariadb-data
  namespace: default
  labels:
    app: "mariadb-14.0.6"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "mariadb"
    app.kubernetes.io/version: "11.3.2"
    helm-revision: "1"
    helm.sh/chart: "mariadb-14.0.6"
    release: "release-name"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
---
# Source: tsn-ranksystem/templates/common.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-tsn-ranksystem-web
  namespace: default
  labels:
    app: "tsn-ranksystem-2.1.0"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "tsn-ranksystem"
    app.kubernetes.io/version: "latest"
    helm-revision: "1"
    helm.sh/chart: "tsn-ranksystem-2.1.0"
    release: "release-name"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
---
# Source: tsn-ranksystem/charts/mariadb/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mariadb
  namespace: default
  labels:
    app: "mariadb-14.0.6"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "mariadb"
    app.kubernetes.io/version: "11.3.2"
    helm-revision: "1"
    helm.sh/chart: "mariadb-14.0.6"
    release: "release-name"
    service.name: "main"
spec:
  type: ClusterIP
  publishNotReadyAddresses: false
  ports:
    - name: main
      port: 3306
      protocol: TCP
      targetPort: 3306
  selector:
    pod.name: main
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/instance: release-name
---
# Source: tsn-ranksystem/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-tsn-ranksystem
  namespace: default
  labels:
    app: "tsn-ranksystem-2.1.0"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "tsn-ranksystem"
    app.kubernetes.io/version: "latest"
    helm-revision: "1"
    helm.sh/chart: "tsn-ranksystem-2.1.0"
    release: "release-name"
    service.name: "main"
spec:
  type: ClusterIP
  publishNotReadyAddresses: false
  ports:
    - name: main
      port: 9300
      protocol: TCP
      targetPort: 80
  selector:
    pod.name: main
    app.kubernetes.io/name: tsn-ranksystem
    app.kubernetes.io/instance: release-name
---
# Source: tsn-ranksystem/charts/mariadb/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-mariadb
  namespace: default
  labels:
    app: "mariadb-14.0.6"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "mariadb"
    app.kubernetes.io/version: "11.3.2"
    helm-revision: "1"
    helm.sh/chart: "mariadb-14.0.6"
    release: "release-name"
spec:  
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      pod.name: main
      app.kubernetes.io/name: mariadb
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app: "mariadb-14.0.6"
        app.kubernetes.io/instance: "release-name"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/name: "mariadb"
        app.kubernetes.io/version: "11.3.2"
        helm-revision: "1"
        helm.sh/chart: "mariadb-14.0.6"
        pod.lifecycle: "permanent"
        pod.name: "main"
        release: "release-name"
      annotations:
        checksum/cnpg: "b7a79f687bb19d52c4f5fca7e1b1ca0e25ad8b8a53d284062a1b786264472d0f"
        checksum/configmaps: "2f70d6807f093247fad96153a9c6c0d57b4aa02789e19be1b9c088c65f4e2d07"
        checksum/mariadb: "09c85576cb45b1eecd1467732b11ea8fa3363b0105c465f02a6ad64991521d52"
        checksum/mongodb: "09c85576cb45b1eecd1467732b11ea8fa3363b0105c465f02a6ad64991521d52"
        checksum/persistence: "8ffd0e1ed704294dee132aa12aa878607a18e34eb50683c4740e2587a5b9361b"
        checksum/redis: "013343a028cbb3f7e08f4ba7522702dd98e52632c688641074b0b1db3df29894"
        checksum/secrets: "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a"
        checksum/services: "3c1dd612ec74ee9e0f9d1999416f52f56037e0b49ff3a1234059de4203563ec5"
        checksum/solr: "29c14feeaddbf7762052db593898d274941f539cee681ddc613957587686f347"
    spec:
      serviceAccountName: default
      automountServiceAccountToken: false
      runtimeClassName: 
      hostNetwork: false
      hostPID: false
      hostIPC: false
      shareProcessNamespace: false
      enableServiceLinks: false
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/arch: amd64
      topologySpreadConstraints:
        - maxSkew: 1
          whenUnsatisfiable: ScheduleAnyway
          topologyKey: "kubernetes.io/hostname"
          labelSelector:
            matchLabels:      
              pod.name: main
              app.kubernetes.io/name: mariadb
              app.kubernetes.io/instance: release-name
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      terminationGracePeriodSeconds: 60
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 568
        sysctls: []
      hostUsers: true
      containers:
        - name: release-name-mariadb
          image: bitnami/mariadb:11.3.2@sha256:6cf603083de0c6aef77f0db37466478ab67b9efd7c55e049e4a838cea9bf6534
          imagePullPolicy: IfNotPresent
          tty: false
          stdin: false
          ports:
            - name: main
              containerPort: 3306
              protocol: TCP
              hostPort: null
          volumeMounts:
            - name: data
              mountPath: /bitnami/mariadb
              readOnly: false
            - name: devshm
              mountPath: /dev/shm
              readOnly: false
            - name: passinit
              mountPath: /init/passinit.sql
              readOnly: false
              subPath: passinit.sql
            - name: shared
              mountPath: /shared
              readOnly: false
            - name: tmp
              mountPath: /tmp
              readOnly: false
            - name: varlogs
              mountPath: /var/logs
              readOnly: false
            - name: varrun
              mountPath: /var/run
              readOnly: false
          livenessProbe:
            exec:
              command:
                - "/bin/bash"
                - "-ec"
                - "until /opt/bitnami/scripts/mariadb/healthcheck.sh; do sleep 2; done"
            initialDelaySeconds: 12
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
            periodSeconds: 15
          readinessProbe:
            exec:
              command:
                - "/bin/bash"
                - "-ec"
                - "until /opt/bitnami/scripts/mariadb/healthcheck.sh; do sleep 2; done"
            initialDelaySeconds: 10
            failureThreshold: 4
            successThreshold: 2
            timeoutSeconds: 5
            periodSeconds: 12
          startupProbe:
            exec:
              command:
                - "/bin/bash"
                - "-ec"
                - "until /opt/bitnami/scripts/mariadb/healthcheck.sh; do sleep 2; done"
            initialDelaySeconds: 10
            failureThreshold: 60
            successThreshold: 1
            timeoutSeconds: 3
            periodSeconds: 5
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits: 
              cpu: 4000m 
              memory: 8Gi
          securityContext:
            runAsNonRoot: false
            runAsUser: 568
            runAsGroup: 0
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            privileged: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add: []
              drop:
                - ALL
          env:
            - name: "TZ"
              value: "UTC"
            - name: "UMASK"
              value: "0022"
            - name: "UMASK_SET"
              value: "0022"
            - name: "NVIDIA_VISIBLE_DEVICES"
              value: "void"
            - name: "PUID"
              value: "568"
            - name: "USER_ID"
              value: "568"
            - name: "UID"
              value: "568"
            - name: "PGID"
              value: "568"
            - name: "GROUP_ID"
              value: "568"
            - name: "GID"
              value: "568"
            - name: "MARIADB_DATABASE"
              value: "ranksystem"
            - name: "MARIADB_EXTRA_FLAGS"
              value: "--init-file=/init/passinit.sql"
            - name: "MARIADB_PASSWORD"
              value: "PLACEHOLDERPASSWORD"
            - name: "MARIADB_ROOT_PASSWORD"
              value: "PLACEHOLDERROOTPASSWORD"
            - name: "MARIADB_USER"
              value: "ranksystem"
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: release-name-mariadb-data
        - name: devshm
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: passinit
          configMap:
            name: release-name-mariadb-passinit
            optional: false
            items:
            - key: passinit.sql
              path: passinit.sql
        - name: shared
          emptyDir: {}
        - name: tmp
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: varlogs
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: varrun
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
---
# Source: tsn-ranksystem/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-tsn-ranksystem
  namespace: default
  labels:
    app: "tsn-ranksystem-2.1.0"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "tsn-ranksystem"
    app.kubernetes.io/version: "latest"
    helm-revision: "1"
    helm.sh/chart: "tsn-ranksystem-2.1.0"
    release: "release-name"
spec:  
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      pod.name: main
      app.kubernetes.io/name: tsn-ranksystem
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app: "tsn-ranksystem-2.1.0"
        app.kubernetes.io/instance: "release-name"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/name: "tsn-ranksystem"
        app.kubernetes.io/version: "latest"
        helm-revision: "1"
        helm.sh/chart: "tsn-ranksystem-2.1.0"
        pod.lifecycle: "permanent"
        pod.name: "main"
        release: "release-name"
      annotations:
        checksum/cnpg: "ffd338b55cc50a8b366097eec597eeb134dee46563555614453e28233d208d00"
        checksum/configmaps: "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a"
        checksum/mariadb: "f514cba9d8e2fa8188adbdfd99642872e2c4c773fb3f957480d3a3ecb74dceda"
        checksum/mongodb: "09c85576cb45b1eecd1467732b11ea8fa3363b0105c465f02a6ad64991521d52"
        checksum/persistence: "e3e8b4bb73461e9f94c6276c09018f766bd24b5529f39ef5f64fabc11d862994"
        checksum/redis: "013343a028cbb3f7e08f4ba7522702dd98e52632c688641074b0b1db3df29894"
        checksum/secrets: "1985c1b76e9f54c0a9af989a3bd219ca885ea2c1bcc11dc40c00c13060a4efff"
        checksum/services: "752e7806cc8b99110d992336863ce3cb20ca378c6ae8be864adffdeccdebdfc8"
        checksum/solr: "29c14feeaddbf7762052db593898d274941f539cee681ddc613957587686f347"
    spec:
      serviceAccountName: default
      automountServiceAccountToken: false
      runtimeClassName: 
      hostNetwork: false
      hostPID: false
      hostIPC: false
      shareProcessNamespace: false
      enableServiceLinks: false
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/arch: amd64
      topologySpreadConstraints:
        - maxSkew: 1
          whenUnsatisfiable: ScheduleAnyway
          topologyKey: "kubernetes.io/hostname"
          labelSelector:
            matchLabels:      
              pod.name: main
              app.kubernetes.io/name: tsn-ranksystem
              app.kubernetes.io/instance: release-name
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      terminationGracePeriodSeconds: 60
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 568
        sysctls:
          - name: "net.ipv4.ip_unprivileged_port_start"
            value: "80"
      hostUsers: true
      containers:
        - name: release-name-tsn-ranksystem
          image: serverlein/tsn-ranksystem-webserver:latest@sha256:9b5cbc1b3b505d91918c295ebea683cbc432b54ee3296d68a77388be25f63d22
          imagePullPolicy: IfNotPresent
          tty: false
          stdin: false
          lifecycle:
            postStart:
              exec:
                command:
                  - "/bin/sh"
                  - "-c"
                  - "web_location=/var/www/html\nif [ -f \"${web_location}/install.php\" ]; then\n  curl -v -X POST -d \"dbtype=mysql&dbhost=release-name-mariadb&dbname=ranksystem&dbuser=ranksystem&dbpass=PLACEHOLDERPASSWORD&install=&installchecked=\" http://localhost/install.php\n  sleep 1;\n  curl -v -X POST -d \"user=ranksystem&pass=ranksystem&confweb=\" http://localhost/install.php\n  echo \"Install script executed.\"\nelse\n  echo \"Install script doesnt exists, no further action is needed.\"\nfi\n"
          ports:
            - name: main
              containerPort: 80
              protocol: TCP
              hostPort: null
          volumeMounts:
            - name: devshm
              mountPath: /dev/shm
              readOnly: false
            - name: shared
              mountPath: /shared
              readOnly: false
            - name: tmp
              mountPath: /tmp
              readOnly: false
            - name: varlogs
              mountPath: /var/logs
              readOnly: false
            - name: varrun
              mountPath: /var/run
              readOnly: false
            - name: web
              mountPath: /var/www/html
              readOnly: false
          livenessProbe:
            httpGet:
              port: 80
              path: /
              scheme: HTTP
            initialDelaySeconds: 12
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
            periodSeconds: 15
          readinessProbe:
            httpGet:
              port: 80
              path: /
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 4
            successThreshold: 2
            timeoutSeconds: 5
            periodSeconds: 12
          startupProbe:
            httpGet:
              port: 80
              path: /
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 60
            successThreshold: 1
            timeoutSeconds: 3
            periodSeconds: 5
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits: 
              cpu: 4000m 
              memory: 8Gi
          securityContext:
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            privileged: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add:
                - NET_BIND_SERVICE
              drop:
                - ALL
          env:
            - name: "TZ"
              value: "UTC"
            - name: "UMASK"
              value: "0022"
            - name: "UMASK_SET"
              value: "0022"
            - name: "NVIDIA_VISIBLE_DEVICES"
              value: "void"
            - name: "S6_READ_ONLY_ROOT"
              value: "1"
      initContainers:
        - name: release-name-tsn-ranksystem-system-mariadb-wait
          image: tccr.io/tccr/db-wait-mariadb:v1.1.0@sha256:62858b8191b662716d84840f8d9b3c86654f175686159c5267a1c860d75f398d
          imagePullPolicy: IfNotPresent
          tty: false
          stdin: false
          command:
            - "/bin/sh"
            - "-c"
            - "/bin/bash <<'EOF'\necho \"Executing DB waits...\"\nuntil\n  mysqladmin -uroot -h\"${MARIADB_HOST}\" -p\"${MARIADB_ROOT_PASSWORD}\" ping \\\n  && mysqladmin -uroot -h\"${MARIADB_HOST}\" -p\"${MARIADB_ROOT_PASSWORD}\" status;\n  do sleep 2;\ndone\nEOF"
          volumeMounts:
            - name: devshm
              mountPath: /dev/shm
              readOnly: false
            - name: shared
              mountPath: /shared
              readOnly: false
            - name: tmp
              mountPath: /tmp
              readOnly: false
            - name: varlogs
              mountPath: /var/logs
              readOnly: false
            - name: varrun
              mountPath: /var/run
              readOnly: false
          
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits: 
              cpu: 500m 
              memory: 512Mi
          securityContext:
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            privileged: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add:
                - NET_BIND_SERVICE
              drop:
                - ALL
          env:
            - name: "TZ"
              value: "UTC"
            - name: "UMASK"
              value: "0022"
            - name: "UMASK_SET"
              value: "0022"
            - name: "NVIDIA_VISIBLE_DEVICES"
              value: "void"
            - name: "S6_READ_ONLY_ROOT"
              value: "1"
            - name: "MARIADB_HOST"
              valueFrom:
                secretKeyRef:
                  key: "plainhost"
                  name: "release-name-mariadbcreds"
            - name: "MARIADB_ROOT_PASSWORD"
              value: "PLACEHOLDERROOTPASSWORD"
            
        - name: release-name-tsn-ranksystem-init-download-ranksystem
          image: serverlein/tsn-ranksystem-webserver:latest@sha256:9b5cbc1b3b505d91918c295ebea683cbc432b54ee3296d68a77388be25f63d22
          imagePullPolicy: IfNotPresent
          tty: false
          stdin: false
          command:
            - "/bin/sh"
            - "-c"
          args:
            - "web_location=/var/www/html\nindexFile=${web_location}/index.php\n\nif [ ! -f \"${indexFile}\" ]; then\n  # download with curl as git & wget not available\n  # automatically fetch newest version\n  LOCATION=$(curl -s https://api.github.com/repos/Newcomer1989/TSN-Ranksystem/releases/latest \\\n  | grep \"tarball_url\" \\\n  | awk '{ print $2 }' \\\n  | sed 's/,$//'       \\\n  | sed 's/\"//g' )     \\\n  ; curl -sL -o ${web_location}/ranksystem.tar.gz $LOCATION\n  # unzip file\n  tar -xzf ${web_location}/ranksystem.tar.gz\n  # get topfolder\n  top_folder=$(find ${web_location} -type d -name \"Newcomer*\" -exec basename \\{} .po \\;)\n  # move to topfolder\n  mv ${top_folder}/* ${web_location}\n  # delete obsolete folders & files\n  rm -rf ${web_location}/ranksystem.tar.gz ${top_folder}\n\n  webinterface_location=${web_location}/webinterface\n  navFile=${webinterface_location}/_nav.php\n  workerFile=${web_location}/worker.php\n\n  # remove annoying SSL message (doesnt work with traefik/ingress)\n  sed -i \"$(($(wc -l < ${navFile})-4)),$(($(wc -l < ${navFile})))d\" ${navFile}\n\n  # change help() to check() in worker.php\n  sed -i \"s/\\bhelp();/check();/g\" ${workerFile}\n  echo \"Files downloaded and installed.\"\n  echo \"Folder :$PWD\"\n  echo \"Files:\"\n  ls\nelse\n  echo \"Files Located. No action needed.\"\nfi\n"
          volumeMounts:
            - name: devshm
              mountPath: /dev/shm
              readOnly: false
            - name: shared
              mountPath: /shared
              readOnly: false
            - name: tmp
              mountPath: /tmp
              readOnly: false
            - name: varlogs
              mountPath: /var/logs
              readOnly: false
            - name: varrun
              mountPath: /var/run
              readOnly: false
            - name: web
              mountPath: /var/www/html
              readOnly: false
          
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits: 
              cpu: 4000m 
              memory: 8Gi
          securityContext:
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            privileged: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add:
                - NET_BIND_SERVICE
              drop:
                - ALL
          env:
            - name: "TZ"
              value: "UTC"
            - name: "UMASK"
              value: "0022"
            - name: "UMASK_SET"
              value: "0022"
            - name: "NVIDIA_VISIBLE_DEVICES"
              value: "void"
            - name: "S6_READ_ONLY_ROOT"
              value: "1"
      volumes:
        - name: devshm
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: shared
          emptyDir: {}
        - name: tmp
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: varlogs
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: varrun
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: web
          persistentVolumeClaim:
            claimName: release-name-tsn-ranksystem-web
---
# Source: tsn-ranksystem/templates/common.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: release-name-tsn-ranksystem-ranksystem-cron
  namespace: default
  labels:
    app: "tsn-ranksystem-2.1.0"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "tsn-ranksystem"
    app.kubernetes.io/version: "latest"
    helm-revision: "1"
    helm.sh/chart: "tsn-ranksystem-2.1.0"
    release: "release-name"
spec:  
  timeZone: "UTC"
  schedule: "*/5 * * * *"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 3
  startingDeadlineSeconds: 600
  suspend: false
  jobTemplate:
    spec:    
      backoffLimit: 5
      completionMode: NonIndexed
      completions: 
      parallelism: 1
      ttlSecondsAfterFinished: 120
      template:
        metadata:
          labels:
            app: "tsn-ranksystem-2.1.0"
            app.kubernetes.io/instance: "release-name"
            app.kubernetes.io/managed-by: "Helm"
            app.kubernetes.io/name: "tsn-ranksystem"
            app.kubernetes.io/version: "latest"
            helm-revision: "1"
            helm.sh/chart: "tsn-ranksystem-2.1.0"
            pod.lifecycle: "fleeting"
            pod.name: "ranksystem-cron"
            release: "release-name"
          annotations:
            checksum/cnpg: "ffd338b55cc50a8b366097eec597eeb134dee46563555614453e28233d208d00"
            checksum/configmaps: "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a"
            checksum/mariadb: "f514cba9d8e2fa8188adbdfd99642872e2c4c773fb3f957480d3a3ecb74dceda"
            checksum/mongodb: "09c85576cb45b1eecd1467732b11ea8fa3363b0105c465f02a6ad64991521d52"
            checksum/persistence: "e3e8b4bb73461e9f94c6276c09018f766bd24b5529f39ef5f64fabc11d862994"
            checksum/redis: "013343a028cbb3f7e08f4ba7522702dd98e52632c688641074b0b1db3df29894"
            checksum/secrets: "1985c1b76e9f54c0a9af989a3bd219ca885ea2c1bcc11dc40c00c13060a4efff"
            checksum/services: "752e7806cc8b99110d992336863ce3cb20ca378c6ae8be864adffdeccdebdfc8"
            checksum/solr: "29c14feeaddbf7762052db593898d274941f539cee681ddc613957587686f347"
        spec:
          serviceAccountName: default
          automountServiceAccountToken: false
          runtimeClassName: 
          hostNetwork: false
          hostPID: false
          hostIPC: false
          shareProcessNamespace: false
          enableServiceLinks: false
          restartPolicy: OnFailure
          nodeSelector:
            kubernetes.io/arch: amd64
          dnsPolicy: ClusterFirst
          dnsConfig:
            options:
              - name: ndots
                value: "1"
          terminationGracePeriodSeconds: 60
          securityContext:
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups:
              - 568
            sysctls: []
          hostUsers: true
          containers:
            - name: release-name-tsn-ranksystem
              image: serverlein/tsn-ranksystem-webserver:latest@sha256:9b5cbc1b3b505d91918c295ebea683cbc432b54ee3296d68a77388be25f63d22
              imagePullPolicy: IfNotPresent
              tty: false
              stdin: false
              command:
                - "/bin/sh"
                - "-c"
                - "name=release-name-tsn-ranksystem\nport=9300\nwhile ! curl -s -o -v /dev/null http://${name}:${port}/worker.php; do sleep 1; done && \\\ncurl -v -X GET -d \"action=run_command\" http://${name}:${port}/worker.php\n"
              volumeMounts:
                - name: devshm
                  mountPath: /dev/shm
                  readOnly: false
                - name: shared
                  mountPath: /shared
                  readOnly: false
                - name: tmp
                  mountPath: /tmp
                  readOnly: false
                - name: varlogs
                  mountPath: /var/logs
                  readOnly: false
                - name: varrun
                  mountPath: /var/run
                  readOnly: false
              
              resources:
                requests:
                  cpu: 10m
                  memory: 50Mi
                limits: 
                  cpu: 4000m 
                  memory: 8Gi
              securityContext:
                runAsNonRoot: true
                runAsUser: 568
                runAsGroup: 568
                readOnlyRootFilesystem: false
                allowPrivilegeEscalation: false
                privileged: false
                seccompProfile:
                  type: RuntimeDefault
                capabilities:
                  add: []
                  drop:
                    - ALL
              env:
                - name: "TZ"
                  value: "UTC"
                - name: "UMASK"
                  value: "0022"
                - name: "UMASK_SET"
                  value: "0022"
                - name: "NVIDIA_VISIBLE_DEVICES"
                  value: "void"
                - name: "S6_READ_ONLY_ROOT"
                  value: "1"
          initContainers:
            - name: release-name-tsn-ranksystem-system-mariadb-wait
              image: tccr.io/tccr/db-wait-mariadb:v1.1.0@sha256:62858b8191b662716d84840f8d9b3c86654f175686159c5267a1c860d75f398d
              imagePullPolicy: IfNotPresent
              tty: false
              stdin: false
              command:
                - "/bin/sh"
                - "-c"
                - "/bin/bash <<'EOF'\necho \"Executing DB waits...\"\nuntil\n  mysqladmin -uroot -h\"${MARIADB_HOST}\" -p\"${MARIADB_ROOT_PASSWORD}\" ping \\\n  && mysqladmin -uroot -h\"${MARIADB_HOST}\" -p\"${MARIADB_ROOT_PASSWORD}\" status;\n  do sleep 2;\ndone\nEOF"
              volumeMounts:
                - name: devshm
                  mountPath: /dev/shm
                  readOnly: false
                - name: shared
                  mountPath: /shared
                  readOnly: false
                - name: tmp
                  mountPath: /tmp
                  readOnly: false
                - name: varlogs
                  mountPath: /var/logs
                  readOnly: false
                - name: varrun
                  mountPath: /var/run
                  readOnly: false
              
              resources:
                requests:
                  cpu: 10m
                  memory: 50Mi
                limits: 
                  cpu: 500m 
                  memory: 512Mi
              securityContext:
                runAsNonRoot: true
                runAsUser: 568
                runAsGroup: 568
                readOnlyRootFilesystem: true
                allowPrivilegeEscalation: false
                privileged: false
                seccompProfile:
                  type: RuntimeDefault
                capabilities:
                  add: []
                  drop:
                    - ALL
              env:
                - name: "TZ"
                  value: "UTC"
                - name: "UMASK"
                  value: "0022"
                - name: "UMASK_SET"
                  value: "0022"
                - name: "NVIDIA_VISIBLE_DEVICES"
                  value: "void"
                - name: "S6_READ_ONLY_ROOT"
                  value: "1"
                - name: "MARIADB_HOST"
                  valueFrom:
                    secretKeyRef:
                      key: "plainhost"
                      name: "release-name-mariadbcreds"
                - name: "MARIADB_ROOT_PASSWORD"
                  value: "PLACEHOLDERROOTPASSWORD"
          volumes:
            - name: devshm
              emptyDir:
                medium: Memory
                sizeLimit: 8Gi
            - name: shared
              emptyDir: {}
            - name: tmp
              emptyDir:
                medium: Memory
                sizeLimit: 8Gi
            - name: varlogs
              emptyDir:
                medium: Memory
                sizeLimit: 8Gi
            - name: varrun
              emptyDir:
                medium: Memory
                sizeLimit: 8Gi
