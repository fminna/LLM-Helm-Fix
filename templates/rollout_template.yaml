---
# Source: rollout/templates/generic.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rollouts-controller
    app.kubernetes.io/name: argo-rollouts
    app.kubernetes.io/part-of: argo-rollouts
  name: argo-rollouts
---
# Source: rollout/templates/generic.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: aggregate-cluster-role
    app.kubernetes.io/name: argo-rollouts-aggregate-to-admin
    app.kubernetes.io/part-of: argo-rollouts
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  name: argo-rollouts-aggregate-to-admin
rules:
  - apiGroups:
      - argoproj.io
    resources:
      - rollouts
      - experiments
      - analysistemplates
      - analysisruns
      - rollouts/finalizers
      - experiments/finalizers
      - analysistemplates/finalizers
      - analysisruns/finalizers      
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
---
# Source: rollout/templates/generic.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: aggregate-cluster-role
    app.kubernetes.io/name: argo-rollouts-aggregate-to-edit
    app.kubernetes.io/part-of: argo-rollouts
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: argo-rollouts-aggregate-to-edit
rules:
  - apiGroups:
      - argoproj.io
    resources:
      - rollouts
      - experiments
      - analysistemplates
      - analysisruns
      - rollouts/finalizers
      - experiments/finalizers
      - analysistemplates/finalizers
      - analysisruns/finalizers         
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
---
# Source: rollout/templates/generic.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: aggregate-cluster-role
    app.kubernetes.io/name: argo-rollouts-aggregate-to-view
    app.kubernetes.io/part-of: argo-rollouts
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: argo-rollouts-aggregate-to-view
rules:
  - apiGroups:
      - argoproj.io
    resources:
      - rollouts
      - experiments
      - analysistemplates
      - analysisruns
      - rollouts/finalizers
      - experiments/finalizers
      - analysistemplates/finalizers
      - analysisruns/finalizers         
    verbs:
      - get
      - list
      - watch
---
# Source: rollout/templates/generic.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rollouts-controller
    app.kubernetes.io/name: argo-rollouts-clusterrole
    app.kubernetes.io/part-of: argo-rollouts
  name: argo-rollouts-clusterrole
rules:
  - apiGroups:
      - apps
    resources:
      - replicasets
      - replicasets/finalizers
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - services
      - services/finalizers
    verbs:
      - get
      - list
      - watch
      - patch
  - apiGroups:
      - argoproj.io
    resources:
      - rollouts
      - rollouts/finalizers
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - argoproj.io
    resources:
      - analysisruns
      - experiments
      - analysisruns/finalizers
      - experiments/finalizers      
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
  - apiGroups:
      - argoproj.io
    resources:
      - analysistemplates
      - analysistemplates/finalizers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
      - jobs/finalizers
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
      - events/finalizers
    verbs:
      - create
      - update
      - patch
---
# Source: rollout/templates/generic.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rollouts-controller
    app.kubernetes.io/name: argo-rollouts-clusterrolebinding
    app.kubernetes.io/part-of: argo-rollouts
  name: argo-rollouts-clusterrolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-rollouts-clusterrole
subjects:
  - kind: ServiceAccount
    name: argo-rollouts
    namespace: default
---
# Source: rollout/templates/generic.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rollouts-controller
    app.kubernetes.io/name: argo-rollouts-role
    app.kubernetes.io/part-of: argo-rollouts
  name: argo-rollouts-role
rules:
  - apiGroups:
      - apps
    resources:
      - replicasets
      - replicasets/finalizers
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - services
      - services/finalizers
    verbs:
      - get
      - list
      - watch
      - patch
  - apiGroups:
      - argoproj.io
    resources:
      - rollouts
      - rollouts/finalizers
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - argoproj.io
    resources:
      - analysisruns
      - experiments
      - analysisruns/finalizers
      - experiments/finalizers
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
  - apiGroups:
      - argoproj.io
    resources:
      - analysistemplates
      - analysistemplates/finalizers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
      - jobs/finalizers
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
      - events/finalizers
    verbs:
      - create
      - update
      - patch
---
# Source: rollout/templates/generic.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rollouts-controller
    app.kubernetes.io/name: argo-rollouts-role-binding
    app.kubernetes.io/part-of: argo-rollouts
  name: argo-rollouts-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argo-rollouts-role
subjects:
  - kind: ServiceAccount
    name: argo-rollouts
---
# Source: rollout/templates/generic.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/name: argo-rollouts-metrics
    app.kubernetes.io/part-of: argo-rollouts
  name: argo-rollouts-metrics
spec:
  ports:
    - name: metrics
      port: 8090
      protocol: TCP
      targetPort: 8090
  selector:
    app.kubernetes.io/name: argo-rollouts
---
# Source: rollout/templates/generic.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: rollouts-controller
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: argo-rollouts
  name: release-name
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: release-name
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: release-name
    spec:
      containers:
      - command:
        - /bin/rollouts-controller
        image: quay.io/devtron/rollout:v0.6.2
        imagePullPolicy: IfNotPresent
        name: argo-rollouts
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        resources:
          requests:
            memory: 100Mi
            cpu: 50m
          limits:
            memory: 200Mi
            cpu: 250m
      serviceAccountName: argo-rollouts
      volumes:
      - emptyDir: {}
        name: tmp
