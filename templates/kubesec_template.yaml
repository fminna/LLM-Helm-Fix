---
# Source: kubesec/charts/kubesec/charts/kubesec/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kubesec
  labels:
    helm.sh/chart: kubesec-1.0.0
    app.kubernetes.io/name: kubesec
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2.13.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubesec/charts/kubesec/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kubesec
  labels:
    helm.sh/chart: kubesec-1.0.0
    app.kubernetes.io/name: kubesec
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2.13.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubesec/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kubesec
  labels:
    helm.sh/chart: kubesec-1.0.1
    app.kubernetes.io/name: kubesec
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2.13.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubesec/charts/kubesec/charts/kubesec/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-kubesec
  labels:
    helm.sh/chart: kubesec-1.0.0
    app.kubernetes.io/name: kubesec
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2.13.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - get
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  - replicasets
  verbs:
  - list
  - get
- apiGroups:
  - batch
  resources:
  - jobs
  - cronjobs
  verbs:
  - list
  - get
---
# Source: kubesec/charts/kubesec/charts/kubesec/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kubesec
  labels:
    helm.sh/chart: kubesec-1.0.0
    app.kubernetes.io/name: kubesec
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2.13.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-kubesec
subjects:
- kind: ServiceAccount
  name: release-name-kubesec
  namespace: default
---
# Source: kubesec/charts/kubesec/charts/kubesec/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kubesec
  labels:
    helm.sh/chart: kubesec-1.0.0
    app.kubernetes.io/name: kubesec
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2.13.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kubesec
    app.kubernetes.io/instance: release-name
---
# Source: kubesec/charts/kubesec/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kubesec
  labels:
    helm.sh/chart: kubesec-1.0.0
    app.kubernetes.io/name: kubesec
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2.13.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kubesec
    app.kubernetes.io/instance: release-name
---
# Source: kubesec/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kubesec
  labels:
    helm.sh/chart: kubesec-1.0.1
    app.kubernetes.io/name: kubesec
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2.13.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kubesec
    app.kubernetes.io/instance: release-name
---
# Source: kubesec/charts/kubesec/charts/kubesec/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kubesec
  labels:
    helm.sh/chart: kubesec-1.0.0
    app.kubernetes.io/name: kubesec
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2.13.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubesec
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubesec
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-kubesec
      securityContext:
        {}
      containers:
        - name: kubesec
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          image: "kubesec/kubesec:latest"
          imagePullPolicy: IfNotPresent
          command: ["kubesec"]
          args:
            - "http"
            - "80"
            - "&"
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: kubesec/charts/kubesec/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kubesec
  labels:
    helm.sh/chart: kubesec-1.0.0
    app.kubernetes.io/name: kubesec
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2.13.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubesec
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubesec
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-kubesec
      securityContext:
        {}
      containers:
        - name: kubesec
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          image: "kubesec/kubesec:latest"
          imagePullPolicy: IfNotPresent
          command: ["kubesec"]
          args:
            - "http"
            - "80"
            - "&"
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: kubesec/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kubesec
  labels:
    helm.sh/chart: kubesec-1.0.1
    app.kubernetes.io/name: kubesec
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2.13.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubesec
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubesec
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-kubesec
      securityContext:
        {}
      containers:
        - name: kubesec
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          image: "kubesec/kubesec:latest"
          imagePullPolicy: IfNotPresent
          command: ["kubesec"]
          args:
            - "http"
            - "80"
            - "&"
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
