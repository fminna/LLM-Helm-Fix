---
# Source: mysql8/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-mysql8
  namespace: default
  labels:
    app.kubernetes.io/name: mysql8
    helm.sh/chart: mysql8-1.0.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  mysql-root-password: "NzA3NjM5MDE0"
  mysql-password: "NzA3NjM5MDE0"
---
# Source: mysql8/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-mysql8
  namespace: default
  labels:
    app.kubernetes.io/name: mysql8
    helm.sh/chart: mysql8-1.0.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  my.cnf: |-
    
    [client]
    default-character-set=utf8mb4
     
    [mysql]
    default-character-set=utf8mb4
     
    [mysqld]
    init_connect='SET collation_connection = utf8mb4_unicode_ci'
    init_connect='SET NAMES utf8mb4'
    character-set-server=utf8mb4
    collation-server=utf8mb4_unicode_ci
    skip-character-set-client-handshake
    skip-name-resolve
    skip-grant-tables
    bind-address=0.0.0.0
---
# Source: mysql8/templates/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mysql8-headless
  namespace: default
  labels:
    app.kubernetes.io/name: mysql8
    helm.sh/chart: mysql8-1.0.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: mysql
      port: 3306
      targetPort: 3306
  selector: 
    app.kubernetes.io/name: mysql8
    app.kubernetes.io/instance: release-name
---
# Source: mysql8/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mysql8
  namespace: default
  labels:
    app.kubernetes.io/name: mysql8
    helm.sh/chart: mysql8-1.0.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: NodePort
  ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: 3306
      nodePort: 30010
  selector: 
    app.kubernetes.io/name: mysql8
    app.kubernetes.io/instance: release-name
---
# Source: mysql8/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-mysql8
  namespace: default
  labels:
    app.kubernetes.io/name: mysql8
    helm.sh/chart: mysql8-1.0.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels: 
      app.kubernetes.io/name: mysql8
      app.kubernetes.io/instance: release-name
  serviceName: release-name-mysql8
  template:
    metadata:
      annotations:
        checksum/configuration: 8705786d5be66f4e9710421308dff123e5c6b95ffa3b51be4430fd15a6c220c9
      labels:
        app.kubernetes.io/name: mysql8
        helm.sh/chart: mysql8-1.0.3
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
    spec:
      
      containers:
        - name: mysql
          image: docker.io/mysql:8.0.27
          imagePullPolicy: "IfNotPresent"
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-mysql8
                  key: mysql-root-password
            - name: MYSQL_USER
              value: "saber"
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-mysql8
                  key: mysql-password
          ports:
            - name: mysql
              containerPort: 3306
          resources: 
            limits:
              cpu: 250m
              memory: 512Mi
            requests: {}
          volumeMounts:
            - name: data
              mountPath: /var/lib/mysql
            - name: config
              mountPath: /etc/mysql/conf.d/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: release-name-mysql8
  volumeClaimTemplates:
    - metadata:
        name: data
        labels: 
          app.kubernetes.io/name: mysql8
          app.kubernetes.io/instance: release-name
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "5Gi"
