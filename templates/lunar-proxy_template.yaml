---
# Source: lunar-proxy/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: lunar-proxy
  namespace: default
  labels:
    helm.sh/chart: lunar-proxy-v0.9.3
    app.kubernetes.io/name: lunar-proxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.9.3"
    app.kubernetes.io/managed-by: Helm
---
# Source: lunar-proxy/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: policies.yaml
  namespace: default
  labels:
    app: "release-name-lunar-proxy"
    chart: "lunar-proxy-v0.9.3"
    heritage: "Helm"
    release: "release-name"
data:
  policies.yaml: |

    ---
    endpoints: []
    exporters:
      file:
        file_dir: /var/log/lunar-proxy
        file_name: output.log
    global: {}

immutable: false
---
# Source: lunar-proxy/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-lunar-proxy
  namespace: default
  annotations:
  labels:
    helm.sh/chart: lunar-proxy-v0.9.3
    app.kubernetes.io/name: lunar-proxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.9.3"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: http
    - port: 3000
      targetPort: 3000
      protocol: TCP
      name: metrics
    - port: 8040
      targetPort: 8040
      protocol: TCP
      name: healthcheck
    - port: 8081
      targetPort: 8081
      protocol: TCP
      name: admin
  selector:
    app.kubernetes.io/name: lunar-proxy
    app.kubernetes.io/instance: release-name
---
# Source: lunar-proxy/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-lunar-proxy
  namespace: default
  labels:
    helm.sh/chart: lunar-proxy-v0.9.3
    app.kubernetes.io/name: lunar-proxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.9.3"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: lunar-proxy
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: lunar-proxy
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: lunar-proxy
      securityContext:
        {}
      containers:
        - name: lunar-proxy
          securityContext:
            {}
          image: "lunarapi/lunar-proxy:v0.9.3"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 15
            periodSeconds: 5
            httpGet:
              path: /healthcheck
              port: 8040
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 2
            httpGet:
              path: /healthcheck
              port: 8040
          resources:
            {}
          env:
            - name: LOG_LEVEL
              value: error
            - name: BIND_PORT
              value: "8000"
            - name: LUNAR_FLUSH_SECONDS
              value: "10"
            - name: LUNAR_TELEMETRY
              value: "true"
            - name: REDIS_USE_CLUSTER
              value: "false"
            - name: LUNAR_TELEMETRY
              value: "true"
            - name: REDIS_USE_CLUSTER
              value: "false"
          volumeMounts:
            - mountPath: /etc/lunar-proxy
              name: policies
      volumes:
        - configMap:
            items:
              - key: policies.yaml
                path: policies.yaml
            name: policies.yaml
          name: policies
---
# Source: lunar-proxy/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-lunar-proxy-test-connection"
  labels:
    helm.sh/chart: lunar-proxy-v0.9.3
    app.kubernetes.io/name: lunar-proxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.9.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  containers:
    - name: curl
      image: curlimages/curl:8.1.1
      command: [ 'curl']
      args: ['release-name-lunar-proxy:8040/healthcheck']
  restartPolicy: Never
