---
# Source: plausible-analytics/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-plausible-analytics
  labels:
    helm.sh/chart: plausible-analytics-0.1.1
    app.kubernetes.io/name: plausible-analytics
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2.0.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: plausible-analytics/charts/postgresql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 15.4.0
    helm.sh/chart: postgresql-12.12.10
type: Opaque
data:
  postgres-password: "YjhmMWFkNDY4ZTAwYjM0NGIyYzZiZjQ5NWM0ZmZjMjg="
  # We don't auto-generate LDAP password when it's not provided as we do for other passwords
---
# Source: plausible-analytics/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-plausible-analytics
  labels:
    app: plausible
    helm.sh/chart: plausible-analytics-0.1.1
    app.kubernetes.io/name: plausible-analytics
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2.0.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  DATABASE_URL: cG9zdGdyZXNxbDovL3Bvc3RncmVzOmI4ZjFhZDQ2OGUwMGIzNDRiMmM2YmY0OTVjNGZmYzI4QHJlbGVhc2UtbmFtZS1wbGF1c2libGUtYW5hbHl0aWNzLXBvc3RncmVzcWwvcGxhdXNpYmxl
  CLICKHOUSE_DATABASE_URL: aHR0cDovL3JlbGVhc2UtbmFtZS1wbGF1c2libGUtYW5hbHl0aWNzLWNsaWNraG91c2U6ODEyMy9wbGF1c2libGVfZXZlbnRzX2Ri
  SECRET_KEY_BASE: bTk4M2dZUWVPV2I1WHNGbTF0ZmJTeUFnRlVReWxnRnpuemhaZ1lyZU5lTmJnakRITlVnb2szaEdzTlowd2VRNjl2NzhuSEd6a2p5UUVCQ0dTM3hvT3VYdnhq
---
# Source: plausible-analytics/charts/clickhouse/templates/configmap-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-clickhouse-config
  labels:
    app.kubernetes.io/name: clickhouse-config
    app.kubernetes.io/instance: release-name-config
    app.kubernetes.io/managed-by: Helm
data:
  config.xml: |-
    <?xml version="1.0"?>
    <yandex>
        <path>/var/lib/clickhouse/</path>
        <tmp_path>/var/lib/clickhouse/tmp/</tmp_path>
        <user_files_path>/var/lib/clickhouse/user_files/</user_files_path>
        <format_schema_path>/var/lib/clickhouse/format_schemas/</format_schema_path>

        <include_from>/etc/clickhouse-server/metrica.d/metrica.xml</include_from>

        <users_config>users.xml</users_config>

        <display_name>release-name-clickhouse</display_name>
        <listen_host>0.0.0.0</listen_host>
        <http_port>8123</http_port>
        <tcp_port>9000</tcp_port>
        <interserver_http_port>9009</interserver_http_port>
        <max_connections>4096</max_connections>
        <keep_alive_timeout>3</keep_alive_timeout>
        <max_concurrent_queries>100</max_concurrent_queries>
        <uncompressed_cache_size>8589934592</uncompressed_cache_size>
        <mark_cache_size>5368709120</mark_cache_size>
        <timezone>UTC</timezone>
        <umask>022</umask>
        <mlock_executable>false</mlock_executable>
        <remote_servers>
            <release-name-clickhouse>
                <shard>
                    <replica>
                        <internal_replication>false</internal_replication>
                        <host>release-name-clickhouse-0.release-name-clickhouse-headless.default.svc.cluster.local</host>
                        <port>9000</port>
                        <user>default</user>
                        <compression>true</compression>
                    </replica>
                    <replica>
                        <host>release-name-clickhouse-replica-0.release-name-clickhouse-replica-headless.default.svc.cluster.local</host>
                        <port>9000</port>
                        <user>default</user>
                        <compression>true</compression>
                    </replica>
                </shard>
            </release-name-clickhouse>
        </remote_servers>
        <zookeeper incl="zookeeper-servers" optional="true" />
        <macros incl="macros" optional="true" />
        <builtin_dictionaries_reload_interval>3600</builtin_dictionaries_reload_interval>
        <max_session_timeout>3600</max_session_timeout>
        <default_session_timeout>60</default_session_timeout>
        <disable_internal_dns_cache>1</disable_internal_dns_cache>

        <query_log>
            <database>system</database>
            <table>query_log</table>
            <partition_by>toYYYYMM(event_date)</partition_by>
            <flush_interval_milliseconds>7500</flush_interval_milliseconds>
        </query_log>

        <query_thread_log>
            <database>system</database>
            <table>query_thread_log</table>
            <partition_by>toYYYYMM(event_date)</partition_by>
            <flush_interval_milliseconds>7500</flush_interval_milliseconds>
        </query_thread_log>

        <distributed_ddl>
            <path>/clickhouse/task_queue/ddl</path>
        </distributed_ddl>
        <logger>
            <level>trace</level>
            <log>/var/log/clickhouse-server/clickhouse-server.log</log>
            <errorlog>/var/log/clickhouse-server/clickhouse-server.err.log</errorlog>
            <size>1000M</size>
            <count>10</count>
        </logger>
    </yandex>
---
# Source: plausible-analytics/charts/clickhouse/templates/configmap-metrika.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-clickhouse-metrica
  labels:
    app.kubernetes.io/name: clickhouse-metrica
    app.kubernetes.io/instance: release-name-metrica
    app.kubernetes.io/managed-by: Helm
data:
  metrica.xml: |-
    <?xml version="1.0"?>
    <yandex>
        <clickhouse_remote_servers>
            <release-name-clickhouse>
                <shard>
                    <replica>
                        <internal_replication>false</internal_replication>
                        <host>release-name-clickhouse-0.release-name-clickhouse-headless.default.svc.cluster.local</host>
                        <port>9000</port>
                        <user>default</user>
                        <compression>true</compression>
                    </replica>
                    <replica>
                        <host>release-name-clickhouse-replica-0.release-name-clickhouse-replica-headless.default.svc.cluster.local</host>
                        <port>9000</port>
                        <user>default</user>
                        <compression>true</compression>
                    </replica>
                </shard>
            </release-name-clickhouse>
        </clickhouse_remote_servers>

        <macros>
            <replica from_env="HOSTNAME"></replica>
            <shard from_env="SHARD"></shard>
        </macros>
    </yandex>
---
# Source: plausible-analytics/charts/clickhouse/templates/configmap-users.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-clickhouse-users
  labels:
    app.kubernetes.io/name: clickhouse-users
    app.kubernetes.io/instance: release-name-users
    app.kubernetes.io/managed-by: Helm
data:
  users.xml: |-
    <?xml version="1.0"?>
    <yandex>
    </yandex>
---
# Source: plausible-analytics/charts/clickhouse/templates/svc-clickhouse-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-clickhouse-headless
  labels:
    app.kubernetes.io/name: clickhouse-headless
    app.kubernetes.io/instance: release-name-headless
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: "None"
  ports:
  - port: 9000
    targetPort: tcp-port
    protocol: TCP
    name: tcp-port
  - port: 8123
    targetPort: http-port
    protocol: TCP
    name: http-port
  - port: 9009
    targetPort: inter-http-port
    protocol: TCP
    name: inter-http-port
  selector:
    app.kubernetes.io/name: clickhouse
    app.kubernetes.io/instance: release-name
---
# Source: plausible-analytics/charts/clickhouse/templates/svc-clickhouse-replica-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-clickhouse-replica-headless
  labels:
    app.kubernetes.io/name: clickhouse-replica-headless
    app.kubernetes.io/instance: release-name-replica-headless
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: "None"
  ports:
  - port: 9000
    targetPort: tcp-port
    protocol: TCP
    name: tcp-port
  - port: 8123
    targetPort: http-port
    protocol: TCP
    name: http-port
  - port: 9009
    targetPort: inter-http-port
    protocol: TCP
    name: inter-http-port
  selector:
    app.kubernetes.io/name: clickhouse-replica
    app.kubernetes.io/instance: release-name-replica
---
# Source: plausible-analytics/charts/clickhouse/templates/svc-clickhouse-replica.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-clickhouse-replica
  labels:
    app.kubernetes.io/name: clickhouse-replica
    app.kubernetes.io/instance: release-name-replica
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - port: 9000
    targetPort: tcp-port
    protocol: TCP
    name: tcp-port
  - port: 8123
    targetPort: http-port
    protocol: TCP
    name: http-port
  - port: 9009
    targetPort: inter-http-port
    protocol: TCP
    name: inter-http-port
  selector:
    app.kubernetes.io/name: clickhouse-replica
    app.kubernetes.io/instance: release-name-replica
---
# Source: plausible-analytics/charts/clickhouse/templates/svc-clickhouse.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-clickhouse
  labels:
    app.kubernetes.io/name: clickhouse
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - port: 9000
    targetPort: tcp-port
    protocol: TCP
    name: tcp-port
  - port: 8123
    targetPort: http-port
    protocol: TCP
    name: http-port
  - port: 9009
    targetPort: inter-http-port
    protocol: TCP
    name: inter-http-port
  selector:
    app.kubernetes.io/name: clickhouse
    app.kubernetes.io/instance: release-name
---
# Source: plausible-analytics/charts/postgresql/templates/primary/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql-hl
  namespace: "default"
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 15.4.0
    helm.sh/chart: postgresql-12.12.10
    app.kubernetes.io/component: primary
  annotations:
    # Use this annotation in addition to the actual publishNotReadyAddresses
    # field below because the annotation will stop being respected soon but the
    # field is broken in some versions of Kubernetes:
    # https://github.com/kubernetes/kubernetes/issues/58662
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  clusterIP: None
  # We want all pods in the StatefulSet to have their addresses published for
  # the sake of the other Postgresql pods even before they're ready, since they
  # have to be able to talk to each other in order to become ready.
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: primary
---
# Source: plausible-analytics/charts/postgresql/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 15.4.0
    helm.sh/chart: postgresql-12.12.10
    app.kubernetes.io/component: primary
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
      nodePort: null
  selector:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: primary
---
# Source: plausible-analytics/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-plausible-analytics
  labels:
    helm.sh/chart: plausible-analytics-0.1.1
    app.kubernetes.io/name: plausible-analytics
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8000
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: plausible-analytics
    app.kubernetes.io/instance: release-name
---
# Source: plausible-analytics/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-plausible-analytics
  labels:
    app: plausible
    helm.sh/chart: plausible-analytics-0.1.1
    app.kubernetes.io/name: plausible-analytics
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    checksum/secret: a3f2a1028f229bef70070137324c0d698367b02fbfcc801c9371261cd4ee9dd7
spec:
  replicas: 1
  selector:
    matchLabels:
      app: plausible
      app.kubernetes.io/name: plausible-analytics
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app: plausible
        app.kubernetes.io/name: plausible-analytics
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-plausible-analytics
      securityContext:
        {}
      containers:
        - name: plausible-analytics
          securityContext:
            {}
          image: "plausible/analytics:v2.0.0"
          imagePullPolicy: IfNotPresent
          command:
            - /entrypoint.sh
            - run
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  key: DATABASE_URL
                  name: release-name-plausible-analytics
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  key: SECRET_KEY_BASE
                  name: release-name-plausible-analytics
            - name: CLICKHOUSE_DATABASE_URL
              valueFrom:
                secretKeyRef:
                  key: CLICKHOUSE_DATABASE_URL
                  name: release-name-plausible-analytics
            - name: BASE_URL
              value: "http://example.com"
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          volumeMounts:
            - name: app-tmp
              mountPath: /app/tmp
          startupProbe:
            httpGet:
              path: /
              port: http
            failureThreshold: 30
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}


      initContainers:
        - name: plausible-init
          securityContext:
            {}
          image: "plausible/analytics:v2.0.0"
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -x
            - -c
            - /entrypoint.sh db createdb && /entrypoint.sh db migrate
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  key: DATABASE_URL
                  name: release-name-plausible-analytics
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  key: SECRET_KEY_BASE
                  name: release-name-plausible-analytics
            - name: CLICKHOUSE_DATABASE_URL
              valueFrom:
                secretKeyRef:
                  key: CLICKHOUSE_DATABASE_URL
                  name: release-name-plausible-analytics
            - name: BASE_URL
              value: "http://example.com"
          volumeMounts:
            - name: app-tmp
              mountPath: /app/tmp
      volumes:
        - name: app-tmp
          emptyDir: {}
---
# Source: plausible-analytics/charts/clickhouse/templates/statefulset-clickhouse-replica.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-clickhouse-replica
  labels:
    app.kubernetes.io/name: clickhouse-replica
    app.kubernetes.io/instance: release-name-replica
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  serviceName: release-name-clickhouse-replica-headless
  selector:
    matchLabels:
      app.kubernetes.io/name: clickhouse-replica
      app.kubernetes.io/instance: release-name-replica
  template:
    metadata:
      annotations:
        checksum/config: 52734b0983d075ebab500d3fca1c6a2165c373faa8d4c8fe6e9fe812a711de38
      labels:
        app.kubernetes.io/name: clickhouse-replica
        app.kubernetes.io/instance: release-name-replica
    spec:
      containers:
      - name: release-name-clickhouse-replica
        image: clickhouse/clickhouse-server:22.6-alpine
        imagePullPolicy: IfNotPresent
        command:
          - /bin/bash
          - -c
          - export SHARD=${HOSTNAME##*-} && /entrypoint.sh
        ports:
        - name: http-port
          containerPort: 8123
        - name: tcp-port
          containerPort: 9000
        - name: inter-http-port
          containerPort: 9009
        livenessProbe:
          tcpSocket:
            port: 9000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          tcpSocket:
            port: 9000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        volumeMounts:
        - name: release-name-clickhouse-replica-data
          mountPath: /var/lib/clickhouse
        - name: release-name-clickhouse-replica-logs
          mountPath: /var/log/clickhouse-server
        - name: release-name-clickhouse-config
          mountPath: /etc/clickhouse-server/config.d
        - name: release-name-clickhouse-metrica
          mountPath: /etc/clickhouse-server/metrica.d
        - name: release-name-clickhouse-users
          mountPath: /etc/clickhouse-server/users.d
      volumes:
      - name: release-name-clickhouse-replica-data
        emptyDir: {}
      - name: release-name-clickhouse-replica-logs
        emptyDir: {}
      - name: release-name-clickhouse-config
        configMap:
          name: release-name-clickhouse-config
          items:
          - key: config.xml
            path: config.xml
      - name: release-name-clickhouse-metrica
        configMap:
          name: release-name-clickhouse-metrica
          items:
          - key: metrica.xml
            path: metrica.xml
      - name: release-name-clickhouse-users
        configMap:
          name: release-name-clickhouse-users
          items:
          - key: users.xml
            path: users.xml
---
# Source: plausible-analytics/charts/clickhouse/templates/statefulset-clickhouse.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-clickhouse
  labels:
    app.kubernetes.io/name: clickhouse
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  serviceName: release-name-clickhouse-headless
  selector:
    matchLabels:
      app.kubernetes.io/name: clickhouse
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/config: 52734b0983d075ebab500d3fca1c6a2165c373faa8d4c8fe6e9fe812a711de38
      labels:
        app.kubernetes.io/name: clickhouse
        app.kubernetes.io/instance: release-name
    spec:
      containers:
      - name: release-name-clickhouse
        image: clickhouse/clickhouse-server:22.6-alpine
        imagePullPolicy: IfNotPresent
        command:
          - /bin/bash
          - -c
          - export SHARD=${HOSTNAME##*-} && /entrypoint.sh
        ports:
        - name: http-port
          containerPort: 8123
        - name: tcp-port
          containerPort: 9000
        - name: inter-http-port
          containerPort: 9009
        livenessProbe:
          tcpSocket:
            port: 9000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          tcpSocket:
            port: 9000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        volumeMounts:
        - name: release-name-clickhouse-data
          mountPath: /var/lib/clickhouse
        - name: release-name-clickhouse-logs
          mountPath: /var/log/clickhouse-server
        - name: release-name-clickhouse-config
          mountPath: /etc/clickhouse-server/config.d
        - name: release-name-clickhouse-metrica
          mountPath: /etc/clickhouse-server/metrica.d
        - name: release-name-clickhouse-users
          mountPath: /etc/clickhouse-server/users.d
      volumes:
      - name: release-name-clickhouse-data
        emptyDir: {}
      - name: release-name-clickhouse-logs
        emptyDir: {}
      - name: release-name-clickhouse-config
        configMap:
          name: release-name-clickhouse-config
          items:
          - key: config.xml
            path: config.xml
      - name: release-name-clickhouse-metrica
        configMap:
          name: release-name-clickhouse-metrica
          items:
          - key: metrica.xml
            path: metrica.xml
      - name: release-name-clickhouse-users
        configMap:
          name: release-name-clickhouse-users
          items:
          - key: users.xml
            path: users.xml
---
# Source: plausible-analytics/charts/postgresql/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 15.4.0
    helm.sh/chart: postgresql-12.12.10
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  serviceName: release-name-postgresql-hl
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/component: primary
  template:
    metadata:
      name: release-name-postgresql
      labels:
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: postgresql
        app.kubernetes.io/version: 15.4.0
        helm.sh/chart: postgresql-12.12.10
        app.kubernetes.io/component: primary
    spec:
      serviceAccountName: default
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/name: postgresql
                    app.kubernetes.io/component: primary
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      hostNetwork: false
      hostIPC: false
      containers:
        - name: postgresql
          image: docker.io/bitnami/postgresql:15.4.0-debian-11-r45
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsGroup: 0
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: "/bitnami/postgresql"
            - name: PGDATA
              value: "/bitnami/postgresql/data"
            # Authentication
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-postgresql
                  key: postgres-password
            - name: POSTGRES_DATABASE
              value: "plausible"
            # Replication
            # Initdb
            # Standby
            # LDAP
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            # TLS
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            # Audit
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            # Others
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: "error"
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: "pgaudit"
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "postgres" -d "dbname=plausible" -h 127.0.0.1 -p 5432
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "postgres" -d "dbname=plausible" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
          resources:
            limits: {}
            requests:
              cpu: 250m
              memory: 256Mi
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /bitnami/postgresql
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: plausible-analytics/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-plausible-analytics-test-connection"
  labels:
    helm.sh/chart: plausible-analytics-0.1.1
    app.kubernetes.io/name: plausible-analytics
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-plausible-analytics:80']
  restartPolicy: Never
