---
# Source: amorphie/charts/amorphie-third-party/charts/camunda-platform/charts/elasticsearch/charts/kibana/templates/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: release-name-kibana
  namespace: "default"
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kibana
    app.kubernetes.io/version: 8.12.1
    helm.sh/chart: kibana-10.11.2
    app.kubernetes.io/component: server
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: kibana
      app.kubernetes.io/component: server
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 5601
---
# Source: amorphie/charts/amorphie-third-party/charts/camunda-platform/charts/elasticsearch/templates/master/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: release-name-elasticsearch-master
  namespace: "default"
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/version: 8.12.2
    helm.sh/chart: elasticsearch-19.19.4
    app.kubernetes.io/component: master
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: elasticsearch
      app.kubernetes.io/component: master
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 9200
        - port: 9300
---
# Source: amorphie/charts/amorphie-third-party/charts/camunda-platform/charts/elasticsearch/charts/kibana/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kibana
  namespace: "default"
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kibana
    app.kubernetes.io/version: 8.12.1
    helm.sh/chart: kibana-10.11.2
automountServiceAccountToken: false
---
# Source: amorphie/charts/amorphie-third-party/charts/camunda-platform/charts/elasticsearch/templates/master/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-elasticsearch-master
  namespace: "default"
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/version: 8.12.2
    helm.sh/chart: elasticsearch-19.19.4
    app.kubernetes.io/component: master
automountServiceAccountToken: false
---
# Source: amorphie/charts/amorphie-third-party/charts/camunda-platform/templates/zeebe-gateway/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: zeebe-gateway-sa
  labels:
    app: camunda-platform
    app.kubernetes.io/name: camunda-platform
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: camunda-platform
    helm.sh/chart: camunda-platform-9.3.2
    app.kubernetes.io/version: "8.4.5"
    app.kubernetes.io/component: zeebe-gateway
automountServiceAccountToken: false
---
# Source: amorphie/charts/amorphie-third-party/charts/camunda-platform/templates/zeebe/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: zeebe-sa
  labels:
    app: camunda-platform
    app.kubernetes.io/name: camunda-platform
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: camunda-platform
    helm.sh/chart: camunda-platform-9.3.2
    app.kubernetes.io/version: "8.4.5"
    app.kubernetes.io/component: zeebe-broker
automountServiceAccountToken: false
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr-dashboard/templates/dapr_dashboard_serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dapr-dashboard
  labels:
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr-dashboard
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 0.14.0
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_rbac/templates/injector.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dapr-injector
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_rbac/templates/operator.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dapr-operator
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_rbac/templates/placement.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dapr-placement
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_rbac/templates/sentry.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dapr-sentry
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
---
# Source: amorphie/charts/amorphie-third-party/charts/hazelcast/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-hazelcast
  labels:
    app.kubernetes.io/name: hazelcast
    helm.sh/chart: hazelcast-5.8.2
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
---
# Source: amorphie/charts/amorphie-third-party/charts/postgresql/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-12.1.6
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "15.1.0"
  annotations:
automountServiceAccountToken: true
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_operator/templates/dapr_operator_deployment.yaml
apiVersion: v1
kind: Secret
metadata:
  name: dapr-webhook-cert
  labels:
    app: dapr-operator
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURwRENDQW95Z0F3SUJBZ0lSQUlxUGFjNlViMVFqRllKWUZhc2hheTh3RFFZSktvWklodmNOQVFFTEJRQXcKR2pFWU1CWUdBMVVFQXhNUFpHRndjaTEzWldKb2IyOXJMV05oTUI0WERUSTBNRFV4TlRBM01UTXpPVm9YRFRNMApNRFV4TXpBM01UTXpPVm93RnpFVk1CTUdBMVVFQXhNTVpHRndjaTEzWldKb2IyOXJNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF2WGhHM2RUSjNCd2RxUVg5RU5GWFRsWUpXMlhyRnRvZVRWbGgKZlQ1K0xKdEJPbi8xMFRJUGRMTlZ1MVA0Zk9Ja0dIOW5jbzAwRVpyUitKbnJidXViSGRZOUNkR2xJSlNDZndQYQpveTRrMEtleWJnV2c3ZytRb3FFQ0ZMQ01KMW5LZm50UUN2QUlVZHV6RFFMUTgwdG80OWdqQS90VzJPRU5VYjRKCkgyc2c2Q3V4cVRlWnFjTlRPVW9aL2c4OWhTNXJpZS9ObUk1ZXgvZUcyKzBUeU93LzhMMjF4VkovYmNhWGxmRUYKMXFGZTNPMC9yVDR3WnZQODZiWUNzbW5VN2RpK3JKNVZHeExVUTNiMm5RdElibUl1ZTlXbThPWWRnZWRncnhxKwpuWDhZelpSbWh2d2ovRzYzYnpsUDE3Y2had3NNbFRGdE1iNXJQMWlhMEUvL0FPNVh4d0lEQVFBQm80SG5NSUhrCk1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXcKREFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlJ3NkdZaVRwV1VsNEF1NWZST015d0lnVHJDQXpDQgpnd1lEVlIwUkJId3dlb0lVWkdGd2NpMTNaV0pvYjI5ckxtUmxabUYxYkhTQ0dHUmhjSEl0ZDJWaWFHOXZheTVrClpXWmhkV3gwTG5OMlk0SWdaR0Z3Y2kxM1pXSm9iMjlyTG1SbFptRjFiSFF1YzNaakxtTnNkWE4wWlhLQ0ptUmgKY0hJdGQyVmlhRzl2YXk1a1pXWmhkV3gwTG5OMll5NWpiSFZ6ZEdWeUxteHZZMkZzTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0xOTnNqTnJGaGVVUUxpMmdFS3gyMjI3Um9KMVNHZU9tRWRoaS9RSmwzYnFFWFBHK2VJK211CmVVUDhBSUEwT21XMm94ZmhwU043bmdVZzJiNnlZeWVQS245TU51Z1llTmNBekp2TDRuV0poVkxQTytjUFRzYUkKTE5DbmsvVkxvZk1paDc1dWJaYy9SeVRHSldtOW1NTlJXeXIrQnkzbkYycFMwTnpjQXA2N3pwY2pMVTd0eU5mWgpUUks4ZnIrSlpMWXJDRitwMk4yTFk4cnBPTnpIQkp1dWhuYXNESzA1Kzc2SmFMNkFqVXliWnlmcUdTSUdhekRyCmtNTDZpUjg2SEtYZDVybzkzNUF4cHVJMG1hUVN4aXh3ZHR6anN4eHRiUm10Y3dOR09iUGtDdXJTN3JwbXhES3IKTnB5TWtibEtqL1FnUlNiRWRJY0NSNlB5VE5EUEhwcmgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  

  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdlhoRzNkVEozQndkcVFYOUVORlhUbFlKVzJYckZ0b2VUVmxoZlQ1K0xKdEJPbi8xCjBUSVBkTE5WdTFQNGZPSWtHSDluY28wMEVaclIrSm5yYnV1YkhkWTlDZEdsSUpTQ2Z3UGFveTRrMEtleWJnV2cKN2crUW9xRUNGTENNSjFuS2ZudFFDdkFJVWR1ekRRTFE4MHRvNDlnakEvdFcyT0VOVWI0Skgyc2c2Q3V4cVRlWgpxY05UT1VvWi9nODloUzVyaWUvTm1JNWV4L2VHMiswVHlPdy84TDIxeFZKL2JjYVhsZkVGMXFGZTNPMC9yVDR3Clp2UDg2YllDc21uVTdkaStySjVWR3hMVVEzYjJuUXRJYm1JdWU5V204T1lkZ2VkZ3J4cStuWDhZelpSbWh2d2oKL0c2M2J6bFAxN2NoWndzTWxURnRNYjVyUDFpYTBFLy9BTzVYeHdJREFRQUJBb0lCQUVLc1RwUEZTM3R2VVdpbgpPTlJ3Tmo3VXU5b3oxVFJuY1A1YkU1bFZJbVZrQk9JbklVT0tVRElLNFlKWUhEc21BUG0xNjVzOTRUTEl2bGF6Ckkwd1hFTERCTVIyQmJwQTJjbTFyMThaUWVKZ01TeGU0VjFjdWx3RURrNDNnU3BHV1lWRjg1ei9TRTd0cWltbHIKc2tmTEk0LzZBT2hueTducUNCdlp1YkFhckt2R0NXOEpNaXI0dFduNm9uL1NYQU8yUWVkUjF5anVLTy80Um95cwo1Qi9KeHF5cnBMdkI2QmZBakZZcytLdFM3NTdvQzBVVEdENWhnUnV0ZXJHVHkyUHgySkUvYThvMDlDcDVJeDRNCmNMOHExby90UHlsSG1vV09Tc2FweU5oN0ROWjFaWFArMFFBTHNTaHFDK1RtOHMzbXlPQ0R0K1duMHkyLzBPbngKOGIwSzRnRUNnWUVBM2ZRcVJzWmVNNlpVSVpHNGYxZUlKSm5XTFh3MXhJdHYxemsxWkJYWWFOS0FJdThIREhOYQpaaUFtVDlMTFhvN2haeWxSRG5VYS9QSnB0SXFvMU9pd0NSdTBDRDE2ang5SERTcGhLeWdHVHlzZnlQamZRVUVxCi9wYk54VUpWd0RjSGludzh4Tld5TnNjTUlMQkIrZmswUlRWRkVLNjdlV0xOelRZSUpJc3B1SUVDZ1lFQTJvaUMKZ25hVC9FUk5VM3lhUjd3dFZJZVVuU0NTWktuM3RPaXQzVlpZVFptYnF3cjRmRTV5Um5uNUt4bVRPM004bU9XaApBMHA2R0o1RDlCNVFKRHVnYVZaN2RoTW9XY0FSZXBYRTdLTUNJNGZRd3p1a2d4U29aZ2s5L21vOHRvRDlqWXZCCk5BeXYxYW5adEhYemV5bHhNMUxvS1NyeGNPdzBnQm4rWHhtbUxFY0NnWUVBMUJKSERzYmRIV2F3Zmo2NDFWdXkKWnA1aXFhVkR6cDhZWnNGdnhVaW1OVW5rU3Z5dWRIUUhqUXJzOEZwT0hQUlNaSHB5eTJpVE45cjdxeGpOeGxqcQpVbG1aQkVLUnh3eXdtK0RCWlRYaUNXVUFBc3ZnclgzeDhiM3ZzS240T3llWldmWHBMbjJzd1hBZ28xOG1PdzJrCnB2Z0dITEdIeWF6aFRWRnlLRkNidFlFQ2dZQWZWTHNCWVdiT0lDekY3M05mSFllU091My9xUS9VQnRwUXdadEwKeEhsY2hzMWV0Ry96d250M3h6MEdCT0NyQVZhS3hVRlVhM1VkMm5MN3FPenNoTy8ycWtPQkpqWCt5QjY1YUllWApOYmUweUdBUjNaYzBnOTJ3NDFwVUEzODQyejErOGE1OWUrUXB5ZlJBZnppdFM3L0REL3ZoQ3hzYWlZTHRhc3loCmJkZjVPUUtCZ1FDZ1JPZ21sejNJaEZieHlaRXdHUXFNVUdhYk52WU5HZ2RITkNUb3JtNUVWaEExYWViL3RoN28KQVVVd3RuNmRqdmY1QlZoNUV5V0ljLzFHam1MbVhQdWF0YTVKQm9kZkQxdEt3NTNNU2FsdnBWQXhScjlldU16Vwp6VU91ck5xTWgzUnArZm91RWRtZDgvM2FGblEwbzRkR2JYbXMvellNMWV0dmRMaGFiaG9URnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_operator/templates/dapr_operator_deployment.yaml
apiVersion: v1
kind: Secret
metadata:
  name: dapr-webhook-ca
  labels:
    app: dapr-operator
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
data:
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIekNDQWdlZ0F3SUJBZ0lRQlp4MVV6WXJXNnd2V1NtODdFMmY4REFOQmdrcWhraUc5dzBCQVFzRkFEQWEKTVJnd0ZnWURWUVFERXc5a1lYQnlMWGRsWW1odmIyc3RZMkV3SGhjTk1qUXdOVEUxTURjeE16TTVXaGNOTXpRdwpOVEV6TURjeE16TTVXakFhTVJnd0ZnWURWUVFERXc5a1lYQnlMWGRsWW1odmIyc3RZMkV3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURLSU5pQ0c1OW5ESkRZWlpnSUxoM0FRdUIxZExLdDNoTUsKYXd3Vlg4SEs2bmkzVGc5Sy90ZDEyMU9YQ1Q0VHdBMEVHWEtMT29tdDdDZnpGTTduaTdhM2x4aDE4VEJYblZRZwpKYU54d0dLU2Y0dEdJMnoxTHpvQmZLUnp5L2pNcnBQZDkwQmRKR2NxOGVMMjVXYWtobG1ZUkR4SThDTFBKUFkyCml0NmhqZDN6NVoySFc3Z3loYjZTaTI5SWwrdFp5cXZWV3ZZaGY5WW5XbVZ4aFBuam85LzdpUmxXZkZzd1k2ODQKNWs0N3lQdXB1L05pUVJSZVJndXhFODZXbk1SYmVxc1IyYkVnaklCMVBHOFQ4eGFCUFBkanBOcnZOK3M1OVhTSQpGam5waXh3YVVqNHFFNU5sc0FFc2U2UXFBQXoybkM2RjlHTStMMXRTalN0dU9yRU55bTJSQWdNQkFBR2pZVEJmCk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXcKRHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVY09obUlrNlZsSmVBTHVYMFRqTXNDSUU2d2dNdwpEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQWdhWXdteEtaNUF6ZFZNNnJJUXpqaUU4WGNxWjhUdnVMZTRTbGdWCmgxVDhlRllRSkVOeThlNGl5ekZEdXNuRGZVUk1lZjBTYVRSQUZEemNDY0ZWbjU1dXdUYVk3ZS9FWjM5YUVIWFMKbGJ2blFqQ0dlQzEwLzJSdDlBcWZDUTNlbTdRN211RGE1WkdvemFFYndnT3ZqWmNRa3lUVlhHayt6S2xmbVJBeQo4SnJ2UmpsVU41SGN3bWUvWUJzb3Z6UU9ldS9kN3VOQ0FvM2JiM0NHZUsvOXJEZ1pBMlZ2NzlxSGhiOFR5YS9lClNsTjFaYmVqTmFPSU9abGhFYU9EMlJTaUJUMzFqZ0pvVWIxaTgvQStRMlNTYk90SDJDUCtISE85dWY2aDFneGEKb2xja1FFaXgyZ0dzRUNuUG1xa2lqNXRhWVRMOXJJWVRiVERQcEltVDRudTZtOHM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_sentry/templates/dapr_sentry_deployment.yaml
apiVersion: v1
kind: Secret
metadata:
  name: dapr-trust-bundle
  labels:
    app: dapr-sentry
    app.kubernetes.io/component: sentry
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
data:
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_sidecar_injector/templates/dapr_sidecar_injector_webhook_config.yaml
apiVersion: v1
kind: Secret
metadata:
  name: dapr-sidecar-injector-cert
  labels:
    app: dapr-sidecar-injector
    app.kubernetes.io/component: sidecar-injector
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQzakNDQXNhZ0F3SUJBZ0lSQUlDRXVzMGNGanRiT2tDc0VPaUNFQ2d3RFFZSktvWklodmNOQVFFTEJRQXcKSXpFaE1COEdBMVVFQXhNWVpHRndjaTF6YVdSbFkyRnlMV2x1YW1WamRHOXlMV05oTUI0WERUSTBNRFV4TlRBMwpNVE16TlZvWERUTTBNRFV4TXpBM01UTXpOVm93SURFZU1Cd0dBMVVFQXhNVlpHRndjaTF6YVdSbFkyRnlMV2x1CmFtVmpkRzl5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF4VVVQNjZhdTMvVm4KTFJDc0dxTmswMUtGdlE0R0h5TytMSTg3eHVvLy9Lamx6M3ZUYVgyaGJreUwxZGFzR0l4NXBHSlZmWVYvVGFiRgpuNS81UzlQS1E0YzE1ZjJZeXUyWTFPZTZVdGpJcEJ3VzhWMnp0cHcwRktIUVRubFdYUXNEaW03bXpQelpiRXB0CnZSZEtsRnVrWjFCNHdvWC93eE1qVUxkNTRGV1FNQmdtLzBnYWdxZDd3cjNEbTN0YXFpVFUxNmZYbEJTRVdldUsKMHNTQmJhUitlcUxWNHpQa29lK25Yb1lrTGlhM3NYQnJaeFVFdWVBUHREVkFya1p4NVJjdEpsOWxGVDJIYlV1NwpmbkZsMjdBN3BmWk05VngvUjFRWGtzQlV1ekxQbWJCTlpLbGxyY1ArMEt1LzBPVzR3UURIN0l4SXNlVFBFSzFPCmwxV09CL0hYMVFJREFRQUJvNElCRGpDQ0FRb3dEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUcKQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRktwNgpCbEw2K2g4aXRQZ1lkVFpxSVo3ZzBZN01NSUdwQmdOVkhSRUVnYUV3Z1o2Q0hXUmhjSEl0YzJsa1pXTmhjaTFwCmJtcGxZM1J2Y2k1a1pXWmhkV3gwZ2lGa1lYQnlMWE5wWkdWallYSXRhVzVxWldOMGIzSXVaR1ZtWVhWc2RDNXoKZG1PQ0tXUmhjSEl0YzJsa1pXTmhjaTFwYm1wbFkzUnZjaTVrWldaaGRXeDBMbk4yWXk1amJIVnpkR1Z5Z2k5awpZWEJ5TFhOcFpHVmpZWEl0YVc1cVpXTjBiM0l1WkdWbVlYVnNkQzV6ZG1NdVkyeDFjM1JsY2k1c2IyTmhiREFOCkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQW93T01mUSttbHgxcDBMWWhZT3J4aVBndm1UQTRRWmJ2NFVtVTFXalAKbFlQeU15RnJ2YlZ3b0RMd3krM3ZFSkt3bUtQRkxZTndKVDU3b0Q4Ukw5ekRJQ1NtaGU2VmpEU3k3QnZwVUhlRgprY3NTY2xYSkVpRWl4aHUrNTRIbUpUQ2V2VEVGcndtVXNnd1NWbzkzNzNVbExvdkJQTldxd0xnNFQ3N2lZSjM4CjJRVmtKRVBtNmZ5Vk9nTHBKSElBbHE2OVNrbHNCQnBzWExCb3FRQTYwMUh4MWRidnphcUVrWjZleUJaWW5FeTIKdjAvbjJEdHdsSy9wWHhOZVUySjMxb1BvVmg4QXI5ZXNKd0ZTL3dSbFd3RllYeEZHVnFRUU51V09XTmJQaXdtRgptYnJ1cDNYT0dsblhMYnlFV3ZQTHo5S0crbEFMM2NkYTJpTGNZVkVlM0g2QlNBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  

  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeFVVUDY2YXUzL1ZuTFJDc0dxTmswMUtGdlE0R0h5TytMSTg3eHVvLy9Lamx6M3ZUCmFYMmhia3lMMWRhc0dJeDVwR0pWZllWL1RhYkZuNS81UzlQS1E0YzE1ZjJZeXUyWTFPZTZVdGpJcEJ3VzhWMnoKdHB3MEZLSFFUbmxXWFFzRGltN216UHpaYkVwdHZSZEtsRnVrWjFCNHdvWC93eE1qVUxkNTRGV1FNQmdtLzBnYQpncWQ3d3IzRG0zdGFxaVRVMTZmWGxCU0VXZXVLMHNTQmJhUitlcUxWNHpQa29lK25Yb1lrTGlhM3NYQnJaeFVFCnVlQVB0RFZBcmtaeDVSY3RKbDlsRlQySGJVdTdmbkZsMjdBN3BmWk05VngvUjFRWGtzQlV1ekxQbWJCTlpLbGwKcmNQKzBLdS8wT1c0d1FESDdJeElzZVRQRUsxT2wxV09CL0hYMVFJREFRQUJBb0lCQVFDSGZkRGFoU2kxY0dORwpRNTVCeVpvVnZ5ZFdXNHgrMU5qbzJCUXhvbkVDZzZzY1lDc3IySHNKUEJBTGRwL0xXS2l2N0U1Vm9WeDNwQ1UyClp2VWVUTUF1czI2a29oTFF4bkpqUVNucmZ6UUg2N2NpWHI1eG5VWDBLZFBlSWw3Y0Z4VitmbitOcWRsWUZLTGMKN21OdUZLZU53bXEvQ0xSTGN4aWRkdmVCeXFMM05GbUJOeU92a2cxNlJKUGFLcjVaMFNXM1JKdUFHTTFneEF6dgptcWVhN1B6MlkzNXY5YWI5VnRjakNZdW9ZcnZhYUVKdlV0dWhwak40U3AwQTZzRE5WTnNER29JY0I2MVBTRURGCjMwMUI1MjhqYnlUM3FWVThZdytmQnFEaURKaXFWdFRkQndrMWJNcU1hdk5tSVJINit3dUVhK0xBWnNCeDBjOXkKbWtaRzdNTGhBb0dCQU15M0JjY3FybjdIQXFzN3BxQjJsbWs5b3BiY1d3VDZtc29BdHJ3ekhoYVpNbkRTcnlwVAo3cURxSWFPNkpjRkd6eTk1MERtZzJ5K2wxREl0ZDVRR1lzYnRiZWlsdFA1aC80ak9SNDJoaDd3Z1hyZm5Dbk9qClRBV0hzS1NJUmFlOFplMk13ellrTExJS1ltZkszNzRsdWEwb2ZYaFdrYm5ITkNHU3F3V3FhTWR0QW9HQkFQYXcKanp3WWlHb2pCaEhLT3ZKc0hQZlYzQ0V3YzZUalNvNUpIbDFYa25VcmFST0hreU8zeFV1SVcwdTlDdmNPOGZGVQpZSGUrR1JaR2k3L0cvQUNVSnd2cU5qaU9Lb01JYndzZkNxVEhlSkFjdndKMzRUZC9KMXNoSjZIUlZoSHBlYmcwCjkwQjBVNDhzQmRaWHJad2hObFh4MW9Ea2xWY25SN2xHVlNtQVFBa0pBb0dBTmcwOUlWRkxzWDJxWHJ2cFN3VUUKd2RUY1VTanRmMnNMNDdvOGhZU1p0UzNOKzZ3bFErL1ZXZmQzMmxzVURPdzlXRE81bnYyeDRlclBGRkNjK2lDVgpoQ0M4bkdqa1dTWlc2akJOQkVCYUxubjlpR0VnaVZmY2dybEpFcWhJZS9scWtFWlNaTUU0YStvQ0FaVzNiZVZZCkdUaFBxSzV5MjdLVk9TZ1lyKzVHckNFQ2dZRUFob2EwSmFhUFJhb0IxbE85SDVSYm03K1JRcndrWkdmYXNZc28KTnVqWm9uSGc1RmlMb2UvR2RMRlFjQllRVTdoZnNpWThVVEJtaCtKQ3RYdHkwM0gzZFNUdEdweFVqSTVkMStlKwpxeXRvRU5iTVJ6Rk9yUy8zSzFnQ1A5bGpvWEw4QUx0SmxtbVpZN3N6RjdkS29wanVBNkpWUW9iazlka2k0T044Cjc1dlR6OWtDZ1lBaUlWTjNXK3FOdjMxTVRWM1RiNlJvWUZtcTZGMSt4YitHNTFWTExXek1jOHkvUTh5WWVCc24Kc2VOeFlldGpuemt1bUxHcU5XdjI4UllhenpxUlcvemdMRWtpRkpoQTdrUEFaVUI3Smh0a0FFVUkzbDNTNWwxVApTYnI5SWlUeWQ5cHgySzNTZ1l5bTFyNFJIY0JQWXVHa042QTVQVEFvMkVQSGdQaEl0K0FFS2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: amorphie/charts/amorphie-third-party/charts/postgresql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-12.1.6
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "15.1.0"
type: Opaque
data:
  postgres-password: "YW1vcnBoaWU="
  password: "YW1vcnBoaWU="
  # We don't auto-generate LDAP password when it's not provided as we do for other passwords
---
# Source: amorphie/charts/amorphie-third-party/charts/camunda-platform/charts/elasticsearch/charts/kibana/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-kibana-conf
  namespace: "default"
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kibana
    app.kubernetes.io/version: 8.12.1
    helm.sh/chart: kibana-10.11.2
data:
  kibana.yml: |
    pid.file: /opt/bitnami/kibana/tmp/kibana.pid
    server.host: "::"
    server.port: 5601
    elasticsearch.hosts: [http://release-name-elasticsearch:9200]
    server.rewriteBasePath: false
---
# Source: amorphie/charts/amorphie-third-party/charts/camunda-platform/templates/camunda/configmap-release.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-camunda-platform-release
  labels:
    app: camunda-platform
    app.kubernetes.io/name: camunda-platform
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: camunda-platform
    helm.sh/chart: camunda-platform-9.3.2
    app.kubernetes.io/version: "8.4.5"
  annotations:
    {}
data:
  info: |-
    - name: release-name
      namespace: default
      version: 9.3.2
      components:
      
      - name: Zeebe Gateway
        id: zeebeGateway
        version: 8.4.5
        url: grpc://
        readiness: http://release-name-zeebe-gateway.default:9600/actuator/health/readiness
        metrics: http://release-name-zeebe-gateway.default:9600/actuator/prometheus
      - name: Zeebe
        id: zeebe
        version: 8.4.5
        readiness: http://release-name-zeebe.default:9600/actuator/health/readiness
        metrics: http://release-name-zeebe.default:9600/actuator/prometheus
---
# Source: amorphie/charts/amorphie-third-party/charts/camunda-platform/templates/zeebe-gateway/configmap.yaml
kind: ConfigMap
metadata:
  name: release-name-zeebe-gateway
  labels:
    app: camunda-platform
    app.kubernetes.io/name: camunda-platform
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: camunda-platform
    helm.sh/chart: camunda-platform-9.3.2
    app.kubernetes.io/version: "8.4.5"
    app.kubernetes.io/component: zeebe-gateway
apiVersion: v1
data:
  gateway-log4j2.xml: |
---
# Source: amorphie/charts/amorphie-third-party/charts/camunda-platform/templates/zeebe/configmap.yaml
kind: ConfigMap
metadata:
  name: release-name-zeebe
  labels:
    app: camunda-platform
    app.kubernetes.io/name: camunda-platform
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: camunda-platform
    helm.sh/chart: camunda-platform-9.3.2
    app.kubernetes.io/version: "8.4.5"
    app.kubernetes.io/component: zeebe-broker
apiVersion: v1
data:
  startup.sh: |
    #!/usr/bin/env bash
    set -eux -o pipefail
    export ZEEBE_BROKER_CLUSTER_NODEID=${ZEEBE_BROKER_CLUSTER_NODEID:-$[${K8S_NAME##*-} * 1 + 0]}

    if [ "$(ls -A /exporters/)" ]; then
      mkdir -p /usr/local/zeebe/exporters/
      cp -a /exporters/*.jar /usr/local/zeebe/exporters/
    else
      echo "No exporters available."
    fi
    exec /usr/local/zeebe/bin/broker

  broker-log4j2.xml: |
---
# Source: amorphie/charts/amorphie-third-party/charts/hazelcast/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-hazelcast-configuration
  labels:
    app.kubernetes.io/name: hazelcast
    helm.sh/chart: hazelcast-5.8.2
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
data:
  hazelcast.yaml: |-
    hazelcast:
      jet:
        enabled: ${hz.jet.enabled}
      network:
        join:
          kubernetes:
            enabled: true
            namespace: ${namespace}
            service-name: ${serviceName}
        rest-api:
          enabled: true
---
# Source: amorphie/charts/amorphie-third-party/charts/hazelcast/templates/mancenter-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-hazelcast-mancenter-configuration
  labels:
    app.kubernetes.io/name: hazelcast-mancenter
    helm.sh/chart: hazelcast-5.8.2
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
data:
  hazelcast-client.yaml: |-
    hazelcast-client:
      network:
        kubernetes:
          enabled: true
          namespace: ${namespace}
          service-name: ${serviceName}
---
# Source: amorphie/charts/amorphie-third-party/templates/simple-monitor/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-amorphie-third-party-simple-monitor-config
  namespace: default
data:

  application.yaml: |    
    zeebe:
 
      client:
        broker.gatewayAddress: release-name-zeebe-gateway:26500
        security.plaintext: true
 
        worker:
          hazelcast:
            connection: release-name-hazelcast:5701
            clusterName: dev
            connectionTimeout: PT30S
 
    spring:
 
      datasource:
        url: jdbc:postgresql://release-name-postgresql-hl.default.svc:5432/postgres
        username: amorphie
        password: amorphie
        driverClassName: org.postgresql.Driver
 
      jpa:
        database-platform: org.hibernate.dialect.PostgreSQLDialect
        hibernate:
          ddl-auto: update
 
      mustache:
        prefix: classpath:/templates/
        suffix: .html
        expose-request-attributes: true
 
      data:
        web:
          pageable:
            default-page-size: 100
 
    server:
      port: 8082
      servlet:
        context-path: /
 
    logging:
      level:
        root: ERROR
        io.zeebe: INFO
        io.zeebe.monitor: DEBUG
        com.hazelcast: WARN
 
    white-label:
      logo.path: img/logo.png
      custom:
        title: Zeebe Simple Monitor
        css.path: css/custom.css
        js.path: js/custom.js
---
# Source: amorphie/charts/amorphie-third-party/charts/camunda-platform/charts/elasticsearch/charts/kibana/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-kibana
  namespace: "default"
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kibana
    app.kubernetes.io/version: 8.12.1
    helm.sh/chart: kibana-10.11.2
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr-dashboard/templates/dapr_dashboard_serviceaccount.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-dashboard
  labels:
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr-dashboard
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 0.14.0
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log", "namespaces"]
  verbs: ["get", "list"]
- apiGroups: ["apps"]
  resources: ["deployments", "components", "configurations", "statefulsets"]
  verbs: ["get", "list"]
- apiGroups: ["dapr.io"]
  resources: ["components", "configurations"]
  verbs: ["get", "list"]
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_rbac/templates/injector.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-injector
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
rules:
  - apiGroups: [""]
    resources: ["serviceaccounts"]
    verbs: ["get", "list"]
  - apiGroups: ["dapr.io"]
    resources: ["configurations", "components"]
    verbs: [ "get", "list"]
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_rbac/templates/operator.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-operator-admin
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
rules:
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "patch"]
  - apiGroups: ["apps"]
    resources: ["deployments", "deployments/finalizers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["deployments/finalizers"]
    verbs: ["update"]
  - apiGroups: ["apps"]
    resources: ["statefulsets", "statefulsets/finalizers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["statefulsets/finalizers"]
    verbs: ["update"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "delete", "watch"]
  - apiGroups: [""]
    resources: ["services","services/finalizers"]
    verbs: ["get", "list", "watch", "update", "create"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["delete"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["dapr.io"]
    resources: ["components", "configurations", "subscriptions", "resiliencies", "httpendpoints"]
    verbs: [ "get", "list", "watch"]
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_rbac/templates/placement.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-placement
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
rules: []
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_rbac/templates/sentry.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-sentry
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
rules:
  - apiGroups: ["authentication.k8s.io"]
    resources: ["tokenreviews"]
    verbs: ["create"]
  - apiGroups: ["dapr.io"]
    resources: ["configurations"]
    verbs: ["list"]
---
# Source: amorphie/charts/amorphie-third-party/charts/hazelcast/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-hazelcast-default
  labels:
    app.kubernetes.io/name: hazelcast
    helm.sh/chart: hazelcast-5.8.2
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - pods
  - nodes
  - services
  verbs:
  - get
  - list
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr-dashboard/templates/dapr_dashboard_serviceaccount.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-dashboard
  labels:
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr-dashboard
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 0.14.0
subjects:
- kind: ServiceAccount
  name: dapr-dashboard
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dapr-dashboard
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_rbac/templates/injector.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-injector
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
subjects:
- kind: ServiceAccount
  name: dapr-injector
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dapr-injector
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_rbac/templates/operator.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-operator-admin
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
subjects:
- kind: ServiceAccount
  name: dapr-operator
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dapr-operator-admin
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_rbac/templates/placement.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-placement
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
subjects:
- kind: ServiceAccount
  name: dapr-placement
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dapr-placement
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_rbac/templates/sentry.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-sentry
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
subjects:
- kind: ServiceAccount
  name: dapr-sentry
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dapr-sentry
---
# Source: amorphie/charts/amorphie-third-party/charts/hazelcast/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-hazelcast-default
  labels:
    app.kubernetes.io/name: hazelcast
    helm.sh/chart: hazelcast-5.8.2
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-hazelcast-default
subjects:
- kind: ServiceAccount
  name: release-name-hazelcast
  namespace: default
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_rbac/templates/injector.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-injector
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
    resourceNames: ["dapr-trust-bundle"]
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_rbac/templates/operator.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-operator
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
rules:
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "list", "watch", "update", "create"]
    resourceNames: ["operator.dapr.io", "webhooks.dapr.io"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch", "update", "create"]
    resourceNames: ["operator.dapr.io", "webhooks.dapr.io"]
# We cannot use resourceNames for create because Kubernetes doesn't nessarily
# know resource names at authorization time.
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["configmaps", "events"]
    verbs: ["create"]
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_rbac/templates/secret-reader.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-reader
  namespace: default
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_rbac/templates/sentry.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-sentry
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "update"]
    resourceNames: ["dapr-trust-bundle"]
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_rbac/templates/injector.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-injector
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
subjects:
- kind: ServiceAccount
  name: dapr-injector
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dapr-injector
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_rbac/templates/operator.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-operator
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
subjects:
- kind: ServiceAccount
  name: dapr-operator
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dapr-operator
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_rbac/templates/secret-reader.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-secret-reader
  namespace: default
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
subjects:
- kind: ServiceAccount
  name: default
roleRef:
  kind: Role
  name: secret-reader
  apiGroup: rbac.authorization.k8s.io
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_rbac/templates/sentry.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: dapr-sentry
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
subjects:
- kind: ServiceAccount
  name: dapr-sentry
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dapr-sentry
---
# Source: amorphie/charts/amorphie-third-party/charts/camunda-platform/charts/elasticsearch/charts/kibana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kibana
  namespace: "default"
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kibana
    app.kubernetes.io/version: 8.12.1
    helm.sh/chart: kibana-10.11.2
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: http
      port: 5601
      targetPort: http
      nodePort: null
  selector:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: kibana
---
# Source: amorphie/charts/amorphie-third-party/charts/camunda-platform/charts/elasticsearch/templates/master/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-elasticsearch-master-hl
  namespace: "default"
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/version: 8.12.2
    helm.sh/chart: elasticsearch-19.19.4
    app.kubernetes.io/component: master
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: tcp-rest-api
      port: 9200
      targetPort: rest-api
    - name: tcp-transport
      port: 9300
      targetPort: transport
  selector:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: master
---
# Source: amorphie/charts/amorphie-third-party/charts/camunda-platform/charts/elasticsearch/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-elasticsearch
  namespace: "default"
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/version: 8.12.2
    helm.sh/chart: elasticsearch-19.19.4
    app.kubernetes.io/component: master
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: tcp-rest-api
      port: 9200
      targetPort: rest-api
      nodePort: null
    - name: tcp-transport
      port: 9300
      nodePort: null
  selector:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: master
---
# Source: amorphie/charts/amorphie-third-party/charts/camunda-platform/templates/zeebe-gateway/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-zeebe-gateway
  labels:
    app: camunda-platform
    app.kubernetes.io/name: camunda-platform
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: camunda-platform
    helm.sh/chart: camunda-platform-9.3.2
    app.kubernetes.io/version: "8.4.5"
    app.kubernetes.io/component: zeebe-gateway
  annotations:
spec:
  type: ClusterIP
  selector:
    app: camunda-platform
    app.kubernetes.io/name: camunda-platform
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: camunda-platform
    app.kubernetes.io/component: zeebe-gateway
  ports:
    - port: 9600
      protocol: TCP
      name: http
    - port: 26500
      protocol: TCP
      name: gateway
---
# Source: amorphie/charts/amorphie-third-party/charts/camunda-platform/templates/zeebe/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "release-name-zeebe"
  labels:
    app: camunda-platform
    app.kubernetes.io/name: camunda-platform
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: camunda-platform
    helm.sh/chart: camunda-platform-9.3.2
    app.kubernetes.io/version: "8.4.5"
    app.kubernetes.io/component: zeebe-broker
  annotations:
spec:
  clusterIP: None
  publishNotReadyAddresses: true
  type: ClusterIP
  ports:
    - port: 9600
      protocol: TCP
      name: http
    - port: 26502
      protocol: TCP
      name: internal
    - port: 26501
      protocol: TCP
      name: command
  selector:
    app: camunda-platform
    app.kubernetes.io/name: camunda-platform
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: camunda-platform
    app.kubernetes.io/component: zeebe-broker
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr-dashboard/templates/dapr_dashboard_service.yaml
kind: Service
apiVersion: v1
metadata:
  name: dapr-dashboard
  labels:
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr-dashboard
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 0.14.0
  annotations:
spec:
  selector:
    app: dapr-dashboard
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
  type: ClusterIP
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_operator/templates/dapr_operator_service.yaml
kind: Service
apiVersion: v1
metadata:
  name: dapr-api
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
spec:
  selector:
    app: dapr-operator
  ports:
  - protocol: TCP
    port: 80 
    targetPort: 6500
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_operator/templates/dapr_operator_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dapr-webhook
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
spec:
  ports:
  - port: 443
    targetPort: 19443
    protocol: TCP
  selector:
    app: dapr-operator
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_placement/templates/dapr_placement_service.yaml
kind: Service
apiVersion: v1
metadata:
  name: dapr-placement-server
  labels:
    app: dapr-placement-server
    app.kubernetes.io/component: placement
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
spec:
  selector:
    app: dapr-placement-server
  # placement must be able to resolve pod address to join initial cluster peers
  # before POD is ready
  publishNotReadyAddresses: true
  ports:
  - name: api
    port: 50005
  - name: raft-node
    port: 8201
  clusterIP: None
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_sentry/templates/dapr_sentry_service.yaml
kind: Service
apiVersion: v1
metadata:
  name: dapr-sentry
  labels:
    app.kubernetes.io/component: sentry
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
spec:
  selector:
    app: dapr-sentry
  ports:
  - protocol: TCP
    port: 80 
    targetPort: 50001
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_sidecar_injector/templates/dapr_sidecar_injector_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dapr-sidecar-injector
  labels:
    app.kubernetes.io/component: sidecar-injector
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
spec:
  type: ClusterIP
  ports:
  - port: 443
    targetPort: https
    protocol: TCP
    name: https
  selector:
    app: dapr-sidecar-injector
---
# Source: amorphie/charts/amorphie-third-party/charts/hazelcast/templates/mancenter-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-hazelcast-mancenter
  labels:
    app.kubernetes.io/name: hazelcast-mancenter
    helm.sh/chart: hazelcast-5.8.2
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
spec:
  type: LoadBalancer
  selector:
    app.kubernetes.io/name: hazelcast-mancenter
    app.kubernetes.io/instance: "release-name"
    role: mancenter
  ports:
  - protocol: TCP
    port: 8080
    targetPort: mancenter
    name: http
  - protocol: TCP
    port: 443
    targetPort: mancenter
    name: https
---
# Source: amorphie/charts/amorphie-third-party/charts/hazelcast/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-hazelcast
  labels:
    app.kubernetes.io/name: hazelcast
    helm.sh/chart: hazelcast-5.8.2
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app.kubernetes.io/name: hazelcast
    app.kubernetes.io/instance: "release-name"
    role: hazelcast
  ports:
  - protocol: TCP
    port: 5701
    targetPort: hazelcast
    name: tcp-hzport
---
# Source: amorphie/charts/amorphie-third-party/charts/postgresql/templates/primary/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql-hl
  namespace: "default"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-12.1.6
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "15.1.0"
    app.kubernetes.io/component: primary
    # Use this annotation in addition to the actual publishNotReadyAddresses
    # field below because the annotation will stop being respected soon but the
    # field is broken in some versions of Kubernetes:
    # https://github.com/kubernetes/kubernetes/issues/58662
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  clusterIP: None
  # We want all pods in the StatefulSet to have their addresses published for
  # the sake of the other Postgresql pods even before they're ready, since they
  # have to be able to talk to each other in order to become ready.
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: primary
---
# Source: amorphie/charts/amorphie-third-party/charts/postgresql/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-12.1.6
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "15.1.0"
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
      nodePort: null
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: primary
---
# Source: amorphie/charts/amorphie-third-party/templates/simple-monitor/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-amorphie-third-party-simple-monitor-svc
  namespace: default
  labels:
    helm.sh/chart: amorphie-third-party-0.1.0
    app.kubernetes.io/name: amorphie-third-party
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app: simple-monitor
spec:
  type: ClusterIP
  ports:
    - port: 8082
      targetPort: 8082
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: amorphie-third-party
    app.kubernetes.io/instance: release-name
    app: simple-monitor
---
# Source: amorphie/charts/amorphie-third-party/charts/camunda-platform/charts/elasticsearch/charts/kibana/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kibana
  namespace: "default"
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kibana
    app.kubernetes.io/version: 8.12.1
    helm.sh/chart: kibana-10.11.2
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: kibana
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kibana
        app.kubernetes.io/version: 8.12.1
        helm.sh/chart: kibana-10.11.2
        app: kibana
    spec:
      
      automountServiceAccountToken: false
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/name: kibana
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      serviceAccountName: release-name-kibana
      initContainers:
      containers:
        - name: kibana
          image: docker.io/bitnami/kibana:8.9.2
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: null
            seccompProfile:
              type: Unconfined
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: KIBANA_PORT_NUMBER
              value: "5601"
            - name: KIBANA_ELASTICSEARCH_URL
              value: "http://release-name-elasticsearch:9200"
            - name: KIBANA_ELASTICSEARCH_PORT_NUMBER
              value: "9200"
            - name: KIBANA_FORCE_INITSCRIPTS
              value: "false"
            - name: KIBANA_SERVER_ENABLE_TLS
              value: "false"
            - name: KIBANA_ELASTICSEARCH_ENABLE_TLS
              value: "false"
            - name: KIBANA_ELASTICSEARCH_TLS_USE_PEM
              value: "false"
            - name: KIBANA_ELASTICSEARCH_TLS_VERIFICATION_MODE
              value: "full"
          envFrom:
          ports:
            - name: http
              containerPort: 5601
              protocol: TCP
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            httpGet:
              path: /login
              port: http
              scheme: HTTP
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            httpGet:
              path: /status
              port: http
              scheme: HTTP
          volumeMounts:
            - name: kibana-data
              mountPath: /bitnami/kibana
            - name: kibana-config
              mountPath: /bitnami/kibana/conf
      volumes:
        - name: kibana-data
          persistentVolumeClaim:
            claimName: release-name-kibana
        - name: kibana-config
          configMap:
            name: release-name-kibana-conf
---
# Source: amorphie/charts/amorphie-third-party/charts/camunda-platform/templates/zeebe-gateway/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-zeebe-gateway
  labels:
    app: camunda-platform
    app.kubernetes.io/name: camunda-platform
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: camunda-platform
    helm.sh/chart: camunda-platform-9.3.2
    app.kubernetes.io/version: "8.4.5"
    app.kubernetes.io/component: zeebe-gateway
  annotations:
    {}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: camunda-platform
      app.kubernetes.io/name: camunda-platform
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: camunda-platform
      app.kubernetes.io/component: zeebe-gateway
  template:
    metadata:
      labels:
        app: camunda-platform
        app.kubernetes.io/name: camunda-platform
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: camunda-platform
        helm.sh/chart: camunda-platform-9.3.2
        app.kubernetes.io/version: "8.4.5"
        app.kubernetes.io/component: zeebe-gateway
      annotations:
        {}
    spec:
      imagePullSecrets:
        []
      initContainers:
        []
      containers:
        - name: zeebe-gateway
          image: camunda/zeebe:8.4.5
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9600
              name: http
            - containerPort: 26500
              name: gateway
            - containerPort: 26502
              name: internal
          env:
            - name: ZEEBE_STANDALONE_GATEWAY
              value: "true"
            - name: ZEEBE_GATEWAY_CLUSTER_CLUSTERNAME
              value: release-name-zeebe
            - name: ZEEBE_GATEWAY_CLUSTER_MEMBERID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ZEEBE_LOG_LEVEL
              value: "info"
            - name: JAVA_TOOL_OPTIONS
              value: "-XX:+ExitOnOutOfMemoryError"
            - name: ZEEBE_GATEWAY_CLUSTER_INITIALCONTACTPOINTS
              value: release-name-zeebe:26502
            - name: ZEEBE_GATEWAY_NETWORK_HOST
              value: 0.0.0.0
            - name: ZEEBE_GATEWAY_NETWORK_PORT
              value: "26500"
            - name: ZEEBE_GATEWAY_CLUSTER_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: ZEEBE_GATEWAY_CLUSTER_PORT
              value: "26502"
            - name: ZEEBE_GATEWAY_MONITORING_HOST
              value: 0.0.0.0
            - name: ZEEBE_GATEWAY_MONITORING_PORT
              value: "9600"
            - name: ZEEBE_GATEWAY_SECURITY_AUTHENTICATION_MODE
              value: none
          volumeMounts:
            - mountPath: /tmp
              name: tmp
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              scheme: HTTP
              port: 9600
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 5
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 400m
              memory: 450Mi
            requests:
              cpu: 400m
              memory: 450Mi
      volumes:
        - name: tmp
          emptyDir: {}
        - name: config
          configMap:
            name: release-name-zeebe-gateway
            defaultMode: 484
      serviceAccountName: zeebe-gateway-sa
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
  # yamllint disable
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: In
                values:
                - zeebe-gateway
            topologyKey: kubernetes.io/hostname
  # yamllint enable
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr-dashboard/templates/dapr_dashboard_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dapr-dashboard
  labels:
    app: dapr-dashboard
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr-dashboard
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 0.14.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dapr-dashboard
  template:
    metadata:
      labels:
        app: dapr-dashboard
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: dapr-dashboard
        app.kubernetes.io/part-of: dapr
        app.kubernetes.io/version: 0.14.0
    spec:
      serviceAccountName: dapr-dashboard
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
             nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                    - linux
      containers:
      - name: dapr-dashboard
        image: "docker.io/daprio/dashboard:0.14.0"
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - containerPort: 8080
        resources:
          {}
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_operator/templates/dapr_operator_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dapr-operator
  labels:
    app: dapr-operator
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dapr-operator
  template:
    metadata:
      labels:
        app: dapr-operator
        app.kubernetes.io/component: operator
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: release-name
        app.kubernetes.io/part-of: dapr
        app.kubernetes.io/version: 1.11.2
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/"
    spec:
      containers:
      - name: dapr-operator
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        image: "docker.io/daprio/operator:1.11.2"
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - containerPort: 6500
        - name: metrics
          containerPort: 9090
          protocol: TCP
        resources:
          {}
        volumeMounts:
          - name: credentials
            mountPath: /var/run/dapr/credentials
            readOnly: true
          - name: webhook-creds
            mountPath: /tmp/k8s-webhook-server/serving-certs
            readOnly: true
        command:
        - "/operator"
        args:
        - "--watch-interval"
        - "0"
        - "--max-pod-restarts-per-minute"
        - "20"
        - "--log-level"
        - "info"
        - "--enable-metrics"
        - "--metrics-port"
        - "9090"
      serviceAccountName: dapr-operator
      volumes:
        - name: credentials
          secret:
            secretName: dapr-trust-bundle
        - name: webhook-creds
          secret:
            secretName: dapr-webhook-cert
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
             nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                    - linux
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_sentry/templates/dapr_sentry_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dapr-sentry
  labels:
    app: dapr-sentry
    app.kubernetes.io/component: sentry
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dapr-sentry
  template:
    metadata:
      labels:
        app: dapr-sentry
        app.kubernetes.io/component: sentry
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: release-name
        app.kubernetes.io/part-of: dapr
        app.kubernetes.io/version: 1.11.2
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/"
    spec:
      containers:
      - name: dapr-sentry
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        image: "docker.io/daprio/sentry:1.11.2"
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - containerPort: 50001
        - name: metrics
          containerPort: 9090
          protocol: TCP
        resources:
          {}
        volumeMounts:
          - name: credentials
            mountPath: /var/run/dapr/credentials
            readOnly: true
        command:
        - "/sentry"
        args:
        - "--log-level"
        - info
        - "--enable-metrics"
        - "--metrics-port"
        - "9090"
        - "--trust-domain"
        - cluster.local
      serviceAccountName: dapr-sentry
      volumes:
        - name: credentials
          secret:
            secretName: dapr-trust-bundle
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
             nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                    - linux
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_sidecar_injector/templates/dapr_sidecar_injector_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dapr-sidecar-injector
  labels:
    app: dapr-sidecar-injector
    app.kubernetes.io/component: sidecar-injector
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dapr-sidecar-injector
  template:
    metadata:
      labels:
        app: dapr-sidecar-injector
        app.kubernetes.io/component: sidecar-injector
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: release-name
        app.kubernetes.io/part-of: dapr
        app.kubernetes.io/version: 1.11.2
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/"
    spec:
      serviceAccountName: dapr-injector
      containers:
      - name: dapr-sidecar-injector
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        image: "docker.io/daprio/injector:1.11.2"
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true
        command:
        - "/injector"
        args:
        - "--log-level"
        - info
        - "--enable-metrics"
        - "--metrics-port"
        - "9090"
        - "--healthz-port"
        - "8080"
        env:
        - name: TLS_CERT_FILE
          value: /dapr/cert/tls.crt
        - name: TLS_KEY_FILE
          value: /dapr/cert/tls.key
        - name: KUBE_CLUSTER_DOMAIN
          value: "cluster.local"
        - name: SIDECAR_IMAGE
          value: "docker.io/daprio/daprd:1.11.2"
        - name: SIDECAR_IMAGE_PULL_POLICY
          value: "IfNotPresent"
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: IGNORE_ENTRYPOINT_TOLERATIONS
          value: "[{\"effect\":\"NoSchedule\",\"key\":\"alibabacloud.com/eci\"},{\"effect\":\"NoSchedule\",\"key\":\"azure.com/aci\"},{\"effect\":\"NoSchedule\",\"key\":\"aws\"},{\"effect\":\"NoSchedule\",\"key\":\"huawei.com/cci\"}]"
        - name: SIDECAR_RUN_AS_NON_ROOT
          value: "true"
        - name: SIDECAR_DROP_ALL_CAPABILITIES
          value: "false"
        - name: SIDECAR_READ_ONLY_ROOT_FILESYSTEM
          value: "true"
        ports:
        - name: https
          containerPort: 4000
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        resources:
          {}
        volumeMounts:
        - name: cert
          mountPath: /dapr/cert
          readOnly: true
      volumes:
      - name: cert
        secret:
          secretName: dapr-sidecar-injector-cert
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
             nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                    - linux
---
# Source: amorphie/charts/amorphie-third-party/templates/simple-monitor/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-amorphie-third-party-simple-monitor
  namespace: default
  labels:
    helm.sh/chart: amorphie-third-party-0.1.0
    app.kubernetes.io/name: amorphie-third-party
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    app: simple-monitor
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: amorphie-third-party
      app.kubernetes.io/instance: release-name
      app: simple-monitor
  template:
    metadata:
      labels:
        app.kubernetes.io/name: amorphie-third-party
        app.kubernetes.io/instance: release-name
        app: simple-monitor
    spec:
      containers:
        - name: simple-monitor
          image: "ghcr.io/camunda-community-hub/zeebe-simple-monitor:2.6.2"
          env:
          - name: server.allowedOriginsUrls
            value: '""'
          ports:
            - name: http
              containerPort: 8082
              protocol: TCP
          volumeMounts:
          - mountPath: /app/resources/application.yaml
            name: config-volume
            subPath: application.yaml
      volumes:
      - configMap:
          defaultMode: 420
          name: release-name-amorphie-third-party-simple-monitor-config
        name: config-volume
---
# Source: amorphie/charts/amorphie-third-party/charts/camunda-platform/charts/elasticsearch/templates/master/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-elasticsearch-master
  namespace: "default"
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/version: 8.12.2
    helm.sh/chart: elasticsearch-19.19.4
    app.kubernetes.io/component: master
    ## Istio Labels: https://istio.io/docs/ops/deployment/requirements/
    app: master
spec:
  replicas: 1
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: elasticsearch
      app.kubernetes.io/component: master
  serviceName: release-name-elasticsearch-master-hl
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: elasticsearch
        app.kubernetes.io/version: 8.12.2
        helm.sh/chart: elasticsearch-19.19.4
        app.kubernetes.io/component: master
        ## Istio Labels: https://istio.io/docs/ops/deployment/requirements/
        app: master
      annotations:
    spec:
      serviceAccountName: release-name-elasticsearch-master
      
      automountServiceAccountToken: false
      affinity:
        podAffinity:
          
        podAntiAffinity:
          
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      initContainers:
        ## Image that performs the sysctl operation to modify Kernel settings (needed sometimes to avoid boot errors)
        - name: sysctl
          image: docker.io/bitnami/os-shell:12-debian-12-r16
          imagePullPolicy: "IfNotPresent"
          command:
            - /bin/bash
            - -ec
            - |
              CURRENT=`sysctl -n vm.max_map_count`;
              DESIRED="262144";
              if [ "$DESIRED" -gt "$CURRENT" ]; then
                  sysctl -w vm.max_map_count=262144;
              fi;
              CURRENT=`sysctl -n fs.file-max`;
              DESIRED="65536";
              if [ "$DESIRED" -gt "$CURRENT" ]; then
                  sysctl -w fs.file-max=65536;
              fi;
          securityContext:
            privileged: true
            runAsUser: 0
      containers:
        - name: elasticsearch
          image: docker.io/bitnami/elasticsearch:8.9.2
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ELASTICSEARCH_IS_DEDICATED_NODE
              value: "no"
            - name: ELASTICSEARCH_NODE_ROLES
              value: "master"
            - name: ELASTICSEARCH_TRANSPORT_PORT_NUMBER
              value: "9300"
            - name: ELASTICSEARCH_HTTP_PORT_NUMBER
              value: "9200"
            - name: ELASTICSEARCH_CLUSTER_NAME
              value: "elastic"
            
            - name: ELASTICSEARCH_HEAP_SIZE
              value: "1024m"
            - name: ELASTICSEARCH_ENABLE_REST_TLS
              value: "false"
          ports:
            - name: rest-api
              containerPort: 9200
            - name: transport
              containerPort: 9300
          livenessProbe:
            failureThreshold: 5
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            tcpSocket:
              port: rest-api
          readinessProbe:
            failureThreshold: 5
            initialDelaySeconds: 90
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /opt/bitnami/scripts/elasticsearch/healthcheck.sh
          resources:
            limits:
              cpu: 2
              memory: 2Gi
            requests:
              cpu: 1
              memory: 2Gi
          volumeMounts:
            - name: data
              mountPath: /bitnami/elasticsearch/data
            - mountPath: /tmp
              name: tmp
            - mountPath: /usr/share/elasticsearch/logs
              name: logs
            - mountPath: /usr/share/elasticsearch/config
              name: config-dir
      volumes:
        - emptyDir: {}
          name: tmp
        - emptyDir: {}
          name: logs
        - emptyDir: {}
          name: config-dir
  volumeClaimTemplates:
    - metadata:
        name: "data"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "64Gi"
---
# Source: amorphie/charts/amorphie-third-party/charts/camunda-platform/templates/zeebe/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "release-name-zeebe"
  labels:
    app: camunda-platform
    app.kubernetes.io/name: camunda-platform
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: camunda-platform
    helm.sh/chart: camunda-platform-9.3.2
    app.kubernetes.io/version: "8.4.5"
    app.kubernetes.io/component: zeebe-broker
  annotations:
spec:
  replicas: 1
  selector:
    matchLabels:
      app: camunda-platform
      app.kubernetes.io/name: camunda-platform
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: camunda-platform
      app.kubernetes.io/component: zeebe-broker
  serviceName: "release-name-zeebe"
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: camunda-platform
        app.kubernetes.io/name: camunda-platform
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: camunda-platform
        helm.sh/chart: camunda-platform-9.3.2
        app.kubernetes.io/version: "8.4.5"
        app.kubernetes.io/component: zeebe-broker
      annotations:
    spec:
      imagePullSecrets:
        []
      initContainers:
        - args:
          - wget --no-check-certificate https://github.com/camunda-community-hub/zeebe-hazelcast-exporter/releases/download/1.4.0/zeebe-hazelcast-exporter-1.4.0-jar-with-dependencies.jar
            -O            /exporters/zeebe-hazelcast-exporter-1.4.0-jar-with-dependencies.jar;
            ls -al
          command:
          - /bin/sh
          - -c
          image: busybox:latest
          imagePullPolicy: IfNotPresent
          name: init-exporters-hazelcast
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /exporters
            name: exporters
      containers:
        - name: zeebe
          image: camunda/zeebe:8.4.5
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsUser: 1000
          env:
            - name: LC_ALL
              value: C.UTF-8
            - name: K8S_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: K8S_SERVICE_NAME
              value: "release-name-zeebe"
            - name: K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ZEEBE_BROKER_NETWORK_ADVERTISEDHOST
              value: "$(K8S_NAME).$(K8S_SERVICE_NAME).$(K8S_NAMESPACE).svc"
            - name: ZEEBE_BROKER_CLUSTER_INITIALCONTACTPOINTS
              value:
                $(K8S_SERVICE_NAME)-0.$(K8S_SERVICE_NAME).$(K8S_NAMESPACE).svc:26502,
            - name: ZEEBE_BROKER_CLUSTER_CLUSTERNAME
              value: release-name-zeebe
            - name: ZEEBE_LOG_LEVEL
              value: "info"
            - name: ZEEBE_BROKER_CLUSTER_PARTITIONSCOUNT
              value: "1"
            - name: ZEEBE_BROKER_CLUSTER_CLUSTERSIZE
              value: "1"
            - name: ZEEBE_BROKER_CLUSTER_REPLICATIONFACTOR
              value: "1"
            - name: ZEEBE_BROKER_THREADS_CPUTHREADCOUNT
              value: "3"
            - name: ZEEBE_BROKER_THREADS_IOTHREADCOUNT
              value: "3"
            - name: ZEEBE_BROKER_GATEWAY_ENABLE
              value: "false"
            - name: ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_CLASSNAME
              value: "io.camunda.zeebe.exporter.ElasticsearchExporter"
            - name: ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_URL
              value: "http://release-name-elasticsearch:9200"
            - name: ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_INDEX_PREFIX
              value: "zeebe-record"
            - name: ZEEBE_BROKER_NETWORK_COMMANDAPI_PORT
              value: "26501"
            - name: ZEEBE_BROKER_NETWORK_INTERNALAPI_PORT
              value: "26502"
            - name: ZEEBE_BROKER_NETWORK_MONITORINGAPI_PORT
              value: "9600"
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: JAVA_TOOL_OPTIONS
              value: "-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/usr/local/zeebe/data -XX:ErrorFile=/usr/local/zeebe/data/zeebe_error%p.log -XX:+ExitOnOutOfMemoryError"
            - name: ZEEBE_BROKER_DATA_SNAPSHOTPERIOD
              value: 5m
            - name: ZEEBE_BROKER_DATA_DISK_FREESPACE_REPLICATION
              value: 2GB
            - name: ZEEBE_BROKER_DATA_DISK_FREESPACE_PROCESSING
              value: 3GB
            - name: ZEEBE_BROKER_EXPORTERS_HAZELCAST_JARPATH
              value: exporters/zeebe-hazelcast-exporter-1.4.0-jar-with-dependencies.jar
            - name: ZEEBE_BROKER_EXPORTERS_HAZELCAST_CLASSNAME
              value: io.zeebe.hazelcast.exporter.HazelcastExporter
            - name: ZEEBE_BROKER_EXPORTERS_HAZELCAST_PORT
              value: "5701"
            - name: ZEEBE_HAZELCAST_JARPATH
              value: exporters/zeebe-hazelcast-exporter-1.4.0-jar-with-dependencies.jar
            - name: ZEEBE_HAZELCAST_CLASSNAME
              value: io.zeebe.hazelcast.exporter.HazelcastExporter
            - name: ZEEBE_HAZELCAST_PORT
              value: "5701"
            - name: ZEEBE_HAZELCAST_REMOTE_ADDRESS
              value: 'release-name-hazelcast:5701'
          ports:
            - containerPort: 9600
              name: http
            - containerPort: 26501
              name: command
            - containerPort: 26502
              name: internal
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              scheme: HTTP
              port: 9600
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 5
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 960m
              memory: 1920Mi
            requests:
              cpu: 800m
              memory: 1200Mi
          volumeMounts:
            - name: config
              mountPath: /usr/local/bin/startup.sh
              subPath: startup.sh
            - name: data
              mountPath: /usr/local/zeebe/data
            - name: exporters
              mountPath: /exporters
            - mountPath: /tmp
              name: tmp
            
            - mountPath: /usr/local/zeebe/exporters
              name: zeebe-exporters
      volumes:
        - name: config
          configMap:
            name: release-name-zeebe
            defaultMode: 492
        - name: exporters
          emptyDir: {}
        - name: tmp
          emptyDir: {}
          
        - emptyDir: {}
          name: zeebe-exporters
      serviceAccountName: zeebe-sa
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
# yamllint disable
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: In
                values:
                - zeebe-broker
            topologyKey: kubernetes.io/hostname
# yamllint enable
  volumeClaimTemplates:
    - metadata:
        name: data
        annotations:
          {}
      spec:
        accessModes: [ReadWriteOnce]
        resources:
          requests:
            storage: "32Gi"
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_placement/templates/dapr_placement_statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dapr-placement-server
  labels:
    app: dapr-placement-server
    app.kubernetes.io/component: placement
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
spec:
  replicas: 1
  serviceName: dapr-placement-server
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: dapr-placement-server
  template:
    metadata:
      labels:
        app: dapr-placement-server
        app.kubernetes.io/component: placement
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: release-name
        app.kubernetes.io/part-of: dapr
        app.kubernetes.io/version: 1.11.2
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/"
    spec:
      containers:
      - name: dapr-placement-server
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 3
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        image: "docker.io/daprio/placement:1.11.2"
        imagePullPolicy: IfNotPresent
        resources:
          {}
        volumeMounts:
          - name: credentials
            mountPath: /var/run/dapr/credentials
            readOnly: true
        ports:
          - containerPort: 50005
            name: api
          - containerPort: 8201
            name: raft-node
          - name: metrics
            containerPort: 9090
            protocol: TCP
        command:
        - "/placement"
        args:
        - "--log-level"
        - info
        - "--enable-metrics"
        - "--replicationFactor"
        - "100"
        - "--metrics-port"
        - "9090"
        - "--tls-enabled"
        securityContext:
          runAsUser: 0
        env:
          - name: PLACEMENT_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
      serviceAccountName: dapr-placement
      volumes:
        - name: credentials
          secret:
            secretName: dapr-trust-bundle
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
             nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                    - linux
---
# Source: amorphie/charts/amorphie-third-party/charts/hazelcast/templates/mancenter-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-hazelcast-mancenter
  labels:
    app.kubernetes.io/name: hazelcast-mancenter
    helm.sh/chart: hazelcast-5.8.2
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
spec:
  serviceName: release-name-hazelcast-mancenter
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: hazelcast-mancenter
      app.kubernetes.io/instance: "release-name"
      role: mancenter
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hazelcast-mancenter
        helm.sh/chart: hazelcast-5.8.2
        app.kubernetes.io/instance: "release-name"
        app.kubernetes.io/managed-by: "Helm"
        role: mancenter
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      containers:
      - name: release-name-hazelcast-mancenter
        image: "hazelcast/management-center:5.3.2"
        imagePullPolicy: "IfNotPresent"
        resources:
          null
        ports:
        - name: mancenter
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: config
          mountPath: /config
        - name: mancenter-storage
          mountPath: /data
        env:
        - name: MC_INIT_CMD
          value: "./bin/mc-conf.sh cluster add --lenient=true -H /data -cc /config/hazelcast-client.yaml; "
        - name: JAVA_OPTS
          value: " -Dhazelcast.mc.healthCheck.enable=true -DserviceName=release-name-hazelcast -Dnamespace=default -Dhazelcast.mc.tls.enabled=false "
      serviceAccountName: release-name-hazelcast
      automountServiceAccountToken: true
      volumes:
      - name: config
        configMap:
           name: release-name-hazelcast-mancenter-configuration
      - name: mancenter-storage
    
  volumeClaimTemplates:
  - metadata:
      name: mancenter-storage
      labels:
        app.kubernetes.io/name: hazelcast-mancenter
        helm.sh/chart: "hazelcast"
        app.kubernetes.io/instance: "release-name"
        app.kubernetes.io/managed-by: "Helm"
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: "8Gi"
---
# Source: amorphie/charts/amorphie-third-party/charts/hazelcast/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-hazelcast
  labels:
    app.kubernetes.io/name: hazelcast
    helm.sh/chart: hazelcast-5.8.2
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm" 
spec:
  serviceName: release-name-hazelcast
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: hazelcast
      app.kubernetes.io/instance: "release-name"
      role: hazelcast
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hazelcast
        helm.sh/chart: hazelcast-5.8.2
        app.kubernetes.io/instance: "release-name"
        app.kubernetes.io/managed-by: "Helm"
        role: hazelcast
      annotations:
        checksum/hazelcast-config: c4b6a3fd48054c4013ca0c642202dfc072f46a56dd9e0062a942d6a8f565cb18
    spec:
      terminationGracePeriodSeconds: 600
      hostNetwork: false
      hostPID: false
      hostIPC: false
      containers:
      - name: release-name-hazelcast
        image: "hazelcast/hazelcast:5.3.1"
        imagePullPolicy: "IfNotPresent"
        resources:
          null
        ports:
        - name: hazelcast
          containerPort: 5701
        livenessProbe:
          httpGet:
            path: /hazelcast/health/node-state
            port: 5701
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 10
        readinessProbe:
          httpGet:
            path: /hazelcast/health/ready
            port: 5701
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 10
        volumeMounts:
        - name: hazelcast-storage
          mountPath: /data/hazelcast
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: HZ_CLUSTERNAME
          value: dev
        - name: JAVA_OPTS
          value: "-Dhazelcast.config=/data/hazelcast/hazelcast.yaml -DserviceName=release-name-hazelcast -Dnamespace=default -Dhz.jet.enabled=true -Dhazelcast.shutdownhook.policy=GRACEFUL -Dhazelcast.shutdownhook.enabled=true -Dhazelcast.graceful.shutdown.max.wait=600   "
      serviceAccountName: release-name-hazelcast
      automountServiceAccountToken: true
      volumes:
      - name: hazelcast-storage
        configMap:
          name: release-name-hazelcast-configuration
---
# Source: amorphie/charts/amorphie-third-party/charts/postgresql/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-12.1.6
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "15.1.0"
    app.kubernetes.io/component: primary
  annotations:
spec:
  replicas: 1
  serviceName: release-name-postgresql-hl
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: primary
  template:
    metadata:
      name: release-name-postgresql
      labels:
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-12.1.6
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "15.1.0"
        app.kubernetes.io/component: primary
      annotations:
    spec:
      serviceAccountName: release-name-postgresql
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/name: postgresql
                    app.kubernetes.io/component: primary
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      hostNetwork: false
      hostIPC: false
      initContainers:
      containers:
        - name: postgresql
          image: docker.io/bitnami/postgresql:14.7.0
          imagePullPolicy: "IfNotPresent"
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: "/bitnami/postgresql"
            - name: PGDATA
              value: "/bitnami/postgresql/data"
            # Authentication
            - name: POSTGRES_USER
              value: "amorphie"
            - name: POSTGRES_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-postgresql
                  key: postgres-password
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-postgresql
                  key: password
            - name: POSTGRES_DB
              value: "amorphie"
            # Replication
            # Initdb
            # Standby
            # LDAP
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            # TLS
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            # Audit
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            # Others
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: "error"
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: "pgaudit"
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "amorphie" -d "dbname=amorphie" -h 127.0.0.1 -p 5432
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                
                - |
                  exec pg_isready -U "amorphie" -d "dbname=amorphie" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
          resources:
            limits: {}
            requests:
              cpu: 250m
              memory: 256Mi
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /bitnami/postgresql
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: amorphie/charts/amorphie-third-party/charts/camunda-platform/charts/elasticsearch/charts/kibana/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-kibana
  namespace: "default"
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kibana
    app.kubernetes.io/version: 8.12.1
    helm.sh/chart: kibana-10.11.2
  annotations:
    route.openshift.io/termination: edge
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: release-name-kibana
                port:
                  name: http
      host: test-helm-zeebe-kibana.example.com
---
# Source: amorphie/charts/amorphie-third-party/charts/hazelcast/templates/mancenter-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "release-name-hazelcast-mancenter"
  labels:
    app.kubernetes.io/name: hazelcast-mancenter
    helm.sh/chart: hazelcast-5.8.2
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
  annotations:
    route.openshift.io/termination: edge
spec:
  ingressClassName: 
  rules:
    - host: "test-helm-zeebe-hazelcast-mancenter.example.com"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
                service:
                  name: release-name-hazelcast-mancenter
                  port:
                    name: http
---
# Source: amorphie/charts/amorphie-third-party/templates/simple-monitor/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-simple-monitor
  namespace: default
  labels:
    helm.sh/chart: amorphie-third-party-0.1.0
    app.kubernetes.io/name: amorphie-third-party
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    route.openshift.io/termination: edge
spec:
  rules:
    - host: "test-helm-zeebe-simple-monitor.example.com"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: release-name-amorphie-third-party-simple-monitor-svc
                port:
                  number: 8082
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_config/templates/dapr_default_config.yaml
apiVersion: dapr.io/v1alpha1
kind: Configuration
metadata:
  name: daprsystem
  labels:
    app.kubernetes.io/component: config
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
spec:
  mtls:
    enabled: false
    workloadCertTTL: 24h
    allowedClockSkew: 15m
---
# Source: amorphie/charts/amorphie-third-party/charts/dapr/charts/dapr_sidecar_injector/templates/dapr_sidecar_injector_webhook_config.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: dapr-sidecar-injector
  labels:
    app: dapr-sidecar-injector
    app.kubernetes.io/component: sidecar-injector
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.11.2
webhooks:
- name: sidecar-injector.dapr.io
  reinvocationPolicy: IfNeeded
  clientConfig:
    service:
      namespace: default
      name: dapr-sidecar-injector
      path: "/mutate"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lSQU9zS29OL2QvSUlSLzdXSXZFT0xsRnd3RFFZSktvWklodmNOQVFFTEJRQXcKSXpFaE1COEdBMVVFQXhNWVpHRndjaTF6YVdSbFkyRnlMV2x1YW1WamRHOXlMV05oTUI0WERUSTBNRFV4TlRBMwpNVE16TlZvWERUTTBNRFV4TXpBM01UTXpOVm93SXpFaE1COEdBMVVFQXhNWVpHRndjaTF6YVdSbFkyRnlMV2x1CmFtVmpkRzl5TFdOaE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBNU9GekN3SmQKVHV5bzZYWWF2ME4rQ2VkRGtsM05Mc2w0b0dpNkNyTlEyOUY4YlkzbmtzT3cvcmFpdXkrZy9hY1pJY2hoaWY1bAp0c0xlVys4WEJqR0VKYU9rQUd5TzhyVFcrcDZEci9uLzVkYUhlZlBkVVRkQmc4UGIzUm1yakNQLy8zVm5hTWRoCmUxUEtPQ1B3eDA0dnM1dU4wN2tsWG5Ea0JCVzlkT1RzNU1OQXFKWFFNMTRSdTQ2NmtlWVBoNnRJKzFoRVRBS3UKY2FIeXRpZmI0aU10SHd5R1Y5cE9ETnhMSWRva0JmaGxQLzY3WTZSdVphbjB0eTRIcUNYRlhJeGdSQXB6WkhENwp6eW1pSjYrN2g3Mm9oZG15OTM0SmZNQ00wK1k3NUliSmRwQ1RFSmpSYkFLN2hVNm5jZzNXSXcvZzlFblVjSHM4CmRDejByOERYMk1QL2J3SURBUUFCbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQXFRd0hRWURWUjBsQkJZd0ZBWUkKS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRktwNgpCbEw2K2g4aXRQZ1lkVFpxSVo3ZzBZN01NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNOOEw0bUFXcFo0eTlSCmJvS1A4bW5CeGZqLzNGN0tsL1l5Sk1NQ2VBbWU5dWZSanJ3U0w0ZzJydEdqeDdDWkh5T0tXQTVlMmFJZURnWUwKaUpWVUtBbzlBVENINE1PcENYUlZBOExudDROVUpOaGtUV1dtNzJqYXB2ZDlhekp6c0FGMTY1S2lmcExBVUU2bgpEZkJqcXVod1hnVVEwdUJLZ1Q3Mk8ycHA0N3FrVks5TnVXNDBlVFl5TkpudVVRNjNMWU5rTXJJK1BtWFc1aUozClhrcHJkVnNCRmlHeGo4bEVMVHRVZFgwWFN6VkRGUnBIaUxhbklvQXBOemNwMXpHMUhQMTZWUVljemVPU1hPY28KaFJzRWVPL08vM0N1M3Foc090VEFtZEgrSVl4UW5sZ1N3UHpySDQzdjlzZUFqM0xxcjY0cVhKSDZaUEg2VVIweQpEK3cxeVNDVQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    resources:
    - pods
    operations:
    - CREATE
  failurePolicy: Ignore
  sideEffects: None
  admissionReviewVersions: ["v1", "v1beta1"]
---
# Source: amorphie/charts/amorphie-third-party/charts/camunda-platform/templates/operate/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-operate-test-connection"
  labels:
    app: camunda-platform
    app.kubernetes.io/name: camunda-platform
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: camunda-platform
    helm.sh/chart: camunda-platform-9.3.2
    app.kubernetes.io/version: "8.4.5"
    app.kubernetes.io/component: operate
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['release-name-operate:80']
  restartPolicy: Never
---
# Source: amorphie/charts/amorphie-third-party/charts/hazelcast/templates/tests/test-hazelcast.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-hazelcast-test-z8xa1"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": hook-succeeded, hook-failed
  labels:
    app.kubernetes.io/name: hazelcast
    helm.sh/chart: hazelcast-5.8.2
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/component: "test"
    role: test
spec:
  containers:
  - name: "release-name-hazelcast-test"
    image: "alpine:latest"
    command:
    - "sh"
    - "-c"
    - |
      set -ex
      # Install required test tools
      apk add -q curl
      # Get the number of Hazelcast members in the cluster
      CLUSTER_SIZE=$(curl release-name-hazelcast:5701/hazelcast/health/cluster-size)
      # Test the correct number of Hazelcast members
      test ${CLUSTER_SIZE} -eq 1
    resources:
      null
  restartPolicy: Never
---
# Source: amorphie/charts/amorphie-third-party/charts/hazelcast/templates/tests/test-management-center.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-hazelcast-mancenter-test-pqxns"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": hook-succeeded, hook-failed
  labels:
    app.kubernetes.io/name: hazelcast
    helm.sh/chart: hazelcast-5.8.2
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/component: "test"
    role: test
spec:
  containers:
  - name: "release-name-hazelcast-mancenter-test"
    image: "alpine:latest"
    command:
    - "sh"
    - "-c"
    - |
      set -ex
      # Install required test tools
      apk add -q jq curl
      # Get the HTTP Response Code of the Health Check
      HEALTH_CHECK_HTTP_RESPONSE_CODE=$(curl --write-out %{http_code} --silent --output /dev/null release-name-hazelcast-mancenter:8080/health)
      # Test the MC HTTP RESPONSE CODE
      test ${HEALTH_CHECK_HTTP_RESPONSE_CODE} -eq 200
      # Get the connected cluster count via /rest/clusters/dev/members endpoint
      CONNECTED_CLUSTER_SIZE=$(curl --silent release-name-hazelcast-mancenter:8080/rest/clusters/dev/members | jq '. | length')
      # Test the correct number of Hazelcast members
      test ${CONNECTED_CLUSTER_SIZE} -eq 1
    resources:
      null
  restartPolicy: Never
---
# Source: amorphie/charts/amorphie-third-party/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-amorphie-third-party-test-connection"
  labels:
    helm.sh/chart: amorphie-third-party-0.1.0
    app.kubernetes.io/name: amorphie-third-party
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-amorphie-third-party:80']
  restartPolicy: Never
