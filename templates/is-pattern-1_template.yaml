---
# Source: is-pattern-1/charts/mysql-is/charts/mysql/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wso2is-mysql-db-service
  namespace: default
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-8.2.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
secrets:
  - name: wso2is-mysql-db-service
---
# Source: is-pattern-1/templates/wso2is-pattern-1-service-account.yaml
# Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ServiceAccount
metadata:
  name: wso2is-pattern-1-svc-account
  namespace : default
---
# Source: is-pattern-1/charts/mysql-is/charts/mysql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: wso2is-mysql-db-service
  namespace: default
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-8.2.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  mysql-root-password: "TzJsc3VIaFhXbw=="
  mysql-password: "Q0FXdEVGdmt4Rg=="
---
# Source: is-pattern-1/charts/mysql-is/charts/mysql/templates/primary/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: wso2is-mysql-db-service
  namespace: default
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-8.2.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
data:
  my.cnf: |-
    
    [mysqld]
    default_authentication_plugin=mysql_native_password
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mysql
    plugin_dir=/opt/bitnami/mysql/plugin
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    datadir=/bitnami/mysql/data
    tmpdir=/opt/bitnami/mysql/tmp
    max_allowed_packet=16M
    bind-address=0.0.0.0
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
    log-error=/opt/bitnami/mysql/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci
    
    [client]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mysql/plugin
    
    [manager]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
---
# Source: is-pattern-1/templates/is/wso2is-pattern-1-identity-server-bin.yaml
# Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: wso2is-pattern-1-identity-server-bin
  namespace : default
data:
  wso2server.sh: |-
    #!/bin/sh
    # ----------------------------------------------------------------------------
    #  Copyright 2005-2012 WSO2, Inc. http://www.wso2.org
    #
    #  Licensed under the Apache License, Version 2.0 (the "License");
    #  you may not use this file except in compliance with the License.
    #  You may obtain a copy of the License at
    #
    #      http://www.apache.org/licenses/LICENSE-2.0
    #
    #  Unless required by applicable law or agreed to in writing, software
    #  distributed under the License is distributed on an "AS IS" BASIS,
    #  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    #  See the License for the specific language governing permissions and
    #  limitations under the License.

    # ----------------------------------------------------------------------------
    # Main Script for the WSO2 Carbon Server
    #
    # Environment Variable Prequisites
    #
    #   CARBON_HOME   Home of WSO2 Carbon installation. If not set I will  try
    #                   to figure it out.
    #
    #   JAVA_HOME       Must point at your Java Development Kit installation.
    #
    #   JAVA_OPTS       (Optional) Java runtime options used when the commands
    #                   is executed.
    #
    # NOTE: Borrowed generously from Apache Tomcat startup scripts.
    # -----------------------------------------------------------------------------

    # OS specific support.  $var _must_ be set to either true or false.
    #ulimit -n 100000

    cygwin=false;
    darwin=false;
    os400=false;
    mingw=false;
    case "`uname`" in
    CYGWIN*) cygwin=true;;
    MINGW*) mingw=true;;
    OS400*) os400=true;;
    Darwin*) darwin=true
            if [ -z "$JAVA_VERSION" ] ; then
                 JAVA_VERSION="CurrentJDK"
               else
                 echo "Using Java version: $JAVA_VERSION"
               fi
               if [ -z "$JAVA_HOME" ] ; then
                 JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/${JAVA_VERSION}/Home
               fi
               ;;
    esac

    # resolve links - $0 may be a softlink
    PRG="$0"

    while [ -h "$PRG" ]; do
      ls=`ls -ld "$PRG"`
      link=`expr "$ls" : '.*-> \(.*\)$'`
      if expr "$link" : '.*/.*' > /dev/null; then
        PRG="$link"
      else
        PRG=`dirname "$PRG"`/"$link"
      fi
    done

    # Get standard environment variables
    PRGDIR=`dirname "$PRG"`

    # Only set CARBON_HOME if not already set
    [ -z "$CARBON_HOME" ] && CARBON_HOME=`cd "$PRGDIR/.." ; pwd`

    # Set AXIS2_HOME. Needed for One Click JAR Download
    AXIS2_HOME="$CARBON_HOME"

    # For Cygwin, ensure paths are in UNIX format before anything is touched
    if $cygwin; then
      [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
      [ -n "$CARBON_HOME" ] && CARBON_HOME=`cygpath --unix "$CARBON_HOME"`
      [ -n "$AXIS2_HOME" ] && CARBON_HOME=`cygpath --unix "$CARBON_HOME"`
    fi

    # For OS400
    if $os400; then
      # Set job priority to standard for interactive (interactive - 6) by using
      # the interactive priority - 6, the helper threads that respond to requests
      # will be running at the same priority as interactive jobs.
      COMMAND='chgjob job('$JOBNAME') runpty(6)'
      system $COMMAND

      # Enable multi threading
      QIBM_MULTI_THREADED=Y
      export QIBM_MULTI_THREADED
    fi

    # For Migwn, ensure paths are in UNIX format before anything is touched
    if $mingw ; then
      [ -n "$CARBON_HOME" ] &&
        CARBON_HOME="`(cd "$CARBON_HOME"; pwd)`"
      [ -n "$JAVA_HOME" ] &&
        JAVA_HOME="`(cd "$JAVA_HOME"; pwd)`"
      [ -n "$AXIS2_HOME" ] &&
        CARBON_HOME="`(cd "$CARBON_HOME"; pwd)`"
      # TODO classpath?
    fi

    if [ -z "$JAVACMD" ] ; then
      if [ -n "$JAVA_HOME"  ] ; then
        if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
          # IBM's JDK on AIX uses strange locations for the executables
          JAVACMD="$JAVA_HOME/jre/sh/java"
        else
          JAVACMD="$JAVA_HOME/bin/java"
        fi
      else
        JAVACMD=java
      fi
    fi

    if [ ! -x "$JAVACMD" ] ; then
      echo "Error: JAVA_HOME is not defined correctly."
      echo " CARBON cannot execute $JAVACMD"
      exit 1
    fi

    # if JAVA_HOME is not set we're not happy
    if [ -z "$JAVA_HOME" ]; then
      echo "You must set the JAVA_HOME variable before running CARBON."
      exit 1
    fi

    if [ -e "$CARBON_HOME/wso2carbon.pid" ]; then
      PID=`cat "$CARBON_HOME"/wso2carbon.pid`
    fi

    # ----- Process the input command ----------------------------------------------
    args=""
    for c in $*
    do
        if [ "$c" = "--debug" ] || [ "$c" = "-debug" ] || [ "$c" = "debug" ]; then
              CMD="--debug"
              continue
        elif [ "$CMD" = "--debug" ]; then
              if [ -z "$PORT" ]; then
                    PORT=$c
              fi
        elif [ "$c" = "--stop" ] || [ "$c" = "-stop" ] || [ "$c" = "stop" ]; then
              CMD="stop"
        elif [ "$c" = "--start" ] || [ "$c" = "-start" ] || [ "$c" = "start" ]; then
              CMD="start"
        elif [ "$c" = "--version" ] || [ "$c" = "-version" ] || [ "$c" = "version" ]; then
              CMD="version"
        elif [ "$c" = "--restart" ] || [ "$c" = "-restart" ] || [ "$c" = "restart" ]; then
              CMD="restart"
        elif [ "$c" = "--test" ] || [ "$c" = "-test" ] || [ "$c" = "test" ]; then
              CMD="test"
        else
            args="$args $c"
        fi
    done

    if [ "$CMD" = "--debug" ]; then
      if [ "$PORT" = "" ]; then
        echo " Please specify the debug port after the --debug option"
        exit 1
      fi
      if [ -n "$JAVA_OPTS" ]; then
        echo "Warning !!!. User specified JAVA_OPTS will be ignored, once you give the --debug option."
      fi
      CMD="RUN"
      JAVA_OPTS="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=$PORT"
      echo "Please start the remote debugging client to continue..."
    elif [ "$CMD" = "start" ]; then
      if [ -e "$CARBON_HOME/wso2carbon.pid" ]; then
        if  ps -p $PID > /dev/null ; then
          echo "Process is already running"
          exit 0
        fi
      fi
      export CARBON_HOME="$CARBON_HOME"
    # using nohup sh to avoid erros in solaris OS.TODO
      nohup sh "$CARBON_HOME"/bin/wso2server.sh $args > /dev/null 2>&1 &
      exit 0
    elif [ "$CMD" = "stop" ]; then
      export CARBON_HOME="$CARBON_HOME"
      kill -term `cat "$CARBON_HOME"/wso2carbon.pid`
      exit 0
    elif [ "$CMD" = "restart" ]; then
      export CARBON_HOME="$CARBON_HOME"
      kill -term `cat "$CARBON_HOME"/wso2carbon.pid`
      process_status=0
      pid=`cat "$CARBON_HOME"/wso2carbon.pid`
      while [ "$process_status" -eq "0" ]
      do
            sleep 1;
            ps -p$pid 2>&1 > /dev/null
            process_status=$?
      done

    # using nohup sh to avoid erros in solaris OS.TODO
      nohup sh "$CARBON_HOME"/bin/wso2server.sh $args > /dev/null 2>&1 &
      exit 0
    elif [ "$CMD" = "test" ]; then
        JAVACMD="exec "$JAVACMD""
    elif [ "$CMD" = "version" ]; then
      cat "$CARBON_HOME"/bin/version.txt
      cat "$CARBON_HOME"/bin/wso2carbon-version.txt
      exit 0
    fi

    # ---------- Handle the SSL Issue with proper JDK version --------------------
    java_version=$("$JAVACMD" -version 2>&1 | awk -F '"' '/version/ {print $2}')
    java_version_formatted=$(echo "$java_version" | awk -F. '{printf("%02d%02d",$1,$2);}')
    if [ $java_version_formatted -lt 0107 ] || [ $java_version_formatted -gt 1100 ]; then
       echo " Starting WSO2 Carbon (in unsupported JDK)"
       echo " [ERROR] CARBON is supported only on JDK 1.7, 1.8, 9, 10 and 11"
    fi

    CARBON_XBOOTCLASSPATH=""
    for f in "$CARBON_HOME"/lib/xboot/*.jar
    do
        if [ "$f" != "$CARBON_HOME/lib/xboot/*.jar" ];then
            CARBON_XBOOTCLASSPATH="$CARBON_XBOOTCLASSPATH":$f
        fi
    done


    CARBON_CLASSPATH=""
    if [ -e "$JAVA_HOME/lib/tools.jar" ]; then
        CARBON_CLASSPATH="$JAVA_HOME/lib/tools.jar"
    fi
    for f in "$CARBON_HOME"/bin/*.jar
    do
        if [ "$f" != "$CARBON_HOME/bin/*.jar" ];then
            CARBON_CLASSPATH="$CARBON_CLASSPATH":$f
        fi
    done
    for t in "$CARBON_HOME"/lib/*.jar
    do
        CARBON_CLASSPATH="$CARBON_CLASSPATH":$t
    done


    # For Cygwin, switch paths to Windows format before running java
    if $cygwin; then
      JAVA_HOME=`cygpath --absolute --windows "$JAVA_HOME"`
      CARBON_HOME=`cygpath --absolute --windows "$CARBON_HOME"`
      AXIS2_HOME=`cygpath --absolute --windows "$CARBON_HOME"`
      CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
      CARBON_CLASSPATH=`cygpath --path --windows "$CARBON_CLASSPATH"`
      CARBON_XBOOTCLASSPATH=`cygpath --path --windows "$CARBON_XBOOTCLASSPATH"`
    fi

    # ----- Execute The Requested Command -----------------------------------------

    echo JAVA_HOME environment variable is set to $JAVA_HOME
    echo CARBON_HOME environment variable is set to "$CARBON_HOME"

    cd "$CARBON_HOME"

    TMP_DIR="$CARBON_HOME"/tmp
    if [ -d "$TMP_DIR" ]; then
    rm -rf "$TMP_DIR"/*
    fi

    START_EXIT_STATUS=121
    status=$START_EXIT_STATUS

    if [ -z "$JVM_MEM_OPTS" ]; then
       java_version=$("$JAVACMD" -version 2>&1 | awk -F '"' '/version/ {print $2}')
       JVM_MEM_OPTS="-Xms256m -Xmx1024m"
       if [ "$java_version" \< "1.8" ]; then
          JVM_MEM_OPTS="$JVM_MEM_OPTS -XX:MaxPermSize=256m"
       fi
    fi
    echo "Using Java memory options: $JVM_MEM_OPTS"

    #To monitor a Carbon server in remote JMX mode on linux host machines, set the below system property.
    #   -Djava.rmi.server.hostname="your.IP.goes.here"

    JAVA_VER_BASED_OPTS=""

    NASHRON_ARGS=""

    if [ $java_version_formatted -ge 1100 ]; then
     NASHRON_ARGS="--no-deprecation-warning"
        JAVA_VER_BASED_OPTS="--add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens java.rmi/sun.rmi.transport=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED"
    fi


    while [ "$status" = "$START_EXIT_STATUS" ]
    do
        $JAVACMD \
        -Xbootclasspath/a:"$CARBON_XBOOTCLASSPATH" \
        $JVM_MEM_OPTS \
        -XX:+HeapDumpOnOutOfMemoryError \
        -XX:HeapDumpPath="$CARBON_HOME/repository/logs/heap-dump.hprof" \
        $JAVA_OPTS \
        -Dcom.sun.management.jmxremote \
        -classpath "$CARBON_CLASSPATH" \
        $JAVA_VER_BASED_OPTS \
        -Djava.io.tmpdir="$CARBON_HOME/tmp" \
        -Dcatalina.base="$CARBON_HOME/lib/tomcat" \
        -Dwso2.server.standalone=true \
        -Dcarbon.registry.root=/ \
        -Djava.command="$JAVACMD" \
        -Dcarbon.home="$CARBON_HOME" \
        -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager \
        -Dcarbon.config.dir.path="$CARBON_HOME/repository/conf" \
        -Djava.util.logging.config.file="$CARBON_HOME/repository/conf/etc/logging-bridge.properties" \
        -Dcomponents.repo="$CARBON_HOME/repository/components/plugins" \
        -Dconf.location="$CARBON_HOME/repository/conf"\
        -Dcom.atomikos.icatch.file="$CARBON_HOME/lib/transactions.properties" \
        -Dcom.atomikos.icatch.hide_init_file_path=true \
        -Dorg.apache.jasper.compiler.Parser.STRICT_QUOTE_ESCAPING=false \
        -Dorg.apache.jasper.runtime.BodyContentImpl.LIMIT_BUFFER=true \
        -Dcom.sun.jndi.ldap.connect.pool.authentication=simple  \
        -Dcom.sun.jndi.ldap.connect.pool.timeout=3000  \
        -Dorg.terracotta.quartz.skipUpdateCheck=true \
        -Djava.security.egd=file:/dev/./urandom \
        -Dfile.encoding=UTF8 \
        -Djava.net.preferIPv4Stack=true \
        -Dcom.ibm.cacheLocalHost=true \
        -DworkerNode=false \
        -DenableCorrelationLogs=false \
        -Dhttpclient.hostnameVerifier="DefaultAndLocalhost" \
        -Dorg.apache.xml.security.ignoreLineBreaks=false \
        -Dnashorn.args="$NASHRON_ARGS" \
        -Dcarbon.new.config.dir.path="$CARBON_HOME/repository/resources/conf" \
        -Djdk.tls.client.protocols=TLSv1.2 \
        org.wso2.carbon.bootstrap.Bootstrap $*
        status=$?
    done
---
# Source: is-pattern-1/templates/is/wso2is-pattern-1-identity-server-conf.yaml
# Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: wso2is-pattern-1-identity-server-conf
  namespace : default
  
data:
  deployment.toml: |-
    # Deployment config for Identity Server deployment
    [server]
    hostname = "identity.wso2.com"
    node_ip = "$env{NODE_IP}"
    base_path = "https://$ref{server.hostname}:${carbon.management.port}"

    [super_admin]
    username = "admin"
    password = "admin"
    create_admin_account = true

    [user_store]
    type = "database_unique_id"

    [database.user]
    url = "jdbc:mysql://wso2is-mysql-db-service:3306/WSO2IS_SHARED_DB?autoReconnect=true&amp;useSSL=false"
    username = "wso2carbon"
    password = "wso2carbon"
    driver = "com.mysql.cj.jdbc.Driver"

    [database.user.pool_options]
    validationQuery = "SELECT 1"

    [transport.https.properties]
    proxyPort="443"

    [database.identity_db]
    url = "jdbc:mysql://wso2is-mysql-db-service:3306/WSO2IS_IDENTITY_DB?autoReconnect=true&amp;useSSL=false"
    username = "wso2carbon"
    password = "wso2carbon"
    driver = "com.mysql.cj.jdbc.Driver"

    [database.identity_db.pool_options]
    validationQuery = "SELECT 1"

    [database.shared_db]
    url = "jdbc:mysql://wso2is-mysql-db-service:3306/WSO2IS_SHARED_DB?autoReconnect=true&amp;useSSL=false"
    username = "wso2carbon"
    password = "wso2carbon"
    driver = "com.mysql.cj.jdbc.Driver"

    [truststore]
    file_name="client-truststore.jks"
    password="wso2carbon"
    type="JKS"

    [account_recovery.endpoint.auth]
    hash= "66cd9688a2ae068244ea01e70f0e230f5623b7fa4cdecb65070a09ec06452262"

    [identity.auth_framework.endpoint]
    app_password= "dashboard"

    [database.shared_db.pool_options]
    validationQuery = "SELECT 1"

    [database.bps_database]
    url = "jdbc:mysql://wso2is-mysql-db-service:3306/WSO2IS_BPS_DB?autoReconnect=true&amp;useSSL=false"
    username = "wso2carbon"
    password = "wso2carbon"
    driver = "com.mysql.cj.jdbc.Driver"

    [database.bps_database.pool_options]
    validationQuery = "SELECT 1"

    [[datasource]]
    id = "WSO2ConsentDS"
    url = "jdbc:mysql://wso2is-mysql-db-service:3306/WSO2IS_CONSENT_DB?autoReconnect=true&amp;useSSL=false"
    username = "wso2carbon"
    password = "wso2carbon"
    driver = "com.mysql.cj.jdbc.Driver"
    pool_options.validationQuery="SELECT 1"
    pool_options.maxActive=50
    pool_options.maxWait = 60000 # wait in milliseconds
    pool_options.testOnBorrow = true
    pool_options.jmxEnabled = false
    [authentication.consent]
    data_source="jdbc/WSO2ConsentDS"

    [keystore.primary]
    name = "wso2carbon.jks"
    password = "wso2carbon"

    [clustering]
    membership_scheme = "kubernetes"
    domain = "wso2.carbon.domain"
    properties.membershipSchemeClassName = "org.wso2.carbon.membership.scheme.kubernetes.KubernetesMembershipScheme"
    properties.KUBERNETES_NAMESPACE = "default"
    properties.KUBERNETES_SERVICES = "wso2is-pattern-1-identity-service"
    properties.KUBERNETES_MASTER_SKIP_SSL_VERIFICATION = "true"
    properties.USE_DNS = "false"
---
# Source: is-pattern-1/templates/wso2is-pattern-1-rbac.yaml
# Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: wso2is-pattern-1-endpoints-reader-role
rules:
- apiGroups: [""]
  verbs: ["get", "list"]
  resources: ["endpoints"]
---
# Source: is-pattern-1/templates/wso2is-pattern-1-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: wso2is-pattern-1-endpoints-reader-role-wso2-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: wso2is-pattern-1-endpoints-reader-role
subjects:
  - kind: ServiceAccount
    name: wso2is-pattern-1-svc-account
    namespace: default
---
# Source: is-pattern-1/charts/mysql-is/charts/mysql/templates/primary/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: wso2is-mysql-db-service-headless
  namespace: default
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-8.2.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: mysql
      port: 3306
      targetPort: mysql
  selector: 
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: primary
---
# Source: is-pattern-1/charts/mysql-is/charts/mysql/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: wso2is-mysql-db-service
  namespace: default
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-8.2.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: ClusterIP
  ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: mysql
      nodePort: null
  selector: 
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: primary
---
# Source: is-pattern-1/templates/is/wso2is-pattern-1-identity-service.yaml
# Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Service
metadata:
  name: wso2is-pattern-1-identity-service
  namespace : default
  labels:
    deployment: wso2is
    monitoring: jmx
spec:
  selector:
    deployment: wso2is
  ports:
  - name: servlet-http
    port: 9763
    targetPort: 9763
    protocol: TCP
  - name: servlet-https
    port: 9443
    targetPort: 9443
    protocol: TCP
---
# Source: is-pattern-1/charts/mysql-is/charts/mysql/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: wso2is-mysql-db-service
  namespace: default
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-8.2.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  selector:
    matchLabels: 
      app.kubernetes.io/name: mysql
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: primary
  serviceName: wso2is-mysql-db-service
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: f27e0cc4b4175d05841dd0c0d11aa4c05b99f28b5ea30eda04616d7ecc50076d
      labels:
        app.kubernetes.io/name: mysql
        helm.sh/chart: mysql-8.2.3
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: primary
    spec:
      
      serviceAccountName: wso2is-mysql-db-service
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mysql
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: primary
                namespaces:
                  - default
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      containers:
        - name: mysql
          image: docker.io/bitnami/mysql:8.0.22-debian-10-r44
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wso2is-mysql-db-service
                  key: mysql-root-password
            - name: MYSQL_DATABASE
              value: "my_database"
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          resources: 
            limits: {}
            requests: {}
          volumeMounts:
            - name: data
              mountPath: /bitnami/mysql
            - name: config
              mountPath: /opt/bitnami/mysql/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: wso2is-mysql-db-service
  volumeClaimTemplates:
    - metadata:
        name: data
        labels: 
          app.kubernetes.io/name: mysql
          app.kubernetes.io/instance: release-name
          app.kubernetes.io/component: primary
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: is-pattern-1/templates/is/wso2is-pattern-1-identity-server-statefulset.yaml
# Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: wso2is-pattern-1-identity-server-statefulset
  namespace: default
spec:
  selector:
    matchLabels:
      deployment: wso2is
      monitoring: jmx
  replicas: 2
  serviceName: wso2is-pattern-1-identity-service
  template:
    metadata:
      annotations:
        checksum.is.bin: 518d688918b5606a367a9f59377acb68c901c6fe2c9ff56fb0b039f6726ca8ca
        checksum.is.conf: fa06dc4a51e4cfba106590410a93151fd9f030b57b1c6de23e7f5100a53055a6
        
      labels:
        deployment: wso2is
        monitoring: jmx
    spec:
      initContainers:
        
        
        
      containers:
        - name: identity-server
          image: "massimolauri/wso2is:5.11.0-centos"
          imagePullPolicy: Always
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: JVM_MEM_OPTS
              value: "-Xms2048m -Xmx2048m"
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - nc -z localhost 9443
            initialDelaySeconds: 120
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - nc -z localhost 9443
            initialDelaySeconds: 120
            periodSeconds: 10
          lifecycle:
            preStop:
              exec:
                command:  ['sh', '-c', '${WSO2_SERVER_HOME}/bin/wso2server.sh stop']
          resources:
            requests:
              memory: 3Gi
              cpu: 3000m
            limits:
              memory: 4Gi
              cpu: 4000m
          securityContext:
            runAsUser: 802
          ports:
            - containerPort: 9763
              protocol: TCP
            - containerPort: 9443
              protocol: TCP
            
          volumeMounts:
            - name: identity-server-conf
              mountPath: /home/wso2carbon/wso2-config-volume/repository/conf/deployment.toml
              subPath: deployment.toml
            - name: identity-server-bin
              mountPath: /home/wso2carbon/wso2-config-volume/bin
            
            
            
        
      serviceAccountName: wso2is-pattern-1-svc-account
      volumes:
      - name: identity-server-conf
        configMap:
          name: wso2is-pattern-1-identity-server-conf
      - name: identity-server-bin
        configMap:
          name: wso2is-pattern-1-identity-server-bin
---
# Source: is-pattern-1/templates/is/wso2is-pattern-1-identity-server-ingress.yaml
# Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: wso2is-pattern-1-identity-server-ingress
  namespace : default
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/session-cookie-hash: sha1
    nginx.ingress.kubernetes.io/session-cookie-name: route
spec:
  tls:
  - hosts:
    - identity.wso2.com
  rules:
  - host: identity.wso2.com
    http:
      paths:
      - path: /
        backend:
          serviceName: wso2is-pattern-1-identity-service
          servicePort: 9443
