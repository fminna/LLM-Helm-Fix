---
# Source: glide/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: release-name-glide
  namespace: default
  labels:
    helm.sh/chart: glide-0.0.2
    app.kubernetes.io/name: glide
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.3"
    app.kubernetes.io/managed-by: Helm
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: glide
      app.kubernetes.io/instance: release-name
---
# Source: glide/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-glide
  namespace: default
  labels:
    helm.sh/chart: glide-0.0.2
    app.kubernetes.io/name: glide
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.3"
    app.kubernetes.io/managed-by: Helm
---
# Source: glide/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: glide-config
  namespace: default
  labels:
    helm.sh/chart: glide-0.0.2
    app.kubernetes.io/name: glide
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.3"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |-
    api:
      http:
        host: 0.0.0.0
        port: 9099
    routers:
      language:
      - id: default
        models:
        - id: openai
          openai:
            api_key: ${env:OPENAI_API_KEY}
---
# Source: glide/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-glide
  namespace: default
  labels:
    helm.sh/chart: glide-0.0.2
    app.kubernetes.io/name: glide
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.3"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9099
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: glide
    app.kubernetes.io/instance: release-name
---
# Source: glide/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-glide
  namespace: default
  labels:
    helm.sh/chart: glide-0.0.2
    app.kubernetes.io/name: glide
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.3"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: glide
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: glide
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-glide
      automountServiceAccountToken: false
      priorityClassName: ""
      
      
      securityContext:
              fsGroup: 1001
              fsGroupChangePolicy: Always
              supplementalGroups: []
              sysctls: []
      containers:
      - name: glide
        securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              privileged: false
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              runAsUser: 1001
              seLinuxOptions: null
              seccompProfile:
                type: RuntimeDefault
        image: "ghcr.io/einstack/glide:0.0.1-alpine"
        imagePullPolicy: IfNotPresent
        args:
                  - --config=/etc/glide/config.yaml
        ports:
          - name: http
            containerPort: 9099
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /v1/health/
            port: http
        readinessProbe:
          httpGet:
            path: /v1/health/
            port: http
        resources:
                  limits: {}
                  requests: {}
        lifecycle:
                  {}
        volumeMounts:
        - name: glide-conf
          mountPath: /etc/glide/
      hostNetwork: false
      volumes:
        - name: glide-conf
          configMap:
            name: "glide-config"
