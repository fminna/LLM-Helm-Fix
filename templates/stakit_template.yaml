---
# Source: stakit/templates/service-backend.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-stakit-backend
  namespace: default  
  labels:
    helm.sh/chart: stakit-0.3.6
    app.kubernetes.io/name: stakit
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.6"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: stakit-backend
    app.kubernetes.io/instance: release-name-backend
---
# Source: stakit/templates/service-frontend.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-stakit-frontend
  namespace: default  
  labels:
    helm.sh/chart: stakit-0.3.6
    app.kubernetes.io/name: stakit
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.6"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: stakit-frontend
    app.kubernetes.io/instance: release-name-frontend
---
# Source: stakit/templates/deployment-backend.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-stakit-backend
  namespace: default  
  labels:
    helm.sh/chart: stakit-0.3.6
    app.kubernetes.io/name: stakit
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.6"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: stakit-backend
      app.kubernetes.io/instance: release-name-backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: stakit-backend
        app.kubernetes.io/instance: release-name-backend
    spec:
      automountServiceAccountToken: false
      securityContext:
        {}
      containers:
        - name: stakit-backend
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 11000
            runAsNonRoot: true
            runAsUser: 11000
            seccompProfile:
              type: RuntimeDefault
          image: "kvalitetsit/stakit-backend:0.2.2"
          imagePullPolicy: IfNotPresent
          env: 
            - name: ADAPTER_API_KEY
              value: 
            - name: ALLOWED_ORIGINS
              value: 
            - name: BASE_URL
              value: 
            - name: CHECK_MESSAGES_FREQUENCY
              value: "PT5M"
            - name: JDBC_PASS
              value: 
            - name: JDBC_URL
              value: 
            - name: JDBC_USER
              value: 
            - name: JWT_SIGNING_KEY
              value: 
            - name: MAIL_FROM
              value: 
            - name: MAIL_HOST
              value: 
            - name: MAIL_PASSWORD
              value: 
            - name: MAIL_PORT
              value: "587"
            - name: MAIL_USER
              value: 
            - name: STATUS_UPDATE_BODY_TEMPLATE
              value: 
            - name: STATUS_UPDATE_SUBJECT_TEMPLATE
              value: 
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: actuator
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: actuator
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: actuator
          resources:
            {}
          volumeMounts:
            - mountPath: /tmp
              name: tmp
      volumes:
        - emptyDir: {}
          name: tmp
---
# Source: stakit/templates/deployment-frontend.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    helm.sh/chart: stakit-0.3.6
    app.kubernetes.io/name: stakit
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.6"
    app.kubernetes.io/managed-by: Helm
  name: release-name-stakit-frontend
  namespace: default  
spec:
  replicas: 2
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: stakit-frontend
      app.kubernetes.io/instance: release-name-frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: stakit-frontend
        app.kubernetes.io/instance: release-name-frontend
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: release-name-stakit-frontend
                    app.kubernetes.io/name: release-name-stakit-frontend
                namespaces:
                  - default  
                topologyKey: kubernetes.io/hostname
              weight: 1
      automountServiceAccountToken: false
      containers:
        - args: []
          command: []
          env: []
          image: nginxinc/nginx-unprivileged:alpine3.17
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: release-name-stakit-frontend
          ports:
            - containerPort: 80
              name: http
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /etc/nginx
              name: etc
            - mountPath: /docker-entrypoint.d
              name: init
            - mountPath: /var/cache/nginx
              name: nginx-cache
            - mountPath: /var/run
              name: var
            - mountPath: /tmp
              name: tmp
      initContainers:
        - image: "kvalitetsit/stakit-frontend:0.2.1"
          imagePullPolicy: IfNotPresent
          env: 
            - name: REACT_APP_API_BASEURL
              value: "/api/v1/"
            - name: REACT_APP_INACTIVITY_MAX_MINUTES
              value: "30"
            - name: REACT_APP_KEYCLOAK_CLIENTID
              value: 
            - name: REACT_APP_KEYCLOAK_REALM
              value: 
            - name: REACT_APP_KEYCLOAK_URL
              value:        
          name: stakit-init
          volumeMounts:
            - mountPath: /temp/etc/nginx
              name: etc
            - mountPath: /temp/docker-entrypoint.d
              name: init
            - mountPath: /temp/var/cache/nginx
              name: nginx-cache
            - mountPath: /temp/var/run
              name: var
      securityContext: {}
      serviceAccountName: default
      volumes:
        - emptyDir: {}
          name: etc
        - emptyDir: {}
          name: init
        - emptyDir: {}
          name: nginx-cache
        - emptyDir: {}
          name: var
        - emptyDir: {}
          name: tmp
