---
# Source: archisteamfarm/templates/config.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-archisteamfarm-secrets
  labels:
    helm.sh/chart: archisteamfarm-0.3.0
    app.kubernetes.io/name: archisteamfarm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "5.2.5.4"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  ipc: "eGNsZm5wOUk1TGp3VFFHNXhHVzJQdjNYY05FODhiNDE="
---
# Source: archisteamfarm/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-archisteamfarm-init-config
data:
  ASF.json: |
    {"Headless":true,"IPCPassword":"eGNsZm5wOUk1TGp3VFFHNXhHVzJQdjNYY05FODhiNDE=","SteamOwnerID":"0"}
  IPC.config: |
    {"Kestrel":{"Endpoints":{"HTTP":{"Url":"http://*:1242"}}}}
---
# Source: archisteamfarm/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-archisteamfarm-config
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: archisteamfarm/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-archisteamfarm
  labels:
    helm.sh/chart: archisteamfarm-0.3.0
    app.kubernetes.io/name: archisteamfarm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "5.2.5.4"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 1242
      targetPort: 1242
      protocol: TCP
      name: ipc
  selector:
    app.kubernetes.io/name: archisteamfarm
    app.kubernetes.io/instance: release-name
---
# Source: archisteamfarm/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-archisteamfarm
  labels:
    helm.sh/chart: archisteamfarm-0.3.0
    app.kubernetes.io/name: archisteamfarm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "5.2.5.4"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: archisteamfarm
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: archisteamfarm
        app.kubernetes.io/instance: release-name
    spec:
      securityContext:
        {}
      initContainers:
        - name: init-config
          image: busybox:stable
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c", "for i in /init/*; do if [ -f \"$i\" ] && [ ! -f \"/config/$(basename \"$i\")\" ]; then cp -v \"$i\" \"/config/$(basename \"$i\")\"; chmod 755 \"/config/$(basename \"$i\")\"; fi; done"]
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /init
              name: init
      containers:
        - name: archisteamfarm
          securityContext:
            {}
          image: "ghcr.io/justarchinet/archisteamfarm:5.2.5.4"
          imagePullPolicy: IfNotPresent
          ports:
            - name: ipc
              containerPort: 1242
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 1242
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 1242
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            {}
          volumeMounts:
            - mountPath: /app/config
              name: config
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: release-name-archisteamfarm-config
        - name: init
          configMap:
            name: release-name-archisteamfarm-init-config
---
# Source: archisteamfarm/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-archisteamfarm
  labels:
    helm.sh/chart: archisteamfarm-0.3.0
    app.kubernetes.io/name: archisteamfarm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "5.2.5.4"
    app.kubernetes.io/managed-by: Helm
spec:
  ingressClassName: 
  tls:
    - hosts: [asf.example.org]
      secretName: release-name-archisteamfarm-certificate
  rules:
    - host: asf.example.org
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: release-name-archisteamfarm
                port:
                  number: 1242
---
# Source: archisteamfarm/templates/certificate.yaml
# This is the definition of the required ssl certificate for the mail system
# It will be issued by cert-manager
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: release-name-archisteamfarm-certificate
spec:
  secretName: release-name-archisteamfarm-certificate
  # re-new certificate when it expires in less than 60 days
  renewBefore: 1440h0m0s
  commonName: asf.example.org
  dnsNames: [asf.example.org]
  issuerRef:
    kind: ClusterIssuer
    name: letsencrypt
---
# Source: archisteamfarm/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-archisteamfarm-test-connection"
  labels:
    helm.sh/chart: archisteamfarm-0.3.0
    app.kubernetes.io/name: archisteamfarm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "5.2.5.4"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox:1.34
      command: ['wget']
      args: ['-qO-', 'http://release-name-archisteamfarm:1242']
  restartPolicy: Never
