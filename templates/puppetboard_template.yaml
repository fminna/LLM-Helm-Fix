---
# Source: puppetboard/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-puppetboard
  labels:
    app.kubernetes.io/name: puppetboard
    helm.sh/chart: puppetboard-0.6.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: puppetboard/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-puppetboard
  labels:
    app.kubernetes.io/name: puppetboard
    helm.sh/chart: puppetboard-0.6.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/managed-by: Helm
stringData:
  autosign_psk: ""
---
# Source: puppetboard/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-puppetboard
  labels:
    app.kubernetes.io/name: puppetboard
    helm.sh/chart: puppetboard-0.6.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: puppetboard
    app.kubernetes.io/instance: release-name
---
# Source: puppetboard/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-puppetboard
  labels:
    app.kubernetes.io/name: puppetboard
    helm.sh/chart: puppetboard-0.6.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: puppetboard
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: puppetboard
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-puppetboard
      securityContext:
        {}
      initContainers:
        - name: puppetboard-autosign
          image: "docker.io/puppet/puppet-agent:6.15.0"
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c"]
          args:
            - "psk=$(cat /run/secrets/autosign_psk); hostname=$(puppet config print certname | tr -d '\n'); echo \"custom_attributes:\n  1.2.840.113549.1.9.7: 'hashed;$(echo -n $psk/$hostname/puppetboard/production | openssl dgst -binary -sha256 | openssl base64)'\nextension_requests:\n  pp_role: 'puppetboard'\n  pp_environment: 'production'\" > /etc/puppetlabs/puppet/csr_attributes.yaml; puppet ssl submit_request --environment production --server puppetserver --certificate_revocation=false --waitforcert 60 --confdir /etc/puppetlabs/puppet; cd /etc/puppetlabs/puppet/ssl && cp private_keys/$hostname.pem private_keys/puppetboard.pem && cp certs/$hostname.pem certs/puppetboard.pem ; mv /etc/puppetlabs/puppet/ssl/* /srv/puppetssl/"
          env:
            - name: HOME
              value: /tmp
          volumeMounts:
            - mountPath: /run/secrets/autosign_psk
              name: secrets
              subPath: autosign_psk
            - mountPath: /etc/puppetlabs/puppet
              name: confdir
            - mountPath: /srv/puppetssl
              name: ssldir
          resources:
            {}
      containers:
        - name: puppetboard
          securityContext:
            {}
          image: "docker.io/camptocamp/puppetboard:2.2.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: PUPPETBOARD_PORT
              value: '8080'
            - name: INVENTORY_FACTS
              value: "Hostname, fqdn, IP Address, ipaddress, OS, lsbdistdescription, Architecture, hardwaremodel, Kernel Version, kernelrelease, Puppet Version, puppetversion"
            - name: PUPPETDB_HOST
              value: puppetdb
            - name: PUPPETDB_PORT
              value: "8081"
            - name: PUPPETDB_KEY
              value: /etc/puppetlabs/puppet/ssl/private_keys/puppetboard.pem
            - name: PUPPETDB_CERT
              value: /etc/puppetlabs/puppet/ssl/certs/puppetboard.pem
            - name: PUPPETDB_SSL_VERIFY
              value: /etc/puppetlabs/puppet/ssl/certs/ca.pem
            - name: DEFAULT_ENVIRONMENT
              value: '*'
          volumeMounts:
            - mountPath: /etc/puppetlabs/puppet/ssl
              name: ssldir
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
          resources:
            {}
      volumes:
        - name: confdir
          emptyDir: {}
        - name: ssldir
          emptyDir: {}
        - name: secrets
          secret:
            secretName: release-name-puppetboard
