---
# Source: kimai2/charts/mariadb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-11.5.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "10.6.12"
  annotations:
automountServiceAccountToken: false
---
# Source: kimai2/charts/mariadb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-11.5.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "10.6.12"
type: Opaque
data:
  mariadb-root-password: "a2ltYWlSMDB0UGFzc3cwcmQ="
  mariadb-password: "a2ltYWk="
---
# Source: kimai2/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-kimai2
  namespace: "default"
  labels:
    app.kubernetes.io/name: kimai2
    helm.sh/chart: kimai2-4.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "apache-2.16.1-prod"
type: Opaque
data:
  app-secret: "Y2hhbmdlX3RoaXNfdG9fc29tZXRoaW5nX3VuaXF1ZQ=="
  admin-password: "UDN5aGczekt6ZQ=="
  mailer-url: "bnVsbDovL2xvY2FsaG9zdA=="
  database-url: "bXlzcWw6Ly9raW1haTpraW1haUByZWxlYXNlLW5hbWUtbWFyaWFkYi9raW1haT9jaGFyc2V0PXV0Zjgmc2VydmVyVmVyc2lvbj0xMC42LjEy"
---
# Source: kimai2/charts/mariadb/templates/primary/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-11.5.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "10.6.12"
    app.kubernetes.io/component: primary
data:
  my.cnf: |-
    [mysqld]
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mariadb
    plugin_dir=/opt/bitnami/mariadb/plugin
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    tmpdir=/opt/bitnami/mariadb/tmp
    max_allowed_packet=16M
    bind-address=*
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    log-error=/opt/bitnami/mariadb/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci
    slow_query_log=0
    slow_query_log_file=/opt/bitnami/mariadb/logs/mysqld.log
    long_query_time=10.0
    
    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mariadb/plugin
    
    [manager]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
---
# Source: kimai2/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-kimai2-config
  namespace: "default"
  labels:
    app.kubernetes.io/name: kimai2
    helm.sh/chart: kimai2-4.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "apache-2.16.1-prod"
data:
  local.yaml: |-
    
    monolog:
        handlers:
            main:
                path: php://stderr
---
# Source: kimai2/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-kimai2
  namespace: "default"
  labels:
    app.kubernetes.io/name: kimai2
    helm.sh/chart: kimai2-4.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "apache-2.16.1-prod"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "4Gi"
---
# Source: kimai2/charts/mariadb/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-11.5.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "10.6.12"
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: mysql
      nodePort: null
  selector: 
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: primary
---
# Source: kimai2/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kimai2
  namespace: "default"
  labels:
    app.kubernetes.io/name: kimai2
    helm.sh/chart: kimai2-4.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "apache-2.16.1-prod"
spec:
  type: LoadBalancer
  externalTrafficPolicy: "Cluster"
  sessionAffinity: None
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
  selector:
    app.kubernetes.io/name: kimai2
    app.kubernetes.io/instance: release-name
---
# Source: kimai2/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kimai2
  namespace: "default"
  labels:
    app.kubernetes.io/name: kimai2
    helm.sh/chart: kimai2-4.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "apache-2.16.1-prod"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kimai2
      app.kubernetes.io/instance: release-name
  strategy:
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kimai2
        helm.sh/chart: kimai2-4.1.0
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "apache-2.16.1-prod"
      annotations:
        checksum/config: f49ade593de9a4929df7995757d53ab64a9540ec4f2ab8bd1b376afb5a3833b1
        checksum/secret: a12f02f15415f5c574486a9343c9db9dae7f87d31a6f60628cf885246ceac4f4
    spec:
      
      # yamllint disable rule:indentation
      hostAliases:
        - hostnames:
          - status.localhost
          ip: 127.0.0.1
      # yamllint enable rule:indentation
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/name: kimai2
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      serviceAccountName: default
      containers:
        - name: kimai2
          image: docker.io/kimai/kimai2:apache-2.16.1-prod
          imagePullPolicy: "IfNotPresent"
          env:
            - name: APP_ENV
              value: prod
            - name: APP_SECRET
              valueFrom:
                secretKeyRef:
                  name: release-name-kimai2
                  key: app-secret
            - name: ADMINMAIL
              value: admin@example.com
            - name: ADMINPASS
              valueFrom:
                secretKeyRef:
                  name: release-name-kimai2
                  key: admin-password
            - name: MAILER_FROM
              value: kimai@example.com
            - name: MAILER_URL
              valueFrom:
                secretKeyRef:
                  name: release-name-kimai2
                  key: mailer-url
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: release-name-kimai2
                  key: database-url
            - name: TRUSTED_HOSTS
              value: localhost,kimai.local
          envFrom:
          ports:
          - name: http
            containerPort: 8001
          livenessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: Host
                value: localhost
              path: /en/login
              port: http
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: Host
                value: localhost
              path: /en/login
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 100m
          volumeMounts:
            - mountPath: /opt/kimai/var/data
              name: kimai-data
              subPath: data
            - name: config
              mountPath: /opt/kimai/config/packages/local.yaml
              subPath: local.yaml
      volumes:
        - name: config
          configMap:
            name: release-name-kimai2-config
            defaultMode: 0555
        - name: kimai-data
          persistentVolumeClaim:
            claimName: release-name-kimai2
---
# Source: kimai2/charts/mariadb/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-11.5.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "10.6.12"
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels: 
      app.kubernetes.io/name: mariadb
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: primary
  serviceName: release-name-mariadb
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: 2f12ffc41c761404b0d7de0ee9c51918865021b59fc1a4ad655b4f32d510c9b0
      labels:
        app.kubernetes.io/name: mariadb
        helm.sh/chart: mariadb-11.5.7
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "10.6.12"
        app.kubernetes.io/component: primary
    spec:
      
      serviceAccountName: release-name-mariadb
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/name: mariadb
                    app.kubernetes.io/component: primary
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      containers:
        - name: mariadb
          image: docker.io/bitnami/mariadb:10.6.12-debian-11-r16
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-mariadb
                  key: mariadb-root-password
            - name: MARIADB_USER
              value: "kimai"
            - name: MARIADB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-mariadb
                  key: mariadb-password
            - name: MARIADB_DATABASE
              value: "kimai"
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          resources: 
            limits: {}
            requests: {}
          volumeMounts:
            - name: data
              mountPath: /bitnami/mariadb
            - name: config
              mountPath: /opt/bitnami/mariadb/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: release-name-mariadb
  volumeClaimTemplates:
    - metadata:
        name: data
        labels: 
          app.kubernetes.io/name: mariadb
          app.kubernetes.io/instance: release-name
          app.kubernetes.io/component: primary
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "4Gi"
