---
# Source: aws-iam-authenticator/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-aws-iam-authenticator
  labels:
    app: aws-iam-authenticator
    chart: aws-iam-authenticator-0.1.0
    release: release-name
    heritage: Helm
data:
  config.yaml: |
    {}
---
# Source: aws-iam-authenticator/templates/daemonset.yaml
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: release-name-aws-iam-authenticator
  labels:
    app: aws-iam-authenticator
    chart: aws-iam-authenticator-0.1.0
    release: release-name
    heritage: Helm
spec:
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
        checksum/config: 57247eab3988bf4940d7fc6ab1ca7e19c7d3d97623c681c6706f71e2abc22ba2
      labels:
        app: aws-iam-authenticator
        release: release-name
    spec:
      # run on the host network (don't depend on CNI)
      hostNetwork: true

      # run on each master node
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - key: CriticalAddonsOnly
        operator: Exists

      # run `aws-iam-authenticator server` with three volumes
      # - config (mounted from the ConfigMap at /etc/aws-iam-authenticator/config.yaml)
      # - state (persisted TLS certificate and keys, mounted from the host)
      # - output (output kubeconfig to plug into your apiserver configuration, mounted from the host)
      containers:
      - name: release-name-aws-iam-authenticator
        image: registry.cn-hangzhou.aliyuncs.com/kubeapps/gcr-authenticator:v0.1.0
        args:
        - server
        - --config=/etc/aws-iam-authenticator/config.yaml
        - --state-dir=/var/aws-iam-authenticator
        - --generate-kubeconfig=/etc/kubernetes/aws-iam-authenticator/kubeconfig.yaml

        resources:
          {}

        volumeMounts:
        - name: config
          mountPath: /etc/aws-iam-authenticator/
        - name: state
          mountPath: /var/aws-iam-authenticator/
        - name: output
          mountPath: /etc/kubernetes/aws-iam-authenticator/

      volumes:
      - name: config
        configMap:
          name: release-name-aws-iam-authenticator
      - name: output
        hostPath:
          path: /srv/kubernetes/aws-iam-authenticator/
      - name: state
        hostPath:
          path: /srv/kubernetes/aws-iam-authenticator/
