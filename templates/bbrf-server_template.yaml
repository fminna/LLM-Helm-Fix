---
# Source: bbrf-server/templates/bbrf-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-config
  namespace: default
data:
  COUCHDB_USER: admin
  COUCHDB_PASSWORD: COUCHDB_PASSWORD_CHANGE_ME_MUST!  # please please please replace this with a secure password
  BBRF_PASSWORD: BBRF_PASSWORD_CHANGE_ME_MUST! # please please please replace this with a secure password
---
# Source: bbrf-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: bbrf-db-svc
  namespace: default
  labels:
    app: release-name-bbrf-server
    chart: "bbrf-server-0.1.0"
    release: "release-name"
spec:
  type: ClusterIP
  ports:
  - port: 5984
    targetPort: 5984
    protocol: TCP
    name: bbrf-db-svc
  selector:
    app.kubernetes.io/name: bbrf-server
    app.kubernetes.io/instance: release-name
---
# Source: bbrf-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-bbrf-server
  namespace: default
  labels:
    helm.sh/chart: bbrf-server-0.1.0
    app.kubernetes.io/name: bbrf-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: bbrf-server
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bbrf-server
        app.kubernetes.io/instance: release-name
    spec:
      hostname: couchdb
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: bbrf-server
          securityContext:
            {}
          image: "honoki/bbrf-server:latest"
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: release-name-config
          ports:
            - name: http
              containerPort: 5984
              protocol: TCP
          resources:
            {}
---
# Source: bbrf-server/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
 name: release-name-bbrf-server
 namespace: default
 labels:
    app: release-name-bbrf-server
    chart: "bbrf-server-0.1.0"
    release: "release-name"
 annotations:
     kubernetes.io/ingress.class: "nginx"
     nginx.ingress.kubernetes.io/configuration-snippet: "more_set_input_headers \"X-Real-IP: $remote_addr\";\nmore_set_input_headers \"X-Forwarded-For: $proxy_add_x_forwarded_for\"\nmore_set_input_headers \"X-NginX-Proxy: true\"\nmore_set_input_headers \"Host: $http_host\"\n"
     nginx.ingress.kubernetes.io/proxy-body-size: "4g"
     nginx.ingress.kubernetes.io/proxy-cache-bypass: "$http_upgrade"
     nginx.ingress.kubernetes.io/proxy-compression: "on"
     nginx.ingress.kubernetes.io/proxy-compression-types: "application/json"
     nginx.ingress.kubernetes.io/proxy-redirect: "off"
     nginx.ingress.kubernetes.io/proxy-ssl-session-reuse: "off"
     nginx.ingress.kubernetes.io/rewrite-target: "/$1"
spec:
  rules:
    - host: chart-example.local
      http:
        paths:
          - path: "/(.*)"
            pathType: Prefix
            backend:
              service: 
                name: bbrf-db-svc
                port: 
                    number: 5984
