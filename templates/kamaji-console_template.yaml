---
# Source: kamaji-console/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kamaji-console
  labels:
    helm.sh/chart: kamaji-console-0.0.5
    app.kubernetes.io/name: kamaji-console
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: kamaji-console/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-kamaji-console
  labels:
    helm.sh/chart: kamaji-console-0.0.5
    app.kubernetes.io/name: kamaji-console
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - '*'
  resources:
  - namespaces
  - deployments
  - replicasets
  - services
  - pods
  - secrets
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - kamaji.clastix.io
  resources:
  - tenantcontrolplanes
  - datastores
  verbs:
  - '*'
---
# Source: kamaji-console/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kamaji-console
  labels:
    helm.sh/chart: kamaji-console-0.0.5
    app.kubernetes.io/name: kamaji-console
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-kamaji-console
subjects:
- namespace: default 
  kind: ServiceAccount
  name: release-name-kamaji-console
---
# Source: kamaji-console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kamaji-console
  labels:
    helm.sh/chart: kamaji-console-0.0.5
    app.kubernetes.io/name: kamaji-console
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kamaji-console
    app.kubernetes.io/instance: release-name
---
# Source: kamaji-console/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kamaji-console
  labels:
    helm.sh/chart: kamaji-console-0.0.5
    app.kubernetes.io/name: kamaji-console
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kamaji-console
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kamaji-console
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-kamaji-console
      securityContext:
        {}
      containers:
        - name: kamaji-console
          securityContext:
            {}
          image: "clastix/kamaji-console:v0.0.2"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          #livenessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          #readinessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          resources:
            {}
          envFrom:
            - secretRef:
                name: kamaji-console
---
# Source: kamaji-console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-kamaji-console-test-connection"
  labels:
    helm.sh/chart: kamaji-console-0.0.5
    app.kubernetes.io/name: kamaji-console
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-kamaji-console:80']
  restartPolicy: Never
