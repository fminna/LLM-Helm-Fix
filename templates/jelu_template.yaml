---
# Source: jelu/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-jelu
  labels:
    helm.sh/chart: jelu-1.0.0
    app.kubernetes.io/name: jelu
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
---
# Source: jelu/templates/persistentvolumeclaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    helm.sh/chart: jelu-1.0.0
    app.kubernetes.io/name: jelu
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
  name: jelu-config
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 50Mi
  storageClassName:
---
# Source: jelu/templates/persistentvolumeclaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    helm.sh/chart: jelu-1.0.0
    app.kubernetes.io/name: jelu
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
  name: jelu-database
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName:
---
# Source: jelu/templates/persistentvolumeclaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    helm.sh/chart: jelu-1.0.0
    app.kubernetes.io/name: jelu
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
  name: jelu-images
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName:
---
# Source: jelu/templates/persistentvolumeclaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    helm.sh/chart: jelu-1.0.0
    app.kubernetes.io/name: jelu
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
  name: jelu-imports
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName:
---
# Source: jelu/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jelu
  labels:
    helm.sh/chart: jelu-1.0.0
    app.kubernetes.io/name: jelu
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 11111
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: jelu
    app.kubernetes.io/instance: release-name
---
# Source: jelu/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-jelu
  labels:
    helm.sh/chart: jelu-1.0.0
    app.kubernetes.io/name: jelu
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jelu
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jelu
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-jelu
      securityContext:
        fsGroup: 0
      containers:
        - name: jelu
          image: "docker.io/wabayang/jelu:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 11111
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            limits:
              cpu: 200m
              memory: 800M
            requests:
              cpu: 15m
              memory: 550M
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
          volumeMounts:
          - mountPath: /config
            name: release-name-config
          - mountPath: /database
            name: release-name-database
          - mountPath: /files/images
            name: release-name-images
          - mountPath: /files/imports
            name: release-name-imports
      volumes:
      - name: release-name-config
        persistentVolumeClaim:
          claimName: release-name-config
      - name: release-name-database
        persistentVolumeClaim:
          claimName: release-name-database
      - name: release-name-images
        persistentVolumeClaim:
          claimName: release-name-images
      - name: release-name-imports
        persistentVolumeClaim:
          claimName: release-name-imports
---
# Source: jelu/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-jelu
  labels:
    helm.sh/chart: jelu-1.0.0
    app.kubernetes.io/name: jelu
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  ingressClassName: nginx
  rules:
    - host: "jelu.example.com"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: release-name-jelu
                port:
                  number: 11111
