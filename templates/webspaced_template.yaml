---
# Source: webspaced/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-webspaced
  labels:
    helm.sh/chart: webspaced-0.2.8
    app.kubernetes.io/name: webspaced
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.5.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: webspaced/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-webspaced
  labels:
    helm.sh/chart: webspaced-0.2.8
    app.kubernetes.io/name: webspaced
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.5.1"
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: webspaced/templates/configmap-kubelan.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-webspaced-kubelan
  labels:
    helm.sh/chart: webspaced-0.2.8
    app.kubernetes.io/name: webspaced
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.5.1"
    app.kubernetes.io/managed-by: Helm
data:
  kubelan.yaml: |
    log_level: DEBUG
    services:
      - release-name-webspaced
    vxlan:
      interface: kubelan
      vni: 7331
---
# Source: webspaced/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-webspaced
  labels:
    helm.sh/chart: webspaced-0.2.8
    app.kubernetes.io/name: webspaced
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.5.1"
    app.kubernetes.io/managed-by: Helm
data:
  webspaced.yaml: |
    http:
      cors:
        allowed_origins:
        - '*'
    iam:
      allow_insecure: false
      url: https://iam.netsoc.ie/v1
    log_level: DEBUG
    lxd:
      tls:
        allow_insecure: false
        ca: ""
        client_cert: ""
        server_cert: ""
      url: https://lxd8s
    timeouts:
      shutdown: 30s
      startup: 30s
    traefik:
      default_sans:
      - '*.ng.netsoc.ie'
      https_entrypoint: websecure
      kubernetes:
        cluster_issuer: ""
        default_secret: ""
    webspaces:
      config_defaults:
        http_port: 80
        sni_passthrough: false
        startup_delay: 5
      domain: ng.netsoc.ie
      instance_prefix: ws-
      ip_timeout: 10s
      lxd_profile: webspace
      max_startup_delay: 60
      ports:
        end: 65535
        max: 64
        start: 49152
---
# Source: webspaced/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-webspaced
  labels:
    helm.sh/chart: webspaced-0.2.8
    app.kubernetes.io/name: webspaced
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.5.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: ['discovery.k8s.io']
    resources: ['endpointslices']
    verbs: ['watch', 'list']
---
# Source: webspaced/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-webspaced
  labels:
    helm.sh/chart: webspaced-0.2.8
    app.kubernetes.io/name: webspaced
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.5.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  name: release-name-webspaced
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: release-name-webspaced
    namespace: default
---
# Source: webspaced/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-webspaced
  labels:
    helm.sh/chart: webspaced-0.2.8
    app.kubernetes.io/name: webspaced
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.5.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: ['', 'traefik.containo.us', 'cert-manager.io']
    resources:
      - endpoints
      - services
      - middlewares
      - middlewaretcps
      - ingressroutes
      - ingressroutetcps
      - certificates
    verbs: ['get', 'create', 'update', 'delete']
---
# Source: webspaced/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-webspaced
  labels:
    helm.sh/chart: webspaced-0.2.8
    app.kubernetes.io/name: webspaced
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.5.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  name: release-name-webspaced
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: release-name-webspaced
---
# Source: webspaced/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-webspaced
  labels:
    helm.sh/chart: webspaced-0.2.8
    app.kubernetes.io/name: webspaced
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.5.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: webspaced
    app.kubernetes.io/instance: release-name
---
# Source: webspaced/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-webspaced-forwarding
  labels:
    helm.sh/chart: webspaced-0.2.8
    app.kubernetes.io/name: webspaced
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.5.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: LoadBalancer
  ports:
    - port: 6969
      targetPort: 6969
      protocol: TCP
      name: dummy
  selector:
    app.kubernetes.io/name: webspaced
    app.kubernetes.io/instance: release-name
---
# Source: webspaced/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-webspaced
  labels:
    helm.sh/chart: webspaced-0.2.8
    app.kubernetes.io/name: webspaced
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.5.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: webspaced
      app.kubernetes.io/instance: release-name
  serviceName: release-name-webspaced
  template:
    metadata:
      labels:
        app.kubernetes.io/name: webspaced
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-webspaced
      containers:
        - name: webspaced
          image: "ghcr.io/netsoc/webspaced:0.5.1"
          imagePullPolicy: IfNotPresent
          env:
            - name: WSD_HTTP_LISTEN_ADDRESS
              value: ':80'
            - name: WSD_TRAEFIK_PROVIDER
              value: kubernetes
            - name: WSD_TRAEFIK_KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: WSD_TRAEFIK_WEBSPACED_URL
              value: http://release-name-webspaced.default
            - name: WSD_WEBSPACES_PORTS_KUBERNETES_SERVICE
              value: release-name-webspaced-forwarding
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          startupProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 10
            initialDelaySeconds: 5
            periodSeconds: 3
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: http
            periodSeconds: 5
            timeoutSeconds: 5
          resources:
            {}
          volumeMounts:
            - name: config
              mountPath: /run/config
            - name: secrets
              mountPath: /run/secrets/webspaced
        - name: kubelan
          image: 'ghcr.io/devplayer0/kubelan:0.2.3'
          imagePullPolicy: IfNotPresent
          env:
            - name: KL_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: KL_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace

            - name: IFACE_IP
              value: '172.24.254.2/16'
            - name: KL_HOOKS_UP
              value: 'sh,-c,ip addr add $IFACE_IP dev $IFACE'
          ports:
            - name: http
              containerPort: 8181
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            periodSeconds: 5
          securityContext:
            capabilities:
              add: [NET_ADMIN]
          volumeMounts:
            - name: kubelan-config
              mountPath: /run/config
      terminationGracePeriodSeconds: 30
      volumes:
        - name: config
          configMap:
            name: release-name-webspaced
        - name: secrets
          secret:
            secretName: release-name-webspaced
        - name: kubelan-config
          configMap:
            name: release-name-webspaced-kubelan
