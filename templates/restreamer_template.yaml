---
# Source: restreamer/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-restreamer
  labels:
    helm.sh/chart: restreamer-1.1.0
    app.kubernetes.io/name: restreamer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.6.4"
    app.kubernetes.io/managed-by: Helm
---
# Source: restreamer/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-restreamer
  labels:
    helm.sh/chart: restreamer-1.1.0
    app.kubernetes.io/name: restreamer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.6.4"
    app.kubernetes.io/managed-by: Helm
stringData:
  RS_PASSWORD: "datarhei"
  RS_USERNAME: "admin"
---
# Source: restreamer/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-restreamer
  labels:
    helm.sh/chart: restreamer-1.1.0
    app.kubernetes.io/name: restreamer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.6.4"
    app.kubernetes.io/managed-by: Helm
data:
  RS_AUDIO: "auto"
  RS_LOGLEVEL: "3"
  RS_NODEJS_ENV: "prod"
  RS_NODEJS_PORT: "3000"
  RS_SNAPSHOT_INTERVAL: "1m"
  RS_TIMEZONE: "Europe/Berlin"
---
# Source: restreamer/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-restreamer
  labels:
    helm.sh/chart: restreamer-1.1.0
    app.kubernetes.io/name: restreamer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: restreamer
    app.kubernetes.io/instance: release-name
---
# Source: restreamer/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-restreamer
  labels:
    helm.sh/chart: restreamer-1.1.0
    app.kubernetes.io/name: restreamer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  serviceName: release-name-restreamer
  selector:
    matchLabels:
      app.kubernetes.io/name: restreamer
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/configmap: a929addb36f7b936657618830ee80abc8f8e793d8861001ddb511e4d0d9719ee
        checksum/secret: 8fd1a5ea7e33c683faadf643b9a014bcd5e4d732149480132bb899dadb39b022
      labels:
        app.kubernetes.io/name: restreamer
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-restreamer
      securityContext:
        {}
      containers:
        - name: restreamer
          securityContext:
            {}
          image: "datarhei/restreamer:0.6.4"
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: release-name-restreamer
            - secretRef:
                name: release-name-restreamer
          volumeMounts:
            - mountPath: /restreamer/db
              name: db
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: rtmp
              containerPort: 1935
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
      volumes:
        - name: db
          emptyDir: {}
  volumeClaimTemplates:
---
# Source: restreamer/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-restreamer-test-connection"
  labels:
    helm.sh/chart: restreamer-1.1.0
    app.kubernetes.io/name: restreamer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.6.4"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-restreamer:80']
  restartPolicy: Never
