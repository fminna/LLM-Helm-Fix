---
# Source: web-postgresql-kompose/templates/web-variables-env-configmap.yaml
apiVersion: v1
data:
  APP_DB_ENGINE: postgresql
  APP_DB_NAME: postgres
  APP_DB_PASS: postgres
  APP_DB_PORT: "5432"
  APP_DB_SERVICE_NAME: postgresql
  APP_DB_USER: postgres
  APP_DEBUG: "true"
  APP_SECRET_KEY: \xd2\xb79\xa9s\x81\x01\xe9\xa7g\xe9I\xda2\xb7\xbbu\x17\xe6\x82\xd1\xbcs\x99
  APPLICATION_DOMAIN: flask-ex
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: web-web-variables-env
  name: web-variables-env
---
# Source: web-postgresql-kompose/templates/postgresql-claim0-persistentvolumeclaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: postgresql-claim0
  name: postgresql-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
# Source: web-postgresql-kompose/templates/postgresql-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -c -o web-postgresql-kompose
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: postgresql
  name: postgresql
spec:
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
  selector:
    io.kompose.service: postgresql
status:
  loadBalancer: {}
---
# Source: web-postgresql-kompose/templates/web-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -c -o web-postgresql-kompose
    kompose.service.expose: flask-ex
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: web
  name: web
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
  selector:
    io.kompose.service: web
status:
  loadBalancer: {}
---
# Source: web-postgresql-kompose/templates/postgresql-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -c -o web-postgresql-kompose
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: postgresql
  name: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgresql
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -c -o web-postgresql-kompose
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: postgresql
    spec:
      containers:
        - env:
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_USER
              value: postgres
          image: postgres:15-alpine
          name: postgresql
          ports:
            - containerPort: 5432
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql
              name: postgresql-claim0
      restartPolicy: Always
      volumes:
        - name: postgresql-claim0
          persistentVolumeClaim:
            claimName: postgresql-claim0
status: {}
---
# Source: web-postgresql-kompose/templates/web-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -c -o web-postgresql-kompose
    kompose.service.expose: flask-ex
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: web
  name: web
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: web
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -c -o web-postgresql-kompose
        kompose.service.expose: flask-ex
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: web
    spec:
      containers:
        - env:
            - name: APPLICATION_DOMAIN
              valueFrom:
                configMapKeyRef:
                  key: APPLICATION_DOMAIN
                  name: web-variables-env
            - name: APP_DB_ENGINE
              valueFrom:
                configMapKeyRef:
                  key: APP_DB_ENGINE
                  name: web-variables-env
            - name: APP_DB_NAME
              valueFrom:
                configMapKeyRef:
                  key: APP_DB_NAME
                  name: web-variables-env
            - name: APP_DB_PASS
              valueFrom:
                configMapKeyRef:
                  key: APP_DB_PASS
                  name: web-variables-env
            - name: APP_DB_PORT
              valueFrom:
                configMapKeyRef:
                  key: APP_DB_PORT
                  name: web-variables-env
            - name: APP_DB_SERVICE_NAME
              valueFrom:
                configMapKeyRef:
                  key: APP_DB_SERVICE_NAME
                  name: web-variables-env
            - name: APP_DB_USER
              valueFrom:
                configMapKeyRef:
                  key: APP_DB_USER
                  name: web-variables-env
            - name: APP_DEBUG
              valueFrom:
                configMapKeyRef:
                  key: APP_DEBUG
                  name: web-variables-env
            - name: APP_SECRET_KEY
              valueFrom:
                configMapKeyRef:
                  key: APP_SECRET_KEY
                  name: web-variables-env
            - name: FLASK_APP
              value: /opt/app-root/src/wsgi.py
          image: mikespub/sclorg-django-ex_web
          name: web
          ports:
            - containerPort: 8080
          resources: {}
          workingDir: /opt/app-root/src
      restartPolicy: Always
status: {}
---
# Source: web-postgresql-kompose/templates/web-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kompose.cmd: kompose convert -c -o web-postgresql-kompose
    kompose.service.expose: flask-ex
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: web
  name: web
spec:
  rules:
    - host: flask-ex
      http:
        paths:
          - backend:
              service:
                name: web
                port:
                  number: 8080
            path: /
            pathType: Prefix
status:
  loadBalancer: {}
