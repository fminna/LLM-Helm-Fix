---
# Source: kafka-connect-ui/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kafka-connect-ui
  labels:
    helm.sh/chart: kafka-connect-ui-0.5.0
    app.kubernetes.io/name: kafka-connect-ui
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.9.7"
    app.kubernetes.io/managed-by: Helm
---
# Source: kafka-connect-ui/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kafka-connect-ui
  labels:
    helm.sh/chart: kafka-connect-ui-0.5.0
    app.kubernetes.io/name: kafka-connect-ui
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.9.7"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: oauthproxy
      protocol: TCP
      name: oauthproxy
  selector:
    app.kubernetes.io/name: kafka-connect-ui
    app.kubernetes.io/instance: release-name
---
# Source: kafka-connect-ui/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kafka-connect-ui
  labels:
    helm.sh/chart: kafka-connect-ui-0.5.0
    app.kubernetes.io/name: kafka-connect-ui
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.9.7"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kafka-connect-ui
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kafka-connect-ui
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-kafka-connect-ui
      securityContext:
        {}
      containers:
        - name: kafka-connect-ui-oauth2-proxy
          image: "quay.io/oauth2-proxy/oauth2-proxy:v7.3.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: OAUTH2_PROXY_HTTP_ADDRESS
              value: "0.0.0.0:3000"
            - name: OAUTH2_PROXY_UPSTREAMS
              value: "http://localhost:8000"              
            - name: OAUTH2_PROXY_REVERSE_PROXY
              value: "true"
            - name: OAUTH2_PROXY_COOKIE_SECURE
              value: "false"
            - name: OAUTH2_PROXY_PROVIDER
              value: keycloak-oidc
            - name: OAUTH2_PROXY_OIDC_ISSUER_URL
              value: https://fqdn/auth/realms/realm
            - name: OAUTH2_PROXY_CLIENT_ID
              value: some-id
            - name: OAUTH2_PROXY_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: release-name-kafka-connect-ui-oauth
                  key: secret
            - name: OAUTH2_PROXY_REDIRECT_URL
              value: http://chart-example.local/oauth2/callback
            - name: OAUTH2_PROXY_EMAIL_DOMAINS
              value: "*"
            - name: OAUTH2_PROXY_INSECURE_OIDC_ALLOW_UNVERIFIED_EMAIL
              value: "true"
            - name: OAUTH2_PROXY_COOKIE_SECRET
              value: 
            - name: OAUTH2_PROXY_ALLOWED_ROLES
              value: role1
            - name: OAUTH2_PROXY_ALLOWED_ROLES
              value: role2              
          ports:
            - name: oauthproxy
              containerPort: 3000
              protocol: TCP
          resources:
            {}    
        - name: kafka-connect-ui
          securityContext:
            {}
          image: "landoop/kafka-connect-ui:0.9.7"
          imagePullPolicy: IfNotPresent
          env:
            - name: CONNECT_URL
              value: "http://localhost:8083;dev,http://anotherhost:8083;prod"
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: kafka-connect-ui/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-kafka-connect-ui
  labels:
    helm.sh/chart: kafka-connect-ui-0.5.0
    app.kubernetes.io/name: kafka-connect-ui
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.9.7"
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
    - host: "chart-example.local"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: release-name-kafka-connect-ui
                port:
                  number: 3000
