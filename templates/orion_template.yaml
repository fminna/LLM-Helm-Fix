---
# Source: orion/templates/service-mongo.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-orion-mongo
  labels:
    app.kubernetes.io/name: orion-mongo
    helm.sh/chart: orion-1.3.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 27017
      targetPort: 27017
      protocol: TCP
      name: mongo
  selector:
    app.kubernetes.io/name: orion-mongo
    app.kubernetes.io/instance: release-name
---
# Source: orion/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-orion
  labels:
    
    app.kubernetes.io/name: orion
    helm.sh/chart: orion-1.3.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 1026
      targetPort: 1026
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: orion
    app.kubernetes.io/instance: release-name
---
# Source: orion/templates/deployment-mongo.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-orion-mongo
  labels:
    app.kubernetes.io/name: orion-mongo
    helm.sh/chart: orion-1.3.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: orion-mongo
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: orion-mongo
        helm.sh/chart: orion-1.3.0
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
      
    spec:
      containers:
        - name: mongo-db
          imagePullPolicy: IfNotPresent
          image: "quay.io/opencloudio/ibm-mongodb:4.0.24"
          securityContext:
            runAsUser: 999
          ports:
            - name: mongo
              containerPort: 27017
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - bash
                - -ec
                - |
                  mongo --eval 'db.runCommand("ping").ok' 127.0.0.1:27017/test && echo 0 || echo 1
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            exec:
              command:
                - bash
                - -ec
                - |
                  mongo --eval 'db.runCommand("ping").ok' 127.0.0.1:27017/test && echo 0 || echo 1
            initialDelaySeconds: 5
            periodSeconds: 5
---
# Source: orion/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-orion
  labels:
    
    app.kubernetes.io/name: orion
    helm.sh/chart: orion-1.3.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: orion
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        
        app.kubernetes.io/name: orion
        helm.sh/chart: orion-1.3.0
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.0.1"
        app.kubernetes.io/managed-by: Helm
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8000'
    spec: 
      serviceAccountName: default
      containers:
        - name: orion
          imagePullPolicy: IfNotPresent
          image: "quay.io/fiware/orion-ld:1.1.0"
          
          # special handling for the health check of telefonica/orion
          
          ports:
            - name: http
              containerPort: 1026
              protocol: TCP
            - name: metrics
              containerPort: 8000
              protocol: TCP
          
          # special handling for the health check of telefonica/orion
          
          env:
            # general
            - name: ORIONLD_PORT
              value: "1026"
            - name: ORIONLD_SOCKET_SERVICE
              value: "TRUE"
            - name: ORIONLD_SOCKET_SERVICE_PORT
              value: "1027"
            - name: ORIONLD_DISABLE_FILE_LOG
              value: "TRUE"
            - name: ORIONLD_CACHED_CONTEXT_DIRECTORY
              value: /opt/orion/ldcontexts

            # db
            - name: ORIONLD_MONGO_HOST
              value: release-name-orion-mongo:27017
            - name: ORIONLD_MONGO_DB
              value: orion
            

            # tenancy
            
            # metrics
            
            
            - name: ORIONLD_DISABLE_METRICS
              value: "TRUE"
            
            
            - name: ORIONLD_STAT_COUNTERS
              value: "FALSE"
            
            
            - name: ORIONLD_STAT_SEM_WAIT
              value: "FALSE"
            
            - name: ORIONLD_STAT_TIMING
              value: "FALSE"
            
            - name: ORIONLD_STAT_NOTIF_QUEUE
              value: "FALSE"

            # logging
            - name: ORIONLD_LOG_LEVEL
              value: WARN

            ##TROE
            
            
            - name: ORIONLD_TROE
              value: "FALSE"
            - name: ORIONLD_TROE_USER
              value: user
            
            
            - name: ORIONLD_TROE_PWD
              value: password
            
            
            - name: ORIONLD_TROE_HOST
              value: postgres
            
            
            - name: ORIONLD_TROE_PORT
              value: "5432"
            
            
          resources:
            null
---
# Source: orion/templates/test/orion-test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-orion-test"
  labels:
    
    app.kubernetes.io/name: orion
    helm.sh/chart: orion-1.3.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: quay.io/opencloudio/curl:4.2.0-build.8
      args: [ 'release-name-orion.default:1026/version' ]
  restartPolicy: Never
