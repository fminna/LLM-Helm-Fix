---
# Source: signalling-server/templates/rtc-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
  labels:
    service: yjs-rtc
  name: yjs-rtc
spec:
  ports:
    - name: "yjs-rtc-server"
      port: 4444
      targetPort: 4444
  selector:
    service: yjs-rtc
status:
  loadBalancer: {}
---
# Source: signalling-server/templates/rtc-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: yjs-rtc
  name: yjs-rtc
spec:
  replicas: 1
  selector:
    matchLabels:
      service: yjs-rtc
  strategy: {}
  template:
    metadata:
      labels:
        service: yjs-rtc
    spec:
      containers:
        - image: dive.cs.cityu.edu.hk/yjs-rtc
          name: yjs-rtc
          ports:
            - containerPort: 4444
          resources: {}
      restartPolicy: Always
status: {}
---
# Source: signalling-server/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: yjs-rtc-server
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/proxy-body-size: 100M
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/whitelist-source-range: 127.0.0.1, 10.0.0.0/24
spec:
  ingressClassName: public
  rules:
    - http:
        paths:
          - path: /rtc12(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: yjs-rtc
                port:
                  number: 4444
      host: deep.cs.cityu.edu.hk
  tls:
  - hosts:
    - deep.cs.cityu.edu.hk
    secretName: myingress-cert
status:
  loadBalancer:
    ingress:
      - ip: 127.0.0.1
