---
# Source: datarepo-api/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-datarepo-api
  namespace: default
  labels:
    helm.sh/chart: datarepo-api-0.0.670
    app.kubernetes.io/name: datarepo-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: terra
    app.kubernetes.io/version: "2.63.0"
    app.kubernetes.io/managed-by: Helm
data:
  datarepo-password: ""
  stairway-password: ""
  credential-file-json: ""
  application-secret: ""
  synapse-user: ""
  synapse-password: ""
  synapse-encryptionKey: ""
  rbs-credential-file-json: ""
---
# Source: datarepo-api/templates/api-service.yaml
kind: Service
apiVersion: v1
metadata:
  name: default
  namespace: default
  labels:
    helm.sh/chart: datarepo-api-0.0.670
    app.kubernetes.io/name: datarepo-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: terra
    app.kubernetes.io/version: "2.63.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    component: release-name-datarepo-api
  ports:
  - protocol: TCP
    name: http
    port: 8080
    targetPort: 8080
---
# Source: datarepo-api/templates/api-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-datarepo-api
  labels:
    helm.sh/chart: datarepo-api-0.0.670
    app.kubernetes.io/name: datarepo-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: terra
    app.kubernetes.io/version: "2.63.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      component: release-name-datarepo-api
  template:
    metadata:
      labels:
        helm.sh/chart: datarepo-api-0.0.670
        app.kubernetes.io/name: datarepo-api
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: api
        app.kubernetes.io/part-of: terra
        app.kubernetes.io/version: "2.63.0"
        app.kubernetes.io/managed-by: Helm
        app: release-name-datarepo-api
        component: release-name-datarepo-api
##  dynamically populates environment annotations
      annotations:
        
    spec:
      serviceAccountName: default
      securityContext:
        runAsUser: 101
        runAsGroup: 101
        fsGroup: 101
        runAsNonRoot: true
      volumes:
      terminationGracePeriodSeconds: 60
      containers:
      - name: release-name-datarepo-api
        image: gcr.io/broad-jade-dev/jade-data-repo:2.63.0
        startupProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 60
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 2
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 2
        lifecycle:
          preStop:
            httpGet:
              port: 8080
              path: /shutdown
        volumeMounts:
        ports:
        - containerPort: 8080
##  dynamically populates environment variables
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /var/secrets/google/sa-key.json
        - name: RBS_CLIENT_CREDENTIAL_FILE_PATH
          value: /var/secrets/rbs/sa-key.json
# Supply the pod name: used to identify Stairway instances
        - name: DATAREPO_PODNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: TERRA_COMMON_KUBERNETES_PODNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
# Share the timeout value between Kubernetes and Datarepo
        - name: DATAREPO_SHUTDOWNTIMEOUTSECONDS
          value: "60"
# Tell Datarepo is it running in kubernetes
        - name: DATAREPO_INKUBERNETES
          value: "true"
        - name: TERRA_COMMON_KUBERNETES_INKUBERNETES
          value: "true"
        - name: TERRA_COMMON_KUBERNETES_POD_NAME_FILTER
          value: "datarepo-api"
        - name: TERRA_COMMON_TRACING_STACKDRIVER_EXPORT_ENABLED
          value: "false"
        - name: OPENCENCUS_SPRING_ENABLED
          value: "false"
        resources:
          limits:
            memory: 2560Mi
          requests:
            memory: 1536Mi
