---
# Source: config-syncer/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-config-syncer
  namespace: default
  labels:
    helm.sh/chart: config-syncer-v0.15.0
    app.kubernetes.io/name: config-syncer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.15.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: config-syncer/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-config-syncer
  namespace: default
  labels:
    helm.sh/chart: config-syncer-v0.15.0
    app.kubernetes.io/name: config-syncer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.15.0"
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: config-syncer/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-config-syncer
  labels:
    helm.sh/chart: config-syncer-v0.15.0
    app.kubernetes.io/name: config-syncer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.15.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: [""]
  resources:
  - configmaps
  - secrets
  verbs: ["get", "create", "patch", "delete", "list", "watch"]
- apiGroups: [""]
  resources:
  - namespaces
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - nodes
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - events
  verbs: ["create"]
- apiGroups: ["flowcontrol.apiserver.k8s.io"]
  resources:
  - flowschemas
  - prioritylevelconfigurations
  verbs: ["get", "list", "watch"]
---
# Source: config-syncer/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-config-syncer
  labels:
    helm.sh/chart: config-syncer-v0.15.0
    app.kubernetes.io/name: config-syncer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.15.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-config-syncer
subjects:
- kind: ServiceAccount
  name: release-name-config-syncer
  namespace: default
---
# Source: config-syncer/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-config-syncer
  namespace: default
  labels:
    helm.sh/chart: config-syncer-v0.15.0
    app.kubernetes.io/name: config-syncer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.15.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  # Port used to expose admission webhook apiserver
  - name: api
    port: 443
    targetPort: 8443
  selector:
    app.kubernetes.io/name: config-syncer
    app.kubernetes.io/instance: release-name
---
# Source: config-syncer/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-config-syncer
  namespace: default
  labels:
    helm.sh/chart: config-syncer-v0.15.0
    app.kubernetes.io/name: config-syncer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.15.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: config-syncer
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: config-syncer
        app.kubernetes.io/instance: release-name
      annotations:
    spec:
      serviceAccountName: release-name-config-syncer
      containers:
      - name: app
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        image: ghcr.io/appscode/config-syncer:v0.15.0
        imagePullPolicy: IfNotPresent
        args:
          - run
          - --cluster-name=unicorn
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          {}
        volumeMounts:
        - name: config
          mountPath: /srv/config-syncer
        - name: scratch
          mountPath: /tmp
      volumes:
      - name: config
        secret:
          secretName: release-name-config-syncer
      - name: scratch
        emptyDir: {}
      securityContext:
        fsGroup: 65534
---
# Source: config-syncer/templates/license.yaml
# if license file is provided, then create a secret for license
