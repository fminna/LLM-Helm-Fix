---
# Source: lightstep/templates/configmap-statsd-mapping.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-lightstep-statsd-mapping
  labels:
    helm.sh/chart: lightstep-1.2.2
    app.kubernetes.io/name: lightstep
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2021-01-26_23-02-36Z"
    app.kubernetes.io/managed-by: Helm
data:
  config: |
    mappings:
      - match: "lightstep.prod.us-west-1.client_via_canary.spans.dropped.*"
        name: "lightstep_client_spans"
        match_metric_type: counter
        labels:
          prefix: "lightstep.prod.us-west-1"
          client_prefix: "client_via_canary"
          lightstep_project: "$1"
          action: "dropped"
      - match: "lightstep.prod.us-west-1.satellite-canary.access_tokens.invalid.*"
        name: "lightstep_access_token_invalid"
        match_metric_type: counter
        labels:
          prefix: "lightstep.prod.us-west-1"
          satellite_prefix: "satellite-canary"
          lightstep_project: "$1"
      - match: "lightstep.prod.us-west-1.satellite-canary.bytes.received.*"
        name: "lightstep_bytes_received"
        match_metric_type: counter
        labels:
          prefix: "lightstep.prod.us-west-1"
          satellite_prefix: "satellite-canary"
          protocol: "$1"
      - match: "lightstep.prod.us-west-1.satellite-canary.spans.*.*"
        name: "lightstep_spans"
        match_metric_type: counter
        labels:
          prefix: "lightstep.prod.us-west-1"
          satellite_prefix: "satellite-canary"
          action: "$1"
          lightstep_project: "$2"
      - match: "lightstep.prod.us-west-1.satellite-canary.index.queue.length.*"
        name: "lightstep_index_queue_${3}"
        match_metric_type: gauge
        labels:
          prefix: "lightstep.prod.us-west-1"
          satellite_prefix: "satellite-canary"
          lightstep_project: "$1"
      - match: "lightstep.prod.us-west-1.satellite-canary.current.recall.seconds.*"
        name: "lightstep_current_recall_seconds"
        match_metric_type: gauge
        labels:
          prefix: "lightstep.prod.us-west-1"
          satellite_prefix: "satellite-canary"
          lightstep_project: "$1"
---
# Source: lightstep/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-lightstep
  labels:
    helm.sh/chart: lightstep-1.2.2
    app.kubernetes.io/name: lightstep
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2021-01-26_23-02-36Z"
    app.kubernetes.io/managed-by: Helm
spec:

  type: ClusterIP

  ports:
    - name: http
      port: 8181
      targetPort: 8181
    - name: grpc-insecure
      port: 8184
      targetPort: 8184
  selector:
    app.kubernetes.io/name: lightstep
    app.kubernetes.io/instance: release-name
---
# Source: lightstep/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-lightstep
  labels:
    helm.sh/chart: lightstep-1.2.2
    app.kubernetes.io/name: lightstep
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2021-01-26_23-02-36Z"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: lightstep
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: lightstep
        app.kubernetes.io/instance: release-name
      annotations:
        prometheus.io/port: "9102"
        prometheus.io/scrape: "true"

    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: lightstep-satellite
          image: "lightstep/collector:2021-01-26_23-02-36Z"
          imagePullPolicy: IfNotPresent
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          env:
            - name: COLLECTOR_POOL
              value: "my-satellite-pool"
            - name: GUID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: COLLECTOR_REPORTER_BYTES_PER_PROJECT
              value: "1000000000"
            - name: COLLECTOR_DIAGNOSTIC_PORT
              value: "8000"
            - name: COLLECTOR_ADMIN_PLAIN_PORT
              value: "8180"
            - name: COLLECTOR_ADMIN_SECURE_PORT
              value: "9090"
            - name: COLLECTOR_HTTP_PLAIN_PORT
              value: "8181"
            - name: COLLECTOR_HTTP_SECURE_PORT
              value: "9191"
            - name: COLLECTOR_GRPC_PLAIN_PORT
              value: "8184"
            - name: COLLECTOR_GRPC_SECURE_PORT
              value: "9292"
            - name: COLLECTOR_PLAIN_PORT
              value: "8383"
            - name: COLLECTOR_SECURE_PORT
              value: "9393"
            
          ports:
          - containerPort: 8000
            name: diagnostics
            protocol: TCP
          - containerPort: 8180
            name: admin
            protocol: TCP
          - containerPort: 9090
            name: admin-secure
            protocol: TCP
          - containerPort: 8181
            name: http
            protocol: TCP
          - containerPort: 9191
            name: http-secure
            protocol: TCP
          - containerPort: 8184
            name: grpc-insecure
            protocol: TCP
          - containerPort: 9292
            name: grpc-secure
            protocol: TCP
          - containerPort: 8383
            name: plain-port
            protocol: TCP
          - containerPort: 9393
            name: plain-secure
            protocol: TCP
          resources:
            limits:
              cpu: 2
              memory: 16Gi
            requests:
              cpu: 2
              memory: 16Gi
          readinessProbe:
              failureThreshold: 10
              httpGet:
                path: /_ready
                port: admin
                scheme: HTTP
              timeoutSeconds: 15
              initialDelaySeconds: 5
              periodSeconds: 20
              successThreshold: 1
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /_live
              port: admin
              scheme: HTTP
            timeoutSeconds: 15
            initialDelaySeconds: 60
            periodSeconds: 20
            successThreshold: 1
---
# Source: lightstep/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-lightstep-test-connection"
  labels:
    helm.sh/chart: lightstep-1.2.2
    app.kubernetes.io/name: lightstep
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2021-01-26_23-02-36Z"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-lightstep:']
  restartPolicy: Never
