---
# Source: kspan/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kspan
  labels:
    helm.sh/chart: kspan-0.2.4
    app.kubernetes.io/name: kspan
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: kspan/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-kspan
  labels:
    helm.sh/chart: kspan-0.2.4
    app.kubernetes.io/name: kspan
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - endpoints
      - events
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
      - extensions
    resources:
      - deployments
      - replicasets
      - statefulsets
      - daemonsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - get
      - list
      - watch
---
# Source: kspan/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kspan
  labels:
    helm.sh/chart: kspan-0.2.4
    app.kubernetes.io/name: kspan
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-kspan
subjects:
  - kind: ServiceAccount
    name: release-name-kspan
    namespace: default
---
# Source: kspan/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kspan
  labels:
    helm.sh/chart: kspan-0.2.4
    app.kubernetes.io/name: kspan
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kspan
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kspan
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-kspan
      securityContext:
        {}
      containers:
        - name: kspan
          securityContext:
            {}
          image: "ghcr.io/honeycombio/kspan/kspan:0.2"
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 8080
            name: metrics
          resources:
            {}
