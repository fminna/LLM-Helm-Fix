---
# Source: kube-gcp-disks-roomba/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: kube-gcp-disks-roomba
    chart: kube-gcp-disks-roomba-1.17.0
    heritage: Helm
    release: release-name
  name: release-name-kube-gcp-disks-roomba
---
# Source: kube-gcp-disks-roomba/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    app: kube-gcp-disks-roomba
    chart: kube-gcp-disks-roomba-1.17.0
    heritage: Helm
    release: release-name
  name: release-name-kube-gcp-disks-roomba
rules:
- apiGroups: ["*"]
  resources: ["storageclasses", "persistentvolumeclaims", "persistentvolumes"]
  verbs: ["*"]
---
# Source: kube-gcp-disks-roomba/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app: kube-gcp-disks-roomba
    chart: kube-gcp-disks-roomba-1.17.0
    heritage: Helm
    release: release-name
  name: release-name-kube-gcp-disks-roomba
subjects:
  - kind: ServiceAccount
    name: release-name-kube-gcp-disks-roomba
    namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-kube-gcp-disks-roomba
---
# Source: kube-gcp-disks-roomba/templates/cronjob.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: cleanupdisk
  labels:
    heritage: "Helm"
    release: "release-name"
    chart: "kube-gcp-disks-roomba-1.17.0"
spec:
  schedule: 0 10 * * *
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: cleanupdisk
        spec:
          serviceAccountName: release-name-kube-gcp-disks-roomba
          restartPolicy: Never
          containers:
          - image: softonic/kube-gcp-disks-roomba:latest
            name: cleanupdisk
            volumeMounts:
            - name: google-cloud-key
              mountPath: /secrets
            env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /secrets/key.json
          volumes:
            - name: google-cloud-key
              secret:
                secretName: credentials
                items:
                  - key: key.json
                    path: key.json
