---
# Source: template-service/templates/base.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-template-service
  labels:
    helm.sh/chart: template-service-1.2.13
    app.kubernetes.io/part-of: krateo
    app.kubernetes.io/component: service
    app.kubernetes.io/name: template-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.2.13"
    app.kubernetes.io/managed-by: Helm
---
# Source: template-service/templates/crb.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-template-service-crossplane-rb
  namespace: default
  labels:
    app.kubernetes.io/name: release-name-template-service-crossplane-rb
    app.kubernetes.io/component: control-plane
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    namespace: default
    name: release-name-template-service
---
# Source: template-service/templates/base.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-service
  labels:
    helm.sh/chart: template-service-1.2.13
    app.kubernetes.io/part-of: krateo
    app.kubernetes.io/component: service
    app.kubernetes.io/name: template-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.2.13"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app.kubernetes.io/name: template-service
    app.kubernetes.io/instance: release-name
---
# Source: template-service/templates/base.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  template-service
  namespace: default
  labels:
    helm.sh/chart: template-service-1.2.13
    app.kubernetes.io/part-of: krateo
    app.kubernetes.io/component: service
    app.kubernetes.io/name: template-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.2.13"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: template-service
      app.kubernetes.io/instance: release-name
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        helm.sh/chart: template-service-1.2.13
        app.kubernetes.io/part-of: krateo
        app.kubernetes.io/component: service
        app.kubernetes.io/name: template-service
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.2.13"
        app.kubernetes.io/managed-by: Helm
    spec:
      terminationGracePeriodSeconds: 60
      serviceAccountName: release-name-template-service
      securityContext:
        {}
      containers:
        - name: template-service
          securityContext:
            {}
          image: "ghcr.io/krateoplatformops/template-service:1.2.13"
          imagePullPolicy: IfNotPresent
          volumeMounts:
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 50m
              memory: 128Mi
          envFrom:
            - configMapRef:
                name: krateo-config
            - secretRef:
                name: krateo-secret
          env:
            - name: LOG_LEVEL
              value: info
---
# Source: template-service/templates/base.yaml
---
