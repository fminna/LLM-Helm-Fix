---
# Source: student-producer/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-student-producer-svc
  labels:
    helm.sh/chart: student-producer-2.0.0
    app.kubernetes.io/name: student-producer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: student-producer
    app.kubernetes.io/instance: release-name
  ports:
    - protocol: "TCP"
      name: http
      port: 8080 # The port that the service is running on in the cluster
      targetPort: 8080 # The port exposed by the service
---
# Source: student-producer/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-student-producer
  labels:
    helm.sh/chart: student-producer-2.0.0
    app.kubernetes.io/name: student-producer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: student-producer
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: student-producer
        app.kubernetes.io/instance: release-name
    spec:
      containers:
      - image: aroralalit/student-producer:1.0.0
        imagePullPolicy: IfNotPresent
        name: student-producer
        ports:
        - containerPort: 8080
---
# Source: student-producer/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-student-producer-test-connection"
  labels:
    helm.sh/chart: student-producer-2.0.0
    app.kubernetes.io/name: student-producer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-student-producer:8080']
  restartPolicy: Never
