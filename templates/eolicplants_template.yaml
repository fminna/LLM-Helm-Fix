---
# Source: eolicplants/templates/global-np.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-release-name
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
---
# Source: eolicplants/templates/global-np.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: dns-egress-release-name
spec:
  podSelector:
    matchLabels:
      dns-policy: enabled
  egress:
    - ports:
        - port: 53
          protocol: TCP
        - port: 53
          protocol: UDP
---
# Source: eolicplants/templates/mongodb.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mongodb-from-topo-release-name
spec:
  podSelector:
    matchLabels:
      app: mongodb-release-name
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: toposervice-release-name
      ports:
        - port: 27017
          protocol: TCP
---
# Source: eolicplants/templates/mysql.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mysql-from-server-release-name
spec:
  podSelector:
    matchLabels:
      app: mysql-release-name
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: server-release-name
      ports:
        - port: 3306
          protocol: TCP
---
# Source: eolicplants/templates/planner.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: planner-to-rabbit-weather-topo-release-name
spec:
  podSelector:
    matchLabels:
      app: planner-release-name
  egress:
    - to:
        - podSelector:
            matchLabels:
              app: rabbitmq-release-name
      ports:
        - port: 5672
          protocol: TCP
    - to:
        - podSelector:
            matchLabels:
              app: weatherservice-release-name
      ports:
        - port: 9090
          protocol: TCP
    - to:
        - podSelector:
            matchLabels:
              app: toposervice-release-name
      ports:
        - port: 8080
          protocol: TCP
---
# Source: eolicplants/templates/rabbitmq.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: rabbitmq-from-planner-server-release-name
spec:
  podSelector:
    matchLabels:
      app: rabbitmq-release-name
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: planner-release-name
        - podSelector:
            matchLabels:
              app: server-release-name
      ports:
        - port: 5672
          protocol: TCP
---
# Source: eolicplants/templates/server.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: server-to-mysql-rabbit-release-name
spec:
  podSelector:
    matchLabels:
      app: server-release-name
  egress:
    - to:
        - podSelector:
            matchLabels:
              app: mysql-release-name
      ports:
        - port: 3306
          protocol: TCP
    - to:
        - podSelector:
            matchLabels:
              app: rabbitmq-release-name
      ports:
        - port: 5672
          protocol: TCP
---
# Source: eolicplants/templates/server.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: server-from-ingress-release-name
spec:
  podSelector:
    matchLabels:
      app: server-release-name
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
          podSelector:
            matchLabels:
              app.kubernetes.io/name: ingress-nginx
      ports:
        - protocol: TCP
          port: 3000
---
# Source: eolicplants/templates/toposervice.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: topo-to-mongodb-release-name
spec:
  podSelector:
    matchLabels:
      app: toposervice-release-name
  egress:
    - to:
        - podSelector:
            matchLabels:
              app: mongodb-release-name
      ports:
        - port: 27017
          protocol: TCP
---
# Source: eolicplants/templates/toposervice.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: topo-from-planner-ingress-release-name
spec:
  podSelector:
    matchLabels:
      app: toposervice-release-name
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: planner-release-name
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
          podSelector:
            matchLabels:
              app.kubernetes.io/name: ingress-nginx
      ports:
        - protocol: TCP
          port: 8080
---
# Source: eolicplants/templates/weatherservice.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: weather-from-planner-release-name
spec:
  podSelector:
    matchLabels:
      app: weatherservice-release-name
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: planner-release-name
      ports:
        - port: 9090
          protocol: TCP
---
# Source: eolicplants/templates/mongo-pv.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv-release-name
spec:
  storageClassName: mongodb
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /db/mongo
---
# Source: eolicplants/templates/mysql-pv.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-release-name
spec:
  storageClassName: mysql
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /db/mysql
---
# Source: eolicplants/templates/rabbitmq-pv.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: rabbit-pv-release-name
spec:
  storageClassName: rabbit
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /db/rabbitmq
---
# Source: eolicplants/templates/mongodb.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc-release-name
spec:
  storageClassName: mongodb
  
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: eolicplants/templates/mysql.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc-release-name
spec:
  storageClassName: mysql
  
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: eolicplants/templates/rabbitmq.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rabbit-pvc-release-name
spec:
  storageClassName: rabbit
  
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: eolicplants/templates/mongodb.yaml
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service-release-name
  labels:
    app: mongodb-release-name
spec:
  ports:
    - port: 27017
      targetPort: 27017
      protocol: TCP
      name: mongodb-port-27017
    - port: 27018
      targetPort: 27018
      protocol: TCP
      name: mongodb-port-27018
    - port: 27019
      targetPort: 27019
      protocol: TCP
      name: mongodb-port-27019
  selector:
    app: mongodb-release-name
  type: ClusterIP
---
# Source: eolicplants/templates/mysql.yaml
apiVersion: v1
kind: Service
metadata:
  name: mysql-service-release-name
  labels:
    app: mysql-release-name
spec:
  ports:
    - port: 3306
      targetPort: 3306
      protocol: TCP
      name: mysql-port
  selector:
    app: mysql-release-name
  type: ClusterIP
---
# Source: eolicplants/templates/rabbitmq.yaml
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-service-release-name
  labels:
    app: rabbitmq-release-name
spec:
  ports:
    - port: 5672
      targetPort: 5672
      protocol: TCP
      name: rabbitmq-port-5672
    - port: 15672
      targetPort: 15672
      protocol: TCP
      name: rabbitmq-port-15672
  selector:
    app: rabbitmq-release-name
  type: ClusterIP
---
# Source: eolicplants/templates/server.yaml
apiVersion: v1
kind: Service
metadata:
  name: server-service-release-name
  labels:
    app: server-release-name
spec:
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
      name: server-port
  selector:
    app: server-release-name
  type: NodePort
---
# Source: eolicplants/templates/toposervice.yaml
apiVersion: v1
kind: Service
metadata:
  name: toposervice-service-release-name
  labels:
    app: toposervice-release-name
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: topo-port
  selector:
    app: toposervice-release-name
  type: ClusterIP
---
# Source: eolicplants/templates/weatherservice.yaml
apiVersion: v1
kind: Service
metadata:
  name: weatherservice-service-release-name
  labels:
    app: weatherservice-release-name
spec:
  ports:
    - port: 9090
      targetPort: 9090
      protocol: TCP
      name: weatherservice-port
  selector:
    app: weatherservice-release-name
  type: ClusterIP
---
# Source: eolicplants/templates/mongodb.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deploy-release-name
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: mongodb-release-name
  replicas: 1
  template:
    metadata:
      labels:
        app: mongodb-release-name
    spec:
      containers:
        - name: mongodb-release-name
          image: mongo:4.2.12-bionic
          env:
            - name: MONGO_INITDB_DATABASE
              value: "topoDB"
            - name: MONGO_INITDB_ROOT_USERNAME
              value: "root"
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: "password"
          ports:
            - containerPort: 27017
            - containerPort: 27018
            - containerPort: 27019
          volumeMounts:
            - mountPath: /data/db
              name: datadb
      volumes:
        - name: datadb
          persistentVolumeClaim:
            claimName: mongo-pvc-release-name
---
# Source: eolicplants/templates/mysql.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deploy-release-name
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: mysql-release-name
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql-release-name
    spec:
      containers:
        - name: mysql-release-name
          image: mysql:8.0.22
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "password"
            - name: MYSQL_DATABASE
              value: "eoloplantsDB"
          ports:
            - containerPort: 3306
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: datadb
      volumes:
        - name: datadb
          persistentVolumeClaim:
            claimName: mysql-pvc-release-name
---
# Source: eolicplants/templates/planner.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: planner-deploy-release-name
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: planner-release-name
  replicas: 1
  template:
    metadata:
      labels:
        app: planner-release-name
        dns-policy: enabled
    spec:
      securityContext:
        runAsUser: 1001
      restartPolicy: Always
      containers:
        - name: planner-release-name
          image: oscarsotosanchez/planner:v1.0
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "password"
            - name: MYSQL_DATABASE
              value: "eoloplantsDB"
---
# Source: eolicplants/templates/rabbitmq.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-deploy-release-name
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: rabbitmq-release-name
  replicas: 1
  template:
    metadata:
      labels:
        app: rabbitmq-release-name
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3-management
          env:
            - name: RABBITMQ_DEFAULT_USER
              value: "root"
            - name: RABBITMQ_DEFAULT_PASS
              value: "password"
          ports:
            - containerPort: 5672
            - containerPort: 15672
          volumeMounts:
            - mountPath: /var/lib/rabbitmq/mnesia
              name: datarabbit
      volumes:
        - name: datarabbit
          persistentVolumeClaim:
            claimName: rabbit-pvc-release-name
---
# Source: eolicplants/templates/server.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: server-deploy-release-name
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: server-release-name
  replicas: 1
  template:
    metadata:
      labels:
        app: server-release-name
        dns-policy: enabled
    spec:
      securityContext:
        runAsUser: 1001
      restartPolicy: Always
      containers:
        - name: server-release-name
          image: oscarsotosanchez/server:v1.0
          command: [ "bash" ]
          args:
            - "-c"
            - "./wait-for-it.sh mysql-service-release-name:3306 -t 500 -- ./wait-for-it.sh rabbitmq-service-release-name:5672 -t 500 -- node src/server.js"
          env:
            - name: MYSQL_HOST
              value: "mysql-service"
            - name: MYSQL_DB
              value: "eoloplantsDB"
            - name: MYSQL_USER
              value: "root"
            - name: MYSQL_PASS
              value: "password"
            - name: RABBITMQ_URL
              value: "amqp://root:password@rabbitmq-service"
          ports:
            - containerPort: 3000
---
# Source: eolicplants/templates/toposervice.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: toposervice-deploy-release-name
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: toposervice-release-name
  replicas: 1
  template:
    metadata:
      labels:
        app: toposervice-release-name
        dns-policy: enabled
    spec:
      securityContext:
        runAsUser: 1001
      restartPolicy: Always
      containers:
        - name: toposervice-release-name
          image: oscarsotosanchez/toposervice:v1.0
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "password"
            - name: MYSQL_DATABASE
              value: "eoloplantsDB"
          ports:
            - containerPort: 8080
---
# Source: eolicplants/templates/weatherservice.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: weatherservice-deploy-release-name
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: weatherservice-release-name
  replicas: 1
  template:
    metadata:
      labels:
        app: weatherservice-release-name
    spec:
      securityContext:
        runAsUser: 1001
      restartPolicy: Always
      containers:
        - name: weatherservice-release-name
          image: oscarsotosanchez/weatherservice:v1.0
          env:
            - name: GRPC_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: GRPC_PORT
              value: "9090"
          ports:
            - containerPort: 9090
---
# Source: eolicplants/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: multi-ingress-release-name
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    dev.okteto.com/generate-host: "true"
spec:
  rules:
  - host: mastercloudapps.host
    http:
      paths:
      - path: /(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: server-service
            port:
              name: server-port
      - path: /toposervice/(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: toposervice-service
            port:
              name: topo-port
---
# Source: eolicplants/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-eolicplants-test-connection"
  labels:
    helm.sh/chart: eolicplants-0.1.0
    app.kubernetes.io/name: eolicplants
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-eolicplants:80']
  restartPolicy: Never
