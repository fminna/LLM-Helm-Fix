---
# Source: kafka-connect-wrapper/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kafka-connect-wrapper
  labels:
    helm.sh/chart: kafka-connect-wrapper-0.1.0
    app.kubernetes.io/name: kafka-connect-wrapper
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "6.1.0-0.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: kafka-connect-wrapper/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-connect-wrapper-configmap
data:
  worker.properties: |-
    client.id=release-name-client
    rest.port=80
    group.id=release-name-groupId

    bootstrap.servers= 

    error.tolerance=org.apache.kafka.connect.storage.StringConverter
    topic=demo

    key.converter=org.apache.kafka.connect.storage.StringConverter
    key.converter.schemas.enable=false
    key.converter.schema.registry.url=
    value.converter=org.apache.kafka.connect.storage.StringConverter
    value.converter.schemas.enable=all
    value.converter.schema.registry.url=

    offset.storage.file.filename=/tmp/offset
  source.properties: |-
    name=release-name-source
    key.converter=org.apache.kafka.connect.storage.StringConverter
    key.converter.schemas.enable=false
    key.converter.schema.registry.url=
    value.converter=org.apache.kafka.connect.storage.StringConverter
    value.converter.schemas.enable=false
    value.converter.schema.registry.url=
    file=/opt/out/kafka.in
    connector.class=
    connection.url=
    connection.user=
    connection.password= 

  sink.properties: |-
    name=release-name-sink
    topics=demo
    connection.url=
    connector.class=org.apache.kafka.connect.file.FileStreamSinkConnector
    connection.user=
    connection.password= 
    tasks.max=1
    error.tolerance=all
    key.converter=org.apache.kafka.connect.storage.StringConverter
    key.converter.schemas.enable=false
    key.converter.schema.registry.url=
    value.converter=org.apache.kafka.connect.storage.StringConverter
    value.converter.schemas.enable=false
    value.converter.schema.registry.url=
    file=/opt/out/kafka.out

    auto.create=true
    auto.evolve=true
  log4j: |-
    log4j.rootLogger=INFO, stdout

    log4j.appender.stdout=org.apache.log4j.ConsoleAppender
    log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
    log4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c:%L)%n

    log4j.logger.org.apache.zookeeper=ERROR
    log4j.logger.org.I0Itec.zkclient=ERROR
    log4j.logger.org.reflections=ERROR


    log4j.appender.kafkaConnectRestAppender=org.apache.log4j.DailyRollingFileAppender
    log4j.appender.kafkaConnectRestAppender.DatePattern='.'yyyy-MM-dd-HH
    log4j.appender.kafkaConnectRestAppender.File=/opt/logs/connect-rest.log
    log4j.appender.kafkaConnectRestAppender.layout=org.apache.log4j.PatternLayout
    log4j.appender.kafkaConnectRestAppender.layout.ConversionPattern=[%d] %p %m (%c)%n

    log4j.logger.org.apache.kafka.connect.runtime.rest=INFO, kafkaConnectRestAppender
    log4j.additivity.org.apache.kafka.connect.runtime.rest=false
---
# Source: kafka-connect-wrapper/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kafka-connect-wrapper
  labels:
    helm.sh/chart: kafka-connect-wrapper-0.1.0
    app.kubernetes.io/name: kafka-connect-wrapper
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "6.1.0-0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kafka-connect-wrapper
    app.kubernetes.io/instance: release-name
---
# Source: kafka-connect-wrapper/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kafka-connect-wrapper
  labels:
    helm.sh/chart: kafka-connect-wrapper-0.1.0
    app.kubernetes.io/name: kafka-connect-wrapper
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "6.1.0-0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kafka-connect-wrapper
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kafka-connect-wrapper
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-kafka-connect-wrapper
      securityContext:
        {}
      containers:
        - name: kafka-connect-wrapper
          securityContext:
            {}
          image: "lsmaster/kafka-connect-wrapper:6.1.0-0.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 10
            httpGet:
              path: /
              port: http
          readinessProbe:
            initialDelaySeconds: 20
            periodSeconds: 10
            httpGet:
              path: /
              port: http
          volumeMounts:
            - name: kafka-connect-wrapper-configmap-volume
              mountPath:   /opt/connect-config/worker/worker.properties 
              subPath:  worker.properties
            - name: kafka-connect-wrapper-configmap-volume
              mountPath: /opt/config/connect-log4j.properties
              subPath: log4j
            - name: kafka-connect-wrapper-configmap-volume
              mountPath:   /opt/connect-config/sink/sink.properties
              subPath:  sink.properties
          resources:
            {}
      volumes:
        - name: kafka-connect-wrapper-configmap-volume
          configMap:
            name: kafka-connect-wrapper-configmap
---
# Source: kafka-connect-wrapper/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-kafka-connect-wrapper-test-connection"
  labels:
    helm.sh/chart: kafka-connect-wrapper-0.1.0
    app.kubernetes.io/name: kafka-connect-wrapper
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "6.1.0-0.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-kafka-connect-wrapper:80']
  restartPolicy: Never
