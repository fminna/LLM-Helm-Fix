---
# Source: circleci-runner/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: circleci-runner
automountServiceAccountToken: false
---
# Source: circleci-runner/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: config-values
data:
  resourceClass: dGVzdA==
  runnerToken: dGVzdA==
---
# Source: circleci-runner/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-circleci-runner
  labels:
    helm.sh/chart: circleci-runner-0.1.1
    app.kubernetes.io/name: circleci-runner
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: circleci-runner
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: circleci-runner
        app.kubernetes.io/instance: release-name
    spec:
      securityContext:
        {}
      serviceAccountName: circleci-runner
      automountServiceAccountToken: false
      containers:
        - name: circleci-runner
          securityContext:
            {}
          image: "circleci/runner:launch-agent"
          imagePullPolicy: Always
          env:
            - name: "CIRCLECI_RESOURCE_CLASS"
              valueFrom:
                secretKeyRef:
                  key: resourceClass
                  name: config-values
            - name: "CIRCLECI_API_TOKEN"
              valueFrom:
                secretKeyRef:
                  key: runnerToken
                  name: config-values
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - ps -ef | grep circleci-launch-agent
            initialDelaySeconds: 3
            periodSeconds: 5
          resources:
            {}
          volumeMounts:
            - name: persistent-storage
              mountPath: /data
      volumes:
      - name: persistent-storage
        persistentVolumeClaim:
          claimName: efs-claim
