---
# Source: trino/templates/configmap-catalog.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-trino-catalog
  labels:
    helm.sh/chart: trino-3.2.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "355"
    app.kubernetes.io/managed-by: Helm
data:
  tpch.properties: |
    connector.name=tpch
    tpch.splits-per-node=4
  tpcds.properties: |
    connector.name=tpcds
    tpcds.splits-per-node=4
---
# Source: trino/templates/configmap-coordinator.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-trino-coordinator
  labels:
    helm.sh/chart: trino-3.2.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "355"
    app.kubernetes.io/managed-by: Helm
    component: coordinator
data:
  node.properties: |
    node.environment=production
    node.data-dir=/data/trino
    plugin.dir=/usr/lib/trino/plugin

  jvm.config: |
    -server
    -Xmx8G
    -XX:+UseG1GC
    -XX:G1HeapRegionSize=32M
    -XX:+UseGCOverheadLimit
    -XX:+ExplicitGCInvokesConcurrent
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:+ExitOnOutOfMemoryError
    -Djdk.attach.allowAttachSelf=true
    -XX:-UseBiasedLocking
    -XX:ReservedCodeCacheSize=512M
    -XX:PerMethodRecompilationCutoff=10000
    -XX:PerBytecodeRecompilationCutoff=10000
    -Djdk.nio.maxCachedBufferSize=2000000

  config.properties: |
    coordinator=true
    node-scheduler.include-coordinator=false
    http-server.http.port=8080
    query.max-memory=4GB
    query.max-memory-per-node=1GB
    memory.heap-headroom-per-node=1GB
    discovery-server.enabled=true
    discovery.uri=http://localhost:8080
    http-server.authentication.type=PASSWORD
    http-server.process-forwarded=true
  password-authenticator.properties: |
    password-authenticator.name=file
    file.password-file=/etc/trino/password.db

  password.db: |
    admin:$2y$10$OXYAxpGKCbVOfFoqKVBBK.TUsQkArJA8UaO/eC4ARax7vWiSaSEIS

  log.properties: |
    io.trino=INFO
---
# Source: trino/templates/configmap-hdfs.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-trino-configmapcoresite
  labels:
    helm.sh/chart: trino-3.2.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "355"
    app.kubernetes.io/managed-by: Helm
data:
  core-site.xml: |
    <?xml version="1.0"?>
    <?xml-stylesheet type="text/xsl" href="configuration.xsl"?> 
    <configuration>     
    <property>
        <name>fs.s3a.connection.ssl.enabled</name>
        <value>true</value>
    </property>
    <property>
        <name>fs.s3a.endpoint</name>
        <value></value>
    </property>
    <property>
        <name>fs.s3a.path.style.access</name>
        <value>true</value>
    </property>
    <property>
        <name>fs.s3a.aws.credentials.provider</name>
        <value>org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider</value>
    </property>
    <property>
        <name>trino.s3.credentials-provider</name>
        <value>org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider</value>
    </property>
    <property>
        <name>fs.s3a.access.key</name>
        <value></value>
    </property>
    <property>
        <name>fs.s3a.secret.key</name>
        <value></value>
    </property>
    </configuration>
---
# Source: trino/templates/configmap-worker.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-trino-worker
  labels:
    helm.sh/chart: trino-3.2.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "355"
    app.kubernetes.io/managed-by: Helm
data:
  node.properties: |
    node.environment=production
    node.data-dir=/data/trino
    plugin.dir=/usr/lib/trino/plugin

  jvm.config: |
    -server
    -Xmx8G
    -XX:+UseG1GC
    -XX:G1HeapRegionSize=32M
    -XX:+UseGCOverheadLimit
    -XX:+ExplicitGCInvokesConcurrent
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:+ExitOnOutOfMemoryError
    -Djdk.attach.allowAttachSelf=true
    -XX:-UseBiasedLocking
    -XX:ReservedCodeCacheSize=512M
    -XX:PerMethodRecompilationCutoff=10000
    -XX:PerBytecodeRecompilationCutoff=10000
    -Djdk.nio.maxCachedBufferSize=2000000

  config.properties: |
    coordinator=false
    http-server.http.port=8080
    query.max-memory=4GB
    query.max-memory-per-node=1GB
    memory.heap-headroom-per-node=1GB
    discovery.uri=http://release-name-trino:8080

  log.properties: |
    io.trino=INFO
---
# Source: trino/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-trino
  labels:
    helm.sh/chart: trino-3.2.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "355"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    component: coordinator
---
# Source: trino/templates/deployment-coordinator.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-trino-coordinator
  labels:
    helm.sh/chart: trino-3.2.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "355"
    app.kubernetes.io/managed-by: Helm
    component: coordinator
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: trino
      app.kubernetes.io/instance: release-name
      component: coordinator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: trino
        app.kubernetes.io/instance: release-name
        component: coordinator
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
      volumes:
        - name: config-volume
          configMap:
            name: release-name-trino-coordinator
        - name: catalog-volume
          configMap:
            name: release-name-trino-catalog
        - name: hdfs-config
          configMap: 
            name: release-name-trino-configmapcoresite
      containers:
        - name: trino-coordinator
          securityContext:
            runAsGroup: 1000
            runAsUser: 1000
          image: "inseefrlab/trino:374"
          imagePullPolicy: IfNotPresent
          env:
            []
          volumeMounts:
            - mountPath: /etc/trino
              name: config-volume
            - mountPath: /etc/trino/catalog
              name: catalog-volume
            - mountPath: /etc/trino/hdfs
              name: hdfs-config
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /v1/info
              port: http
          readinessProbe:
            httpGet:
              path: /v1/info
              port: http
          resources:
            {}
---
# Source: trino/templates/deployment-worker.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-trino-worker
  labels:
    helm.sh/chart: trino-3.2.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "355"
    app.kubernetes.io/managed-by: Helm
    component: worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: trino
      app.kubernetes.io/instance: release-name
      component: worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: trino
        app.kubernetes.io/instance: release-name
        component: worker
    spec:
      volumes:
        - name: config-volume
          configMap:
            name: release-name-trino-worker
        - name: catalog-volume
          configMap:
            name: release-name-trino-catalog
        - name: hdfs-config
          configMap:
            name: release-name-trino-configmapcoresite
      containers:
        - name: trino-worker
          securityContext:
            runAsGroup: 1000
            runAsUser: 1000
          image: "inseefrlab/trino:374"
          imagePullPolicy: IfNotPresent
          env:
            []
          volumeMounts:
            - mountPath: /etc/trino
              name: config-volume
            - mountPath: /etc/trino/catalog
              name: catalog-volume
            - mountPath: /etc/trino/hdfs
              name: hdfs-config
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /v1/info
              port: http
          readinessProbe:
            httpGet:
              path: /v1/info
              port: http
          resources:
            {}
---
# Source: trino/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-trino
  labels:
    helm.sh/chart: trino-3.2.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "355"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/whitelist-source-range: 0.0.0.0/0
spec:
  tls:
    - hosts:
        - "alexis-trino.kub.sspcloud.fr"
  rules:
    - host: "alexis-trino.kub.sspcloud.fr"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: release-name-trino
                port: 
                  number: 8080
