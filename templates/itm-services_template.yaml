---
# Source: itm-services/charts/postgresql/templates/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.16.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  namespace: default
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: release-name
  ingress:
    # Allow inbound connections
    - ports:
        - port: 5432
---
# Source: itm-services/charts/postgresql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.16.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  namespace: default
type: Opaque
data:
  postgresql-password: "cGFzc3dvcmQ="
---
# Source: itm-services/templates/itm-analytics-configmap.yaml
# Copyright 2022 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: itm-analytics-cm
  namespace: default
data:
  config.json: |
    {
      "frames_queue_size": 30,
      "tracking": true,
      "detect_collision": true,
      "cameras":[
        {
            "address": "Office Apartments 1",
            "latitude": 12.840609,
            "longitude": 77.651993,
            "analytics": "pedestrian vehicle detection"
        },
        {
            "address": "Office Apartments 2",
            "latitude": 12.840609,
            "longitude": 77.651993,
            "analytics": "pedestrian vehicle detection"
        },
        {
            "address": "Tech Avenue",
            "latitude": 12.845484,
            "longitude": 77.665585,
            "analytics": "pedestrian vehicle bike detection"
        },
        {
            "address": "EC Phase 1",
            "latitude": 12.845017,
            "longitude": 77.659988,
            "analytics": "pedestrian vehicle detection"
        },
        {
            "address": "Company car parking",
            "latitude": 12.839368,
            "longitude": 77.654709,
            "analytics": "pedestrian vehicle bike detection"
        },
        {
            "address": "2nd Cross Road",
            "latitude": 12.840035,
            "longitude": 77.659861,
            "analytics": "pedestrian vehicle bike detection"
        },
        {
            "address": "Bank Circle",
            "latitude": 12.840747,
            "longitude": 77.663845,
            "analytics": "pedestrian vehicle bike detection"
        },
        {
            "address": "Road Intersection",
            "latitude":  12.839091,
            "longitude": 77.659209,
            "analytics": "pedestrian vehicle detection"
        }
      ]
    }
  schema.json: |
    {
    	"definitions": {},
    	"$schema": "http://json-schema.org/draft-07/schema#",
    	"$id": "https://example.com/object1652258901.json",
    	"title": "Root",
    	"type": "object",
    	"required": [
    		"frames_queue_size",
    		"tracking",
    		"detect_collision",
    		"cameras"
    	],
    	"properties": {
    		"frames_queue_size": {
    			"$id": "#root/frames_queue_size",
    			"title": "Frames_queue_size",
    			"type": "integer",
    			"default": 30
    		},
    		"tracking": {
    			"$id": "#root/tracking",
    			"title": "Tracking",
    			"type": "boolean",
    			"default": true
    		},
    		"detect_collision": {
    			"$id": "#root/detect_collision",
    			"title": "Detect_collision",
    			"type": "boolean",
    			"default": true
    		},
    		"cameras": {
    			"$id": "#root/cameras",
    			"title": "Cameras",
    			"type": "array",
    			"default": [],
    			"items":{
    				"$id": "#root/cameras/items",
    				"title": "Items",
    				"type": "object",
    				"required": [
    					"address",
    					"latitude",
    					"longitude",
    					"analytics"
    				],
    				"properties": {
    					"address": {
    						"$id": "#root/cameras/items/address",
    						"title": "Address",
    						"type": "string",
    						"default": "",
    						"examples": [
    							"Office Apartments 1"
    						],
    						"pattern": "^.*$"
    					},
    					"latitude": {
    						"$id": "#root/cameras/items/latitude",
    						"title": "Latitude",
    						"type": "number",
    						"examples": [
    							12.840609
    						],
    						"default": 0.0
    					},
    					"longitude": {
    						"$id": "#root/cameras/items/longitude",
    						"title": "Longitude",
    						"type": "number",
    						"examples": [
    							77.651993
    						],
    						"default": 0.0
    					},
    					"analytics": {
    						"$id": "#root/cameras/items/analytics",
    						"title": "Analytics",
    						"type": "string",
    						"default": "",
    						"examples": [
    							"pedestrian vehicle detection"
    						],
    						"pattern": "^.*$"
    					}
    				}
    			}

    		}
    	}
    }
---
# Source: itm-services/templates/itm-pipeline-server-configmap.yaml
# Copyright 2022 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: itm-ps-config
  namespace: default
data:
  config.json: |
    {
      "encoding_level": 15,
      "pipeline": "object_detection",
      "pipeline_version": "person-vehicle-bike-detection-2000",
      "parameters": {
           "detection-device": "CPU"
       }
    }
  person-vehicle-bike-detection-2000.json: |
    {
      "json_schema_version": "1.0.0",
      "input_preproc": [],
      "output_postproc": [
        {
          "layer_name": "detection_out",
          "labels": [],
          "converter": "tensor_to_bbox_ssd"
        }
      ]
    }
  pipeline.json: |
    {
    	"type": "GStreamer",
    	"template": ["{auto_source} ! decodebin ",
                    " ! videoconvert n-threads=2 ",
    		        " ! videoscale n-threads=2 ",
    		        " ! videorate",
                    " ! video/x-raw,framerate=30/1,format=BGR,width=640,height=320",
    				" ! gvadetect model={models[object_detection][person-vehicle-bike-detection-2000][network]} name=detection ",
    				" ! gvatrack name=track-object tracking-type=short-term-imageless",
    				" ! gvametaconvert name=metaconvert ",
    				" ! videoconvert n-threads=2 ! video/x-raw,format=BGR ",
    				" ! appsink name=destination"
    			],
    	"description": "Car, pedestrian, bike detection",
    	"parameters": {
    		"type": "object",
    		"properties": {
    			"detection-device": {
    				"element": [
    					{
    						"name": "detection",
    						"property": "device"
    					}
    				],
    				"type": "string",
    				"default": "CPU"
    			},
    			"inference-interval": {
    				"element": [
    					{
    						"name": "detection",
    						"property": "inference-interval"
    					}
    				],
    				"type": "integer",
    				"default": 2
    			},
    			"threshold": {
    				"element": "detection",
    				"type": "number"
    			},
    			"detection-model-instance-id": {
    				"element": {
    					"name": "detection",
    					"property": "model-instance-id"
    				},
    				"type": "string",
    				"default": "0"
    			}
    		}
    	}
    }
---
# Source: itm-services/templates/rule-engine-configmap.yaml
# Copyright 2022 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: rule-engine-config
  namespace: default
data:
  config.json: |
    {
        "event_frequency_alert": 10,
        "rules": {
            "collision_event": "event_type == 'collision'",
            "near_miss_event": "event_type == 'near_miss'",
            "overcrowd_cars": "num_cars >= 6",
            "overcrowd_peds": "num_pedestrians >= 7",
            "overcrowd_bikes": "num_bikes >= 5"
        }
    }
  schema.json: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "event_frequency_alert": {
          "type": "integer"
        },
        "rules": {
          "type": "object",
          "properties": {
            "collision_event": {
              "type": "string"
            },
            "near_miss_event": {
              "type": "string"
            },
            "overcrowd_cars": {
              "type": "string"
            },
            "overcrowd_peds": {
              "type": "string"
            },
            "overcrowd_bikes": {
              "type": "string"
            }
          },
          "required": [
            "collision_event",
            "near_miss_event",
            "overcrowd_cars",
            "overcrowd_peds",
            "overcrowd_bikes"
          ]
        }
      },
      "required": [
        "event_frequency_alert",
        "rules"
      ]
    }
---
# Source: itm-services/templates/itm-pipeline-server-pv.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: default
  name: ps-pv-models
  labels:
    type: local
spec:
  storageClassName: 
  claimRef:
    name: ps-pvc-models
    namespace: default
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /var/lib/smartedge/pipeline-server/models/
---
# Source: itm-services/templates/itm-pipeline-server-pv.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: default
  name: ps-pv-res
  labels:
    type: local
spec:
  storageClassName: 
  claimRef:
    name: ps-pvc-res
    namespace: default
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /var/lib/smartedge/pipeline-server/resources/
---
# Source: itm-services/templates/itm-pipeline-server-pv.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: default
  name: ps-pvc-models
spec:
  storageClassName: 
  volumeName: ps-pv-models
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: itm-services/templates/itm-pipeline-server-pv.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: default
  name: ps-pvc-res
spec:
  storageClassName: 
  volumeName: ps-pv-res
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: itm-services/charts/postgresql/templates/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql-headless
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.16.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    # Use this annotation in addition to the actual publishNotReadyAddresses
    # field below because the annotation will stop being respected soon but the
    # field is broken in some versions of Kubernetes:
    # https://github.com/kubernetes/kubernetes/issues/58662
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  namespace: default
spec:
  type: ClusterIP
  clusterIP: None
  # We want all pods in the StatefulSet to have their addresses published for
  # the sake of the other Postgresql pods even before they're ready, since they
  # have to be able to talk to each other in order to become ready.
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
---
# Source: itm-services/charts/postgresql/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.16.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
  namespace: default
spec:
  type: NodePort
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
      nodePort: 32432
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
    role: primary
---
# Source: itm-services/templates/influxdb-service.yaml
# Copyright 2022 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Service
metadata:
  name: influxdb
  namespace: default
  labels:
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/instance: influxdb-abcxzy
    app.kubernetes.io/version: 7.0.0
    app.kubernetes.io/component: database
    app.kubernetes.io/managed-by: helm
spec:
  type: NodePort
  ports:
    - port: 8086
      targetPort: 8086
      nodePort: 30700
  selector:
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/instance: influxdb-abcxzy
---
# Source: itm-services/templates/itm-analytics-service-flask.yaml
# Copyright 2022 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Service
metadata:
  name: "itm-analytics-https"
  namespace: default
spec:
  type: NodePort
  selector:
    app: itm-analytics
  ports:
    - name: https
      port: 8000
      targetPort: 8000
      nodePort: 30303
---
# Source: itm-services/templates/itm-dashboard-service.yaml
# Copyright 2022 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Service
metadata:
  name: itm-dashboard-svc
  namespace: default
spec:
  type: NodePort
  ports:
    - port: 8000
      nodePort: 30300
  selector:
    app: itm-dashboard
---
# Source: itm-services/templates/cloud-connector-deployment.yaml
# Copyright 2022 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cloud-connector
  name: cloud-connector
  namespace: default

spec:
  replicas: 1
  selector:
    matchLabels:
      app: cloud-connector
  template:
    metadata:
      labels:
        app: cloud-connector
        role: itm
    spec:
      containers:
      - name: cloud-connector
        image: intelligent_traffic_management_cloud_connector:2.0
        imagePullPolicy: Always
        resources:
          limits:
            memory: "256Mi"
            cpu: "500m"
        env:
        - name: SUBSCRIBER_TOPIC
          value: event_upload
        - name: MQTT_PORT
          value: "1883"
        - name: MQTT_BROKER
          value: hivemq-mqtt
        - name: AWS_KEY
          value: 
        - name: AWS_SECRET
          value: 
        - name: AWS_BUCKET
          value: 
        - name: AWS_BUCKET_REGION
          value: 
        - name: PY_LOG_LEVEL
          value: "INFO"
        securityContext:
          readOnlyRootFilesystem: true
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
---
# Source: itm-services/templates/influxdb-deployment.yaml
# Copyright 2022 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: influxdb
  namespace: default
  labels:
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/instance: influxdb-abcxzy
    app.kubernetes.io/version: 7.0.0
    app.kubernetes.io/component: database
    app.kubernetes.io/managed-by: helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: influxdb
      app.kubernetes.io/instance: influxdb-abcxzy
  template:
    metadata:
      labels:
        app.kubernetes.io/name: influxdb
        app.kubernetes.io/instance: influxdb-abcxzy
        role: itm
    spec:
      containers:
        - name: itm-services
          image: influxdb:1.8
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: "256Mi"
              cpu: "500m"
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
---
# Source: itm-services/templates/itm-analytics-deployment.yaml
# Copyright 2022 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: itm-analytics
  name: itm-analytics
  namespace: default

spec:
  replicas: 1
  selector:
    matchLabels:
      app: itm-analytics
  template:
    metadata:
      labels:
        app: itm-analytics
        role: itm
    spec:
      containers:
      - name: itm-analytics
        image: intelligent_traffic_management_analytics:2.0
        imagePullPolicy: Always
        volumeMounts:
          - name: cm-cfg
            mountPath: /app/config.json
            subPath: config.json
            readOnly: true
          - name: cm-cfg
            mountPath: /app/schema.json
            subPath: schema.json
            readOnly: true
          - name: tmp
            mountPath: /tmp
        env:
        - name: NAMESPACE
          value: default
        - name: DASHBOARD_NAME
          value: node1
        - name: HOST_IP
          value: 
        - name: LOCAL_HOST
          value: 0.0.0.0
        - name: SERVER_PORT
          value: "30303"
        - name: LOCAL_PORT
          value: "8000"
        - name: SUBSCRIBER_TOPIC
          value: camera1 camera2 camera3 camera4 camera5 camera6 camera7 camera8
        - name: PUBLISHER_TOPIC
          value: camera_analytics1 camera_analytics2 camera_analytics3 camera_analytics4 camera_analytics5 camera_analytics6 camera_analytics7 camera_analytics8
        - name: MQTT_PORT
          value: "1883"
        - name: MQTT_BROKER
          value: hivemq-mqtt
        - name: PSQL_USER
          value: "postgres"
        - name: PSQL_PASS
          value: password
        - name: INFLUX_USER
          value: "admin"
        - name: INFLUX_PASS
          value: "admin"
        - name: PY_LOG_LEVEL
          value: "INFO"
        securityContext:
          readOnlyRootFilesystem: true
      volumes:
      - name: cm-cfg
        configMap:
          name: itm-analytics-cm
      - name: tmp
        hostPath:
          path: /tmp
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
---
# Source: itm-services/templates/itm-dashboard-deployment.yaml
# Copyright 2022 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: itm-dashboard
  labels:
    app: intelligent_traffic_management_dashboard
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: itm-dashboard
  template:
    metadata:
      labels:
        app: itm-dashboard
        role: itm
    spec:
      containers:
      - name: itm-dashboard
        image: intelligent_traffic_management_dashboard:2.0
        imagePullPolicy: Always
        resources:
          limits:
            memory: "256Mi"
            cpu: "500m"
        env:
          - name: LOCAL_HOST
            value: "0.0.0.0"
          - name: HOST_IP
            value: 
          - name: NAMESPACE
            value: default
          - name: SERVER_PORT
            value: "30300"
          - name: LOCAL_PORT
            value: "8000"
          - name: GRAFANA_PASSWORD
            value: 
          - name: GRAFANA_HOST
            value: 
          - name: PSQL_USER
            value: "postgres"
          - name: PSQL_PASS
            value: password
          - name: PY_LOG_LEVEL
            value: "INFO"
        securityContext:
          readOnlyRootFilesystem: true
#      nodeSelector:
#        node-role.kubernetes.io/master: ""
#      tolerations:
#        - key: "node-role.kubernetes.io/master"
#          operator: "Exists"
#          effect: "NoSchedule"
---
# Source: itm-services/templates/itm-pipeline-server.yaml
# Copyright 2022 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dl-streamer-pipeline-server
  name: dl-streamer-pipeline-server
  namespace: default

spec:
  replicas: 1
  selector:
    matchLabels:
      app: dl-streamer-pipeline-server
  template:
    metadata:
      labels:
        app: dl-streamer-pipeline-server
        role: itm
    spec:
      initContainers:
        - name: itm-pipeline-server-init
          image: intelligent_traffic_management_pipeline_server_init:2.0
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /home/pipeline-server/resources/
              name: ps-res
            - mountPath: /home/pipeline-server/models/
              name: ps-models
          securityContext:
            runAsUser: 0
      containers:
      - name: dl-streamer-pipeline-server1
        image: intel/dlstreamer-pipeline-server:2022.1.1-ubuntu20
        imagePullPolicy: 
        command:
          - ./resources/itm.sh
        securityContext:
          privileged: true
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: dev
          mountPath: /dev
        - name: tmp
          mountPath: /tmp
        - name: cm-cfg
          mountPath: /home/pipeline-server/models/object_detection/person-vehicle-bike-detection-2000/person-vehicle-bike-detection-2000.json
          subPath: person-vehicle-bike-detection-2000.json
          readOnly: true
        - name: cm-cfg
          mountPath: /home/pipeline-server/pipelines/object_detection/person-vehicle-bike-detection-2000/pipeline.json
          subPath: pipeline.json
          readOnly: true
        - name: cm-cfg
          mountPath: /app/config.json
          subPath: config.json
          readOnly: true
        - mountPath: /home/pipeline-server/models/
          name: ps-models
        - mountPath: /home/pipeline-server/resources/
          name: ps-res

        env:
        - name: PUBLISHER_TOPIC
          value: camera1
        - name: MQTT_PORT
          value: "1883"
        - name: MQTT_BROKER
          value: hivemq-mqtt
        - name: XDG_RUNTIME_DIR
          value: "/tmp"
        - name: PY_LOG_LEVEL
          value: "INFO"
        - name: SOURCE_TYPE
          value: uri
        - name: SOURCE_URI
          value: file:///home/pipeline-server/resources/video_pedestrians.avi
      - name: dl-streamer-pipeline-server2
        image: intel/dlstreamer-pipeline-server:2022.1.1-ubuntu20
        imagePullPolicy: 
        command:
          - ./resources/itm.sh
        securityContext:
          privileged: true
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: dev
          mountPath: /dev
        - name: tmp
          mountPath: /tmp
        - name: cm-cfg
          mountPath: /home/pipeline-server/models/object_detection/person-vehicle-bike-detection-2000/person-vehicle-bike-detection-2000.json
          subPath: person-vehicle-bike-detection-2000.json
          readOnly: true
        - name: cm-cfg
          mountPath: /home/pipeline-server/pipelines/object_detection/person-vehicle-bike-detection-2000/pipeline.json
          subPath: pipeline.json
          readOnly: true
        - name: cm-cfg
          mountPath: /app/config.json
          subPath: config.json
          readOnly: true
        - mountPath: /home/pipeline-server/models/
          name: ps-models
        - mountPath: /home/pipeline-server/resources/
          name: ps-res

        env:
        - name: PUBLISHER_TOPIC
          value: camera2
        - name: MQTT_PORT
          value: "1883"
        - name: MQTT_BROKER
          value: hivemq-mqtt
        - name: XDG_RUNTIME_DIR
          value: "/tmp"
        - name: PY_LOG_LEVEL
          value: "INFO"
        - name: SOURCE_TYPE
          value: uri
        - name: SOURCE_URI
          value: file:///home/pipeline-server/resources/video_car_crash.avi
      - name: dl-streamer-pipeline-server3
        image: intel/dlstreamer-pipeline-server:2022.1.1-ubuntu20
        imagePullPolicy: 
        command:
          - ./resources/itm.sh
        securityContext:
          privileged: true
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: dev
          mountPath: /dev
        - name: tmp
          mountPath: /tmp
        - name: cm-cfg
          mountPath: /home/pipeline-server/models/object_detection/person-vehicle-bike-detection-2000/person-vehicle-bike-detection-2000.json
          subPath: person-vehicle-bike-detection-2000.json
          readOnly: true
        - name: cm-cfg
          mountPath: /home/pipeline-server/pipelines/object_detection/person-vehicle-bike-detection-2000/pipeline.json
          subPath: pipeline.json
          readOnly: true
        - name: cm-cfg
          mountPath: /app/config.json
          subPath: config.json
          readOnly: true
        - mountPath: /home/pipeline-server/models/
          name: ps-models
        - mountPath: /home/pipeline-server/resources/
          name: ps-res

        env:
        - name: PUBLISHER_TOPIC
          value: camera3
        - name: MQTT_PORT
          value: "1883"
        - name: MQTT_BROKER
          value: hivemq-mqtt
        - name: XDG_RUNTIME_DIR
          value: "/tmp"
        - name: PY_LOG_LEVEL
          value: "INFO"
        - name: SOURCE_TYPE
          value: uri
        - name: SOURCE_URI
          value: file:///home/pipeline-server/resources/video_pedestrians.avi
      - name: dl-streamer-pipeline-server4
        image: intel/dlstreamer-pipeline-server:2022.1.1-ubuntu20
        imagePullPolicy: 
        command:
          - ./resources/itm.sh
        securityContext:
          privileged: true
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: dev
          mountPath: /dev
        - name: tmp
          mountPath: /tmp
        - name: cm-cfg
          mountPath: /home/pipeline-server/models/object_detection/person-vehicle-bike-detection-2000/person-vehicle-bike-detection-2000.json
          subPath: person-vehicle-bike-detection-2000.json
          readOnly: true
        - name: cm-cfg
          mountPath: /home/pipeline-server/pipelines/object_detection/person-vehicle-bike-detection-2000/pipeline.json
          subPath: pipeline.json
          readOnly: true
        - name: cm-cfg
          mountPath: /app/config.json
          subPath: config.json
          readOnly: true
        - mountPath: /home/pipeline-server/models/
          name: ps-models
        - mountPath: /home/pipeline-server/resources/
          name: ps-res

        env:
        - name: PUBLISHER_TOPIC
          value: camera4
        - name: MQTT_PORT
          value: "1883"
        - name: MQTT_BROKER
          value: hivemq-mqtt
        - name: XDG_RUNTIME_DIR
          value: "/tmp"
        - name: PY_LOG_LEVEL
          value: "INFO"
        - name: SOURCE_TYPE
          value: uri
        - name: SOURCE_URI
          value: file:///home/pipeline-server/resources/video_car_crash.avi
      - name: dl-streamer-pipeline-server5
        image: intel/dlstreamer-pipeline-server:2022.1.1-ubuntu20
        imagePullPolicy: 
        command:
          - ./resources/itm.sh
        securityContext:
          privileged: true
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: dev
          mountPath: /dev
        - name: tmp
          mountPath: /tmp
        - name: cm-cfg
          mountPath: /home/pipeline-server/models/object_detection/person-vehicle-bike-detection-2000/person-vehicle-bike-detection-2000.json
          subPath: person-vehicle-bike-detection-2000.json
          readOnly: true
        - name: cm-cfg
          mountPath: /home/pipeline-server/pipelines/object_detection/person-vehicle-bike-detection-2000/pipeline.json
          subPath: pipeline.json
          readOnly: true
        - name: cm-cfg
          mountPath: /app/config.json
          subPath: config.json
          readOnly: true
        - mountPath: /home/pipeline-server/models/
          name: ps-models
        - mountPath: /home/pipeline-server/resources/
          name: ps-res

        env:
        - name: PUBLISHER_TOPIC
          value: camera5
        - name: MQTT_PORT
          value: "1883"
        - name: MQTT_BROKER
          value: hivemq-mqtt
        - name: XDG_RUNTIME_DIR
          value: "/tmp"
        - name: PY_LOG_LEVEL
          value: "INFO"
        - name: SOURCE_TYPE
          value: uri
        - name: SOURCE_URI
          value: file:///home/pipeline-server/resources/video_pedestrians.avi
      - name: dl-streamer-pipeline-server6
        image: intel/dlstreamer-pipeline-server:2022.1.1-ubuntu20
        imagePullPolicy: 
        command:
          - ./resources/itm.sh
        securityContext:
          privileged: true
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: dev
          mountPath: /dev
        - name: tmp
          mountPath: /tmp
        - name: cm-cfg
          mountPath: /home/pipeline-server/models/object_detection/person-vehicle-bike-detection-2000/person-vehicle-bike-detection-2000.json
          subPath: person-vehicle-bike-detection-2000.json
          readOnly: true
        - name: cm-cfg
          mountPath: /home/pipeline-server/pipelines/object_detection/person-vehicle-bike-detection-2000/pipeline.json
          subPath: pipeline.json
          readOnly: true
        - name: cm-cfg
          mountPath: /app/config.json
          subPath: config.json
          readOnly: true
        - mountPath: /home/pipeline-server/models/
          name: ps-models
        - mountPath: /home/pipeline-server/resources/
          name: ps-res

        env:
        - name: PUBLISHER_TOPIC
          value: camera6
        - name: MQTT_PORT
          value: "1883"
        - name: MQTT_BROKER
          value: hivemq-mqtt
        - name: XDG_RUNTIME_DIR
          value: "/tmp"
        - name: PY_LOG_LEVEL
          value: "INFO"
        - name: SOURCE_TYPE
          value: uri
        - name: SOURCE_URI
          value: file:///home/pipeline-server/resources/video_car_crash.avi
      - name: dl-streamer-pipeline-server7
        image: intel/dlstreamer-pipeline-server:2022.1.1-ubuntu20
        imagePullPolicy: 
        command:
          - ./resources/itm.sh
        securityContext:
          privileged: true
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: dev
          mountPath: /dev
        - name: tmp
          mountPath: /tmp
        - name: cm-cfg
          mountPath: /home/pipeline-server/models/object_detection/person-vehicle-bike-detection-2000/person-vehicle-bike-detection-2000.json
          subPath: person-vehicle-bike-detection-2000.json
          readOnly: true
        - name: cm-cfg
          mountPath: /home/pipeline-server/pipelines/object_detection/person-vehicle-bike-detection-2000/pipeline.json
          subPath: pipeline.json
          readOnly: true
        - name: cm-cfg
          mountPath: /app/config.json
          subPath: config.json
          readOnly: true
        - mountPath: /home/pipeline-server/models/
          name: ps-models
        - mountPath: /home/pipeline-server/resources/
          name: ps-res

        env:
        - name: PUBLISHER_TOPIC
          value: camera7
        - name: MQTT_PORT
          value: "1883"
        - name: MQTT_BROKER
          value: hivemq-mqtt
        - name: XDG_RUNTIME_DIR
          value: "/tmp"
        - name: PY_LOG_LEVEL
          value: "INFO"
        - name: SOURCE_TYPE
          value: uri
        - name: SOURCE_URI
          value: file:///home/pipeline-server/resources/video_pedestrians.avi
      - name: dl-streamer-pipeline-server8
        image: intel/dlstreamer-pipeline-server:2022.1.1-ubuntu20
        imagePullPolicy: 
        command:
          - ./resources/itm.sh
        securityContext:
          privileged: true
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: dev
          mountPath: /dev
        - name: tmp
          mountPath: /tmp
        - name: cm-cfg
          mountPath: /home/pipeline-server/models/object_detection/person-vehicle-bike-detection-2000/person-vehicle-bike-detection-2000.json
          subPath: person-vehicle-bike-detection-2000.json
          readOnly: true
        - name: cm-cfg
          mountPath: /home/pipeline-server/pipelines/object_detection/person-vehicle-bike-detection-2000/pipeline.json
          subPath: pipeline.json
          readOnly: true
        - name: cm-cfg
          mountPath: /app/config.json
          subPath: config.json
          readOnly: true
        - mountPath: /home/pipeline-server/models/
          name: ps-models
        - mountPath: /home/pipeline-server/resources/
          name: ps-res

        env:
        - name: PUBLISHER_TOPIC
          value: camera8
        - name: MQTT_PORT
          value: "1883"
        - name: MQTT_BROKER
          value: hivemq-mqtt
        - name: XDG_RUNTIME_DIR
          value: "/tmp"
        - name: PY_LOG_LEVEL
          value: "INFO"
        - name: SOURCE_TYPE
          value: uri
        - name: SOURCE_URI
          value: file:///home/pipeline-server/resources/video_car_crash.avi

      volumes:
      - name: dev
        hostPath:
          path: /dev
      - name: tmp
        hostPath:
          path: /tmp
      - name: cm-cfg
        configMap:
          name: itm-ps-config
      - name: ps-models
        persistentVolumeClaim:
          claimName: ps-pvc-models
      - name: itm-ps-config
        configMap:
          name: itm-ps-config
      - name: ps-res
        persistentVolumeClaim:
          claimName: ps-pvc-res
---
# Source: itm-services/templates/rule-engine-deployment.yaml
# Copyright 2022 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: rule-engine
  name: rule-engine
  namespace: default

spec:
  replicas: 1
  selector:
    matchLabels:
      app: rule-engine
  template:
    metadata:
      labels:
        app: rule-engine
        role: itm
    spec:
      containers:
      - name: rule-engine
        image: intelligent_traffic_management_rule_engine:2.0
        imagePullPolicy: Always
        volumeMounts:
        - name: cm-cfg
          mountPath: /app/config.json
          subPath: config.json
          readOnly: true
        - name: cm-cfg
          mountPath: /app/schema.json
          subPath: schema.json
          readOnly: true
        env:
        - name: SUBSCRIBER_TOPIC
          value: camera_analytics1 camera_analytics2 camera_analytics3 camera_analytics4 camera_analytics5 camera_analytics6 camera_analytics7 camera_analytics8
        - name: PUBLISHER_TOPIC
          value: event_upload
        - name: MQTT_PORT
          value: "1883"
        - name: MQTT_BROKER
          value: hivemq-mqtt
        - name: PY_LOG_LEVEL
          value: "INFO"
        - name: NUM_VIDEO_INSTANCES
          value: "8"
        securityContext:
          readOnlyRootFilesystem: true
      volumes:
      - name: cm-cfg
        configMap:
          name: rule-engine-config
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
---
# Source: itm-services/charts/postgresql/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.16.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
  namespace: default
spec:
  serviceName: release-name-postgresql-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: release-name
      role: primary
  template:
    metadata:
      name: release-name-postgresql
      labels:
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-10.16.2
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        role: primary
        app.kubernetes.io/component: primary
    spec:      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: postgresql
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: primary
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      automountServiceAccountToken: false
      containers:
        - name: release-name-postgresql
          image: docker.io/bitnami/postgresql:11.14.0-debian-10-r28
          imagePullPolicy: "IfNotPresent"
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: "/bitnami/postgresql"
            - name: PGDATA
              value: "/bitnami/postgresql/data"
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-postgresql
                  key: postgresql-password
            - name: POSTGRES_DB
              value: "itm_metadata"
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: "error"
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: "pgaudit"
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "postgres" -d "dbname=itm_metadata" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "postgres" -d "dbname=itm_metadata" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
        - name: data
          emptyDir: {}
