---
# Source: mobileapps/templates/networkpolicy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mobileapps-release-name
  labels:
    app: mobileapps
    chart: mobileapps-0.2.1
    release: release-name
    heritage: Helm
spec:
  podSelector:
    matchLabels:
      app: mobileapps
      release: release-name
  policyTypes:
    - Ingress
  ingress:
    - ports:
      - port: 8888
        protocol: TCP
---
# Source: mobileapps/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mobileapps-release-name-secret-config
  labels:
    app: mobileapps
    chart: mobileapps-0.2.1
    release: release-name
    heritage: Helm
type: Opaque
---
# Source: mobileapps/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-release-name
data:
  config.yaml: |-     # Number of worker processes to spawn.
    # Set to 0 to run everything in a single process without clustering.
    # Use 'ncpu' to run as many workers as there are CPU units
    num_workers: 2
    
    # Number of workers to start in parallel after the first worker.
    # The first worker is always started independently. After it has completed
    # its start-up, this number controls the number of workers to start in
    # parallel until `num_workers` have been started. Note that setting this
    # number to a too high a value might lead to high resource consumption
    # (especially of CPU) during the start-up process.
    startup_concurrency: 1
    
    # Log error messages and gracefully restart a worker if v8 reports that it
    # uses more heap (note: not RSS) than this many mb.
    worker_heap_limit_mb: 750
    
    # The maximum interval in ms that can pass between two beat messages
    # sent by each worker to the master before it is killed
    worker_heartbeat_timeout: 15000
    
    # Logger info
    logging:
      level: warn
      name: mobileapps
      streams:
        - type: stdout
          named_levels: true
    
    services:
      - name: mobileapps
        # a relative path or the name of an npm package, if different from name
        module: ./app.js
        # per-service config
        conf:
          port: 8888
          # interface: localhost # uncomment to only listen on localhost
          # more per-service config settings
          # the location of the spec, defaults to spec.yaml if not specified
          # spec: ./spec.template.yaml
          # allow cross-domain requests to the API (default '*')
          cors: '*'
          # to disable use:
          # cors: false
          # to restrict to a particular domain, use:
          # cors: restricted.domain.org
          # content for the CSP headers
          # csp: false  # uncomment this line to disable sending them
          # URL of the outbound proxy to use (complete with protocol)
          #      proxy: http://url-downloader.eqiad.wikimedia.org:8080
          # the list of domains for which not to use the proxy defined above
          # no_proxy_list:
          #   - domain1.com
          #   - domain2.org
          # the list of incoming request headers that can be logged; if left empty,
          # the following headers are allowed: cache-control, content-length,
          # content-type, if-match, user-agent, x-request-id
          # log_header_whitelist:
          #   - cache-control
          #   - content-length
          #   - content-type
          #   - if-match
          #   - user-agent
          #   - x-request-id
          # User-Agent HTTP header to use for requests
          user_agent: "Mobileapps/WMF"
          # the template used for contacting the MW API
          mwapi_req:
            method: post
            uri: https://api-rw.discovery.wmnet/w/api.php
            headers:
              host: '{{request.params.domain}}'
              user-agent: '{{user-agent}}'
              accept-language: '{{accept-language}}'
            body: '{{ default(request.query, {}) }}'
          corepagehtml_req:
            method: GET
            uri: 'https://api-rw.discovery.wmnet/w/rest.php/v1/page/{{title}}/with_html'
            headers:
              host: '{{request.params.domain}}'
              accept-language: '{{accept-language}}'
          corerevisionhtml_req:
            method: GET
            uri: 'https://api-rw.discovery.wmnet/w/rest.php/v1/revision/{{revision}}/with_html'
            headers:
              host: '{{request.params.domain}}'
              accept-language: '{{accept-language}}'
          # the template used for contacting RESTBase
          restbase_req:
            method: '{{request.method}}'
            uri: 'https://restbase.discovery.wmnet:7443/{{domain}}/v1/{+path}'
            query: '{{ default(request.query, {}) }}'
            headers: '{{request.headers}}'
            body: '{{request.body}}'
            timeout: 60000
          # the template used for requesting ResourceLoader module content from load.php
          mw_resource_loader_req:
            method: post
            uri: 'https://api-rw.discovery.wmnet/w/load.php'
            headers:
              host: '{{request.params.domain}}'
              user-agent: '{{user-agent}}'
            body: '{{ default(request.query, {}) }}'
          # REST API external base URIs (for injection into mobile-html output)
          mobile_html_rest_api_base_uri: //meta.wikimedia.org/api/rest_v1/
          mobile_html_local_rest_api_base_uri_template: //{{domain}}/api/rest_v1/
          mobile_html_csp: default-src 'none'; connect-src app://*.wikipedia.org https://*.wikipedia.org; media-src app://upload.wikimedia.org https://upload.wikimedia.org 'self'; img-src app://*.wikimedia.org https://*.wikimedia.org app://wikimedia.org https://wikimedia.org 'self' data:; object-src 'none'; script-src app://meta.wikimedia.org https://meta.wikimedia.org 'unsafe-inline'; style-src app://meta.wikimedia.org https://meta.wikimedia.org app://*.wikipedia.org https://*.wikipedia.org 'self' 'unsafe-inline'; frame-ancestors 'self' 
          mobile_view_languages:
            - zh
            - kk
          restbase_compatibility:
            security_headers: false
          use_coreparsoid_endpoint: false
---
# Source: mobileapps/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mobileapps-release-name
  labels:
    app: mobileapps
    chart: mobileapps-0.2.1
    release: release-name
    heritage: Helm
spec:
  type: NodePort
  selector:
    app: mobileapps
    release: release-name
    routed_via: release-name
  ports:
    - name: http
      targetPort: 8888
      port: 8888
---
# Source: mobileapps/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mobileapps-release-name
  labels:
    app: mobileapps
    chart: mobileapps-0.2.1
    release: release-name
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: mobileapps
      release: release-name
  replicas: 1
  template:
    metadata:
      labels:
        app: mobileapps
        release: release-name
        routed_via: release-name
      annotations:
        checksum/config: 2e2c296372473d3fc686f5f3c67dcbc1fc69830a6376be7818c991d23b8623d0
        checksum/secrets: f8cba5d95b927b6058020493cb35e63bc7ad331539a3bb818f4072e52a84aa99
        prometheus.io/port: "9102"
        prometheus.io/scrape: "true"        
    spec:
      containers:
        # The main application container
        - name: mobileapps-release-name
          image: "docker-registry.wikimedia.org/wikimedia/mediawiki-services-mobileapps:latest"
          imagePullPolicy: IfNotPresent
          command:
            - nodejs
          args:
            - server.js
            - -c
            - /etc/mobileapps/config.yaml
          ports:
            - containerPort: 8888
          livenessProbe:
            tcpSocket:
              port: 8888
          readinessProbe:
            httpGet:
              path: /_info
              port: 8888
          env:
            - name: SERVICE_IDENTIFIER
              value: mobileapps-release-name
          resources:
            requests:
              cpu: 1
              memory: 350Mi
            limits:
              cpu: 1200m
              memory: 600Mi
          volumeMounts:
            - name: config-volume
              mountPath: /etc/mobileapps        
      volumes:        
        - name: config-volume
          configMap:
            name: config-release-name
---
# Source: mobileapps/templates/tests/test-service-checker.yaml
apiVersion: v1
kind: Pod
metadata:
  name: 'mobileapps-release-name-service-checker'
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  containers:
  - name: 'mobileapps-release-name-service-checker'
    image: "docker-registry.wikimedia.org/service-checker"
    imagePullPolicy: IfNotPresent
    args: ["-t", "5", '$(MOBILEAPPS_RELEASE_NAME_SERVICE_HOST)', 'http://mobileapps-release-name:8888']
  dnsPolicy: ClusterFirst
  restartPolicy: Never
