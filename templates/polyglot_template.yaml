---
# Source: polyglot/charts/rabbitmq/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-rabbitmq
  namespace: default
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-7.6.9
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
secrets:
  - name: release-name-rabbitmq
---
# Source: polyglot/charts/rabbitmq/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-rabbitmq
  namespace: default
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-7.6.9
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  rabbitmq-password: "Z3Vlc3Q="
  rabbitmq-erlang-cookie: "a2l0dGVuY29va2ll"
---
# Source: polyglot/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-polyglot
  labels:
    app.kubernetes.io/name: polyglot
    helm.sh/chart: polyglot-0.1.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  rabbitmq-uri: "YW1xcDovL2d1ZXN0Omd1ZXN0QHJlbGVhc2UtbmFtZS1wb2x5Z2xvdC1yYWJiaXRtcS8lMkY="
  mongodb-uri: "bW9uZ29kYjovL3JlbGVhc2UtbmFtZS1wb2x5Z2xvdC1tb25nb2RiOjI3MDE3L3BvbHlnbG90"
---
# Source: polyglot/charts/rabbitmq/templates/configuration.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-rabbitmq-config
  namespace: default
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-7.6.9
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  rabbitmq.conf: |-
    ## Username and password
    default_user = guest
    default_pass = CHANGEME
    ## Clustering
    cluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s
    cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
    cluster_formation.node_cleanup.interval = 10
    cluster_formation.node_cleanup.only_log_warning = true
    cluster_partition_handling = autoheal
    # queue master locator
    queue_master_locator = min-masters
    # enable guest user
    loopback_users.guest = false
    #default_vhost = default-vhost
    #disk_free_limit.absolute = 50MB
    #load_definitions = /app/load_definition.json
---
# Source: polyglot/charts/mongodb/templates/pvc-standalone.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  labels:
    app: mongodb
    chart: mongodb-7.2.11
    heritage: Helm
    release: release-name
  name: release-name-mongodb
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: polyglot/templates/persistence.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-polyglot-data
  labels:
    app.kubernetes.io/name: polyglot
    helm.sh/chart: polyglot-0.1.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: "20Gi"
---
# Source: polyglot/charts/rabbitmq/templates/role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-rabbitmq-endpoint-reader
  namespace: default
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-7.6.9
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create"]
---
# Source: polyglot/charts/rabbitmq/templates/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-rabbitmq-endpoint-reader
  namespace: default
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-7.6.9
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: release-name-rabbitmq
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-rabbitmq-endpoint-reader
---
# Source: polyglot/charts/mongodb/templates/svc-standalone.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mongodb
  labels:
    app: mongodb
    chart: mongodb-7.2.11
    release: "release-name"
    heritage: "Helm"
spec:
  type: ClusterIP
  ports:
  - name: mongodb
    port: 27017
    targetPort: mongodb
  selector:
    app: mongodb
    release: "release-name"
---
# Source: polyglot/charts/rabbitmq/templates/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-rabbitmq-headless
  namespace: default
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-7.6.9
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  ports:
    - name: epmd
      port: 4369
      targetPort: epmd
    - name: amqp
      port: 5672
      targetPort: amqp
    - name: dist
      port: 25672
      targetPort: dist
    - name: stats
      port: 15672
      targetPort: stats
  selector: 
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/instance: release-name
---
# Source: polyglot/charts/rabbitmq/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-rabbitmq
  namespace: default
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-7.6.9
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: amqp
      port: 5672
      targetPort: amqp
      nodePort: null
    - name: epmd
      port: 4369
      targetPort: epmd
      nodePort: null
    - name: dist
      port: 25672
      targetPort: dist
      nodePort: null
    - name: http-stats
      port: 15672
      targetPort: stats
      nodePort: null
  selector: 
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/instance: release-name
---
# Source: polyglot/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-polyglot
  labels:
    
    app.kubernetes.io/name: polyglot
    helm.sh/chart: polyglot-0.1.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8184
      targetPort: polyglot
      protocol: TCP
      name: polyglot
  selector:
    app.kubernetes.io/name: polyglot
    app.kubernetes.io/instance: release-name
---
# Source: polyglot/charts/mongodb/templates/deployment-standalone.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-mongodb
  labels:
    app: mongodb
    chart: mongodb-7.2.11
    release: "release-name"
    heritage: "Helm"
spec:
  selector:
    matchLabels:
      app: mongodb
      release: "release-name"
  template:
    metadata:
      labels:
        app: mongodb
        release: "release-name"
        chart: mongodb-7.2.11
    spec:
      securityContext:
        fsGroup: 1001      
      initContainers:
      containers:
      - name: release-name-mongodb
        image: docker.io/bitnami/mongodb:3.6
        imagePullPolicy: "IfNotPresent"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        env:
        - name: MONGODB_SYSTEM_LOG_VERBOSITY
          value: "0"
        - name: MONGODB_DISABLE_SYSTEM_LOG
          value: "yes"
        - name: MONGODB_ENABLE_IPV6
          value: "no"
        - name: MONGODB_ENABLE_DIRECTORY_PER_DB
          value: "no"
        ports:
        - name: mongodb
          containerPort: 27017
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        volumeMounts:
        - name: data
          mountPath: /bitnami/mongodb
          subPath: 
        resources:
          {}
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: release-name-mongodb
---
# Source: polyglot/templates/converters.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: polyglot-converters-avconv
  labels:
    polyglot/converter: "avconv"
    app.kubernetes.io/name: polyglot
    helm.sh/chart: polyglot-0.1.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: polyglot-converters-avconv
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: polyglot-converters-avconv
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
        - name: check-rabbitmq
          image: "ncsa/checks:1.0.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: rabbitmq-uri
      containers:
        - name: converter
          image: "ncsapolyglot/converters-avconv:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: rabbitmq-uri
---
# Source: polyglot/templates/converters.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: polyglot-converters-c2-metadata
  labels:
    polyglot/converter: "c2-metadata"
    app.kubernetes.io/name: polyglot
    helm.sh/chart: polyglot-0.1.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: polyglot-converters-c2-metadata
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: polyglot-converters-c2-metadata
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
        - name: check-rabbitmq
          image: "ncsa/checks:1.0.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: rabbitmq-uri
      containers:
        - name: converter
          image: "craigwillis/c2metadata-bd:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: rabbitmq-uri
---
# Source: polyglot/templates/converters.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: polyglot-converters-ebook-convert
  labels:
    polyglot/converter: "ebook-convert"
    app.kubernetes.io/name: polyglot
    helm.sh/chart: polyglot-0.1.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: polyglot-converters-ebook-convert
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: polyglot-converters-ebook-convert
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
        - name: check-rabbitmq
          image: "ncsa/checks:1.0.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: rabbitmq-uri
      containers:
        - name: converter
          image: "ncsapolyglot/converters-ebook-convert:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: rabbitmq-uri
---
# Source: polyglot/templates/converters.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: polyglot-converters-ffmpeg
  labels:
    polyglot/converter: "ffmpeg"
    app.kubernetes.io/name: polyglot
    helm.sh/chart: polyglot-0.1.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: polyglot-converters-ffmpeg
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: polyglot-converters-ffmpeg
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
        - name: check-rabbitmq
          image: "ncsa/checks:1.0.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: rabbitmq-uri
      containers:
        - name: converter
          image: "ncsapolyglot/converters-ffmpeg:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: rabbitmq-uri
---
# Source: polyglot/templates/converters.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: polyglot-converters-flac
  labels:
    polyglot/converter: "flac"
    app.kubernetes.io/name: polyglot
    helm.sh/chart: polyglot-0.1.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: polyglot-converters-flac
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: polyglot-converters-flac
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
        - name: check-rabbitmq
          image: "ncsa/checks:1.0.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: rabbitmq-uri
      containers:
        - name: converter
          image: "ncsapolyglot/converters-flac:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: rabbitmq-uri
---
# Source: polyglot/templates/converters.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: polyglot-converters-gdal
  labels:
    polyglot/converter: "gdal"
    app.kubernetes.io/name: polyglot
    helm.sh/chart: polyglot-0.1.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: polyglot-converters-gdal
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: polyglot-converters-gdal
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
        - name: check-rabbitmq
          image: "ncsa/checks:1.0.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: rabbitmq-uri
      containers:
        - name: converter
          image: "ncsapolyglot/converters-gdal:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: rabbitmq-uri
---
# Source: polyglot/templates/converters.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: polyglot-converters-ghostscript
  labels:
    polyglot/converter: "ghostscript"
    app.kubernetes.io/name: polyglot
    helm.sh/chart: polyglot-0.1.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: polyglot-converters-ghostscript
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: polyglot-converters-ghostscript
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
        - name: check-rabbitmq
          image: "ncsa/checks:1.0.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: rabbitmq-uri
      containers:
        - name: converter
          image: "ncsapolyglot/converters-ghostscript:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: rabbitmq-uri
---
# Source: polyglot/templates/converters.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: polyglot-converters-htmldoc
  labels:
    polyglot/converter: "htmldoc"
    app.kubernetes.io/name: polyglot
    helm.sh/chart: polyglot-0.1.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: polyglot-converters-htmldoc
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: polyglot-converters-htmldoc
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
        - name: check-rabbitmq
          image: "ncsa/checks:1.0.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: rabbitmq-uri
      containers:
        - name: converter
          image: "ncsapolyglot/converters-htmldoc:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: rabbitmq-uri
---
# Source: polyglot/templates/converters.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: polyglot-converters-imagemagick
  labels:
    polyglot/converter: "imagemagick"
    app.kubernetes.io/name: polyglot
    helm.sh/chart: polyglot-0.1.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: polyglot-converters-imagemagick
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: polyglot-converters-imagemagick
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
        - name: check-rabbitmq
          image: "ncsa/checks:1.0.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: rabbitmq-uri
      containers:
        - name: converter
          image: "ncsapolyglot/converters-imagemagick:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: rabbitmq-uri
---
# Source: polyglot/templates/converters.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: polyglot-converters-openjpeg
  labels:
    polyglot/converter: "openjpeg"
    app.kubernetes.io/name: polyglot
    helm.sh/chart: polyglot-0.1.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: polyglot-converters-openjpeg
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: polyglot-converters-openjpeg
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
        - name: check-rabbitmq
          image: "ncsa/checks:1.0.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: rabbitmq-uri
      containers:
        - name: converter
          image: "ncsapolyglot/converters-openjpeg:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: rabbitmq-uri
---
# Source: polyglot/templates/converters.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: polyglot-converters-txt2html
  labels:
    polyglot/converter: "txt2html"
    app.kubernetes.io/name: polyglot
    helm.sh/chart: polyglot-0.1.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: polyglot-converters-txt2html
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: polyglot-converters-txt2html
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
        - name: check-rabbitmq
          image: "ncsa/checks:1.0.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: rabbitmq-uri
      containers:
        - name: converter
          image: "ncsapolyglot/converters-txt2html:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: rabbitmq-uri
---
# Source: polyglot/templates/converters.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: polyglot-converters-unoconv
  labels:
    polyglot/converter: "unoconv"
    app.kubernetes.io/name: polyglot
    helm.sh/chart: polyglot-0.1.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: polyglot-converters-unoconv
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: polyglot-converters-unoconv
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
        - name: check-rabbitmq
          image: "ncsa/checks:1.0.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: rabbitmq-uri
      containers:
        - name: converter
          image: "ncsapolyglot/converters-unoconv:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: rabbitmq-uri
---
# Source: polyglot/templates/converters.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: polyglot-converters-zip
  labels:
    polyglot/converter: "zip"
    app.kubernetes.io/name: polyglot
    helm.sh/chart: polyglot-0.1.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: polyglot-converters-zip
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: polyglot-converters-zip
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
        - name: check-rabbitmq
          image: "ncsa/checks:1.0.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: rabbitmq-uri
      containers:
        - name: converter
          image: "ncsapolyglot/converters-zip:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: rabbitmq-uri
---
# Source: polyglot/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-polyglot
  labels:
    app.kubernetes.io/name: polyglot
    helm.sh/chart: polyglot-0.1.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: polyglot
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: polyglot
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
        - name: check-mongo
          image: "ncsa/checks:1.0.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: MONGO_URI
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: mongodb-uri
        - name: data-chown
          command: [chown, "10001:root", /home/polyglot/polyglot/tmp/PolyglotRestlet]
          image: busybox:latest
          volumeMounts:
          - name: data
            mountPath: /home/polyglot/polyglot/tmp/PolyglotRestlet
      containers:
        - name: polyglot
          image: "ncsapolyglot/polyglot:2.4.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: polyglot
              containerPort: 8184
              protocol: TCP
          env:
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: rabbitmq-uri
            - name: MONGO_SERVER
              value: release-name-polyglot-mongodb
            - name: MONGO_DATABASE
              value: polyglot
          volumeMounts:
            - name: data
              mountPath: /home/polyglot/polyglot/tmp/PolyglotRestlet
          livenessProbe:
            tcpSocket:
              port: polyglot
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: polyglot
            timeoutSeconds: 5
          resources:
            {}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: release-name-polyglot-data
---
# Source: polyglot/charts/rabbitmq/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-rabbitmq
  namespace: default
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-7.6.9
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: release-name-rabbitmq-headless
  podManagementPolicy: OrderedReady
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: rabbitmq
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rabbitmq
        helm.sh/chart: rabbitmq-7.6.9
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/secret: 06c29f3e6816be863f83d277d0a3c83a4c78c14decd37668076685878c27c500
    spec:
      
      serviceAccountName: release-name-rabbitmq
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      terminationGracePeriodSeconds: 10
      containers:
        - name: rabbitmq
          image: docker.io/bitnami/rabbitmq:3.8.9-debian-10-r20
          imagePullPolicy: "IfNotPresent"
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: K8S_SERVICE_NAME
              value: "release-name-rabbitmq-headless"
            - name: K8S_ADDRESS_TYPE
              value: hostname
            - name: RABBITMQ_FORCE_BOOT
              value: "no"
            - name: RABBITMQ_NODE_NAME
              value: "rabbit@$(MY_POD_NAME).$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local"
            - name: K8S_HOSTNAME_SUFFIX
              value: ".$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local"
            - name: RABBITMQ_MNESIA_DIR
              value: "/bitnami/rabbitmq/mnesia/$(RABBITMQ_NODE_NAME)"
            - name: RABBITMQ_LDAP_ENABLE
              value: "no"
            - name: RABBITMQ_LOGS
              value: "-"
            - name: RABBITMQ_ULIMIT_NOFILES
              value: "65536"
            - name: RABBITMQ_USE_LONGNAME
              value: "true"
            - name: RABBITMQ_ERL_COOKIE
              valueFrom:
                secretKeyRef:
                  name: release-name-rabbitmq
                  key: rabbitmq-erlang-cookie
            - name: RABBITMQ_USERNAME
              value: "guest"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-rabbitmq
                  key: rabbitmq-password
            - name: RABBITMQ_PLUGINS
              value: "rabbitmq_management, rabbitmq_peer_discovery_k8s, rabbitmq_auth_backend_ldap"
          ports:
            - name: amqp
              containerPort: 5672
            - name: dist
              containerPort: 25672
            - name: stats
              containerPort: 15672
            - name: epmd
              containerPort: 4369
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -ec
                - rabbitmq-diagnostics -q check_running
            initialDelaySeconds: 120
            periodSeconds: 30
            timeoutSeconds: 20
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -ec
                - rabbitmq-diagnostics -q check_running
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 20
            successThreshold: 1
            failureThreshold: 3
          resources:
            limits: {}
            requests: {}
          lifecycle:
            preStop:
              exec:
                command:
                  - bash
                  - -ec
                  - rabbitmqctl stop_app
          volumeMounts:
            - name: configuration
              mountPath: /bitnami/rabbitmq/conf
            - name: data
              mountPath: /bitnami/rabbitmq/mnesia
      volumes:
        - name: configuration
          configMap:
            name: release-name-rabbitmq-config
            items:
              - key: rabbitmq.conf
                path: rabbitmq.conf
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/name: rabbitmq
          app.kubernetes.io/instance: release-name
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: polyglot/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-polyglot-test-connection"
  labels:
    app.kubernetes.io/name: polyglot
    helm.sh/chart: polyglot-0.1.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['release-name-polyglot:8184']
  restartPolicy: Never
