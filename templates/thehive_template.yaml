---
# Source: thehive/templates/ServiceAccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: thehive
---
# Source: thehive/templates/role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pod-reader
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["pods"]
    verbs: ["get", "watch", "list"]
---
# Source: thehive/templates/RoleBinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: read-pods
subjects:
  - kind: ServiceAccount
    name: thehive
roleRef:
  kind: Role
  name: pod-reader
  apiGroup: rbac.authorization.k8s.io
---
# Source: thehive/templates/cassandra_service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: "cassandra"
  name: "cassandra"
spec:
  ports:
    - port: 9042
  selector:
    app: "cassandra"
---
# Source: thehive/templates/cortex_service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: "cortex"
  name: "cortex"
spec:
  type: "LoadBalancer"
  ports:
    - port: 9001
  selector:
    app: "cortex"
---
# Source: thehive/templates/elasticsearch_service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app:  "elasticsearch"
  name:  "elasticsearch"
spec:
  ports:
    - port: 9200
  selector:
    app: "elasticsearch"
---
# Source: thehive/templates/minio_service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: "minio"
  name: "minio"
spec:
  type: "LoadBalancer"
  ports:
    - name: console
      port: 9090
    - name: s3-api
      port: 9000  
      
  selector:
    app: "minio"
---
# Source: thehive/templates/thehive_service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: "thehive"
  name: "thehive"
spec:
  type: "LoadBalancer"
  ports:
    - port: 9000
      # nodePort: 30001
  selector:
    app: "thehive"
---
# Source: thehive/templates/thehive_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "thehive"
  labels:
    app: "thehive"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "thehive"
  template:
    metadata:
      labels:
        app: "thehive"
    spec:
      serviceAccountName: thehive
      containers:
        - name: "thehive"
          image: "strangebee/thehive:latest"
          command:
            - "/opt/thehive/entrypoint"
            - "--secret"
            - "SuperSecretForKubernetes"
            - "--cql-hostnames"
            - "cassandra"
            - "--no-cql-wait"
            - "--no-config-cortex"
            - "--kubernetes"
            - "--index-backend"
            - "elasticsearch"
            - "--es-hostnames"
            - "elasticsearch"
            - "--s3-endpoint"
            - "http://minio:9000"
            - "--s3-access-key"
            - "minioadmin"
            - "--s3-secret-key"
            - "minioadmin"
            - "--s3-use-path-access-style"
            - "--cluster-min-nodes-count"
            - "0"
          ports:
            - containerPort: 9000
              name: http
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          resources:
            limits:
              memory: 2Gi
            requests:
              cpu: "500m"
              memory: 512Mi

#          startupProbe:
#            httpGet:
#              path: /api/v1/status/public
#              port: 9000
#            failureThreshold: 30
#            periodSeconds: 10
#          livenessProbe:
#            httpGet:
#              path: /api/v1/status/public
#              port: 9000
#            periodSeconds: 10
---
# Source: thehive/templates/cassandra_statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "cassandra"
  labels:
    app: "cassandra"
spec:
  serviceName: cassandra
  replicas: 1
  selector:
    matchLabels:
      app:  "cassandra"
  template:
    metadata:
      labels:
        app: "cassandra"
    spec:
      terminationGracePeriodSeconds: 1800
      containers:
        - name: "cassandra"
          image: "cassandra:4.0"
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 7000
              name: intra-node
            - containerPort: 7001
              name: tls-intra-node
            - containerPort: 7199
              name: jmx
            - containerPort: 9042
              name: cql
          resources:
            limits:
              cpu: "500m"
              memory: 1Gi
            requests:
              cpu: "500m"
              memory: 1Gi
          securityContext:
            capabilities:
              add:
                - IPC_LOCK
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - nodetool drain
          env:
            - name:  MAX_HEAP_SIZE
              value: "512M"
            - name:  HEAP_NEWSIZE
              value: "100M"
            - name:  CASSANDRA_CLUSTER_NAME
              value: "TheHive"  
            - name:  CASSANDRA_DC
              value: "DC1-TheHive"  
            - name:  CASSANDRA_RACK
              value: "Rack1-TheHive"
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          
          volumeMounts:
            - name: cassandra-data
              mountPath: /var/lib/cassandra
      volumes:
        - name: cassandra-data
          emptyDir: {}
---
# Source: thehive/templates/cortex_statefuleset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "cortex"
  labels:
    app: "cortex"
spec:
  serviceName: cortex
  replicas: 1
  selector:
    matchLabels:
      app: "cortex"
  template:
    metadata:
      labels:
        app: "cortex"
    spec:
      terminationGracePeriodSeconds: 1800
      containers:
        - name: "cortex"
          image: "thehiveproject/cortex:3.1.7"
          imagePullPolicy: "IfNotPresent"

          env:
            - name: job_directory
              value: /tmp/cortex-jobs
            

          ports:
            - containerPort: 9001
              name: http
          resources:
            limits:
              cpu: "500m"
              memory: 512Mi
            requests:
              cpu: "500m"
              memory: 256Mi
          volumeMounts:
            - name: docker-sock
              mountPath: /var/run/docker.sock
            - name: cortex-jobs
              mountPath: /tmp/cortex-jobs
      volumes:
        - name: docker-sock
          emptyDir: {}
        - name: cortex-jobs
          emptyDir: {}
---
# Source: thehive/templates/elasticsearch_statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "elasticsearch"
  labels:
    app: "elasticsearch"
spec:
  serviceName: elasticsearch
  replicas: 1
  selector:
    matchLabels:
      app: "elasticsearch"
  template:
    metadata:
      labels:
        app: "elasticsearch"
    spec:
      terminationGracePeriodSeconds: 1800
      initContainers:
        - name: init
          image: debian:stable-slim
          command:
            - bash
            - "-c"
            - "mkdir -p /usr/share/elasticsearch/data && chmod -R 777 /usr/share/elasticsearch/data"
          volumeMounts:
            - name: es-data
              mountPath: /usr/share/elasticsearch/data
      containers:
        - name: "elasticsearch"
          image: "docker.elastic.co/elasticsearch/elasticsearch:7.17.1"
          ports:
            - containerPort: 9200
              name: http
          resources:
            limits:
              cpu: "500m"
              memory: 1Gi
            requests:
              cpu: "500m"
              memory: 512Mi
          env:
            - name: "node.name"
              value: es
            - name: "cluster.name"
              value: es-docker-cluster
            - name: "discovery.type"
              value: single-node
            - name: "bootstrap.memory_lock"
              value: "true"
            - name: ES_JAVA_OPTS
              value: -Xms512m -Xmx512m
            - name: "xpack.security.enabled"
              value: "false"
          volumeMounts:
            - name: es-data
              mountPath: /usr/share/elasticsearch/data
      volumes:
        - name: es-data
          emptyDir: {}
---
# Source: thehive/templates/minio_statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "minio"
  labels:
    app: "minio"
spec:
  serviceName: minio
  replicas: 1
  selector:
    matchLabels:
      app: "minio"
  template:
    metadata:
      labels:
        app: "minio"
    spec:
      terminationGracePeriodSeconds: 1800
      containers:
        - name: "minio"
          image: "quay.io/minio/minio:latest"
          command: ["minio", "server", "/data", "--console-address", ":9090"]
          imagePullPolicy: "IfNotPresent"

          env:
            - name: MINIO_ROOT_USER
              value: "minioadmin"
            - name: MINIO_ROOT_PASSWORD
              value: "minioadmin"

          ports:
            - containerPort: 9000
              name: http
          resources:
            limits:
              cpu: "500m"
              memory: 512Mi
            requests:
              cpu: "500m"
              memory: 256Mi

          volumeMounts:
            - name: s3-data
              mountPath: /data
      volumes:
        - name: s3-data
          emptyDir: {}
