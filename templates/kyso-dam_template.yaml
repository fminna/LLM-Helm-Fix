---
# Source: kyso-dam/templates/build-namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: default-build
  name: default-build
---
# Source: kyso-dam/templates/exec-namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: default-exec
  name: default-exec
---
# Source: kyso-dam/templates/build-network-policy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: to.kube-dns.ssh.and.https
  namespace: default-build
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
  ingress: []
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
          podSelector:
            matchLabels:
              k8s-app: kube-dns
      ports:
        - port: 53
          protocol: UDP
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
      ports:
        - port: 22
          protocol: TCP
        - port: 80
          protocol: TCP
        - port: 443
          protocol: TCP
---
# Source: kyso-dam/templates/exec-network-policy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: from.ingress.to.kube-dns.and.https
  namespace: default-exec
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            kubernetes.io/metadata.name: ingress
        podSelector: {}
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
          podSelector:
            matchLabels:
              k8s-app: kube-dns
      ports:
        - port: 53
          protocol: UDP
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
      ports:
        - port: 80
          protocol: TCP
        - port: 443
          protocol: TCP
---
# Source: kyso-dam/templates/build-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: default-build
  namespace: default-build
rules:
  - apiGroups:
      - ""
    resources:
      - pods/log
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - pods/exec
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
---
# Source: kyso-dam/templates/exec-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: default-exec
  namespace: default-exec
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods/log
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - pods/exec
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - endpoints
      - pods
      - services
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
---
# Source: kyso-dam/templates/build-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: default-build
  namespace: default-build
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
roleRef:
  kind: Role
  name: default-build
  apiGroup: rbac.authorization.k8s.io
---
# Source: kyso-dam/templates/exec-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: default-exec
  namespace: default-exec
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
roleRef:
  kind: Role
  name: default-exec
  apiGroup: rbac.authorization.k8s.io
---
# Source: kyso-dam/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kyso-dam
  labels:
    helm.sh/chart: kyso-dam-1.0.0
    app.kubernetes.io/name: kyso-dam
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8880
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kyso-dam
    app.kubernetes.io/instance: release-name
---
# Source: kyso-dam/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kyso-dam
  labels:
    helm.sh/chart: kyso-dam-1.0.0
    app.kubernetes.io/name: kyso-dam
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kyso-dam
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kyso-dam
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: kyso-dam
          securityContext:
            {}
          image: "kyso/kyso-dam:1.0.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: BUILD_NAMESPACE
              value: "default-build"
            - name: EXEC_NAMESPACE
              value: "default-exec"
            - name: BUILDER_TOOL
              value: "kaniko"
            - name: DIND_BUILDER_IMAGE
              value: "zot.lo.kyso.io/kyso-dam-builder-dind:latest"
            - name: KANIKO_BUILDER_IMAGE
              value: "zot.lo.kyso.io/kyso-dam-builder-kaniko:latest"
            - name: KYSO_API_URL
              value: "http://kyso-api/api"
            - name: KYSO_APP_DOMAIN
              value: "app.lo.kyso.io"
            - name: KYSO_CLI_IMAGE
              value: "zot.lo.kyso.io/kyso-cli:latest"
            - name: KYSO_DOMAIN
              value: "lo.kyso.io"
            - name: REGISTRY_ADMIN_SECRET
              value: "dockerconfigjson"
            - name: REGISTRY_HOSTNAME
              value: "zot.lo.kyso.io"
            - name: REGISTRY_URL
              value: "https://zot.lo.kyso.io"
            - name: REGISTRY_USER_SECRET
              value: "dockerconfigjson"
          # FIXME: no tests for now
          #livenessProbe:
          #  httpGet:
          #    path: /check/liveness
          #    port: kyso-dam-port
          #readinessProbe:
          #  httpGet:
          #    path: /check/readiness
          #    port: kyso-dam-port
          resources:
            {}
---
# Source: kyso-dam/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-kyso-dam
  labels:
    helm.sh/chart: kyso-dam-1.0.0
    app.kubernetes.io/name: kyso-dam
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    nginx.ingress.kubernetes.io/auth-url: http://kyso-api/api/v1/auth/check-app-permissions
    nginx.ingress.kubernetes.io/rewrite-target: /app
spec:
  ingressClassName: nginx
  rules:
    - host: "*.app.lo.kyso.io"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: release-name-kyso-dam
                port:
                  number: 80
