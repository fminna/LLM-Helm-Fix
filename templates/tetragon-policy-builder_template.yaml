---
# Source: tetragon-policy-builder/templates/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: release-name-tetragon-policy-builder
  labels:
    helm.sh/chart: tetragon-policy-builder-0.1.1
    app.kubernetes.io/name: tetragon-policy-builder
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  policyTypes:
  - Ingress
  podSelector:
    matchLabels: {}
  ingress:
    - from:
        - podSelector: {}
---
# Source: tetragon-policy-builder/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-tetragon-policy-builder
  labels:
    helm.sh/chart: tetragon-policy-builder-0.1.1
    app.kubernetes.io/name: tetragon-policy-builder
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
# Source: tetragon-policy-builder/templates/rbac-manage-cm.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-tetragon-policy-builder
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "create", "update", "delete"]
- apiGroups: ["cilium.io"]
  resources: ["tracingpoliciesnamespaced"]
  verbs: ["get", "list", "create", "update", "delete"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list"]
- apiGroups: ["apps"]
  resources: ["replicasets", "deployments", "daemonsets", "statefulsets"]
  verbs: ["get", "list"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list"]
---
# Source: tetragon-policy-builder/templates/rbac-manage-cm.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-tetragon-policy-builder
subjects:
- kind: ServiceAccount
  name: release-name-tetragon-policy-builder
  namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-tetragon-policy-builder
  apiGroup: rbac.authorization.k8s.io
---
# Source: tetragon-policy-builder/templates/rbac-read-logs.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-tetragon-policy-builder
rules:
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get", "list"]
  resourceNames: []
  resourceLabels:
    app.kubernetes.io/instance: tetragon
    app.kubernetes.io/name: tetragon
---
# Source: tetragon-policy-builder/templates/rbac-read-logs.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-tetragon-policy-builder
subjects:
- kind: ServiceAccount
  name: release-name-tetragon-policy-builder
  namespace: default
roleRef:
  kind: Role
  name: release-name-tetragon-policy-builder
  apiGroup: rbac.authorization.k8s.io
---
# Source: tetragon-policy-builder/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-tetragon-policy-builder
  labels:
    helm.sh/chart: tetragon-policy-builder-0.1.1
    app.kubernetes.io/name: tetragon-policy-builder
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: tetragon-policy-builder
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tetragon-policy-builder
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-tetragon-policy-builder
      containers:
        - name: policy-builder
          image: "ghcr.io/camptocamp/tetragon-policy-builder:master"
          imagePullPolicy: Always
          env:
            - name: TETRAGON_POD_SELECTOR
              value: "app.kubernetes.io/instance=tetragon,app.kubernetes.io/name=tetragon"
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {}
