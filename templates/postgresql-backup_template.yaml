---
# Source: postgresql-backup/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-postgresql-backup
  labels:
    helm.sh/chart: postgresql-backup-0.1.9
    app.kubernetes.io/name: postgresql-backup
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.22"
    app.kubernetes.io/managed-by: Helm
---
# Source: postgresql-backup/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: "release-name-postgresql-backup"
  labels:
    helm.sh/chart: postgresql-backup-0.1.9
    app.kubernetes.io/name: postgresql-backup
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.22"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  POSTGRES_DATABASE: "YWxs"
  PGPASSWORD: "eHh4"
  PGUSER: "eHh4"
  AWS_ACCESS_KEY_ID: "eHh4"
  AWS_SECRET_ACCESS_KEY: "eHh4"
  ENCRYPTION_PASSWORD: "eHh4"
---
# Source: postgresql-backup/templates/cleanup-cronjob.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: "release-name-postgresql-backup-cleanup"
  namespace: "default"
  labels: 
    helm.sh/chart: postgresql-backup-0.1.9
    app.kubernetes.io/name: postgresql-backup
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.22"
    app.kubernetes.io/managed-by: Helm
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          labels: 
            app.kubernetes.io/name: postgresql-backup
            app.kubernetes.io/instance: release-name
        spec:
          serviceAccountName: release-name-postgresql-backup
          securityContext:
            {}
          restartPolicy: OnFailure
          containers:
            - name: postgresql-backup
              image: "phntom/postgresql-backup-s3:1.0.22@sha256:49b6488f618b9255e11e5013e7d15b9a14e415cf9625caac79cc924d1db2339d"
              imagePullPolicy: "IfNotPresent"
              command:
                - cleanup.sh
              env:
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: release-name-postgresql-backup
                      key: AWS_ACCESS_KEY_ID
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: release-name-postgresql-backup
                      key: AWS_SECRET_ACCESS_KEY
                - name: S3_BUCKET
                  value: "bucket"
                - name: S3_PREFIX
                  value: "postgresql"
                - name: AWS_DEFAULT_REGION
                  value: "us-east-1"
                - name: S3_S3V4
                  value: "no"
                - name: ENCRYPTION_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: release-name-postgresql-backup
                      key: ENCRYPTION_PASSWORD
              resources:
                {}
              securityContext:
                {}
  schedule: "5 5 * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  concurrencyPolicy: "Forbid"
---
# Source: postgresql-backup/templates/cronjob.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: "release-name-postgresql-backup"
  namespace: "default"
  labels: 
    helm.sh/chart: postgresql-backup-0.1.9
    app.kubernetes.io/name: postgresql-backup
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.22"
    app.kubernetes.io/managed-by: Helm
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          labels: 
            app.kubernetes.io/name: postgresql-backup
            app.kubernetes.io/instance: release-name
        spec:
          serviceAccountName: release-name-postgresql-backup
          securityContext:
            {}
          restartPolicy: OnFailure
          containers:
            - name: postgresql-backup
              image: "phntom/postgresql-backup-s3:1.0.22@sha256:49b6488f618b9255e11e5013e7d15b9a14e415cf9625caac79cc924d1db2339d"
              imagePullPolicy: "IfNotPresent"
              env:
                - name: POSTGRES_DATABASE
                  valueFrom:
                    secretKeyRef:
                      name: release-name-postgresql-backup
                      key: POSTGRES_DATABASE
                - name: PGHOST
                  value: "host"
                - name: PGPORT
                  value: "5432"
                - name: PGUSER
                  valueFrom:
                    secretKeyRef:
                      name: release-name-postgresql-backup
                      key: PGUSER
                - name: PGPASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: release-name-postgresql-backup
                      key: PGPASSWORD
                - name: POSTGRES_EXTRA_OPTS
                  value: ""
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: release-name-postgresql-backup
                      key: AWS_ACCESS_KEY_ID
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: release-name-postgresql-backup
                      key: AWS_SECRET_ACCESS_KEY
                - name: S3_BUCKET
                  value: "bucket"
                - name: S3_PREFIX
                  value: "postgresql"
                - name: AWS_DEFAULT_REGION
                  value: "us-east-1"
                - name: S3_S3V4
                  value: "no"
                - name: ENCRYPTION_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: release-name-postgresql-backup
                      key: ENCRYPTION_PASSWORD
              resources:
                {}
              securityContext:
                {}
  schedule: "7,27,47 * * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  concurrencyPolicy: "Forbid"
