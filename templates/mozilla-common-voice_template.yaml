---
# Source: mozilla-common-voice/charts/mysql/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mysql-voice
  namespace: default
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-8.4.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
secrets:
  - name: mysql-voice
---
# Source: mozilla-common-voice/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: voice-dev
  annotations:
---
# Source: mozilla-common-voice/charts/mysql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mysql-voice
  namespace: default
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-8.4.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  mysql-root-password: "cWNibzJpR0toTw=="
  mysql-password: "eVhENU9yaU9rYg=="
---
# Source: mozilla-common-voice/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: voice
data:
  CV_DB_ROOT_PASS: ZGVmYXVsdC1ub24tc2VjdXJlLXJvb3QtcGFzc3dvcmQ=
  CV_MYSQLPASS: ZGVmYXVsdC1ub24tc2VjdXJlLXBhc3N3b3Jk
  CV_MYSQLHOST: bXlzcWwtdm9pY2U=
  CV_SECRET: bXktdG9wLXNlY3JldC1zZWNyZXQK
  CV_AUTH0_DOMAIN: YXV0aC5hdXRoMC5jb20K
  CV_AUTH0_CLIENT_ID: ZmFrZS1jbGllbnQtaWQK
  CV_AUTH0_CLIENT_SECRET: ZmFrZS1jbGllbnQtc2VjcmV0Cg==
---
# Source: mozilla-common-voice/charts/mysql/templates/primary/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-voice
  namespace: default
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-8.4.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
data:
  my.cnf: |-
    
    [mysqld]
    default_authentication_plugin=mysql_native_password
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mysql
    plugin_dir=/opt/bitnami/mysql/plugin
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    datadir=/bitnami/mysql/data
    tmpdir=/opt/bitnami/mysql/tmp
    max_allowed_packet=16M
    bind-address=0.0.0.0
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
    log-error=/opt/bitnami/mysql/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci
    
    [client]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mysql/plugin
    
    [manager]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
---
# Source: mozilla-common-voice/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: voice-config
data:
  CV_SERVER_PORT: "9000"
  CV_PROD: "false"
  CV_VERSION: "test"
  CV_DB_ROOT_USER: "root"
  CV_MYSQLUSER: "voice"
  CV_MYSQLDBNAME: "voice"
  CV_MYSQLHOST: "localhost"
  CV_MYSQLPORT:  "\"3306\""
  CV_BUCKET_NAME: "common-voice-bucket"
  CV_CLIP_BUCKET_NAME: "common-voice-bucket-clips-bucket"
  CV_DATASET_BUCKET_NAME: "common-voice-dataset-bucket"
  CV_BUCKET_LOCATION: "us-west-2"
  CV_ENVIRONMENT: "default"
  CV_ADMIN_EMAILS: "[admin@organization.com]"
  CV_REDIS_URL: "redis://voice-dev-redis-master.voice-dev.svc.cluster.local/"
  CV_LAST_DATASET: "default"
---
# Source: mozilla-common-voice/charts/mysql/templates/primary/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: mysql-voice-headless
  namespace: default
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-8.4.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: mysql
      port: 3306
      targetPort: mysql
  selector: 
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: primary
---
# Source: mozilla-common-voice/charts/mysql/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mysql-voice
  namespace: default
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-8.4.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: ClusterIP
  ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: mysql
      nodePort: null
  selector: 
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: primary
---
# Source: mozilla-common-voice/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: voice
  labels:
    app: voice
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "120"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 9000
  - name: https
    port: 443
    targetPort: 9000
  selector:
    app: voice
---
# Source: mozilla-common-voice/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: voice
spec:
  selector:
    matchLabels:
      app: voice
  
  replicas: 1
  
  template:
    metadata:
      labels:
        app: voice
    spec:
      serviceAccountName: voice-dev
      containers:
      - name: web
        args:
        - /bin/sh
        - -c
        - |
          yarn start:prod 2>&1 | tee /code/logs/voice-server.log
        image: mozilla/commonvoice:stage-latest
        ports:
        - containerPort: 9000
        livenessProbe:
          httpGet:
            port: 9000
            path: /api/v1/metrics
          periodSeconds: 10
          initialDelaySeconds: 60
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 1
            memory: 1024Mi
          requests:
            cpu: 500m
            memory: 256Mi
        envFrom:
        - configMapRef:
            name: voice-config
        - secretRef:
            name: voice
        env:
        - name: NEW_RELIC_AGENT_ENABLED
          value: "false"
        - name: NEW_RELIC_APP_NAME
          value:  "voice"
        - name: KUBERNETES_CURRENT_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: logs
          mountPath: /code/logs
      volumes:
      - name: logs
        emptyDir: {}
---
# Source: mozilla-common-voice/charts/mysql/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-voice
  namespace: default
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-8.4.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  selector:
    matchLabels: 
      app.kubernetes.io/name: mysql
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: primary
  serviceName: mysql-voice
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: be7c438c067abb36ddf35572a5cca043ff68526dd674c70233ff99917dd107e5
      labels:
        app.kubernetes.io/name: mysql
        helm.sh/chart: mysql-8.4.2
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: primary
    spec:
      
      serviceAccountName: mysql-voice
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mysql
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: primary
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      containers:
        - name: mysql
          image: docker.io/bitnami/mysql:8.0.23-debian-10-r28
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-voice
                  key: mysql-root-password
            - name: MYSQL_DATABASE
              value: "my_database"
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          resources: 
            limits: {}
            requests: {}
          volumeMounts:
            - name: data
              mountPath: /bitnami/mysql
            - name: config
              mountPath: /opt/bitnami/mysql/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: mysql-voice
  volumeClaimTemplates:
    - metadata:
        name: data
        labels: 
          app.kubernetes.io/name: mysql
          app.kubernetes.io/instance: release-name
          app.kubernetes.io/component: primary
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: mozilla-common-voice/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: voice-ingress
  annotations:
    kubernetes.io/ingress.class: voice-dev
spec:
  rules:
  - host: voice.mozilla.org
    http:
      paths:
      - path: /
        backend:
          serviceName: voice
          servicePort: 9000
  - host: commonvoice.mozilla.org
    http:
      paths:
      - path: /
        backend:
          serviceName: voice
          servicePort: 9000
