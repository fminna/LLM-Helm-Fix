---
# Source: service-broker/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-service-broker
  namespace: default
  labels:
    chart: "service-broker-0.3.1"
    app: "service-broker"
    release: "release-name"
    heritage: "Helm"
---
# Source: service-broker/templates/cluster-service-broker.yaml
kind: Secret
apiVersion: v1
metadata:
  name: release-name-service-broker-accessor-token
  namespace: catalog
  labels:
    chart: "service-broker-0.3.1"
    app: "service-broker"
    release: "release-name"
    heritage: "Helm"
  annotations:
    kubernetes.io/service-account.name: service-catalog-controller-manager
type: kubernetes.io/service-account-token
---
# Source: service-broker/templates/cluster-service-broker.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-service-broker-apiserver-cert
  namespace: default
  labels:
    chart: "service-broker-0.3.1"
    app: "service-broker"
    release: "release-name"
    heritage: "Helm"
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURlRENDQW1DZ0F3SUJBZ0lRZXZ2c3BoZU9lUkprVGFsREdZQk5lekFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMU1UVXdPRE0yTlRCYUZ3MHpOREExTVRNd09ETTJOVEJhTUNZeApKREFpQmdOVkJBTVRHM0psYkdWaGMyVXRibUZ0WlMxelpYSjJhV05sTFdKeWIydGxjakNDQVNJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmF6Vks1RTEwbjZtU0I1SWwzUVBkNG12TDREMEFpbDFtSkkKRjBDcE5ZcFZjUzJzY0FiNWM1MmZwU2Yva2pvR3J1RjR2VHpEbXpCNUFUTnVvZDl4NWhva21sV0YzTWw0d053OQp5V2FvVDMyMng5OFZRN1QyWGI5YXkvODVRWjZxcGNGdzVJOWo3RGkzK2EvL0pjL3Q0K09VMENvRVV0MVBTMFNUCnhLaHNIU2hJdGpwTUxsMVFQQmFTZS9USVIvdmIyRzhXekorSm4xTUVSaFFZb0wvcnJ1cXdoTWUyLzJ5WTB6eWwKMTZiK2FOLzBGRmdFYm9NUlg0YnhMejF4aGY3UEpBNXB2WTJXd3d6dDBNMWlRd09IeDd2UnZaekxjMkdxYlkreQpSSlVML0Mzeks2STNESDFnQW1qakgwLzNmYUZNUkM2YkkwSXRhWElKMUpFYkZiblVOTzBDQXdFQUFhT0J1akNCCnR6QU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUMKTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVYm9WZU9kdmJYVm01TXdWK3JaVDRsWTY5MTdZdwpWd1lEVlIwUkJGQXdUb0lqY21Wc1pXRnpaUzF1WVcxbExYTmxjblpwWTJVdFluSnZhMlZ5TG1SbFptRjFiSFNDCkozSmxiR1ZoYzJVdGJtRnRaUzF6WlhKMmFXTmxMV0p5YjJ0bGNpNWtaV1poZFd4MExuTjJZekFOQmdrcWhraUcKOXcwQkFRc0ZBQU9DQVFFQXNVZTJDSVlwT2hicHY4V2lVWWdQenhXdXZBczBiK3g3c1VDYjVXcDFUTWZEc2U2VQpHZ3hlVFJhSlk1SjE1NEZPRGNHazZ6cTNac3NXaEQyeXQzUlBnNDc0UmI2cVJSSHkrbzNNeGZ5dUxsTjZQQzJzCk82T1BBcUNNOE1EbUJWa2VTQmpHRWFlN0NZeEdMRnRLbTQ0cUtXMFprQXliMGVhaHNqOWF4eCt1eHF4QUEzV2MKNndxbHhyN2toNUhuVlJrZnYwUGZ4WTdHK0owemQ4OXZwSmFWaENGRmxlU2ZHRVd0amg4Skp6d0lFUXJsdDlTWAprejRvM21Tb0V3aitiWnVqc0MvcXQ4UitZZHVqRDhqTW8wWnI0QVJRRXNMN096T1lzN3FidGUwSmI1TVlTS2trCldEUlZRcXBhVkx3blNtT2hUMkVwUXNENTUzTzZ0WFViY3VSQ0pnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMXJOVXJrVFhTZnFaSUhraVhkQTkzaWE4dmdQUUNLWFdZa2dYUUtrMWlsVnhMYXh3CkJ2bHpuWitsSi8rU09nYXU0WGk5UE1PYk1Ia0JNMjZoMzNIbUdpU2FWWVhjeVhqQTNEM0pacWhQZmJiSDN4VkQKdFBaZHYxckwvemxCbnFxbHdYRGtqMlBzT0xmNXIvOGx6KzNqNDVUUUtnUlMzVTlMUkpQRXFHd2RLRWkyT2t3dQpYVkE4RnBKNzlNaEgrOXZZYnhiTW40bWZVd1JHRkJpZ3YrdXU2ckNFeDdiL2JKalRQS1hYcHY1bzMvUVVXQVJ1Cmd4RmZodkV2UFhHRi9zOGtEbW05alpiRERPM1F6V0pEQTRmSHU5RzluTXR6WWFwdGo3SkVsUXY4TGZNcm9qY00KZldBQ2FPTWZUL2Q5b1V4RUxwc2pRaTFwY2duVWtSc1Z1ZFEwN1FJREFRQUJBb0lCQUZhSk8zVnVPOVFPbEkrWgpJM2ZxaWpVektkbndrWFlhMlprTmM0blZhY1lUQUNZbm5aUENFWTZUblM3TS9QUTBZMkp2bHQ2Wi9NQUIxYkVVClExeGJmU0pHWklwYUJRNlRoRENCR3Q4c3NiVjY2WDZLQkpzNHZicDE3MGswbTdWSEZMNHVNWUYyQmUwcWdoSWsKNWVteithbHQvcVVnendGeWgyVGhwbDg0REZ5Q2pTb2NPNGVSb0F0eVVnSlRNTlhETFVxYU9uUXhrUWU5YVlSRApjb3pNd01GUDlJQXZCWXZTVDJnU3pBa3JSZWZ2cnpUQ2VuTDdUeWxKMHlYMTM4OHp3TldPN1BqYUd5NjZlSTV5CnBOWTF6OUwzd1AxeWxsTWNCUDlGT09wUmp2bm9HN1NTa1hXU3FWOExZYk9aM1Bta3FwK01UaURTUTlWNkUrMVEKaHVVNzNPVUNnWUVBNi9LZElXYytnczVsWENBUUV4Ky9DRnVGbDVpMzBrUGJXTGhiMGs2eE5LV2FCZ1hFREdTVgpMQ0tvN1Q2M1crZ1E1ZVl3K09kcy9JZmE4TitqZlFvYnAwQnBHU2VKWUF4SUtZWXArQ0FSN0JaSGNkUm5oS201Ck0zVVNkM3BEa0lQQTBWL3JsckVyU3pFZWdXQWR4VkhyY3FFZGE4cDZnWnFnYUI4bGFBUm5Nck1DZ1lFQTZQSjAKQmY2Mlo2UHVkdkQxWXh1aFdreFlMcGpjS0xWYXY1NG5TYy91TTA3djdNaVFMNjZYc0FpSUduZTJpbCt5V0VKTgpXTTlvRmNUaFRmdEFpcmJRMEVPNkh6aUFiSTlXZmFUN25Jelo1eE0wQmVWTFhlbGdCMGQyNlQ1T3BQdythWnFJCmEwenF4VGNWRS9NMU94bmsvUGZuYnkxL1NGVUlqYlBVQWlTZVNkOENnWUVBcmNBU3NCZDhkQTBUblR6TE9ab0cKTGx4ZlMxeWQrVXdaQ2dOeE1yVGFUOStuUmNvWExkMGY4TWx4Um93SnNMZDdRaUU2YlFEWFJEdXpJZkErVDRVVApDaDRuaHV1VGdWUnFDNUlOOC9lQjJ5NG8zSTFDMGZHK1BVTjRIdDI5UlgyUWoxNm9lV2JzYjhteklpaXFvN1VJCnduZ2MxMVRhMC9nUEtiM042UVJkRG5zQ2dZRUFuallsWlBqMUsvamoralozZzBOOTJCVm9BdVhoQ1dqNjVJL20Kd1RRTzVSd2t5ZDRDUjlBOXg5cFRqaDVtaFI2dncwL3N0bmZQaXBGNE1IMkgvVzVpN2tCQmhmamJDR0JsN3RvQgo1ZmFuL0ZCSGtnV0VwWmplbHJNTDZTaGZRNkRxUnRFay9ETjJkRkdQNkVmVGpIdHUwZjBSVzZvNys0VjlWTGloCk1uOXFYbU1DZ1lCUE40aFlpaFMzRVdjdnVGajh2UkZpYi9DM0RrME9CRnNLYVpVNnhqM204dXJHZVF4TkdoTWYKNnRSa05ZNEN3aXpFdnFicnpPUzYySkY2VzUwczRpMisxQ0oxK04yQjVRTWlDT0VxaW1IMUltQjBpSzdMRW5sQwpKaFQxcVo4TXhFblZXTU51amFnQXViU2hORG95Mms3Z3dpQW9VSkx3SnE5SlN4eE84SzZNL3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: service-broker/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubedb
  namespace: default
  labels:
    chart: "service-broker-0.3.1"
    app: "service-broker"
    release: "release-name"
    heritage: "Helm"
data:
  elasticsearch.yaml: |
    id: 315fc21c-829e-4aa1-8c16-f7921c33550d
    name: elasticsearch
    description: KubeDB managed ElasticSearch
    bindable: true
    planupdatable: true
    metadata:
      displayName: KubeDB managed ElasticSearch
      imageUrl: https://cdn.appscode.com/images/logo/databases/elasticsearch.png
    plans:
    - id: c4e99557-3a81-452e-b9cf-660f01c155c0
      name: demo-elasticsearch
      description: Demo Standalone Elasticsearch database
      free: true
    - id: 2f05622b-724d-458f-abc8-f223b1afa0b9
      name: demo-elasticsearch-cluster
      description: Demo Elasticsearch cluster
      free: true
    - id: 6fa212e2-e043-4ae9-91c2-8e5c4403d894
      name: elasticsearch
      description: Elasticsearch cluster with custom specification
      free: true
  memcached.yaml: |
    id: d88856cb-fe3f-4473-ba8b-641480da810f
    name: memcached
    description: KubeDB managed Memcached
    bindable: true
    planupdatable: true
    metadata:
      displayName: KubeDB managed Memcached
      imageUrl: https://cdn.appscode.com/images/logo/databases/memcached.png
    plans:
    - id: af1ce2dc-5734-4e41-aaa2-8aa6a58d688f
      name: demo-memcached
      description: Demo Memcached
      free: true
    - id: d40e49b2-f8fb-4d47-96d3-35089bd0942d
      name: memcached
      description: Memcached with custom specification
      free: true
  mongodb.yaml: |
    id: d690058d-666c-45d8-ba98-fcb9fb47742e
    name: mongodb
    description: KubeDB managed MongoDB
    bindable: true
    planupdatable: true
    metadata:
      displayName: KubeDB managed MongoDB
      imageUrl: https://cdn.appscode.com/images/logo/databases/mongodb.png
    plans:
    - id: 498c12a6-7a68-4983-807b-75737f99062a
      name: demo-mongodb
      description: Demo Standalone MongoDB database
      free: true
    - id: 6af19c54-7757-42e5-bb74-b8350037c4a2
      name: demo-mongodb-cluster
      description: Demo MongoDB cluster
      free: true
    - id: e8f87ba6-0711-42db-a663-a3c75b78a541
      name: mongodb
      description: MongoDB database with custom specification
      free: true
  mysql.yaml: |
    id: 938a70c5-f2bc-4658-82dd-566bed7797e9
    name: mysql
    description: KubeDB managed MySQL
    bindable: true
    planupdatable: true
    metadata:
      displayName: KubeDB managed MySQL
      imageUrl: https://cdn.appscode.com/images/logo/databases/mysql.png
    plans:
    - id: 1fd1abf1-e8e1-44a2-8214-bf0fd1ce9417
      name: demo-mysql
      description: Demo MySQL database
      free: true
    - id: 6ed1ab9e-a640-4f26-9328-423b2e3816d7
      name: mysql
      description: MySQL database with custom specification
      free: true
  postgresql.yaml: |
    id: 2010d83f-d908-4d9f-879c-ce8f5f527f2a
    name: postgresql
    description: KubeDB managed PostgreSQL
    bindable: true
    planupdatable: true
    metadata:
      displayName: KubeDB managed PostgreSQL
      imageUrl: https://cdn.appscode.com/images/logo/databases/postgresql.png
    plans:
    - id: c4bcf392-7ebb-4623-a79d-13d00d761d56
      name: demo-postgresql
      description: Demo Standalone PostgreSQL database
      free: true
    - id: 41818203-0e2d-4d30-809f-a60c8c73dae8
      name: demo-ha-postgresql
      description: Demo HA PostgreSQL database
      free: true
    - id: 13373a9b-d5f5-4d9a-88df-d696bbc19071
      name: postgresql
      description: PostgreSQL database with custom specification
      free: true
  redis.yaml: |
    id: ccfd1c81-e59f-4875-a39f-75ba55320ce0
    name: redis
    description: KubeDB managed Redis
    bindable: true
    planupdatable: true
    metadata:
      displayName: KubeDB managed Redis
      imageUrl: https://cdn.appscode.com/images/logo/databases/redis.png
    plans:
    - id: 4b6ad8a7-272e-4cfd-bb38-5b9d4bd3962f
      name: demo-redis
      description: Demo Redis
      free: true
    - id: 45716530-cadb-4247-b06a-24a34200d734
      name: redis
      description: Redis with custom specification
      free: true
---
# Source: service-broker/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-service-broker
  labels:
    chart: "service-broker-0.3.1"
    app: "service-broker"
    release: "release-name"
    heritage: "Helm"
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - appbindings
  verbs: ["get"]
- apiGroups:
  - servicecatalog.k8s.io
  resources:
  - serviceinstances
  verbs: ["list"]
- apiGroups:
  - servicecatalog.k8s.io
  resources:
  - clusterservicebrokers
  verbs: ["delete"]
- apiGroups:
  - ""
  resources:
  - nodes
  verbs: ["list"]
- apiGroups:
  - ""
  resources:
  - secrets
  verbs: ["get"]
- apiGroups:
  - kubedb.com
  resources:
  - mysqls
  - postgreses
  - elasticsearches
  - mongodbs
  - memcacheds
  - redises
  verbs: ["get", "list", "create", "delete"]
---
# Source: service-broker/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-service-broker
  labels:
    chart: "service-broker-0.3.1"
    app: "service-broker"
    release: "release-name"
    heritage: "Helm"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-service-broker
subjects:
  - kind: ServiceAccount
    name: release-name-service-broker
    namespace: default
---
# Source: service-broker/templates/cluster-service-broker.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-service-broker-accessor
  labels:
    chart: "service-broker-0.3.1"
    app: "service-broker"
    release: "release-name"
    heritage: "Helm"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: servicecatalog.k8s.io:broker-accessor
subjects:
  - kind: ServiceAccount
    name: service-catalog-controller-manager
    namespace: catalog
---
# Source: service-broker/templates/cluster-service-broker.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-service-broker-auth-delegator
  labels:
    chart: "service-broker-0.3.1"
    app: "service-broker"
    release: "release-name"
    heritage: "Helm"
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: release-name-service-broker
  namespace: default
---
# Source: service-broker/templates/cluster-service-broker.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-service-broker-extension-server-authentication-reader
  namespace: kube-system
  labels:
    chart: "service-broker-0.3.1"
    app: "service-broker"
    release: "release-name"
    heritage: "Helm"
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: release-name-service-broker
  namespace: default
---
# Source: service-broker/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-service-broker
  namespace: default
  labels:
    chart: "service-broker-0.3.1"
    app: "service-broker"
    release: "release-name"
    heritage: "Helm"
spec:
  ports:
  # Port used to expose admission webhook apiserver
  - name: api
    port: 443
    targetPort: 8443
  selector:
    app: service-broker
    release: release-name
---
# Source: service-broker/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-service-broker
  namespace: default
  labels:
    chart: "service-broker-0.3.1"
    app: "service-broker"
    release: "release-name"
    heritage: "Helm"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-broker
      release: release-name
  template:
    metadata:
      labels:
        chart: "service-broker-0.3.1"
        app: "service-broker"
        release: "release-name"
        heritage: "Helm"
    spec:
      serviceAccountName: release-name-service-broker
      containers:
      - name: broker
        image: "appscode/service-broker:0.3.1"
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --logtostderr
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --use-kubeapiserver-fqdn-for-aks=true
        - --enable-analytics=true
        - --catalog-path=/etc/config/catalog
        - --catalog-names="kubedb"
        - --defaultNamespace=default
        ports:
        - containerPort: 8443
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 5
        resources:
          {}
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
        - mountPath: /etc/config/catalog/kubedb
          name: kubedb-volume
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: release-name-service-broker-apiserver-cert
      - name: kubedb-volume
        configMap:
          name: kubedb
          # defaultMode: 511
      nodeSelector:
        beta.kubernetes.io/arch: amd64
        beta.kubernetes.io/os: linux
---
# Source: service-broker/templates/cluster-service-broker.yaml
apiVersion: servicecatalog.k8s.io/v1beta1
kind: ClusterServiceBroker
metadata:
  name: release-name-service-broker
  labels:
    chart: "service-broker-0.3.1"
    app: "service-broker"
    release: "release-name"
    heritage: "Helm"
spec:
  url: https://release-name-service-broker.default.svc
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRTldUWVM2L1NvbzdmV1Vqc1IvMnhFekFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMU1UVXdPRE0yTlRCYUZ3MHpOREExTVRNd09ETTJOVEJhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF0ZzRoCmRqOTF1YVl2Q2tWL2VScVBQR2Zjdk9BVXZydjJ4UjNxYVptSEUvRFlWQmx0c1RUaHgxWmgyaDltYk5ZUFNmTisKRE54T3pmZEdIRXZUUHlidmt5UzdDRklrczQ4YjF1L3R0T2srY0pkRS9aN04vSWdwUzNTUk9FclVZOTJOaHZEWgpuRmtBZUxIa3pzTGw5dU82TkxsS1JRTGFpMnRER1JyV0o4b0dldVV2QWZsbUF3YUIwZ2o4TWlRK01HRk9UTTZrCm1zL0pnRWtvb1RwdFhtek1pdk5SSnZOQVIyM2ZkNjBlaUFkR0VuSlZLWEtqczl0NjREMzFsWFVHNS9Rd0pQS3MKaDFYSVRCaXgveVh6dHN0c0MxV1U5aFQzUVR5RXJDNDFUbDJnZWhHMjF6VTV3SFVzNVZqNEliZ0IwejJ4SC84ZgpHdkN2Ynl4T21aNExtcFdkU1FJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRkc2RlhqbmIyMTFadVRNRmZxMlUrSldPdmRlMk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXVxbnNlVnlscwowNDRnMTQxMTcwTGZYVUJxOFJVeU4xQkhKc3AzWHBQeW5RQ0N1dWFiR0JLcS9ZVzBCZTJWdnJhLy8wYzZHQmZYClhoZDFxWHJGUTk5bjQ5K0daTlVKWjhEWklpZTlhVWRvL3BaVitWNXYwWVRQSURtUm53ZTBKN0ZtVDFud2dkWVIKclRBTnJ2UXpMNXRST1N3bDkxTG8zOWU0VHdUR0RjRXRyZG12V01wYlZYSWxKaFZUNXExSmJlQXJFMUVJL1M3cwpIZ1NNbncvc282azhoN3ZQVlMybWNGYlMwUW5rWkhOdGtvQXI4RTFuMmFRdzkyQTN2TDJZMDFBRGVkUkdJU1BaCnY0MEpTUDBzM2YrV05uQ2hpbzFneGF0QWduNmNrcTMvZXlSSW55UUo4bnNvV1JMamZvUmhLdWdvRE1iL2p0ZlYKby8wN2V1c1BFYlFiCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  authInfo:
    bearer:
      secretRef:
        name: release-name-service-broker-accessor-token
        namespace: catalog
---
# Source: service-broker/templates/broker-accessor.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: servicecatalog.k8s.io:broker-accessor
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- nonResourceURLs: ["/v2/*"]
  verbs: ["get", "put", "patch", "delete"]
---
# Source: service-broker/templates/cleaner.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-cleaner
  labels:
    chart: "service-broker-0.3.1"
    app: "service-broker"
    release: "release-name"
    heritage: "Helm"
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 120
  template:
    spec:
      serviceAccountName: release-name-service-broker
      containers:
      - name: busybox
        image: appscode/kubectl:v1.12
        command:
          - sh
          - -c
          - "sleep 2; kubectl delete clusterservicebroker release-name-service-broker || true"
        imagePullPolicy: IfNotPresent
      restartPolicy: Never
