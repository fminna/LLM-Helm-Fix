---
# Source: conduit/templates/pvc-data.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-conduit-data
  labels:
    app.kubernetes.io/name: conduit
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: conduit-0.1.6
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "16Gi"
---
# Source: conduit/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-conduit
  labels:
    app.kubernetes.io/name: conduit
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: conduit-0.1.6
spec:
  clusterIP: "None"
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: http
  selector:
    app.kubernetes.io/name: conduit
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: conduit-0.1.6
  type: ClusterIP
---
# Source: conduit/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name:  release-name-conduit
  labels:
    app.kubernetes.io/name: conduit
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: conduit-0.1.6
spec:
  replicas: 1
  serviceName: release-name-conduit
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app.kubernetes.io/name: conduit
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/managed-by: Helm
      helm.sh/chart: conduit-0.1.6
  template:
    metadata:
      labels:
        app.kubernetes.io/name: conduit
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: conduit-0.1.6
    spec:
      securityContext:
        sysctls:
          - name: net.ipv4.ip_unprivileged_port_start
            value: "0"
      containers:
        - name: conduit
          image: "matrixconduit/matrix-conduit:v0.6.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
          volumeMounts:
            - mountPath: /data
              name: data
              subPath: data
          securityContext:
            capabilities:
              add:
                - NET_BIND_SERVICE
          env:
            - name: CONDUIT_SERVER_NAME
              value: "your.server.name"
            - name: CONDUIT_DATABASE_PATH
              value: "/data/db"
            - name: CONDUIT_DATABASE_BACKEND
              value: "rocksdb"
            - name: CONDUIT_PORT
              value: "80"
            - name: CONDUIT_MAX_REQUEST_SIZE
              value: "20000000"
            - name: CONDUIT_TRUSTED_SERVERS
              value: "[]"
            - name: CONDUIT_ADDRESS
              value: "0.0.0.0"
            - name: RUST_LOG
              value: info
          readinessProbe:
            httpGet:
              path: /_matrix/federation/v1/version
              port: http
            periodSeconds: 2
            failureThreshold: 5
          livenessProbe:
            httpGet:
              path: /_matrix/federation/v1/version
              port: http
            periodSeconds: 2
            failureThreshold: 5
          startupProbe:
            httpGet:
              path: /_matrix/federation/v1/version
              port: http
            failureThreshold: 240
            periodSeconds: 2
          resources:
            limits:
              cpu: "2"
              memory: 512Mi
            requests:
              cpu: "1"
              memory: 256Mi
      nodeSelector:
        {}
      affinity:
        {}
      tolerations:
        []
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: release-name-conduit-data
