---
# Source: reviewboard/templates/configmap/nginx.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx
data:
  default.conf: |
    upstream reviewboard {
        server reviewboard:80;
    }

    server {
        server_name 80;
        listen [::]:80;
        listen 80;

        root /var/www/reviewboard/htdocs;

        location / {
            proxy_pass http://reviewboard;
            proxy_redirect off;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_set_header X-Forwarded-Ssl off;

            client_max_body_size 10m;
            client_body_buffer_size 128k;
            proxy_connect_timeout 90;
            proxy_send_timeout 90;
            proxy_read_timeout 90;
            proxy_headers_hash_max_size 512;
            proxy_buffer_size 4k;
            proxy_buffers 4 32k;
            proxy_busy_buffers_size 64k;
            proxy_temp_file_write_size 64k;
        }

        location /media/ {
            alias /var/www/reviewboard/htdocs/media/;
            expires max;
            add_header Cache-Control public;
        }

        location /static/ {
            alias /var/www/reviewboard/htdocs/static/;
            expires max;
            add_header Cache-Control public;
        }

        location /errordocs/ {
            alias /var/www/reviewboard/htdocs/errordocs/;
            expires 5d;
        }

        location /robots.txt {
            alias /var/www/reviewboard/htdocs/robots.txt;
            expires 5d;
        }
    }
---
# Source: reviewboard/templates/pvcs/reviewboard.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: reviewboard
  labels:
    app.kubernetes.io/name: reviewboard
    helm.sh/chart: reviewboard-0.0.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: reviewboard/templates/services/memcached.yaml
apiVersion: v1
kind: Service
metadata:
  name: memcached
  labels:
    app.kubernetes.io/name: memcached
    helm.sh/chart: reviewboard-0.0.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: memcached
      port: 11211
      targetPort: 11211
  selector:
    app.kubernetes.io/name: reviewboard
    app.kubernetes.io/instance: release-name
---
# Source: reviewboard/templates/services/nginx.yaml
apiVersion: v1
kind: Service
metadata:
  name: nginx
  labels:
    app.kubernetes.io/name: nginx
    helm.sh/chart: reviewboard-0.0.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: http
  selector:
    app.kubernetes.io/name: reviewboard
    app.kubernetes.io/instance: release-name
---
# Source: reviewboard/templates/services/reviewboard.yaml
apiVersion: v1
kind: Service
metadata:
  name: reviewboard
  labels:
    app.kubernetes.io/name: reviewboard
    helm.sh/chart: reviewboard-0.0.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: container
  selector:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/instance: release-name
---
# Source: reviewboard/templates/deployments/memcached.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: memcached
  labels:
    app.kubernetes.io/name: memcached
    helm.sh/chart: reviewboard-0.0.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: memcached
      app.kubernetes.io/instance: release-name
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: memcached
        app.kubernetes.io/instance: release-name
    spec:
      containers:
        - name: memcached
          image: memcached:alpine
          imagePullPolicy: IfNotPresent
          args: ["-m", "128"]
          ports:
            - name: memcached
              containerPort: 11211
---
# Source: reviewboard/templates/deployments/nginx.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app.kubernetes.io/name: nginx
    helm.sh/chart: reviewboard-0.0.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nginx
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nginx
        app.kubernetes.io/instance: release-name
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          readOnly: true
          subPath: default.conf
        - name: sitedir
          mountPath: /var/www/reviewboard

      volumes:
      - name: nginx-config
        configMap:
          name: nginx
      - name: sitedir
        persistentVolumeClaim:
          claimName: reviewboard
---
# Source: reviewboard/templates/deployments/reviewboard.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviewboard
  labels:
    app.kubernetes.io/name: reviewboard
    helm.sh/chart: reviewboard-0.0.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: reviewboard
      app.kubernetes.io/instance: release-name
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: reviewboard
        app.kubernetes.io/instance: release-name

    spec:
      containers:
      - name: reviewboard
        image: beanbag/reviewboard:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        env:
        - name: DATABASE_TYPE
          value: 
        - name: COMPANY
          value: Docker Compose Test
        - name: DATABASE_SERVER
          value: 
        - name: DATABASE_USERNAME
          value: 
        - name: DATABASE_PASSWORD
          value: 
        - name: DOMAIN
          value: localhost
        - name: DATABASE_NAME
          value: 
        - name: MEMCACHED_SERVER
          value: memcached

        ports:
          - name: container
            containerPort: 8080
        volumeMounts:
          - name: sitedir
            mountPath: /site

      volumes:
        - name: sitedir
          persistentVolumeClaim:
            claimName: reviewboard
---
# Source: reviewboard/templates/ingresses/memcached.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: memcached-ingress
  labels:
    app.kubernetes.io/name: memcached
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  #
  # tls:
  #   - hosts:
  #       - 
  #     secretName: 
  #
  rules:
  - host:
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: memcached
            port:
              number: 11211
---
# Source: reviewboard/templates/ingresses/nginx.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx
  labels:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/instance: release-name
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  #
  # tls:
  #   - hosts:
  #       - 
  #     secretName: 
  #
  rules:
    - host: 
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nginx
                port:
                  number: 80
---
# Source: reviewboard/templates/ingresses/reviewboard.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: reviewboard
  labels:
    app.kubernetes.io/name: reviewboard
    helm.sh/chart: reviewboard-0.0.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  rules:
    - host: 
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: reviewboard
                port:
                  name: http
