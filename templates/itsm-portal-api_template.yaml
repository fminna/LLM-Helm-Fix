---
# Source: itsm-portal-api/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-itsm-portal-api
  labels:
    helm.sh/chart: itsm-portal-api-0.3.0
    app.kubernetes.io/name: itsm-portal-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.0.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: itsm-portal-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-itsm-portal-api
  labels:
    helm.sh/chart: itsm-portal-api-0.3.0
    app.kubernetes.io/name: itsm-portal-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: itsm-portal-api
    app.kubernetes.io/instance: release-name
---
# Source: itsm-portal-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-itsm-portal-api
  labels:
    helm.sh/chart: itsm-portal-api-0.3.0
    app.kubernetes.io/name: itsm-portal-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: itsm-portal-api
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: itsm-portal-api
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-itsm-portal-api
      securityContext:
        {}
      containers:
        - name: itsm-portal-api
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
          image: "pub-registry.dev.witcom.services/witcom/itsm-portal-api:2.0.2"
          imagePullPolicy: IfNotPresent
          env:
            - name: DB_DATABASE
              value: portal-api
            - name: DB_HOST
              value: portal-api-db
            - name: DB_USER
              value: portal-api
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-itsm-portal-api-db
                  key: secret
            - name: DB_CREATE_TABLES
              value: "1"
            - name: SEARCH_HOST
              value: 
            - name: SEARCH_PREFIX
              value: itsm-base
            - name: KEYCLOAK_AUTH_SERVER_URL
              value: 
            - name: KEYCLOAK_REALM
              value: 
            - name: KEYCLOAK_RESOURCE
              value: 
            - name: KEYCLOAK_RESOURCE_SECRET
              valueFrom:
                secretKeyRef:
                  name: release-name-itsm-portal-api-oauth
                  key: secret
            - name: SESSION_SECRET
              value: 1e1E2qi3w4mM9KDs
            - name: EXPOSE_DOCS
              value: "1"
            - name: TZ
              value: Europe/Berlin
            #additional config 
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: itsm-portal-api/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-itsm-portal-api-test-connection"
  labels:
    helm.sh/chart: itsm-portal-api-0.3.0
    app.kubernetes.io/name: itsm-portal-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.0.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-itsm-portal-api:8080']
  restartPolicy: Never
