---
# Source: krateo-bff/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-krateo-bff
  labels:
    helm.sh/chart: krateo-bff-0.18.1
    app.kubernetes.io/name: krateo-bff
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.22.1"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: krateo-bff/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-krateo-bff
  labels:
    helm.sh/chart: krateo-bff-0.18.1
    app.kubernetes.io/name: krateo-bff
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.22.1"
    app.kubernetes.io/managed-by: Helm
data:
  KRATEO_BFF_DEBUG: "false"
  KRATEO_BFF_PORT: "8081"
  AUTHN_STORE_NAMESPACE: default
  KRATEO_BFF_CORS: "true"
  KRATEO_BFF_DUMP_ENV: "false"
  KUBE_SERVER_URL: https://kubernetes.default.svc
  KUBE_PROXY_URL: https://krateo-gateway.krateo-system.svc:8443
---
# Source: krateo-bff/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-krateo-bff
  labels:
    helm.sh/chart: krateo-bff-0.18.1
    app.kubernetes.io/name: krateo-bff
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.22.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - get
  - list
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  - rolebindings
  - clusterroles
  - clusterrolebindings
  verbs:
  - get
  - list
# krateo bff crds
- apiGroups:
  - widgets.ui.krateo.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - layout.ui.krateo.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - core.krateo.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apps.krateo.io
  resources:
  - '*'
  verbs:
  - '*'
---
# Source: krateo-bff/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-krateo-bff
  labels:
    helm.sh/chart: krateo-bff-0.18.1
    app.kubernetes.io/name: krateo-bff
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.22.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name:  release-name-krateo-bff
subjects:
- kind: ServiceAccount
  name: release-name-krateo-bff
  namespace: default
---
# Source: krateo-bff/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-krateo-bff
  labels:
    helm.sh/chart: krateo-bff-0.18.1
    app.kubernetes.io/name: krateo-bff
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.22.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8081
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: krateo-bff
    app.kubernetes.io/instance: release-name
---
# Source: krateo-bff/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-krateo-bff
  labels:
    helm.sh/chart: krateo-bff-0.18.1
    app.kubernetes.io/name: krateo-bff
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.22.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: krateo-bff
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: krateo-bff-0.18.1
        app.kubernetes.io/name: krateo-bff
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "0.22.1"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: release-name-krateo-bff
      securityContext:
        {}
      containers:
        - name: release-name-krateo-bff
          envFrom:
            - configMapRef:
                name: release-name-krateo-bff
          securityContext:
            {}
          image: "ghcr.io/krateoplatformops/krateo-bff:0.22.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /apis/health
              port: http
          readinessProbe:
            httpGet:
              path: /apis/health
              port: http
          resources:
            {}
