---
# Source: space-engineers/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-space-engineers
  labels:
    helm.sh/chart: space-engineers-1.0.2
    app.kubernetes.io/name: space-engineers
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: space-engineers/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-space-engineers
  labels:
    helm.sh/chart: space-engineers-1.0.2
    app.kubernetes.io/name: space-engineers
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: tcp
      protocol: TCP
      name: tcp
    - port: 27016
      targetPort: udp
      protocol: UDP
      name: udp
  selector:
    app.kubernetes.io/name: space-engineers
    app.kubernetes.io/instance: release-name
---
# Source: space-engineers/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-space-engineers
  labels:
    helm.sh/chart: space-engineers-1.0.2
    app.kubernetes.io/name: space-engineers
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: space-engineers
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: space-engineers
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-space-engineers
      securityContext:
        {}
      initContainers:
        - name: space-engineers-init
          image: ubuntu:xenial
          command: ['bash', '-c']
          args: 
            - echo "Installing required packages";
              apt-get update && apt-get install wget unzip -y;
              echo "Ensuring Directory Structure is Correct";
              mkdir -p /appdata/space-engineers/SpaceEngineersDedicated;
              mkdir -p /appdata/space-engineers/steamcmd; 
              mkdir -p /appdata/space-engineers/World; 
              mkdir -p /appdata/space-engineers/Plugins;
              echo "Directory Check Complete";
              echo "Checking if World exists";
              if [ ! -f /appdata/space-engineers/World/*.sbc ]; then 
                echo "World not found, initalizing empty star system..."; 
                wget https://github.com/mmmaxwwwell/space-engineers-dedicated-docker-linux/blob/main/star-system.zip?raw=true; 
                unzip star-system.zip?raw=true -d /appdata/space-engineers; 
                mv /appdata/space-engineers/SpaceEngineers-Dedicated.cfg /appdata/space-engineers/SpaceEngineersDedicated/;
                chmod -R 777 /appdata;
                echo "Done"; 
              fi;
              echo "Complete";
          volumeMounts:
          - name: appdata
            mountPath: /appdata
      containers:
        - name: space-engineers
          securityContext:
            {}
          image: "mmmaxwwwell/space-engineers-dedicated-docker-linux:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: tcp
              containerPort: 8080
              protocol: TCP
            - name: udp
              containerPort: 27016
              protocol: UDP
          resources:
            {}
          volumeMounts:
          - name: appdata
            mountPath: /appdata
      volumes:
      - name: appdata
        emptyDir: {}
---
# Source: space-engineers/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-space-engineers-test-connection"
  labels:
    helm.sh/chart: space-engineers-1.0.2
    app.kubernetes.io/name: space-engineers
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-space-engineers:']
  restartPolicy: Never
