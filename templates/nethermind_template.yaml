---
# Source: nethermind/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: release-name-nethermind
  labels:
    app.kubernetes.io/name: nethermind
    helm.sh/chart: nethermind-2.5.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    client-type: execution
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nethermind
      app.kubernetes.io/instance: release-name
      client-type: execution
---
# Source: nethermind/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-nethermind
  labels:
    app.kubernetes.io/name: nethermind
    helm.sh/chart: nethermind-2.5.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    client-type: execution
---
# Source: nethermind/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-nethermind
  labels:
    app.kubernetes.io/name: nethermind
    helm.sh/chart: nethermind-2.5.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    client-type: execution
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
---
# Source: nethermind/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-nethermind
  labels:
    app.kubernetes.io/name: nethermind
    helm.sh/chart: nethermind-2.5.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    client-type: execution
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-nethermind
subjects:
  - kind: ServiceAccount
    name: release-name-nethermind
    namespace: default
---
# Source: nethermind/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-nethermind
  labels:
    app.kubernetes.io/name: nethermind
    helm.sh/chart: nethermind-2.5.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    client-type: execution
rules:
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
---
# Source: nethermind/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-nethermind
  labels:
    app.kubernetes.io/name: nethermind
    helm.sh/chart: nethermind-2.5.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    client-type: execution
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-nethermind
subjects:
  - kind: ServiceAccount
    name: release-name-nethermind
---
# Source: nethermind/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-nethermind
  labels:
    app.kubernetes.io/name: nethermind
    helm.sh/chart: nethermind-2.5.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    client-type: execution
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 8545
      targetPort: json-rest
      protocol: TCP
      name: json-rest
    - port: 8546
      targetPort: json-ws
      protocol: TCP
      name: json-ws
    - port: 8008
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: nethermind
    app.kubernetes.io/instance: release-name
    client-type: execution
---
# Source: nethermind/templates/statefulset.yaml
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: release-name-nethermind
  labels:
    app.kubernetes.io/name: nethermind
    helm.sh/chart: nethermind
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    client-type: execution
spec:
  replicas: 1
  podManagementPolicy: "Parallel"
  selector:
    matchLabels:
      app.kubernetes.io/name: nethermind
      app.kubernetes.io/instance: release-name
      client-type: execution
  serviceName: release-name-nethermind
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nethermind
        app.kubernetes.io/instance: release-name
        client-type: execution
    spec:
      terminationGracePeriodSeconds: 300
      serviceAccountName: release-name-nethermind
      priorityClassName: ""
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      initContainers:
        - name: init
          image: "docker.io/bitnami/kubectl:1.24"
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          command:
            - sh
            - -c
            - >
              echo "Namespace: ${POD_NAMESPACE} Pod: ${POD_NAME}";
              mkdir -p /data && chown -R 1000:1000 /data;
          volumeMounts:
            - name: env-nodeport
              mountPath: /env
      containers:
        - name: nethermind
          image: "docker.io/nethermind/nethermind:1.26.0"
          imagePullPolicy: IfNotPresent
          workingDir: /data/nethermind
          command:
            - sh
            - -ac
            - >
              exec /nethermind/nethermind
              --config=mainnet
              --datadir=/data/nethermind
              --JsonRpc.Enabled=true
              --JsonRpc.EnabledModules=Eth,Subscribe,Trace,TxPool,Web3,Personal,Proof,Net,Parity,Health
              --JsonRpc.Host=0.0.0.0
              --JsonRpc.Port=8545
              --JsonRpc.WebSocketsPort=8546
              --Metrics.Enabled=true
              --Metrics.ExposePort=8008
              --Network.ExternalIp=$(POD_IP)
              --Network.P2PPort=30303
              --Network.DiscoveryPort=30303
          ports:
            - name: json-rest
              containerPort: 8545
              protocol: TCP
            - name: json-ws
              containerPort: 8546
              protocol: TCP
            - name: metrics
              containerPort: 8008
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /data/nethermind
            - name: env-nodeport
              mountPath: /env
          resources:
            {}
        - name: sidecar
          image: "europe-west4-docker.pkg.dev/stakewiselabs/public/ethnode-sidecar:v1.0.6"
          imagePullPolicy: IfNotPresent
          env:
            - name: SERVER_BINDADDR
              value: "0.0.0.0:3000"
            - name: CLIENT_PORT
              value: "8545"
          ports:
            - containerPort: 3000
              name: sidecar
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 900
            timeoutSeconds: 3
            periodSeconds: 30
            failureThreshold: 3
            successThreshold: 1
            httpGet:
              path: /eth1/liveness
              port: sidecar
              scheme: HTTP
          readinessProbe:
            initialDelaySeconds: 60
            timeoutSeconds: 3
            periodSeconds: 30
            failureThreshold: 30
            successThreshold: 2
            httpGet:
              path: /eth1/readiness
              port: sidecar
              scheme: HTTP
      volumes:
        - name: env-nodeport
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/name: nethermind
          helm.sh/chart: nethermind
          app.kubernetes.io/instance: release-name
          app.kubernetes.io/managed-by: Helm
          client-type: execution
      spec:
        accessModes: [ReadWriteOnce]
        storageClassName: 
        resources:
          requests:
            storage: "250Gi"
