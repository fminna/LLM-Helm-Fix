---
# Source: git-provider/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: git-provider
---
# Source: git-provider/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: git-provider
rules:
  - apiGroups: ["git.krateo.io"]
    resources: ["repoes"]
    verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
  
  - apiGroups: ["git.krateo.io"]
    resources: ["repoes/status"]
    verbs: ["get", "patch", "update"]
  
  - apiGroups: [""]
    resources: ["secrets", "configmaps"]
    verbs: ["get", "list", "watch"]
  
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch", "update"]
---
# Source: git-provider/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: git-provider
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: git-provider
subjects:
- kind: ServiceAccount
  name: git-provider
  namespace: default
---
# Source: git-provider/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: git-provider
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: git-provider
      app.kubernetes.io/instance: release-name
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      name: git-provider
      namespace: default
      labels:
        app.kubernetes.io/name: git-provider
        app.kubernetes.io/instance: release-name
    spec:
      containers:
      - name: git-provider
        image: ghcr.io/krateoplatformops/git-provider:0.4.1
        imagePullPolicy: IfNotPresent
        env:
          - name: GIT_PROVIDER_DEBUG
            value: "true"
          - name: GIT_PROVIDER_POLL_INTERVAL
            value: 3m
          - name: GIT_PROVIDER_SERVICE_PORT_HACK
            value: "false"
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          runAsGroup: 2000
          runAsNonRoot: true
          runAsUser: 2000
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
      serviceAccount: git-provider
      serviceAccountName: git-provider
      terminationGracePeriodSeconds: 30
