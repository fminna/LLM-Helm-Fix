---
# Source: kafka-eventrouter-consumer/templates/base.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kafka-eventrouter-consumer
  labels:
    helm.sh/chart: kafka-eventrouter-consumer-0.1.2
    app.kubernetes.io/name: kafka-eventrouter-consumer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: kafka-eventrouter-consumer/templates/base.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-service
  labels:
    helm.sh/chart: kafka-eventrouter-consumer-0.1.2
    app.kubernetes.io/name: kafka-eventrouter-consumer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app.kubernetes.io/name: kafka-eventrouter-consumer
    app.kubernetes.io/instance: release-name
---
# Source: kafka-eventrouter-consumer/templates/base.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  kafka-eventrouter-consumer
  namespace: default
  labels:
    helm.sh/chart: kafka-eventrouter-consumer-0.1.2
    app.kubernetes.io/name: kafka-eventrouter-consumer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kafka-eventrouter-consumer
      app.kubernetes.io/instance: release-name
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        helm.sh/chart: kafka-eventrouter-consumer-0.1.2
        app.kubernetes.io/name: kafka-eventrouter-consumer
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "0.1.2"
        app.kubernetes.io/managed-by: Helm
    spec:
      terminationGracePeriodSeconds: 60
      serviceAccountName: release-name-kafka-eventrouter-consumer
      securityContext:
        {}
      containers:
        - name: kafka-eventrouter-consumer
          securityContext:
            {}
          image: "ghcr.io/krateoplatformops/kafka-eventrouter-consumer:0.1.2"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            {}
          env:
            - name: KAFKA_EVENTROUTER_CONSUMER_PORT
              value: 8080
            - name: KAFKA_EVENTROUTER_CONSUMER_DEBUG
              value: "false"
            - name: KAFKA_EVENTROUTER_CONSUMER_BROKERS
              value: 127.0.0.1:9092
            - name: KAFKA_EVENTROUTER_CONSUMER_TOPIC
              value: test-topic
