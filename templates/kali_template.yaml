---
# Source: kali/templates/auth-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-kali-auth
data:

  authorized_keys: ""
---
# Source: kali/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-kali
data:
  server_key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBd2FuZkIvY2lNTERsK29JZ3Q1M2NOLzQrc1h3UFMzM0ZqOGZHYmhEeFppcmhGSml5CmxRNjdUZGNjeDR2eGFaVTVXZ1dxdmsxTlgva3RxMnc4WTZEVnlURWs0T3FHV3A0Vm1DZXhwaHdjenNKQm40ZU4KTDJkdkljMWtaRmZCVTFSalJYRmJ1L0RGMEZpMkhZUkgxM2hqZVU2QnNPQ1BQMzRjVWJhT0JSYStEcysrb3lkRwpQaHpGVVFyM2FJVE8wcjFhaDlPQWtLcklxVjgwa2tWRGYvZkgrdVZJTmxkaWVFZjZrL3Q2UlBKazZ0Q0h1cGR1CjRMOTNpK215aytJQytkR1BRTXFDSnRGNFhnOHl6MHRKVGxxem9WOGo2Y2hzdk5xMEdIaWpKTWpxekNrSWRMdVYKNm1rTkZQVGwwUUF6Y1hqc0ZaZ1k0eXd2LzNhQ1NDYjdPZW5tZXpLM2RxN0RLZXg0SDFqMytyV0w2OUZtSzEzaQpzQXZHcWRrc2l4QjRnSnhkaVM5WWZ1ZElJSGJxbTJzakxHd004N0dqNE1qRlpLajZTZ2FKVi9Xd1REMnZtSzlOCm5VOGM5L0NFbmszUFRPRnEzazE0d2pSQ29meStKYlJwbjA1OUt0ejZMKyt3YkdXdmdLVTVYU2p2bHR3cGEvdVkKNENnZ3BxSWJtYnYrRllTWkdZbUE2T2t0WU9YL2ZwaUwyYjlxdVBUUEw3UDZnbHErZVZEdXl5VnhWZ21UangrOQpNZWlveUh4MVdhY1RkN1RmZWhPS2VYTWthNDh0UTIzcHRaWlZJdFJMUStxMGl3OHlqZHNZLzVGR3loTGl4TmdoCk5PWG5lRnI1UzZnNjdRSHdCakRnbndFYVM2a2d4d1JyQzM2cWZ0MitKMExuZ3JrSXVaekhMamQ3Q2FNQ0F3RUEKQVFLQ0FnQVcvamtwcy9ET1FTSjg5SmczMUxsQnVLRHU1NkRWUUxDRkdwMzNrWEZueE8yR1NYN2liYVpWWHBYZgpKMEZaWE1zN1lmTGN0MGJaZnpjcDVDYmpXVVFvcC9vTjdpcFhkZTl3YWo0UVQ4UW4xQzZBWjFLZTd6UGxtb0l4CjI2MXJYRmlROVIyRUdka1NuSVc2eVdyU0xVdjZLaFVCMEJlUjNVSTFmV3d0Tkg4S09TWVVMdVNMR1ZWZ0F1Sk8KK1gyb3pheUM5ZHlNMElvVWVlWSsrNVJCREVVbEI3WGtKY25lS0FXYkxqOWRFajVqRnJFV3VVWUR6eGU5ZDlpbwo4Q3VVUjRvdmtodVR5a2oxT2U2NVorSGpPS2VkSURPZVhScHo3YTkyUEZSNldKUnYrdXN6R05aNngxQXpUY1EvClpUdTJYRG9EY2xSNkhGUHlpN3A2SUk2eFdKRHhtRVJzOER2SVI1a2Q5K21SeFl6QmlaWUQ2MlhWUEtOUHVtWUcKTDRHRzBJbVZua1h5SEZodHVOZUl2OUY3WmkrM2RZYWVzcnV2RzQ0ZExNWE13VHUrbXhBd1h6M1c4OXhNTXBGMQpmZVYrNEY4RE4xWEo4SHJLY3VYVFhIblN2UG9oRHE5em9NZ1dQNm9FcnV2eXUzcmVnUGYwUHd4Mk5Ma2FSdTRJCmpaUHAvczVZNWsvaUxvREQzaFZRSmZWOXZ4eDZDQzVKR2dpMmE0UStEOXZEbWlWTmdad21RWWhqbTkzMmlYQUwKQllCTGQwMUVDUTU2Z244c05FSUVveU12dXJETER4WURwS1hkRGJjVEIzTWN2L2RhMHB2cDAvUEdKOUorOFY3cQpQcmV0OENnV1N0WkpKMm9KV1lVZTdlS0txMjNPQWdlV1pRZVZLSUJucEJXaGxrZHI4UUtDQVFFQXd3TkNwKzVSCk9Za3B6dHMwVTIwVlFOWWh1djhLcCt6ZzFENlV5OE85ZVdyU3lmbFBoeGxvai80T1JpZFZpdUk2RGZuWWkxeU4KdXJabldlbUVKemFCQlpHbEp5RHpRLzhXdjF6dmlFSzBzcENpWk1rTW00bFF5TEZleVcxUkR6UWw0eThicTJuMApkbDdCVGl4cEFGVldqS2xqWGh2MmprVklmNGRSQStsRFI1dGdyaDlkMmdmUWppam4wVFp1cTRtOWJnWVVOWC9tCk9FdzBaTWsveUVOV0hqQ21NSGx5WFRZYmhoNnRUYXkrVHdoTkRMaWxSd1c1NVJjVU1EWi9UeFc2eXRzaWJ5aVYKQW0vbCtTUUc4cENWZzZSc3o2dmlvNXViVkQycWJNUGVlVzJZZlE5eTMwd0VOVkVrN0g5emNySVowSmhPcXU4agpjUDRXeHBQeElKeFArd0tDQVFFQS9qcVllODF0VEhlOXpnalk5OTNzR25iSlJONElOVWM3MGJZY1FFNlA4T1NnCk9jS0lTKzVMOGpOVmgrQWhQdlo5bG05K210VzJqSEc1bGNySFBNWjFLRXhzOUQ4RU0zcERSZldqaW5YRTFXWTAKL1FUUWQ3TlU1Z0FpZUhQTE5lRklWRm9lODZVbjFIV3U5UjRTenRScmpCNzRPd2FnVXozd0phbGo4TkhSRUNMZwphaTFRU1M5ci9pMlNHUW13enFZRkZEY05WaFZDelQ2cGRxb0ZLa2tXbjdGN0o5VWhyYzl4TTVTY0xWWTk5OE9GCjZlSVFKcXM0K0h0S3JNKzFXRDE1TndreGpKc0JyWG5TZU1UVXVRZGd6K2JwbHdlbzdyMTZJWjRRbEllVmtCdlUKV3Q0YVJ1RG9uVWlIUHc1N3VHTVR3bURCMXNjK3prSDRaUzF0RDdyMGVRS0NBUUVBbUVlcmZVYnoxbUh0YThKdwprZFRVaTlTcWNrTkdKdXNxaFpKNHpzVUM2QlVxbE4xQjVOVktlV2FCN3ZZNExrT0o0ZS8vMEpOdGVTZUdmUWVFClVycVU5YXhOc3NoZ0xmQzc2cUsveVQrTnF3S1dUTzFTRXdLZk9waUcwL094SUpZd0g3OWhjL0ZCSEUzUjFTR0kKdk9IbXUrQnAzOHNtTk9LVlFrQ0FXdldEdkI3dzJBZFdXak5RQURLaEV4WFdSYzFCUnZFb1JyNmhIOFVpQkxIQwpSTGVRUC9MdFUxMENtUmJ2VjBRTlFHSnNHWHI1NzcwZ0V0MjkwODY1elF4QlRaaENUTFhocGJ1aTRFeFE0TVBwClNQRHVUK1hOc2owZXRYT0ZUN3Izb2djeGF0RFNDcFpOdFdDK3lJT2N1YkNzamh2VlhMWVNlQmhWTEo2OVdrT2MKUDBMUWtRS0NBUUVBdDFCWkV5d1ZXOFlidnF6eWhnZ25idzJvSTFoV1l0UnlkY3p5b2d3RURwZE1VVm5NSGJRKwpYdTVWQmh5KzNEK3dYd0VXTVY5WXVmeG03WFBDSmppVDBmTUp2VFNUT3VzMkJ3UVFZSTU2MThWUy8vNndzeDlFCllIUklac0pZRFFuY3RiWW1DMWxUVndka21LcU90VVRHSjh0TkFvTE1xRGxKS0Y3MENYbkJYZmxJQ0VlVVZMRTEKRlpxV2RpZGVyaU5ZRmpOOEVrNVNWTnlTSlZhRFV2SlF0ZVdzQUJUV3JCV2djcWo5MUZNVGE4dzRpMlRPY0pPVwpDTlllQ20zYlBUMVdZakRtNFpRRHFhcmw4Tjg4NUE1RjZLT0FXNzdTT1JPM05QWmN6anpWdzR2Tm01ZjdLcENTCktwZFpya1lyUDlGeE5mKyt4YmYxdVpRb0lBeVpUM1puUVFLQ0FRQTY4SjErNGdWVnQzUi9HbTI2c283MXVhZXoKdjY2ajY2d3d5N0FpYnhxb1JjZ2pWK2NMeFhtWjNVaXVROUxoQnJDbGxraGNlOFJvREl4UDZRUEs4OTl2NGJDZAovOWJJWEI3WEtwSm1jaDJkVnF3VXJpNXdTb3VnRDlRMmd6RVgrRFpSZHhDVEM2RWl0dWkyOEQwUXZ2OEpublhxCkJoSGlzZTd3aFBPeTRGOG1iamFUa0dLM2JVR0J0TDJtYUtSY1p0NmlJc2dlbDFYc1dSU2UrNnV1c3gzc0FlWGcKa3oxNDJ3OE00Vmt4c0dOKzE2b1ZMRGF5cUcvejNwYXZxTlF5cEUzd0xoNml3aXRTMzM2SW5lY0dnNlJlRWJDYwo0UWRxdm4xMHpLN3VrUVFrNk5pM1l2dUJDam9VSVBDeEdQYmQ1NU9tY2FZN2h5U2ZrcTNSc1dXMy9MM2gKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K
---
# Source: kali/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-kali
data:
  rospo.yaml: |
    sshd:
      # this is the server_key mount point. Do not change
      server_key: "/etc/rospo/server_key"

      authorized_keys:
        # do not remove this one
        - /etc/rospo/authorized_keys
        
      
      

      disable_shell: false

      # do not change me
      listen_address: ":2222"
---
# Source: kali/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kali
  labels:
    app.kubernetes.io/name: kali
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  
  ports:
    - name: ssh
      port: 2222
      targetPort: ssh
      protocol: TCP
      
      nodePort: 30222
      
  selector:
    app.kubernetes.io/name: kali
    app.kubernetes.io/instance: release-name
---
# Source: kali/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-kali
  labels:
    app.kubernetes.io/name: kali
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: release-name-kali
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kali
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kali
        app.kubernetes.io/instance: release-name
    spec:
      terminationGracePeriodSeconds: 3
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: kali
          securityContext:
            privileged: true
            capabilities:
              add: ["CAP_SYS_CHROOT"]
          image: "kalilinux/kali-rolling:latest"
          imagePullPolicy: IfNotPresent
          command: ["/bin/bash"]
          args:
            - -c
            - |
              set -ex
              if [ ! -f /data/chroot-ready ]; then
                apt update
                apt install -y schroot debootstrap curl
                debootstrap kali-rolling /data

                curl -s -L https://github.com/ferama/rospo/releases/download/v0.11.1/rospo-linux-amd64 -o /data/usr/local/bin/rospo
                chmod +x /data/usr/local/bin/rospo
                mkdir /data/etc/rospo

              # do not change indention here or bash will complain
              chroot /data /bin/bash <<"EOT"
                set -x
                echo "deb http://http.kali.org/kali kali-rolling main contrib non-free" > /etc/apt/sources.list

                export DEBIAN_FRONTEND=noninteractive
                apt update
                apt install -y kali-linux-core

                apt install -y kali-desktop-xfce
                apt install -y xrdp net-tools

                adduser --gecos "" --disabled-password rospo
                chpasswd <<<"rospo:"
                echo "rospo ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
                usermod -a -G sudo rospo
              EOT
              fi

              cp -r /etc/rospo/* /data/etc/rospo
              cp /etc/hosts /data/etc/hosts

              mount proc /data/proc -t proc
              mount sysfs /data/sys -t sysfs
              mount -o bind /dev /data/dev/
              mount -t devpts pts /data/dev/pts/
              mount -o bind /dev/shm /data/dev/shm

              touch /data/chroot-ready

              chroot /data /bin/bash <<"EOT"
                set -x

                rm -rf /tmp/*
                rm -rf /tmp/.*
                rm /var/run/xrdp/xrdp-sesman.pid

                export LANG=C.UTF-8
                export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
                export USER=rospo


                if [ ! -f /home/rospo/init.sh ]; then
                  echo "#! /bin/bash" > /home/rospo/init.sh
                  echo "sudo service xrdp restart" >> /home/rospo/init.sh

                  chmod +x /home/rospo/init.sh
                  chown rospo:rospo /home/rospo/init.sh
                fi

                if [ -x /home/rospo/init.sh ]; then
                  runuser -l rospo /home/rospo/init.sh
                fi

                chmod 666 /dev/ptmx
                runuser -l rospo -c "rospo run /etc/rospo/rospo.yaml"
              EOT

          ports:
            - name: ssh
              containerPort: 2222
              protocol: TCP
          resources:
            {}
          volumeMounts:
            - mountPath: /data
              name: release-name-kali-chroot
            - name: release-name-kali
              mountPath: /etc/rospo/rospo.yaml
              subPath: rospo.yaml
            - name: release-name-kali-secret
              mountPath: /etc/rospo/server_key
              subPath: server_key
            - name: release-name-kali-secret-auth
              mountPath: /etc/rospo/authorized_keys
              subPath: authorized_keys
      volumes:
        - name: release-name-kali
          configMap:
            name: release-name-kali
        - name: release-name-kali-secret
          secret:
            secretName: release-name-kali
        - name: release-name-kali-secret-auth
          secret:
            secretName: release-name-kali-auth

  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: release-name-kali-chroot
      labels:
        app.kubernetes.io/name: kali
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "latest"
        app.kubernetes.io/managed-by: Helm
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
