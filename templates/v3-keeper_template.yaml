---
# Source: v3-keeper/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-v3-keeper
  labels:
    app.kubernetes.io/name: v3-keeper
    helm.sh/chart: v3-keeper-3.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
# Source: v3-keeper/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-v3-keeper
  namespace: default
  labels:
    app.kubernetes.io/name: v3-keeper
    helm.sh/chart: v3-keeper-3.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  SENTRY_DSN: ""
  PRIVATE_KEY: ""
  IPFS_INFURA_CLIENT_USERNAME: ""
  IPFS_INFURA_CLIENT_PASSWORD: ""
  IPFS_PINATA_API_KEY: ""
  IPFS_PINATA_SECRET_KEY: ""
  IPFS_FILEBASE_API_TOKEN: ""
  IPFS_QUICKNODE_API_TOKEN: ""
---
# Source: v3-keeper/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-v3-keeper
  labels:
    app.kubernetes.io/name: v3-keeper
    helm.sh/chart: v3-keeper-3.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  LOG_LEVEL: "INFO"
  NETWORK: "mainnet"
  EXECUTION_ENDPOINTS: ""
  CONSENSUS_ENDPOINTS: ""
  METRICS_HOST: "0.0.0.0"

  IPFS_LOCAL_CLIENT_ENDPOINT: ""
  IPFS_INFURA_CLIENT_ENDPOINT:
---
# Source: v3-keeper/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-v3-keeper
  labels:
    app.kubernetes.io/name: v3-keeper
    helm.sh/chart: v3-keeper-3.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames:
      - release-name-v3-keeper
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames:
      - release-name-v3-keeper
    verbs: ["get"]
---
# Source: v3-keeper/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-v3-keeper
  labels:
    app.kubernetes.io/name: v3-keeper
    helm.sh/chart: v3-keeper-3.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: release-name-v3-keeper
subjects:
  - kind: ServiceAccount
    name: release-name-v3-keeper
    namespace: default
---
# Source: v3-keeper/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-v3-keeper
  labels:
    app.kubernetes.io/name: v3-keeper
    helm.sh/chart: v3-keeper-3.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9100
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: v3-keeper
    app.kubernetes.io/instance: release-name
---
# Source: v3-keeper/templates/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: release-name-v3-keeper
  labels:
    app.kubernetes.io/name: v3-keeper
    helm.sh/chart: v3-keeper-3.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: v3-keeper
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: v3-keeper
        app.kubernetes.io/instance: release-name
      annotations:
        checksum/keeper-secret: f0ed4e514946f177b2e952e6859b6e05b74b31323e6db7fc0f3eb48b4f73fcfa
        checksum/keeper-configmap: 51a4973d29d355fcfd7056a48bb4bb37cba5c6e32b6fef3ad483fc097ee2a229
    spec:
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      serviceAccountName: release-name-v3-keeper
      priorityClassName: ""
      terminationGracePeriodSeconds: 10
      containers:
        - name: v3-keeper
          image: "europe-west4-docker.pkg.dev/stakewiselabs/public/v3-keeper:v0.7.2"
          imagePullPolicy: IfNotPresent
          command: ["python"]
          args: ["./src/main.py"]
          env:
            - name: PYTHONPATH
              value: "."
          envFrom:
            - configMapRef:
                name: release-name-v3-keeper
            - secretRef:
                name: release-name-v3-keeper
          ports:
            - name: metrics
              containerPort: 9100
              protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 200Mi
