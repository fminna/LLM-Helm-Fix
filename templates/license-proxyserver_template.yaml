---
# Source: license-proxyserver/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-license-proxyserver
  namespace: default
  labels:
    helm.sh/chart: license-proxyserver-v2024.2.25
    app.kubernetes.io/name: license-proxyserver
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.9"
    app.kubernetes.io/managed-by: Helm
---
# Source: license-proxyserver/templates/apiregistration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-license-proxyserver-apiserver-cert
  namespace: default
  labels:
    helm.sh/chart: license-proxyserver-v2024.2.25
    app.kubernetes.io/name: license-proxyserver
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.9"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURoekNDQW0rZ0F3SUJBZ0lRVEZBbEQxNENFa1FPMHljZzc2YUhYekFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMU1UVXdOelV3TURGYUZ3MHpOREExTVRNd056VXdNREZhTUNzeApLVEFuQmdOVkJBTVRJSEpsYkdWaGMyVXRibUZ0WlMxc2FXTmxibk5sTFhCeWIzaDVjMlZ5ZG1WeU1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXY1RVlqN0p4YktIcHNWbW5aVlpvTWk1Z2phM0wKNVZUT1lsNHJlQlNEM0JTZzdoU0NSem1KbVlScnBKVDZ1WTM1RC9hSCs2Tm9MMHhWODBadExPaisxSkNsVG1zYQpvMGhuT0EyUDJDc1duMmpxM2swRnE2VDhnbmMzUFpJbmlKblovckJBVlVNWkFWWFBFMWhoa3FEbFh1SDY3STZJCndFemhkaEJ1bU04MTlveExoUjVMQzNvZlBNWkUwU2h5cjlpQ2p6c3BOc2ZORW1aVWN2Q0dxL0RUYVFOdlV3cnkKUXQzcUNPdHhOYXluSTdJL1JzVzFiWDJOUFhYcjJsdW9rTXh1REh1cVExSy91b3AwSmhkQzNtV3FFUGFhRXlvcwpyeEUvT2ZXRWp3dHN5c3J0SXU0aUt4SXZ3ckdoeGhtQUx2Mkx0MkxlWlVjUWFNeFB5bjdlNzR5UTF3SURBUUFCCm80SEVNSUhCTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUWFBMkR4Nis2Tmdja25wOFk2MzU5YwpkUlNmT0RCaEJnTlZIUkVFV2pCWWdpaHlaV3hsWVhObExXNWhiV1V0YkdsalpXNXpaUzF3Y205NGVYTmxjblpsCmNpNWtaV1poZFd4MGdpeHlaV3hsWVhObExXNWhiV1V0YkdsalpXNXpaUzF3Y205NGVYTmxjblpsY2k1a1pXWmgKZFd4MExuTjJZekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBaHNWTGtETDZpdXVTN2NCV0tHOFJyN0hoSXozcQpBSmNlOEZ2UEdyaTlQVkU3YitvYmpHd2pkbnpWdE90Q3htb0dQSW1hQ21BK0IrRUw1YVlnMnNvNytVUWk1cGFJCklndnpXY3VRMldVeW91WVVlSW14dlZKUjZBTU9CcWlpWG5GNFNvMVR6ZmtXaUk4OUdrZzdUanZPc1Zva2ZFMzEKRUlpSmpxUTBBbWdUYVcyY25CVTFtQzVGRmNDV2lBQ1VUVnlRZXlKUERoVVVRZmwvM1JIVkp2UU1PSjRMNXg4RAppZG9mekNJd3p5WmlkOG5DQkgweWRaaWFSTG1YN2xtRnRaWW9LNU1UdDZFZ0FJa0pEU2ZEYzdncmlWcHp5RzdwCkdwYTF0V0k1VjU1Tk9SYklZM1Q3MGh3N0tBUG5hZFcrNlZPR0hmT2xRaWJSNWR3MU80YXdldU9XZXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdjVFWWo3SnhiS0hwc1ZtblpWWm9NaTVnamEzTDVWVE9ZbDRyZUJTRDNCU2c3aFNDClJ6bUptWVJycEpUNnVZMzVEL2FIKzZOb0wweFY4MFp0TE9qKzFKQ2xUbXNhbzBobk9BMlAyQ3NXbjJqcTNrMEYKcTZUOGduYzNQWkluaUpuWi9yQkFWVU1aQVZYUEUxaGhrcURsWHVINjdJNkl3RXpoZGhCdW1NODE5b3hMaFI1TApDM29mUE1aRTBTaHlyOWlDanpzcE5zZk5FbVpVY3ZDR3EvRFRhUU52VXdyeVF0M3FDT3R4TmF5bkk3SS9Sc1cxCmJYMk5QWFhyMmx1b2tNeHVESHVxUTFLL3VvcDBKaGRDM21XcUVQYWFFeW9zcnhFL09mV0Vqd3RzeXNydEl1NGkKS3hJdndyR2h4aG1BTHYyTHQyTGVaVWNRYU14UHluN2U3NHlRMXdJREFRQUJBb0lCQURmQVFYYW9od3dIZnh5SApMQWw1QVRBQmdVWWFXMm10cWJiRkV6K0tNT25lOHdyMjJ3ZGhmbU00UDUrUlgvcWFqKzZPWC9yakRwSWRWREpOCnY3NC9QTktlR2czZGE4NHpaeDdRQzVuc3lGT3lWQkJJT0N0QkE5L3dWQnBPSzhVOGlVM3UrM29VNGZVYWhQNXIKVFZKQUV5RHZBWGpRN29tUWxsa201UmtCelFHb1J0OWtoUEFaK0d5bWRoelhUdjBxTmppTS8rSisyeVJ1YzUwbQpjM28yV1M1YzR5QTVnMkJycGVMUmxGajJvV3paSDJPQzdNeEc0N3B5MTYxZFFteTBYSTU1RHhmZmQ3T1F1L092CnZUWE9tSFBXMzFZdTlzZGJTWUk5UEQ1b3A3elNyQVVDNEVlWEpaUCt6ZHdQZWk4bUVWbVhlYm9scWNDSEhudTUKdDZhQ3pKa0NnWUVBL0VrSzQwMGZybnpQcGZ3VDI1aklXV0phUE5KMDFJWGxrNUdyOTFoWXJxR1lVTkhmQUFRSwpaRndyc3RvM2pyQ1h6QmlyL2laVktoU1VtUkZQL3ExRVoyV0JpTTBldk0xclpLWTNwdGliYkt0SUZNMi9RRytnCmZKTitmdXh1anRYcE5TRWUwUEtyQkdUNmNld0p5M2ZSTlRXTHdHL1M5OWYvLzN0RTZ0VUZHZE1DZ1lFQXdtTXUKdmQxdFBOMTBDalNJYVhMVDBzRGxEVFBMRUR3cDRvalhrRm5rUVZUcDJCNFV2cXBGSEFKNFJNSlB0YTdyRi9FRApIMUxQOWw1d3J1emxtZkdkTUd5UnRtVDVuaFhnNGVLdzlLREtpNGp2OEFlb2tqVTlJSldtaERKMWZBeWJSS2xpCjV5Y0s0RzJ5T1FIcnBwMG9ZcGQzTmpSRzlXLzRKbkt2VnByLzVtMENnWUVBc3l2czM2Rldic1dWYzN5alhjSVUKQitjaHp6Qm9hTWJ2Vk82UUF3cHJjUnF5NGpNcS9RZmhtWVVjUTlsV3U3QVBIcFFuRWtpSEUydXFYVXMrVk5FWgpVNVZ6ZVlTejM4TEVFcWM1dnZUMjdTWjMrczVrbFk2eG04ZmtmcC9McFFXbXFtVHJUZG9LT3dTOEdVeFphSGVmCnpQcEtWbEVVczVCajd6M01wRHJGZEtFQ2dZQjJlczk5aUIzUjBFU3ZCNi94WGJ6QUl6UTQ1TTJyT3BCbzgvRTMKbWFLbk0yTkloNlVyUlVyVU5La3JkNmZ2M0FxTTBDaVFDZ0NaY0p5TDhmWkw2MWxjcjMvc3hRVGtGdiszamwwKwo3VlltMERNMmdPUjlJUmY5NlZqU0VKTk5KYjNwanJpcW5VQmk1Rm1ScDVzRE5aenM0dGNWWWEyeVlTbkYvWGJqCmVadnB6UUtCZ0R6Q3ArWnltK3BoS1lMQlZBZUVZNnI1clNBMnExYmtwQnQ2OVpMdTByWDlEMkxWbVBiM0JyVm4KNi9nd2g5VlUxbHlCVUYzemdPYnNtYmg5WlZWc3c4SGd4SHY2NUFnRDNmdjhET2RHZElyWVh4QWRmMVBJVDVEbgpzVjhSd2JBajNyZ2R3Syt4d2NBaENyaXpqZ0E2NWhZRDV0RXVuY1J3RFJDem9WKzVRcDRRCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: license-proxyserver/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-license-proxyserver
  labels:
    helm.sh/chart: license-proxyserver-v2024.2.25
    app.kubernetes.io/name: license-proxyserver
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.9"
    app.kubernetes.io/managed-by: Helm
rules:
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get"]
# create/update license secret
- apiGroups:
  - ""
  resources:
  - secrets
  verbs: ["get", "list", "watch", "create", "update", "patch"]
# ocm cluster claim
- apiGroups:
  - cluster.open-cluster-management.io
  resources:
  - clusterclaims
  verbs: ["get", "list", "watch", "create", "update", "patch"]
# ocm cluster name detection
- apiGroups:
  - operator.open-cluster-management.io
  resources:
  - klusterlets
  verbs: ["get"]
---
# Source: license-proxyserver/templates/apiregistration.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-license-proxyserver-apiserver-auth-delegator
  labels:
    helm.sh/chart: license-proxyserver-v2024.2.25
    app.kubernetes.io/name: license-proxyserver
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.9"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: release-name-license-proxyserver
  namespace: default
---
# Source: license-proxyserver/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-license-proxyserver
  labels:
    helm.sh/chart: license-proxyserver-v2024.2.25
    app.kubernetes.io/name: license-proxyserver
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.9"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-license-proxyserver
subjects:
- kind: ServiceAccount
  name: release-name-license-proxyserver
  namespace: default
---
# Source: license-proxyserver/templates/apiregistration.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-license-proxyserver-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    helm.sh/chart: license-proxyserver-v2024.2.25
    app.kubernetes.io/name: license-proxyserver
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.9"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: release-name-license-proxyserver
  namespace: default
---
# Source: license-proxyserver/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-license-proxyserver
  namespace: default
  labels:
    helm.sh/chart: license-proxyserver-v2024.2.25
    app.kubernetes.io/name: license-proxyserver
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.9"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  # Port used to expose admission webhook apiserver
  - name: api
    port: 443
    targetPort: 8443
  - name: telemetry
    port: 8081
    targetPort: 8081
  selector:
    app.kubernetes.io/name: license-proxyserver
    app.kubernetes.io/instance: release-name
---
# Source: license-proxyserver/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-license-proxyserver
  namespace: default
  labels:
    helm.sh/chart: license-proxyserver-v2024.2.25
    app.kubernetes.io/name: license-proxyserver
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.9"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: license-proxyserver
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: license-proxyserver
        app.kubernetes.io/instance: release-name
      annotations:
    spec:
      
      serviceAccountName: release-name-license-proxyserver
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        image: ghcr.io/appscode/license-proxyserver:v0.0.9
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --cache-dir=/tmp/licenses
        - --use-kubeapiserver-fqdn-for-aks=true
        ports:
        - containerPort: 8443
        - containerPort: 8081
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          {}
        volumeMounts:
        - mountPath: /tmp/licenses
          name: cache-dir
        - mountPath: /var/serving-cert
          name: serving-cert
      volumes:
      - name: cache-dir
        emptyDir: {}
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: release-name-license-proxyserver-apiserver-cert
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: license-proxyserver/templates/apiregistration.yaml
# register as aggregated apiserver
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.proxyserver.licenses.appscode.com
  labels:
    helm.sh/chart: license-proxyserver-v2024.2.25
    app.kubernetes.io/name: license-proxyserver
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.9"
    app.kubernetes.io/managed-by: Helm
spec:
  group: proxyserver.licenses.appscode.com
  version: v1alpha1
  service:
    namespace: default
    name: release-name-license-proxyserver
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQUxSS2ZvRHJjMHYxdTBBOFB4bXc1WXd3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05URTFNRGMxTURBeFdoY05NelF3TlRFek1EYzFNREF4V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUFdlCi9QNE02eWFZSG1OMzk3ZXlaenlRcEpESCtJc0hBb3Jpdmx2L24xcHJOUDVOSjIreTBPcjRFREs1L1Fzclg5QVgKMlNMY3VjWU1IcjZJMDlpbFJTdVVjb3VmYW1sVmlkM0xGdGRFNVB4ZXNFclBZU25JU0xpRDFPVWdlWS9PWXRpawpMR3dDYkUxc2xCbmdnRXNUcGVRVXI3SW5EdFE2elBzb1lFOGpMK1JLUThxeWsvV0RjMFhzcGk5Y3YwSkxtc052CkNOVTJ4ZXBMT2gvS3JoMmhDTXc1V0w5cCtlbXlhTWhRMG5qclVSTFNDck1Bd0ZlYTJLandBaUJCaFNoTlVRb0sKaUd3QzJMTmtOSS90eUpOM1VFd0srWTh0WVRQVlJUalNoaUlwMXF4MGNYLytyWTFLSTJRUFd1eFBUSUZDYU5NNAovNzQ0dmZWcXBZREQ2cGNCdzlrQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJRYUEyRHg2KzZOZ2NrbnA4WTYzNTljZFJTZk9EQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFaUE55c3RlcApORDZaeXVTS00xZFdVQWtpRlorSjVyWWlvY09IZUJ5emQ0dmV6Z0k0N000b2tyYWJ3SThzMmFZR3R6NHEvUUMxClhIWHRhVDF4RkxZYS9rUDlhNHdLWVhoM05NNHdPZVE5bG1ZQUFBT1RwY1JmL0hnSlhFVnRNaWNUcys5WTBTV0gKc0FlOWR0aGd0K1J6a2MwOTUxaXhjaUR2ZE5HeC9pd1dzNnVkUHQ4cWc2K0w3L2NkZXV6UDlwMVhhcGhMOVE4MgpJTzBRQVRtMGZONTZSTzZHUGdyZi9IYk5PYnliNEF2M1VsbmpLSEVmMG5qaUdXc2pURDU2aVVBOTYxSjZaNmgvCitwbm9JSGtQMmhVQjFMRjRRaGRkR29HbW1xRTkyZndrWE9YSWNCSkhrditzNkNMTkc3U0xGeHRidG16byswNmMKSVljZnREVG44TndVNXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: license-proxyserver/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: release-name-license-proxyserver
  namespace: default
  labels:
    app.kubernetes.io/name: license-proxyserver
    app.kubernetes.io/instance: release-name
spec:
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/name: license-proxyserver
      app.kubernetes.io/instance: release-name
  endpoints:
  - port: api
    bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    scheme: https
    interval: 10s
    relabelings:
      - action: labeldrop
        regex: (pod|service|endpoint|namespace)
    tlsConfig:
      ca:
        secret:
          name: release-name-license-proxyserver-apiserver-cert
          key: tls.crt
      serverName: "release-name-license-proxyserver.default.svc"
  - port: telemetry
    bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    scheme: http
    interval: 10s
