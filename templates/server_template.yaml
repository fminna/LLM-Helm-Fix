---
# Source: server/templates/global-np.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-release-name-server-denyall
  labels:
    app: server-deny
    chart: server-0.1.0-deny
    release: release-name
    heritage: Helm
spec:
  podSelector:
    matchLabels:
      release: release-name
  policyTypes:
  - Ingress
  - Egress
---
# Source: server/templates/global-np.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-server-dnsegress
  labels:
    app: server-dnsegress
    chart: server-0.1.0-dnsegress
    release: release-name
    heritage: Helm
spec:
  podSelector:
    matchLabels:
      dns-policy: enabled
      release: release-name
  egress:
  - ports:
    - port: 53
      protocol: UDP
    - port: 53
      protocol: TCP
---
# Source: server/templates/mongodb-deployment.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-server-mongodb-from-release-name-server-toposervice
  labels:
    app: server-mongodb
    chart: server-0.1.0-mongodb
    release: release-name
    heritage: Helm
spec:
  podSelector:
    matchLabels:
      app: server-mongodb
      release: release-name
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: server-toposervice
          release: release-name
    ports:
    - port: 27017
      protocol: TCP
---
# Source: server/templates/mysql-deployment.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-server-mysql-from-release-name-server
  labels:
    app: server-mysql
    chart: server-0.1.0-mysql
    release: release-name
    heritage: Helm
spec:
  podSelector:
    matchLabels:
      app: server-mysql
      release: release-name
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: server
          release: release-name
    ports:
    - port: 3306
      protocol: TCP
---
# Source: server/templates/planner-deployment.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-server-planner-to-release-name-server-rabbitmq-release-name-server-weatherservice-release-name-server-toposervice
  labels:
    release: release-name
    heritage: Helm
spec:
  podSelector:
    matchLabels:
      app: server-planner
      release: release-name
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: server-rabbitmq
          release: release-name
    ports:
    - port: 5672
      protocol: TCP
  - to:
    - podSelector:
        matchLabels:
          app: server-weatherservice
          release: release-name
    ports:
    - port: 9090
      protocol: TCP
  - to:
    - podSelector:
        matchLabels:
          app: server-toposervice
          release: release-name
    ports:
    - port: 8181
      protocol: TCP
---
# Source: server/templates/rabbitmq-deployment.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-server-rabbitmq-from-release-name-server-planner-release-name-server
  labels:
    release: release-name
    heritage: Helm
spec:
  podSelector:
    matchLabels:
      app: server-rabbitmq
      release: release-name
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: server-planner
          release: release-name
    - podSelector:
        matchLabels:
          app: server
          release: release-name
    ports:
    - port: 5672
      protocol: TCP
---
# Source: server/templates/server-deployment.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-server-to-release-name-server-mysql-release-name-server-rabbitmq
  labels:
    release: release-name
    heritage: Helm
spec:
  podSelector:
    matchLabels:
      app: server
      release: release-name
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: server-mysql
          release: release-name
    ports:
    - port: 3306
      protocol: TCP
  - to:
    - podSelector:
        matchLabels:
          app: server-rabbitmq
          release: release-name
    ports:
    - port: 5672
      protocol: TCP
---
# Source: server/templates/server-deployment.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-server-from-ingress
  labels:
    release: release-name
    heritage: Helm
spec:
  podSelector:
    matchLabels:
      app: server
      release: release-name
  ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            kubernetes.io/metadata.name: ingress-nginx
        podSelector:
          matchLabels:
            app.kubernetes.io/name: ingress-nginx
      ports:
      - protocol: TCP
        port: 3000
---
# Source: server/templates/toposervice-deploy.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-server-toposervice-to-release-name-server-mongodb
  labels:
    release: release-name
    heritage: Helm
spec:
  podSelector:
    matchLabels:
      app: server-toposervice
      release: release-name
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: server-mongodb
          release: release-name
    ports:
    - port: 27017
      protocol: TCP
---
# Source: server/templates/toposervice-deploy.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-server-toposervice-from-release-name-server-planner-ingress
  labels:
    release: release-name
    heritage: Helm
spec:
  podSelector:
    matchLabels:
      app: server-toposervice
      release: release-name
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: server-planner
              release: release-name
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: ingress-nginx
          podSelector:
            matchLabels:
              app.kubernetes.io/name: ingress-nginx
      ports:
        - protocol: TCP
          port: 8181
---
# Source: server/templates/weatherservice-deployment.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-server-weatherservice-from-release-name-server-planner
  labels:
    release: release-name
    heritage: Helm
spec:
  podSelector:
    matchLabels:
      app: server-weatherservice
      release: release-name
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: server-planner
          release: release-name
    ports:
    - port: 9090
      protocol: TCP
---
# Source: server/templates/mongodb-env-configMap.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-server-mongodb-env-config-map
  labels:
    app: server-mongodb
    chart: server-0.1.0-mongodb
    release: release-name
    heritage: Helm
data:
  MONGO_INITDB_DATABASE: "topoDB"
  MONGO_INITDB_ROOT_USERNAME: "root"
  MONGO_INITDB_ROOT_PASSWORD: "password"
---
# Source: server/templates/mysql-env-configMap.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-server-mysql-env-config-map
  labels:
    app: server-mysql
    chart: server-0.1.0-mysql
    release: release-name
    heritage: Helm
data:
  MYSQL_ROOT_PASSWORD: "password"
  MYSQL_DATABASE: "eoloplantsDB"
---
# Source: server/templates/rabbitmq-env-configMap.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-server-rabbitmq-env-config-map
  labels:
    release: release-name
    heritage: Helm
data:
  RABBITMQ_DEFAULT_USER: "root"
  RABBITMQ_DEFAULT_PASS: "password"
---
# Source: server/templates/mongodb-deployment.yml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: release-name-server-mongodb-pv
  labels:
    app: server-mongodb
    chart: server-0.1.0-mongodb
    release: release-name
    heritage: Helm
spec:
  storageClassName: mongodb
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /db/mongo
---
# Source: server/templates/mysql-deployment.yml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: release-name-server-mysql-default-pv
  labels:
    type: local
    app: server-mysql
    chart: server-0.1.0-mysql
    release: "release-name"
    heritage: "Helm"
spec:
  storageClassName: mysql
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /db/mysql
---
# Source: server/templates/rabbitmq-deployment.yml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: release-name-server-rabbitmq-pv
  labels:
    app: server-rabbitmq
    chart: server-0.1.0-rabbitmq
    release: "release-name"
    heritage: "Helm"
spec:
  storageClassName: rabbit
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /db/rabbitmq
---
# Source: server/templates/mongodb-deployment.yml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-server-mongodb-pvc
  labels:
    app: server-mongodb
    chart: server-0.1.0-mongodb
    release: release-name
    heritage: Helm
spec:
  storageClassName: mongodb
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: server/templates/mysql-deployment.yml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-server-mysql-pvc
  labels:
    app: server-mysql
    chart: server-0.1.0-mysql
    release: "release-name"
    heritage: "Helm"
spec:
  storageClassName: mysql
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: server/templates/rabbitmq-deployment.yml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-server-rabbitmq-pvc
  labels:
    app: server-rabbitmq
    chart: server-0.1.0-rabbitmq
    release: "release-name"
    heritage: "Helm"
spec:
  storageClassName: rabbit
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: server/templates/mongodb-deployment.yml
apiVersion: v1
kind: Service
metadata:
  name: release-name-server-mongodb
  labels:
    app: server-mongodb
    chart: server-0.1.0-mongodb
    release: release-name
    heritage: Helm
spec:
  ports:
  - port: 27017
    targetPort: 27017
    protocol: TCP
    name: release-name-server-mongodb-port-27017
  - port: 27018
    targetPort: 27018
    protocol: TCP
    name: release-name-server-mongodb-port-27018
  - port: 27019
    targetPort: 27019
    protocol: TCP
    name: release-name-server-mongodb-port-27019
  selector:
    app: server-mongodb
    release: release-name
  type: ClusterIP
---
# Source: server/templates/mysql-deployment.yml
apiVersion: v1
kind: Service
metadata:
  name: release-name-server-mysql
  labels:
    app: server-mysql
    chart: server-0.1.0-mysql
    release: release-name
    heritage: Helm
spec:
  ports:
  - port: 3306
    targetPort: 3306
    protocol: TCP
    name: release-name-server-mysql-port
  selector:
    app: server-mysql
    release: release-name
  type: ClusterIP
---
# Source: server/templates/rabbitmq-deployment.yml
apiVersion: v1
kind: Service
metadata:
  name: release-name-server-rabbitmq
  labels:
    app: server-rabbitmq
    chart: server-0.1.0-rabbitmq
    release: release-name
    heritage: Helm
spec:
  ports:
  - port: 5672
    targetPort: 5672
    protocol: TCP
    name: rabbitmq-port-5672
  - port: 15672
    targetPort: 15672
    protocol: TCP
    name: rabbitmq-port-15672
  selector:
    app: server-rabbitmq
    release: release-name
  type: ClusterIP
---
# Source: server/templates/server-deployment.yml
apiVersion: v1
kind: Service
metadata:
  name: release-name-server
  labels:
    app: server
    chart: server-0.1.0
    release: release-name
    heritage: Helm
spec:
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: release-name-server-port
  selector:
    app: server
    release: release-name
  type: ClusterIP
---
# Source: server/templates/toposervice-deploy.yml
apiVersion: v1
kind: Service
metadata:
  name: release-name-server-toposervice
  labels:
    app: server-toposervice
    chart: server-0.1.0-toposervice
    release: release-name
    heritage: Helm
spec:
  ports:
  - port: 8181
    targetPort: 8181
    protocol: TCP
    name: release-name-server-toposervice-port
  selector:
    app: server-toposervice
    release: release-name
  type: ClusterIP
---
# Source: server/templates/weatherservice-deployment.yml
apiVersion: v1
kind: Service
metadata:
  name: release-name-server-weatherservice
  labels:
    app: server-weatherservice
    chart: server-0.1.0-weatherservice
    release: release-name
    heritage: Helm
spec:
  ports:
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: release-name-server-weatherservice-port
  selector:
    app: server-weatherservice
    release: release-name
  type: ClusterIP
---
# Source: server/templates/mongodb-deployment.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-server-mongodb
  labels:
    app: server-mongodb
    chart: server-0.1.0-mongodb
    release: release-name
    heritage: Helm
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: server-mongodb
      release: release-name
  replicas: 1
  template:
    metadata:
      labels:
        app: server-mongodb
        release: release-name
    spec:
      containers:
      - name: release-name-server-mongodb
        image: "mongo:5.0.6-focal"
        envFrom:
          - configMapRef:
              name: release-name-server-mongodb-env-config-map
        ports:
        - containerPort: 27017
        - containerPort: 27018
        - containerPort: 27019
        volumeMounts:
        - mountPath: /data/db
          name: release-name-server-mongodb-datadb
      volumes:
      - name: release-name-server-mongodb-datadb
        persistentVolumeClaim:
          claimName: release-name-server-mongodb-pvc
---
# Source: server/templates/mysql-deployment.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-server-mysql
  labels:
    app: server-mysql
    chart: server-0.1.0-mysql
    release: release-name
    heritage: Helm
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: server-mysql
      release: release-name
  replicas: 1
  template:
    metadata:
      labels:
        app: server-mysql
        release: release-name
    spec:
      containers:
      - name: release-name-server-mysql
        image: "mysql:8.0.28"
        envFrom:
          - configMapRef:
              name: release-name-server-mysql-env-config-map
        ports:
        - containerPort: 3306
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: release-name-server-mysql-datadb
      volumes:
      - name: release-name-server-mysql-datadb
        persistentVolumeClaim:
          claimName: release-name-server-mysql-pvc
---
# Source: server/templates/planner-deployment.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-server-planner
  labels:
    app: server-planner
    chart: server-0.1.0-planner
    release: release-name
    heritage: Helm
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: server-planner
      release: release-name
  replicas: 1
  template:
    metadata:
      labels:
        app: server-planner
        release: release-name
        dns-policy: enabled
    spec:
      securityContext:
        runAsUser: 1001
      restartPolicy: Always
      containers:
      - name: release-name-server-planner
        image: "codeurjc/planner:v1.0"
        env:
        - name: SERVER_PORT
          value: "8080"
        - name: TOPO_HOST
          value: release-name-server-toposervice
        - name: TOPO_PORT
          value: "8181"
        - name: GRPC_CLIENT_WEATHERSERVER_ADDRESS
          value: "static://release-name-server-weatherservice:9090"
        - name: SPRING_CLOUD_STREAM_RABBIT_BINDER_NODES
          value: release-name-server-rabbitmq:5672
        - name: SPRING_RABBITMQ_HOST
          value: release-name-server-rabbitmq
        - name: SPRING_RABBITMQ_PORT
          value: "5672"
        - name: SPRING_RABBITMQ_USERNAME
          value: root
        - name: SPRING_RABBITMQ_PASSWORD
          value: password
---
# Source: server/templates/rabbitmq-deployment.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-server-rabbitmq
  labels:
    app: server-rabbitmq
    chart: server-0.1.0-rabbitmq
    release: release-name
    heritage: Helm
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: server-rabbitmq
      release: release-name
  replicas: 1
  template:
    metadata:
      labels:
        app: server-rabbitmq
        release: release-name
    spec:
      containers:
      - name: release-name-server-rabbitmq
        image: "rabbitmq:3.9-management"
        envFrom:
          - configMapRef:
              name: release-name-server-rabbitmq-env-config-map
        ports:
        - containerPort: 5672
        - containerPort: 15672
        volumeMounts:
        - mountPath: /var/lib/rabbitmq/mnesia
          name: release-name-server-rabbitmq-datarabbit
      volumes:
      - name: release-name-server-rabbitmq-datarabbit
        persistentVolumeClaim:
          claimName: release-name-server-rabbitmq-pvc
---
# Source: server/templates/server-deployment.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-server
  labels:
    app: server
    chart: server-0.1.0
    release: release-name
    heritage: Helm
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: server
      release: release-name
  replicas: 1
  template:
    metadata:
      labels:
        app: server
        release: release-name
        dns-policy: enabled
    spec:
      securityContext:
        runAsUser: 1001
      restartPolicy: Always
      containers:
      - name: release-name-server
        image: "codeurjc/server:v1.0"
        command: ["bash"]
        args:
        - "-c"
        - "./wait-for-it.sh release-name-server-mysql:3306 -t 500 -- ./wait-for-it.sh release-name-server-rabbitmq:5672 -t 500 -- node src/server.js"
        env:
        - name: MYSQL_HOST
          value: release-name-server-mysql
        - name: MYSQL_DB
          valueFrom:
            configMapKeyRef:
              name: release-name-server-mysql-env-config-map
              key: MYSQL_DATABASE
        - name: MYSQL_USER
          value: root
        - name: MYSQL_PASS
          valueFrom:
            configMapKeyRef:
              name: release-name-server-mysql-env-config-map
              key: MYSQL_ROOT_PASSWORD
        - name: RABBITMQ_URL
          value: amqp://root:password@release-name-server-rabbitmq
        ports:
        - containerPort: 3000
---
# Source: server/templates/toposervice-deploy.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-server-toposervice
  labels:
    app: server-toposervice
    chart: server-0.1.0-toposervice
    release: release-name
    heritage: Helm
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: server-toposervice
      release: release-name
  replicas: 1
  template:
    metadata:
      labels:
        app: server-toposervice
        release: release-name
        dns-policy: enabled
    spec:
      securityContext:
        runAsUser: 1001
      restartPolicy: Always
      containers:
      - name: release-name-server-toposervice
        image: "codeurjc/toposervice:v1.0"
        env:
        - name: SPRING_DATA_MONGODB_HOST
          value: release-name-server-mongodb
        - name: SPRING_DATA_MONGODB_PORT
          value: "27017"
        - name: SPRING_DATA_MONGODB_DATABASE
          value: topoDB
        - name: SPRING_DATA_MONGODB_AUTHENTICATION-DATABASE
          value: admin
        - name: SPRING_DATA_MONGODB_USERNAME
          value: root
        - name: SPRING_DATA_MONGODB_PASSWORD
          value: password
        - name: SERVER_PORT
          value: "8181"
        ports:
        - containerPort: 8181
---
# Source: server/templates/weatherservice-deployment.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-server-weatherservice
  labels:
    app: server-weatherservice
    chart: server-0.1.0-weatherservice
    release: release-name
    heritage: Helm
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: server-weatherservice
      release: release-name
  replicas: 1
  template:
    metadata:
      labels:
        app: server-weatherservice
        release: release-name
    spec:
      securityContext:
        runAsUser: 1001
      restartPolicy: Always
      containers:
      - name: release-name-server-weatherservice
        image: "codeurjc/weatherservice:v1.0"
        env:
        - name: GRPC_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: GRPC_PORT
          value: "9090"
        ports:
        - containerPort: 9090
---
# Source: server/templates/ingress.yml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-multi-ingress
  labels:
    app: server-ingress
    chart: server-0.1.0-ingress
    release: release-name
    heritage: Helm
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - host: cluster-ip
      http:
        paths:
          - path: /(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: release-name-server
                port:
                  number: 3000
          - path: /toposervice/(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: release-name-server-toposervice
                port:
                  number: 8181
