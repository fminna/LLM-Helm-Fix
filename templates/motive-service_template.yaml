---
# Source: motive-service/templates/networkpolicy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-motive-service-allow-all
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - {}
  egress:
    - {}
---
# Source: motive-service/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-motive-service
  labels:
    helm.sh/chart: motive-service-2.0.6
    app.kubernetes.io/name: motive-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: service
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: motive-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-motive-service
  labels:
    helm.sh/chart: motive-service-2.0.6
    app.kubernetes.io/name: motive-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: service
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    service.kubernetes.io/topology-mode: Auto
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      targetPort: service
      protocol: TCP
  selector:
    app.kubernetes.io/name: motive-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: service
---
# Source: motive-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-motive-service
  labels:
    helm.sh/chart: motive-service-2.0.6
    app.kubernetes.io/name: motive-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: service
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  minReadySeconds: 30
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: motive-service
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: service
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: motive-service
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: service
    spec:
      terminationGracePeriodSeconds: 60
      serviceAccountName: release-name-motive-service
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: motive-service
              app.kubernetes.io/instance: release-name
              app.kubernetes.io/component: service
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
          matchLabelKeys:
            - pod-template-hash
      containers:
        - name: motive-service
          image: "hello-world:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: service
              containerPort: 8080
              protocol: TCP
          resources:
            limits: {}
            requests:
              cpu: 100m
              memory: 256Mi
      nodeSelector:
        kubernetes.io/os: linux
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: motive-service
                  app.kubernetes.io/instance: release-name
                  app.kubernetes.io/component: service
              topologyKey: kubernetes.io/hostname
