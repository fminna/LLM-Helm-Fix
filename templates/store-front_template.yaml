---
# Source: store-front/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-store-front
  labels:
    helm.sh/chart: store-front-0.1.9
    app.kubernetes.io/name: store-front
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: store-front/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-store-front
  labels:
    helm.sh/chart: store-front-0.1.9
    app.kubernetes.io/name: store-front
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: store-front
    app.kubernetes.io/instance: release-name
---
# Source: store-front/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-store-front
  labels:
    helm.sh/chart: store-front-0.1.9
    app.kubernetes.io/name: store-front
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: store-front
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: store-front
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-store-front
      securityContext:
        {}
      containers:
        - name: store-front
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          image: "ghcr.io/restorecommerce/store-front:0.0.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 4000
              protocol: TCP
          env:
            - name: npm_config_cache
              value: /tmp/npm/
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          livenessProbe:
            exec:
              command:
              - wget
              - --spider
              - http://localhost:4000/
            initialDelaySeconds: 10
            periodSeconds: 30
          readinessProbe:
            exec:
              command:
              - wget
              - --spider
              - http://localhost:4000/
            initialDelaySeconds: 10
            periodSeconds: 30
          resources:
            {}
      volumes:
        - name: tmp
          emptyDir: {}
