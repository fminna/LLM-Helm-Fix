---
# Source: eolo-planner/templates/mongodb.yml
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  labels:
    app: mongodb
spec:
  ports:
  - port: 27017
    targetPort: 27017
    protocol: TCP
    name: mongodb-port-27017
  - port: 27018
    targetPort: 27018
    protocol: TCP
    name: mongodb-port-27018
  - port: 27019
    targetPort: 27019
    protocol: TCP
    name: mongodb-port-27019
  selector:
    app: mongodb
  type: ClusterIP
---
# Source: eolo-planner/templates/mysql.yml
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  labels:
    app: mysql
spec:
  ports:
  - port: 3306
    targetPort: 3306
    protocol: TCP
    name: mysql-port
  selector:
    app: mysql
  type: ClusterIP
---
# Source: eolo-planner/templates/rabbitmq.yml
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-service
  labels:
    app: rabbitmq
spec:
  ports:
  - port: 5672
    targetPort: 5672
    protocol: TCP
    name: rabbitmq-port-5672
  - port: 15672
    targetPort: 15672
    protocol: TCP
    name: rabbitmq-port-15672
  selector:
    app: rabbitmq
  type: ClusterIP
---
# Source: eolo-planner/templates/server.yml
apiVersion: v1
kind: Service
metadata:
  name: server-service
  labels:
    app: server
spec:
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: server-port
  selector:
    app: server
  type: ClusterIP
---
# Source: eolo-planner/templates/toposervice.yml
apiVersion: v1
kind: Service
metadata:
  name: toposervice-service
  labels:
    app: toposervice
spec:
  ports:
  - port: 8181
    targetPort: 8181
    protocol: TCP
    name: topo-port
  selector:
    app: toposervice
  type: ClusterIP
---
# Source: eolo-planner/templates/weatherservice.yml
apiVersion: v1
kind: Service
metadata:
  name: weatherservice-service
  labels:
    app: weatherservice
spec:
  ports:
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: weatherservice-port
  selector:
    app: weatherservice
  type: ClusterIP
---
# Source: eolo-planner/templates/mongodb.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deploy
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: mongodb
  replicas: 1
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:5.0.6-focal
        env:
        - name: MONGO_INITDB_DATABASE
          value: topoDB
        - name: MONGO_INITDB_ROOT_USERNAME
          value: root
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: password
        ports:
        - containerPort: 27017
        - containerPort: 27018
        - containerPort: 27019
---
# Source: eolo-planner/templates/mysql.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deploy
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0.28
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: password
        - name: MYSQL_DATABASE
          value: eoloplantsdb
        ports:
        - containerPort: 3306
---
# Source: eolo-planner/templates/planner.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: planner-deploy
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: planner
  replicas: 1
  template:
    metadata:
      labels:
        app: planner
        dns-policy: enabled
    spec:
      securityContext:
        runAsUser: 1001
      restartPolicy: Always
      containers:
      - name: planner
        image: arturisimo/planner:v1.0
        env:
        - name: TOPO_HOST
          value: toposervice-service
        - name: TOPO_PORT
          value: "8181"
        - name: GRPC_CLIENT_WEATHERSERVER_ADDRESS
          value: static://weatherservice-service:9090
        - name: SPRING_CLOUD_STREAM_RABBIT_BINDER_NODES
          value: rabbitmq-service:5672
        - name: SPRING_RABBITMQ_HOST
          value: rabbitmq-service
        - name: SPRING_RABBITMQ_PORT
          value: "5672"
        - name: SPRING_RABBITMQ_USERNAME
          value: root
        - name: SPRING_RABBITMQ_PASSWORD
          value: password
---
# Source: eolo-planner/templates/rabbitmq.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-deploy
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: rabbitmq
  replicas: 1
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3.9-management
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: root
        - name: RABBITMQ_DEFAULT_PASS
          value: password
        ports:
        - containerPort: 5672
        - containerPort: 15672
---
# Source: eolo-planner/templates/server.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: server-deploy
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: server
  replicas: 1
  template:
    metadata:
      labels:
        app: server
        dns-policy: enabled
    spec:
      securityContext:
        runAsUser: 1001
      restartPolicy: Always
      containers:
      - name: server
        image: arturisimo/server-urjc:v1.0
        command: ["bash"]
        args:
        - "-c"
        - "./wait-for-it.sh mysql-service:3306 -t 500 -- ./wait-for-it.sh rabbitmq-service:5672 -t 500 -- node src/server.js"
        env:
        - name: MYSQL_HOST
          value: mysql-service
        - name: MYSQL_DB
          value: eoloplantsdb
        - name: MYSQL_USER
          value: root
        - name: MYSQL_PASS
          value: password
        - name: RABBITMQ_URL
          value: amqp://root:password@rabbitmq-service
        ports:
        - containerPort: 3000
---
# Source: eolo-planner/templates/toposervice.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: toposervice-deploy
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: toposervice
  replicas: 1
  template:
    metadata:
      labels:
        app: toposervice
        dns-policy: enabled
    spec:
      securityContext:
        runAsUser: 1001
      restartPolicy: Always
      containers:
      - name: toposervice
        image: codeurjc/toposervice:v1.0
        env:
        - name: SPRING_DATA_MONGODB_HOST
          value: mongodb-service
        - name: SPRING_DATA_MONGODB_PORT
          value: "27017"
        - name: SPRING_DATA_MONGODB_DATABASE
          value: topoDB
        - name: SPRING_DATA_MONGODB_AUTHENTICATION-DATABASE
          value: admin
        - name: SPRING_DATA_MONGODB_USERNAME
          value: root
        - name: SPRING_DATA_MONGODB_PASSWORD
          value: password
        ports:
        - containerPort: 8181
---
# Source: eolo-planner/templates/weatherservice.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: weatherservice-deploy
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: weatherservice
  replicas: 1
  template:
    metadata:
      labels:
        app: weatherservice
    spec:
      securityContext:
        runAsUser: 1001
      restartPolicy: Always
      containers:
      - name: weatherservice
        image: codeurjc/weatherservice:v1.0
        env:
        - name: GRPC_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: GRPC_PORT
          value: "9090"
        ports:
        - containerPort: 9090
---
# Source: eolo-planner/templates/ingress.yml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: multi-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
  - host: eoloserver-svc-arturisimo.cloud.okteto.net
    http:
      paths:
      - path: /(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: server-service
            port:
              name: server-port
      - path: /toposervice/(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: toposervice-service
            port:
              name: topo-port
