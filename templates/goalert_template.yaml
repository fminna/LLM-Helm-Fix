---
# Source: goalert/templates/secret.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: release-name-goalert
data:
  AUTH_TOKEN: "eHh4"
---
# Source: goalert/templates/monitoring-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-goalert
  labels:
    helm.sh/chart: goalert-0.0.29
    app.kubernetes.io/name: goalert
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.29"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: goalert
    app.kubernetes.io/instance: release-name
---
# Source: goalert/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-goalert
  labels:
    helm.sh/chart: goalert-0.0.29
    app.kubernetes.io/name: goalert
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.29"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: goalert
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: goalert
        app.kubernetes.io/instance: release-name
    spec:
      securityContext:
        {}
      containers:
        - name: goalert
          securityContext:
            {}
          image: "phntom/goalert:0.0.29@sha256:8ca4df55499b13e7f751c9548535951474cd803f61514dcf8223c948dd6461d5"
          imagePullPolicy: IfNotPresent
          env:
            - name: CHAT_DOMAIN
              value: http://mattermost-team-edition.chat.svc:8065
            - name: AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name:  release-name-goalert
                  key: AUTH_TOKEN
            - name: APP_ID
              value: "123"
            - name: APP_HASH
              value: "xxx"
          resources:
            {}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: http
          readinessProbe:
            httpGet:
              path: /metrics
              port: http
---
# Source: goalert/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-goalert
  labels:
    helm.sh/chart: goalert-0.0.29
    app.kubernetes.io/name: goalert
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.29"
    app.kubernetes.io/managed-by: Helm
  annotations:
    nginx.ingress.kubernetes.io/cors-allow-methods: GET
    nginx.ingress.kubernetes.io/cors-allow-origin: https://kix.co.il
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/rewrite-target: $1
    nginx.ingress.kubernetes.io/server-snippet: |
      if ($http_cf_connecting_ip != $remote_addr) { return 403; }
    nginx.ingress.kubernetes.io/service-upstream: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  rules:
    - host: "binaryvision.co.il"
      http:
        paths:
          - path: /goalert(/.*)
            pathType: Prefix
            backend:
              service:
                name: release-name-goalert
                port:
                  number: 3000
