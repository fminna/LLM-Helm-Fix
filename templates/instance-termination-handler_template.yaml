---
# Source: instance-termination-handler/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: default
  name: release-name-instance-termination-handler
  labels:
    app: instance-termination-handler
    chart: instance-termination-handler
    heritage: Helm
    release: release-name
---
# Source: instance-termination-handler/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-instance-termination-handler
  labels:
    app.kubernetes.io/name: instance-termination-handler
    helm.sh/chart: instance-termination-handler-0.1.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.3"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |-
    log:
      format: logfmt
      level: info
    http:
      listenAddress: ":8081"
    termdetect:
      defaultSecondsUntilTermination: 30
    termnotifier:
      triggerEnabled: true
      triggerEndpoint: /terminate
    asgInstanceTermNotifier:
      drainWaitTimeoutSeconds: 120
      enabled: true
      hookName: instance-termination-handler
      hookTimeoutSeconds: 30
      pollingIntervalSeconds: 10
    asgInstanceDetacher:
      asgLabelName: bzc:detach-asg-instance-on-termination
      enabled: true
    metrics:
      enabled: true
      endpoint: /metrics
    drainer:
      drainWithTaint: true
      enabled: true
      gracePeriodSeconds: -1
      timeout: 0
    hollowtreesNotifier:
      enabled: false
      URL: ""
      skipTLSVerify: true
      organizationID: 0
      clusterID: 0
      clusterName: 
      jwtToken: ""

    testserver:
      enabled: false
---
# Source: instance-termination-handler/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-instance-termination-handler
subjects:
- kind: ServiceAccount
  name: release-name-instance-termination-handler
  namespace: default
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: cluster-admin
---
# Source: instance-termination-handler/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: release-name-instance-termination-handler
  labels:
    app.kubernetes.io/name: instance-termination-handler
    helm.sh/chart: instance-termination-handler-0.1.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.3"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: instance-termination-handler
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: instance-termination-handler
        app.kubernetes.io/instance: release-name
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: release-name-instance-termination-handler
      containers:
      - name: instance-termination-handler
        image: "ghcr.io/banzaicloud/instance-termination-handler:0.1.3"
        imagePullPolicy: "IfNotPresent"
        env:
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        ports:
        - name: http
          containerPort: 8081
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 120
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
            httpHeaders:
          initialDelaySeconds: 30
          timeoutSeconds: 3
          periodSeconds: 5
        resources:
          requests:
            cpu: 120m
            memory: 256Mi
        volumeMounts:
        - name: config
          mountPath: /config/
      volumes:
      - name: config
        configMap:
          name: release-name-instance-termination-handler
      tolerations:
        - operator: Exists
