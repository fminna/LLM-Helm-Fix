---
# Source: cuest-kubelet/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cuest-kubelet
---
# Source: cuest-kubelet/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: vkubelet-cuest-0-cfg
data:
  vkubelet-cuest-0-cfg.json: |
    {
        "virtual-kubelet": {
          "cpu": "2",
          "memory": "32Gi",
          "pods": "128"
        }
      }
---
# Source: cuest-kubelet/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cuest-kubelet
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  - services
  - persistentvolumes
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - create
  - get
- apiGroups:
  - ""
  resources:
  - nodes/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - pods/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - create
  - update
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - create
  - get  
  - list
  - get
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update

# - apiGroups:
#   - certificates.k8s.io
#   resources:
#   - certificatesigningrequests
#   verbs:
#   - create
#   - get
#   - patch
#   - remove
#   - approve
#   - list
# - apiGroups:
#   - certificates.k8s.io
#   resources:
#   - certificatesigningrequests/approval
#   verbs:
#   - update
# - apiGroups:
#   - certificates.k8s.io
#   resources:
#   - signers
#   resourceNames:
#   - kubernetes.io/kubelet-serving
#   verbs:
#   - approve
# - apiGroups:
#   - certificates.k8s.io
#   resources:
#   - certificatesigningrequests
#   resourceNames:
#   - kubernetes.io/kubelet-serving
#   verbs:
#   - sign
#   - approve
# - apiGroups:
#   - ""
#   resources:
#   - serviceaccounts/token
#   verbs:
#   - create
---
# Source: cuest-kubelet/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cuest-kubelet
subjects:
- kind: ServiceAccount
  name: cuest-kubelet
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cuest-kubelet

# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   name: cuest-kubelet-token-creator
#   namespace: default
# roleRef:
#   kind: ClusterRole
#   name: system:controller:persistent-volume-binder
#   apiGroup: rbac.authorization.k8s.io
# subjects:
# - kind: ServiceAccount
#   name: cuest-kubelet
#   namespace: default
---
# Source: cuest-kubelet/templates/pod.yaml
apiVersion: v1
kind: Pod
metadata:
  name: cuest-kubelet
spec:
  containers:
    - name: cuest-kubelet
      image: cuestio/cuest-kubelet:latest
      resources:
        limits:
          cpu: 250m
          memory: 200Mi
        requests:
          cpu: 250m
          memory: 200Mi
      imagePullPolicy: Always
      args:
        - /cuest-kubelet
        - --provider
        - cuest
        - --nodename
        - cuest-node
        - --startup-timeout
        - 10s
        - --klog.v
        - "2"
        - --klog.logtostderr
        - --log-level
        - error
        - --no-verify-clients
      env:
        - name: JAEGER_AGENT_ENDPOINT
          value: localhost:6831
        - name: KUBELET_PORT
          value: "10250"
        - name: LOG_LEVEL
          value: debug
        - name: VKUBELET_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: WS_URL
          value: "wss://socket.cuest.io"
        - name: AUTH_URL
          value: "https://auth.cuest.io/oauth2/token"
        - name: AUTH_Secret
          value: 
        - name: AUTH_ID
          value: 
        - name: KUBELET_ID
          value: "5380ffe12rtr1212123"     
        - name: BOOTSTRAP_KUBECONFIG
          value: "/host/var/lib/kubelet/kubeconfig"            
      volumeMounts:
        - name: host-root
          mountPath: /host
  serviceAccountName: cuest-kubelet
  volumes:
    - name: host-root
      hostPath:
        path: /
