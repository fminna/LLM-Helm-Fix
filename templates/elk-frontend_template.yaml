---
# Source: elk-frontend/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-elk-frontend
  labels:
    helm.sh/chart: elk-frontend-0.2.14
    app.kubernetes.io/name: elk-frontend
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.14.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: elk-frontend/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-elk-frontend-data
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "1Gi"
---
# Source: elk-frontend/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-elk-frontend
  labels:
    helm.sh/chart: elk-frontend-0.2.14
    app.kubernetes.io/name: elk-frontend
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.14.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 5314
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: elk-frontend
    app.kubernetes.io/instance: release-name
---
# Source: elk-frontend/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-elk-frontend
  labels:
    helm.sh/chart: elk-frontend-0.2.14
    app.kubernetes.io/name: elk-frontend
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.14.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: elk-frontend
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: elk-frontend
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-elk-frontend
      securityContext:
        fsGroup: 911
      containers:
        - name: elk-frontend
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 911
          image: "docker.io/0hlov3/elk-frontend:v0.14.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 5314
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
          volumeMounts:
            - name: elk-data
              mountPath: /elk/data
              readOnly: false
      volumes:
        - name: elk-data
          persistentVolumeClaim:
            claimName: release-name-elk-frontend-data
---
# Source: elk-frontend/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-elk-frontend-test-connection"
  labels:
    helm.sh/chart: elk-frontend-0.2.14
    app.kubernetes.io/name: elk-frontend
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.14.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-elk-frontend:5314']
  restartPolicy: Never
