---
# Source: postgresdb/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-postgresdb
  namespace: "default"
  labels:
    helm.sh/chart: postgresdb-0.2.0
    app.kubernetes.io/name: postgresdb
    app.kubernetes.io/instance: release-name
    gyeeta.io/podtype: postgresdb
    app.kubernetes.io/version: "12.2.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: gyeeta
type: Opaque
data:
  CFG_POSTGRES_PASSWORD: "cmVsZWFzZS1uYW1lLXBhc3N3b3Jk"
---
# Source: postgresdb/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresdb-headless
  namespace: "default"
  labels:
    helm.sh/chart: postgresdb-0.2.0
    app.kubernetes.io/name: postgresdb
    app.kubernetes.io/instance: release-name
    gyeeta.io/podtype: postgresdb
    app.kubernetes.io/version: "12.2.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: gyeeta
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: tcp-postgresql
      port: 10040
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresdb
    app.kubernetes.io/instance: release-name
    gyeeta.io/podtype: postgresdb
---
# Source: postgresdb/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresdb
  namespace: "default"
  labels:
    helm.sh/chart: postgresdb-0.2.0
    app.kubernetes.io/name: postgresdb
    app.kubernetes.io/instance: release-name
    gyeeta.io/podtype: postgresdb
    app.kubernetes.io/version: "12.2.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: gyeeta
spec:
  type: ClusterIP
  ports:
    - name: tcp-postgresql
      port: 10040
      targetPort: tcp-postgresql
      nodePort: null
  selector:
    app.kubernetes.io/name: postgresdb
    app.kubernetes.io/instance: release-name
    gyeeta.io/podtype: postgresdb
---
# Source: postgresdb/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-postgresdb
  namespace: "default"
  labels:
    helm.sh/chart: postgresdb-0.2.0
    app.kubernetes.io/name: postgresdb
    app.kubernetes.io/instance: release-name
    gyeeta.io/podtype: postgresdb
    app.kubernetes.io/version: "12.2.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: gyeeta
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresdb
      app.kubernetes.io/instance: release-name
      gyeeta.io/podtype: postgresdb
  serviceName: release-name-postgresdb-headless
  replicas: 1
  minReadySeconds: 10
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  template:
    metadata:
      name: release-name-postgresdb
      labels:
        app.kubernetes.io/name: postgresdb
        app.kubernetes.io/instance: release-name
        gyeeta.io/podtype: postgresdb
      annotations:
        checksum/secret: 9eb26b092823cc9d572a8e591bbddd3b427e7fb2c3d5b3695cddf8c84cd4b0a9
    spec:
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: postgresdb
                    app.kubernetes.io/instance: release-name
                    gyeeta.io/podtype: postgresdb
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      terminationGracePeriodSeconds: 10
      securityContext:
        fsGroup: 1001
      initContainers:
        - name: init-postgres
          image: ghcr.io/gyeeta/postgresdb:12.2.0
          imagePullPolicy: IfNotPresent
          resources:
            limits: {}
            requests: {}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: CFG_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-postgresdb
                  key: "CFG_POSTGRES_PASSWORD"
            - name: CFG_POSTGRES_PORT
              value: "10040"
          args:
            - "--initdb"
          volumeMounts:
            - name: dbdata
              mountPath: "/dbdata"              
      containers:
        - name: postgresdb
          image: ghcr.io/gyeeta/postgresdb:12.2.0
          imagePullPolicy: IfNotPresent
          resources:
            limits: {}
            requests: {}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
            readOnlyRootFilesystem: true 
          args:
            - start
          env:
          ports:
            - name: tcp-postgresql
              containerPort: 10040    
          livenessProbe:
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
            exec:
              command:
                - /bin/bash
                - -c
                - exec /postgresdb/bin/pg_isready -U "postgres" -h 127.0.0.1 -p 10040      
          volumeMounts:
           - name: dbdata
             mountPath: "/dbdata"
          resources:
            limits: {}
            requests: {}
      volumes:
  volumeClaimTemplates:
    - metadata:
        name: dbdata
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "10Gi"
