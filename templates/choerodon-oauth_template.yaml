---
# Source: choerodon-oauth/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-choerodon-oauth
  namespace: default
  labels:
    app.kubernetes.io/name: choerodon-oauth
    helm.sh/chart: choerodon-oauth-2.0.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  
  ports:
    - name: server
      port: 8020
      targetPort: server
      nodePort: null
    - name: actuator
      port: 8021
      targetPort: actuator
      nodePort: null
  selector:
    app.kubernetes.io/name: choerodon-oauth
    app.kubernetes.io/instance: release-name
---
# Source: choerodon-oauth/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-choerodon-oauth
  namespace: default
  labels:
    app.kubernetes.io/name: choerodon-oauth
    helm.sh/chart: choerodon-oauth-2.0.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: choerodon-oauth
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: choerodon-oauth
        helm.sh/chart: choerodon-oauth-2.0.3
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
    spec:
      
      enableServiceLinks: false
      automountServiceAccountToken: false
      serviceAccountName: default
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: choerodon-oauth
                    app.kubernetes.io/instance: release-name
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 33
      initContainers:
        - name: server-volume
          image:  registry.cn-shanghai.aliyuncs.com/c7n/choerodon-oauth:2.0.3
          imagePullPolicy: "IfNotPresent"
          command:
            - /bin/sh
            - -ecx
            - |
              cp -rfp /choerodon/* /opt/choerodon
          securityContext:
            runAsUser: 33
          volumeMounts:
            - name: volume
              mountPath: /opt/choerodon
      containers:
        - name: "choerodon-oauth"
          image: registry.cn-shanghai.aliyuncs.com/c7n/javabase:jdk8u282-b08
          imagePullPolicy: "IfNotPresent"
          workingDir: /opt/choerodon
          securityContext:
            runAsUser: 33
          args:
            - "/bin/sh"
            - "-ecx"
            - "java $SKYWALKING_OPTS $JAVA_OPTS -jar /opt/choerodon/choerodon-oauth.jar"
          env:
            - name: SERVER_PORT
              value: "8020"
            - name: MANAGEMENT_SERVER_PORT
              value: "8021"
            - name: CHART_VERSION
              value: "2.0.3"
            
            - name: "CHOERODON_COOKIE_SAMESITE"
              value: "lax"
            - name: "CHOERODON_COOKIE_SECURE"
              value: "false"
            - name: "EUREKA_CLIENT_SERVICEURL_DEFAULTZONE"
              value: "http://dev.hzero.org:8000/eureka/"
            - name: "EUREKA_INSTANCE_LEASE_EXPIRATION_DURATION_IN_SECONDS"
              value: "45"
            - name: "EUREKA_INSTANCE_LEASE_RENEWAL_INTERVAL_IN_SECONDS"
              value: "30"
            - name: "EUREKA_INSTANCE_PREFER_IP_ADDRESS"
              value: "true"
            - name: "FEIGN_CLIENT_CONFIG_DEFAULT_CONNECT_TIMEOUT"
              value: "2000"
            - name: "FEIGN_CLIENT_CONFIG_DEFAULT_READ_TIMEOUT"
              value: "5000"
            - name: "HZERO_GATEWAY_URL"
              value: "http://api.example.com"
            - name: "HZERO_OAUTH_BASE_URL"
              value: "http://api.example.com/oauth"
            - name: "HZERO_OAUTH_CUSTOM_RESOURCE_MATCHER"
              value: "false"
            - name: "HZERO_OAUTH_ENABLE_ALWAYS_CAPTCHA"
              value: "false"
            - name: "HZERO_OAUTH_LOGIN_DEFAULT_CLIENT_ID"
              value: "choerodonparent"
            - name: "HZERO_OAUTH_LOGIN_DEFAULT_TEMPLATE"
              value: "slide"
            - name: "HZERO_OAUTH_LOGIN_ENABLE_HTTPS"
              value: "false"
            - name: "HZERO_OAUTH_LOGIN_PAGE"
              value: "/choerodon/login"
            - name: "HZERO_OAUTH_LOGIN_SUCCESS_URL"
              value: "http://api.example.com"
            - name: "HZERO_OAUTH_LOGIN_SUPPORT_FIELDS"
              value: "username,email,phone"
            - name: "HZERO_OAUTH_LOGOUT_CLEAR_TOKEN"
              value: "true"
            - name: "HZERO_OAUTH_NOT_CHECK_CLIENT_EQUALS"
              value: "false"
            - name: "HZERO_OAUTH_SSO_ENABLED"
              value: "true"
            - name: "LOG_LEVEL"
              value: "info"
            - name: "SPRING_DATASOURCE_MAXIMUM_POOL_SIZE"
              value: "200"
            - name: "SPRING_DATASOURCE_MINIMUM_IDLE"
              value: "20"
            - name: "SPRING_DATASOURCE_PASSWORD"
              value: "hzero"
            - name: "SPRING_DATASOURCE_URL"
              value: "jdbc:mysql://db.hzero.org:3306/hzero_platform?useUnicode=true&characterEncoding=utf-8&useSSL=false"
            - name: "SPRING_DATASOURCE_USERNAME"
              value: "hzero"
            - name: "SPRING_REDIS_DATABASE"
              value: "3"
            - name: "SPRING_REDIS_HOST"
              value: "redis.hzero.org"
            - name: "SPRING_REDIS_PORT"
              value: "6379"
          envFrom:
          ports:
            - name: server
              containerPort: 8020
              protocol: TCP
            - name: actuator
              containerPort: 8021
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: server
            initialDelaySeconds: 480
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: actuator
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 5
          resources:
            limits:
              memory: 2Gi
            requests:
              memory: 2Gi
          volumeMounts:
            - name: volume
              mountPath: /opt/choerodon
      volumes:
        - name: volume
          emptyDir: {}
