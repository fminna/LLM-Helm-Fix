---
# Source: jenkins-x-platform/charts/cleanup/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: cleanup
    chart: "cleanup-2.3.111"
    release: "release-name"
    heritage: "Helm"
  name: cleanup
---
# Source: jenkins-x-platform/charts/controllerrole/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-controllerrole
  labels:
    app: controllerrole
    chart: controllerrole-2.1.155
    release: release-name
    heritage: Helm
  annotations:
---
# Source: jenkins-x-platform/charts/expose/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: expose
    chart: "expose-2.3.111"
    release: "release-name"
    heritage: "Helm"
  name: expose
---
# Source: jenkins-x-platform/charts/gcactivities/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-gcactivities
  labels:
    app: gcactivities
    chart: gcactivities-2.1.155
    release: release-name
    heritage: Helm
  annotations:
---
# Source: jenkins-x-platform/charts/gcpods/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-gcpods
  labels:
    app: gcpods
    chart: gcpods-2.1.155
    release: release-name
    heritage: Helm
  annotations:
---
# Source: jenkins-x-platform/charts/gcpreviews/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-gcpreviews
  labels:
    app: gcpreviews
    chart: gcpreviews-2.1.155
    release: release-name
    heritage: Helm
  annotations:
---
# Source: jenkins-x-platform/charts/chartmuseum/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-chartmuseum
  annotations:
    jenkins.io/credentials-keybinding-password: BASIC_AUTH_PASS
    jenkins.io/credentials-keybinding-username: BASIC_AUTH_USER
  labels:
    jenkins.io/credentials-type: usernamePassword
    app: chartmuseum
    chart: chartmuseum-1.1.7
    heritage: "Helm"
    release: "release-name"
type: Opaque
data:
  BASIC_AUTH_PASS: YWRtaW4=
  BASIC_AUTH_USER: YWRtaW4=
---
# Source: jenkins-x-platform/charts/docker-registry/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-docker-registry-secret
  labels:
    app: docker-registry
    chart: docker-registry-1.9.3
    heritage: Helm
    release: release-name
type: Opaque
data:
  haSharedSecret: "dVRwTnBPOVBFMnJPcGQ1eg=="
---
# Source: jenkins-x-platform/charts/nexus/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: nexus
  labels:
    app: release-name-nexus
    chart: "nexus-0.1.37"
    release: "release-name"
    heritage: "Helm"
type: Opaque
data:  
  password: "YWRtaW4xMjM="
---
# Source: jenkins-x-platform/templates/docker-cfg-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: jenkins-docker-cfg
type: Opaque
data:
  config.json: "e30="
---
# Source: jenkins-x-platform/templates/jx-basic-auth-secret.yaml
apiVersion: v1
data:
  auth: "YWRtaW46JGFwcjEkYS9IZFRyVjckWFlDR0pXRjlQZFZ3VlZUdmpNeWFVLw=="
kind: Secret
metadata:
  name: jx-basic-auth
type: Opaque
---
# Source: jenkins-x-platform/templates/maven-settings-secret.yaml
apiVersion: v1
data:
  settings.xml: "PHNldHRpbmdzPgogICAgPCEtLSBzZXRzIHRoZSBsb2NhbCBtYXZlbiByZXBvc2l0b3J5IG91dHNpZGUgb2YgdGhlIH4vLm0yIGZvbGRlciBmb3IgZWFzaWVyIG1vdW50aW5nIG9mIHNlY3JldHMgYW5kIHJlcG8gLS0+CiAgICA8bG9jYWxSZXBvc2l0b3J5PiR7dXNlci5ob21lfS8ubXZucmVwb3NpdG9yeTwvbG9jYWxSZXBvc2l0b3J5PgogICAgPCEtLSBsZXRzIGRpc2FibGUgdGhlIGRvd25sb2FkIHByb2dyZXNzIGluZGljYXRvciB0aGF0IGZpbGxzIHVwIGxvZ3MgLS0+CiAgICA8aW50ZXJhY3RpdmVNb2RlPmZhbHNlPC9pbnRlcmFjdGl2ZU1vZGU+CiAgICA8bWlycm9ycz4KICAgICAgICA8bWlycm9yPgogICAgICAgIDxpZD5uZXh1czwvaWQ+CiAgICAgICAgPG1pcnJvck9mPmV4dGVybmFsOio8L21pcnJvck9mPgogICAgICAgIDx1cmw+aHR0cDovL25leHVzOjgwODEvcmVwb3NpdG9yeS9tYXZlbi1ncm91cC88L3VybD4KICAgICAgICA8L21pcnJvcj4KICAgIDwvbWlycm9ycz4KICAgIDxzZXJ2ZXJzPgogICAgICAgIDxzZXJ2ZXI+CiAgICAgICAgPGlkPm5leHVzPC9pZD4KICAgICAgICA8dXNlcm5hbWU+YWRtaW48L3VzZXJuYW1lPgogICAgICAgIDxwYXNzd29yZD5hZG1pbjEyMzwvcGFzc3dvcmQ+CiAgICA8L3NlcnZlcj4KICAgIDxzZXJ2ZXI+CiAgICAgICAgPGlkPm9zcy1zb25hdHlwZS1zdGFnaW5nPC9pZD4KICAgICAgICA8dXNlcm5hbWU+PC91c2VybmFtZT4KICAgICAgICA8cGFzc3dvcmQ+PC9wYXNzd29yZD4KICAgICAgICA8L3NlcnZlcj4KICAgIDwvc2VydmVycz4KICAgIDxwcm9maWxlcz4KICAgICAgICA8cHJvZmlsZT4KICAgICAgICAgICAgPGlkPm5leHVzPC9pZD4KICAgICAgICAgICAgPHByb3BlcnRpZXM+CiAgICAgICAgICAgICAgICA8YWx0RGVwbG95bWVudFJlcG9zaXRvcnk+bmV4dXM6OmRlZmF1bHQ6Omh0dHA6Ly9uZXh1cy9yZXBvc2l0b3J5L21hdmVuLXNuYXBzaG90cy88L2FsdERlcGxveW1lbnRSZXBvc2l0b3J5PgogICAgICAgICAgICAgICAgPGFsdFJlbGVhc2VEZXBsb3ltZW50UmVwb3NpdG9yeT5uZXh1czo6ZGVmYXVsdDo6aHR0cDovL25leHVzL3JlcG9zaXRvcnkvbWF2ZW4tcmVsZWFzZXMvPC9hbHRSZWxlYXNlRGVwbG95bWVudFJlcG9zaXRvcnk+CiAgICAgICAgICAgICAgICA8YWx0U25hcHNob3REZXBsb3ltZW50UmVwb3NpdG9yeT5uZXh1czo6ZGVmYXVsdDo6aHR0cDovL25leHVzL3JlcG9zaXRvcnkvbWF2ZW4tc25hcHNob3RzLzwvYWx0U25hcHNob3REZXBsb3ltZW50UmVwb3NpdG9yeT4KICAgICAgICAgICAgPC9wcm9wZXJ0aWVzPgogICAgICAgIDwvcHJvZmlsZT4KICAgICAgICA8cHJvZmlsZT4KICAgICAgICAgICAgPGlkPnJlbGVhc2U8L2lkPgogICAgICAgICAgICA8cHJvcGVydGllcz4KICAgICAgICAgICAgICAgIDxncGcuZXhlY3V0YWJsZT5ncGc8L2dwZy5leGVjdXRhYmxlPgogICAgICAgICAgICAgICAgPGdwZy5wYXNzcGhyYXNlPm15c2VjcmV0cGFzc3BocmFzZTwvZ3BnLnBhc3NwaHJhc2U+CiAgICAgICAgICAgIDwvcHJvcGVydGllcz4KICAgICAgICA8L3Byb2ZpbGU+CiAgICA8L3Byb2ZpbGVzPgogICAgPGFjdGl2ZVByb2ZpbGVzPgogICAgICAgIDwhLS1tYWtlIHRoZSBwcm9maWxlIGFjdGl2ZSBhbGwgdGhlIHRpbWUgLS0+CiAgICAgICAgPGFjdGl2ZVByb2ZpbGU+bmV4dXM8L2FjdGl2ZVByb2ZpbGU+CiAgICA8L2FjdGl2ZVByb2ZpbGVzPgo8L3NldHRpbmdzPg=="
kind: Secret
metadata:
  name: jenkins-maven-settings
type: Opaque
---
# Source: jenkins-x-platform/templates/npm-token-secret.yaml
apiVersion: v1
data:
  token: ""
kind: Secret
metadata:
  name: jenkins-npm-token
type: Opaque
---
# Source: jenkins-x-platform/templates/release-gpg-secret.yaml
apiVersion: v1
data:
  pubring.gpg: ""
  sec-jenkins.gpg: ""
  secring.gpg: ""
  trustdb.gpg: ""
kind: Secret
metadata:
  name: jenkins-release-gpg
type: Opaque
---
# Source: jenkins-x-platform/templates/ssh-config-secret.yaml
apiVersion: v1
data:
  .config: "SG9zdCBnaXRodWIuY29tCiAgICBVc2VyIGdpdAogICAgSWRlbnRpdHlGaWxlIC9yb290Ly5zc2gtZ2l0L3NzaC1rZXkKICAgIFN0cmljdEhvc3RLZXlDaGVja2luZyBubw=="
kind: Secret
metadata:
  name: jenkins-ssh-config
type: Opaque
---
# Source: jenkins-x-platform/charts/docker-registry/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-docker-registry-config
  labels:
    app: docker-registry
    chart: docker-registry-1.9.3
    heritage: Helm
    release: release-name
data:
  config.yml: |-
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3
    http:
      addr: :5000
      headers:
        X-Content-Type-Options:
        - nosniff
    log:
      fields:
        service: registry
    storage:
      cache:
        blobdescriptor: inmemory
    version: 0.1
---
# Source: jenkins-x-platform/charts/nexus/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: nexus
  annotations:
    expose.config.fabric8.io/path-key: context.path
data:
  context.path: /
---
# Source: jenkins-x-platform/templates/jenkins-x-devpod-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-devpod-config"
data:
  versions: |-
    theia: 0.3.14
---
# Source: jenkins-x-platform/templates/jenkins-x-docker-registry.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: jenkins-x-docker-registry
  annotations:
    expose.config.fabric8.io/clusterip-port-if-empty-key: docker.registry
data:
  docker.registry:
---
# Source: jenkins-x-platform/templates/jenkins-x-extensions-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-extensions"
data:  
  knownRepositories: |
    repositories:
    - chart: {}
      github: jenkins-x/jenkins-x-extensions
  repository: |
    chart: {}
    github: jenkins-x/jenkins-x-extensions
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-dlang"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-dlang
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 8080
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: dlang
        image: gcr.io/jenkinsxio/builder-dlang:2.1.155-778
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 500m
            memory: 1024Mi
          limits:
            cpu: 1
            memory: 2048Mi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-dotnet"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-dotnet
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 8080
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: dotnet
        image: gcr.io/jenkinsxio/builder-dotnet:2.1.155-778
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
            cpu: 2
            memory: 2048Mi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-go"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-go
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 2345, 8080
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: go
        image: gcr.io/jenkinsxio/builder-go:2.1.155-778
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 400m
            memory: 600Mi
          limits:
            cpu: 1
            memory: 1448Mi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-gradle"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-gradle
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 5005, 8080
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      - name: volume-1
        secret:
          secretName: jenkins-release-gpg
      containers:
      - name: gradle
        image: gcr.io/jenkinsxio/builder-gradle:2.1.155-778
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        - name: _JAVA_OPTIONS
          value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
            cpu: 1
            memory: 1024Mi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
          - name: volume-1
            mountPath: /home/jenkins/.gnupg
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-jx-base"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-jx-base
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: jx-base
        image: gcr.io/jenkinsxio/builder-jx:2.1.155-778
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 400m
            memory: 512Mi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-machine-learning"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-machine-learning
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 3000, 8000
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: machine-learning
        image: gcr.io/jenkinsxio/builder-machine-learning:0.1.1317
        args:
        - cat
        command:
        - /bin/bash
        - -cl
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 2000m
            memory: 4Gi
          limits:
            cpu: 8000m
            memory: 16Gi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-machine-learning-gpu"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-machine-learning-gpu
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 3000, 8000
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: machine-learning
        image: gcr.io/jenkinsxio/builder-machine-learning-gpu:0.1.1317
        args:
        - cat
        command:
        - /bin/bash
        - -cl
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 1000m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 2Gi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-maven"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-maven
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 5005, 8080
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-maven-settings
      - name: volume-1
        secret:
          secretName: jenkins-docker-cfg
      - name: volume-2
        secret:
          secretName: jenkins-release-gpg
      containers:
      - name: maven
        image: gcr.io/jenkinsxio/builder-maven:2.1.155-778
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: MAVEN_OPTS
          value: -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        - name: _JAVA_OPTIONS
          value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
            cpu: 1
            memory: 1024Mi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /root/.m2/
          - name: volume-1
            mountPath: /home/jenkins/.docker
          - name: volume-2
            mountPath: /home/jenkins/.gnupg
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-maven-graalvm"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-maven-graalvm
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 5005, 8080
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-maven-settings
      - name: volume-1
        secret:
          secretName: jenkins-docker-cfg
      - name: volume-2
        secret:
          secretName: jenkins-release-gpg
      containers:
      - name: maven
        image: gcr.io/jenkinsxio/builder-maven-graalvm:0.1.560
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: MAVEN_OPTS
          value: -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        - name: _JAVA_OPTIONS
          value: -XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx1800m
        resources:
          requests:
            cpu: 400m
            memory: 2Gi
          limits:
            cpu: 1
            memory: 3Gi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /root/.m2/
          - name: volume-1
            mountPath: /home/jenkins/.docker
          - name: volume-2
            mountPath: /home/jenkins/.gnupg
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-maven-graalvm-java11"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-maven-graalvm-java11
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 5005, 8080
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-maven-settings
      - name: volume-1
        secret:
          secretName: jenkins-docker-cfg
      - name: volume-2
        secret:
          secretName: jenkins-release-gpg
      containers:
      - name: maven
        image: gcr.io/jenkinsxio/builder-maven-graalvm-java11:2.1.155-778
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: MAVEN_OPTS
          value: -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        - name: _JAVA_OPTIONS
          value: -XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx1800m
        resources:
          requests:
            cpu: 400m
            memory: 2Gi
          limits:
            cpu: 1
            memory: 3Gi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /root/.m2/
          - name: volume-1
            mountPath: /home/jenkins/.docker
          - name: volume-2
            mountPath: /home/jenkins/.gnupg
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-maven-java11"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-maven-java11
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 5005, 8080
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-maven-settings
      - name: volume-1
        secret:
          secretName: jenkins-docker-cfg
      - name: volume-2
        secret:
          secretName: jenkins-release-gpg
      containers:
      - name: maven
        image: gcr.io/jenkinsxio/builder-maven-java11:2.1.155-778
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: MAVEN_OPTS
          value: -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        - name: _JAVA_OPTIONS
          value: -XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
            cpu: 1
            memory: 1024Mi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /root/.m2/
          - name: volume-1
            mountPath: /home/jenkins/.docker
          - name: volume-2
            mountPath: /home/jenkins/.gnupg
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-maven-java14"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-maven-java14
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 5005, 8080
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-maven-settings
      - name: volume-1
        secret:
          secretName: jenkins-docker-cfg
      - name: volume-2
        secret:
          secretName: jenkins-release-gpg
      containers:
      - name: maven
        image: gcr.io/jenkinsxio/builder-maven-java14:2.1.155-778
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: MAVEN_OPTS
          value: -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        - name: _JAVA_OPTIONS
          value: -XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
            cpu: 1
            memory: 1024Mi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /root/.m2/
          - name: volume-1
            mountPath: /home/jenkins/.docker
          - name: volume-2
            mountPath: /home/jenkins/.gnupg
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-maven-nodejs"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-maven-nodejs
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 9229, 3000, 8080, 5005
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-maven-settings
      - name: volume-1
        secret:
          secretName: jenkins-docker-cfg
      - name: volume-2
        secret:
          secretName: jenkins-release-gpg
      containers:
      - name: mavennodejs
        image: gcr.io/jenkinsxio/builder-maven-nodejs:2.1.155-778
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        - name: _JAVA_OPTIONS
          value: -XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
            cpu: 2
            memory: 2048Mi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /root/.m2/
          - name: volume-1
            mountPath: /home/jenkins/.docker
          - name: volume-2
            mountPath: /home/jenkins/.gnupg
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-newman"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-newman
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 9229, 3000
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: newman
        image: gcr.io/jenkinsxio/builder-newman:2.1.155-778
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
            cpu: 1
            memory: 1024Mi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-nodejs"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-nodejs
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 9229, 3000, 8080
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: nodejs
        image: gcr.io/jenkinsxio/builder-nodejs:2.1.155-778
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
            cpu: 2
            memory: 2048Mi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-nodejs10x"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-nodejs10x
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 9229, 3000, 8080
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: nodejs
        image: gcr.io/jenkinsxio/builder-nodejs10x:2.1.155-778
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
            cpu: 2
            memory: 2048Mi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-nodejs12x"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-nodejs12x
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 9229, 3000, 8080
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: nodejs
        image: gcr.io/jenkinsxio/builder-nodejs12x:2.1.155-778
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
            cpu: 2
            memory: 2048Mi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-nodejs8x"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-nodejs8x
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 9229, 3000, 8080
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: nodejs
        image: gcr.io/jenkinsxio/builder-nodejs8x:2.1.155-778
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
            cpu: 2
            memory: 2048Mi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-packer"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-packer
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: packer
        image: hashicorp/packer:1.4.1
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: false
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-promote"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-promote
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: promote
        image: gcr.io/jenkinsxio/builder-jx:2.1.155-778
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 200m
            memory: 100Mi
          limits:
            cpu: 400m
            memory: 200Mi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-python"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-python
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 3000, 8000
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: python
        image: gcr.io/jenkinsxio/builder-python:2.1.155-778
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
            cpu: 2
            memory: 2048Mi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-python2"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-python2
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 3000, 8000
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: python
        image: gcr.io/jenkinsxio/builder-python2:2.1.155-778
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
            cpu: 2
            memory: 2048Mi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-python37"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-python37
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 3000, 8000
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: python
        image: gcr.io/jenkinsxio/builder-python37:2.1.155-778
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
            cpu: 2
            memory: 2048Mi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-ruby"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-ruby
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 1234, 3000
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: ruby
        image: gcr.io/jenkinsxio/builder-ruby:2.1.155-778
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
            cpu: 2
            memory: 2048Mi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-rust"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-rust
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 8080
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: rust
        image: gcr.io/jenkinsxio/builder-rust:2.1.155-778
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
            cpu: 1
            memory: 1024Mi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-scala"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-scala
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 5005, 8080
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-maven-settings
      - name: volume-1
        secret:
          secretName: jenkins-docker-cfg
      - name: volume-2
        secret:
          secretName: jenkins-release-gpg
      containers:
      - name: scala
        image: gcr.io/jenkinsxio/builder-scala:2.1.155-778
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        - name: _JAVA_OPTIONS
          value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
            cpu: 1
            memory: 1024Mi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /root/.m2/
          - name: volume-1
            mountPath: /home/jenkins/.docker
          - name: volume-2
            mountPath: /home/jenkins/.gnupg
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-swift"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-swift
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 8080
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: swift
        image: gcr.io/jenkinsxio/builder-swift:2.1.155-778
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
            cpu: 2
            memory: 2048Mi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-terraform"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-terraform
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: terraform
        image: gcr.io/jenkinsxio/builder-terraform:2.1.155-778
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 400m
            memory: 600Mi
          limits:
            cpu: 1
            memory: 1448Mi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-aws-cdk"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-aws-cdk
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 9229, 3000, 8080, 5005
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-maven-settings
      - name: volume-1
        secret:
          secretName: jenkins-docker-cfg
      - name: volume-2
        secret:
          secretName: jenkins-release-gpg
      containers:
      - name: aws-cdk
        image: gcr.io/jenkinsxio/builder-maven-nodejs:2.1.155-778
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        - name: _JAVA_OPTIONS
          value: -XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx512m
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
            cpu: 2
            memory: 2048Mi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /root/.m2/
          - name: volume-1
            mountPath: /home/jenkins/.docker
          - name: volume-2
            mountPath: /home/jenkins/.gnupg
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-php5x"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-php5x
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 9229, 3000, 8080
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: nodejs
        image: gcr.io/jenkinsxio/builder-php5x:2.1.155-778
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
            cpu: 2
            memory: 2048Mi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
---
# Source: jenkins-x-platform/templates/jenkins-x-pod-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-pod-template-php7x"
  labels:
    jenkins.io/kind: podTemplate
data:
  pod: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: jenkins-php7x
      labels:
        jenkins.io/kind: build-pod
      annotations:
        jenkins-x.io/devpodPorts: 9229, 3000, 8080
    spec:
      serviceAccount: jenkins
      nodeSelector:
      volumes:
      - name: workspace-volume
        emptyDir: {}
      - name: docker-daemon
        hostPath:
          path: /var/run/docker.sock
      - name: volume-0
        secret:
          secretName: jenkins-docker-cfg
      containers:
      - name: nodejs
        image: gcr.io/jenkinsxio/builder-php7x:2.1.155-778
        args:
        - cat
        command:
        - /bin/sh
        - -c
        workingDir: /home/jenkins
        securityContext:
          privileged: true
        tty: true
        env:
        - name: DOCKER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jenkins-x-docker-registry
              key: docker.registry
        - name: DOCKER_CONFIG
          value: /home/jenkins/.docker/
        - name: GIT_AUTHOR_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_AUTHOR_NAME
          value: jenkins-x-bot
        - name: GIT_COMMITTER_EMAIL
          value: jenkins-x@googlegroups.com
        - name: GIT_COMMITTER_NAME
          value: jenkins-x-bot
        - name: JENKINS_URL
          value: http://jenkins:8080
        - name: XDG_CONFIG_HOME
          value: /home/jenkins
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
            cpu: 2
            memory: 2048Mi
        volumeMounts:
          - mountPath: /home/jenkins
            name: workspace-volume
          - name: docker-daemon
            mountPath: /var/run/docker.sock
          - name: volume-0
            mountPath: /home/jenkins/.docker
---
# Source: jenkins-x-platform/charts/chartmuseum/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-chartmuseum
  labels:
    app: release-name-chartmuseum
    release: "release-name"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: jenkins-x-platform/charts/docker-registry/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-docker-registry
  labels:
    app: release-name-docker-registry
    chart: "docker-registry-1.9.3"
    release: "release-name"
    heritage: "Helm"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "100Gi"
---
# Source: jenkins-x-platform/charts/nexus/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-nexus
  labels:
    app: nexus
    chart: "nexus-0.1.37"
    release: "release-name"
    heritage: "Helm"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: jenkins-x-platform/charts/controllerrole/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: controllerrole-default
rules:
- apiGroups:
  - ""
  - extensions
  - apps
  - rbac.authorization.k8s.io
  - batch
  - jenkins.io
  resources:
  - '*'
  - pods/*
  verbs:
  - list
  - get
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - create
  - patch
  - update
  - list
---
# Source: jenkins-x-platform/charts/gcactivities/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gcactivities-default
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - create
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - delete
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
---
# Source: jenkins-x-platform/charts/gcpreviews/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gcpreviews-default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - delete
- apiGroups:
  - ""
  resources:
  - pods
  - pods/portforward
  verbs:
  - get
  - create
  - list
  - delete
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - clusterrolebindings
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
- apiGroups:
  - tekton.dev
  resources:
  - clustertasks
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
  - create
  - update
---
# Source: jenkins-x-platform/charts/controllerrole/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: controllerrole-default
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: controllerrole-default
subjects:
- kind: ServiceAccount
  name: release-name-controllerrole
  namespace: default
---
# Source: jenkins-x-platform/charts/gcactivities/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gcactivities-default
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gcactivities-default
subjects:
- kind: ServiceAccount
  name: release-name-gcactivities
  namespace: default
---
# Source: jenkins-x-platform/charts/gcpreviews/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gcpreviews-default
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gcpreviews-default
subjects:
- kind: ServiceAccount
  name: release-name-gcpreviews
  namespace: default
---
# Source: jenkins-x-platform/charts/cleanup/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cleanup
rules:
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
  - patch
  - create
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  - services
  verbs:
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - extensions
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - ""
  - "route.openshift.io"
  resources:
  - routes
  verbs:
  - get
  - list
  - watch
  - patch
  - create
  - update
  - delete
---
# Source: jenkins-x-platform/charts/controllerrole/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: controllerrole
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
---
# Source: jenkins-x-platform/charts/expose/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: expose
rules:
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
  - patch
  - create
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  - services
  verbs:
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - extensions
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - ""
  - "route.openshift.io"
  resources:
  - routes
  verbs:
  - get
  - list
  - watch
  - patch
  - create
  - update
  - delete
---
# Source: jenkins-x-platform/charts/gcactivities/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gcactivities
rules:
- apiGroups:
  - jenkins.io
  resources:
  - pipelineactivities
  verbs:
  - list
  - delete
- apiGroups:
  - jenkins.io
  resources:
  - environments
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - jenkins.io
  resources:
  - plugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  - services
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
- apiGroups:
  - tekton.dev
  resources:
  - pipelineruns
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - prow.k8s.io
  resources:
  - prowjobs
  verbs:
  - get
  - list
  - watch
  - delete
---
# Source: jenkins-x-platform/charts/gcpods/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gcpods
rules:
- apiGroups:
  - jenkins.io
  resources:
  - environments
  - plugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - delete
  - list
---
# Source: jenkins-x-platform/charts/gcpreviews/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gcpreviews
rules:
- apiGroups:
  - jenkins.io
  resources:
  - environments
  - releases
  - facts
  - pipelineactivities
  - commitstatuses
  - schedulers
  - extensions
  - users
  - teams
  - pipelinestructures
  - plugins
  - buildpacks
  - apps
  - sourcerepositories
  - gitservices
  - workflows
  - environmentrolebindings
  - sourcerepositorygroups
  verbs:
  - list
  - get
  - patch
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  - services
  - replicationcontrollers
  - persistentvolumeclaims
  - configmaps
  - serviceaccounts
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  - cronjobs
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - pipelines
  - taskruns
  - tasks
  - clustertasks
  - pipelineresources
  - pipelineruns
  - conditions
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  - rolebindings
  verbs:
  - list
  - get
- apiGroups:
  - vault.banzaicloud.com
  resources:
  - vaults
  verbs:
  - list
  - get
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - list
  - get
---
# Source: jenkins-x-platform/templates/committer-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: committer
  labels:
    jenkins.io/kind: "EnvironmentRole"
  annotations:
    title: "Committer"
    description: "A committer can write to project resources but cannot add/remove users"
rules:
- apiGroups:
  - jenkins.io
  - rbac.authorization.k8s.io
  - tekton.dev
  resources:
  - '*'
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - ""
  - extensions
  - apps
  - batch
  resources:
  - '*'
  - pods/*
  - deployments
  verbs:
  - list
  - get
  - watch
  - create
  - update
  - patch
  - delete
---
# Source: jenkins-x-platform/templates/jx-view-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: jx-view
rules:
- apiGroups:
  - jenkins.io
  resources:
  - teams
  verbs:
  - list
  - get
- apiGroups:
  - jenkins.io
  resources:
  - environments
  verbs:
  - list
  - get
- apiGroups:
  - prow.k8s.io
  resources:
  - prowjobs
  verbs:
  - create
---
# Source: jenkins-x-platform/templates/owner-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: owner
  labels:
    jenkins.io/kind: "EnvironmentRole"
  annotations:
     title: "Team Owner"
     description: "A team owner can add/remove users and has write access to all team resources"
rules:
- apiGroups:
  - ""
  - extensions
  - apps
  - rbac.authorization.k8s.io
  - batch
  - jenkins.io
  - tekton.dev
  resources:
  - '*'
  - pods/*
  - deployments
  verbs:
  - list
  - get
  - watch
  - create
  - update
  - patch
  - delete
---
# Source: jenkins-x-platform/templates/viewer-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: viewer
  labels:
    jenkins.io/kind: "EnvironmentRole"
  annotations:
     title: "Viewer"
     description: "A viewer can view all project resources"
rules:
- apiGroups:
  - ""
  - jenkins.io
  - extensions
  - apps
  - rbac.authorization.k8s.io
  - batch
  - tekton.dev
  resources:
  - '*'
  - pipelineruns
  - deployments
  verbs:
  - list
  - get
  - watch
---
# Source: jenkins-x-platform/charts/cleanup/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cleanup
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cleanup
subjects:
- kind: ServiceAccount
  name: cleanup
  namespace: default
---
# Source: jenkins-x-platform/charts/controllerrole/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: controllerrole
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: controllerrole
subjects:
- kind: ServiceAccount
  name: release-name-controllerrole
  namespace: default
---
# Source: jenkins-x-platform/charts/expose/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: expose
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: expose
subjects:
- kind: ServiceAccount
  name: expose
  namespace: default
---
# Source: jenkins-x-platform/charts/gcactivities/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gcactivities
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gcactivities
subjects:
- kind: ServiceAccount
  name: release-name-gcactivities
  namespace: default
---
# Source: jenkins-x-platform/charts/gcpods/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gcpods
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gcpods
subjects:
- kind: ServiceAccount
  name: release-name-gcpods
  namespace: default
---
# Source: jenkins-x-platform/charts/gcpreviews/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gcpreviews
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gcpreviews
subjects:
- kind: ServiceAccount
  name: release-name-gcpreviews
  namespace: default
---
# Source: jenkins-x-platform/charts/chartmuseum/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-chartmuseum
  annotations:
    fabric8.io/expose: "true"
    fabric8.io/ingress.annotations: 'kubernetes.io/ingress.class: nginx'
  labels:
    app: chartmuseum
    chart: chartmuseum-1.1.7
    heritage: "Helm"
    release: "release-name"
  annotations:
    fabric8.io/expose: "true"
    fabric8.io/ingress.annotations: 'kubernetes.io/ingress.class: nginx'
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: chartmuseum
    release: "release-name"
---
# Source: jenkins-x-platform/charts/docker-registry/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-docker-registry
  labels:
    app: docker-registry
    chart: docker-registry-1.9.3
    release: release-name
    heritage: Helm
  annotations:
    fabric8.io/expose: "true"
    fabric8.io/ingress.annotations: |-
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-body-size: 2g
spec:
  type: ClusterIP
  ports:
    - port: 5000
      protocol: TCP
      name: registry
      targetPort: 5000
  selector:
    app: docker-registry
    release: release-name
---
# Source: jenkins-x-platform/charts/nexus/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: nexus
  labels:
    app: nexus
    chart: nexus-0.1.37
    release: release-name
    heritage: Helm
  annotations:
    fabric8.io/expose: "true"
    fabric8.io/ingress.annotations: 'kubernetes.io/ingress.class: nginx'
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8081
      protocol: TCP
      name: nexus
  selector:
    app: nexus
    release: release-name
---
# Source: jenkins-x-platform/charts/chartmuseum/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-chartmuseum
  annotations:
    {}
  labels:
    app: chartmuseum
    chart: chartmuseum-1.1.7
    heritage: "Helm"
    release: "release-name"
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: chartmuseum
  template:
    metadata:
      name: release-name-chartmuseum
      annotations:
        {}
      labels:
        app: chartmuseum
        release: "release-name"
    spec:
      containers:
      - name: chartmuseum
        image: chartmuseum/chartmuseum:v0.7.1
        imagePullPolicy: IfNotPresent
        env:
        - name: "AUTH_ANONYMOUS_GET"
          value: "true"
        - name: "CHART_POST_FORM_FIELD_NAME"
          value: "chart"
        - name: "DISABLE_METRICS"
          value: "true"
        - name: "LOG_JSON"
          value: "true"
        - name: "PROV_POST_FORM_FIELD_NAME"
          value: "prov"
        - name: "STORAGE"
          value: "local"
        - name: "BASIC_AUTH_PASS"
          valueFrom:
            secretKeyRef:
              name: release-name-chartmuseum
              key: "BASIC_AUTH_PASS"
        - name: "BASIC_AUTH_USER"
          valueFrom:
            secretKeyRef:
              name: release-name-chartmuseum
              key: "BASIC_AUTH_USER"
        args:
        - --port=8080
        - --storage-local-rootdir=/storage
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /health
            port: http
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /health
            port: http
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /storage
          name: storage-volume
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 160m
            memory: 128Mi
      volumes:
      - name: storage-volume
        persistentVolumeClaim:
          claimName: release-name-chartmuseum
---
# Source: jenkins-x-platform/charts/controllerrole/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-controllerrole
  labels:
    app: controllerrole
    chart: controllerrole-2.1.155
    release: release-name
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: controllerrole
      release: release-name
  template:
    metadata:
      labels:
        app: controllerrole
        release: release-name
    spec:
      restartPolicy: Always
      serviceAccountName: release-name-controllerrole
      containers:
        - name: controllerrole
          command: [jx]
          args:
          - controller
          - role
          imagePullPolicy: IfNotPresent
          image: "gcr.io/jenkinsxio/builder-jx:2.1.155-778"
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
          - name: JX_LOG_FORMAT
            value: json
          - name: JX_LOG_LEVEL
            value: info
          - name: PIPELINE_KIND
            value: dummy
          resources:
            {}
---
# Source: jenkins-x-platform/charts/docker-registry/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-docker-registry
  labels:
    app: docker-registry
    chart: docker-registry-1.9.3
    release: release-name
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: docker-registry
      release: release-name
  replicas: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: docker-registry
        release: release-name
      annotations:
        checksum/config: c9930987284035226c2736d09342a226c72516f1bbf8a6a2ed9a0f75d834f73b
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      containers:
        - name: docker-registry
          image: "registry:2.7.1"
          imagePullPolicy: IfNotPresent
          command:
          - /bin/registry
          - serve
          - /etc/docker/registry/config.yml
          ports:
            - containerPort: 5000
          livenessProbe:
            httpGet:
              path: /
              port: 5000
          readinessProbe:
            httpGet:
              path: /
              port: 5000
          resources:
            {}
          env:
            - name: REGISTRY_HTTP_SECRET
              valueFrom:
                secretKeyRef:
                  name: release-name-docker-registry-secret
                  key: haSharedSecret
            - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
              value: "/var/lib/registry"
          volumeMounts:
            - name: data
              mountPath: /var/lib/registry/
            - name: "release-name-docker-registry-config"
              mountPath: "/etc/docker/registry"
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: release-name-docker-registry
        - name: release-name-docker-registry-config
          configMap:
            name: release-name-docker-registry-config
---
# Source: jenkins-x-platform/charts/nexus/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-nexus
  labels:
    app: nexus
    chart: nexus-0.1.37
    release: release-name
    heritage: Helm
  annotations:
    configmap.fabric8.io/update-on-change: nexus
spec:
  selector:
    matchLabels:
      app: nexus
      release: release-name
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nexus
        release: release-name
    spec:
      containers:
      - name: nexus
        image: "gcr.io/jenkinsxio/nexus:0.1.37"
        imagePullPolicy: IfNotPresent
        env:
        - name: NEXUS_CONTEXT
          valueFrom:
            configMapKeyRef:
              name: nexus
              key: context.path
        - name: ENABLE_ANONYMOUS_ACCESS
          value: "false"
        - name: NEXUS_SECURITY_RANDOMPASSWORD
          value: "false"
        lifecycle:
          postStart:
            exec:
              command:
              - /opt/sonatype/nexus/postStart.sh
        ports:
          - containerPort: 8081
        livenessProbe:
          httpGet:
            path: /
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 30
          failureThreshold: 6
        resources:
            null
        volumeMounts:
          - mountPath: /nexus-data
            name: nexus-data-volume
          - mountPath: /opt/sonatype/nexus/config
            name: nexus

      volumes:
        - name: nexus
          secret:
            secretName: nexus
        - name: nexus-data-volume
          persistentVolumeClaim:
            claimName: release-name-nexus
      securityContext:
        fsGroup: 2000
---
# Source: jenkins-x-platform/charts/gcactivities/templates/cronjob.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: release-name-gcactivities
  labels:
    app: gcactivities
    chart: gcactivities-2.1.155
    release: release-name
    heritage: Helm
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 3
  schedule: "0/30 */3 * * *"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: gcactivities
            release: release-name
        spec:
          restartPolicy: Never
          serviceAccountName: release-name-gcactivities
          containers:
            - name: gcactivities
              command: [jx]
              args:
              - gc
              - activities
              - --batch-mode
              imagePullPolicy: IfNotPresent
              image: "gcr.io/jenkinsxio/builder-jx:2.1.155-778"
              env:
              - name: JX_LOG_FORMAT
                value: json
              - name: JX_LOG_LEVEL
                value: info
              - name: PIPELINE_KIND
                value: dummy
              resources:
                {}
---
# Source: jenkins-x-platform/charts/gcpods/templates/cronjob.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: release-name-gcpods
  labels:
    app: gcpods
    chart: gcpods-2.1.155
    release: release-name
    heritage: Helm
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 3
  schedule: "0/30 */3 * * *"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: gcpods
            release: release-name
        spec:
          restartPolicy: Never
          serviceAccountName: release-name-gcpods
          containers:
            - name: gcpods
              command: [jx]
              args:
              - gc
              - pods
              - --batch-mode
              imagePullPolicy: IfNotPresent
              image: "gcr.io/jenkinsxio/builder-jx:2.1.155-778"
              env:
              - name: JX_LOG_FORMAT
                value: json
              - name: JX_LOG_LEVEL
                value: info
              - name: PIPELINE_KIND
                value: dummy
              resources:
                {}
---
# Source: jenkins-x-platform/charts/gcpreviews/templates/cronjob.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: release-name-gcpreviews
  labels:
    app: gcpreviews
    chart: gcpreviews-2.1.155
    release: release-name
    heritage: Helm
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 3
  schedule: "0 */3 * * *"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: gcpreviews
            release: release-name
        spec:
          restartPolicy: Never
          serviceAccountName: release-name-gcpreviews
          containers:
            - name: gcpreviews
              command: [jx]
              args:
              - gc
              - previews
              - --batch-mode
              imagePullPolicy: IfNotPresent
              image: "gcr.io/jenkinsxio/builder-jx:2.1.155-778"
              env:
              - name: JX_LOG_FORMAT
                value: json
              - name: JX_LOG_LEVEL
                value: info
              - name: PIPELINE_KIND
                value: dummy
              resources:
                {}
---
# Source: jenkins-x-platform/templates/buildpacks.yaml
apiVersion: v1
kind: List
items:
- apiVersion: jenkins.io/v1
  kind: BuildPack
  metadata:
    name: "classic-workloads"
  spec:
    label: "Library Workloads: CI+Release but no CD"
    gitUrl: "https://github.com/jenkins-x-buildpacks/jenkins-x-classic.git"
    gitRef: "master"
- apiVersion: jenkins.io/v1
  kind: BuildPack
  metadata:
    name: "kubernetes-workloads"
  spec:
    label: "Kubernetes Workloads: Automated CI+CD with GitOps Promotion"
    gitUrl: "https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes.git"
    gitRef: "master"
---
# Source: jenkins-x-platform/charts/controllerrole/templates/release.yaml
apiVersion: jenkins.io/v1
kind: Release
metadata:
  creationTimestamp: "2020-12-24T15:22:25Z"
  deletionTimestamp: null
  name: 'controllerrole-2.1.155'
spec:
  commits:
  - author:
      accountReference:
      - id: james-rawlings-0
        provider: jenkins.io/git-github-userid
      email: rawlingsj80@gmail.com
      name: James Rawlings
    branch: master
    committer:
      accountReference:
      - id: github-0
        provider: jenkins.io/git-github-userid
      - id: github-0
        provider: jenkins.io/git-github-userid
      - id: github-0
        provider: jenkins.io/git-github-userid
      - id: github-0
        provider: jenkins.io/git-github-userid
      - id: github-0
        provider: jenkins.io/git-github-userid
      - id: github-0
        provider: jenkins.io/git-github-userid
      - id: github-0
        provider: jenkins.io/git-github-userid
      email: noreply@github.com
      name: GitHub
    message: 'fix: try and fix release pipeline after old stable helm repo deprecation'
    sha: 455f64c4e5c0065334a6303536708dea6fa3b687
  gitCloneUrl: https://github.com/jenkins-x/jx.git
  gitHttpUrl: https://github.com/jenkins-x/jx
  gitOwner: jenkins-x
  gitRepository: jx
  name: 'controllerrole'
  version: 2.1.155
status: {}
---
# Source: jenkins-x-platform/charts/gcactivities/templates/release.yaml
apiVersion: jenkins.io/v1
kind: Release
metadata:
  creationTimestamp: "2020-12-24T15:22:25Z"
  deletionTimestamp: null
  name: 'gcactivities-2.1.155'
spec:
  commits:
  - author:
      accountReference:
      - id: james-rawlings-0
        provider: jenkins.io/git-github-userid
      email: rawlingsj80@gmail.com
      name: James Rawlings
    branch: master
    committer:
      accountReference:
      - id: github-0
        provider: jenkins.io/git-github-userid
      - id: github-0
        provider: jenkins.io/git-github-userid
      - id: github-0
        provider: jenkins.io/git-github-userid
      - id: github-0
        provider: jenkins.io/git-github-userid
      - id: github-0
        provider: jenkins.io/git-github-userid
      - id: github-0
        provider: jenkins.io/git-github-userid
      - id: github-0
        provider: jenkins.io/git-github-userid
      email: noreply@github.com
      name: GitHub
    message: 'fix: try and fix release pipeline after old stable helm repo deprecation'
    sha: 455f64c4e5c0065334a6303536708dea6fa3b687
  gitCloneUrl: https://github.com/jenkins-x/jx.git
  gitHttpUrl: https://github.com/jenkins-x/jx
  gitOwner: jenkins-x
  gitRepository: jx
  name: 'gcactivities'
  version: 2.1.155
status: {}
---
# Source: jenkins-x-platform/charts/gcpods/templates/release.yaml
apiVersion: jenkins.io/v1
kind: Release
metadata:
  creationTimestamp: "2020-12-24T15:22:25Z"
  deletionTimestamp: null
  name: 'gcpods-2.1.155'
spec:
  commits:
  - author:
      accountReference:
      - id: james-rawlings-0
        provider: jenkins.io/git-github-userid
      email: rawlingsj80@gmail.com
      name: James Rawlings
    branch: master
    committer:
      accountReference:
      - id: github-0
        provider: jenkins.io/git-github-userid
      - id: github-0
        provider: jenkins.io/git-github-userid
      - id: github-0
        provider: jenkins.io/git-github-userid
      - id: github-0
        provider: jenkins.io/git-github-userid
      - id: github-0
        provider: jenkins.io/git-github-userid
      - id: github-0
        provider: jenkins.io/git-github-userid
      - id: github-0
        provider: jenkins.io/git-github-userid
      email: noreply@github.com
      name: GitHub
    message: 'fix: try and fix release pipeline after old stable helm repo deprecation'
    sha: 455f64c4e5c0065334a6303536708dea6fa3b687
  gitCloneUrl: https://github.com/jenkins-x/jx.git
  gitHttpUrl: https://github.com/jenkins-x/jx
  gitOwner: jenkins-x
  gitRepository: jx
  name: 'gcpods'
  version: 2.1.155
status: {}
---
# Source: jenkins-x-platform/charts/gcpreviews/templates/release.yaml
apiVersion: jenkins.io/v1
kind: Release
metadata:
  creationTimestamp: "2020-12-24T15:22:25Z"
  deletionTimestamp: null
  name: 'gcpreviews-2.1.155'
spec:
  commits:
  - author:
      accountReference:
      - id: james-rawlings-0
        provider: jenkins.io/git-github-userid
      email: rawlingsj80@gmail.com
      name: James Rawlings
    branch: master
    committer:
      accountReference:
      - id: github-0
        provider: jenkins.io/git-github-userid
      - id: github-0
        provider: jenkins.io/git-github-userid
      - id: github-0
        provider: jenkins.io/git-github-userid
      - id: github-0
        provider: jenkins.io/git-github-userid
      - id: github-0
        provider: jenkins.io/git-github-userid
      - id: github-0
        provider: jenkins.io/git-github-userid
      - id: github-0
        provider: jenkins.io/git-github-userid
      email: noreply@github.com
      name: GitHub
    message: 'fix: try and fix release pipeline after old stable helm repo deprecation'
    sha: 455f64c4e5c0065334a6303536708dea6fa3b687
  gitCloneUrl: https://github.com/jenkins-x/jx.git
  gitHttpUrl: https://github.com/jenkins-x/jx
  gitOwner: jenkins-x
  gitRepository: jx
  name: 'gcpreviews'
  version: 2.1.155
status: {}
---
# Source: jenkins-x-platform/charts/cleanup/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: cleanup
  labels:
    heritage: "Helm"
    release: "release-name"
    chart: "cleanup-2.3.111"
    component: "release-name-cleanup"
  name: cleanup
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  # backoffLimit: 5
  template:
    metadata:
      name: "release-name"
      # istio-proxy prevents job pods from completing if istio is enabled
      # https://github.com/istio/istio/issues/6324
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        heritage: "Helm"
        release: "release-name"
        chart: "cleanup-2.3.111"
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: "gcr.io/jenkinsxio/exposecontroller:2.3.111"
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 80m
            memory: 128Mi
        name: cleanup
        command: ["/exposecontroller"]
        args:
        - "--cleanup"
      serviceAccountName: cleanup
      restartPolicy: Never
---
# Source: jenkins-x-platform/charts/expose/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: expose
  labels:
    heritage: "Helm"
    release: "release-name"
    chart: "expose-2.3.111"
    component: "release-name-expose"
  name: expose
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  # backoffLimit: 5
  template:
    metadata:
      name: "release-name"
      # istio-proxy prevents job pods from completing if istio is enabled
      # https://github.com/istio/istio/issues/6324
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        heritage: "Helm"
        release: "release-name"
        chart: "expose-2.3.111"
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: "gcr.io/jenkinsxio/exposecontroller:2.3.111"
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 80m
            memory: 128Mi
        name: expose
        command: ["/exposecontroller"]
        args:
      serviceAccountName: expose
      restartPolicy: Never
