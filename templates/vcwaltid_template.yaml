---
# Source: vcwaltid/templates/configmap-sm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-vcwaltid-sm
  labels:
    app.kubernetes.io/name: vcwaltid
    helm.sh/chart: vcwaltid-0.0.18
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
data:
  service-matrix.properties: |
    id.walt.services.ecosystems.essif.didebsi.DidEbsiService=id.walt.services.ecosystems.essif.didebsi.WaltIdDidEbsiService
    id.walt.services.ecosystems.essif.jsonrpc.JsonRpcService=id.walt.services.ecosystems.essif.jsonrpc.WaltIdJsonRpcService
    id.walt.services.vc.JsonLdCredentialService=id.walt.services.vc.WaltIdJsonLdCredentialService
    id.walt.services.vc.JwtCredentialService=id.walt.services.vc.WaltIdJwtCredentialService
    id.walt.services.crypto.CryptoService=id.walt.services.crypto.SunCryptoService
    id.walt.services.keystore.KeyStoreService=id.walt.services.keystore.SqlKeyStoreService
    id.walt.services.key.KeyService=id.walt.services.key.WaltIdKeyService
    id.walt.services.jwt.JwtService=id.walt.services.jwt.WaltIdJwtService
    id.walt.services.vcstore.VcStoreService=id.walt.services.vcstore.FileSystemVcStoreService
    id.walt.services.hkvstore.HKVStoreService=id.walt.services.hkvstore.FileSystemHKVStore:config/fsStore.conf
    id.walt.services.context.ContextManager=id.walt.services.context.WaltIdContextManager
    id.walt.signatory.Signatory=id.walt.signatory.WaltIdSignatory:/config/signatory.conf
    id.walt.custodian.Custodian=id.walt.custodian.WaltIdCustodian
    id.walt.auditor.Auditor=id.walt.auditor.WaltIdAuditor
    id.walt.services.ecosystems.gaiax.GaiaxService=id.walt.services.ecosystems.gaiax.WaltIdGaiaxService
---
# Source: vcwaltid/templates/configmap-templates.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-vcwaltid-templates
  labels:
    app.kubernetes.io/name: vcwaltid
    helm.sh/chart: vcwaltid-0.0.18
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
data:
  PacketDeliveryService.json: |
    {
      "@context": ["https://www.w3.org/2018/credentials/v1"],
      "credentialSchema": {
        "id": "https://raw.githubusercontent.com/hesusruiz/dsbamvf/main/schemas/PacketDeliveryService/2022-10/schema.json",
        "type": "FullJsonSchemaValidator2021"
      },
      "credentialSubject": {
        "familyName": "Ruiz",
        "firstName": "Jesus",
        "id": "did:ebsi:2AEMAqXWKYMu1JHPAgGcga4dxu7ThgfgN95VyJBJGZbSJUtp",
        "roles": [{
          "names": ["P.Info.gold"],
          "target": "did:elsi:packetdelivery"
        }]
      },
      "id": "urn:uuid:3add94f4-28ec-42a1-8704-4e4aa51006b4",
      "issued": "2021-08-31T00:00:00Z",
      "issuer": "did:ebsi:2A9BZ9SUe6BatacSpvs1V5CdjHvLpQ7bEsi2Jb6LdHKnQxaN",
      "validFrom": "2021-08-31T00:00:00Z",
      "issuanceDate": "2021-08-31T00:00:00Z",
      "type": ["VerifiableCredential", "PacketDeliveryService"]
    }
---
# Source: vcwaltid/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-vcwaltid
  labels:
    app.kubernetes.io/name: vcwaltid
    helm.sh/chart: vcwaltid-0.0.18
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
data:
  walt.yaml: |
    hikariDataSource:
      autoCommit: false
      dataSource:
        fullColumnNames: false
        journalMode: WAL
      jdbcUrl: jdbc:sqlite:data/walt.db
      maximumPoolSize: 5
  signatory.conf: |
    proofConfig {
      issuerDid="To-be-decided"
      issuerVerificationMethod="todo"
      proofType="LD_PROOF"
      domain="TEST"
      nonce="todo"
    }
    templatesFolder: "/vc-templates-runtime"
---
# Source: vcwaltid/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-vcwaltid
  labels:
    
    app.kubernetes.io/name: vcwaltid
    helm.sh/chart: vcwaltid-0.0.18
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "1Gi"
---
# Source: vcwaltid/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-vcwaltid
  labels:
    
    app.kubernetes.io/name: vcwaltid
    helm.sh/chart: vcwaltid-0.0.18
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http-core
      port: 7000
      targetPort: core-api
      protocol: TCP
    - name: http-signatory
      port: 7001
      targetPort: signatory-api
      protocol: TCP
    - name: http-custodian
      port: 7003
      targetPort: custodian-api
      protocol: TCP
    - name: http-auditor
      port: 7002
      targetPort: auditor-api
      protocol: TCP
    - name: http-essif
      port: 7010
      targetPort: essif-api
      protocol: TCP
  selector:
    app.kubernetes.io/name: vcwaltid
    app.kubernetes.io/instance: release-name
---
# Source: vcwaltid/templates/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: release-name-vcwaltid
  labels:
    
    app.kubernetes.io/name: vcwaltid
    helm.sh/chart: vcwaltid-0.0.18
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: vcwaltid
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        
        app.kubernetes.io/name: vcwaltid
        helm.sh/chart: vcwaltid-0.0.18
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "0.0.1"
        app.kubernetes.io/managed-by: Helm
    spec: 
      serviceAccountName: default
      containers:
        - name: vcwaltid
          image: "quay.io/fiware/waltid:1.14.1-SNAPSHOT"
          imagePullPolicy: IfNotPresent
          args:
            - serve
            - -b
            - 0.0.0.0
          #env:
          #  - name: CONFIG_FILE
          #    value: "/config/walt.yaml"
          ports:
            - containerPort: 7000
              name: core-api
            - containerPort: 7001
              name: signatory-api
            - containerPort: 7003
              name: custodian-api
            - containerPort: 7002
              name: auditor-api
            - containerPort: 7010
              name: essif-api
          resources:
            null
          ## workaround for missing db support
          volumeMounts:
            - mountPath: /app/data/
              name: data-volume
            - mountPath: /vc-templates-runtime
              name: templates-volume
            - mountPath: /app/walt.yaml
              name: config-volume
              subPath: walt.yaml
            - mountPath: /config
              name: config-volume
            - mountPath: /app/service-matrix.properties
              name: sm-volume
              subPath: service-matrix.properties
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: release-name-vcwaltid
      - name: config-volume
        configMap:
          name: release-name-vcwaltid
      - name: templates-volume
        configMap:
          name: release-name-vcwaltid-templates
      - name: sm-volume
        configMap:
          name: release-name-vcwaltid-sm
