---
# Source: jx-app-gitea/charts/gitea/charts/gitea-cleanup/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: gitea-cleanup
    chart: "gitea-cleanup-2.3.56"
    release: "release-name"
    heritage: "Helm"
  name: gitea-cleanup
---
# Source: jx-app-gitea/charts/gitea/charts/gitea-expose/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: gitea-expose
    chart: "gitea-expose-2.3.56"
    release: "release-name"
    heritage: "Helm"
  name: gitea-expose
---
# Source: jx-app-gitea/charts/gitea/charts/postgresql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-postgresql
  labels:
    app: release-name-postgresql
    chart: "postgresql-0.8.1"
    release: "release-name"
    heritage: "Helm"
type: Opaque
data:
  
  postgres-password:  "Z2l0ZWE="
---
# Source: jx-app-gitea/charts/gitea/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-gitea
  labels:
    app: release-name-gitea
    chart: "gitea-1.3.12"
    release: "release-name"
    heritage: "Helm"
type: Opaque
data:
  postgresql-user: "Z2l0ZWE="
---
# Source: jx-app-gitea/charts/gitea/templates/configmap-tcp.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  labels:
    app: release-name-gitea-tcp
    chart: "gitea-1.3.12"
    component: gitea
    heritage: "Helm"
    release: "release-name"
  name: tcp-release-name-gitea-ssh
data:
  2222: default/release-name-gitea:ssh
---
# Source: jx-app-gitea/charts/gitea/templates/configmap.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  labels:
    app: release-name-gitea-config
    chart: "gitea-1.3.12"
    component: gitea
    heritage: Helm
    release: release-name
  name: release-name-gitea
data:
  app.ini: |-
    APP_NAME = Gitea
    RUN_MODE = prod

    [repository.upload]
    ENABLED = true
    ALLOWED_TYPES = 
    MAX_FILE_SIZE = 3
    MAX_FILES = 5

    [server]
    PROTOCOL = http
    DOMAIN = gitea.example.com
    ROOT_URL = http://gitea.example.com/
    LANDING_PAGE = home
    SSH_DOMAIN = localhost
    SSH_PORT = 22
    SSH_LISTEN_PORT = 22

    [service]
    ENABLE_CAPTCHA = true
    ACTIVE_CODE_LIVE_MINUTES = 180
    RESET_PASSWD_CODE_LIVE_MINUTES = 180
    REGISTER_EMAIL_CONFIRM = false
    DISABLE_REGISTRATION = false
    REQUIRE_SIGNIN_VIEW = false
    ENABLE_NOTIFY_MAIL = false
    ENABLE_REVERSE_PROXY_AUTHENTICATION = false
    ENABLE_REVERSE_PROXY_AUTO_REGISTRATION = false

    [database]
    DB_TYPE = "postgres"
    HOST = release-name-postgresql
    NAME = "gitea"
    USER = "gitea"
    PASSWD = "gitea"
    SSL_MODE = disable

    [security]
    INSTALL_LOCK = true
    SECRET_KEY = "Y2hhbmdlbWU="

    [ui]
    EXPLORE_PAGING_NUM = 20
    ISSUE_PAGING_NUM = 10
    FEED_MAX_COMMIT_NUM = 5

    [cache]
    ADAPTER = memory
    INTERVAL = 60
    HOST = 

    [webhook]
    QUEUE_LENGTH = 1000
    DELIVER_TIMEOUT = 5
    SKIP_TLS_VERIFY = true
    PAGING_NUM = 10

    [log]
    MODE = console
    LEVEL = Trace

    [other]
    SHOW_FOOTER_BRANDING = false
    SHOW_FOOTER_VERSION = true
    SHOW_FOOTER_TEMPLATE_LOAD_TIME = true
---
# Source: jx-app-gitea/charts/gitea/charts/postgresql/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-postgresql
  labels:
    app: release-name-postgresql
    chart: "postgresql-0.8.1"
    release: "release-name"
    heritage: "Helm"
  annotations:
    volume.alpha.kubernetes.io/storage-class: default
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: jx-app-gitea/charts/gitea/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-gitea
  labels:
    app: release-name-gitea
    chart: "gitea-1.3.12"
    release: "release-name"
    heritage: "Helm"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "1Gi"
---
# Source: jx-app-gitea/charts/gitea/charts/gitea-cleanup/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gitea-cleanup
rules:
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
  - patch
  - create
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  - services
  verbs:
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
  - patch
  - update
---
# Source: jx-app-gitea/charts/gitea/charts/gitea-expose/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gitea-expose
rules:
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
  - patch
  - create
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  - services
  verbs:
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
  - patch
  - update
---
# Source: jx-app-gitea/charts/gitea/charts/gitea-cleanup/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gitea-cleanup
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gitea-cleanup
subjects:
- kind: ServiceAccount
  name: gitea-cleanup
  namespace: default
---
# Source: jx-app-gitea/charts/gitea/charts/gitea-expose/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gitea-expose
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gitea-expose
subjects:
- kind: ServiceAccount
  name: gitea-expose
  namespace: default
---
# Source: jx-app-gitea/charts/gitea/charts/postgresql/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql
  labels:
    app: release-name-postgresql
    chart: "postgresql-0.8.1"
    release: "release-name"
    heritage: "Helm"
spec:
  type: ClusterIP
  ports:
  - name: postgresql
    port: 5432
    targetPort: postgresql
  selector:
    app: release-name-postgresql
---
# Source: jx-app-gitea/charts/gitea/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-gitea
  labels:
    chart: "gitea-1.3.12"
  annotations:
    expose.config.fabric8.io/config-yaml: |-
      - key: app.ini
        prefix: "DOMAIN = "
        expression: host
      - key: app.ini
        prefix: "ROOT_URL = "
        expression: url
    fabric8.io/expose: "true"
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
    name: gitea-http
  - port: 22
    targetPort:  22
    name: gitea-ssh
  selector:
    app: release-name-gitea
---
# Source: jx-app-gitea/charts/gitea/charts/postgresql/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-postgresql
  labels:
    app: release-name-postgresql
    chart: "postgresql-0.8.1"
    release: "release-name"
    heritage: "Helm"
spec:
  template:
    metadata:
      labels:
        app: release-name-postgresql
    spec:
      containers:
      - name: release-name-postgresql
        image: "postgres:9.6.2"
        imagePullPolicy: ""
        env:
        - name: POSTGRES_USER
          value: "gitea"
          # Required for pg_isready in the health probes.
        - name: PGUSER
          value: "gitea"
        - name: POSTGRES_DB
          value: "gitea"
        - name: POSTGRES_INITDB_ARGS
          value: ""
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: release-name-postgresql
              key: postgres-password
        - name: POD_IP
          valueFrom: { fieldRef: { fieldPath: status.podIP } }
        ports:
        - name: postgresql
          containerPort: 5432
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 5
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data/pgdata
          subPath: postgresql-db
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: release-name-postgresql
---
# Source: jx-app-gitea/charts/gitea/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-gitea
  labels:
    chart: "gitea-1.3.12"
  annotations:
    configmap.fabric8.io/update-on-change:  "release-name-gitea"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: release-name-gitea
  template:
    metadata:
      labels:
        app: release-name-gitea
    spec:
      initContainers:
        - name: init-config
          image: busybox
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /init-config
          command:
            - 'sh'
            - '-xc'
            - 'mkdir -p /data/gitea/conf; echo Created dir; cp /init-config/app.ini /data/gitea/conf/app.ini; echo Finished'
      containers:
        - name: gitea
          image: "gitea/gitea:1.4"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
            - containerPort: 22
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            # This pod takes a very long time to start up. Be cautious when
            # lowering this value to avoid Pod death during startup.
            initialDelaySeconds: 200
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 30
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          resources:
            null
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /data/gitea/conf/config-app.ini
              subPath: app.ini
      volumes:
        - name: config
          configMap:
            name: release-name-gitea
        - name: data
          persistentVolumeClaim:
            claimName: release-name-gitea
---
# Source: jx-app-gitea/templates/app.yaml
apiVersion: jenkins.io/v1
kind: App
metadata:
  name: release-name-jx-app-gitea
  labels:
    chart: "jx-app-gitea-0.0.2"
spec:
  exposedServices:
---
# Source: jx-app-gitea/charts/gitea/charts/gitea-cleanup/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: gitea-cleanup
  labels:
    heritage: "Helm"
    release: "release-name"
    chart: "gitea-cleanup-2.3.56"
    component: "release-name-gitea-cleanup"
  name: gitea-cleanup
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  # backoffLimit: 5
  template:
    metadata:
      name: "release-name"
      labels:
        heritage: "Helm"
        release: "release-name"
        chart: "gitea-cleanup-2.3.56"
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: "jenkinsxio/exposecontroller:2.3.56"
        name: gitea-cleanup
        command: ["/exposecontroller"]
        args:
        - "--cleanup"
        - "--filter"
        - "gitea-gitea"
      serviceAccountName: gitea-cleanup
      restartPolicy: Never
---
# Source: jx-app-gitea/charts/gitea/charts/gitea-expose/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: gitea-expose
  labels:
    heritage: "Helm"
    release: "release-name"
    chart: "gitea-expose-2.3.56"
    component: "release-name-gitea-expose"
  name: gitea-expose
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  # backoffLimit: 5
  template:
    metadata:
      name: "release-name"
      labels:
        heritage: "Helm"
        release: "release-name"
        chart: "gitea-expose-2.3.56"
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: "jenkinsxio/exposecontroller:2.3.56"
        name: gitea-expose
        command: ["/exposecontroller"]
        args:
        - "--exposer"
        - "Ingress"
        - "--http"
        - "true"
      serviceAccountName: gitea-expose
      restartPolicy: Never
