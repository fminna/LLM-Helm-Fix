---
# Source: license-ops/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name
  namespace: default
---
# Source: license-ops/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name
  namespace: default
rules:
- apiGroups:
  - moon.aerokube.com
  resources:
  - licenses
  verbs:
  - get
  - patch
---
# Source: license-ops/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name
  namespace: default
roleRef:
  kind: ClusterRole
  name: release-name
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: release-name
  namespace: default
---
# Source: license-ops/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
---
# Source: license-ops/templates/role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name
  namespace: default
roleRef:
  kind: Role
  name: release-name
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: release-name
  namespace: default
---
# Source: license-ops/templates/cron-job.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: release-name
  namespace: default
spec:
  schedule: "* * * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      ttlSecondsAfterFinished: 0
      template:
        spec:
          serviceAccountName: release-name
          containers:
          - name: license-ops
            image: bitnami/kubectl:1.23
            command: ["/bin/bash", "-c"]
            args: ["kubectl patch license moon --type='json' -p=\"[{\\\"op\\\": \\\"replace\\\", \\\"path\\\": \\\"/spec/data\\\", \\\"value\\\":\\\"$(kubectl get secret licensekey -n default -o yaml -o=jsonpath='{.data.license\\.key}' | base64 -d)\\\"}]\""]
          restartPolicy: Never
