---
# Source: prometheus-dnssec-exporter/templates/common.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-prometheus-dnssec-exporter-config
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: prometheus-dnssec-exporter
    app.kubernetes.io/version: 0.3.1
    helm.sh/chart: prometheus-dnssec-exporter-0.6.3
data:
  dnssec-checks: |
    [[records]]
      zone = "ietf.org"
      record = "@"
      type = "SOA"
  
    [[records]]
      zone = "verisigninc.com"
      record = "@"
      type = "SOA"
---
# Source: prometheus-dnssec-exporter/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-prometheus-dnssec-exporter
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: prometheus-dnssec-exporter
    app.kubernetes.io/version: 0.3.1
    helm.sh/chart: prometheus-dnssec-exporter-0.6.3
  annotations:
spec:
  type: ClusterIP
  ports:
  - port: 9204
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: prometheus-dnssec-exporter
    app.kubernetes.io/instance: release-name
---
# Source: prometheus-dnssec-exporter/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-prometheus-dnssec-exporter
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: prometheus-dnssec-exporter
    app.kubernetes.io/version: 0.3.1
    helm.sh/chart: prometheus-dnssec-exporter-0.6.3
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus-dnssec-exporter
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      
      annotations:
        configmap/checksum: 2a4eef300783d94bbdbdd6b8d70efa751226abb7303b62e838c3c29ba02d01f3
      labels:
        app.kubernetes.io/name: prometheus-dnssec-exporter
        app.kubernetes.io/instance: release-name
    spec:
      
      serviceAccountName: default
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: release-name-prometheus-dnssec-exporter
          image: "ghcr.io/haraldkoch/prometheus-dnssec-exporter:0.3.1"
          imagePullPolicy: IfNotPresent
          args:
            
            - --config=/config/dnssec-checks
          env:
            - name: "TZ"
              value: "UTC"
          ports:
            - name: metrics
              containerPort: 9204
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /config/dnssec-checks
              subPath: dnssec-checks
          livenessProbe:
            tcpSocket:
              port: 9204
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 9204
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 9204
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
      volumes:
        - name: config
          configMap:
            name: release-name-prometheus-dnssec-exporter-config
