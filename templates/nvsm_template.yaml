---
# Source: nvsm/templates/service_account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nvidia-nvsm
  namespace: default
---
# Source: nvsm/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nvidia-nvsm
  namespace: default
rules:
- apiGroups:
  - security.openshift.io
  resources:
  - securitycontextconstraints
  verbs:
  - use
  resourceNames:
  - nvidia-nvsm
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs:
  - use
  resourceNames:
  - gpu-operator-privileged
---
# Source: nvsm/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nvidia-nvsm
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nvidia-nvsm
subjects:
- kind: ServiceAccount
  name: nvidia-nvsm
  namespace: default
---
# Source: nvsm/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nvidia-nvsm
  namespace: default
  labels:
    app: nvidia-nvsm
spec:
  selector:
    matchLabels:
      app: nvidia-nvsm
  template:
    metadata:
      labels:
        app: nvidia-nvsm
    spec:
      nodeSelector:
        nvidia.com/gpu.nvsm.deploy: "true"
      serviceAccount: nvidia-nvsm
      containers:
      - name: nvidia-nvsm
        image: "nvcr.io/nvidia/cloud-native/nvsm:v1.0.1-21.07.16-ubi8"
        imagePullPolicy: IfNotPresent
        env:
        - name: NVSM_DCGM_HOSTENGINE_INFO
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        command: ['sh', '-c']
        args: ["sleep infinity"]
        securityContext:
          privileged: true
        volumeMounts:
         - name: var-log-nvsm
           mountPath: "/var/log/nvsm/"
         - name: host-sys
           mountPath: /sys
      volumes:
       - name: var-log-nvsm
         hostPath:
           path: /var/log/nvsm
           type: DirectoryOrCreate
       - name: host-sys
         hostPath:
           path: /sys
           type: Directory
---
# Source: nvsm/templates/scc.openshift.yaml
# Please edit the object below. Lines beginning with a '#' will be ignored,
# and an empty file will abort the edit. If an error occurs while saving this file will be
# reopened with the relevant failures.
#
allowHostDirVolumePlugin: true
allowHostIPC: false
allowHostNetwork: false
allowHostPID: false
allowHostPorts: true
allowPrivilegeEscalation: true
allowPrivilegedContainer: true
allowedCapabilities:
- '*'
allowedUnsafeSysctls:
- '*'
apiVersion: security.openshift.io/v1
defaultAddCapabilities: null
fsGroup:
  type: RunAsAny
groups:
- system:cluster-admins
- system:nodes
- system:masters
kind: SecurityContextConstraints
metadata:
  annotations:
    kubernetes.io/description: 'privileged allows access to all privileged and host
      features and the ability to run as any user, any group, any fsGroup, and with
      any SELinux context.  WARNING: this is the most relaxed SCC and should be used
      only for cluster administration. Grant with caution.'

  name: nvidia-nvsm
priority: null
readOnlyRootFilesystem: false
requiredDropCapabilities: null
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: RunAsAny
seccompProfiles:
- '*'
supplementalGroups:
  type: RunAsAny
users:
- system:serviceaccount:default:nvidia-nvsm
volumes:
- '*'
