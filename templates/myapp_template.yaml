---
# Source: myapp/templates/0.namespace.yml
apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: mca-app
  name: mca-app
---
# Source: myapp/templates/1.mongo.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-mongo-from-server
  namespace: mca-app
spec:
  podSelector:
    matchLabels:
      app: release-name-mongo
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: release-name-server
    ports:
    - port: 27017
      protocol: TCP
---
# Source: myapp/templates/1.mysql.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-mysql-from-worker
  namespace: mca-app
spec:
  podSelector:
    matchLabels:
      app: release-name-mysql
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: release-name-worker
    ports:
    - port: 3306
      protocol: TCP
---
# Source: myapp/templates/1.rabbitmq.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-rabbitmq-from-external
  namespace: mca-app
spec:
  podSelector:
    matchLabels:
      app: release-name-rabbitmq
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: release-name-external-service
    ports:
    - port: 5672
      protocol: TCP
---
# Source: myapp/templates/2.external-service.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-external-from-worker
  namespace: mca-app
spec:
  podSelector:
    matchLabels:
      app: release-name-external-service
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: release-name-worker
    ports:
    - port: 9090
      protocol: TCP
---
# Source: myapp/templates/2.external-service.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-external-to-rabbitmq
  namespace: mca-app
spec:
  podSelector:
    matchLabels:
      app: release-name-external-service
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: release-name-rabbitmq
    ports:
    - port: 9090
      protocol: TCP
---
# Source: myapp/templates/2.server.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-server-to-mysql
  namespace: mca-app
spec:
  podSelector:
    matchLabels:
      app: release-name-server
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: mysql
    ports:
    - port: 8080
      protocol: TCP
---
# Source: myapp/templates/2.server.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-server-from-ingress
  namespace: mca-app
spec:
  podSelector:
    matchLabels:
      app: release-name-server
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
      podSelector:
        matchLabels:
          app.kubernetes.io/name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8080
---
# Source: myapp/templates/2.server.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-server-to-worker-mongo
  namespace: mca-app
spec:
  podSelector:
    matchLabels:
      app: release-name-server
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: release-name-worker
  - to:
    - podSelector:
        matchLabels:
          app: release-name-mongo
    ports:
    - port: 27017
      protocol: TCP
---
# Source: myapp/templates/2.worker.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-worker-from-server
  namespace: mca-app
spec:
  podSelector:
    matchLabels:
      app: release-name-worker
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: release-name-server
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
---
# Source: myapp/templates/2.worker.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-worker-to-external-mysql
  namespace: mca-app
spec:
  podSelector:
    matchLabels:
      app: release-name-worker
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: release-name-external-service
    ports:
    - port: 9090
      protocol: TCP
  - to:
    - podSelector:
        matchLabels:
          app: release-name-mysql
    ports:
    - port:  3306
      protocol: TCP
---
# Source: myapp/templates/secrets.yml
apiVersion: v1
kind: Secret
metadata:
  name:  release-name-secrets
  namespace: mca-app
  annotations:
    "helm.sh/resource-policy": keep
type: Opaque
data:
  mysql-key: akxFWUdzNHBHdTZzRVI1
---
# Source: myapp/templates/mongodb-pv.yml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: release-name-mongo-pv
  namespace: mca-app
spec:
  storageClassName: mongo
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /db/release-name/mongo
---
# Source: myapp/templates/mysql-pv.yml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: release-name-mysql-pv
  namespace: mca-app
spec:
  storageClassName: mysql
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /db/release-name/mysql
---
# Source: myapp/templates/mongodb-pvc.yml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-mongo-pvc
  namespace: mca-app
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: myapp/templates/mysql-pvc.yml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-mysql-pvc
  namespace: mca-app
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: myapp/templates/1.mongo.yml
apiVersion: v1 
kind: Service
metadata:
  name: release-name-mongo
  namespace: mca-app
  labels:
    app: release-name-mongo
spec:
  ports:
  - name: mongo-port
    protocol: TCP
    port: 27017
    targetPort: 27017
  selector:
    app: release-name-mongo
  type: ClusterIP
---
# Source: myapp/templates/1.mysql.yml
apiVersion: v1 
kind: Service
metadata:
  name: release-name-mysql
  namespace: mca-app
  labels:
    app: release-name-mysql
spec:
  ports:
  - name: sql
    protocol: TCP
    port: 3306
    targetPort: 3306
  selector:
    app: release-name-mysql
  type: ClusterIP
---
# Source: myapp/templates/1.rabbitmq.yml
apiVersion: v1 
kind: Service
metadata:
  name: release-name-rabbitmq
  namespace: mca-app
  labels:
    app: release-name-rabbitmq
spec:
  ports:
  - name: rabbitmq-port
    protocol: TCP
    port: 5672
    targetPort: 5672
  selector:
    app: release-name-rabbitmq
  type: ClusterIP
---
# Source: myapp/templates/2.external-service.yml
apiVersion: v1 
kind: Service
metadata:
  name: release-name-external-service
  namespace: mca-app
  labels:
    app: release-name-external-service
spec:
  ports:
  - name: external-service-port
    protocol: TCP
    port: 9090
    targetPort: 9090
  selector:
    app: release-name-external-service
  type: ClusterIP
---
# Source: myapp/templates/2.server.yml
apiVersion: v1 
kind: Service
metadata:
  name: release-name-server  
  namespace: mca-app
  labels:
    app: release-name-server
spec:
  ports:
  - name: server
    protocol: TCP
    port: 8080
  selector:
    app: release-name-server
  type: ClusterIP
---
# Source: myapp/templates/1.mongo.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-mongo-deployment
  namespace: mca-app
spec:
  selector:
    matchLabels:
      app: release-name-mongo
  template:
    metadata:
      labels:
        app: release-name-mongo
    spec:
      containers:
      - name: mongo
        image: mongo:4.2.3
        ports:
          - containerPort: 27017
        volumeMounts:
        - mountPath: /data/db
          name: db
      volumes:
      - name: db
        persistentVolumeClaim:
          claimName: release-name-mongo-pvc
---
# Source: myapp/templates/1.mysql.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-mysql-deployment
  namespace: mca-app
spec:
  selector:
    matchLabels:
      app: release-name-mysql
  template:
    metadata:
      labels:
        app: release-name-mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8
        ports:
          - containerPort: 3306
        
        # TODO move to values
        env: 
        - name: MYSQL_DATABASE
          value: database
        - name: MYSQL_USER
          value: myuser
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: release-name-secrets
              key: mysql-key
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: release-name-secrets
              key: mysql-key
        volumeMounts:
        - mountPath: /data/db
          name: db
      volumes:
      - name: db
        persistentVolumeClaim:
          claimName: release-name-mysql-pvc
---
# Source: myapp/templates/1.rabbitmq.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-rabbitmq-deployment
  namespace: mca-app
spec:
  selector:
    matchLabels:
      app: release-name-rabbitmq
  template:
    metadata:
      labels:
        app: release-name-rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: fjvela/urjc-fjvela-rabbitmq:1.0.0
        ports:
          - containerPort: 5672
---
# Source: myapp/templates/2.external-service.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-external-service-deployment
  namespace: mca-app
spec:
  selector:
    matchLabels:
      app: release-name-external-service
  template:
    metadata:
      labels:
        app: release-name-external-service
    spec:
      securityContext:
        runAsUser: 1000
      containers:
      - name: external-service
        image: fjvela/urjc-fjvela-external-service:1.0.1
        ports:
          - containerPort: 9090
---
# Source: myapp/templates/2.server.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-server-deployment
  namespace: mca-app
spec:
  selector:
    matchLabels:
      app: release-name-server
  template:
    metadata:
      labels:
        app: release-name-server
    spec:
      securityContext:
        runAsUser: 1000
      containers:
      - name: server
        image: fjvela/urjc-fjvela-server:1.0.5
        ports:
          - containerPort: 8080
        env:
        - name: RABBITMQ_SERVER
          value: release-name-rabbitmq
        - name: MONGO_SERVER
          value: release-name-mongo
---
# Source: myapp/templates/2.worker.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-worker-deployment  
  namespace: mca-app
spec:
  selector:
    matchLabels:
      app: release-name-worker
  template:
    metadata:
      labels:
        app: release-name-worker
    spec:
      securityContext:
        runAsUser: 1001
      containers:
      - name: worker
        image: fjvela/urjc-fjvela-worker:1.0.1
        # TODO move to values
        env:
        - name: RABBITMQ_SERVER
          value: release-name-rabbitmq
        - name: UPPERCASE_GRPC_SERVER
          value: static://release-name-external-service:9090
        - name: MYSQL_SERVER
          value: release-name-mysql
        - name: MYSQL_DATABASE
          value: database
        - name: MYSQL_USER
          value: myuser
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: release-name-secrets
              key: mysql-key
---
# Source: myapp/templates/ingress.yml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  namespace: mca-app
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
  - host: cluster-ip
    http:
      paths:
      - path: /(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: release-name-server
            port:
              name: server
