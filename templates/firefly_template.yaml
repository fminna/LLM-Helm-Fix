---
# Source: firefly/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-firefly-secret
  labels:
    app.kubernetes.io/name: firefly
    helm.sh/chart: firefly-0.3.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "suit-233-7-dev"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  "ADMIN_PASSWORD": "YmIkfhNhlOXsg76FvtJOcDGwh18DeJrv"
---
# Source: firefly/templates/redis-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-firefly-redis
  labels:
    app.kubernetes.io/name: firefly
    helm.sh/chart: firefly-0.3.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "suit-233-7-dev"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: firefly-redis
    app.kubernetes.io/instance: release-name
  type: ClusterIP 
  ports:
  - protocol: TCP
    port: 6379
    targetPort: 6379
---
# Source: firefly/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-firefly
  labels:
    app.kubernetes.io/name: firefly
    helm.sh/chart: firefly-0.3.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "suit-233-7-dev"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: firefly
    app.kubernetes.io/instance: release-name
  type: ClusterIP 
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
# Source: firefly/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-firefly
  labels:
    app.kubernetes.io/name: firefly
    helm.sh/chart: firefly-0.3.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "suit-233-7-dev"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: firefly
      app.kubernetes.io/instance: release-name
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: firefly
        app.kubernetes.io/instance: release-name
    spec:
      containers:
      - name: firefly
        image: "ipac/suit:suit-233-7-dev"
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 2
            memory: 6Gi
        securityContext:
          {}
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /firefly/shared-workarea
          name: firefly-shared-workarea
        - mountPath: /firefly/config
          name: firefly-config
          readOnly: true
        env:
        - name: MANAGER
          value: "TRUE"
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: release-name-firefly-secret
              key: ADMIN_PASSWORD
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: release-name-firefly-secret
              key: ADMIN_PASSWORD
        - name: FIREFLY_OPTS
          value: "-Dredis.host=release-name-firefly-redis"
        - name: SERVER_CONFIG_DIR
          value: /firefly/config
        - name: CLEANUP_INTERVAL
          value: "36h"
        - name: VISUALIZE_FITS_SEARCH_PATH
          value: "/datasets"
        - name: DEBUG
          value: "FALSE"
      volumes:
      - name: datasets
        emptyDir: {}
      - name: firefly-shared-workarea
        emptyDir: {}
      - name: firefly-config
        emptyDir: {}
---
# Source: firefly/templates/redis-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-firefly-redis
  labels:
    app.kubernetes.io/name: firefly
    helm.sh/chart: firefly-0.3.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "suit-233-7-dev"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: firefly-redis
      app.kubernetes.io/instance: release-name
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: firefly-redis
        app.kubernetes.io/instance: release-name
    spec:
      containers:
      - name: redis-srv
        image: redis:5
        imagePullPolicy: IfNotPresent
        resources:
          {}
        ports:
        - containerPort: 6379
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: release-name-firefly-secret
              key: ADMIN_PASSWORD
        command: ["redis-server"]
        args: ["--requirepass", "$(REDIS_PASSWORD)"]
---
# Source: firefly/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-firefly
  labels:
    app.kubernetes.io/name: firefly
    helm.sh/chart: firefly-0.3.7
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "suit-233-7-dev"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/proxy-body-size: "0m"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "24k"
    nginx.ingress.kubernetes.io/client-header-buffer-size: "24k"
    nginx.ingress.kubernetes.io/rewrite-target: /suit$1$2
    nginx.ingress.kubernetes.io/proxy-redirect-from: /suit/
    nginx.ingress.kubernetes.io/proxy-redirect-to: /portal/app/
    nginx.ingress.kubernetes.io/proxy-cookie-path: /suit /portal/app
    nginx.ingress.kubernetes.io/session-cookie-path: /portal/app

    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Forwarded-Port 443;
      proxy_set_header X-Forwarded-Path /firefly;

spec:
  rules:

  - http:

      paths:
      - path: "/portal/app(/|$)(.*)"
        pathType: "ImplementationSpecific"
        backend:
          service:
            name: release-name-firefly
            port:
              number: 8080
