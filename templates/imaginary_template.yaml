---
# Source: imaginary/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app: release-name-imaginary
  name: release-name-imaginary-pdb
  namespace: default
spec:
  minAvailable: 50%
  selector:
    matchLabels:
      app: release-name-imaginary
---
# Source: imaginary/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-imaginary-secret
  namespace: default
  labels:
    app: release-name-imaginary
    chart: "imaginary-0.2.3"
    release: "release-name"
    heritage: "Helm"
type: Opaque
data:
  apikey: "PG5pbD4="
---
# Source: imaginary/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-imaginary
  namespace: default
  labels:
    heritage: "Helm"
    release: "release-name"
    chart: "imaginary-0.2.3"
    app: "release-name"
  annotations:
    service.kubernetes.io/topology-aware-hints: "auto"
spec:
  selector:
    app: release-name-imaginary
  ports:
  - name: http
    port: 8080
    protocol: TCP
  type: ClusterIP
---
# Source: imaginary/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-imaginary
  namespace: default
  labels:
    heritage: "Helm"
    release: "release-name"
    chart: "imaginary-0.2.3"
    app: release-name-imaginary
spec:
  selector:
    matchLabels:
      app: release-name-imaginary
  template:
    metadata:
      labels:
        app: release-name-imaginary
      annotations:
        {}
    spec:
      containers:
      - name: "imaginary"
        image: "h2non/imaginary:1.2.4"
        imagePullPolicy: IfNotPresent
        env:
        - name: PORT
          value: "8080"
        args:
        resources:
          {}
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
        lifecycle:
          preStop:
            exec:
              command: ["sleep","10"]
---
# Source: imaginary/templates/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: release-name-imaginary
  name: release-name-imaginary
  namespace: default
spec:
  maxReplicas: 2
  minReplicas: 2
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: release-name-imaginary
  targetCPUUtilizationPercentage: 80
