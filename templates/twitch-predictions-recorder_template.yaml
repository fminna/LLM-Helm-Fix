---
# Source: twitch-predictions-recorder/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-twitch-predictions-recorder
  labels:
    app.kubernetes.io/name: twitch-predictions-recorder
    helm.sh/chart: twitch-predictions-recorder-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.2.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: twitch-predictions-recorder/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-twitch-predictions-recorder-config
data:
  streamers.txt: |
    MacroPower
---
# Source: twitch-predictions-recorder/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-twitch-predictions-recorder
  labels:
    app.kubernetes.io/name: twitch-predictions-recorder
    helm.sh/chart: twitch-predictions-recorder-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: twitch-predictions-recorder
    app.kubernetes.io/instance: release-name
---
# Source: twitch-predictions-recorder/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-twitch-predictions-recorder
  labels:
    app.kubernetes.io/name: twitch-predictions-recorder
    helm.sh/chart: twitch-predictions-recorder-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: twitch-predictions-recorder
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: twitch-predictions-recorder
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-twitch-predictions-recorder
      securityContext:
        {}
      containers:
        - name: twitch-predictions-recorder
          securityContext:
            {}
          image: "macropower/twitch_predictions_recorder:v0.2"
          imagePullPolicy: IfNotPresent
          env:
            - name: STREAMERS_FILE
              value: '/usr/local/etc/twitch_predictions_recorder/streamers.txt'
            - name: DB_TYPE
              value: "test"
          ports:
            - name: metrics
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics
          resources:
            {}
          volumeMounts:
            - name: config-volume
              mountPath: /usr/local/etc/twitch_predictions_recorder/
      volumes:
        - name: config-volume
          configMap:
            name: release-name-twitch-predictions-recorder-config
            optional: false
