---
# Source: photoview/templates/common.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: release-name-photoview-cnpg-main-urls
  namespace: default
  labels:
    app: "photoview-14.0.5"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "photoview"
    app.kubernetes.io/version: "2.3.13"
    helm-revision: "1"
    helm.sh/chart: "photoview-14.0.5"
    release: "release-name"
stringData:
  host: release-name-photoview-cnpg-main-rw
  jdbc: jdbc:postgresql://release-name-photoview-cnpg-main-rw:5432/photoview
  nossl: postgresql://photoview:PLACEHOLDERPASSWORD@release-name-photoview-cnpg-main-rw:5432/photoview?sslmode=disable
  porthost: release-name-photoview-cnpg-main-rw:5432
  std: postgresql://photoview:PLACEHOLDERPASSWORD@release-name-photoview-cnpg-main-rw:5432/photoview
---
# Source: photoview/templates/common.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/basic-auth
metadata:
  name: release-name-photoview-cnpg-main-user
  namespace: default
  labels:
    app: "photoview-14.0.5"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "photoview"
    app.kubernetes.io/version: "2.3.13"
    helm-revision: "1"
    helm.sh/chart: "photoview-14.0.5"
    release: "release-name"
stringData:
  password: PLACEHOLDERPASSWORD
  username: photoview
---
# Source: photoview/templates/common.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: release-name-photoview-secrets
  namespace: default
  labels:
    app: "photoview-14.0.5"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "photoview"
    app.kubernetes.io/version: "2.3.13"
    helm-revision: "1"
    helm.sh/chart: "photoview-14.0.5"
    release: "release-name"
stringData:
  PHOTOVIEW_POSTGRES_URL: postgresql://photoview:PLACEHOLDERPASSWORD@release-name-photoview-cnpg-main-rw:5432/photoview?client_encoding=utf8
---
# Source: photoview/templates/common.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-photoview-cache
  namespace: default
  labels:
    app: "photoview-14.0.5"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "photoview"
    app.kubernetes.io/version: "2.3.13"
    helm-revision: "1"
    helm.sh/chart: "photoview-14.0.5"
    release: "release-name"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
---
# Source: photoview/templates/common.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-photoview-photos
  namespace: default
  labels:
    app: "photoview-14.0.5"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "photoview"
    app.kubernetes.io/version: "2.3.13"
    helm-revision: "1"
    helm.sh/chart: "photoview-14.0.5"
    release: "release-name"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
---
# Source: photoview/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-photoview
  namespace: default
  labels:
    app: "photoview-14.0.5"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "photoview"
    app.kubernetes.io/version: "2.3.13"
    helm-revision: "1"
    helm.sh/chart: "photoview-14.0.5"
    release: "release-name"
    service.name: "main"
spec:
  type: ClusterIP
  publishNotReadyAddresses: false
  ports:
    - name: main
      port: 10159
      protocol: TCP
      targetPort: 10159
  selector:
    pod.name: main
    app.kubernetes.io/name: photoview
    app.kubernetes.io/instance: release-name
---
# Source: photoview/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-photoview
  namespace: default
  labels:
    app: "photoview-14.0.5"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "photoview"
    app.kubernetes.io/version: "2.3.13"
    helm-revision: "1"
    helm.sh/chart: "photoview-14.0.5"
    release: "release-name"
spec:  
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      pod.name: main
      app.kubernetes.io/name: photoview
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app: "photoview-14.0.5"
        app.kubernetes.io/instance: "release-name"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/name: "photoview"
        app.kubernetes.io/version: "2.3.13"
        helm-revision: "1"
        helm.sh/chart: "photoview-14.0.5"
        pod.lifecycle: "permanent"
        pod.name: "main"
        release: "release-name"
      annotations:
        checksum/cnpg: "94380ec6e92a2a7aa744c5dc24ccc4ff696a131d5ff10e3db2da874e4af63c51"
        checksum/configmaps: "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a"
        checksum/mariadb: "09c85576cb45b1eecd1467732b11ea8fa3363b0105c465f02a6ad64991521d52"
        checksum/mongodb: "09c85576cb45b1eecd1467732b11ea8fa3363b0105c465f02a6ad64991521d52"
        checksum/persistence: "07e7e54e43db4533cb4c9659ecc3bea9be01102c87d3bb8c16e4dbbe789997c7"
        checksum/redis: "013343a028cbb3f7e08f4ba7522702dd98e52632c688641074b0b1db3df29894"
        checksum/secrets: "176446f0404104ac88f3151d6626fe54163a0d944a7b1bd518c9dd34bef23327"
        checksum/services: "480cc9b9d00184f54d51df20f591c7e7ce2193689463f7ba8596518e8c59e70c"
        checksum/solr: "29c14feeaddbf7762052db593898d274941f539cee681ddc613957587686f347"
    spec:
      serviceAccountName: default
      automountServiceAccountToken: false
      runtimeClassName: 
      hostNetwork: false
      hostPID: false
      hostIPC: false
      shareProcessNamespace: false
      enableServiceLinks: false
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/arch: amd64
      topologySpreadConstraints:
        - maxSkew: 1
          whenUnsatisfiable: ScheduleAnyway
          topologyKey: "kubernetes.io/hostname"
          labelSelector:
            matchLabels:      
              pod.name: main
              app.kubernetes.io/name: photoview
              app.kubernetes.io/instance: release-name
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      terminationGracePeriodSeconds: 60
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 568
        sysctls: []
      hostUsers: true
      containers:
        - name: release-name-photoview
          image: viktorstrate/photoview:2.3.13@sha256:68c83e8207715af098cb29a18f34b8af4913c6a589beb64cd2e1fb299d8c37a0
          imagePullPolicy: IfNotPresent
          tty: false
          stdin: false
          ports:
            - name: main
              containerPort: 10159
              protocol: TCP
              hostPort: null
          volumeMounts:
            - name: cache
              mountPath: /cache
              readOnly: false
            - name: devshm
              mountPath: /dev/shm
              readOnly: false
            - name: photos
              mountPath: /photos
              readOnly: false
            - name: shared
              mountPath: /shared
              readOnly: false
            - name: tmp
              mountPath: /tmp
              readOnly: false
            - name: varlogs
              mountPath: /var/logs
              readOnly: false
            - name: varrun
              mountPath: /var/run
              readOnly: false
          livenessProbe:
            httpGet:
              port: 10159
              path: /
              scheme: HTTP
            initialDelaySeconds: 12
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
            periodSeconds: 15
          readinessProbe:
            httpGet:
              port: 10159
              path: /
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 4
            successThreshold: 2
            timeoutSeconds: 5
            periodSeconds: 12
          startupProbe:
            httpGet:
              port: 10159
              path: /
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 60
            successThreshold: 1
            timeoutSeconds: 3
            periodSeconds: 5
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits: 
              cpu: 4000m 
              memory: 8Gi
          securityContext:
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            privileged: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add: []
              drop:
                - ALL
          env:
            - name: "TZ"
              value: "UTC"
            - name: "UMASK"
              value: "0022"
            - name: "UMASK_SET"
              value: "0022"
            - name: "NVIDIA_VISIBLE_DEVICES"
              value: "void"
            - name: "S6_READ_ONLY_ROOT"
              value: "1"
            - name: "MAPBOX_TOKEN"
              value: ""
            - name: "PHOTOVIEW_DATABASE_DRIVER"
              value: "postgres"
            - name: "PHOTOVIEW_DISABLE_FACE_RECOGNITION"
              value: "false"
            - name: "PHOTOVIEW_DISABLE_RAW_PROCESSING"
              value: "false"
            - name: "PHOTOVIEW_DISABLE_VIDEO_ENCODING"
              value: "false"
            - name: "PHOTOVIEW_LISTEN_IP"
              value: "127.0.0.1"
            - name: "PHOTOVIEW_LISTEN_PORT"
              value: "10159"
            - name: "PHOTOVIEW_MEDIA_CACHE"
              value: "/cache"
            - name: "PHOTOVIEW_POSTGRES_URL"
              valueFrom:
                secretKeyRef:
                  key: "PHOTOVIEW_POSTGRES_URL"
                  name: "release-name-photoview-secrets"
      initContainers:
        - name: release-name-photoview-system-cnpg-wait
          image: tccr.io/tccr/db-wait-postgres:v1.1.0@sha256:4e4e5b9f37a5d0c8d90d744de23d1857079095fbb55d2944ec91d83241f60376
          imagePullPolicy: IfNotPresent
          tty: false
          stdin: false
          command:
            - "/bin/sh"
            - "-c"
            - "/bin/sh <<'EOF'\necho \"Executing DB waits...\"\necho \"Testing Database availability on [CNPG RW]\"\nuntil\n  echo \"Testing database on url: [release-name-photoview-cnpg-main-rw]\"\n  pg_isready -U photoview -d photoview -h release-name-photoview-cnpg-main-rw\n  do sleep 5\ndone\necho \"Database available on url: [release-name-photoview-cnpg-main-rw]\"\necho \"Done executing DB waits...\"\nEOF"
          volumeMounts:
            - name: devshm
              mountPath: /dev/shm
              readOnly: false
            - name: shared
              mountPath: /shared
              readOnly: false
            - name: tmp
              mountPath: /tmp
              readOnly: false
            - name: varlogs
              mountPath: /var/logs
              readOnly: false
            - name: varrun
              mountPath: /var/run
              readOnly: false
          
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits: 
              cpu: 500m 
              memory: 512Mi
          securityContext:
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            privileged: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add: []
              drop:
                - ALL
          env:
            - name: "TZ"
              value: "UTC"
            - name: "UMASK"
              value: "0022"
            - name: "UMASK_SET"
              value: "0022"
            - name: "NVIDIA_VISIBLE_DEVICES"
              value: "void"
            - name: "S6_READ_ONLY_ROOT"
              value: "1"
      volumes:
        - name: cache
          persistentVolumeClaim:
            claimName: release-name-photoview-cache
        - name: devshm
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: photos
          persistentVolumeClaim:
            claimName: release-name-photoview-photos
        - name: shared
          emptyDir: {}
        - name: tmp
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: varlogs
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: varrun
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
---
# Source: photoview/templates/common.yaml
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: release-name-photoview-cnpg-main
  namespace: default
  labels:
    cnpg.io/reload: "on"
    app: "photoview-14.0.5"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "photoview"
    app.kubernetes.io/version: "2.3.13"
    helm-revision: "1"
    helm.sh/chart: "photoview-14.0.5"
    release: "release-name"
  annotations:
    cnpg.io/hibernation: "off"
    checksum/secrets: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
spec:
  imageName: ghcr.io/cloudnative-pg/postgresql:16.2
  enableSuperuserAccess: true
  primaryUpdateStrategy: unsupervised
  primaryUpdateMethod: switchover
  logLevel: info
  instances: 2
  nodeMaintenanceWindow:
    inProgress: false
    reusePVC: true
  resources:
    requests:
      cpu: 10m
      memory: 50Mi
    limits: 
      cpu: 4000m 
      memory: 8Gi
  storage:
    pvcTemplate:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Gi
  walStorage:
    pvcTemplate:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Gi
  bootstrap:
    initdb:
      secret:
        name: release-name-photoview-cnpg-main-user
      database: photoview
      owner: photoview
      dataChecksums: true
