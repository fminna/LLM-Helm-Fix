---
# Source: management-portal/templates/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: release-name-management-portal
  labels:
    helm.sh/chart: management-portal-1.1.4
    app.kubernetes.io/name: management-portal
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  podSelector:
    matchLabels:
      helm.sh/chart: management-portal-1.1.4
      app.kubernetes.io/name: management-portal
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/version: "2.0.0"
      app.kubernetes.io/managed-by: Helm
  egress:
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
        except:
        - 10.0.0.0/8
        - 192.168.0.0/16
        - 172.16.0.0/12
  - to:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: 'default'
      podSelector:
        matchLabels:
          app.kubernetes.io/name: 'catalog-server'
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: 'default'
      podSelector:
        matchLabels:
          app.kubernetes.io/name: 'postgresql'
  - ports:
    - port: 53
      protocol: UDP
    - port: 53
      protocol: TCP
    to:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
      podSelector:
        matchLabels:
          k8s-app: kube-dns
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: 'default'
      podSelector:
        matchLabels:
          app.kubernetes.io/name: ingress-nginx
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: 'default'
      podSelector:
        matchLabels:
          app.kubernetes.io/name: app-config
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: 'default'
      podSelector:
        matchLabels:
          app.kubernetes.io/name: radar-appserver
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: 'default'
      podSelector:
        matchLabels:
          app.kubernetes.io/name: radar-fitbit-connector
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: 'default'
      podSelector:
        matchLabels:
          app.kubernetes.io/name: radar-gateway
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: 'default'
      podSelector:
        matchLabels:
          app.kubernetes.io/name: radar-integration
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: 'default'
      podSelector:
        matchLabels:
          app.kubernetes.io/name: radar-push-endpoint
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: 'default'
      podSelector:
        matchLabels:
          app.kubernetes.io/name: radar-rest-sources-backend
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: 'default'
      podSelector:
        matchLabels:
          app.kubernetes.io/name: radar-upload-connect-backend
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: 'default'
      podSelector:
        matchLabels:
          app.kubernetes.io/name: radar-upload-source-connector
  policyTypes:
  - Ingress
  - Egress
---
# Source: management-portal/templates/secrets-config.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-management-portal-config
  labels:
    helm.sh/chart: management-portal-1.1.4
    app.kubernetes.io/name: management-portal
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.0.0"
    app.kubernetes.io/managed-by: Helm
data:
  oauth_client_details.csv: "Y2xpZW50X2lkO3Jlc291cmNlX2lkcztjbGllbnRfc2VjcmV0O3Njb3BlO2F1dGhvcml6ZWRfZ3JhbnRfdHlwZXM7cmVkaXJlY3RfdXJpO2F1dGhvcml0aWVzO2FjY2Vzc190b2tlbl92YWxpZGl0eTtyZWZyZXNoX3Rva2VuX3ZhbGlkaXR5O2FkZGl0aW9uYWxfaW5mb3JtYXRpb247YXV0b2FwcHJvdmU="
---
# Source: management-portal/templates/secrets-keystore.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-management-portal-keystore
  labels:
    helm.sh/chart: management-portal-1.1.4
    app.kubernetes.io/name: management-portal
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.0.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  keystore.p12:
---
# Source: management-portal/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-management-portal
  labels:
    helm.sh/chart: management-portal-1.1.4
    app.kubernetes.io/name: management-portal
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.0.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  postgresql_password: "cGFzc3dvcmQ="
  managementportal_frontend_client_secret: "eHh4"
  managementportal_common_admin_password: "eHh4"
---
# Source: management-portal/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-management-portal
  labels:
    helm.sh/chart: management-portal-1.1.4
    app.kubernetes.io/name: management-portal
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.0.0"
    app.kubernetes.io/managed-by: Helm
data:
  healthcheck.sh: |
    #!/bin/sh
    STATUS=$(curl -m 1 localhost:8080/managementportal/management/health)
    if ! (echo "$STATUS" | grep -Fq 'db":{"status":"UP'); then
      exit 1
    fi
---
# Source: management-portal/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-management-portal
  labels:
    helm.sh/chart: management-portal-1.1.4
    app.kubernetes.io/name: management-portal
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: management-portal
    app.kubernetes.io/instance: release-name
---
# Source: management-portal/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-management-portal
  labels:
    helm.sh/chart: management-portal-1.1.4
    app.kubernetes.io/name: management-portal
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: management-portal
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/configmap: 7ee6a6b735e4eaecaddafa5b557f6b9cc227c36fb3ee8efafc703862e33dd490
        checksum/secrets: b4cf39a53bb905360d9b64d48c0d1dfffd5b7cf2430e74229a3d3b450d40bdf6
        checksum/secrets-config: 2dba1dcebca92e363c03aae972c4ef02b5f239f6debcfca15f2e2b46e102e27c
        checksum/secrets-keystore: 6baad01790cbe4e6052629c2c293d843898ffcea494a074e2da567b2f21bcb45
      labels:
        app.kubernetes.io/name: management-portal
        app.kubernetes.io/instance: release-name
    spec:
      securityContext:
        {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: "app.kubernetes.io/name"
                    operator: In
                    values:
                    - management-portal
                  - key: "app.kubernetes.io/instance"
                    operator: In
                    values:
                    - release-name
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: management-portal
          securityContext:
            {}
          image: "radarbase/management-portal:2.0.0"
          imagePullPolicy: IfNotPresent
          env:
          - name: SPRING_PROFILES_ACTIVE
            value: "prod,swagger"
          - name: SPRING_DATASOURCE_URL
            value: "jdbc:postgresql://postgresql:5432/managementportal"
          - name: SPRING_DATASOURCE_USERNAME
            value: postgres
          - name: SPRING_DATASOURCE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: release-name-management-portal
                key: postgresql_password
          - name: SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT
            value: "15000"
          - name: SPRING_DATASOURCE_HIKARI_VALIDATION_TIMEOUT
            value: "15000"
          - name: SPRING_DATASOURCE_HIKARI_LEAK_DETECTION_THRESHOLD
            value: "30000"
          - name: MANAGEMENTPORTAL_MAIL_FROM
            value: noreply@example.com
          - name: MANAGEMENTPORTAL_COMMON_BASEURL
            value: https://localhost
          - name: MANAGEMENTPORTAL_COMMON_MANAGEMENT_PORTAL_BASE_URL
            value: https://localhost/managementportal
          - name: MANAGEMENTPORTAL_FRONTEND_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: release-name-management-portal
                key: managementportal_frontend_client_secret
          - name: MANAGEMENTPORTAL_OAUTH_CLIENTS_FILE
            value: /secrets/oauth_client_details.csv
          - name: MANAGEMENTPORTAL_CATALOGUE_SERVER_ENABLE_AUTO_IMPORT
            value: "false"
          - name: MANAGEMENTPORTAL_CATALOGUE_SERVER_SERVER_URL
            value: http://catalog-server:9010/source-types
          - name: MANAGEMENTPORTAL_IDENTITY_SERVER_ADMIN_EMAIL
            value: admin@example.com
          - name: MANAGEMENTPORTAL_IDENTITY_SERVER_SERVER_URL
            value: https://my.example-domain.net/kratos
          - name: MANAGEMENTPORTAL_IDENTITY_SERVER_SERVER_ADMIN_URL
            value: http://kratos-admin
          - name: MANAGEMENTPORTAL_COMMON_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: release-name-management-portal
                key: managementportal_common_admin_password
          - name: MANAGEMENTPORTAL_COMMON_PRIVACY_POLICY_URL
            value: http://info.thehyve.nl/radar-cns-privacy-policy
          - name: SPRING_APPLICATION_JSON
            value: '{"managementportal":{"oauth":{"checkingKeyAliases":["radarbase-managementportal-ec","selfsigned"]}}}'
          - name: JHIPSTER_SLEEP # gives time for the database to boot before the application
            value: "0"
          - name: JAVA_OPTS  # maximum heap size for the JVM running ManagementPortal, increase this as necessary
            value: "-Xmx1500m"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - /config/healthcheck.sh
            initialDelaySeconds: 60
            periodSeconds: 90
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - /config/healthcheck.sh
            initialDelaySeconds: 60
            periodSeconds: 90
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          resources:
            limits:
              cpu: 2
              memory: 1700Mi
            requests:
              cpu: 100m
              memory: 512Mi
          volumeMounts:
            - name: config
              mountPath: /config/
            - name: secrets-config
              mountPath: /secrets/
            - name: keystore
              mountPath: /mp-includes/config/
      volumes:
        - name: config
          configMap:
            name: release-name-management-portal
        - name: secrets-config
          secret:
            secretName: release-name-management-portal-config
        - name: keystore
          secret:
            secretName: release-name-management-portal-keystore
---
# Source: management-portal/templates/ingress-rate-limited.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-management-portal-rate-limited
  labels:
    helm.sh/chart: management-portal-1.1.4
    app.kubernetes.io/name: management-portal
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/server-snippet: |
      limit_req zone=login_limit;
spec:
  ingressClassName: "nginx"
  tls:
    - hosts:
        - "localhost"
      secretName: radar-base-tls-managementportal-rate-limited
  rules:
    - host: "localhost"
      http:
        paths:
          - path: "/managementportal/oauth/token"
            pathType: ImplementationSpecific
            backend:
              service:
                name: release-name-management-portal
                port:
                  number: 8080
          - path: "/managementportal/login"
            pathType: ImplementationSpecific
            backend:
              service:
                name: release-name-management-portal
                port:
                  number: 8080
          - path: "/managementportal/api/meta-token"
            pathType: ImplementationSpecific
            backend:
              service:
                name: release-name-management-portal
                port:
                  number: 8080
---
# Source: management-portal/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-management-portal
  labels:
    helm.sh/chart: management-portal-1.1.4
    app.kubernetes.io/name: management-portal
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/enable-cors: "true"
spec:
  ingressClassName: "nginx"
  tls:
    - hosts:
        - "localhost"
      secretName: radar-base-tls-managementportal
  rules:
    - host: "localhost"
      http:
        paths:
          - path: "/managementportal"
            pathType: ImplementationSpecific
            backend:
              service:
                name: release-name-management-portal
                port:
                  number: 8080
---
# Source: management-portal/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-management-portal-test-connection"
  labels:
    app.kubernetes.io/name: management-portal
    helm.sh/chart: management-portal-1.1.4
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['release-name-management-portal:8080']
  restartPolicy: Never
