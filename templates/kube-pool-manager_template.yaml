---
# Source: kube-pool-manager/templates/networkpolicy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-kube-pool-man
  namespace: default
  labels:     
    helm.sh/chart: kube-pool-manager-1.0.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-pool-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: kube-pool-manager
    app.kubernetes.io/version: "23.6.0"
spec:
  podSelector:
    matchLabels:
      
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: kube-pool-manager
  policyTypes: 
    - Ingress
    - Egress
  ingress: 
    []
  egress: 
    - ports:
      - port: 53
        protocol: TCP
    - ports:
      - port: 53
        protocol: UDP
    - ports:
      - port: 443
        protocol: TCP
---
# Source: kube-pool-manager/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "kube-pool-manager"
  namespace: default
  labels:
    
    helm.sh/chart: kube-pool-manager-1.0.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-pool-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: kube-pool-manager
    app.kubernetes.io/version: "23.6.0"
---
# Source: kube-pool-manager/templates/config.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: release-name-kube-pool-man
  namespace: default
  labels:     
    helm.sh/chart: kube-pool-manager-1.0.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-pool-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: kube-pool-manager
    app.kubernetes.io/version: "23.6.0"
data:
  config.yaml: |-
---
# Source: kube-pool-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-kube-pool-man
  labels:     
    helm.sh/chart: kube-pool-manager-1.0.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-pool-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: kube-pool-manager
    app.kubernetes.io/version: "23.6.0"
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs:     ["get", "list", "patch", "watch"]
---
# Source: kube-pool-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kube-pool-man
  labels:     
    helm.sh/chart: kube-pool-manager-1.0.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-pool-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: kube-pool-manager
    app.kubernetes.io/version: "23.6.0"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-kube-pool-man
subjects:
  - kind: ServiceAccount
    name: "kube-pool-manager"
    namespace: default
---
# Source: kube-pool-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-kube-pool-man
  namespace: default
  labels:     
    helm.sh/chart: kube-pool-manager-1.0.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-pool-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: kube-pool-manager
    app.kubernetes.io/version: "23.6.0"
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames: ["kube-pool-manager-leader"]
    verbs: ["get", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs:     ["get"]
---
# Source: kube-pool-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-kube-pool-man
  namespace: default
  labels:     
    helm.sh/chart: kube-pool-manager-1.0.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-pool-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: kube-pool-manager
    app.kubernetes.io/version: "23.6.0"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-kube-pool-man
subjects:
  - kind: ServiceAccount
    namespace: default
    name: "kube-pool-manager"
---
# Source: kube-pool-manager/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: release-name-kube-pool-man
  namespace: default
  labels:
    
    helm.sh/chart: kube-pool-manager-1.0.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-pool-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: kube-pool-manager
    app.kubernetes.io/version: "23.6.0"
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http-metrics
  selector:
    
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: kube-pool-manager
---
# Source: kube-pool-manager/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kube-pool-man
  namespace: default
  labels:     
    helm.sh/chart: kube-pool-manager-1.0.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-pool-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: kube-pool-manager
    app.kubernetes.io/version: "23.6.0"
spec:
  replicas: 2
  strategy: 
    rollingUpdate:
      maxUnavailable: 33%
    type: RollingUpdate

  selector:
    matchLabels:
      
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: kube-pool-manager

  minReadySeconds: 
  template:
    metadata:
      labels:
        
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/name: kube-pool-manager
      annotations:
        checksum/config: c3d9f3d87e0ab14aa37d4ebb9ddb168d89e565ec0db8a4d4807ab849789441f3
        checksum/secret: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b

    spec:
      serviceAccountName: "kube-pool-manager"
      priorityClassName: ""

      securityContext: 
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
        supplementalGroups:
        - 1000
      terminationGracePeriodSeconds: 60

      containers:
        #######################
        # Kube pool manager
        #######################
        - name: kube-pool-manager
          image: "docker.io/webdevops/kube-pool-manager:23.6.0"
          imagePullPolicy: "IfNotPresent"

          securityContext: 
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          env:
            - name: CONFIG
              value: /app/config.yaml
            # Instance
            - name: INSTANCE_NODENAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: INSTANCE_POD
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: INSTANCE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - containerPort: 8080
              name: http-metrics
              protocol: TCP
          resources: 
            limits:
              cpu: 500m
              memory: 250Mi
            requests:
              cpu: 25m
              memory: 250Mi
          startupProbe: 
            failureThreshold: 5
            initialDelaySeconds: 15
            periodSeconds: 10
            tcpSocket:
              port: http-metrics
          livenessProbe: 
            failureThreshold: 5
            initialDelaySeconds: 15
            periodSeconds: 30
            tcpSocket:
              port: http-metrics
          readinessProbe: 
            failureThreshold: 5
            initialDelaySeconds: 15
            periodSeconds: 30
            tcpSocket:
              port: http-metrics

          volumeMounts:
            - name: config
              mountPath: /app
              readOnly: true
      nodeSelector: 
        kubernetes.io/os: linux

      volumes:
        - name: config
          configMap:
            name: release-name-kube-pool-man
