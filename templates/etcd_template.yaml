---
# Source: etcd/templates/secret-etcd-ca.yaml
# Copyright 2019 Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Secret
metadata:
  name: etcd-ca
  namespace: default
type: Opaque
data:
  ca.crt: Y2EtY2VydGlmaWNhdGU=
  ca.key: Y2Eta2V5
---
# Source: etcd/templates/secret-etcd-client-tls.yaml
# Copyright 2019 Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Secret
metadata:
  name: etcd-client
  namespace: default
type: kubernetes.io/tls
data:
  ca.crt: Y2EtY2VydGlmaWNhdGU=
  tls.crt: Y2xpZW50LWNlcnRpZmljYXRl
  tls.key: Y2xpZW50LWtleQ==
---
# Source: etcd/templates/secret-etcd-server-tls.yaml
# Copyright 2019 Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Secret
metadata:
  name: etcd-server
  namespace: default
type: kubernetes.io/tls
data:
  ca.crt: Y2EtY2VydGlmaWNhdGU=
  tls.crt: c2VydmVyLWNlcnRpZmljYXRl
  tls.key: c2VydmVyLWtleQ==
---
# Source: etcd/templates/configmap-etcd-bootstrap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: etcd-bootstrap
  namespace: default
  labels:
    app: etcd
data:
  bootstrap.sh: |-
    #!/bin/sh
    if [ ! -d /var/etcd/data/new.etcd ]; then
        mkdir /var/etcd/data/new.etcd
    fi

    while true;
    do
      wget http://localhost:8080/initialization/status -S -O status;
      STATUS=`cat status`;
      case $STATUS in
      "New")
            wget http://localhost:8080/initialization/start -S -O - ;;
      "Progress")
            sleep 1;
            continue;;
      "Failed")
            continue;;
      "Successful")
            exec etcd --config-file /bootstrap/etcd.conf.yml
            ;;
      esac;
    done
  etcd.conf.yml: |-
      # This is the configuration file for the etcd server.

      # Human-readable name for this member.
      name: etcd

      client-transport-security:
        # Path to the client server TLS cert file.
        cert-file: /var/etcd/ssl/server/tls.crt

        # Path to the client server TLS key file.
        key-file: /var/etcd/ssl/server/tls.key

        # Enable client cert authentication.
        client-cert-auth: true

        # Path to the client server TLS trusted CA cert file.
        trusted-ca-file: /var/etcd/ssl/ca/ca.crt

        # Client TLS using generated certificates
        auto-tls: false

      # Path to the data directory.
      data-dir: /var/etcd/data/new.etcd

      # List of this member's client URLs to advertise to the public.
      # The URLs needed to be a comma-separated list.
      advertise-client-urls: https://0.0.0.0:2379

      # List of comma separated URLs to listen on for client traffic.
      listen-client-urls: https://0.0.0.0:2379

      # Initial cluster token for the etcd cluster during bootstrap.
      initial-cluster-token: 'new'

      # Needed for etcdbrctl >= 0.17.0
      initial-cluster: 'etcd=http://localhost:2380'
      
      # Needed for etcdbrctl >= 0.19.0
      initial-advertise-peer-urls: 'http://localhost:2380'

      # Initial cluster state ('new' or 'existing').
      initial-cluster-state: 'new'

      # Number of committed transactions to trigger a snapshot to disk.
      snapshot-count: 75000

      # Raise alarms when backend size exceeds the given quota. 0 means use the
      # default quota.
      quota-backend-bytes: 8589934592
---
# Source: etcd/templates/service-etcd.yaml
# Copyright 2019 Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Service
metadata:
  name: etcd
  namespace: default
  labels:
    app: etcd
    component: etcd
spec:
  type: ClusterIP
  sessionAffinity: None
  selector:
    app: etcd
    component: etcd
  ports:
  - name: client
    protocol: TCP
    port: 2379
    targetPort: 2379
---
# Source: etcd/templates/statefulset-etcd.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: etcd
  namespace: default
  labels:
    app: etcd
    component: etcd
spec:
  updateStrategy:
    type: RollingUpdate
  serviceName: garden-etcd--client
  replicas: 1
  selector:
    matchLabels:
      app: etcd
      component: etcd
  template:
    metadata:
      annotations:
        checksum/configmap-etcd-bootstrap-config: 002ff10833f8d6fc720d169de2a92d5fdc5cf1c872a224ea7a35b3bc24bdad7e
        checksum/secret-etcd-ca: 0125d3f5c0fce2edd1041acf4e391a46d0b097c3320d08afde5f1e4812a90d3a
        checksum/secret-etcd-server: 82bf88214105dd71a2222f713511d7de650fa474195255635aecb8fa3881c3b1
        checksum/secret-etcd-client: c2f669cc096e0d0355f34b7fa2bf97629a9f2f5d3bedd75d5a420a21d38d5d4d
        checksum/secret-etcd-backup: a3dc5e256fc046dad4e3c6f5836464fe3cebdf8114b843b5a14ea1265f66920d
      labels:
        app: etcd
        component: etcd
    spec:
      containers:
      - name: etcd
        image: europe-docker.pkg.dev/gardener-project/public/gardener/etcd:v3.4.26-3
        imagePullPolicy: IfNotPresent
        command:
        - /bootstrap/bootstrap.sh
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -ec
            - ETCDCTL_API=3
            - etcdctl
            - --cert=/var/etcd/ssl/client/tls.crt
            - --key=/var/etcd/ssl/client/tls.key
            - --cacert=/var/etcd/ssl/ca/ca.crt
            - --endpoints=https://etcd-0:2379
            - get
            - foo
          initialDelaySeconds: 15
          periodSeconds: 5
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -ec
            - ETCDCTL_API=3
            - etcdctl
            - --cert=/var/etcd/ssl/client/tls.crt
            - --key=/var/etcd/ssl/client/tls.key
            - --cacert=/var/etcd/ssl/ca/ca.crt
            - --endpoints=https://etcd-0:2379
            - get
            - foo
          initialDelaySeconds: 15
          periodSeconds: 5
        ports:
        - containerPort: 2380
          name: serverport
          protocol: TCP
        - containerPort: 2379
          name: clientport
          protocol: TCP
        resources:
          requests:
            cpu: 400m
            memory: 2000Mi
          limits:
            cpu: 1000m
            memory: 2560Mi
        volumeMounts:
        - name: virtual-garden-etcd
          mountPath: /var/etcd/data
        - name: etcd-bootstrap
          mountPath: /bootstrap
        - name: ca-etcd
          mountPath: /var/etcd/ssl/ca
        - name: etcd-server-tls
          mountPath: /var/etcd/ssl/server
        - name: etcd-client-tls
          mountPath: /var/etcd/ssl/client
      - name: backup-restore
        args:
        - server
        - --schedule=0 */24 * * *
        - --max-backups=7
        - --data-dir=/var/etcd/data/new.etcd
        - --storage-provider=
        - --store-prefix=etcd
        - --cert=/var/etcd/ssl/client/tls.crt
        - --key=/var/etcd/ssl/client/tls.key
        - --cacert=/var/etcd/ssl/ca/ca.crt
        - --insecure-transport=false
        - --insecure-skip-tls-verify=false
        - --endpoints=https://etcd-0:2379
        - --service-endpoints=https://etcd-0:2379
        - --etcd-connection-timeout=300s
        - --delta-snapshot-period=300s
        image: europe-docker.pkg.dev/gardener-project/public/gardener/etcdbrctl:v0.24.8
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: server
          protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          capabilities:
            add:
            - SYS_PTRACE
        env:
        - name: STORAGE_CONTAINER
          value: 
        - name: ETCD_CONF
          value: "/bootstrap/etcd.conf.yml"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: etcd-bootstrap
          mountPath: /bootstrap
        - name: virtual-garden-etcd
          mountPath: /var/etcd/data
        - name: ca-etcd
          mountPath: /var/etcd/ssl/ca
        - name: etcd-client-tls
          mountPath: /var/etcd/ssl/client
      volumes:
      - name: etcd-bootstrap
        configMap:
          name: etcd-bootstrap
          defaultMode: 356
      - name: etcd-server-tls
        secret:
          secretName: etcd-server
      - name: etcd-client-tls
        secret:
          secretName: etcd-client
      - name: ca-etcd
        secret:
          secretName: etcd-ca
  volumeClaimTemplates:
  - metadata:
      name: virtual-garden-etcd
    spec:
      accessModes:
      - "ReadWriteOnce"
      resources:
        requests:
          storage: 10Gi
---
# Source: etcd/templates/configmap-etcd-bootstrap.yaml
# Copyright 2019 Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: etcd/templates/secret-etcd-backup.yaml
# Copyright 2019 Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: etcd/templates/statefulset-etcd.yaml
# Copyright 2019 Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
