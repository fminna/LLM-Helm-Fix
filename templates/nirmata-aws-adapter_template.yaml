---
# Source: nirmata-aws-adapter/templates/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: namespace
    app.kubernetes.io/instance: nirmata
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: nirmata-aws-adapter
    app.kubernetes.io/part-of: nirmata-aws-adapter
  name: nirmata
---
# Source: nirmata-aws-adapter/templates/service_account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
  labels:
    app.kubernetes.io/name: serviceaccount
    app.kuberentes.io/instance: controller-manager
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: nirmata-aws-adapter
    app.kubernetes.io/part-of: nirmata-aws-adapter
  name: nirmata-aws-adapter-sa
  namespace: nirmata
---
# Source: nirmata-aws-adapter/templates/secret.yaml
kind: Secret
type: kubernetes.io/dockerconfigjson
apiVersion: v1
metadata:
  name: release-name-nirmata-aws-adapter
  namespace: nirmata
  labels:
    app: release-name-nirmata-aws-adapter
data:
  .dockerconfigjson: eyJhdXRocyI6eyJnaGNyLmlvIjp7ImF1dGgiOiJKU0Z6S0R4dWFXdytLVG9sSVhNb1BHNXBiRDRwIn19fQ==
---
# Source: nirmata-aws-adapter/templates/rbac.yaml
# permissions for end users to edit awsconfigs.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/instance: awsconfig-editor-role
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: nirmata-aws-adapter
    app.kubernetes.io/part-of: nirmata-aws-adapter
  name: awsconfig-manager-role
rules:
- apiGroups:
  - security.nirmata.io
  resources:
  - awsconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - security.nirmata.io
  resources:
  - awsconfigs/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - security.nirmata.io
  resources:
  - awsconfigs/finalizers
  verbs:
  - update
---
# Source: nirmata-aws-adapter/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/instance: awsconfig-manager-rolebinding
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: nirmata-aws-adapter
    app.kubernetes.io/part-of: nirmata-aws-adapter
  name: awsconfig-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: awsconfig-manager-role
subjects:
- kind: ServiceAccount
  name: nirmata-aws-adapter-sa
  namespace: nirmata
---
# Source: nirmata-aws-adapter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-nirmata-aws-adapter
  namespace: nirmata
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: deployment
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: nirmata-aws-adapter
    app.kubernetes.io/part-of: nirmata-aws-adapter
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      imagePullSecrets:
      - name: release-name-nirmata-aws-adapter
      containers:
      - command:
        - /manager
        image: "ghcr.io/nirmata/aws-adapter:v0.1.1"
        imagePullPolicy: Always
        name: manager
        args:
        - --sync-period=60
        securityContext:
          runAsNonRoot: true
          privileged: false
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
          seccompProfile:
            type: RuntimeDefault
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
      serviceAccountName: nirmata-aws-adapter-sa
      terminationGracePeriodSeconds: 10
---
# Source: nirmata-aws-adapter/templates/resource.yaml
apiVersion: security.nirmata.io/v1alpha1
kind: AWSConfig
metadata:
  labels:
    app.kubernetes.io/name: awsconfig
    app.kubernetes.io/instance: awsconfig-resource
    app.kubernetes.io/part-of: nirmata-aws-adapter
    app.kubernetes.io/created-by: nirmata-aws-adapter
  name: -config
  namespace: nirmata
spec:
  name: 
  region:
