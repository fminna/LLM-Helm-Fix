---
# Source: spark-standalone/templates/graphite_mapping.yml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: spark-standalone
    helm.sh/chart: spark-standalone-0.1.0
    app.kubernetes.io/instance: release-name
  name: release-name-spark-standalone-graphite-mapping
data:
  graphite_mapping.conf: |-
    defaults:
      timer_type: histogram
      buckets: [.005, .01, .025, .05, .1, .25, .5, 1, 2.5 ]
      match_type: glob
      glob_disable_ordering: false
      ttl: 0 # metrics do not expire
    mappings:
    - match: "test.timing.*.*.*"
      name: "my_timer"
      labels:
        provider: "$2"
        outcome: "$3"
        job: "${1}_server"
    - match: "other.timing.*.*.*"
      timer_type: summary
      name: "other_timer"
      labels:
        provider: "$2"
        outcome: "$3"
        job: "${1}_server_other"
    - match: '*.*.jvm.*.*'
      name: jvm_memory_usage
      labels:
        application: $1
        executor_id: $2
        mem_type: $3
        qty: $4
    - match: '*.*.jvm.pools.*.*'
      name: jvm_memory_pools
      labels:
        application: $1
        executor_id: $2
        mem_type: $3
        qty: $4
    - match: '*.*.BlockManager.*.*'
      name: block_manager
      labels:
        application: $1
        executor_id: $2
        type: $3
        qty: $4
    - match: '*.*.DAGScheduler.*.*'
      name: DAG_scheduler
      labels:
        application: $1
        executor_id: $2
        type: $3
        qty: $4
    - match: '*.*.app.StreamingMetrics.*.*'
      name: app_Metrics
      labels:
        application: $1
        executor_id: $2
        type: $3
        qty: $4
---
# Source: spark-standalone/templates/spark-graphite-config.yml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: spark-standalone
    app.kubernetes.io/instance: release-name
    helm.sh/chart: spark-standalone-0.1.0
    app.kubernetes.io/managed-by: Helm
  name: release-name-spark-standalone-exporter
data:
  metrics.properties: |-
    *.sink.graphite.class=org.apache.spark.metrics.sink.GraphiteSink
    *.sink.graphite.host=localhost
    *.sink.graphite.port=9109
    *.sink.graphite.period=10
    *.sink.graphite.unit=seconds
    master.source.jvm.class=org.apache.spark.metrics.source.JvmSource
    worker.source.jvm.class=org.apache.spark.metrics.source.JvmSource
    driver.source.jvm.class=org.apache.spark.metrics.source.JvmSource
---
# Source: spark-standalone/templates/client-domain-svc.yaml
# to resolve ( pod_hostname.release-name-spark-standalone-domain ) through kubernetes DNS
# https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-hostname-and-subdomain-fields

apiVersion: v1
kind: Service
metadata:
  name: release-name-spark-standalone-domain
  labels:
    app.kubernetes.io/name: spark-standalone
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: domain    
    helm.sh/chart: spark-standalone-0.1.0
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: spark-standalone
    app.kubernetes.io/component: client
    app.kubernetes.io/instance: release-name
  clusterIP: None
  ports:
  - name: foo # Actually, no port is needed.
    port: 1234
    targetPort: 1234
---
# Source: spark-standalone/templates/master-exporter-service.yaml
kind: Service
apiVersion: v1
metadata:
  name: release-name-spark-standalone-standalone-exporter
  labels:
    app.kubernetes.io/name: spark-standalone
    app.kubernetes.io/instance: release-name
    helm.sh/chart: spark-standalone-0.1.0
    app.kubernetes.io/managed-by: Helm
spec: 
  selector:
    app.kubernetes.io/name: spark-standalone
    app.kubernetes.io/instance: release-name
  ports:
    - port: 9108
      name: metrics
---
# Source: spark-standalone/templates/master-headless-service.yaml
#Headless service
apiVersion: v1
kind: Service
metadata:
  name: release-name-spark-standalone-headless
  labels:
    app.kubernetes.io/name: spark-standalone
    app.kubernetes.io/instance: release-name
    helm.sh/chart: spark-standalone-0.1.0
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - port: 8080
      name: gui
    - port: 7077
      name: spark
  clusterIP: None
  selector:
    app.kubernetes.io/name: spark-standalone
    app.kubernetes.io/instance: release-name
---
# Source: spark-standalone/templates/master-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-spark-standalone
  labels:
    app.kubernetes.io/name: spark-standalone
    app.kubernetes.io/instance: release-name
    helm.sh/chart: spark-standalone-0.1.0
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - port: 8080
      name: gui
    - port: 7077
      name: spark
  selector:
    app.kubernetes.io/name: spark-standalone
    app.kubernetes.io/instance: release-name
---
# Source: spark-standalone/templates/worker-headless-service.yaml
#Headless service
apiVersion: v1
kind: Service
metadata:
  name: release-name-spark-standalone-workers
  labels:
    app.kubernetes.io/name: spark-standalone
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: spark-standalone-0.1.0
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/name: spark-standalone-worker
    app.kubernetes.io/instance: release-name
---
# Source: spark-standalone/templates/master-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-spark-standalone
  labels:
    app.kubernetes.io/name: spark-standalone
    app.kubernetes.io/instance: release-name
    helm.sh/chart: spark-standalone-0.1.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: spark-standalone
      app.kubernetes.io/instance: release-name
  serviceName: release-name-spark-standalone 
  template:
    metadata:
      labels:
        app.kubernetes.io/name: spark-standalone
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
    spec:
      volumes:
      - name: spark-exporter
        configMap:
          name: release-name-spark-standalone-exporter
      - name: spark-graphite-mapping
        configMap:
          name: release-name-spark-standalone-graphite-mapping
      containers:
      - name: release-name-spark-standalone-exporter
        image: "prom/graphite-exporter"
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 9108
        command:
        - /bin/graphite_exporter
        args:
        - --graphite.mapping-config
        - /tmp/graphite_mapping.conf
        volumeMounts:
        - name: spark-graphite-mapping
          mountPath: /tmp
        resources:
          null
      - name: release-name-spark-standalone
        image: "gradiant/spark:2.4.4-python-alpine"
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 7077
        - containerPort: 8080
        volumeMounts:
        - name: spark-exporter
          mountPath: /opt/spark/conf
        resources:
          null
        env:
        args:
        - standalone
        - master
        - --port 7077
        - --webui-port 8080
      nodeSelector:
        null
---
# Source: spark-standalone/templates/worker-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-spark-standalone-workers
  labels:
    app.kubernetes.io/name: spark-standalone
    helm.sh/chart: spark-standalone-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  serviceName: release-name-spark-standalone-workers 
  selector:
    matchLabels:
      app.kubernetes.io/name: spark-standalone-worker
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: spark-standalone-worker
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
    spec:
      containers:
      - name: release-name-spark-standalone-worker
        image: "gradiant/spark:2.4.4-python-alpine"
        imagePullPolicy: "IfNotPresent"
        resources:
          null
        env:
        args:
        - standalone
        - worker
        - spark://release-name-spark-standalone:7077
        - --webui-port 8080

      nodeSelector:
        null
---
# Source: spark-standalone/templates/tests/canary-pod.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-canary"
  labels:
    app.kubernetes.io/name: spark-standalone
    app.kubernetes.io/component: client
    app.kubernetes.io/instance: release-name
  annotations:
    "helm.sh/hook": test-success
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
spec:
  hostname: release-name-canary
  subdomain: release-name-spark-standalone-domain
  containers:
  - name: release-name-canary
    image: "gradiant/spark:2.4.4-python-alpine"
    imagePullPolicy: "IfNotPresent"
    command:
    - sh
    - -c
    - |
      # try pi spark calculation
      spark-submit run-example \
      --master spark://release-name-spark-standalone:7077 \
      SparkPi 10
  restartPolicy: Never
