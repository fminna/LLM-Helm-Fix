---
# Source: ibm-edbpg/templates/api-management.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "edb-1601424984069-api-management"
  labels:    
    app.kubernetes.io/name: release-name-ibm-edbpg
    helm.sh/chart: "ibm-edbpg-1.0.0"
    release: release-name
    app.kubernetes.io/managed-by: Helm
    icpdsupport/addOnId: "edb"
    icpdsupport/serviceInstanceId: "1601424984069"
    icpdsupport/app: database
    icpdsupport/createdBy: "0"
    component: edb
  annotations:    
    productMetric: "VIRTUAL_PROCESSOR_CORE"
    productChargedContainers: "All"
    productVersion: "2.0"
    productID:  "1658c31460304c6bba9d5bb8f2f94332"
    productName: "IBM Data Management Platform for EDB Postgres Enterprise 2.0 for IBM Cloud Pak for Data"
    cloudpakName: "IBM Data Management Platform for EDB Postgres Enterprise 2.0 for IBM Cloud Pak for Data"
    cloudpakId: "1658c31460304c6bba9d5bb8f2f94332"
    cloudpakInstanceId: ""
spec:
  selector:
    matchLabels:
      api-database-status: "edb-1601424984069-edb-api"
  replicas: 1
  revisionHistoryLimit: 2
  template:
    metadata:
      name: edb-api-management
      labels:        
        app.kubernetes.io/name: release-name-ibm-edbpg
        helm.sh/chart: "ibm-edbpg-1.0.0"
        release: release-name
        app.kubernetes.io/managed-by: Helm
        icpdsupport/addOnId: "edb"
        icpdsupport/serviceInstanceId: "1601424984069"
        icpdsupport/app: database
        icpdsupport/createdBy: "0"
        api-database-status: "edb-1601424984069-edb-api"
        component: edb
      annotations:        
        productMetric: "VIRTUAL_PROCESSOR_CORE"
        productChargedContainers: "All"
        productVersion: "2.0"
        productID:  "1658c31460304c6bba9d5bb8f2f94332"
        productName: "IBM Data Management Platform for EDB Postgres Enterprise 2.0 for IBM Cloud Pak for Data"
        cloudpakName: "IBM Data Management Platform for EDB Postgres Enterprise 2.0 for IBM Cloud Pak for Data"
        cloudpakId: "1658c31460304c6bba9d5bb8f2f94332"
        cloudpakInstanceId: ""
    spec:      
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          #If you specify multiple nodeSelectorTerms associated with nodeAffinity types,
          #then the pod can be scheduled onto a node if one of the nodeSelectorTerms is satisfied.
          #
          #If you specify multiple matchExpressions associated with nodeSelectorTerms,
          #then the pod can be scheduled onto a node only if all matchExpressions can be satisfied.
          #
          #valid operators: In, NotIn, Exists, DoesNotExist, Gt, Lt
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                  - amd64
                
      tolerations:
      - key: "icp4data"
        operator: "Equal"
        value: "database-edb"
        effect: "NoSchedule"      
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
      serviceAccount: postgresql-operator-manager
      containers:
      - name: edb-status
        image: mycluster.icp:8500/zen/edb-apimgmt:3.5.1-737-x86_64
        imagePullPolicy: IfNotPresent
        command: ['/bin/sh']
        args: ['-cx', '/var/edb_setup/common/init.sh --namespace default --service-name edb-1601424984069 --cluster-size 1']
        resources:
          requests:
            cpu: '0.10'
            memory: '128M'
          limits:
            cpu: '0.5'
            memory: '256M'
        livenessProbe:
          exec:
            command: ["/bin/bash", "-c", "ls /var/edb_setup"]
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          exec:
            command: ["/bin/bash", "-c", "ls /var/edb_setup"]
          initialDelaySeconds: 5
          periodSeconds: 5        
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
        env:
        - name: NAMESPACE
          value: default
      restartPolicy: Always
---
# Source: ibm-edbpg/templates/edb-epas-instance.yaml
apiVersion: postgresql.k8s.enterprisedb.io/v1
kind: Cluster
metadata:
  name: edb-1601424984069-edb-db
  labels:    
    app.kubernetes.io/name: release-name-ibm-edbpg
    helm.sh/chart: "ibm-edbpg-1.0.0"
    release: release-name
    app.kubernetes.io/managed-by: Helm
    icpdsupport/addOnId: "edb"
    icpdsupport/serviceInstanceId: "1601424984069"
    icpdsupport/app: database
    icpdsupport/createdBy: "0"
  annotations:    
    productMetric: "VIRTUAL_PROCESSOR_CORE"
    productChargedContainers: "All"
    productVersion: "2.0"
    productID:  "1658c31460304c6bba9d5bb8f2f94332"
    productName: "IBM Data Management Platform for EDB Postgres Enterprise 2.0 for IBM Cloud Pak for Data"
    cloudpakName: "IBM Data Management Platform for EDB Postgres Enterprise 2.0 for IBM Cloud Pak for Data"
    cloudpakId: "1658c31460304c6bba9d5bb8f2f94332"
    cloudpakInstanceId: ""

spec:
  imageName: mycluster.icp:8500/zen/postgresql:12.7
  instances: 1

  resources:
    requests:
      memory: "1Gi"
      cpu: "50m"
    limits:
      memory: "4Gi"
      cpu: "1000m"

  bootstrap:
    initdb:
      database: appdb
      owner: appuser
      secret:
        name: edb-1601424984069-edb-db-app-user

  superuserSecret:
    name: edb-1601424984069-edb-db-superuser

  storage:
    storageClass: nfs-client
    size: 5Gi
---
# Source: ibm-edbpg/templates/edb-delete-secret.yaml
kind: Job
apiVersion: batch/v1
metadata:
  name: "edb-1601424984069-delete-secretjob"
  labels:    
    app.kubernetes.io/name: release-name-ibm-edbpg
    helm.sh/chart: "ibm-edbpg-1.0.0"
    release: release-name
    app.kubernetes.io/managed-by: Helm
    icpdsupport/addOnId: "edb"
    icpdsupport/serviceInstanceId: "1601424984069"
    icpdsupport/app: database
    icpdsupport/createdBy: "0"
  annotations:    
    productMetric: "VIRTUAL_PROCESSOR_CORE"
    productChargedContainers: "All"
    productVersion: "2.0"
    productID:  "1658c31460304c6bba9d5bb8f2f94332"
    productName: "IBM Data Management Platform for EDB Postgres Enterprise 2.0 for IBM Cloud Pak for Data"
    cloudpakName: "IBM Data Management Platform for EDB Postgres Enterprise 2.0 for IBM Cloud Pak for Data"
    cloudpakId: "1658c31460304c6bba9d5bb8f2f94332"
    cloudpakInstanceId: ""
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  backoffLimit: 1
  template:
    metadata:
      labels:        
        app.kubernetes.io/name: release-name-ibm-edbpg
        helm.sh/chart: "ibm-edbpg-1.0.0"
        release: release-name
        app.kubernetes.io/managed-by: Helm
        icpdsupport/addOnId: "edb"
        icpdsupport/serviceInstanceId: "1601424984069"
        icpdsupport/app: database
        icpdsupport/createdBy: "0"
      annotations:        
        productMetric: "VIRTUAL_PROCESSOR_CORE"
        productChargedContainers: "All"
        productVersion: "2.0"
        productID:  "1658c31460304c6bba9d5bb8f2f94332"
        productName: "IBM Data Management Platform for EDB Postgres Enterprise 2.0 for IBM Cloud Pak for Data"
        cloudpakName: "IBM Data Management Platform for EDB Postgres Enterprise 2.0 for IBM Cloud Pak for Data"
        cloudpakId: "1658c31460304c6bba9d5bb8f2f94332"
        cloudpakInstanceId: ""
    spec:      
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          #If you specify multiple nodeSelectorTerms associated with nodeAffinity types,
          #then the pod can be scheduled onto a node if one of the nodeSelectorTerms is satisfied.
          #
          #If you specify multiple matchExpressions associated with nodeSelectorTerms,
          #then the pod can be scheduled onto a node only if all matchExpressions can be satisfied.
          #
          #valid operators: In, NotIn, Exists, DoesNotExist, Gt, Lt
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                  - amd64
                
      tolerations:
      - key: "icp4data"
        operator: "Equal"
        value: "database-edb"
        effect: "NoSchedule"      
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
      serviceAccount: postgresql-operator-manager
      containers:
      - name: edb-1601424984069-deletesecretjob
        image: mycluster.icp:8500/zen/edb-apimgmt:3.5.1-737-x86_64
        imagePullPolicy: IfNotPresent
        command: ['/bin/sh']
        args: ['-cx', '/var/edb_setup/common/edb-delete-secret.sh --namespace default --service-name edb-1601424984069']
        resources:
          requests:
            cpu: '0.5'
            memory: '256M'
          limits:
            cpu: '0.5'
            memory: '256M'
      restartPolicy: Never
