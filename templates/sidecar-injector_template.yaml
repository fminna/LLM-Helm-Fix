---
# Source: sidecar-injector/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-sidecar-injector
  labels:
    helm.sh/chart: sidecar-injector-0.19.0
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.19.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: sidecar-injector/templates/deployment.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: release-name-sidecar-injector-webhook-tls
  labels:
    helm.sh/chart: sidecar-injector-0.19.0
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.19.0"
    app.kubernetes.io/managed-by: Helm
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURwRENDQW95Z0F3SUJBZ0lRQ1NxOVpaZHh0dk4wUllnN2xlMWwwekFOQmdrcWhraUc5dzBCQVFzRkFEQVYKTVJNd0VRWURWUVFERXdwa1pXWmhkV3gwTFdOaE1CNFhEVEkwTURVeE5UQTRNVEl3T0ZvWERUSTFNRFV4TlRBNApNVEl3T0Zvd05ERXlNREFHQTFVRUF4TXBjbVZzWldGelpTMXVZVzFsTFhOcFpHVmpZWEl0YVc1cVpXTjBiM0l1ClpHVm1ZWFZzZEM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDN0hWeHcKSEIwVkl1RTFSbndnbGN4cjN1WkZMbS9mZHp2WkhZUkRUelJvVHJseXJXZlRmMVF4aVAvenZkbFo0cXcyYUFPOQpabXE3UWhFeVBHTWxoNFVJN05iTmx4UzJ2ZjZ1bFp0RW9HSXFGN2RKMG1FVFFIa0JoSDNkZDErUGVXVDlBTGFrCkdOS2ZBMkxrdmlrbXo3MEQyYW5JVkFER3E1VGNUSnNRSXo3TjE2SDlRbWw2cDU0WlR1cGVHRkp0dUoycmNyNEkKNEFPUGptb3NmM0wzN0o3RzhRUm5aUzAyOGRSc3dKZVI0bjBqV2VVeEVwV01xSjhMTFJKMXdLYzlJVlo3L0diMApUYlNONStGWHM3eWpadlJHM3hoZkFPaWgwcDJzbzdyRjVEZXNpcTRaRmhDVDZ1SHFBUDNVaVJmelFmZDZtODd3CnlLTzBLK0MwOWpFWWdRbnBBZ01CQUFHamdkQXdnYzB3RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVcKTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQQpGRStmTGMzZXBWRzZVczROUUJjWk8xTUV0R25KTUcwR0ExVWRFUVJtTUdTQ04zSmxiR1ZoYzJVdGJtRnRaUzF6CmFXUmxZMkZ5TFdsdWFtVmpkRzl5TG1SbFptRjFiSFF1YzNaakxtTnNkWE4wWlhJdWJHOWpZV3lDS1hKbGJHVmgKYzJVdGJtRnRaUzF6YVdSbFkyRnlMV2x1YW1WamRHOXlMbVJsWm1GMWJIUXVjM1pqTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWpOSjNBdG9YTnhWNVNJYmp3NU5RSW5uWEVOZmhJSG1zL2p6Y1BzSzRQaitYYm5udE1ZMWgyClhiaHFaUmJWaWNCbXIwRzlVSEsrN1lGYW9CUWtzM2J3NDJxS2dzcWNLOXQzZ3Zoa294M0FsWjliT21pOTVPODAKRDYvM0NUY2tjakdCeW5oWWhnUWliVjdqYVJiWEtXSy9vVDJsQzVncmkzNVV4amVtWUpsTFZnakFsSUVzMW9DaQpNaEJ2K0FkSUk0a3p4QlhXNWgvRnMyUUIwZTVPQTVSRmEySXc1RDMzbyt3Q0dyWFVoQXdBK014aDMyNVUwOGxZCkNpOEJleDVjMDV3Mi93M1hYSHlyTmpMa1lGbU9sKzB0d0RCZXVETHBUMXJMU1AvTEdVOFBxQVpKVmFzdzFPMmQKcDF1SE9lSXN6NVNLbnFVWFNCMTUySFR3RTJOaFE0dUEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdXgxY2NCd2RGU0xoTlVaOElKWE1hOTdtUlM1djMzYzcyUjJFUTA4MGFFNjVjcTFuCjAzOVVNWWovODczWldlS3NObWdEdldacXUwSVJNanhqSlllRkNPeld6WmNVdHIzK3JwV2JSS0JpS2hlM1NkSmgKRTBCNUFZUjkzWGRmajNsay9RQzJwQmpTbndOaTVMNHBKcys5QTltcHlGUUF4cXVVM0V5YkVDTSt6ZGVoL1VKcAplcWVlR1U3cVhoaFNiYmlkcTNLK0NPQURqNDVxTEg5eTkreWV4dkVFWjJVdE52SFViTUNYa2VKOUkxbmxNUktWCmpLaWZDeTBTZGNDblBTRldlL3htOUUyMGplZmhWN084bzJiMFJ0OFlYd0Rvb2RLZHJLTzZ4ZVEzcklxdUdSWVEKaytyaDZnRDkxSWtYODBIM2Vwdk84TWlqdEN2Z3RQWXhHSUVKNlFJREFRQUJBb0lCQUZUSVBmMHlUOThtMmNKbworSTlQTUx2ajJKU2FNT2loUHdYbWdPcDZ0ZlZaVGwvdXdHK3Ridm11Nk1LSlVEV1JKcFRVVm5WNE5YNDV0azc3CjI3VENqZjM0U25BSE44U0JuQ2VBOUVTSkkxR05RMmg0b2JHMmNkM0ZLYjZ5ZXlNb1R5RHdOTkZ2eWVkeEFsdEEKNnFhQ1ZGT3RTV2ZTNERNa3hhTjRObjUrYWRPY1Radk0rb202SDN6WjNhTndaeWZ6bkxTUjJ6RTFGZ08xK0FCeQpEY3hWZldoVFgrOWxZYUZud1VtQ3cvWHcxQW9JUlVhU3VtdjZ0WThuTnpPT3pKQklERmdOYUVSeXllR0J6Zk9OCk4zSjJUZURHdVRFek5wRXZEbmpFbVZXZkpPUWhDRVgxeTJwNytiTjRXTm5HVXdGcncybW9ZaEYrZUY4ZDdCM2kKeWd1RTBIRUNnWUVBMjZlLy9HTW1NaVBEZ1UwWnJxVG04aVNJYlNUcXVMMlhPQlVSQitrVTdSemJPajlpdDNsSwo1aFlkWDM0Q3VtMFgySmZlSk53UzMvZHVlMWlxSjJQOCs5R3hiMWpyckVsZ0FDYlFqZGF6a0NxMTVmV1VOelVrCnM3NHZSUmVUdk9nek9IWTVtUnVtNXQva28yeExBS3RZZ3NjTjhGNUVaQ3UwTmF2bXlqQTdYTzBDZ1lFQTJoTSsKV2hveXZxdEh5SUd5UjFSN0hCYnV1MktIYkxHYVE1UjEvbktSVEJ4Z0ZVRndVMUd3THhqUTZqQ0taNG1rU284TQpuclBWZkRzeUw1cDlHTDJYdTJJVHVLSEhleXlYME41T1BQZDJnL0FlcVpBalRmN081by9xcVR1RFpqWlIvWWRjCkZHMzMvbU9qbzdGdTR6aVR3OGNyTGNZNnJZcFR1YWlCaVNXdVBXMENnWUVBMWxEdWVZc2tFWGZqb1oxZ21ZNDcKNTdiTmhmQ25OR21IeWlpRDNYd0Y5dlJZMHBSVjlUNWJYZlBsNU81R0t5K1dQTGF4QUxYWmxMMFBCenFUaXF0OApneGN1VUw0cDlJZ0RLeUswQ2pDYU11ZjVZczRpTjF1YTIrV01xWlUvaU9ubVVBaktXaUVvejh0VWdqOS9Uci9nCk5IbVRtQnZpRHZxMWNraXZma2RoSkdFQ2dZQUVUa2oyNG5tS0JqdSttOEQzWTVXaXNsazRYZk9xazc4bUFuSnAKK2IwZ3NaYThGTFN4RUhYWUdEZFh5R21UTGNhT3FsQm5lY21IVUd2blFMZWptMnE1aW5BMVB3eC9SQndqUmFCcAoxOEVCVGVadEZxbDd5c0l2RHp4azV3WHJLTHRwdEJoL1ZzU0V3MWJoem9rUDkzZ0RiNVZNckJOUWhlQ3RVOFJxCi90RjM2UUtCZ1FEU1g2SlYwNm9VYnFRUjdDRU5sc2VSOVljN3lRVkJLYm1rcE1MbUs4LzlmUHFPaXlxUUxjSDUKN1hmaVViUG43TXVodDRtWVJ3ekxRRWJuSEVUNnpaQ1c5ZUkwdm1kZFpmbGJyRS9NRENHbzE1RWorVkdIaVNFNgorNVBDeUViNHZodStnZlJuRG42RVNDV0RCbnYrR2tDNmt6WitFTExqTWdGc2xIYldZT1NNOWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGVENDQWYyZ0F3SUJBZ0lRSVNZMkhZUDJMdko3N2ZMdnhGQ3MrekFOQmdrcWhraUc5dzBCQVFzRkFEQVYKTVJNd0VRWURWUVFERXdwa1pXWmhkV3gwTFdOaE1CNFhEVEkwTURVeE5UQTRNVEl3T0ZvWERUTTBNRFV4TXpBNApNVEl3T0Zvd0ZURVRNQkVHQTFVRUF4TUtaR1ZtWVhWc2RDMWpZVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFECmdnRVBBRENDQVFvQ2dnRUJBTWlQQjBrM0lOaUZJeld1U1psVzhFWS94SlorSmlmNGlqNlFnVVUydEM5eWVLeVMKS1ZsdmlnZnV4a1dHTTBmT0xydmw2VHNZakZTakgxR0pNTVMyWnZFL0U2UlZobHdnU3hHZHBJTzdGd0xIYWhMawpna1VETnY5UHFjN0pPNllNOXN4MUlsalFoMk5BSlh2SDhHU3I1eUI5MDVtUG55bk9WZkQwN3F5OWw3TUIxSVZHCkgxWWdBTVdHU3ZDSTRXeVdqRTk4M2hSS0U1a2lLMlQrZk9ITEwvWmRSbnd2Um44RFNaR2NVMU01dEEvekl3THoKMklkNXlYOHFoSUlKL3VlRlBFeldYS2UrQ2J6NFJPWGEzcWVaRDZxSHRRS1Z5d05BTlBnZVpFb1dtcmVydHU2cApTVTBjTENjTjkzYWEzY0JrZkxPSlZpRmNDRHd3T2FSREhFSFNCU01DQXdFQUFhTmhNRjh3RGdZRFZSMFBBUUgvCkJBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEUKQlRBREFRSC9NQjBHQTFVZERnUVdCQlJQbnkzTjNxVlJ1bExPRFVBWEdUdFRCTFJweVRBTkJna3Foa2lHOXcwQgpBUXNGQUFPQ0FRRUFSZkNHYzRncFlSaVBUSThGdU1SOUppYzQxMEM3WjF5RjEraDNCZ1ZyYkw5djFrN3gwVGtaCmFTQTF2TVNRZ3VZZmtGTkFsR2Y0ZjhLQmZMWG5Fb2NmQ25GNC83WVBmUnVqcG0wa3N0S0wzdXJyaTl3eWtGKzMKazdOMkVhL05RQnNkRkZiQk1FY1RLaGNFTElDS2NTYy9LbWtOeUlrb2VOVXJXYWlDYmwwV01HNEswRWU1QUJ6Tgp6RElxUXlaNzdvdTZpTjVlenZOSHJZMDFSalprYTkrN0dPTHBtTmc1R1FPK1lrQU5VVmJvNitZNVg5QXp3R1huClE2SCtqSVlXdjA4UjlGM2Z3UUpyVWxFaHhpcFNQYmNxUjB1bk4zQXNmdGw5Z0Z4TlhlTXphTmd5NnBaSFJhdncKY2VvRld4Si94cVFHVzJTTzNDVGEzWDM5UXJVcUQ0MWdYUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
---
# Source: sidecar-injector/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-sidecar-injector
  labels:
    helm.sh/chart: sidecar-injector-0.19.0
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.19.0"
    app.kubernetes.io/managed-by: Helm
data:
  sidecarconfig.yaml: |-
    
    initContainers:
    - name: proxy-init
      image: impartsecurity/k8s-sidecar-init:0.19.0
      imagePullPolicy: IfNotPresent
      args: [
        "--incoming-proxy-port",
        "14143",
        "--proxy-uid",
        "2103",
        "--inbound-ports-to-ignore",
        "7946",
        "--outbound-ports-to-ignore",
        "7946",
        "--mode",
        "proxy"
        ]
      securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  add:
                  - NET_ADMIN
                  - NET_RAW
                  drop:
                  - ALL
                runAsUser: 0
    containers:
    - name: impart-inspector
      image: impartsecurity/inspector:0.19.0
      imagePullPolicy: IfNotPresent
      securityContext:
                runAsUser: 2103
      env:
      - name: INSPECTOR_STATSD_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      - name: INSPECTOR_SIDECAR_HTTP_LISTEN_ADDR
        value: ":14143"
      - name: INSPECTOR_TCP_LISTEN_ADDR
        value: ":20210"
      - name: INSPECTOR_MODE
        value: "sidecar_proxy"
      - name: INSPECTOR_SIDECAR_CONTAINER_BACKEND_SCHEME
        value: ""
      - name: INSPECTOR_GOSSIP_PEER_ADDR
        value: release-name-controlnode.default.svc.cluster.local:7946
      - name: INSPECTOR_LOG_LEVEL
        value: 2
      - name: INSPECTOR_LOG_FORMAT
        value: text-basic
      - name: INSPECTOR_SIGTERM_DELAY_SECONDS
        value: 20
      - name: INSPECTOR_IMPART_API_URL
        value: https://api.impartsecurity.net/v0
      - name: INSPECTOR_TLS_CERT
        value: "/etc/tls-secret/tls.crt"
      - name: INSPECTOR_TLS_KEY
        value: "/etc/tls-secret/tls.key"
      - name: INSPECTOR_AUTH0_TENANT_DOMAIN
        value: 
      - name: INSPECTOR_JWT_AUDIENCE
        value: 
      - name: INSPECTOR_API_CLIENT_ID
        value: 
      - name: INSPECTOR_UNIX_SOCKET_PATH
        value: /tmp/impart/inspector.sock
      - name: INSPECTOR_UNIX_SOCKET_PERMISSIONS
        value: 438
      - name: INSPECTOR_CLUSTER_GROUP
        value: 
      resources:
        limits:
          cpu: 1.2
          memory: 2Gi
        requests:
          cpu: 200m
          memory: 512Mi
      volumeMounts:
    volumes:
---
# Source: sidecar-injector/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-sidecar-injector
  labels:
        app.kubernetes.io/name: sidecar-injector
        app.kubernetes.io/instance: release-name
rules:
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["mutatingwebhookconfigurations"]
  verbs: ["create", "get", "delete", "list", "patch", "update", "watch"]
---
# Source: sidecar-injector/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-sidecar-injector
  labels:
        app.kubernetes.io/name: sidecar-injector
        app.kubernetes.io/instance: release-name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-sidecar-injector
subjects:
- kind: ServiceAccount
  name:  release-name-sidecar-injector
  namespace: default
---
# Source: sidecar-injector/templates/controlnode.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-controlnode
  labels:
    helm.sh/chart: sidecar-injector-0.19.0
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: "controlnode"
    app.kubernetes.io/version: "0.19.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 7946
      targetPort: 7946
  selector:
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: "controlnode"
---
# Source: sidecar-injector/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-sidecar-injector
  labels:
    helm.sh/chart: sidecar-injector-0.19.0
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.19.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 8443
  selector:
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: release-name
---
# Source: sidecar-injector/templates/controlnode.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-controlnode
  labels:
    helm.sh/chart: sidecar-injector-0.19.0
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: "controlnode"
    app.kubernetes.io/version: "0.19.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sidecar-injector
      app.kubernetes.io/instance: "controlnode"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sidecar-injector
        app.kubernetes.io/instance: "controlnode"
    spec:
      serviceAccountName: release-name-sidecar-injector
      securityContext:
        {}
      containers:
        - name:  controlnode
          securityContext:
            {}
          image: "impartsecurity/control-node:0.19.0"
          imagePullPolicy: IfNotPresent
          args:
          - --gossip_port=7946
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: CONTROL-NODE_LOG_LEVEL
            value: "2"
          - name: CONTROL-NODE_LOG_FORMAT
            value: "text-basic"
          resources:
            {}
          volumeMounts: []
      volumes: []
---
# Source: sidecar-injector/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-sidecar-injector
  labels:
    helm.sh/chart: sidecar-injector-0.19.0
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.19.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sidecar-injector
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/webhook-tls-config: a6920aeb803ba02a5efbe97ee3bc2243a79bc368441005c0fd044c13b1b91bf5
        checksum/webhook-tls-config-c: 6d22338dc94753b78b0f3346d65ced7d3f14ed9dfa874aea0eb701ac42ac7754
        checksum/webhook-tls-config-k: 253ef5b972140b5539cc36f79cf518bfae5c8e626de4337771b36a973de6edae
        checksum/values: dd1a548617134a45423daefb4a74635ddf0fdeea7cb80f207b968e7afc7eda95
        checksum/webhook-sidecar-config: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
      labels:
        app.kubernetes.io/name: sidecar-injector
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-sidecar-injector
      securityContext:
        {}
      containers:
        - name: sidecar-injector
          securityContext:
            {}
          image: "impartsecurity/k8s-webhook-injector:0.19.0"
          imagePullPolicy: IfNotPresent
          args:
          - --sidecar-config-file=/etc/webhook/config/sidecarconfig.yaml
          - --tls-cert-file=/etc/webhook/certs/tls.crt
          - --tls-private-key-file=/etc/webhook/certs/tls.key
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: WEBHOOK-INJECTOR_LOG_LEVEL
            value: "2"
          - name: WEBHOOK-INJECTOR_LOG_FORMAT
            value: "text-basic"
          resources:
            {}
          volumeMounts:
          - mountPath: /etc/webhook/config
            name: webhook-config
          - name: certs
            mountPath: /etc/webhook/certs
            readOnly: true
      volumes:
      - name: certs
        secret:
          secretName: release-name-sidecar-injector-webhook-tls
      - configMap:
          name: release-name-sidecar-injector
        name: webhook-config
---
# Source: sidecar-injector/templates/deployment.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: release-name-sidecar-injector
webhooks:
  - name: release-name-sidecar-injector.impart.security
    admissionReviewVersions: ["v1"]
    clientConfig:
      service:
        name: release-name-sidecar-injector
        namespace: default
        path: /inject
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGVENDQWYyZ0F3SUJBZ0lRSVNZMkhZUDJMdko3N2ZMdnhGQ3MrekFOQmdrcWhraUc5dzBCQVFzRkFEQVYKTVJNd0VRWURWUVFERXdwa1pXWmhkV3gwTFdOaE1CNFhEVEkwTURVeE5UQTRNVEl3T0ZvWERUTTBNRFV4TXpBNApNVEl3T0Zvd0ZURVRNQkVHQTFVRUF4TUtaR1ZtWVhWc2RDMWpZVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFECmdnRVBBRENDQVFvQ2dnRUJBTWlQQjBrM0lOaUZJeld1U1psVzhFWS94SlorSmlmNGlqNlFnVVUydEM5eWVLeVMKS1ZsdmlnZnV4a1dHTTBmT0xydmw2VHNZakZTakgxR0pNTVMyWnZFL0U2UlZobHdnU3hHZHBJTzdGd0xIYWhMawpna1VETnY5UHFjN0pPNllNOXN4MUlsalFoMk5BSlh2SDhHU3I1eUI5MDVtUG55bk9WZkQwN3F5OWw3TUIxSVZHCkgxWWdBTVdHU3ZDSTRXeVdqRTk4M2hSS0U1a2lLMlQrZk9ITEwvWmRSbnd2Um44RFNaR2NVMU01dEEvekl3THoKMklkNXlYOHFoSUlKL3VlRlBFeldYS2UrQ2J6NFJPWGEzcWVaRDZxSHRRS1Z5d05BTlBnZVpFb1dtcmVydHU2cApTVTBjTENjTjkzYWEzY0JrZkxPSlZpRmNDRHd3T2FSREhFSFNCU01DQXdFQUFhTmhNRjh3RGdZRFZSMFBBUUgvCkJBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEUKQlRBREFRSC9NQjBHQTFVZERnUVdCQlJQbnkzTjNxVlJ1bExPRFVBWEdUdFRCTFJweVRBTkJna3Foa2lHOXcwQgpBUXNGQUFPQ0FRRUFSZkNHYzRncFlSaVBUSThGdU1SOUppYzQxMEM3WjF5RjEraDNCZ1ZyYkw5djFrN3gwVGtaCmFTQTF2TVNRZ3VZZmtGTkFsR2Y0ZjhLQmZMWG5Fb2NmQ25GNC83WVBmUnVqcG0wa3N0S0wzdXJyaTl3eWtGKzMKazdOMkVhL05RQnNkRkZiQk1FY1RLaGNFTElDS2NTYy9LbWtOeUlrb2VOVXJXYWlDYmwwV01HNEswRWU1QUJ6Tgp6RElxUXlaNzdvdTZpTjVlenZOSHJZMDFSalprYTkrN0dPTHBtTmc1R1FPK1lrQU5VVmJvNitZNVg5QXp3R1huClE2SCtqSVlXdjA4UjlGM2Z3UUpyVWxFaHhpcFNQYmNxUjB1bk4zQXNmdGw5Z0Z4TlhlTXphTmd5NnBaSFJhdncKY2VvRld4Si94cVFHVzJTTzNDVGEzWDM5UXJVcUQ0MWdYUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["*"]
        apiVersions: ["v1"]
        resources:
          - pods
    failurePolicy: Fail
    sideEffects: None
    objectSelector:
      matchLabels:
        impart-inspector-injection: enabled
---
# Source: sidecar-injector/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-sidecar-injector-test-connection"
  labels:
    helm.sh/chart: sidecar-injector-0.19.0
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.19.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: nc
      image: busybox
      command: ['sh', '-c']
      args:
        - "nc -zvw 5 release-name-sidecar-injector 443"
  restartPolicy: Never
