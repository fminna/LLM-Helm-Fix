---
# Source: tenant-namespace-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-tenant-namespace-operator
  labels:

    helm.sh/chart: tenant-namespace-operator-0.1.22
    app.kubernetes.io/name: tenant-namespace-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.18-1"
    app.kubernetes.io/managed-by: Helm
---
# Source: tenant-namespace-operator/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-tenant-namespace-operator-fl
  labels:

    helm.sh/chart: tenant-namespace-operator-0.1.22
    app.kubernetes.io/name: tenant-namespace-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.18-1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - miscscripts.pnnl.gov
  resources:
  - tenantnamespaceflavors
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - resourcequotas
  - limitranges
  verbs:
  - "*"
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - clusterroles
  - clusterrolebindings
  verbs:
  - "*"
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - "*"
- apiGroups:
  - extensions
  - "networking.k8s.io" # k8s 1.14+
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - operators.coreos.com
  resources:
  - operatorgroups
  - subscriptions
  verbs:
  - "*"
---
# Source: tenant-namespace-operator/templates/flavor-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tenantnamespaceflavors-edit
rules:
- apiGroups:
  - miscscripts.pnnl.gov
  resources:
  - tenantnamespaceflavors
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
# Source: tenant-namespace-operator/templates/ic-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-tenant-namespace-operator-ic
  labels:

    helm.sh/chart: tenant-namespace-operator-0.1.22
    app.kubernetes.io/name: tenant-namespace-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.18-1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
---
# Source: tenant-namespace-operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-tenant-namespace-operator
  labels:

    helm.sh/chart: tenant-namespace-operator-0.1.22
    app.kubernetes.io/name: tenant-namespace-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.18-1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - services/finalizers
  - endpoints
  - events
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
# needed for ingress leader election pre 1.24
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  - prometheusrules
  verbs:
  - get
  - create
  - list
  - delete
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resourceNames:
  - tenant-namespace-operator
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - replicasets
  - deployments
  verbs:
  - get
- apiGroups:
  - miscscripts.pnnl.gov
  resources:
  - '*'
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: tenant-namespace-operator/templates/runner-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tenantnamespace-edit
  labels:
rules:
- apiGroups:
  - miscscripts.pnnl.gov
  resources:
  - tenantnamespaces
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
# Source: tenant-namespace-operator/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-tenant-namespace-operator-fl
  labels:

    helm.sh/chart: tenant-namespace-operator-0.1.22
    app.kubernetes.io/name: tenant-namespace-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.18-1"
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: release-name-tenant-namespace-operator
  namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-tenant-namespace-operator-fl
  apiGroup: rbac.authorization.k8s.io
---
# Source: tenant-namespace-operator/templates/clusterrolebinding.yaml
#This is needed so that it can give out admin access to things it creates
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-tenant-namespace-operator-adm
  labels:

    helm.sh/chart: tenant-namespace-operator-0.1.22
    app.kubernetes.io/name: tenant-namespace-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.18-1"
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: release-name-tenant-namespace-operator
  namespace: default
roleRef:
  kind: ClusterRole
  name: admin
  apiGroup: rbac.authorization.k8s.io
---
# Source: tenant-namespace-operator/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-tenant-namespace-operator
  labels:

    helm.sh/chart: tenant-namespace-operator-0.1.22
    app.kubernetes.io/name: tenant-namespace-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.18-1"
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: release-name-tenant-namespace-operator
  namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-tenant-namespace-operator
  apiGroup: rbac.authorization.k8s.io
---
# Source: tenant-namespace-operator/templates/leader-election-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-tenant-namespace-operator-le
  labels:

    helm.sh/chart: tenant-namespace-operator-0.1.22
    app.kubernetes.io/name: tenant-namespace-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.18-1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
# Source: tenant-namespace-operator/templates/leader-election-role-binding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-tenant-namespace-operator-le
  labels:

    helm.sh/chart: tenant-namespace-operator-0.1.22
    app.kubernetes.io/name: tenant-namespace-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.18-1"
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: release-name-tenant-namespace-operator
  namespace: default
roleRef:
  kind: Role
  name: release-name-tenant-namespace-operator-le
  apiGroup: rbac.authorization.k8s.io
---
# Source: tenant-namespace-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-tenant-namespace-operator
  labels:
    helm.sh/chart: tenant-namespace-operator-0.1.22
    app.kubernetes.io/name: tenant-namespace-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.18-1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tenant-namespace-operator
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tenant-namespace-operator
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-tenant-namespace-operator
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: release-name-tenant-namespace-operator
          image: "pnnlmiscscripts/tenant-namespace-operator:0.1.18-1"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /tmp
              name: temp
            - mountPath: /tmp/ansible-operator/runner
              name: runner
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          resources:
            {}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 6789
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 6789
            initialDelaySeconds: 5
            periodSeconds: 10
          args:
            - "--leader-elect"
            - "--leader-election-id=tenant-namespace-operator"
          env:
            - name: ANSIBLE_GATHERING
              value: explicit
            - name: WATCH_NAMESPACE
              value: ""
            - name: SERVICE_ACCOUNT_NAME
              value: release-name-tenant-namespace-operator
            - name: NAMESPACE
              value: default
            - name: INGRESS_CLUSTERROLE
              value: release-name-tenant-namespace-operator-ic
      volumes:
        - name: temp
          emptyDir:
            medium: Memory
            sizeLimit: "64Mi"
        - name: runner
          emptyDir: {}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
---
# Source: tenant-namespace-operator/templates/ingressclass.yaml
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: public
  labels:
    helm.sh/chart: tenant-namespace-operator-0.1.22
    app.kubernetes.io/name: tenant-namespace-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.18-1"
    app.kubernetes.io/managed-by: Helm
spec:
  controller: k8s.io/ingress-nginx
