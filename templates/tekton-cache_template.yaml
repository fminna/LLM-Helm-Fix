---
# Source: tekton-cache/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: cache
  labels:
    helm.sh/chart: tekton-cache-0.3.2
    app.kubernetes.io/name: tekton-cache
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# Source: tekton-cache/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: tekton-cache
  labels:
    helm.sh/chart: tekton-cache-0.3.2
    app.kubernetes.io/name: tekton-cache
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: tekton-cache
    app.kubernetes.io/instance: release-name
---
# Source: tekton-cache/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-tekton-cache
  labels:
    helm.sh/chart: tekton-cache-0.3.2
    app.kubernetes.io/name: tekton-cache
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tekton-cache
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tekton-cache
        app.kubernetes.io/instance: release-name
    spec:
      volumes:
        - name: cache
          persistentVolumeClaim:
            claimName: cache
      securityContext:
        {}
      initContainers:
        - name: fix-permissions
          image: busybox:1.36.1
          command:
            - chmod
            - '-R'
            - '0775'
            - /uploads
          resources: {}
          volumeMounts:
            - name: cache
              mountPath: /uploads
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
          securityContext:
            privileged: true
            runAsUser: 0
      containers:
        - name: tekton-cache
          volumeMounts:
            - mountPath: "/uploads"
              name: cache
          securityContext:
            {}
          image: "epamedp/tekton-cache:0.1.2"
          imagePullPolicy: IfNotPresent
          env:
            - name: UPLOADER_HOST
              value: "0.0.0.0"
            - name: UPLOADER_PORT
              value: "8080"
            - name: UPLOADER_DIRECTORY
              value: "/uploads"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            {}
