---
# Source: argocd-applicationset/templates/psp.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: release-name-argocd-applicationset
  labels:
    helm.sh/chart: argocd-applicationset-1.12.1
    app.kubernetes.io/name: argocd-applicationset
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.4.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-cd-applicationset
    app.kubernetes.io/component: controller
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'
spec:
  privileged: false
  hostIPC: false
  hostNetwork: false
  hostPID: false
  readOnlyRootFilesystem: false
  allowPrivilegeEscalation: false
  allowedCapabilities:
    - '*'
  fsGroup:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
    - '*'
---
# Source: argocd-applicationset/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-argocd-applicationset
  labels:
    helm.sh/chart: argocd-applicationset-1.12.1
    app.kubernetes.io/name: argocd-applicationset
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.4.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-cd-applicationset
    app.kubernetes.io/component: controller
---
# Source: argocd-applicationset/templates/psp.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-argocd-applicationset-psp
  labels:
    helm.sh/chart: argocd-applicationset-1.12.1
    app.kubernetes.io/name: argocd-applicationset
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.4.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-cd-applicationset
    app.kubernetes.io/component: controller
rules:
  - apiGroups: ['policy']
    resources: ['podsecuritypolicies']
    verbs:     ['use']
    resourceNames:
      - release-name-argocd-applicationset
---
# Source: argocd-applicationset/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-argocd-applicationset
  labels:
    helm.sh/chart: argocd-applicationset-1.12.1
    app.kubernetes.io/name: argocd-applicationset
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.4.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-cd-applicationset
    app.kubernetes.io/component: controller
rules:
  - apiGroups:
    - argoproj.io
    resources:
    - applications
    - appprojects
    - applicationsets
    - applicationsets/finalizers
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - argoproj.io
    resources:
    - applicationsets/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - apps
    - extensions
    resources:
    - deployments
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
---
# Source: argocd-applicationset/templates/psp.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-argocd-applicationset-psp
  labels:
    helm.sh/chart: argocd-applicationset-1.12.1
    app.kubernetes.io/name: argocd-applicationset
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.4.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-cd-applicationset
    app.kubernetes.io/component: controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-argocd-applicationset-psp
subjects:
  - kind: ServiceAccount
    name: release-name-argocd-applicationset
    namespace: default
---
# Source: argocd-applicationset/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-argocd-applicationset
  labels:
    helm.sh/chart: argocd-applicationset-1.12.1
    app.kubernetes.io/name: argocd-applicationset
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.4.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-cd-applicationset
    app.kubernetes.io/component: controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-argocd-applicationset
subjects:
  - kind: ServiceAccount
    name: release-name-argocd-applicationset
---
# Source: argocd-applicationset/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-argocd-applicationset
  labels:
    helm.sh/chart: argocd-applicationset-1.12.1
    app.kubernetes.io/name: argocd-applicationset
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.4.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-cd-applicationset
    app.kubernetes.io/component: controller
spec:
  ports:
  - name: webhook
    port: 7000
    protocol: TCP
    targetPort: webhook
  selector:
      app.kubernetes.io/name: argocd-applicationset
      app.kubernetes.io/instance: release-name
---
# Source: argocd-applicationset/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-argocd-applicationset
  labels:
    helm.sh/chart: argocd-applicationset-1.12.1
    app.kubernetes.io/name: argocd-applicationset
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.4.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argo-cd-applicationset
    app.kubernetes.io/component: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-applicationset
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-applicationset
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-argocd-applicationset
      securityContext:
        {}
      containers:
        - name: argocd-applicationset
          securityContext:
            {}
          command:
            - entrypoint.sh
            - applicationset-controller
            - --metrics-addr=:8080
            - --probe-addr=:8081
            - --namespace=default
            - --argocd-repo-server=argocd-repo-server:8081
            - --policy=sync
            - --debug=false
            - --dry-run=false
          image: "quay.io/argoproj/argocd-applicationset:v0.4.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
            - name: metrics
              containerPort: 8080
              protocol: TCP
            - name: webhook
              containerPort: 7000
              protocol: TCP
          resources:
            {}
          volumeMounts:
            - mountPath: /tmp
              name: tmp-dir
            - mountPath: /app/config/ssh
              name: ssh-known-hosts
            - mountPath: /app/config/tls
              name: tls-certs
            - mountPath: /app/config/gpg/keys
              name: gpg-keyring
      volumes:
      - emptyDir: {}
        name: tmp-dir
      - configMap:
          name: argocd-ssh-known-hosts-cm
        name: ssh-known-hosts
      - configMap:
          name: argocd-tls-certs-cm
        name: tls-certs
      - emptyDir: {}
        name: gpg-keyring
