---
# Source: oam-kubernetes-runtime/templates/oam-controller.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: oam-kubernetes-runtime-release-name
  labels:
    helm.sh/chart: oam-kubernetes-runtime-0.3.0
    app.kubernetes.io/name: oam-kubernetes-runtime
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: oam-kubernetes-runtime/templates/oam-controller.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: oam-kubernetes-runtime-release-name
  labels:
    helm.sh/chart: oam-kubernetes-runtime-0.3.0
    app.kubernetes.io/name: oam-kubernetes-runtime
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.0"
    app.kubernetes.io/managed-by: Helm
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      rbac.oam.dev/aggregate-to-controller: "true"
---
# Source: oam-kubernetes-runtime/templates/oam-controller.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: oam-kubernetes-runtime-release-name:system:aggregate-to-controller
  labels:
    helm.sh/chart: oam-kubernetes-runtime-0.3.0
    app.kubernetes.io/name: oam-kubernetes-runtime
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.0"
    app.kubernetes.io/managed-by: Helm
    rbac.oam.dev/aggregate-to-controller: "true"
rules:
- apiGroups:
  - core.oam.dev
  resources:
  - "*"
  verbs:
  - "*"
- apiGroups:
  - apps
  resources:
  - deployments
  - controllerrevisions
  verbs:
  - "*"
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - "*"
- apiGroups:
  - ""
  resources:
  - events
  - services
  verbs:
  - "*"
---
# Source: oam-kubernetes-runtime/templates/oam-controller.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: oam-kubernetes-runtime-release-name
  labels:
    helm.sh/chart: oam-kubernetes-runtime-0.3.0
    app.kubernetes.io/name: oam-kubernetes-runtime
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: oam-kubernetes-runtime-release-name
subjects:
  - kind: ServiceAccount
    name: oam-kubernetes-runtime-release-name
    namespace: default
---
# Source: oam-kubernetes-runtime/templates/oam-controller.yaml
# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: oam-kubernetes-runtime-release-name-leader-election
  labels:
    helm.sh/chart: oam-kubernetes-runtime-0.3.0
    app.kubernetes.io/name: oam-kubernetes-runtime
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps/status
    verbs:
      - get
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
---
# Source: oam-kubernetes-runtime/templates/oam-controller.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: oam-kubernetes-runtime-release-name-leader-election
  labels:
    helm.sh/chart: oam-kubernetes-runtime-0.3.0
    app.kubernetes.io/name: oam-kubernetes-runtime
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: oam-kubernetes-runtime-release-name-leader-election
subjects:
  - kind: ServiceAccount
    name: oam-kubernetes-runtime-release-name
---
# Source: oam-kubernetes-runtime/templates/oam-controller.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oam-kubernetes-runtime-release-name
  labels:
    helm.sh/chart: oam-kubernetes-runtime-0.3.0
    app.kubernetes.io/name: oam-kubernetes-runtime
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: oam-kubernetes-runtime
      app.kubernetes.io/instance: release-name
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: oam-kubernetes-runtime
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: oam-kubernetes-runtime-release-name
      securityContext:
        {}
      containers:
        - name: release-name
          securityContext:
            {}
          args:
            - "--metrics-addr=:8080"
            - "--enable-leader-election"
            
          image: crossplane/oam-kubernetes-runtime:v0.3.0
          imagePullPolicy: "Always"
          resources:
            limits:
              cpu: 300m
              memory: 150Mi
            requests:
              cpu: 100m
              memory: 20Mi
          
      
      terminationGracePeriodSeconds: 10
---
# Source: oam-kubernetes-runtime/templates/scopedefinitions.yaml
apiVersion: core.oam.dev/v1alpha2
kind: ScopeDefinition
metadata:
  name: healthscopes.core.oam.dev
spec:
  workloadRefsPath: spec.workloadRefs
  allowComponentOverlap: true
  definitionRef:
    name: healthscope.core.oam.dev
---
# Source: oam-kubernetes-runtime/templates/traitdefinitions.yaml
apiVersion: core.oam.dev/v1alpha2
kind: TraitDefinition
metadata:
  name: manualscalertraits.core.oam.dev
spec:
  workloadRefPath: spec.workloadRef
  definitionRef:
    name: manualscalertraits.core.oam.dev
---
# Source: oam-kubernetes-runtime/templates/workloaddefinitions.yaml
apiVersion: core.oam.dev/v1alpha2
kind: WorkloadDefinition
metadata:
  name: containerizedworkloads.core.oam.dev
spec:
  definitionRef:
    name: containerizedworkloads.core.oam.dev
  childResourceKinds:
    - apiVersion: apps/v1
      kind: Deployment
    - apiVersion: v1
      kind: Service
