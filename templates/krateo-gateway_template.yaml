---
# Source: krateo-gateway/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-krateo-gateway
  labels:
    helm.sh/chart: krateo-gateway-0.3.15
    app.kubernetes.io/name: krateo-gateway
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.12"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: krateo-gateway/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-krateo-gateway
  labels:
    helm.sh/chart: krateo-gateway-0.3.15
    app.kubernetes.io/name: krateo-gateway
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.12"
    app.kubernetes.io/managed-by: Helm
data:
  KRATEO_GATEWAY_DEBUG: "false"
  KRATEO_GATEWAY_PORT: "8443"
  KRATEO_GATEWAY_CACRT: /tmp/ca.crt
  KRATEO_GATEWAY_DNS_NAMES: localhost
  KRATEO_BFF_SERVER: http://krateo-bff.krateo-system.svc:8080
  KRATEO_GATEWAY_IP_ADDRESSES: 127.0.0.1
  KRATEO_GATEWAY_DUMP_ENV: "false"
---
# Source: krateo-gateway/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-krateo-gateway
  labels:
    helm.sh/chart: krateo-gateway-0.3.15
    app.kubernetes.io/name: krateo-gateway
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.12"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  - rolebindings
  - clusterroles
  - clusterrolebindings
  verbs:
  - '*'
---
# Source: krateo-gateway/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-krateo-gateway
  labels:
    helm.sh/chart: krateo-gateway-0.3.15
    app.kubernetes.io/name: krateo-gateway
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.12"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name:  release-name-krateo-gateway
subjects:
- kind: ServiceAccount
  name: release-name-krateo-gateway
  namespace: default
---
# Source: krateo-gateway/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-krateo-gateway
  labels:
    helm.sh/chart: krateo-gateway-0.3.15
    app.kubernetes.io/name: krateo-gateway
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.12"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8443
      targetPort: https
      protocol: TCP
      name: https
  selector:
    app.kubernetes.io/name: krateo-gateway
    app.kubernetes.io/instance: release-name
---
# Source: krateo-gateway/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-krateo-gateway
  labels:
    helm.sh/chart: krateo-gateway-0.3.15
    app.kubernetes.io/name: krateo-gateway
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.12"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: krateo-gateway
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: krateo-gateway-0.3.15
        app.kubernetes.io/name: krateo-gateway
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "0.3.12"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: release-name-krateo-gateway
      securityContext:
        {}
      containers:
        - name: release-name-krateo-gateway
          envFrom:
            - configMapRef:
                name: release-name-krateo-gateway
            - secretRef:
                name: release-name-krateo-gateway
          securityContext:
            {}
          image: "ghcr.io/krateoplatformops/krateo-gateway:0.3.12"
          imagePullPolicy: IfNotPresent
          ports:
            - name: https
              containerPort: 8443
              protocol: TCP
          livenessProbe:
            null
          readinessProbe:
            null
          resources:
            {}
