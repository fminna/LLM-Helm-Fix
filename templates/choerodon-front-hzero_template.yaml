---
# Source: choerodon-front-hzero/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-choerodon-front-hzero
  namespace: default
  labels:
    app.kubernetes.io/name: choerodon-front-hzero
    helm.sh/chart: choerodon-front-hzero-2.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  
  ports:
    - name: server
      port: 8080
      targetPort: server
      nodePort: null
  selector:
    app.kubernetes.io/name: choerodon-front-hzero
    app.kubernetes.io/instance: release-name
---
# Source: choerodon-front-hzero/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-choerodon-front-hzero
  namespace: default
  labels:
    app.kubernetes.io/name: choerodon-front-hzero
    helm.sh/chart: choerodon-front-hzero-2.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: choerodon-front-hzero
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: choerodon-front-hzero
        helm.sh/chart: choerodon-front-hzero-2.0.0
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
    spec:
      
      enableServiceLinks: false
      automountServiceAccountToken: false
      serviceAccountName: default
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: choerodon-front-hzero
                    app.kubernetes.io/instance: release-name
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 101
      initContainers:
        - name: server-volume
          image:  registry.cn-shanghai.aliyuncs.com/c7n/choerodon-front-hzero:2.0.0
          imagePullPolicy: "IfNotPresent"
          command:
            - /bin/sh
            - -ecx
            - |
              cp -rfp /entrypoint.sh /opt/choerodon
              cp -rfp /usr/share/nginx/html /opt/choerodon
              cp -rfp /etc/nginx/conf.d/default.conf /opt/choerodon
          securityContext:
            runAsUser: 101
          volumeMounts:
            - name: volume
              mountPath: /opt/choerodon
      containers:
        - name: "choerodon-front-hzero"
          image: registry.cn-shanghai.aliyuncs.com/c7n/frontbase:0.10.0
          imagePullPolicy: "IfNotPresent"
          workingDir: /usr/share/nginx/html
          securityContext:
            runAsUser: 101
          command: 
          - /bin/sh
          - -ecx
          - |
            /entrypoint.sh
            nginx -g "daemon off;"
          env:
            
            - name: "BUILD_API_HOST"
              value: "http://backend.hzero.org"
            - name: "BUILD_BASE_PATH"
              value: "/"
            - name: "BUILD_BPM_HOST"
              value: "http://bpm.hzero.org"
            - name: "BUILD_CLIENT_ID"
              value: "localhost"
            - name: "BUILD_CUSTOMIZE_ICON_NAME"
              value: "icon-font"
            - name: "BUILD_PLATFORM_VERSION"
              value: "SAAS"
            - name: "BUILD_PUBLIC_URL"
              value: "/"
            - name: "BUILD_TOP_MENU_LABELS"
              value: "HZERO_MENU"
            - name: "BUILD_TOP_MENU_UNION_LABEL"
              value: "true"
            - name: "BUILD_WEBSOCKET_HOST"
              value: "ws://ws.hzero.org"
            - name: "CUSTOMIZE_ICON_NAME"
              value: "BUILD_CUSTOMIZE_ICON_NAME"
            - name: "IM_ENABLE"
              value: "BUILD_IM_ENABLE"
            - name: "IM_WEBSOCKET_HOST"
              value: "BUILD_IM_WEBSOCKET_HOST"
            - name: "PUPPETEER_SKIP_CHROMIUM_DOWNLOAD"
              value: "true"
            - name: "TOP_MENU_LABELS"
              value: "HZERO_MENU"
            - name: "TOP_MENU_UNION_LABEL"
              value: "true"
            - name: "TRACE_LOG_ENABLE"
              value: "BUILD_TRACE_LOG_ENABLE"
          envFrom:
          ports:
            - name: server
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: server
            initialDelaySeconds: 60
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            tcpSocket:
              port: server
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 5
          resources:
            limits:
              memory: 128Mi
            requests:
              memory: 128Mi
          volumeMounts:
            - name: volume
              mountPath: /usr/share/nginx/html
              subPath: html
            - name: volume
              mountPath: /entrypoint.sh
              subPath: entrypoint.sh
            - name: volume
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
      volumes:
        - name: volume
          emptyDir: {}
