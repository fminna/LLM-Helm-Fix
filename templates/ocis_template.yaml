---
# Source: ocis/templates/configmap-configfiles.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-ocis-configfiles
  labels:
    helm.sh/chart: ocis-0.0.9
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.20.0"
    app.kubernetes.io/managed-by: Helm
data:
  # indentifier_registration.yaml - used by IDP to register the oidc clients
  identifier_registration.yaml: |-
      clients:
        - id: swan
          secret: 4a045535-6b99-49d3-bf41-8b410cd965a6
          name: SWAN
          application_type: native
        - id: web
          name: ownCloud web app
          trusted: yes
          redirect_uris:
            - https://https://ocis-idp.local/
            - https://https://ocis-idp.local//oidc-callback.html
            - https://https://ocis-idp.local//oidc-silent-redirect.html
          origins:
            - https://https://ocis-idp.local/
  # proxy.yaml - routing configuration for ocis proxy
  proxy.yaml:  |-
    policies:  
    - name: ocis
      routes:
      - type: ""
        endpoint: /
        backend: http://release-name-cernbox-web
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /.well-known/
        backend: http://localhost:9130
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /konnect/
        backend: http://localhost:9130
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /signin/
        backend: http://localhost:9130
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /archiver # gateway
        backend: http://localhost:9140
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /ocs/
        backend: http://release-name-gateway:9143
        service: ""
        apache-vhost: false
      - type: query
        endpoint: /remote.php/?preview=1 # gateway
        backend: http://release-name-gateway:9143
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /remote.php/ # gateway
        backend: http://release-name-gateway:9143
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /dav/ # gateway
        backend: http://release-name-gateway:9143
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /webdav/ # gateway
        backend: http://release-name-gateway:9143 
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /status.php # gateway
        backend: http://release-name-gateway:9143
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /index.php/
        backend: http://release-name-gateway:9143
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /apps/
        backend: http://release-name-gateway:9143
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /data
        backend: http://localhost:9140
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /app/
        backend: http://localhost:9140
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /graph/
        backend: http://localhost:9120
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /graph-explorer
        backend: http://localhost:9135
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /api/v0/accounts
        backend: http://localhost:9181
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /accounts.js
        backend: http://localhost:9181
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /api/v0/settings
        backend: http://localhost:9190
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /settings.js
        backend: http://localhost:9190
        service: ""
        apache-vhost: false
      ingress:
        enabled: true
        hosts:
        exposeIdp: true
---
# Source: ocis/templates/configmap-supervisord.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-ocis-supervisord-conf
  labels:
    helm.sh/chart: ocis-0.0.9
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.20.0"
    app.kubernetes.io/managed-by: Helm
data:
  supervisord.conf: |
    ; Directives for supervisord
    [supervisord]
    ;logfile=/var/log/supervisor/supervisord.log ; (main log file;default $CWD/supervisord.log)
    ;logfile_maxbytes=50MB                       ; (max main logfile bytes b4 rotation;default 50MB)
    ;logfile_backups=10                          ; (num of main logfile rotation backups;default 10)
    loglevel=info                                ; (log level;default info; others: debug,warn,trace)
    pidfile=/var/run/supervisord.pid             ; (supervisord pidfile;default supervisord.pid)
    nodaemon=true                                ; (start in foreground if true;default false)
    minfds=1024                                  ; (min. avail startup file descriptors;default 1024)
    minprocs=200                                 ; (min. avail process descriptors;default 200)
    ;umask=022                                   ; (process file creation umask;default 022)
    user=root                                    ; (default is current user, required if root)
    ;identifier=supervisor                       ; (supervisord identifier, default is 'supervisor')
    ;directory=/tmp                              ; (default is not to cd during start)
    ;nocleanup=true                              ; (don't clean up tempfiles at start;default false)
    ;childlogdir=/tmp                            ; ('AUTO' child log dir, default $TEMP)
    ;environment=KEY=value                       ; (key value pairs to add to environment)
    ;strip_ansi=false                            ; (strip ansi escape codes in logs; def. false)

    ; Allow using supervisorctl to interact with supervisord
    [unix_http_server]
    file=/var/run/supervisor.sock                ; (the path to the socket file)
    ;chmod=0700                                  ; sockef file mode (default 0700)
    ;chown=nobody:nogroup                        ; socket file uid:gid owner
    username=admin                               ; (default is no username (open server))
    password=admin                               ; (default is no password (open server))
    [rpcinterface:supervisor]
    supervisor.rpcinterface_factory=supervisor.rpcinterface:make_main_rpcinterface
    [supervisorctl]
    serverurl=unix:///var/run/supervisor.sock    ; use a unix:// URL  for a unix socket
    username=admin                               ; should be same as http_username if set
    password=admin                               ; should be same as http_password if set
    ;prompt=mysupervisor                         ; cmd line prompt (default "supervisor")
    ;history_file=~/.sc_history                  ; use readline history if available

    ; Load additional configuration files
    [include]
    files = /etc/supervisord.d/*.ini

    ; Quit supervisord if all controlled processes enter a failed state
    [eventlistener:watch_processes]
    command=sh -c "printf 'READY\n' && while read line; do kill -SIGQUIT $PPID; done < /dev/stdin"
    events=PROCESS_STATE_EXITED,PROCESS_STATE_FATAL
---
# Source: ocis/templates/configmap-supervisord.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-ocis-supervisord-procs
  labels:
    helm.sh/chart: ocis-0.0.9
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.20.0"
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: ocis/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-ocis
  labels:
    helm.sh/chart: ocis-0.0.9
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.20.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9130
      targetPort: 9130
      protocol: TCP
      name: idp
    - port: 443
      targetPort: 9200
      protocol: TCP
      name: proxy
  selector:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: release-name
---
# Source: ocis/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-ocis
  labels:
    helm.sh/chart: ocis-0.0.9
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.20.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ocis
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: release-name
    spec:
      containers:
        - name: ocis
          image: "gitlab-registry.cern.ch/sciencebox/docker-images/ocis:1.20.0"
          imagePullPolicy: Always
          command: ["/usr/bin/supervisord", "-c", "/etc/supervisord.conf"]
          volumeMounts:
            - name: ocis-configfiles
              mountPath: /etc/ocis/
            - name: ocis-supervisord-conf
              mountPath: /etc/supervisord.conf
              subPath: supervisord.conf
            - name: ocis-supervisord-procs
              mountPath: /etc/supervisord.d
            - name: ocis-data
              mountPath: "/var/tmp"
              subPath: ""
          env:
          resources:
            {}
      volumes:
        - name: ocis-configfiles
          configMap:
            name: release-name-ocis-configfiles
            defaultMode: 0777
        - name: ocis-supervisord-conf
          configMap:
            name: release-name-ocis-supervisord-conf
        - name: ocis-supervisord-procs
          configMap:
            name: release-name-ocis-supervisord-procs
        - name: ocis-data
          emptyDir:
            {}
---
# Source: ocis/templates/ingress.yaml
---
