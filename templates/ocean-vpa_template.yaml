---
# Source: ocean-vpa/templates/vpa-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-ocean-vpa-admission-controller
  labels:
    helm.sh/chart: ocean-vpa-1.0.0
    app.kubernetes.io/name: ocean-vpa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: admission-controller
---
# Source: ocean-vpa/templates/vpa-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-ocean-vpa-updater
  labels:
    helm.sh/chart: ocean-vpa-1.0.0
    app.kubernetes.io/name: ocean-vpa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: updater
---
# Source: ocean-vpa/templates/vpa-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:vpa-actor
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - nodes
      - limitranges
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - get
      - list
      - watch
      - create
  - apiGroups:
      - "poc.autoscaling.k8s.io"
    resources:
      - verticalpodautoscalers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "autoscaling.k8s.io"
    resources:
      - verticalpodautoscalers
    verbs:
      - get
      - list
      - watch
---
# Source: ocean-vpa/templates/vpa-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:evictioner
rules:
  - apiGroups:
      - "apps"
      - "extensions"
    resources:
      - replicasets
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - pods/eviction
    verbs:
      - create
---
# Source: ocean-vpa/templates/vpa-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:vpa-target-reader
rules:
  - apiGroups:
      - '*'
    resources:
      - '*/scale'
    verbs:
      - get
      - watch
  - apiGroups:
      - ""
    resources:
      - replicationcontrollers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - replicasets
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
      - cronjobs
    verbs:
      - get
      - list
      - watch
---
# Source: ocean-vpa/templates/vpa-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:vpa-admission-controller
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - configmaps
      - nodes
      - limitranges
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "admissionregistration.k8s.io"
    resources:
      - mutatingwebhookconfigurations
    verbs:
      - create
      - delete
      - get
      - list
  - apiGroups:
      - "poc.autoscaling.k8s.io"
    resources:
      - verticalpodautoscalers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "autoscaling.k8s.io"
    resources:
      - verticalpodautoscalers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "coordination.k8s.io"
    resources:
      - leases
    verbs:
      - create
      - update
      - get
      - list
      - watch
---
# Source: ocean-vpa/templates/vpa-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:vpa-status-reader
rules:
  - apiGroups:
      - "coordination.k8s.io"
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
---
# Source: ocean-vpa/templates/vpa-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vpa-status-reader-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:vpa-status-reader
subjects:
  - kind: ServiceAccount
    name: release-name-ocean-vpa-updater
    namespace: default
---
# Source: ocean-vpa/templates/vpa-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:vpa-actor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:vpa-actor
subjects:
  - kind: ServiceAccount
    name: release-name-ocean-vpa-updater
    namespace: default
---
# Source: ocean-vpa/templates/vpa-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:vpa-evictioner-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:evictioner
subjects:
  - kind: ServiceAccount
    name: release-name-ocean-vpa-updater
    namespace: default
---
# Source: ocean-vpa/templates/vpa-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:vpa-target-reader-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:vpa-target-reader
subjects:
  - kind: ServiceAccount
    name: release-name-ocean-vpa-admission-controller
    namespace: default
  - kind: ServiceAccount
    name: release-name-ocean-vpa-updater
    namespace: default
---
# Source: ocean-vpa/templates/vpa-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:vpa-admission-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:vpa-admission-controller
subjects:
  - kind: ServiceAccount
    name: release-name-ocean-vpa-admission-controller
    namespace: default
---
# Source: ocean-vpa/templates/vpa-admission-controller-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-ocean-vpa-webhook
spec:
  ports:
    - port: 443
      targetPort: 8000
  selector:
    app.kubernetes.io/component: admission-controller
    app.kubernetes.io/name: ocean-vpa
    app.kubernetes.io/instance: release-name
---
# Source: ocean-vpa/templates/vpa-admission-controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-ocean-vpa-admission-controller
  labels:
    app.kubernetes.io/component: admission-controller
    helm.sh/chart: ocean-vpa-1.0.0
    app.kubernetes.io/name: ocean-vpa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: admission-controller
      app.kubernetes.io/name: ocean-vpa
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/component: admission-controller
        app.kubernetes.io/name: ocean-vpa
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-ocean-vpa-admission-controller
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: ocean-vpa
          securityContext:
            null
          image: registry.k8s.io/autoscaling/vpa-admission-controller:1.0.0
          imagePullPolicy: Always
          args:
          - --register-webhook=false
          - --webhook-service=release-name-ocean-vpa-webhook
          - --client-ca-file=/etc/tls-certs/ca
          - --tls-cert-file=/etc/tls-certs/cert
          - --tls-private-key=/etc/tls-certs/key
          volumeMounts:
            - name: tls-certs
              mountPath: "/etc/tls-certs"
              readOnly: true
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            limits: {}
            requests:
              cpu: 50m
              memory: 200Mi
      volumes:
        - name: tls-certs
          secret:
            secretName: release-name-ocean-vpa-tls-secret
---
# Source: ocean-vpa/templates/vpa-updater-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-ocean-vpa-updater
  labels:
    app.kubernetes.io/component: updater
    helm.sh/chart: ocean-vpa-1.0.0
    app.kubernetes.io/name: ocean-vpa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: updater
      app.kubernetes.io/name: ocean-vpa
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/component: updater
        app.kubernetes.io/name: ocean-vpa
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-ocean-vpa-updater
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: ocean-vpa
          securityContext:
            null
          image: registry.k8s.io/autoscaling/vpa-updater:1.0.0
          imagePullPolicy: Always
          args:
            - --eviction-tolerance=0.25
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            limits: {}
            requests:
              cpu: 50m
              memory: 500Mi
---
# Source: ocean-vpa/templates/vpa-webhooks_mutating.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: release-name-ocean-vpa-webhook-config
  labels:
    app.kubernetes.io/component: admission-controller
    helm.sh/chart: ocean-vpa-1.0.0
    app.kubernetes.io/name: ocean-vpa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: release-name-ocean-vpa-webhook
      namespace: default
      port: 443
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: vpa.k8s.io
  reinvocationPolicy: Never
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
    scope: '*'
  sideEffects: None
  timeoutSeconds: 30
---
# Source: ocean-vpa/templates/vpa-webhooks_jobs_certgen-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-ocean-vpa-admission-certgen
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-110"
  labels:
    app.kubernetes.io/component: admission-certgen
---
# Source: ocean-vpa/templates/vpa-webhooks_jobs_certgen-sa_delete_secret.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-ocean-vpa-secret-delete
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-110"
  labels:
    app.kubernetes.io/component: admission-certgen
---
# Source: ocean-vpa/templates/vpa-webhooks_jobs_certgen-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-ocean-vpa-admission-certgen
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-110"
  labels:
    app.kubernetes.io/component: admission-certgen
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
    verbs:
      - get
      - update
---
# Source: ocean-vpa/templates/vpa-webhooks_jobs_certgen-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-ocean-vpa-admission-certgen
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-110"
  labels:
    app.kubernetes.io/component: admission-certgen
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-ocean-vpa-admission-certgen
subjects:
  - kind: ServiceAccount
    name: release-name-ocean-vpa-admission-certgen
    namespace: default
---
# Source: ocean-vpa/templates/vpa-webhooks_jobs_certgen-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name:  release-name-ocean-vpa-admission-certgen
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-110"
  labels:
    app.kubernetes.io/component: admission-certgen
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - create
---
# Source: ocean-vpa/templates/vpa-webhooks_jobs_certgen-role_delete_secret.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name:  release-name-ocean-vpa-secret-delete
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-110"
  labels:
    app.kubernetes.io/component: admission-certgen
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - delete
---
# Source: ocean-vpa/templates/vpa-webhooks_jobs_certgen-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name:  release-name-ocean-vpa-admission-certgen
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-110"
  labels:
    app.kubernetes.io/component: admission-certgen
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-ocean-vpa-admission-certgen
subjects:
  - kind: ServiceAccount
    name: release-name-ocean-vpa-admission-certgen
    namespace: default
---
# Source: ocean-vpa/templates/vpa-webhooks_jobs_certgen-rolebinding_delete_secret.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name:  release-name-ocean-vpa-admission-certgen-secret-delete
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-110"
  labels:
    app.kubernetes.io/component: admission-certgen
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-ocean-vpa-secret-delete
subjects:
  - kind: ServiceAccount
    name: release-name-ocean-vpa-secret-delete
    namespace: default
---
# Source: ocean-vpa/templates/vpa-webhooks_jobs_certgen-create.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name:  release-name-ocean-vpa-admission-certgen
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-110"
  labels:
    app.kubernetes.io/component: certgen
    helm.sh/chart: ocean-vpa-1.0.0
    app.kubernetes.io/name: ocean-vpa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ttlSecondsAfterFinished: 300
  template:
    metadata:
      name: release-name-ocean-vpa-admission-certgen
      labels:
        app.kubernetes.io/component: admission-certgen
        helm.sh/chart: ocean-vpa-1.0.0
        app.kubernetes.io/name: ocean-vpa
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      restartPolicy: OnFailure
      serviceAccountName: release-name-ocean-vpa-admission-certgen
      containers:
        - name: create
          image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.4.1
          args:
            - create
            - --host=release-name-ocean-vpa-webhook,release-name-ocean-vpa-webhook.default.svc
            - --namespace=default
            - --secret-name=release-name-ocean-vpa-tls-secret
          resources:
            {}
---
# Source: ocean-vpa/templates/vpa-webhooks_jobs_certgen-patch.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name:  release-name-ocean-vpa-admission-certgen-patch
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/component: admission-certgen
    helm.sh/chart: ocean-vpa-1.0.0
    app.kubernetes.io/name: ocean-vpa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ttlSecondsAfterFinished: 300
  template:
    metadata:
      name: release-name-ocean-vpa-admission-certgen-patch
      labels:
        app.kubernetes.io/component: admission-certgen
        helm.sh/chart: ocean-vpa-1.0.0
        app.kubernetes.io/name: ocean-vpa
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      restartPolicy: OnFailure
      serviceAccountName: release-name-ocean-vpa-admission-certgen
      containers:
        - name: patch
          image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.4.1
          args:
            - patch
            - --webhook-name=release-name-ocean-vpa-webhook-config
            - --namespace=default
            - --secret-name=release-name-ocean-vpa-tls-secret
            - --patch-validating=false
            - --log-level=debug
          resources:
            {}
---
# Source: ocean-vpa/templates/vpa-webhooks_jobs_secret-delete.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name:  release-name-ocean-vpa-secret-delete
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    helm.sh/chart: ocean-vpa-1.0.0
    app.kubernetes.io/name: ocean-vpa
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ttlSecondsAfterFinished: 300
  template:
    metadata:
      name: release-name-ocean-vpa-secret-delete
      labels:
        helm.sh/chart: ocean-vpa-1.0.0
        app.kubernetes.io/name: ocean-vpa
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      restartPolicy: OnFailure
      serviceAccountName: release-name-ocean-vpa-secret-delete
      containers:
        - name: secret-delete
          image: bitnami/kubectl:latest
          command: ["bin/bash", "-c", kubectl delete secret release-name-ocean-vpa-tls-secret -n default]
          resources:
            {}
