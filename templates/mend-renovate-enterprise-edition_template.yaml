---
# Source: mend-renovate-enterprise-edition/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mend-renovate-license
  labels:
    app.kubernetes.io/name: release-name
    helm.sh/chart: mend-renovate-enterprise-edition-1.2.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: mend-renovate-enterprise-edition/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mend-renovate-server
  labels:
    app.kubernetes.io/name: release-name
    helm.sh/chart: mend-renovate-enterprise-edition-1.2.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  mendRnvServerApiSecret: "YWJjMTIz"
---
# Source: mend-renovate-enterprise-edition/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mend-renovate-worker
  labels:
    app.kubernetes.io/name: release-name
    helm.sh/chart: mend-renovate-enterprise-edition-1.2.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: mend-renovate-enterprise-edition/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-config-js
  namespace: default
  labels:
    app.kubernetes.io/name: release-name
    helm.sh/chart: mend-renovate-enterprise-edition-1.2.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  config.js: "module.exports = {\n  // Enter self-hosted configuration options here.\n  // https://docs.renovatebot.com/self-hosted-configuration/\n}\n"
---
# Source: mend-renovate-enterprise-edition/templates/server-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mend-renovate-svc-server
  namespace: default
  labels:
    app.kubernetes.io/name: mend-renovate
    helm.sh/chart: mend-renovate-enterprise-edition-1.2.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: ee-server
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: mend-renovate
    app.kubernetes.io/instance: release-name
    app: mend-renovate-server
---
# Source: mend-renovate-enterprise-edition/templates/server-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mend-renovate-server
  namespace: default
  labels:
    app.kubernetes.io/name: mend-renovate
    helm.sh/chart: mend-renovate-enterprise-edition-1.2.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mend-renovate
      app.kubernetes.io/instance: release-name
      app: mend-renovate-server
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mend-renovate
        app.kubernetes.io/instance: release-name
        app: mend-renovate-server
    spec:
      terminationGracePeriodSeconds: 60
      containers:
        - name: mend-renovate-enterprise-edition-server
          image: "ghcr.io/mend/renovate-ee-server:7.0.1"
          imagePullPolicy: IfNotPresent
          env:
            # GitLab
            # GitHub
            # BitBucket
            # PostgrSQL database
            - name: MEND_RNV_SQLITE_FILE_PATH
              value: "/database/renovate-ee.sqlite"
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FORMAT
              value: "json"
            - name: MEND_RNV_SERVER_API_SECRET
              valueFrom:
                secretKeyRef:
                  name: mend-renovate-server
                  key: mendRnvServerApiSecret
          ports:
            - name: ee-server
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: ee-server
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: ee-server
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            {}
          volumeMounts:
            - name: release-name-database-volume
              mountPath: /database
      volumes:
        - name: release-name-database-volume
          emptyDir: {}
---
# Source: mend-renovate-enterprise-edition/templates/worker-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mend-renovate-worker
  namespace: default
  labels:
    app.kubernetes.io/name: mend-renovate
    helm.sh/chart: mend-renovate-enterprise-edition-1.2.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mend-renovate
      app.kubernetes.io/instance: release-name
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mend-renovate
        app.kubernetes.io/instance: release-name
    spec:
      terminationGracePeriodSeconds: 60
      containers:
        - name: mend-renovate-enterprise-edition-worker
          image: "ghcr.io/mend/renovate-ee-worker:7.0.1-full"
          imagePullPolicy: IfNotPresent
          env:
            - name: MEND_RNV_SERVER_HOSTNAME
              value: "http://mend-renovate-svc-server"
            - name: MEND_RNV_SERVER_API_SECRET
              valueFrom:
                secretKeyRef:
                  name: mend-renovate-server
                  key: mendRnvServerApiSecret
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FORMAT
              value: "json"
          resources:
            {}
          volumeMounts:
            - name: release-name-config-js-volume
              mountPath: /usr/src/app/config.js
              subPath: config.js
            - name: release-name-cache-volume
              mountPath: /tmp/renovate
      volumes:
        - name: release-name-config-js-volume
          configMap:
            name: release-name-config-js
        - name: release-name-cache-volume
          emptyDir: { }
