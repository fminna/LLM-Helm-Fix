---
# Source: cert-manager-configs/templates/AwsSecret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: "aws-secret-access-key-secret"
  namespace: cert-manager
type: Opaque
data:
  aws-secret-access-key: ""
---
# Source: cert-manager-configs/templates/CABundle.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: letsencrypt-ca
  namespace: openshift-config
data:
  ca-bundle.crt:   |
    -----BEGIN CERTIFICATE-----
    <data>
    -----END CERTIFICATE-----
---
# Source: cert-manager-configs/templates/Certificate.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: api-letsencrypt-cert
  namespace: openshift-config
spec:
  secretName: api-letsencrypt-cert
  issuerRef:
    name: letsencrypt-staging
    kind: ClusterIssuer
  dnsNames: 
    - api.example.com
---
# Source: cert-manager-configs/templates/Certificate.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: ingress-letsencrypt-cert
  namespace: openshift-ingress
spec:
  secretName: ingress-letsencrypt-cert
  issuerRef:
    name: letsencrypt-staging
    kind: ClusterIssuer
  dnsNames: 
    - '*.apps.example.com'
---
# Source: cert-manager-configs/templates/ClusterIssuer.yaml
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: "letsencrypt-staging"
spec:
  acme:
    email: admin@example.com
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt-account-private-key
    solvers:
      - selector:
          dnsZones:
            - subdomain.example.com
        dns01:
          route53:
            region: us-east-1
            accessKeyID: 
            secretAccessKeySecretRef:
              name: "aws-secret-access-key-secret"
              key: "aws-secret-access-key"
