---
# Source: housekeeper/charts/mysql/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-mysql
  labels:
    helm.sh/chart: mysql-1.0.0
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: housekeeper/charts/rabbitmq/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: rabbitmq
    chart: rabbitmq-1.0.0
    release: "release-name"
    heritage: "Helm"
  name: release-name-rabbitmq
  namespace: default
automountServiceAccountToken: true
---
# Source: housekeeper/charts/rabbitmq/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-rabbitmq
  namespace: default
  labels:
    app: rabbitmq
    chart: rabbitmq-1.0.0
    release: "release-name"
    heritage: "Helm"
type: Opaque
data:
  rabbitmq-username: "Z3Vlc3Q="
  rabbitmq-password: "N251WWxuWGQzbUJ0RE9sWUNsYkt5Smhn"
  rabbitmq-management-username: "bWFuYWdlbWVudA=="
  rabbitmq-management-password: "R2FDOWxPeGVKMGk4VUl3Z2N5RWo1a1hk"
  rabbitmq-erlang-cookie: "N3J1NnVuelladGRuWVYwUUdwQmp0NkcwVzcwQXI4a1g="
  definitions.json: "ew0KICAiZ2xvYmFsX3BhcmFtZXRlcnMiOiBbDQogICAgDQogIF0sDQogICJ1c2VycyI6IFsNCiAgICB7DQogICAgICAibmFtZSI6ICJtYW5hZ2VtZW50IiwNCiAgICAgICJwYXNzd29yZCI6ICJHYUM5bE94ZUowaThVSXdnY3lFajVrWGQiLA0KICAgICAgInRhZ3MiOiAibWFuYWdlbWVudCINCiAgICB9LA0KICAgIHsNCiAgICAgICJuYW1lIjogImd1ZXN0IiwNCiAgICAgICJwYXNzd29yZCI6ICI3bnVZbG5YZDNtQnRET2xZQ2xiS3lKaGciLA0KICAgICAgInRhZ3MiOiAiYWRtaW5pc3RyYXRvciINCiAgICB9LA0KICAgIHsKICAgICAgIm5hbWUiOiAiZ3Vlc3QiLAogICAgICAicGFzc3dvcmQiOiAiZ3Vlc3QiLAogICAgICAidGFncyI6ICJhZG1pbmlzdHJhdG9yIgogICAgfQ0KICBdLA0KICAidmhvc3RzIjogWw0KICAgIHsNCiAgICAgICJuYW1lIjogIi8iDQogICAgfSwNCiAgICB7CiAgICAgICAgICAibmFtZSI6ICJzYWFzLWhvdXNla2VlcGVyIgogICAgIH0NCiAgXSwNCiAgInBlcm1pc3Npb25zIjogWw0KICAgIHsNCiAgICAgICJ1c2VyIjogImd1ZXN0IiwNCiAgICAgICJ2aG9zdCI6ICIvIiwNCiAgICAgICJjb25maWd1cmUiOiAiLioiLA0KICAgICAgInJlYWQiOiAiLioiLA0KICAgICAgIndyaXRlIjogIi4qIg0KICAgIH0sDQogICAgewogICAgICAgICAidXNlciI6ICJndWVzdCIsCiAgICAgICAgICJ2aG9zdCI6ICJzYWFzLWhvdXNla2VlcGVyIiwKICAgICAgICAgImNvbmZpZ3VyZSI6ICIuKiIsCiAgICAgICAgICJ3cml0ZSI6ICIuKiIsCiAgICAgICAgICJyZWFkIjogIi4qIgogICAgfQ0KICBdLA0KICAidG9waWNfcGVybWlzc2lvbnMiOiBbDQogICAgDQogIF0sDQogICJwYXJhbWV0ZXJzIjogWw0KICAgIA0KICBdLA0KICAicG9saWNpZXMiOiBbDQogICAgDQogIF0sDQogICJxdWV1ZXMiOiBbDQogICAgewogICAgICAibmFtZSI6ICJvcmRlci50YXNrIiwKICAgICAgInZob3N0IjogInNhYXMtaG91c2VrZWVwZXIiLAogICAgICAiZHVyYWJsZSI6IHRydWUsCiAgICAgICJhdXRvX2RlbGV0ZSI6IGZhbHNlLAogICAgICAiYXJndW1lbnRzIjoge30KICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogInRhc2sub3JkZXIiLAogICAgICAidmhvc3QiOiAic2Fhcy1ob3VzZWtlZXBlciIsCiAgICAgICJkdXJhYmxlIjogdHJ1ZSwKICAgICAgImF1dG9fZGVsZXRlIjogZmFsc2UsCiAgICAgICJhcmd1bWVudHMiOiB7fQogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAibWVzc2FnZS5xdWV1ZSIsCiAgICAgICJ2aG9zdCI6ICJzYWFzLWhvdXNla2VlcGVyIiwKICAgICAgImR1cmFibGUiOiB0cnVlLAogICAgICAiYXV0b19kZWxldGUiOiBmYWxzZSwKICAgICAgImFyZ3VtZW50cyI6IHt9CiAgICB9DQogIF0sDQogICJleGNoYW5nZXMiOiBbDQogICAgewogICAgICAibmFtZSI6ICJhbXEudG9waWMiLAogICAgICAidmhvc3QiOiAic2Fhcy1ob3VzZWtlZXBlciIsCiAgICAgICJ0eXBlIjogImZhbm91dCIsCiAgICAgICJkdXJhYmxlIjogdHJ1ZSwKICAgICAgImF1dG9fZGVsZXRlIjogZmFsc2UsCiAgICAgICJpbnRlcm5hbCI6IGZhbHNlLAogICAgICAiYXJndW1lbnRzIjoge30KICAgIH0NCiAgXSwNCiAgImJpbmRpbmdzIjogWw0KICAgIHsKICAgICAgInNvdXJjZSI6ICJhbXEudG9waWMiLAogICAgICAidmhvc3QiOiAic2Fhcy1ob3VzZWtlZXBlciIsCiAgICAgICJkZXN0aW5hdGlvbiI6ICJvcmRlci50YXNrIiwKICAgICAgImRlc3RpbmF0aW9uX3R5cGUiOiAicXVldWUiLAogICAgICAicm91dGluZ19rZXkiOiAidGFzay5vcmRlci5uZXdPcmRlciIsCiAgICAgICJhcmd1bWVudHMiOiB7fQogICAgfSwKICAgIHsKICAgICAgInNvdXJjZSI6ICJhbXEudG9waWMiLAogICAgICAidmhvc3QiOiAic2Fhcy1ob3VzZWtlZXBlciIsCiAgICAgICJkZXN0aW5hdGlvbiI6ICJ0YXNrLm9yZGVyIiwKICAgICAgImRlc3RpbmF0aW9uX3R5cGUiOiAicXVldWUiLAogICAgICAicm91dGluZ19rZXkiOiAib3JkZXIudGFzay5kb1Rhc2siLAogICAgICAiYXJndW1lbnRzIjoge30KICAgIH0sCiAgICB7CiAgICAgICJzb3VyY2UiOiAiYW1xLnRvcGljIiwKICAgICAgInZob3N0IjogInNhYXMtaG91c2VrZWVwZXIiLAogICAgICAiZGVzdGluYXRpb24iOiAibWVzc2FnZS5xdWV1ZSIsCiAgICAgICJkZXN0aW5hdGlvbl90eXBlIjogInF1ZXVlIiwKICAgICAgInJvdXRpbmdfa2V5IjogIm1lc3NhZ2UuIyIsCiAgICAgICJhcmd1bWVudHMiOiB7fQogICAgfQ0KICBdDQp9"
---
# Source: housekeeper/templates/secret.yaml
apiVersion: v1
kind: Secret
data:
  giteePassword: dG9tb3Jyb3cwLjA=
  giteeUser: emFjaGFyeXkyMDIzQG91dGxvb2suY29t
  mysql.username: cm9vdA==
  mysql.password: MTIzNA==
  MYSQL_ROOT_PASSWORD: MTIzNA==
  rabbitmq.password: Z3Vlc3Q=
  rabbitmq.username: Z3Vlc3Q=
metadata:
  annotations:
    description: ''
  name: config
  namespace: default
  labels: {}
type: Opaque
---
# Source: housekeeper/charts/mysql/templates/configuration-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: init-configuration
  labels:
    app.kubernetes.io/component: mysql
data:
  mysql.cnf: |-
    [client]
    default-character-set=utf8
    [mysql]
    default-character-set=utf8
    [mysqld]
    collation-server = utf8_unicode_ci
    init-connect='SET NAMES utf8'
    character-set-server = utf8
    pid-file        = /var/run/mysqld/mysqld.pid
    socket          = /var/run/mysqld/mysqld.sock
    datadir         = /var/lib/mysql
    #log-error      = /var/log/mysql/error.log
    # By default we only accept connections from localhost
    #bind-address   = 127.0.0.1
    # Disabling symbolic-links is recommended to prevent assorted security risks
    symbolic-links=0
    #如果你的sql语句里有group，添加这句可以防止报错 
    sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES
---
# Source: housekeeper/charts/mysql/templates/init-script-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
  labels:
    app.kubernetes.io/component: mysql
data:
  initdb.sql: |
    --
    -- 创建配置数据库
    --
    DROP
    database IF EXISTS `config-jdbc`;

    create database `config-jdbc`;

    DROP TABLE IF EXISTS `config-jdbc`.`properties`;

    --
    -- Table structure for table `properties`
    --
    CREATE TABLE `config-jdbc`.`properties`
    (
        `id`          bigint                                          NOT NULL AUTO_INCREMENT,
        `key`        varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
        `value`      varchar(500) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
        `application` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
        `profile`     varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
        `label`       varchar(50) CHARACTER SET utf8 COLLATE utf8_bin  DEFAULT NULL,
        PRIMARY KEY (`id`)
    ) ENGINE=InnoDB AUTO_INCREMENT=46 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

    --
    -- 创建默认数据库
    --
    DROP
    database IF EXISTS `housekeeping`;
    create
    database `housekeeping`;

    --
    -- Table structure for table `flyway_schema_history`
    --

    DROP TABLE IF EXISTS `housekeeping`.`flyway_schema_history`;

    CREATE TABLE `housekeeping`.`flyway_schema_history`
    (
        `installed_rank` int           NOT NULL,
        `version`        varchar(50)            DEFAULT NULL,
        `description`    varchar(200)  NOT NULL,
        `type`           varchar(20)   NOT NULL,
        `script`         varchar(1000) NOT NULL,
        `checksum`       int                    DEFAULT NULL,
        `installed_by`   varchar(100)  NOT NULL,
        `installed_on`   timestamp     NOT NULL DEFAULT CURRENT_TIMESTAMP,
        `execution_time` int           NOT NULL,
        `success`        tinyint(1) NOT NULL,
        PRIMARY KEY (`installed_rank`),
        KEY              `flyway_schema_history_s_idx` (`success`)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

    --
    -- Table structure for table `message`
    --

    DROP TABLE IF EXISTS `housekeeping`.`message`;

    CREATE TABLE `housekeeping`.`message`
    (
        `id`             bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
        `user_id`        varchar(32)  DEFAULT NULL,
        `title`          varchar(255) DEFAULT NULL COMMENT '标题',
        `content`        varchar(255) DEFAULT NULL COMMENT '具体内容',
        `link`           varchar(255) DEFAULT NULL COMMENT '连接',
        `message_status` int          DEFAULT NULL COMMENT '信息状态{未读0，已读1，删除2}',
        `info_from`      varchar(255) DEFAULT NULL COMMENT '来自',
        `created_by`     varchar(32)  DEFAULT NULL COMMENT '创建人',
        `created_time`   datetime     DEFAULT NULL COMMENT '创建时间',
        `updated_by`     varchar(32)  DEFAULT NULL COMMENT '更新人',
        `updated_time`   datetime     DEFAULT NULL COMMENT '更新时间',
        PRIMARY KEY (`id`)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='消息表';

    --
    -- Table structure for table `t_customization`
    --

    DROP TABLE IF EXISTS `housekeeping`.`t_customization`;

    CREATE TABLE `housekeeping`.`t_customization`
    (
        `config_id`  bigint NOT NULL AUTO_INCREMENT COMMENT '配置ID',
        `style_flag` tinyint                                                DEFAULT NULL COMMENT '主题标识',
        `store_name` varchar(50)                                            DEFAULT NULL COMMENT '店名',
        `tenant_id`  varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '租户标识',
        PRIMARY KEY (`config_id`)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COMMENT='租户配置表';

    --
    -- Table structure for table `t_housekeeper_service`
    --

    DROP TABLE IF EXISTS `housekeeping`.`t_housekeeper_service`;

    CREATE TABLE `housekeeping`.`t_housekeeper_service`
    (
        `id`            bigint NOT NULL AUTO_INCREMENT COMMENT '服务ID',
        `service_name`  varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '服务名称',
        `service_desc`  varchar(500) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '服务描述',
        `img_src`       varchar(500)                                            DEFAULT NULL COMMENT '图片地址',
        `created_by`    varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci  DEFAULT NULL COMMENT '创建人',
        `created_time`  datetime                                                DEFAULT NULL COMMENT '创建时间',
        `updated_by`    varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci  DEFAULT NULL COMMENT '更新人',
        `updated_time`  datetime                                                DEFAULT NULL COMMENT '更新时间',
        `servie_status` varchar(1) CHARACTER SET utf8 COLLATE utf8_general_ci   DEFAULT NULL COMMENT '服务状态',
        `delete_flag`   varchar(1) CHARACTER SET utf8 COLLATE utf8_general_ci   DEFAULT '0' COMMENT '删除标志',
        `revision`      varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci  DEFAULT NULL COMMENT '乐观锁',
        `display_price` decimal(24, 6)                                          DEFAULT NULL COMMENT '服务展示价格',
        PRIMARY KEY (`id`) USING BTREE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 ROW_FORMAT=COMPACT COMMENT='服务主表';

    --
    -- Table structure for table `t_order`
    --

    DROP TABLE IF EXISTS `housekeeping`.`t_order`;

    CREATE TABLE `housekeeping`.`t_order`
    (
        `id`               int          NOT NULL AUTO_INCREMENT COMMENT '主键',
        `order_number`     varchar(255) NOT NULL COMMENT '订单号',
        `customer_id`      varchar(32)    DEFAULT NULL COMMENT '顾客ID',
        `customer_name`    varchar(32)    DEFAULT NULL COMMENT '顾客姓名',
        `customer_phone`   varchar(255)   DEFAULT NULL COMMENT '顾客电话',
        `sku_id`           int            DEFAULT NULL COMMENT '可选服务表sku_id',
        `price`            decimal(24, 6) DEFAULT NULL COMMENT '订单价格，服务中心获取',
        `appointment_time` datetime       DEFAULT NULL COMMENT '服务时间',
        `amount`           int            DEFAULT NULL COMMENT '数量',
        `remark`           varchar(255)   DEFAULT NULL COMMENT '备注',
        `service_detail`   mediumtext COMMENT '服务详情',
        `payment`          decimal(24, 6) DEFAULT NULL COMMENT '订单价格，价格乘以数量',
        `address`          varchar(255)   DEFAULT NULL COMMENT '服务地址',
        `status`           int            DEFAULT '1' COMMENT '状态，1：待接单，2：已完成，3：取消，4：进行中',
        `employee_id`      varchar(32)    DEFAULT NULL,
        `employee_name`    varchar(32)    DEFAULT NULL COMMENT '工人名称',
        `created_by`       varchar(90)    DEFAULT NULL COMMENT '创建人',
        `created_time`     datetime       DEFAULT NULL COMMENT '创建时间',
        `updated_by`       varchar(90)    DEFAULT NULL COMMENT '更新人',
        `updated_time`     datetime       DEFAULT NULL COMMENT '更新时间',
        `employee_phone`   varchar(255)   DEFAULT NULL COMMENT '工人电话',
        PRIMARY KEY (`id`)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='订单表';

    --
    -- Table structure for table `t_service_option`
    --

    DROP TABLE IF EXISTS `housekeeping`.`t_service_option`;

    CREATE TABLE `housekeeping`.`t_service_option`
    (
        `id`               bigint NOT NULL AUTO_INCREMENT COMMENT '选项ID',
        `specification_id` bigint NOT NULL COMMENT '规格ID',
        `name`             varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '选项名称',
        `created_by`       varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci  DEFAULT NULL COMMENT '创建人',
        `created_time`     datetime                                                DEFAULT NULL COMMENT '创建时间',
        `updated_by`       varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci  DEFAULT NULL COMMENT '更新人',
        `updated_time`     datetime                                                DEFAULT NULL COMMENT '更新时间',
        `revision`         varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci  DEFAULT NULL COMMENT '乐观锁',
        `delete_flag`      varchar(1) CHARACTER SET utf8 COLLATE utf8_general_ci   DEFAULT '0' COMMENT '删除标志',
        PRIMARY KEY (`id`) USING BTREE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 ROW_FORMAT=COMPACT COMMENT='规格选项表';

    --
    -- Table structure for table `t_service_selection`
    --

    DROP TABLE IF EXISTS `housekeeping`.`t_service_selection`;

    CREATE TABLE `housekeeping`.`t_service_selection`
    (
        `id`           bigint NOT NULL AUTO_INCREMENT COMMENT '选集ID',
        `option_id`    bigint                                                 DEFAULT NULL COMMENT '选项ID',
        `sku_id`       bigint                                                 DEFAULT NULL COMMENT 'SKU_ID',
        `created_by`   varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '创建人',
        `created_time` datetime                                               DEFAULT NULL COMMENT '创建时间',
        `updated_by`   varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '更新人',
        `updated_time` datetime                                               DEFAULT NULL COMMENT '更新时间',
        `revision`     varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '乐观锁',
        `delete_flag`  varchar(1) CHARACTER SET utf8 COLLATE utf8_general_ci  DEFAULT '0' COMMENT '删除标志',
        PRIMARY KEY (`id`) USING BTREE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 ROW_FORMAT=COMPACT COMMENT='选集表';

    --
    -- Table structure for table `t_service_sku`
    --

    DROP TABLE IF EXISTS `housekeeping`.`t_service_sku`;

    CREATE TABLE `housekeeping`.`t_service_sku`
    (
        `id`           int NOT NULL AUTO_INCREMENT COMMENT '可选服务ID',
        `service_id`   int                                                    DEFAULT NULL COMMENT '服务ID',
        `price`        decimal(24, 6)                                         DEFAULT NULL COMMENT '价格',
        `created_by`   varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '创建人',
        `created_time` datetime                                               DEFAULT NULL COMMENT '创建时间',
        `updated_by`   varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '更新人',
        `updated_time` datetime                                               DEFAULT NULL COMMENT '更新时间',
        `revision`     varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '乐观锁',
        `delete_flag`  varchar(1) CHARACTER SET utf8 COLLATE utf8_general_ci  DEFAULT '0' COMMENT '删除标志',
        PRIMARY KEY (`id`) USING BTREE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 ROW_FORMAT=COMPACT COMMENT='可选服务表(SKU)';

    --
    -- Table structure for table `t_service_specification`
    --

    DROP TABLE IF EXISTS `housekeeping`.`t_service_specification`;

    CREATE TABLE `housekeeping`.`t_service_specification`
    (
        `id`           bigint NOT NULL AUTO_INCREMENT COMMENT '规格ID',
        `service_id`   bigint                                                  DEFAULT NULL COMMENT '服务ID',
        `name`         varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '规格名称',
        `created_by`   varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci  DEFAULT NULL COMMENT '创建人',
        `created_time` datetime                                                DEFAULT NULL COMMENT '创建时间',
        `updated_by`   varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci  DEFAULT NULL COMMENT '更新人',
        `updated_time` datetime                                                DEFAULT NULL COMMENT '更新时间',
        `revision`     varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci  DEFAULT NULL COMMENT '乐观锁',
        `delete_flag`  varchar(1)                                              DEFAULT '0' COMMENT '删除标志',
        PRIMARY KEY (`id`) USING BTREE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 ROW_FORMAT=COMPACT COMMENT='规格表';


    --
    -- Table structure for table `t_task`
    --

    DROP TABLE IF EXISTS `housekeeping`.`t_task`;

    CREATE TABLE `housekeeping`.`t_task`
    (
        `id`               bigint NOT NULL AUTO_INCREMENT COMMENT '主键id',
        `customer_id`      varchar(36)                                            DEFAULT NULL COMMENT '顾客id;用户中心上下文',
        `order_id`         bigint                                                 DEFAULT NULL COMMENT '订单id;订单中心上下文',
        `customer_name`    varchar(255)                                           DEFAULT NULL COMMENT '顾客名称',
        `customer_phone`   varchar(255)                                           DEFAULT NULL COMMENT '电话号码',
        `appointment_time` datetime                                               DEFAULT NULL COMMENT '服务时间',
        `address`          varchar(255)                                           DEFAULT NULL COMMENT '地址',
        `service_name`     varchar(255)                                           DEFAULT NULL COMMENT '服务名称;订单中心推送',
        `service_detail`   varchar(255)                                           DEFAULT NULL COMMENT '服务细节;订单中心推送',
        `salary`           decimal(24, 6)                                         DEFAULT NULL COMMENT '佣金,可通过支付金额得出',
        `employee_name`    varchar(255)                                           DEFAULT NULL COMMENT '雇佣名称',
        `amount`           int                                                    DEFAULT NULL COMMENT '订单数量',
        `employee_id`      varchar(32)                                            DEFAULT NULL COMMENT '雇佣id',
        `task_status`      varchar(255)                                           DEFAULT NULL COMMENT '任务状态',
        `created_by`       varchar(90)                                            DEFAULT NULL COMMENT '创建人',
        `created_time`     datetime                                               DEFAULT NULL COMMENT '创建时间',
        `updated_by`       varchar(90)                                            DEFAULT NULL COMMENT '更新人',
        `updated_time`     datetime                                               DEFAULT NULL COMMENT '更新时间',
        `delete_flag`      varchar(1)                                             DEFAULT '0' COMMENT '删除标志',
        `version`          varchar(36) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '乐观锁',
        `remark`           varchar(255)                                           DEFAULT NULL COMMENT '订单备注',
        PRIMARY KEY (`id`) USING BTREE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 ROW_FORMAT=COMPACT COMMENT='任务表';

    --
    -- Table structure for table `tenant`
    --

    DROP TABLE IF EXISTS `housekeeping`.`tenant`;

    CREATE TABLE `housekeeping`.`tenant`
    (
        `id`           bigint NOT NULL AUTO_INCREMENT COMMENT '主键id',
        `NAME`         varchar(32)  DEFAULT NULL COMMENT '租户',
        `NUMBER`       varchar(255) DEFAULT NULL COMMENT '统一社会信用码',
        `PHONE`        varchar(32)  DEFAULT NULL COMMENT '租户电话',
        `EMAIL`        varchar(32)  DEFAULT NULL COMMENT '租户邮箱',
        `CONTENT`      varchar(255) DEFAULT NULL COMMENT '具体内容',
        `TAG`          varchar(32)  DEFAULT NULL COMMENT '租户标识',
        `DOMAIN`       varchar(32)  DEFAULT NULL COMMENT '租户域名',
        `STATUS`       int          DEFAULT NULL COMMENT '租户状态{申请中，活跃，停业}',
        `CREATED_BY`   varchar(32)  DEFAULT NULL COMMENT '创建人',
        `CREATED_TIME` datetime     DEFAULT NULL COMMENT '创建时间',
        `UPDATED_BY`   varchar(32)  DEFAULT NULL COMMENT '更新人',
        `UPDATED_TIME` datetime     DEFAULT NULL COMMENT '更新时间',
        `tenant_id`    varchar(32)  DEFAULT NULL COMMENT '租户id',
        PRIMARY KEY (`id`)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='租户表';

    --
    -- Table structure for table `user`
    --

    DROP TABLE IF EXISTS `housekeeping`.`user`;

    CREATE TABLE `housekeeping`.`user`
    (
        `id`              int                                                         NOT NULL AUTO_INCREMENT,
        `user_id`         varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci         DEFAULT NULL,
        `USER_NAME`       varchar(255)                                                         DEFAULT NULL,
        `PASSWORD`        varchar(255)                                                         DEFAULT NULL,
        `USER_ROLE`       int                                                                  DEFAULT NULL,
        `DEFAULT_ADDRESS` varchar(255)                                                         DEFAULT NULL,
        `PHONE_NO`        varchar(255)                                                         DEFAULT NULL,
        `CREATED_BY`      varchar(32)                                                          DEFAULT NULL COMMENT '创建人',
        `CREATED_TIME`    datetime                                                             DEFAULT NULL COMMENT '创建时间',
        `UPDATED_BY`      varchar(32)                                                          DEFAULT NULL COMMENT '更新人',
        `UPDATED_TIME`    datetime                                                             DEFAULT NULL COMMENT '更新时间',
        `EMAIL`           varchar(100) CHARACTER SET utf16 COLLATE utf16_general_ci            DEFAULT NULL COMMENT '???',
        `ID_CARD`         varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci        DEFAULT NULL,
        `ACCOUNT_TYPE`    smallint                                                    NOT NULL DEFAULT '1',
        `delete_flag`     varchar(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT '0',
        PRIMARY KEY (`id`, `delete_flag`) USING BTREE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='用户表';

    --
    -- 创建默认迁移的数据库
    --
    DROP
    database IF EXISTS `saas-housekeeper-flyway`;
    create
    database `saas-housekeeper-flyway`;


    DROP
    database IF EXISTS `housekeeperdb`;

    create database `housekeeperdb`;


    -- housekeeperdb.flyway_schema_history definition

    CREATE TABLE `housekeeperdb`.`flyway_schema_history` (
                                                             `installed_rank` int NOT NULL,
                                                             `version` varchar(50) DEFAULT NULL,
                                                             `description` varchar(200) NOT NULL,
                                                             `type` varchar(20) NOT NULL,
                                                             `script` varchar(1000) NOT NULL,
                                                             `checksum` int DEFAULT NULL,
                                                             `installed_by` varchar(100) NOT NULL,
                                                             `installed_on` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                                             `execution_time` int NOT NULL,
                                                             `success` tinyint(1) NOT NULL,
                                                             PRIMARY KEY (`installed_rank`),
                                                             KEY `flyway_schema_history_s_idx` (`success`)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

    -- housekeeperdb.register_record definition

    CREATE TABLE `housekeeperdb`.`register_record` (
                                       `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
                                       `email` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_german2_ci DEFAULT NULL COMMENT '邮箱地址',
                                       `delete_flag` tinyint DEFAULT '0' COMMENT '0:未删除 1:已删除',
                                       PRIMARY KEY (`id`)
    ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_german2_ci;

    -- housekeeperdb.message definition

    CREATE TABLE `housekeeperdb`.`message` (
                                               `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
                                               `user_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
                                               `title` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '标题',
                                               `content` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '具体内容',
                                               `link` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '连接',
                                               `message_status` int DEFAULT NULL COMMENT '信息状态{未读，已读，删除}',
                                               `info_from` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '来自',
                                               `created_by` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '创建人',
                                               `created_time` datetime DEFAULT NULL COMMENT '创建时间',
                                               `updated_by` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '更新人',
                                               `updated_time` datetime DEFAULT NULL COMMENT '更新时间',
                                               PRIMARY KEY (`id`) USING BTREE
    ) ENGINE=InnoDB AUTO_INCREMENT=1496457136163442691 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci ROW_FORMAT=DYNAMIC COMMENT='消息表';


    -- housekeeperdb.properties definition

    CREATE TABLE `housekeeperdb`.`properties` (
                                                  `id` bigint NOT NULL AUTO_INCREMENT,
                                                  `key` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
                                                  `value` varchar(500) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
                                                  `application` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
                                                  `profile` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
                                                  `label` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
                                                  PRIMARY KEY (`id`)
    ) ENGINE=InnoDB AUTO_INCREMENT=154 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;


    -- housekeeperdb.t_customization definition

    CREATE TABLE `housekeeperdb`.`t_customization` (
                                                       `config_id` bigint NOT NULL AUTO_INCREMENT COMMENT '配置ID',
                                                       `style_flag` tinyint DEFAULT NULL COMMENT '主题标识',
                                                       `store_name` varchar(50) DEFAULT NULL COMMENT '店名',
                                                       `tenant_id` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '租户标识',
                                                       PRIMARY KEY (`config_id`)
    ) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8 COMMENT='租户配置表';


    -- housekeeperdb.t_housekeeper_service definition

    CREATE TABLE `housekeeperdb`.`t_housekeeper_service` (
                                                             `id` bigint NOT NULL AUTO_INCREMENT COMMENT '服务ID',
                                                             `service_name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '服务名称',
                                                             `service_desc` varchar(500) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '服务描述',
                                                             `img_src` varchar(500) DEFAULT NULL COMMENT '图片地址',
                                                             `created_by` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '创建人',
                                                             `created_time` datetime DEFAULT NULL COMMENT '创建时间',
                                                             `updated_by` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '更新人',
                                                             `updated_time` datetime DEFAULT NULL COMMENT '更新时间',
                                                             `servie_status` varchar(1) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '服务状态',
                                                             `delete_flag` varchar(1) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT '0' COMMENT '删除标志',
                                                             `revision` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '乐观锁',
                                                             `display_price` decimal(24,6) DEFAULT NULL COMMENT '服务展示价格',
                                                             PRIMARY KEY (`id`) USING BTREE
    ) ENGINE=InnoDB AUTO_INCREMENT=1402556441 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='服务主表';


    -- housekeeperdb.t_order definition

    CREATE TABLE `housekeeperdb`.`t_order` (
                                               `id` bigint NOT NULL AUTO_INCREMENT COMMENT '主键ID',
                                               `order_number` varchar(255) NOT NULL COMMENT '订单号',
                                               `customer_id` varchar(32) DEFAULT NULL COMMENT '顾客ID',
                                               `customer_name` varchar(32) DEFAULT NULL COMMENT '顾客姓名',
                                               `customer_phone` varchar(255) DEFAULT NULL COMMENT '顾客电话',
                                               `sku_id` int DEFAULT NULL COMMENT '可选服务表sku_id',
                                               `price` decimal(24,6) DEFAULT NULL COMMENT '订单价格，服务中心获取',
                                               `appointment_time` datetime DEFAULT NULL COMMENT '服务时间',
                                               `amount` int DEFAULT NULL COMMENT '数量',
                                               `remark` varchar(255) DEFAULT NULL COMMENT '备注',
                                               `service_detail` mediumtext COMMENT '服务细节，服务中心获取',
                                               `payment` decimal(24,6) DEFAULT NULL COMMENT '订单价格，价格乘以数量',
                                               `address` varchar(255) DEFAULT NULL COMMENT '服务地址',
                                               `status` int DEFAULT NULL COMMENT '状态',
                                               `employee_id` varchar(32) DEFAULT NULL,
                                               `employee_name` varchar(32) DEFAULT NULL COMMENT '工人名称',
                                               `employee_phone` varchar(255) DEFAULT NULL COMMENT '工人电话',
                                               `service_img` varchar(255) DEFAULT NULL COMMENT '服务图片',
                                               `created_by` varchar(90) DEFAULT NULL COMMENT '创建人',
                                               `created_time` datetime DEFAULT NULL COMMENT '创建时间',
                                               `updated_by` varchar(90) DEFAULT NULL COMMENT '更新人',
                                               `updated_time` datetime DEFAULT NULL COMMENT '更新时间',
                                               PRIMARY KEY (`id`)
    ) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='订单表';


    -- housekeeperdb.t_service_option definition

    CREATE TABLE `housekeeperdb`.`t_service_option` (
                                                        `id` bigint NOT NULL AUTO_INCREMENT COMMENT '选项ID',
                                                        `specification_id` bigint NOT NULL COMMENT '规格ID',
                                                        `name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '选项名称',
                                                        `created_by` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '创建人',
                                                        `created_time` datetime DEFAULT NULL COMMENT '创建时间',
                                                        `updated_by` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '更新人',
                                                        `updated_time` datetime DEFAULT NULL COMMENT '更新时间',
                                                        `revision` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '乐观锁',
                                                        `delete_flag` varchar(1) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT '0' COMMENT '删除标志',
                                                        PRIMARY KEY (`id`) USING BTREE
    ) ENGINE=InnoDB AUTO_INCREMENT=155 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='规格选项表';


    -- housekeeperdb.t_service_selection definition

    CREATE TABLE `housekeeperdb`.`t_service_selection` (
                                                           `id` bigint NOT NULL AUTO_INCREMENT COMMENT '选集ID',
                                                           `option_id` bigint DEFAULT NULL COMMENT '选项ID',
                                                           `sku_id` bigint DEFAULT NULL COMMENT 'SKU_ID',
                                                           `created_by` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '创建人',
                                                           `created_time` datetime DEFAULT NULL COMMENT '创建时间',
                                                           `updated_by` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '更新人',
                                                           `updated_time` datetime DEFAULT NULL COMMENT '更新时间',
                                                           `revision` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '乐观锁',
                                                           `delete_flag` varchar(1) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT '0' COMMENT '删除标志',
                                                           PRIMARY KEY (`id`) USING BTREE
    ) ENGINE=InnoDB AUTO_INCREMENT=131 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='选集表';


    -- housekeeperdb.t_service_sku definition

    CREATE TABLE `housekeeperdb`.`t_service_sku` (
                                                     `id` int NOT NULL AUTO_INCREMENT COMMENT '可选服务ID',
                                                     `service_id` int DEFAULT NULL COMMENT '服务ID',
                                                     `price` decimal(24,6) DEFAULT NULL COMMENT '价格',
                                                     `created_by` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '创建人',
                                                     `created_time` datetime DEFAULT NULL COMMENT '创建时间',
                                                     `updated_by` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '更新人',
                                                     `updated_time` datetime DEFAULT NULL COMMENT '更新时间',
                                                     `revision` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '乐观锁',
                                                     `delete_flag` varchar(1) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT '0' COMMENT '删除标志',
                                                     PRIMARY KEY (`id`) USING BTREE
    ) ENGINE=InnoDB AUTO_INCREMENT=68 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='可选服务表(SKU)';


    -- housekeeperdb.t_service_specification definition

    CREATE TABLE `housekeeperdb`.`t_service_specification` (
                                                               `id` bigint NOT NULL AUTO_INCREMENT COMMENT '规格ID',
                                                               `service_id` bigint DEFAULT NULL COMMENT '服务ID',
                                                               `name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '规格名称',
                                                               `created_by` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '创建人',
                                                               `created_time` datetime DEFAULT NULL COMMENT '创建时间',
                                                               `updated_by` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '更新人',
                                                               `updated_time` datetime DEFAULT NULL COMMENT '更新时间',
                                                               `revision` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '乐观锁',
                                                               `delete_flag` varchar(1) DEFAULT '0' COMMENT '删除标志',
                                                               PRIMARY KEY (`id`) USING BTREE
    ) ENGINE=InnoDB AUTO_INCREMENT=810397703 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='规格表';


    -- housekeeperdb.t_task definition

    CREATE TABLE `housekeeperdb`.`t_task` (
                                              `id` bigint NOT NULL AUTO_INCREMENT COMMENT '主键id',
                                              `customer_id` varchar(36) DEFAULT NULL COMMENT '顾客id;用户中心上下文',
                                              `order_id` bigint DEFAULT NULL COMMENT '订单id;订单中心上下文',
                                              `customer_name` varchar(255) DEFAULT NULL COMMENT '顾客名称',
                                              `customer_phone` varchar(255) DEFAULT NULL COMMENT '电话号码',
                                              `appointment_time` datetime DEFAULT NULL COMMENT '服务时间',
                                              `address` varchar(255) DEFAULT NULL COMMENT '地址',
                                              `service_name` varchar(255) DEFAULT NULL COMMENT '服务名称;订单中心推送',
                                              `service_detail` varchar(255) DEFAULT NULL COMMENT '服务细节;订单中心推送',
                                              `salary` decimal(24,6) DEFAULT NULL COMMENT '佣金,可通过支付金额得出',
                                              `employee_name` varchar(255) DEFAULT NULL COMMENT '雇佣名称',
                                              `amount` int DEFAULT NULL COMMENT '订单数量',
                                              `employee_id` varchar(32) DEFAULT NULL COMMENT '雇佣id',
                                              `task_status` varchar(255) DEFAULT NULL COMMENT '任务状态',
                                              `created_by` varchar(90) DEFAULT NULL COMMENT '创建人',
                                              `created_time` datetime DEFAULT NULL COMMENT '创建时间',
                                              `updated_by` varchar(90) DEFAULT NULL COMMENT '更新人',
                                              `updated_time` datetime DEFAULT NULL COMMENT '更新时间',
                                              `delete_flag` varchar(1) DEFAULT '0' COMMENT '删除标志',
                                              `version` varchar(36) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT 'UUID()' COMMENT '乐观锁',
                                              `remark` varchar(255) DEFAULT NULL COMMENT '订单备注',
                                              PRIMARY KEY (`id`) USING BTREE
    ) ENGINE=InnoDB AUTO_INCREMENT=5043 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='任务表';


    -- housekeeperdb.tenant definition

    CREATE TABLE `housekeeperdb`.`tenant` (
                                              `id` bigint NOT NULL AUTO_INCREMENT COMMENT '主键id',
                                              `NAME` varchar(32) DEFAULT NULL COMMENT '租户',
                                              `NUMBER` varchar(255) DEFAULT NULL COMMENT '统一社会信用码',
                                              `PHONE` varchar(32) DEFAULT NULL COMMENT '租户电话',
                                              `EMAIL` varchar(32) DEFAULT NULL COMMENT '租户邮箱',
                                              `CONTENT` varchar(255) DEFAULT NULL COMMENT '具体内容',
                                              `TAG` varchar(32) DEFAULT NULL COMMENT '租户标识',
                                              `DOMAIN` varchar(32) DEFAULT NULL COMMENT '租户域名',
                                              `STATUS` int DEFAULT NULL COMMENT '租户状态{申请中，活跃，停业}',
                                              `CREATED_BY` varchar(32) DEFAULT NULL COMMENT '创建人',
                                              `CREATED_TIME` datetime DEFAULT NULL COMMENT '创建时间',
                                              `UPDATED_BY` varchar(32) DEFAULT NULL COMMENT '更新人',
                                              `UPDATED_TIME` datetime DEFAULT NULL COMMENT '更新时间',
                                              `tenant_id` varchar(32) DEFAULT NULL COMMENT '租户id',
                                              PRIMARY KEY (`id`)
    ) ENGINE=InnoDB AUTO_INCREMENT=307814576 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='消息表';


    -- housekeeperdb.`user` definition

    CREATE TABLE `housekeeperdb`.`user` (
                                            `id` int NOT NULL AUTO_INCREMENT,
                                            `user_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
                                            `USER_NAME` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
                                            `PASSWORD` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
                                            `USER_ROLE` int DEFAULT NULL,
                                            `DEFAULT_ADDRESS` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
                                            `PHONE_NO` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
                                            `CREATED_BY` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '创建人',
                                            `CREATED_TIME` datetime DEFAULT NULL COMMENT '创建时间',
                                            `UPDATED_BY` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '更新人',
                                            `UPDATED_TIME` datetime DEFAULT NULL COMMENT '更新时间',
                                            `EMAIL` varchar(100) CHARACTER SET utf16 COLLATE utf16_general_ci NOT NULL COMMENT '???',
                                            `ID_CARD` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
                                            `ACCOUNT_TYPE` smallint DEFAULT '1',
                                            `test` varchar(255) NOT NULL,
                                            PRIMARY KEY (`id`) USING BTREE
    ) ENGINE=InnoDB AUTO_INCREMENT=1860849668 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci ROW_FORMAT=DYNAMIC COMMENT='用户表';


    DROP TABLE IF EXISTS `t_service_image`;

    -- housekeeperdb.t_service_image definition

    CREATE TABLE `t_service_image` (
      `id` bigint NOT NULL AUTO_INCREMENT COMMENT '主键',
      `image_id` varchar(36) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '图片id',
      `service_id` varchar(100) DEFAULT NULL COMMENT '服务id',
      `image_name` varchar(200) NOT NULL COMMENT '图片名称',
      `type` varchar(100) NOT NULL COMMENT '图片类型',
      `content` mediumblob NOT NULL COMMENT '图片二进制',
      `created_by` varchar(100) DEFAULT NULL COMMENT '创建人',
      `created_time` datetime DEFAULT NULL COMMENT '创建时间',
      `updated_by` varchar(100) DEFAULT NULL COMMENT '更新人',
      `updated_time` datetime DEFAULT NULL COMMENT '更新时间',
      PRIMARY KEY (`id`)
    ) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
---
# Source: housekeeper/charts/rabbitmq/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-rabbitmq
  namespace: default
  labels:
    app: rabbitmq
    chart: rabbitmq-1.0.0
    release: release-name
    heritage: Helm
data:
  enabled_plugins: |
    [
      rabbitmq_shovel,
      rabbitmq_shovel_management,
      rabbitmq_federation,
      rabbitmq_federation_management,
      

      rabbitmq_consistent_hash_exchange,
      rabbitmq_management,
      rabbitmq_peer_discovery_k8s
      
    ].

  rabbitmq.conf: |
    ## RabbitMQ configuration
    ## Ref: https://github.com/rabbitmq/rabbitmq-server/blob/master/docs/rabbitmq.conf.example

    ## Authentification

    ## Clustering
    cluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s
    cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
    cluster_formation.k8s.address_type = hostname
    cluster_formation.node_cleanup.interval = 10
    # Set to false if automatic cleanup of absent nodes is desired.
    # This can be dangerous, see http://www.rabbitmq.com/cluster-formation.html#node-health-checks-and-cleanup.
    cluster_formation.node_cleanup.only_log_warning = true
    cluster_partition_handling = autoheal
    ## The default "guest" user is only permitted to access the server
    ## via a loopback interface (e.g. localhost)
    loopback_users.guest = false
    management.load_definitions = /etc/definitions/definitions.json

    ## Memory-based Flow Control threshold
    vm_memory_high_watermark.absolute = 256MB

    ## Auth HTTP Backend Plugin

    ## LDAP Plugin

    ## MQTT Plugin

    ## Web MQTT Plugin

    ## STOMP Plugin

    ## Web STOMP Plugin

    ## Prometheus Plugin

    ## AMQPS support
---
# Source: housekeeper/templates/configMap.yaml
apiVersion: v1
kind: ConfigMap
binaryData: {}
metadata:
  annotations:
    description: ''
    originName: config
    currentVersion: '1'
  name: config
  namespace: default
  labels: {}
data:
  frontendAddress: ''
  SPRING_PROFILES_ACTIVE: pro
  CONFIG_SERVER: http://config-server.default.svc.cluster.local:3344
  eureka.defaultZone: http://eurekaAdmin:123456@eureka.default.svc.cluster.local:8761/eureka
  mysql.host: mysql
  rabbitmq.host: rabbitmq
---
# Source: housekeeper/charts/mysql/templates/pv.yaml
kind: PersistentVolume
apiVersion: v1
metadata:
  name: mysql-initdb-pv-volume
  labels:
    type: local
    app: mysql
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadOnlyMany
  hostPath:
    path: "/path/to/initdb/sql/scripts"
---
# Source: housekeeper/charts/rabbitmq/templates/pv.yaml
kind: PersistentVolume
apiVersion: v1
metadata:
  name: rabbitmq-initdb-pv-volume1
  labels:
    type: local
    app: rabbitmq
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadOnlyMany
  hostPath:
    path: "/mnt/rabbitmq/data"
---
# Source: housekeeper/charts/mysql/templates/pv.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mysql-initdb-pvc-claim
  labels:
    app: mysql
spec:
  storageClassName: manual
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 1Gi
---
# Source: housekeeper/charts/rabbitmq/templates/pv.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: rabbitmq-initdb-pvc-claim1
  labels:
    app: rabbitmq
spec:
  storageClassName: manual
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 1Gi
---
# Source: housekeeper/charts/rabbitmq/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: rabbitmq
    chart: rabbitmq-1.0.0
    release: "release-name"
    heritage: "Helm"
  name: release-name-rabbitmq
  namespace: default
rules:
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get"]
---
# Source: housekeeper/charts/rabbitmq/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: rabbitmq
    chart: rabbitmq-1.0.0
    release: "release-name"
    heritage: "Helm"
  name: release-name-rabbitmq
  namespace: default
subjects:
  - kind: ServiceAccount
    name: release-name-rabbitmq
    namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-rabbitmq
---
# Source: housekeeper/charts/config-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: config-server
  labels:
    helm.sh/chart: config-server-1.1.0
    app.kubernetes.io/name: config-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3344
      targetPort: 3344
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: config-server
    app.kubernetes.io/instance: release-name
---
# Source: housekeeper/charts/eureka/templates/service-node.yaml
apiVersion: v1
kind: Service
metadata:
  name: eureka-node
  labels:
    helm.sh/chart: eureka-1.0.0
    app.kubernetes.io/name: eureka
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 8761
      targetPort: 8761
      nodePort: 32300
      protocol: TCP
      name: eureka-node
  selector:
    app.kubernetes.io/name: eureka
    app.kubernetes.io/instance: release-name
---
# Source: housekeeper/charts/eureka/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: eureka
  labels:
    helm.sh/chart: eureka-1.0.0
    app.kubernetes.io/name: eureka
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8761
      targetPort: 8761
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: eureka
    app.kubernetes.io/instance: release-name
---
# Source: housekeeper/charts/event-tracking/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: event-tracking
  labels:
    helm.sh/chart: event-tracking-1.0.0
    app.kubernetes.io/name: event-tracking
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8600
      targetPort: 8600
      protocol: TCP
      name: event-tracking
  selector:
    app.kubernetes.io/name: event-tracking
    app.kubernetes.io/instance: release-name
---
# Source: housekeeper/charts/frontend/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    helm.sh/chart: frontend-1.0.0
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: release-name
---
# Source: housekeeper/charts/gateway/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: gateway
  labels:
    helm.sh/chart: gateway-1.0.0
    app.kubernetes.io/name: gateway
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9090
      targetPort: 9090
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/instance: release-name
---
# Source: housekeeper/charts/message/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: message
  labels:
    helm.sh/chart: message-1.0.0
    app.kubernetes.io/name: message
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8175
      targetPort: 8175
      protocol: TCP
      name: message
  selector:
    app.kubernetes.io/name: message
    app.kubernetes.io/instance: release-name
---
# Source: housekeeper/charts/mysql/templates/service-node.yaml
apiVersion: v1
kind: Service
metadata:
  name: mysql-node
  labels:
    helm.sh/chart: mysql-1.0.0
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 3306
      nodePort: 32123
      targetPort: 3306
      protocol: TCP
      name: mysql-node
  selector:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: release-name
---
# Source: housekeeper/charts/mysql/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mysql
  labels:
    helm.sh/chart: mysql-1.0.0
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3306
      targetPort: 3306
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: release-name
---
# Source: housekeeper/charts/order/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: order
  labels:
    helm.sh/chart: order-1.0.0
    app.kubernetes.io/name: order
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8300
      targetPort: 8300
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: order
    app.kubernetes.io/instance: release-name
---
# Source: housekeeper/charts/publish/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: publish
  labels:
    helm.sh/chart: publish-1.0.0
    app.kubernetes.io/name: publish
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: publish
  selector:
    app.kubernetes.io/name: publish
    app.kubernetes.io/instance: release-name
---
# Source: housekeeper/charts/rabbitmq/templates/service-discovery.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-rabbitmq-discovery
  namespace: default
  labels:
    app: rabbitmq
    chart: rabbitmq-1.0.0
    release: release-name
    heritage: Helm
spec:
  clusterIP: None
  ports:
    - name: http
      protocol: TCP
      port: 15672
      targetPort: http
    - name: amqp
      protocol: TCP
      port: 5672
      targetPort: amqp
    - name: epmd
      protocol: TCP
      port: 4369
      targetPort: epmd
  publishNotReadyAddresses: true
  selector:
    app: rabbitmq
    release: release-name
  type: ClusterIP
---
# Source: housekeeper/charts/rabbitmq/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: default
  labels:
    app: rabbitmq
    chart: rabbitmq-1.0.0
    release: release-name
    heritage: Helm
spec:
  ports:
    - name: http
      protocol: TCP
      port: 15672
      targetPort: http
    - name: amqp
      protocol: TCP
      port: 5672
      targetPort: amqp
    - name: epmd
      protocol: TCP
      port: 4369
      targetPort: epmd
    
  selector:
    app: rabbitmq
    release: release-name
  type: ClusterIP
---
# Source: housekeeper/charts/task/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: task
  labels:
    helm.sh/chart: task-1.0.0
    app.kubernetes.io/name: task
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8090
      targetPort: 8090
      protocol: TCP
      name: task
  selector:
    app.kubernetes.io/name: task
    app.kubernetes.io/instance: release-name
---
# Source: housekeeper/charts/tenantinfo/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: tenantinfo
  labels:
    helm.sh/chart: tenantinfo-1.0.0
    app.kubernetes.io/name: tenantinfo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8500
      targetPort: 8500
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: tenantinfo
    app.kubernetes.io/instance: release-name
---
# Source: housekeeper/charts/userinfo/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-userinfo
  labels:
    helm.sh/chart: userinfo-1.0.0
    app.kubernetes.io/name: userinfo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9093
      targetPort: 9093
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: userinfo
    app.kubernetes.io/instance: release-name
---
# Source: housekeeper/charts/config-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-config-server
  labels:
    helm.sh/chart: config-server-1.1.0
    app.kubernetes.io/name: config-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: config-server
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: config-server
        app.kubernetes.io/instance: release-name
    spec:
      imagePullSecrets:
        - name: default-secret
      securityContext:
        {}
      containers:
        - name: config-server
          securityContext:
            {}
          image: "swr.cn-south-1.myhuaweicloud.com/tansj/saas-housekeeper-config-server:v1.1.4"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3344
              protocol: TCP
          envFrom:
            - secretRef:
                name: config
            - configMapRef:
                name: config
          resources:
            limits:
              cpu: 250m
              memory: 250Mi
            requests:
              cpu: 250m
              memory: 250Mi
---
# Source: housekeeper/charts/eureka/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-eureka
  labels:
    helm.sh/chart: eureka-1.0.0
    app.kubernetes.io/name: eureka
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: eureka
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: eureka
        app.kubernetes.io/instance: release-name
    spec:
      imagePullSecrets:
        - name: default-secret
      securityContext:
        {}
      containers:
        - name: eureka
          securityContext:
            {}
          image: "swr.cn-south-1.myhuaweicloud.com/tansj/saas-housekeeper-eureka:v1.0.4"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8761
              protocol: TCP
          resources:
            limits:
              cpu: 250m
              memory: 250Mi
            requests:
              cpu: 250m
              memory: 250Mi
---
# Source: housekeeper/charts/event-tracking/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-event-tracking
  labels:
    helm.sh/chart: event-tracking-1.0.0
    app.kubernetes.io/name: event-tracking
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: event-tracking
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: event-tracking
        app.kubernetes.io/instance: release-name
    spec:
      imagePullSecrets:
        - name: default-secret
      securityContext:
        {}
      containers:
        - name: event-tracking
          securityContext:
            {}
          image: "saashousekeeper/event-tracking:1.0.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8600
              protocol: TCP
          envFrom:
            - secretRef:
                name: config
            - configMapRef:
                name: config
          resources:
            limits:
              cpu: 250m
              memory: 250Mi
            requests:
              cpu: 250m
              memory: 250Mi
---
# Source: housekeeper/charts/frontend/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-frontend
  labels:
    helm.sh/chart: frontend-1.0.0
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: frontend
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: frontend
        app.kubernetes.io/instance: release-name
    spec:
      imagePullSecrets:
        - name: default-secret
      securityContext:
        {}
      containers:
        - name: frontend
          securityContext:
            {}
          image: "swr.cn-south-1.myhuaweicloud.com/tansj/frontend:v1.0.0"
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: config
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            limits:
              cpu: 250m
              memory: 100Mi
            requests:
              cpu: 250m
              memory: 100Mi
---
# Source: housekeeper/charts/gateway/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-gateway
  labels:
    helm.sh/chart: gateway-1.0.0
    app.kubernetes.io/name: gateway
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: gateway
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gateway
        app.kubernetes.io/instance: release-name
    spec:
      imagePullSecrets:
        - name: default-secret
      securityContext:
        {}
      containers:
        - name: gateway
          securityContext:
            {}
          image: "swr.cn-south-1.myhuaweicloud.com/tansj/saas-housekeeper-gateway:v1.0.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 9090
              protocol: TCP
          envFrom:
            - secretRef:
                name: config
            - configMapRef:
                name: config
          resources:
            limits:
              cpu: 250m
              memory: 250Mi
            requests:
              cpu: 250m
              memory: 250Mi
---
# Source: housekeeper/charts/message/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-message
  labels:
    helm.sh/chart: message-1.0.0
    app.kubernetes.io/name: message
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: message
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: message
        app.kubernetes.io/instance: release-name
    spec:
      imagePullSecrets:
        - name: default-secret
      securityContext:
        {}
      containers:
        - name: message
          securityContext:
            {}
          image: "swr.cn-south-1.myhuaweicloud.com/tansj/saas-housekeeper-message-service:v1.1.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8175
              protocol: TCP
          envFrom:
            - secretRef:
                name: config
            - configMapRef:
                name: config
          resources:
            limits:
              cpu: 250m
              memory: 250Mi
            requests:
              cpu: 250m
              memory: 250Mi
---
# Source: housekeeper/charts/order/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-order
  labels:
    helm.sh/chart: order-1.0.0
    app.kubernetes.io/name: order
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: order
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: order
        app.kubernetes.io/instance: release-name
    spec:
      imagePullSecrets:
        - name: default-secret
      securityContext:
        {}
      containers:
        - name: order
          securityContext:
            {}
          image: "swr.cn-south-1.myhuaweicloud.com/tansj/saas-housekeeper-order-service:v1.1.9"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8300
              protocol: TCP
          envFrom:
            - secretRef:
                name: config
            - configMapRef:
                name: config
          resources:
            limits:
              cpu: 250m
              memory: 250Mi
            requests:
              cpu: 250m
              memory: 250Mi
---
# Source: housekeeper/charts/publish/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-publish
  labels:
    helm.sh/chart: publish-1.0.0
    app.kubernetes.io/name: publish
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: publish
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: publish
        app.kubernetes.io/instance: release-name
    spec:
      imagePullSecrets:
        - name: default-secret
      securityContext:
        {}
      containers:
        - name: publish
          securityContext:
            {}
          image: "swr.cn-south-1.myhuaweicloud.com/tansj/saas-housekeeper-service-publish:v1.1.9"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          envFrom:
            - secretRef:
                name: config
            - configMapRef:
                name: config
          resources:
            limits:
              cpu: 250m
              memory: 250Mi
            requests:
              cpu: 250m
              memory: 250Mi
---
# Source: housekeeper/charts/task/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-task
  labels:
    helm.sh/chart: task-1.0.0
    app.kubernetes.io/name: task
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: task
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: task
        app.kubernetes.io/instance: release-name
    spec:
      imagePullSecrets:
        - name: default-secret
      securityContext:
        {}
      containers:
        - name: task
          securityContext:
            {}
          image: "swr.cn-south-1.myhuaweicloud.com/tansj/saas-housekeeper-task-service:v1.1.2"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8090
              protocol: TCP
          envFrom:
            - secretRef:
                name: config
            - configMapRef:
                name: config
          resources:
            limits:
              cpu: 250m
              memory: 250Mi
            requests:
              cpu: 250m
              memory: 250Mi
---
# Source: housekeeper/charts/tenantinfo/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-tenantinfo
  labels:
    helm.sh/chart: tenantinfo-1.0.0
    app.kubernetes.io/name: tenantinfo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tenantinfo
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tenantinfo
        app.kubernetes.io/instance: release-name
    spec:
      imagePullSecrets:
        - name: default-secret
      securityContext:
        {}
      containers:
        - name: tenantinfo
          securityContext:
            {}
          image: "swr.cn-south-1.myhuaweicloud.com/tansj/saas-housekeeper-tenantinfo-service:1.0.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8500
              protocol: TCP
          envFrom:
            - secretRef:
                name: config
            - configMapRef:
                name: config
          resources:
            limits:
              cpu: 250m
              memory: 250Mi
            requests:
              cpu: 250m
              memory: 250Mi
---
# Source: housekeeper/charts/userinfo/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-userinfo
  labels:
    helm.sh/chart: userinfo-1.0.0
    app.kubernetes.io/name: userinfo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: userinfo
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: userinfo
        app.kubernetes.io/instance: release-name
    spec:
      imagePullSecrets:
        - name: default-secret
      securityContext:
        {}
      containers:
        - name: userinfo
          securityContext:
            {}
          image: "swr.cn-south-1.myhuaweicloud.com/tansj/saas-housekeeper-userinfo-service:v1.1.4"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 9093
              protocol: TCP
          envFrom:
            - secretRef:
                name: config
            - configMapRef:
                name: config
          resources:
            limits:
              cpu: 250m
              memory: 250Mi
            requests:
              cpu: 250m
              memory: 250Mi
---
# Source: housekeeper/charts/mysql/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-mysql
  labels:
    helm.sh/chart: mysql-1.0.0
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mysql
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mysql
        app.kubernetes.io/instance: release-name
    spec:
      imagePullSecrets:
        - name: default-secret
      serviceAccountName: release-name-mysql
      securityContext:
        {}
      containers:
        - name: mysql
          securityContext:
            {}
          envFrom:
            - secretRef:
                name: config
            - configMapRef:
                name: config
          image: "mysql:8.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3306
              protocol: TCP
          volumeMounts:
            - name: mysql-initdb
              mountPath: /docker-entrypoint-initdb.d
            - name: configurations
              mountPath: /etc/mysql/conf.d/
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
          resources:
            limits:
              cpu: 250m
              memory: 600Mi
            requests:
              cpu: 250m
              memory: 600Mi
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-initdb-pvc-claim
        - name: mysql-initdb
          configMap:
            name: mysql-initdb-config
        - name: configurations
          configMap:
            name: init-configuration
---
# Source: housekeeper/charts/rabbitmq/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-rabbitmq
  namespace: default
  labels:
    app: rabbitmq
    chart: rabbitmq-1.0.0
    release: release-name
    heritage: Helm
spec:
  podManagementPolicy: OrderedReady
  serviceName: release-name-rabbitmq-discovery
  replicas: 3
  updateStrategy:
    type: OnDelete
  selector:
    matchLabels:
      app: rabbitmq
      release: release-name
  template:
    metadata:
      labels:
        app: rabbitmq
        release: release-name
      annotations:
        checksum/config: e9ac505b00c020e71d766fb142ddc5e27dfe7cd51921b86635039984376320d4
        checksum/secret: 40a1185e3dae4d12915f132ef4a14795dd9a05bd3bd49e6842cd005c5380b6c3
    spec:
      terminationGracePeriodSeconds: 10
      securityContext:
          fsGroup: 101
          runAsGroup: 101
          runAsNonRoot: true
          runAsUser: 100
      serviceAccountName: release-name-rabbitmq
      initContainers:
        - name: bootstrap
          image: busybox:1.30.1
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
          command: ['sh']
          args:
          - "-c"
          - |
            set -ex
            cp /configmap/* /etc/rabbitmq
            echo "${RABBITMQ_ERLANG_COOKIE}" > /var/lib/rabbitmq/.erlang.cookie
            chown -R 100:101 /var/lib/rabbitmq/
            chown -R 100:101 /etc/rabbitmq
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: RABBITMQ_MNESIA_DIR
            value: /var/lib/rabbitmq/mnesia/rabbit@$(POD_NAME).release-name-rabbitmq-discovery.default.svc.cluster.local
          - name: RABBITMQ_ERLANG_COOKIE
            valueFrom:
              secretKeyRef:
                name: release-name-rabbitmq
                key: rabbitmq-erlang-cookie
          resources:
            {}
          volumeMounts:
            - name: rabbitmq-initdb
              mountPath: "/data"
            - name: configmap
              mountPath: /configmap
            - name: config
              mountPath: /etc/rabbitmq
            - name: data
              mountPath: /var/lib/rabbitmq
      containers:
        - name: rabbitmq
          image: rabbitmq:3.8.7-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - name: epmd
              protocol: TCP
              containerPort: 4369
            - name: amqp
              protocol: TCP
              containerPort: 5672
            - name: http
              protocol: TCP
              containerPort: 15672
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: RABBITMQ_USE_LONGNAME
              value: "true"
            - name: RABBITMQ_NODENAME
              value: rabbit@$(MY_POD_NAME).release-name-rabbitmq-discovery.default.svc.cluster.local
            - name: K8S_HOSTNAME_SUFFIX
              value: .release-name-rabbitmq-discovery.default.svc.cluster.local
            - name: K8S_SERVICE_NAME
              value: release-name-rabbitmq-discovery
            - name: RABBITMQ_ERLANG_COOKIE
              valueFrom:
                secretKeyRef:
                  name: release-name-rabbitmq
                  key: rabbitmq-erlang-cookie
            - name: RABBIT_MANAGEMENT_USER
              valueFrom:
                secretKeyRef:
                  name: release-name-rabbitmq
                  key: rabbitmq-management-username
            - name: RABBIT_MANAGEMENT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-rabbitmq
                  key: rabbitmq-management-password
          resources:
            {}
          volumeMounts:
            - name: data
              mountPath: /var/lib/rabbitmq
            - name: config
              mountPath: /etc/rabbitmq
            - name: definitions
              mountPath: /etc/definitions
              readOnly: true
        
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchLabels:
                    app: rabbitmq
                    release: release-name
      volumes:
        - name: rabbitmq-initdb
          persistentVolumeClaim:
            claimName: rabbitmq-initdb-pvc-claim1
        - name: config
          emptyDir: {}
        - name: configmap
          configMap:
            name: release-name-rabbitmq
        - name: definitions
          secret:
            secretName: release-name-rabbitmq
            items:
            - key: definitions.json
              path: definitions.json
        - name: data
          emptyDir: {}
---
# Source: housekeeper/charts/mysql/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-mysql-test-connection"
  labels:
    helm.sh/chart: mysql-1.0.0
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-mysql:3306']
  restartPolicy: Never
