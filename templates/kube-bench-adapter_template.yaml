---
# Source: kube-bench-adapter/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kube-bench-adapter
  labels:
    app.kubernetes.io/instance: nirmata
    app.kubernetes.io/name: nirmata
    helm.sh/chart: kube-bench-adapter-v1.2.8
    app.kubernetes.io/name: kube-bench-adapter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.5"
    app.kubernetes.io/managed-by: Helm
  namespace : default
---
# Source: kube-bench-adapter/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-kube-bench-adapter
  labels:
    app.kubernetes.io/instance: nirmata
    app.kubernetes.io/name: nirmata
    helm.sh/chart: kube-bench-adapter-v1.2.8
    app.kubernetes.io/name: kube-bench-adapter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.5"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods","pods/log"]
  verbs: ["get", "list", "watch", "delete"]
- apiGroups: ["batch", "extensions"]
  resources: ["jobs"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["wgpolicyk8s.io"]
  resources: ["policyreports", "clusterpolicyreports"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
# Source: kube-bench-adapter/templates/rb.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kube-bench-adapter
  labels:
    app.kubernetes.io/instance: nirmata
    app.kubernetes.io/name: nirmata
    helm.sh/chart: kube-bench-adapter-v1.2.8
    app.kubernetes.io/name: kube-bench-adapter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.5"
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: release-name-kube-bench-adapter # Name of the ServiceAccount
  namespace: default
roleRef:
  kind: ClusterRole # This must be Role or ClusterRole
  name: release-name-kube-bench-adapter # This must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io
---
# Source: kube-bench-adapter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kube-bench-adapter
  labels:
    app.kubernetes.io/instance: nirmata
    app.kubernetes.io/name: nirmata
    helm.sh/chart: kube-bench-adapter-v1.2.8
    app.kubernetes.io/name: kube-bench-adapter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.5"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kube-bench-adapter
    app.kubernetes.io/instance: release-name
---
# Source: kube-bench-adapter/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  namespace: default
  name: release-name-kube-bench-adapter-startup-19217
  labels:
    app.kubernetes.io/instance: nirmata
    app.kubernetes.io/name: nirmata
    helm.sh/chart: kube-bench-adapter-v1.2.8
    app.kubernetes.io/name: kube-bench-adapter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.5"
    app.kubernetes.io/managed-by: Helm

spec:
  template:
    metadata:
      labels:
            app.kubernetes.io/instance: nirmata
            app.kubernetes.io/name: nirmata
            helm.sh/chart: kube-bench-adapter-v1.2.8
            app.kubernetes.io/name: kube-bench-adapter
            app.kubernetes.io/instance: release-name
            app.kubernetes.io/version: "v0.2.5"
            app.kubernetes.io/managed-by: Helm
    spec:
      containers:
      - name: release-name-kube-bench-adapter
        image: "ghcr.io/nirmata/kube-bench-adapter:v0.2.5"
        args: [
        "-name","kube-bench",
        "-namespace", "default",
        "-kube-bench-image", "aquasec/kube-bench:v0.6.17",
        "-kubeconfig", "$HOME/.kube/config",
        "-kube-bench-targets", "master,node,etcd,policies",
        "-kube-bench-benchmark", "cis-1.7",
        ]
        resources: 
              limits:
                cpu: 500m
                memory: 600Mi
              requests:
                cpu: 100m
                memory: 200Mi
        livenessProbe: 
              exec:
                command:
                - /ko-app/kube-bench
                - -h
              initialDelaySeconds: 5
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 5
        readinessProbe: 
              exec:
                command:
                - /ko-app/kube-bench
                - -h
              initialDelaySeconds: 5
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 5
        securityContext: 
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
              runAsGroup: 1000
              runAsNonRoot: true
              runAsUser: 1000

      restartPolicy: Never
      serviceAccountName:   release-name-kube-bench-adapter
---
# Source: kube-bench-adapter/templates/cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  namespace: default
  name: release-name-kube-bench-adapter
  labels:
    app.kubernetes.io/instance: nirmata
    app.kubernetes.io/name: nirmata
    helm.sh/chart: kube-bench-adapter-v1.2.8
    app.kubernetes.io/name: kube-bench-adapter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.5"
    app.kubernetes.io/managed-by: Helm
spec:
  schedule: "@weekly"
  jobTemplate:
    
    
    spec:
      template:
        metadata:
          labels:
                app.kubernetes.io/instance: nirmata
                app.kubernetes.io/name: nirmata
                helm.sh/chart: kube-bench-adapter-v1.2.8
                app.kubernetes.io/name: kube-bench-adapter
                app.kubernetes.io/instance: release-name
                app.kubernetes.io/version: "v0.2.5"
                app.kubernetes.io/managed-by: Helm
        spec:
          containers:
          - name: release-name-kube-bench-adapter
            image: "ghcr.io/nirmata/kube-bench-adapter:v0.2.5"
            args: [
            "-name","kube-bench",
            "-namespace", "default",
            "-kube-bench-image", "aquasec/kube-bench:v0.6.17",
            "-kubeconfig", "$HOME/.kube/config",
            "-kube-bench-targets", "master,node,etcd,policies",
            "-kube-bench-benchmark", "cis-1.7",
            ]
            resources: 
                  limits:
                    cpu: 500m
                    memory: 600Mi
                  requests:
                    cpu: 100m
                    memory: 200Mi
            livenessProbe: 
                  exec:
                    command:
                    - /ko-app/kube-bench
                    - -h
                  initialDelaySeconds: 5
                  periodSeconds: 10
                  successThreshold: 1
                  timeoutSeconds: 5
            readinessProbe: 
                  exec:
                    command:
                    - /ko-app/kube-bench
                    - -h
                  initialDelaySeconds: 5
                  periodSeconds: 10
                  successThreshold: 1
                  timeoutSeconds: 5
            securityContext: 
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
                  readOnlyRootFilesystem: true
                  runAsGroup: 1000
                  runAsNonRoot: true
                  runAsUser: 1000
    
          restartPolicy: Never
          serviceAccountName:   release-name-kube-bench-adapter
---
# Source: kube-bench-adapter/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-kube-bench-adapter-test-connection"
  labels:
    app.kubernetes.io/instance: nirmata
    app.kubernetes.io/name: nirmata
    helm.sh/chart: kube-bench-adapter-v1.2.8
    app.kubernetes.io/name: kube-bench-adapter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-kube-bench-adapter:80']
  restartPolicy: Never
