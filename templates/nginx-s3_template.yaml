---
# Source: nginx-s3/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-nginx-s3
  labels:
    helm.sh/chart: nginx-s3-0.1.1
    app.kubernetes.io/name: nginx-s3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: nginx-s3/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-nginx-s3
  labels:
    helm.sh/chart: nginx-s3-0.1.1
    app.kubernetes.io/name: nginx-s3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: nginx-s3
    app.kubernetes.io/instance: release-name
---
# Source: nginx-s3/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-nginx-s3
  labels:
    helm.sh/chart: nginx-s3-0.1.1
    app.kubernetes.io/name: nginx-s3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nginx-s3
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nginx-s3
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-nginx-s3
      securityContext:
        {}
      containers:
        - name: nginx-s3
          env:
          - name: S3_BUCKET_NAME
            value: "name"
          - name: S3_ACCESS_KEY_ID
            value: "access"
          - name: S3_SECRET_KEY
            value: "secret"
          - name: S3_SERVER
            value: "localhost"
          - name: S3_SERVER_PORT
            value: "443"
          - name: S3_SERVER_PROTO
            value: "https"
          - name: S3_REGION
            value: "fra"
          - name: S3_STYLE
            value: "virtual"
          - name: S3_DEBUG
            value: "false"
          - name: ALLOW_DIRECTORY_LIST
            value: "false"
          - name: PROVIDE_INDEX_PAGE
            value: "false"
          - name: AWS_SIGS_VERSION
            value:  "4"
          securityContext:
            {}
          image: "ghcr.io/nginxinc/nginx-s3-gateway/nginx-oss-s3-gateway:latest-20230110"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: nginx-s3/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-nginx-s3-test-connection"
  labels:
    helm.sh/chart: nginx-s3-0.1.1
    app.kubernetes.io/name: nginx-s3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-nginx-s3:80']
  restartPolicy: Never
