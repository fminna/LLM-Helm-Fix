---
# Source: camo/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-camo
  labels:
    app: camo
    helm.sh/chart: camo-0.1.1
    app.kubernetes.io/name: camo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.3.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: camo/templates/secret.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: release-name-camo
data:
  PORT: "ODA4MQ=="
  CAMO_HEADER_VIA: "TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NDsgcnY6OTAuMCkgR2Vja28vMjAxMDAxMDEgRmlyZWZveC85MC4w"
  CAMO_KEY: "eHh4"
  CAMO_LENGTH_LIMIT: "NTI0Mjg4MA=="
  CAMO_LOGGING_ENABLED: "ZGlzYWJsZWQ="
  CAMO_MAX_REDIRECTS: "NA=="
  CAMO_SOCKET_TIMEOUT: "MTA="
  CAMO_TIMING_ALLOW_ORIGIN: ""
  CAMO_HOSTNAME: "dW5rbm93bg=="
  CAMO_KEEP_ALIVE: "ZmFsc2U="
---
# Source: camo/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-camo
  labels:
    app: camo
    helm.sh/chart: camo-0.1.1
    app.kubernetes.io/name: camo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.3.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: camo
    app.kubernetes.io/instance: release-name
---
# Source: camo/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-camo
  labels:
    app: camo
    helm.sh/chart: camo-0.1.1
    app.kubernetes.io/name: camo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.3.1"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: camo
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app: camo
        helm.sh/chart: camo-0.1.1
        app.kubernetes.io/name: camo
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "2.3.1"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: release-name-camo
      securityContext:
        {}
      containers:
        - name: camo
          securityContext:
            {}
          image: "phntom/camo:2.3.1@sha256:a9b1304d6c71b8d5194ced992ebe77ef2f329f01b90d224c41b05fa874f87f05"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
          envFrom:
            - secretRef:
                name: release-name-camo
          livenessProbe:
            httpGet:
              path: /status
              port: http
          readinessProbe:
            httpGet:
              path: /status
              port: http
          resources:
            {}
---
# Source: camo/templates/hpa.yaml
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: release-name-camo
  labels:
    app: camo
    helm.sh/chart: camo-0.1.1
    app.kubernetes.io/name: camo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.3.1"
    app.kubernetes.io/managed-by: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: release-name-camo
  minReplicas: 1
  maxReplicas: 2
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 80
---
# Source: camo/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-camo-test-connection"
  labels:
    app: camo
    helm.sh/chart: camo-0.1.1
    app.kubernetes.io/name: camo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.3.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-camo:80']
  restartPolicy: Never
