---
# Source: tracing/templates/observability-selfcert.yaml
apiVersion: v1
kind: Secret
metadata:
  name: "jaeger-operator-service-cert"
type: kubernetes.io/tls
data:
  tls.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURvekNDQW91Z0F3SUJBZ0lSQUwwdU9tb1lSeUlLWG95eVBXWm1FYk13RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmMyVnNabk5wWjI1bFpDMXBjM04xWlhJd0hoY05NalF3TlRFMU1EZzBNelV5V2hjTgpNelF3TlRFek1EZzBNelV5V2pBbk1TVXdJd1lEVlFRREV4eHFZV1ZuWlhJdGIzQmxjbUYwYjNJdGMyVnlkbWxqClpTMWpaWEowTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE1ZzQ2VHFLd3BtQUoKSFZiakdRYmhRd1FYbVh3Ync3c1dkb2x6dU9Ra3RWY0h0YWo3Q1hIQ0twL1g3eGxLc0VXa0RrM0N2alZBMncragpTN3dpR29VZ2VvUThmUWRjUzM1WGxHWG0vTjhnUTZNU3laMlZTbXIwUzVGNG8zeGhNQlFyNUh5NWxPaURWMFAvCm9BamNsbUpKcE94bzBJSlM4RnFyQ01TM2VCdG54THJobWNBU1JBc2ZYck41TXpTcmxGOHF1TDdqTTNTbDZSeDMKQ2hpRWRualZwZFNlUUZzWlRSd2FlK2RKek1lT2o0Si92dXZqN0taU2pLMkhpK0Q0TnZKeVBMeGtaV0ZmeXVEZwpmVzFXd1pXSkNTQTJWd1lwWmdmZ3IyN2VPdGNGUzBLUHV0WVFEZnpsZ24yQzRMTUFPby9KTFhFaXZxTmJLMlBlCnFwanNxcHc0RXdJREFRQUJvNEhVTUlIUk1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlFrRmFneQprYnI2VWN0d0hFUUdKUHFid3AxVTdqQnhCZ05WSFJFRWFqQm9naXRxWVdWblpYSXRiM0JsY21GMGIzSXRkMlZpCmFHOXZheTF6WlhKMmFXTmxMbVJsWm1GMWJIUXVjM1pqZ2pscVlXVm5aWEl0YjNCbGNtRjBiM0l0ZDJWaWFHOXYKYXkxelpYSjJhV05sTG1SbFptRjFiSFF1YzNaakxtTnNkWE4wWlhJdWJHOWpZV3d3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFeDdjUW9nVERwNlBDa1pnV3o3a1MzaEZpYWwvSUxibW1aMFR3bmtwTEpSczRzcFBueG8xUmNVCmo0QXlVT2pUR3pLYnZpSk9JTzYvMTRVZ0JOY1QwVWVPNlRCMyt4VWFTNU9jUUg5TmlUNm0vcVkvK0xBUlhXU0YKMkNjUDI4SjFLRm9VMnNVckpDL2U0TnZqZXVvbUZodGVZTlJjZHB5Y040MHcvbThrMnZWOHhpR2YzWVhkUm5xawpsY3hhVTA4VmdyZFBSRThLRGxQM3BRVWJ3QWhJQ1JmemhvcFRNdGZ5K0pZU0srQ2FESnNkaUFhZWIxdlBVblVYClZKS3pqdVRGM2RBOXpqZXMrUVRUK08yYmpTTlNDSFJSenVQZ1BLYlRkV3RtdHU2Y2tFdmtXb0ppRnJwQTlLNksKU3pQaDNhV3RxM2d5S2QvUXdyRDlIenlkT0h0WmRxTT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
  tls.key: "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNWc0NlRxS3dwbUFKSFZiakdRYmhRd1FYbVh3Ync3c1dkb2x6dU9Ra3RWY0h0YWo3CkNYSENLcC9YN3hsS3NFV2tEazNDdmpWQTJ3K2pTN3dpR29VZ2VvUThmUWRjUzM1WGxHWG0vTjhnUTZNU3laMlYKU21yMFM1RjRvM3hoTUJRcjVIeTVsT2lEVjBQL29BamNsbUpKcE94bzBJSlM4RnFyQ01TM2VCdG54THJobWNBUwpSQXNmWHJONU16U3JsRjhxdUw3ak0zU2w2UngzQ2hpRWRualZwZFNlUUZzWlRSd2FlK2RKek1lT2o0Si92dXZqCjdLWlNqSzJIaStENE52SnlQTHhrWldGZnl1RGdmVzFXd1pXSkNTQTJWd1lwWmdmZ3IyN2VPdGNGUzBLUHV0WVEKRGZ6bGduMkM0TE1BT28vSkxYRWl2cU5iSzJQZXFwanNxcHc0RXdJREFRQUJBb0lCQVFDdm5ocmFubzAxWk1odwpjanlJaFZ6K21LZ2ZUY093SmlpZXNvejVqb2VMT3ZXeXNsMTR0ek9lOEVpWnlIZmdtamtEaGs3c2ZxQ1UyWm94Cm5WdDNYVHNPNjlWMUtHSkhheG9XT2JnY1A0UlV2YThBNDkvc1lEcy9XTHg4S04zVUl3SGl1V2UrQ2NVQm4vSUsKeTlrQW4rVlNGZnBwZWFNd3dqWWdTbk00Sjh1T1BCeGRuNzJxdWVmYnBTOWlPaTZvdk9xaFF1a3ZaNWRNSW5DNwpyaUh0Z2pHVURtd0NLRFo5a3VPKzlzejUzZEhCU3E1RmN2anljbzltUTc4cGZGWHhxeC9YQWNDVWxPbDQ5NkZmCm1DVmtxcjRpNHR1UGhFM2czbVc4ajlEYkJLejVRQXpLbTNWTHhBSjF0cERRRWRDNitCRlJTTDdkNkNvSFI5UW4KbEh2SlppRzVBb0dCQVB5WXNqM0djVE1qRThIdU84andEZWlQOXN3SXEyeDNjWDE1bU5IMnlCbzJwRm9TK1pnNgpSZEdoYVNvOHBwZExEQ0RXU0NhaHUzMDJ3dWhGdk9qTmJHZGlKVUhrZHN2RjRNd1h5dktoZnJSVW95QW1JbWZzCm40NC9OYThaUXZoaUxFRWZ6UHgxSE5QN2xtbHFRY0VoUlZ6ZTc0cWhQelVjQ2k5M05DdE5RcitYQW9HQkFPa24KeDNnb0VUQUZRVlVENHNLRnpUWW5ZY05PdnB1cXRzRkVLSk9oSzZTUXBoaUw1c3l3WmhUdjAvRDcveklHbHhJZwpoQytQRnNUYXc1NHl2cWl0Y2wxa0U2NHFpSDZoaGxGeWViWDFOODVZc2JmYlNFeGRibWgvZys1N3doZnhkVjc5CitpUHpOd1FUWVdkeFoydzh1M2poN1hjd1FKOFhRY0tSRHIzRFNwcmxBb0dBWUR1c2JHeVY0KzJSTVdrWnpjdm4KQUpzWVkxTktPK0NsbERBblVKYThWWUJMelNVOWdnbHhZQlFtaExqbW51MHdpYklaZXQ1VEY3a3RPR0NaUC9oRApQSC9md2VMUWY0Rzd5d1dsaEJxU3N4RXJ0S3ZTbjlVK1ZHc3dnSzBYSHBvSVVpZFRhVHNVNkk0SkY5QXJqUENvCkJHSEswUDN0bnNZMyt5MW02cmhjbmJFQ2dZQUhEOVpoMUV6WStIL0hGR3dNMmtLaDdrVnV4ZmJOL2ppMDE5eW0KeEEzdldSWSt6aFg2Z3lsRVh4TTdURmFwYkR1dEorRDVFOHRyd1BpRjFTR2pPRVdyZ0hsOEgvdXNZallRUjNoYQpRNGdpTHR1TEp4QWtoL3Z0SEZlaHBJdjNiNi9QWmIvcTBOWU13STJGdFpDZFhhV0wvc1BUaFZtZnQvT2M4Z25SClE1WUI1UUtCZ1FDWWxLVlVhOHhYeGNhM2tQM3huUUVRRjZHTSs3bDMrUXpnZmwzdXJrQ3BUMEVpMVFqMUdwTS8KSHBPNEhXTk5xVGtxbUpLc2JYMUVqcUJmNGdZbHl2dldNckp3ZzVoM1kxVmRNdHdDY2pMZ29XOFliVitBRU05YQpYc1p0dnhOZFFHK3lVOXpTZTJmZ3ZySEU2dVBFY2owMXQwK3lzcXk0aERKeFNYZTdrMkxsT0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
  ca.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQU5YT2VJRyszTTVsRXJXWHNROWl5WHN3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmMyVnNabk5wWjI1bFpDMXBjM04xWlhJd0hoY05NalF3TlRFMU1EZzBNelV5V2hjTgpNelF3TlRFek1EZzBNelV5V2pBY01Sb3dHQVlEVlFRREV4RnpaV3htYzJsbmJtVmtMV2x6YzNWbGNqQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMQzFyYlY5RkM3NTBSbGFlb3lib2RXRGxPZXEKbWhJUytUY01SVVI0OGJUZXFaWWx4bHJ2cGhURDlXMzVoaFExbEdtMzZBYTIrc0tOd01DakxKTHFVS05sLzdqdQpvZ1Zta2tjSkVUZDNxRmFtWFUrejN2Z053MEt6SDFtUCtHVlRpWWpQRitudTN6bmhWeVA5MkVRZzdQdll1VEE5Cmc5RkhkSmpOS0RJRHlmRzFxMUFPci9BVHlrNmFMaUNyTDRjMFl3VkxiS1BTR0JOU0NVbE1jVEJoSTdFc1piYXcKMW9HYmd1NXF0WHF2QzM2eTVRVHo3Z2sxRUNRSElXS0J4L0YrcFd0MWlmWm1xZTVNV3lrMndRR1RGa05LODlVcwpHakZFOG55b0F4WnhQSDNXeHVkRURpZkVIbXl1bE1QYkdEWGt3MmkwcDlTaXZHUmdtOEZQcjQrYjIxVUNBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUWtGYWd5a2JyNlVjdHdIRVFHSlBxYgp3cDFVN2pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWhOdlU1bU1kYkdqazByUXAzY3AxRDZVQktZeWpjaWMzCllTNzRsNzY1cXZnU2h1Mk1udEhEVkpmUjJvQXVGRVBpbGNETGN1ZE02d3pWYmpEUkRzc1cwZlVuUmNwbmErcTUKem10VEgvVTJhKzNSQ0YySDNIc2UxdDNLUFpSQ3BFMUZoWVBERGdVUjdiSFhhZDN6OTl4M2x1ZkxVMW1qN25KWgorZ1BtNTFxM3ZJNlJZZ3FqemtpUU5OM2Q4aUVFNmNNSUVLR3JtUVl3cTNmTUhzMURGaCtGN3MvM2xyZXhCMkxSCis1YTZtOFJnaEplTW5PN1JCKysrci9SVktXZUJjaTE4NTJMUDlUSytlbUUzMW9oM2IzcW5Pd3c1elhCc1R4RGUKTEJqaTJyUS9pTmt4eklIZGF2c2o4K2J3NjJKNGpXZDM4NUxiMGdDUXNXa2YrN1U1emVQcHpRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
---
# Source: tracing/templates/observability.yaml
apiVersion: v1
data:
  PROMETHEUS_SERVER_URL: ""
kind: Secret
metadata:
  name: jaeger-spm
  namespace: default
type: Opaque
---
# Source: tracing/templates/configmap-values.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubegems-release-name-values
  namespace: kubegems-installer
data:
  enabled: "true"
  jaeger.address: http://jaeger-query.default:16686
  jaeger.collector.address: jaeger-operator-jaeger-collector.default:14268
  jaeger.proto.address: jaeger-operator-jaeger-collector.default:14250
  jaeger.otlp.grpc.address: jaeger-operator-jaeger-collector.default:4317
  jaeger.otlp.http.address: jaeger-operator-jaeger-collector.default:4318
  jaeger.zipkin.address: jaeger-operator-jaeger-collector.default:9411
---
# Source: tracing/templates/observability.yaml
kind: Service
apiVersion: v1
metadata:
  name: jaeger-query  # jaeger-operator's svc name is jaeger-operator-jaeger-query,create a new service for jaeger-query
  namespace: default
spec:
  selector:
    app: jaeger
    app.kubernetes.io/component: query
  ports:
    - name: http-query
      port: 16686
      targetPort: 16686
    - name: grpc-query
      port: 16685
      targetPort: 16685
---
# Source: tracing/templates/elasticsearech.yaml
# https://github.com/elastic/helm-charts
apiVersion: plugins.kubegems.io/v1beta1
kind: Plugin
metadata:
  name: elasticsearch
  namespace: default
spec:
  kind: helm
  url: https://helm.elastic.co
  version: 7.17.1
  values:
    replicas: 1
    minimumMasterNodes: 1
    clusterHealthCheckParams: "wait_for_status=yellow&timeout=1s"
    # image: "docker.elastic.co/elasticsearch/elasticsearch"
    
    volumeClaimTemplate:
      storageClassName:
---
# Source: tracing/templates/observability.yaml
# https://github.com/jaegertracing/helm-charts
apiVersion: plugins.kubegems.io/v1beta1
kind: Plugin
metadata:
  name: jaeger-operator
  namespace: default
spec:
  kind: helm
  url: https://jaegertracing.github.io/helm-charts
  version: 2.34.0
  values:
    image:
      # repository: docker.io/jaegertracing/jaeger-operator
      
      tag: 1.36.0
    rbac:
      clusterRole: true
    certs:
      issuer:
        create: false
      certificate:
        create: false
    webhooks:
      mutatingWebhook:
        create: false
      validatingWebhook:
        create: false
    jaeger:
      create: true
      spec:
        strategy: production
        ingress:
          enabled: false
        query:
          # image: jaegertracing/jaeger-query
          
          metricsStorage:
            type: prometheus
        ingester:
          # image: jaegertracing/jaeger-ingester
          
        agent:
          # image: jaegertracing/jaeger-agent
          
        collector:
          # image: jaegertracing/jaeger-collector
          
          options:
            collector.zipkin.host-port: "9411"
        storage:
          secretName: jaeger-spm
          dependencies:
            enabled: false
          type: elasticsearch
          esIndexCleaner:
            # image: jaegertracing/jaeger-es-index-cleaner
            
          options:
            es:
              server-urls: http://elasticsearch-master.observability:9200
              num-shards: 5
              num-replicas: 1
              timeout: 30s
