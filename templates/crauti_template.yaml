---
# Source: crauti/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-crauti
  labels:
    helm.sh/chart: crauti-0.1.4
    app.kubernetes.io/name: crauti
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "main"
    app.kubernetes.io/managed-by: Helm
---
# Source: crauti/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-crauti
data:
  crauti.yaml: |
    
    gateway:
      autoHTTPSEnabled: false
      kubernetes:
        autodiscover: true
---
# Source: crauti/templates/serviceaccount.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-crauti-role
  namespace: default
  labels:
    helm.sh/chart: crauti-0.1.4
    app.kubernetes.io/name: crauti
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "main"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
    - ''
  resources:
    - 'services'
    - 'secrets'
  verbs: 
    - 'get'
    - 'watch'
    - 'list'
    - 'delete'
    - 'put'
---
# Source: crauti/templates/serviceaccount.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-crauti
  namespace: default
  labels:
    helm.sh/chart: crauti-0.1.4
    app.kubernetes.io/name: crauti
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "main"
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: release-name-crauti
  namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-crauti-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: crauti/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-crauti
  labels:
    helm.sh/chart: crauti-0.1.4
    app.kubernetes.io/name: crauti
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "main"
    app.kubernetes.io/managed-by: Helm
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
    - port: 443
      targetPort: 443
      protocol: TCP
      name: https
    - port: 8181
      targetPort: admin
      protocol: TCP
      name: admin
  externalTrafficPolicy: Local
  selector:
    app.kubernetes.io/name: crauti
    app.kubernetes.io/instance: release-name
---
# Source: crauti/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-crauti
  labels:
    helm.sh/chart: crauti-0.1.4
    app.kubernetes.io/name: crauti
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "main"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: crauti
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: crauti
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-crauti
      securityContext:
        {}
      containers:
        - name: crauti
          securityContext:
            {}
          image: "ghcr.io/ferama/crauti:main"
          imagePullPolicy: Always
          args: ["-c", "/crauti.yaml"]
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          ports:
            - name: https
              containerPort: 443
              protocol: TCP
          ports:
            - name: admin
              containerPort: 8181
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: admin
          readinessProbe:
            httpGet:
              path: /health
              port: admin
          resources:
            {}
          volumeMounts:
            - name: release-name-crauti
              mountPath: /crauti.yaml
              subPath: crauti.yaml
      volumes:
        - name: release-name-crauti
          configMap:
            name: release-name-crauti
---
# Source: crauti/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-crauti-test-connection"
  labels:
    helm.sh/chart: crauti-0.1.4
    app.kubernetes.io/name: crauti
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "main"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-crauti:80']
  restartPolicy: Never
