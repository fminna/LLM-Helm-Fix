---
# Source: akash-node/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: akash-node
  namespace: default
  labels:
    helm.sh/chart: akash-node-11.0.1
    app.kubernetes.io/name: akash-node
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.34.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: akash-node/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: akash-node-config
  namespace: default
  labels:
    helm.sh/chart: akash-node-11.0.1
    app.kubernetes.io/name: akash-node
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.34.1"
    app.kubernetes.io/managed-by: Helm
data:
  init.sh: |
    #!/bin/bash
    set -x
    
    #Install utils
    apt update && apt -y --no-install-recommends install ca-certificates curl jq > /dev/null 2>&1
    
    # fail fast should there be a problem installing curl / jq packages
    type curl || exit 1
    type jq || exit 1
    
    #Check if Home data exists, if not create it.
    if [ ! -d "$AKASH_HOME/data" ]
    then
    /bin/akash init --chain-id "$AKASH_CHAIN_ID" "$AKASH_MONIKER"
    cd "$AKASH_HOME/data" || exit
    curl -s "$AKASH_NET/genesis.json" > "$AKASH_HOME/config/genesis.json"
    if [ "$AKASH_STATESYNC_ENABLE" == true ]; then
      echo "state-sync is enabled, figure the right trust height & derive its hash"
    
      export SNAP_RPC1="https://akash-rpc.polkachu.com:443"
      export SNAP_RPC2="https://akash-rpc.polkachu.com:443"
    
      LATEST_HEIGHT=$(curl -Ls "$SNAP_RPC1/block" | jq -r .result.block.header.height)
      HEIGHT_OFFSET="2000"
      BLOCK_HEIGHT=$((LATEST_HEIGHT - HEIGHT_OFFSET))
      TRUST_HASH=$(curl -Ls "$SNAP_RPC1/block?height=$BLOCK_HEIGHT" | jq -r .result.block_id.hash)
    
      echo "TRUST HEIGHT: $BLOCK_HEIGHT"
      echo "TRUST HASH: $TRUST_HASH"
    
      export AKASH_STATESYNC_TRUST_HEIGHT=$BLOCK_HEIGHT
      export AKASH_STATESYNC_TRUST_HASH=$TRUST_HASH
    
      # Make sure we state-sync the node first if it has never been synced before
      export AKASH_HALT_HEIGHT=$LATEST_HEIGHT
      /bin/akash start
    
    else
      if [ "$AKASH_CHAIN_ID" == "akashnet-2" ]; then
        apt -y --no-install-recommends install aria2 lz4 liblz4-tool wget > /dev/null 2>&1
        case "$SNAPSHOT_PROVIDER" in
    
          "polkachu")
            SNAPSHOTS_DIR_URL="https://snapshots.polkachu.com/snapshots/"
            USER_AGENT="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
            LATEST=$(curl -s -A "$USER_AGENT" "$SNAPSHOTS_DIR_URL" | grep -oP 'akash/[^<]+\.tar\.lz4' | tail -n1)
            SNAPSHOT_URL="https://snapshots.polkachu.com/snapshots/"
            aria2c --out=snapshot.tar.lz4 --check-certificate=false --max-tries=99 --retry-wait=5 --always-resume=true --max-file-not-found=99 --conditional-get=true -s 8 -x 8 -k 1M -j 1 "${SNAPSHOT_URL}${LATEST}"
            lz4 -c -d snapshot.tar.lz4 | tar -x -C "$AKASH_HOME"
            rm -rf snapshot.tar.lz4
            ;;
    
          "autostake")
            SNAPSHOTS_DIR_URL="https://autostake.com/networks/akash/"
            USER_AGENT="Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0"
            SNAPSHOT_URL=$(curl -H "$USER_AGENT" -s "$SNAPSHOTS_DIR_URL" | grep -oP 'SNAP_URL="\K[^"]+')
            aria2c --out=snapshot.tar.lz4 --check-certificate=false --max-tries=99 --retry-wait=5 --always-resume=true --max-file-not-found=99 --conditional-get=true -s 8 -x 8 -k 1M -j 1 "${SNAPSHOT_URL}"
            lz4 -c -d snapshot.tar.lz4 | tar -x -C "$AKASH_HOME"
            rm -rf snapshot.tar.lz4
            ;;
    
          "c29r3")
            SNAP_NAME=$(curl -s https://snapshots.c29r3.xyz/akash/ | egrep -o ">$AKASH_CHAIN_ID.*tar" | tr -d ">")
            echo "Using default c29r3.xyz blockchain snapshot, https://snapshots.c29r3.xyz/akash/${SNAP_NAME}"
            aria2c --out=snapshot.tar --summary-interval 15 --check-certificate=false --max-tries=99 --retry-wait=5 --always-resume=true --max-file-not-found=99 --conditional-get=true -s 8 -x 8 -k 1M -j 1 "https://snapshots.c29r3.xyz/akash/${SNAP_NAME}"
            tar -xf snapshot.tar -C "$AKASH_HOME/data"
            rm -rf snapshot.tar
            ;;
    
          *)
            SNAPSHOTS_DIR_URL="https://snapshots.polkachu.com/snapshots/"
            USER_AGENT="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
            LATEST=$(curl -s -A "$USER_AGENT" "$SNAPSHOTS_DIR_URL" | grep -oP 'akash/[^<]+\.tar\.lz4' | tail -n1)
            SNAPSHOT_URL="https://snapshots.polkachu.com/snapshots/"
            aria2c --out=snapshot.tar.lz4 --check-certificate=false --max-tries=99 --retry-wait=5 --always-resume=true --max-file-not-found=99 --conditional-get=true -s 8 -x 8 -k 1M -j 1 "${SNAPSHOT_URL}${LATEST}"
            lz4 -c -d snapshot.tar.lz4 | tar -x -C "$AKASH_HOME"
            rm -rf snapshot.tar.lz4
            ;;
    
        esac
    
      fi
    fi
    else
      echo "Found Akash data folder!"
      cd "$AKASH_HOME/data" || exit
    fi
    
    if [[ $AKASH_DEBUG == "true" ]]; then sleep 5000; fi
---
# Source: akash-node/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: akash-node-1
  namespace: default
spec:
  type: ClusterIP
  ports:
    - port: 1317
      name: akashd-api
    - port: 9090
      name: akashd-grpc
    - port: 26656
      name: akashd-p2p
    - port: 26657
      name: akashd-rpc
  selector:
    akash.network/node: "1"
---
# Source: akash-node/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: akash-node-1
  namespace: default
  labels:
    app: akash-node
    akash.network/node: "1"
spec:
  replicas: 1
  serviceName: release-name-akash-node
  selector:
    matchLabels:
      app: akash-node
      akash.network/node: "1"
  template:
    metadata:
      labels:
        app: akash-node
        akash.network/node: "1"
    spec:
      serviceAccountName: akash-node
      securityContext:
        {}
      initContainers:
        - name: init
          securityContext:
            {}
          image: "ghcr.io/akash-network/node:0.34.1"
          command: [ "/bin/bash" , "/config/init.sh" ]
          imagePullPolicy: IfNotPresent
          env:
            - name: AKASH_MONIKER
              value: mynode-1
            - name: AKASH_NET
              value: https://raw.githubusercontent.com/akash-network/net/main/mainnet
            - name: AKASH_HOME
              value: /root/.akash
            - name: AKASH_CHAIN_ID
              value: akashnet-2
            - name: AKASH_KEYRING_BACKEND
              value: test
            - name: AKASH_P2P_PERSISTENT_PEERS
              value: 50a8d17be87e9d6eba882f570a08511771964450@45.77.101.198:26656,98af5fbf7c7af795f2a4dc1a7eeda9f321f894d6@135.125.188.63:26656,b0e948b8b27fae66e85ae10618ba4604e9659fea@135.181.210.168:26656,0856184236314db3504238fe358d168e8b61d5d7@31.149.41.153:26656,5a7599058e1bb208c6d8fe1e8e514d7bd6559980@146.59.81.92:29656,835c8aab295400dcf52e318f64894f60d84f83b2@185.233.106.174:26656,dda1f59957f767e20b0fc64b1c915b4799fc0cc5@159.223.201.93:26656,bd2525f1a86af8b1a3798c04387f47f0c0627d24@159.223.201.38:26656,c8950aa4b6b494f89c29a68a304567042e433563@167.235.179.241:12856,031ba3fcfc8d6d1fdbbf3a6dd17262d16a673e92@54.245.187.253:26656,1e8aaf3654887a05caeb0c1f73ce39e859e2f0c9@159.223.201.86:26656,7f71e85a843516945206db6274c3a37790f79266@37.252.186.202:26656,03493c979e821f9d047715b1aaec0ee969392c76@95.214.53.119:26656,506002b391be8d653b14f0162325b14929cac72e@51.81.49.176:12856,3f07dfcc2e539ac4c5d704fc00f5da5a9dedf01f@96.32.13.232:26656,429bc3976948bdf2b608c8a1cccc820b5399c751@43.201.193.50:26656,d834451f97cb050074b4db48735fb1d90a48bd32@65.108.42.198:36656,91ce6177c3a64052198792aca03d30672500998d@98.42.74.28:26656,5b96fcac981e7645b24902ae10be8e8e250144fb@174.142.205.1:6180,731394cfc97fca39d52334eb703413ada5273098@51.81.107.4:26656,6008975fd4d8a10499c67dff2eb9171e3e0e1b6a@65.109.115.223:12856,fcc2a26b28a92845d40d627268dc98a8311ddbf2@142.132.140.147:35656,aff5e4ac6c17965ea798b6d303b06ff19196835a@83.136.255.212:26656,7a6181cb53a90d6b620e917624ca5531960dc20d@37.27.50.60:26656,c124ce0b508e8b9ed1c5b6957f362225659b5343@134.65.192.97:26656,61686e588f0af938484579adbc2093adff06c7aa@86.32.118.151:26656,f9215993d48d8e0abc31cea931d573a45d201ac8@65.108.232.104:12856,34aa700c44f35abe8319428f173503ea7faee3b7@37.27.60.45:28656,fb2d2a8760ecc6d53a9ed371168899d26b181b04@195.201.247.42:26656,dd3ed7981c9b64294aacff0409a4dc1b5d736d6b@23.134.94.76:26656,37201c92625df2814a55129f73f10ab6aa2edc35@95.214.53.215:26696,fa7883cbb8236a50d395d7c38fa4c15d415fb17b@194.163.154.92:26656,58fe289b8c7ce4c8b4f626786efe44aefcbd1bb0@45.153.35.150:26656,d444cd6b2f45796ad21d69a00c7725bffb9191b8@84.252.129.17:26656,0d0161d3d43578cdd1aa764921bdb3d444d9a13d@108.160.204.254:26656,2f6331de7ffb5b4cc315c1eaf03040753b5a5c28@65.109.111.218:30856,66b74927d51888a25fe94bff2dfeaae125739f26@79.127.196.36:29656,c58852a0c6ee1d1a68b76e5a54a9dbce895065d9@162.55.245.149:2140,d0fc4c50a248e1eb2fd3ff2497ae52200db0104d@23.88.69.22:27566,43544bc781b88d6785420427926d86a5332940b3@142.132.131.184:26676,6adc00bef235246c90757547d5f0703d6a548460@178.128.82.28:26656,efb5ed102cfbcbd932e3256fef745e1016792cfe@38.68.134.103:26656,8f0ee28c95d091ea40667d1fcf616d7344500b17@208.97.227.20:26656,a7ae9fe76ed0ed6bbd35dc4c0f7dc7a9239f02c3@72.48.166.182:26656,f4235ffc06a57a2e3b0cbe91433ada73020ebb64@38.80.81.2:26656,7d290b7ad464423b908ef040d5214e54707fd607@54.38.92.122:26656,ebc272824924ea1a27ea3183dd0b9ba713494f83@195.3.223.168:26696,03e379863946297ac85c0856c2ad29052d91e5d7@79.116.44.13:26656,e36cc4f64feb2211a992a45b95236b3566c02f9b@172.110.97.188:26656,ecfa723fb13c59c1a9bb4d6f30b828831f49cc03@99.99.163.16:26656
            - name: AKASH_PRUNING
              value: "default"
            - name: AKASH_IAVL_DISABLE_FASTNODE
              value: "true"
            - name: AKASH_P2P_LADDR
              value: tcp://0.0.0.0:26656
            - name: AKASH_RPC_LADDR
              value: tcp://0.0.0.0:26657
            - name: AKASH_RPC_PPROF_LADDR
              value: 0.0.0.0:6060
            - name: AKASH_GRPC_ADDRESS
              value: 0.0.0.0:9090
            - name: AKASH_P2P_ADDR_BOOK_STRICT
              value: "false"
            - name: AKASH_ROSETTA_ENABLE
              value: "false"
            - name: AKASH_P2P_SEED_MODE
              value: "true"
            - name: AKASH_P2P_PEX
              value: "true"
            - name: AKASH_DEBUG
              value: "false"
            - name: AKASH_MINIMUM_GAS_PRICES
              value: "0.025uakt"
            - name: SNAPSHOT_PROVIDER
              value: "polkachu"
            - name: AKASH_API_ENABLE
              value: "false"
          ports:
            - containerPort: 1317
              name: akashd-api
            - containerPort: 9090
              name: akashd-grpc
            - containerPort: 26656
              name: akashd-p2p
            - containerPort: 26657
              name: akashd-rpc
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: true
            - name: home
              mountPath: "/root/.akash"
          resources:
            {}
      containers:
        - name: akash-node
          securityContext:
            {}
          image: "ghcr.io/akash-network/node:0.34.1"
          command: [ "/bin/akash" , "start" ]
          imagePullPolicy: IfNotPresent
          env:
            - name: AKASH_MONIKER
              value: mynode-1
            - name: AKASH_NET
              value: https://raw.githubusercontent.com/akash-network/net/main/mainnet
            - name: AKASH_HOME
              value: /root/.akash
            - name: AKASH_CHAIN_ID
              value: akashnet-2
            - name: AKASH_KEYRING_BACKEND
              value: test
            - name: AKASH_P2P_PERSISTENT_PEERS
              value: 50a8d17be87e9d6eba882f570a08511771964450@45.77.101.198:26656,98af5fbf7c7af795f2a4dc1a7eeda9f321f894d6@135.125.188.63:26656,b0e948b8b27fae66e85ae10618ba4604e9659fea@135.181.210.168:26656,0856184236314db3504238fe358d168e8b61d5d7@31.149.41.153:26656,5a7599058e1bb208c6d8fe1e8e514d7bd6559980@146.59.81.92:29656,835c8aab295400dcf52e318f64894f60d84f83b2@185.233.106.174:26656,dda1f59957f767e20b0fc64b1c915b4799fc0cc5@159.223.201.93:26656,bd2525f1a86af8b1a3798c04387f47f0c0627d24@159.223.201.38:26656,c8950aa4b6b494f89c29a68a304567042e433563@167.235.179.241:12856,031ba3fcfc8d6d1fdbbf3a6dd17262d16a673e92@54.245.187.253:26656,1e8aaf3654887a05caeb0c1f73ce39e859e2f0c9@159.223.201.86:26656,7f71e85a843516945206db6274c3a37790f79266@37.252.186.202:26656,03493c979e821f9d047715b1aaec0ee969392c76@95.214.53.119:26656,506002b391be8d653b14f0162325b14929cac72e@51.81.49.176:12856,3f07dfcc2e539ac4c5d704fc00f5da5a9dedf01f@96.32.13.232:26656,429bc3976948bdf2b608c8a1cccc820b5399c751@43.201.193.50:26656,d834451f97cb050074b4db48735fb1d90a48bd32@65.108.42.198:36656,91ce6177c3a64052198792aca03d30672500998d@98.42.74.28:26656,5b96fcac981e7645b24902ae10be8e8e250144fb@174.142.205.1:6180,731394cfc97fca39d52334eb703413ada5273098@51.81.107.4:26656,6008975fd4d8a10499c67dff2eb9171e3e0e1b6a@65.109.115.223:12856,fcc2a26b28a92845d40d627268dc98a8311ddbf2@142.132.140.147:35656,aff5e4ac6c17965ea798b6d303b06ff19196835a@83.136.255.212:26656,7a6181cb53a90d6b620e917624ca5531960dc20d@37.27.50.60:26656,c124ce0b508e8b9ed1c5b6957f362225659b5343@134.65.192.97:26656,61686e588f0af938484579adbc2093adff06c7aa@86.32.118.151:26656,f9215993d48d8e0abc31cea931d573a45d201ac8@65.108.232.104:12856,34aa700c44f35abe8319428f173503ea7faee3b7@37.27.60.45:28656,fb2d2a8760ecc6d53a9ed371168899d26b181b04@195.201.247.42:26656,dd3ed7981c9b64294aacff0409a4dc1b5d736d6b@23.134.94.76:26656,37201c92625df2814a55129f73f10ab6aa2edc35@95.214.53.215:26696,fa7883cbb8236a50d395d7c38fa4c15d415fb17b@194.163.154.92:26656,58fe289b8c7ce4c8b4f626786efe44aefcbd1bb0@45.153.35.150:26656,d444cd6b2f45796ad21d69a00c7725bffb9191b8@84.252.129.17:26656,0d0161d3d43578cdd1aa764921bdb3d444d9a13d@108.160.204.254:26656,2f6331de7ffb5b4cc315c1eaf03040753b5a5c28@65.109.111.218:30856,66b74927d51888a25fe94bff2dfeaae125739f26@79.127.196.36:29656,c58852a0c6ee1d1a68b76e5a54a9dbce895065d9@162.55.245.149:2140,d0fc4c50a248e1eb2fd3ff2497ae52200db0104d@23.88.69.22:27566,43544bc781b88d6785420427926d86a5332940b3@142.132.131.184:26676,6adc00bef235246c90757547d5f0703d6a548460@178.128.82.28:26656,efb5ed102cfbcbd932e3256fef745e1016792cfe@38.68.134.103:26656,8f0ee28c95d091ea40667d1fcf616d7344500b17@208.97.227.20:26656,a7ae9fe76ed0ed6bbd35dc4c0f7dc7a9239f02c3@72.48.166.182:26656,f4235ffc06a57a2e3b0cbe91433ada73020ebb64@38.80.81.2:26656,7d290b7ad464423b908ef040d5214e54707fd607@54.38.92.122:26656,ebc272824924ea1a27ea3183dd0b9ba713494f83@195.3.223.168:26696,03e379863946297ac85c0856c2ad29052d91e5d7@79.116.44.13:26656,e36cc4f64feb2211a992a45b95236b3566c02f9b@172.110.97.188:26656,ecfa723fb13c59c1a9bb4d6f30b828831f49cc03@99.99.163.16:26656
            - name: AKASH_PRUNING
              value: "default"
            - name: AKASH_IAVL_DISABLE_FASTNODE
              value: "true"
            - name: AKASH_P2P_LADDR
              value: tcp://0.0.0.0:26656
            - name: AKASH_RPC_LADDR
              value: tcp://0.0.0.0:26657
            - name: AKASH_RPC_PPROF_LADDR
              value: 0.0.0.0:6060
            - name: AKASH_GRPC_ADDRESS
              value: 0.0.0.0:9090
            - name: AKASH_P2P_ADDR_BOOK_STRICT
              value: "false"
            - name: AKASH_ROSETTA_ENABLE
              value: "false"
            - name: AKASH_P2P_SEED_MODE
              value: "true"
            - name: AKASH_P2P_PEX
              value: "true"
            - name: AKASH_DEBUG
              value: "false"
            - name: AKASH_MINIMUM_GAS_PRICES
              value: "0.025uakt"
            - name: SNAPSHOT_PROVIDER
              value: "polkachu"
            - name: AKASH_API_ENABLE
              value: "false"
          ports:
            - containerPort: 1317
              name: akashd-api
            - containerPort: 9090
              name: akashd-grpc
            - containerPort: 26656
              name: akashd-p2p
            - containerPort: 26657
              name: akashd-rpc
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: true
            - name: home
              mountPath: "/root/.akash"
          resources:
            {}
      volumes:
        - name: config
          configMap:
            name: akash-node-config
        - name: home
          emptyDir: {}
