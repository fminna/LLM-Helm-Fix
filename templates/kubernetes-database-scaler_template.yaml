---
# Source: kubernetes-database-scaler/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: default:vpa-creator
rules:
  - apiGroups:
      - "autoscaling.k8s.io"
    resources:
      - verticalpodautoscalers
    verbs:
      - delete
      - create
---
# Source: kubernetes-database-scaler/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: default
subjects:
- kind: ServiceAccount
  namespace: default
  name: default
roleRef:
  kind: ClusterRole
  name: edit
  apiGroup: rbac.authorization.k8s.io
---
# Source: kubernetes-database-scaler/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: default:vpa-actor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:vpa-actor
subjects:
  - kind: ServiceAccount
    namespace: default
    name: default
---
# Source: kubernetes-database-scaler/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: default:vpa-creator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: default:vpa-creator
subjects:
  - kind: ServiceAccount
    namespace: default
    name: default
---
# Source: kubernetes-database-scaler/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kubernetes-database-scaler
  labels:
    helm.sh/chart: kubernetes-database-scaler-0.1.0
    app.kubernetes.io/name: kubernetes-database-scaler
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.26"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubernetes-database-scaler
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubernetes-database-scaler
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: kubernetes-database-scaler
          securityContext:
            {}
          image: "dvdlevanon/kubernetes-database-scaler:v0.0.26"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
          - name: KUBERNETES_DATABASE_SCALER_DATABASE_DRIVER
            value: 
          - name: KUBERNETES_DATABASE_SCALER_DATABASE_NAME
            value: 
          - name: KUBERNETES_DATABASE_SCALER_DATABASE_PORT
            value: ""
          - name: KUBERNETES_DATABASE_SCALER_DATABASE_HOST
            value: 
          - name: KUBERNETES_DATABASE_SCALER_DATABASE_USERNAME
            value: 
          - name: KUBERNETES_DATABASE_SCALER_DATABASE_PASSWORD
            value: 
          - name: KUBERNETES_DATABASE_SCALER_DATABASE_USERNAME_FILE
            value: 
          - name: KUBERNETES_DATABASE_SCALER_DATABASE_PASSWORD_FILE
            value: 
          - name: KUBERNETES_DATABASE_SCALER_TABLE_NAME
            value: 
          - name: KUBERNETES_DATABASE_SCALER_SQL_CONDITION
            value: 
          - name: KUBERNETES_DATABASE_SCALER_ORIGINAL_DEPLOYMENT_NAMESPACE
            value: 
          - name: KUBERNETES_DATABASE_SCALER_ORIGINAL_DEPLOYMENT_NAME
            value: 
          - name: KUBERNETES_DATABASE_SCALER_ORIGINAL_VPA_NAME
            value: 
          - name: KUBERNETES_DATABASE_SCALER_TARGET_DEPLOYMENT_NAME
            value: 
          - name: KUBERNETES_DATABASE_SCALER_ENVIRONMENT
            value: 
          - name: KUBERNETES_DATABASE_SCALER_CHECK_INTERVAL
            value: "10"
          resources:
            {}
