---
# Source: edgedatabrokerarm/templates/vernemq/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-edgedatabrokerarm-vernemq
  namespace: default
  labels:
    helm.sh/chart: edgedatabrokerarm-1.0.0
    app.kubernetes.io/name: edgedatabrokerarm
    app.kubernetes.io/instance: release-name
    enabler: edgedatabrokerarm
    app.kubernetes.io/component: vernemq
    isMainInterface: "yes"
    tier: external
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: edgedatabrokerarm/templates/mqttexplorer/cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mqttexplorer-configmap
  namespace: default
data:
  settings.json: |
    {
      "ConnectionManager_connections": {
        "assist-iot": {
          "configVersion": 1,
          "certValidation": false,
          "clientId": "assist-iot-db916df0",
          "id": "assist-iot",
          "name": "assist-iot",
          "encryption": false,
          "subscriptions": [
            {
              "topic": "#",
              "qos": 0
            },
            {
              "topic": "$SYS/#",
              "qos": 0
            }
          ],
          "type": "mqtt",
          "host": "host.docker.internal",
          "protocol": "ws"
        }
      }
    }
---
# Source: edgedatabrokerarm/templates/frscript/pv.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
#  name: targetapi-persistent-volume
  name: release-name-edgedatabrokerarm-frscript-volume
  labels:
#    type: local
#    app: targetapi
    helm.sh/chart: edgedatabrokerarm-1.0.0
    app.kubernetes.io/name: edgedatabrokerarm
    app.kubernetes.io/instance: release-name
    enabler: edgedatabrokerarm
    app.kubernetes.io/component: frscript
    isMainInterface: "no"
    tier: internal
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  volumeMode: Filesystem
  capacity:
    storage: 256Mi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/frrules"
  persistentVolumeReclaimPolicy: Retain
---
# Source: edgedatabrokerarm/templates/frscript/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
#  name: targetapi-persistent-volume-claim
  name: release-name-edgedatabrokerarm-frscript-volume-claim
  labels:
#    app: targetapi
    helm.sh/chart: edgedatabrokerarm-1.0.0
    app.kubernetes.io/name: edgedatabrokerarm
    app.kubernetes.io/instance: release-name
    enabler: edgedatabrokerarm
    app.kubernetes.io/component: frscript
    isMainInterface: "no"
    tier: internal
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 256Mi
  selector:
    matchLabels:
      pv: frscript-persistent-volume
---
# Source: edgedatabrokerarm/templates/vernemq/role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: "release-name-edgedatabrokerarm-vernemq"
  namespace: default
  labels:
    helm.sh/chart: edgedatabrokerarm-1.0.0
    app.kubernetes.io/name: edgedatabrokerarm
    app.kubernetes.io/instance: release-name
    enabler: edgedatabrokerarm
    app.kubernetes.io/component: vernemq
    isMainInterface: "yes"
    tier: external
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "watch", "list"]
  - apiGroups: ["apps"]
    resources: ["statefulsets"]
    verbs: ["get"]
---
# Source: edgedatabrokerarm/templates/vernemq/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-edgedatabrokerarm-vernemq
  namespace: "default"
  labels:
    helm.sh/chart: edgedatabrokerarm-1.0.0
    app.kubernetes.io/name: edgedatabrokerarm
    app.kubernetes.io/instance: release-name
    enabler: edgedatabrokerarm
    app.kubernetes.io/component: vernemq
    isMainInterface: "yes"
    tier: external
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: serviceaccount
    namespace: "default"
roleRef:
  kind: Role 
  name: release-name-edgedatabrokerarm-vernemq
  apiGroup: rbac.authorization.k8s.io
---
# Source: edgedatabrokerarm/templates/frscript/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-edgedatabrokerarm-frscript
  namespace: "default"
  labels:
    helm.sh/chart: edgedatabrokerarm-1.0.0
    app.kubernetes.io/name: edgedatabrokerarm
    app.kubernetes.io/instance: release-name
    enabler: edgedatabrokerarm
    app.kubernetes.io/component: frscript
    isMainInterface: "no"
    tier: internal
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - name: api
      port: 9877
      targetPort: 9877
      protocol: TCP
    - name: metrics
      port: 8000
      targetPort: 8000
      protocol: TCP
  selector:
    app.kubernetes.io/name: edgedatabrokerarm
    app.kubernetes.io/instance: release-name
    enabler: edgedatabrokerarm
    app.kubernetes.io/component: frscript
    isMainInterface: "no"
    tier: internal
---
# Source: edgedatabrokerarm/templates/vernemq/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-edgedatabrokerarm-vernemq-headless
  namespace: "default"
  labels:
    helm.sh/chart: edgedatabrokerarm-1.0.0
    app.kubernetes.io/name: edgedatabrokerarm
    app.kubernetes.io/instance: release-name
    enabler: edgedatabrokerarm
    app.kubernetes.io/component: vernemq
    isMainInterface: "yes"
    tier: external
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: mqtt
      port: 1883
      targetPort: 1883
      protocol: TCP
    - name: ws
      port: 9001
      targetPort: 9001
      protocol: TCP
    - name: prometheus
      port: 8888
      targetPort: 8888
      protocol: TCP
  selector:
    app.kubernetes.io/name: edgedatabrokerarm
    app.kubernetes.io/instance: release-name
    enabler: edgedatabrokerarm
    app.kubernetes.io/component: vernemq
    isMainInterface: "yes"
    tier: external
---
# Source: edgedatabrokerarm/templates/vernemq/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-edgedatabrokerarm-vernemq
  namespace: "default"
  labels:
    helm.sh/chart: edgedatabrokerarm-1.0.0
    app.kubernetes.io/name: edgedatabrokerarm
    app.kubernetes.io/instance: release-name
    enabler: edgedatabrokerarm
    app.kubernetes.io/component: vernemq
    isMainInterface: "yes"
    tier: external
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: NodePort
  ports:
    - name: mqtt
      port: 1883
      targetPort: 1883
      protocol: TCP
    - name: ws
      port: 9001
      targetPort: 9001
      protocol: TCP
    - name: prometheus
      port: 8888
      targetPort: 8888
      protocol: TCP
  selector:
    app.kubernetes.io/name: edgedatabrokerarm
    app.kubernetes.io/instance: release-name
    enabler: edgedatabrokerarm
    app.kubernetes.io/component: vernemq
    isMainInterface: "yes"
    tier: external
---
# Source: edgedatabrokerarm/templates/frscript/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-edgedatabrokerarm-frscript
  namespace: "default"
  labels:
    helm.sh/chart: edgedatabrokerarm-1.0.0
    app.kubernetes.io/name: edgedatabrokerarm
    app.kubernetes.io/instance: release-name
    enabler: edgedatabrokerarm
    app.kubernetes.io/component: frscript
    isMainInterface: "no"
    tier: internal
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: edgedatabrokerarm
      app.kubernetes.io/instance: release-name
      enabler: edgedatabrokerarm
      app.kubernetes.io/component: frscript
      isMainInterface: "no"
      tier: internal
  template:
    metadata:
      labels:
        helm.sh/chart: edgedatabrokerarm-1.0.0
        app.kubernetes.io/name: edgedatabrokerarm
        app.kubernetes.io/instance: release-name
        enabler: edgedatabrokerarm
        app.kubernetes.io/component: frscript
        isMainInterface: "no"
        tier: internal
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      securityContext:
        {}
      containers:
        - name: frscript
          securityContext:
            {}
          image: "gitlab.assist-iot.eu:5050/enablers-registry/public/edb/frscript-arm:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: api
              containerPort: 9877
              protocol: TCP
            - name: metrics
              containerPort: 8000
              protocol: TCP
          resources:
            {}
          env:
            - name: FR_EXPORTER_PORT
              value: "8000"
            - name: FR_API_PORT
              value: "9877"
            - name: FR_SCRIPT_HOST
              value: release-name-edgedatabrokerarm-vernemq.default.svc.cluster.local
            - name: FR_SCRIPT_PORT
              #value: "1883"
              value: "1883"
            - name: FR_SCRIPT_SSL_ENABLED
              value: "False"
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: FR_SCRIPT_CLIENT_ID
              value: "frscript-client"
            - name: FR_SCRIPT_USERNAME
              value: "frscript-user"
            - name: FR_SCRIPT_PASSWORD
              value: "password123"

          volumeMounts:
# here
            - name: frscript-volume
              mountPath: /frrules
      volumes:
# and here
        - name: frscript-volume
          persistentVolumeClaim:
              claimName: release-name-edgedatabrokerarm-frscript-volume-claim
---
# Source: edgedatabrokerarm/templates/vernemq/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-edgedatabrokerarm-vernemq
  namespace: "default"
  labels:
    helm.sh/chart: edgedatabrokerarm-1.0.0
    app.kubernetes.io/name: edgedatabrokerarm
    app.kubernetes.io/instance: release-name
    enabler: edgedatabrokerarm
    app.kubernetes.io/component: vernemq
    isMainInterface: "yes"
    tier: external
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: release-name-edgedatabrokerarm-vernemq-headless
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: edgedatabrokerarm
      app.kubernetes.io/instance: release-name
      enabler: edgedatabrokerarm
      app.kubernetes.io/component: vernemq
      isMainInterface: "yes"
      tier: external
  template:
    metadata:
      labels:
        helm.sh/chart: edgedatabrokerarm-1.0.0
        app.kubernetes.io/name: edgedatabrokerarm
        app.kubernetes.io/instance: release-name
        enabler: edgedatabrokerarm
        app.kubernetes.io/component: vernemq
        isMainInterface: "yes"
        tier: external
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: release-name-edgedatabrokerarm-vernemq
      securityContext:
        {}
      containers:
        - name: vernemq
          securityContext:
            {}
          image: "gitlab.assist-iot.eu:5050/enablers-registry/public/edb/vernemq-arm:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: mqtt
              containerPort: 1883
              protocol: TCP
            - name: mqtts
              containerPort: 8883
              protocol: TCP
            - name: ws
              containerPort: 9001
              protocol: TCP
            - name: wss
              containerPort: 9002
              protocol: TCP
            - name: prometheus
              containerPort: 8888
              protocol: TCP
          resources:
            {}
          env:
            - name: DOCKER_VERNEMQ_ALLOW_ANONYMOUS
              value: "on"
            - name: DOCKER_VERNEMQ_ALLOW_PUBLISH_DURING_NETSPLIT
              value: "on"
            - name: DOCKER_VERNEMQ_ALLOW_REGISTER_DURING_NETSPLIT
              value: "on"
            - name: DOCKER_VERNEMQ_ALLOW_SUBSCRIBE_DURING_NETSPLIT
              value: "on"
            - name: DOCKER_VERNEMQ_ALLOW_UNSUBSCRIBE_DURING_NETSPLIT
              value: "on"
            - name: DOCKER_VERNEMQ_LISTENER__WS__DEFAULT
              value: "0.0.0.0:9001"
          volumeMounts:
            - name: data
              mountPath: /path/in/container

            - name: logs
              mountPath: /vernemq/log
            - name: data
              mountPath: /vernemq/data

      volumes:

        - name: logs
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "50Mi"
