---
# Source: puppetdb/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-puppetdb
  labels:
    app.kubernetes.io/name: puppetdb
    helm.sh/chart: puppetdb-0.11.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
stringData:
  autosign_psk: ""
---
# Source: puppetdb/templates/puppetdb-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-puppetdb
  labels:
    app.kubernetes.io/name: puppetdb
    helm.sh/chart: puppetdb-0.11.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  puppetdb.ini: |-
    [global]
    vardir = /opt/puppetlabs/server/data/puppetdb
    
    [command-processing]
    
    [database]
    subname = //postgresql:5432/puppetdb
    username = puppetdb
    password = puppetdb
    
    [jetty]
    host = 127.0.0.1
    port = 8080
    ssl-host = 0.0.0.0
    ssl-port = 8081
    ssl-key = /etc/puppetlabs/puppet/ssl/private_keys/puppetdb.pem
    ssl-cert = /etc/puppetlabs/puppet/ssl/certs/puppetdb.pem
    ssl-ca-cert = /etc/puppetlabs/puppet/ssl/certs/ca.pem
    
    [nrepl]
    enabled = false
    port = 8082
    host = 127.0.0.1
    
  metrics.conf: |-
    metrics: {
        # a server id that will be used as part of the namespace for metrics produced
        # by this server
        server-id: puppetdb
        registries: {
            puppetserver: {
                # specify metrics to allow in addition to those in the default list
                #metrics-allowed: ["compiler.compile.production"]
    
                reporters: {
                    # enable or disable JMX metrics reporter
                    jmx: {
                        enabled: true
                    }
                    # enable or disable Graphite metrics reporter
                    graphite: {
                        enabled: true
                    }
                }
            }
        }
    
        # this section is used to configure settings for reporters that will send
        # the metrics to various destinations for external viewing
        reporters: {
            graphite: {
                # graphite host
                host: "localhost"
                # graphite metrics port
                port: 2003
                # how often to send metrics to graphite
                update-interval-seconds: 5
            }
        }
        metrics-webservice: {
            jolokia: {
                # Enable or disable the Jolokia-based metrics/v2 endpoint.
                # Default is true.
                # enabled: false
    
                # Configure any of the settings listed at:
                #   https://jolokia.org/reference/html/agents.html#war-agent-installation
                servlet-init-params: {
                    # Specify a custom security policy:
                    #  https://jolokia.org/reference/html/security.html
                    policyLocation: "file:///etc/puppetlabs/puppetdb/jolokia-access.xml"
                    debug: "true"
                    allowErrorDetails: "false"
                }
            }
        }
    }
---
# Source: puppetdb/templates/puppetdb-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-puppetdb-postgresql
  labels:
    app.kubernetes.io/name: puppetdb
    helm.sh/chart: puppetdb-0.11.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  postgresql.crt: |-
---
# Source: puppetdb/templates/puppetdb-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-puppetdb-jmx-exporter
  labels:
    app.kubernetes.io/name: puppetdb
    helm.sh/chart: puppetdb-0.11.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |-
    ---
    whitelistObjectNames:
      - puppetlabs.puppetdb.population:name=num-nodes
      - puppetlabs.puppetdb.population:name=num-resources
      - puppetlabs.puppetdb.population:name=avg-resources-per-node
      - puppetlabs.puppetdb.population:name=pct-resource-dupes
      - puppetlabs.puppetdb.database:*
      - puppetlabs.puppetdb.mq:*
      - puppetlabs.puppetdb.storage:name=duplicate-pct
      - puppetlabs.puppetdb.storage:name=gc-time
      - java.lang:type=Memory
      - java.lang:type=OperatingSystem
      - java.lang:type=Threading
---
# Source: puppetdb/templates/puppetdb-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-puppetdb-jolokia
  labels:
    app.kubernetes.io/name: puppetdb
    helm.sh/chart: puppetdb-0.11.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  jolokia-access.xml: |-
    <?xml version="1.0" encoding="utf-8"?>
    
    <restrict>
      <remote>
        <host>127.0.0.1</host>
      </remote>
    
      <commands>
        <command>read</command>
        <command>list</command>
        <command>version</command>
        <command>search</command>
      </commands>
    
      <mbean>
        <name>puppetlabs.puppetdb.population:name=num-nodes</name>
        <attribute mode="read">Value</attribute>
        <operation>objectName</operation>
      </mbean>
    </restrict>
---
# Source: puppetdb/templates/prometheus-puppetdb-exporter-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-puppetdb-prometheus-puppetdb-exporter
  labels:
    app.kubernetes.io/name: prometheus-puppetdb-exporter
    helm.sh/chart: puppetdb-0.11.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9121"
spec:
  type: ClusterIP
  ports:
    - port: 9121
      targetPort: metrics
      protocol: TCP
      name: metrics

  selector:
    app.kubernetes.io/name: prometheus-puppetdb-exporter
    app.kubernetes.io/instance: release-name
---
# Source: puppetdb/templates/puppetdb-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-puppetdb
  labels:
    app.kubernetes.io/name: puppetdb
    helm.sh/chart: puppetdb-0.11.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8081
      targetPort: http
      protocol: TCP
      name: http
    - port: 9080
      targetPort: metrics
      protocol: TCP
      name: metrics

  selector:
    app.kubernetes.io/name: puppetdb
    app.kubernetes.io/instance: release-name
---
# Source: puppetdb/templates/prometheus-puppetdb-exporter-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-puppetdb-prometheus-puppetdb-exporter
  labels:
    app.kubernetes.io/name: prometheus-puppetdb-exporter
    helm.sh/chart: puppetdb-0.11.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus-puppetdb-exporter
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: prometheus-puppetdb-exporter
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
        - name: puppetdb-autosign
          image: "docker.io/puppet/puppet-agent:6.15.0"
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c"]
          args:
            - "psk=$(cat /run/secrets/autosign_psk); hostname=$(puppet config print certname | tr -d '\n'); echo \"custom_attributes:\n  1.2.840.113549.1.9.7: 'hashed;$(echo -n $psk/$hostname/puppetdb/production | openssl dgst -binary -sha256 | openssl base64)'\nextension_requests:\n  pp_role: 'puppetdb'\n  pp_environment: 'production'\" > /etc/puppetlabs/puppet/csr_attributes.yaml; puppet ssl submit_request --environment production --server puppetserver --certificate_revocation=false --waitforcert 60 --confdir /etc/puppetlabs/puppet; cd /etc/puppetlabs/puppet/ssl && cp private_keys/$hostname.pem private_keys/prometheus-puppetdb-exporter.pem && cp certs/$hostname.pem certs/prometheus-puppetdb-exporter.pem ; mv /etc/puppetlabs/puppet/ssl/* /srv/puppetssl/"
          env:
            - name: HOME
              value: /tmp
          volumeMounts:
            - mountPath: /run/secrets/autosign_psk
              name: secrets
              subPath: autosign_psk
            - mountPath: /etc/puppetlabs/puppet
              name: confdir
            - mountPath: /srv/puppetssl
              name: ssldir
          resources:
            {}
      containers:
        - name: prometheus-puppetdb-exporter
          image: "docker.io/camptocamp/prometheus-puppetdb-exporter:latest"
          ports:
            - name: metrics
              containerPort: 9635
              protocol: TCP
          env:
            - name: "PUPPETDB_URL"
              value: "https://puppetdb:8081/pdb/query"
            - name: "PUPPETDB_KEY_FILE"
              value: "/etc/puppetlabs/puppet/ssl/private_keys/prometheus-puppetdb-exporter.pem"
            - name: "PUPPETDB_CERT_FILE"
              value: "/etc/puppetlabs/puppet/ssl/certs/prometheus-puppetdb-exporter.pem"
            - name: "PUPPETDB_CA_FILE"
              value: "/etc/puppetlabs/puppet/ssl/certs/ca.pem"
            - name: "PUPPETDB_LISTEN_ADDRESS"
              value: "0.0.0.0:9635"
            - name: "PUPPETDB_SCRAPE_INTERVAL"
              value: "5s"
            - name: "REPORT_METRICS_CATEGORIES"
              value: "resources,time,changes,events"
          volumeMounts:
            - mountPath: /etc/puppetlabs/puppet/ssl
              name: ssldir
          resources:
            {}
      volumes:
        - name: confdir
          emptyDir: {}
        - name: ssldir
          emptyDir: {}
        - name: secrets
          secret:
            secretName: release-name-puppetdb
---
# Source: puppetdb/templates/puppetdb-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-puppetdb
  labels:
    app.kubernetes.io/name: puppetdb
    helm.sh/chart: puppetdb-0.11.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: puppetdb
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: puppetdb
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
        - name: puppetdb-autosign
          image: "docker.io/puppet/puppet-agent:6.15.0"
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c"]
          args:
            - "psk=$(cat /run/secrets/autosign_psk); hostname=$(puppet config print certname | tr -d '\n'); echo \"custom_attributes:\n  1.2.840.113549.1.9.7: 'hashed;$(echo -n $psk/$hostname/puppetdb/production | openssl dgst -binary -sha256 | openssl base64)'\nextension_requests:\n  pp_role: 'puppetdb'\n  pp_environment: 'production'\" > /etc/puppetlabs/puppet/csr_attributes.yaml; puppet ssl submit_request --environment production --server puppetserver --certificate_revocation=false --dns_alt_names='release-name-puppetdb,' --waitforcert 60 --confdir /etc/puppetlabs/puppet; cd /etc/puppetlabs/puppet/ssl && cp private_keys/$hostname.pem private_keys/puppetdb.pem && cp certs/$hostname.pem certs/puppetdb.pem ; mv /etc/puppetlabs/puppet/ssl/* /srv/puppetssl/"
          env:
            - name: HOME
              value: /tmp
          volumeMounts:
            - mountPath: /run/secrets/autosign_psk
              name: secrets
              subPath: autosign_psk
            - mountPath: /etc/puppetlabs/puppet
              name: confdir
            - mountPath: /srv/puppetssl
              name: ssldir
          resources:
            {}
        - name: puppetdb-jmx-exporter
          image: camptocamp/jmx-exporter:0.12.0
          command: [ "cp", "/jmx_prometheus_javaagent-0.12.0.jar", "/jmx-exporter/" ]
          volumeMounts:
            - mountPath: /jmx-exporter
              name: jmx-exporter
          resources:
            {}
      containers:
        - name: puppetdb
          image: "docker.io/puppet/puppetdb:6.10.1"
          imagePullPolicy: Always
          command: [ "java" ]
          args: [
            "-Dlogappender=STDOUT", "-Djava.net.preferIPv4Stack=true",
            "-Djdk.tls.ephemeralDHKeySize=2048",
            "-Xms256m", "-Xmx256m", "-XX:+ExitOnOutOfMemoryError",
            "-javaagent:/jmx-exporter/jmx_prometheus_javaagent-0.12.0.jar=9080:/jmx-exporter/config.yaml",
            "-cp", "/opt/puppetlabs/server/apps/puppetdb/puppetdb.jar", "clojure.main",
            "-m", "puppetlabs.puppetdb.cli.services",
            "-c", "/etc/puppetlabs/puppetdb/conf.d/",
            "--bootstrap-config", "/etc/puppetlabs/puppetdb/bootstrap.cfg",
            "--restart-file", "/opt/puppetlabs/server/data/puppetdb/restartcounter"
            ]
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
            - name: metrics
              containerPort: 9080
              protocol: TCP
          volumeMounts:
            - mountPath: /opt/puppetlabs/server/data/puppetdb
              name: data
            - mountPath: /etc/puppetlabs/puppetdb/conf.d/
              name: conf-d
            - mountPath: /etc/puppetlabs/puppet/ssl
              name: ssldir
            - mountPath: /etc/puppetlabs/puppetdb/pgsql/
              name: postgresql
            - mountPath: /jmx-exporter
              name: jmx-exporter
            - mountPath: /jmx-exporter/config.yaml
              name: jmx-exporter-config
              subPath: config.yaml
            - mountPath: /etc/puppetlabs/puppetdb/jolokia-access.xml
              name: jolokia
              subPath: jolokia-access.xml
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - "curl --fail --resolve 'puppetdb:8080:127.0.0.1' 'http://puppetdb:8080/status/v1/services/puppetdb-status' | grep -q '\"state\":\"running\"'"
            initialDelaySeconds: 15
          resources:
            {}
      securityContext:
        supplementalGroups: [999]
      volumes:
        - name: jmx-exporter
          emptyDir: {}
        - name: data
          emptyDir: {}
        - name: confdir
          emptyDir: {}
        - name: ssldir
          emptyDir: {}
        - name: secrets
          secret:
            secretName: release-name-puppetdb
        - name: conf-d
          configMap:
            name: release-name-puppetdb
        - name: postgresql
          configMap:
            name: release-name-puppetdb-postgresql
        - name: jmx-exporter-config
          configMap:
            name: release-name-puppetdb-jmx-exporter
        - name: jolokia
          configMap:
            name: release-name-puppetdb-jolokia
---
# Source: puppetdb/templates/prometheus-puppetdb-exporter-servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: release-name-puppetdb-prometheus-puppetdb-exporter
  labels:
    app.kubernetes.io/name: prometheus-puppetdb-exporter
    helm.sh/chart: puppetdb-0.11.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  endpoints:
  - path: /metrics
    port: metrics
  namespaceSelector:
    matchNames:
    - "default"
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus-puppetdb-exporter
      app.kubernetes.io/instance: release-name
---
# Source: puppetdb/templates/puppetdb-servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: release-name-puppetdb
  labels:
    app.kubernetes.io/name: puppetdb
    helm.sh/chart: puppetdb-0.11.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  endpoints:
  - path: /metrics
    port: metrics
  namespaceSelector:
    matchNames:
    - "default"
  selector:
    matchLabels:
      app.kubernetes.io/name: puppetdb
      app.kubernetes.io/instance: release-name
