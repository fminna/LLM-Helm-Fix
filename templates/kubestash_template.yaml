---
# Source: kubestash/charts/kubestash-operator/templates/rbac/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kubestash-operator
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubestash/charts/kubestash-operator/templates/webhook-server/cert.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-kubestash-operator-webhook-cert
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU5YRmg0YUlKd3BLR2tRaElReTIrQ0F3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05URTFNRGN5TlRReVdoY05NelF3TlRFek1EY3lOVFF5V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmk3Cm1YL2xBQXNqYWdreWlYN0hnV1NlMVQvWHNYWEhWc3FieWFkdWQ5ekpkajE4NjJCOUdRdmtBY2U1aHQvZENDVlMKbjBQc2Vyemk3eWdFd1NZY2htOHBCbHlFTkJ1dmlWRDgrME9qZTA3VHMxck1rd3J1ZHF3MVd6N05BNzJ6aFUrSwprRTRFS2tPMFdCSGF3YWpUWEdvSkgvZksrd3VnbGh4T05IZzcvYUYyMExkZEdkRDlGN1RJZE4xRDZrWVd5NU43CnJ4TENEZ3JXUXVwSXIyeFhpMUYrSUt0NUtKQVhaUEFRdmwvaWQxT1VxQ2MrWlpZREppS1pqTUpkYSt4SU9pc2MKY2VIbENFZDBCMkF4aG00YWlTOFgwdmN1TXlwcjJ5c2ZoYzBYSXlQOHZhSkhHbmZhNUE3Q2gzK0pQemx5TDhnVwpnVzhpcUZHL0ZpaC8vdTNoQ2xFQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJTR1dTZmc2Uzd6Mm1LT0Q5ZkRyU1d0YldlM2RqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUEwNWRkbzlnNQpUM0VIcUo1YlRJbUxBZDNBTi80TlF0bzNsNTljc1ZnZ0U4RE4wYnVqMC9sMlhwN2JMY0YzWGt4L1RWczNUTWpuCmdKZmpOYUJsUFRhMHBtaTJJNXlqRlRYbWZQdjMyeERSZ1lxNzd4eVVPWEFZSlVaZ2R0NHl1amt5Q0QzUmtCQkoKdzg3UWVFQ1Y3L0VBV0dOV2JPV2wzNnZFbFNsYXJGWkdOUjhuSFNIYzlOeWQ0ZnlCcjAreE5ISkFnTFBhT2ZCOApTZmRrOENlUU1QZG1UYUo4MTNYRVZNWjh1WFVZWWo1cGVaenNrd21FR2NNWmpQZUpwQ3kyQjVxU3pmV1BZYXU4CkpwSnRQc3NGZmpxaUZ1ZTRYL1duTXpBZGxNUUEvNVNGRC9EQ3NOVi9BL0gyTDhpMG1aOFdIbGhMQndvWk5xcG4KMHZjbThrU2VtZ1k5aHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuVENDQW9XZ0F3SUJBZ0lSQUpNKytZNkJ3SnRGTWtsR3Yrb1JFcnN3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05URTFNRGN5TlRReVdoY05NelF3TlRFek1EY3lOVFF5V2pBeQpNVEF3TGdZRFZRUURFeWR5Wld4bFlYTmxMVzVoYldVdGEzVmlaWE4wWVhOb0xXOXdaWEpoZEc5eUxYZGxZbWh2CmIyc3dnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDL0lyNEV0Q0ZsSjFvaHNwNkwKcnhTZmN2MG9CSnFNbk03WmpYT092VXpMOXo1SnBKUjl0YzNxUnR4TmNlY0JZTjRjNHNFUHJHSC9pdjZ3Wi9MawpFZ3orUEQrMjNaNDR5NlJXVktUWHlEeGhlSzZxeXRXVzNpZ01kcVlSTTBuZFZMUlI1SERDem5QaGd2cHorMmJzClhLNWRqcU9nUStvd3MvVHFxVHBqRFBZSGhsVWp4bjRhR2wxRUoyN3NuY0JlblBuMXBUakVVclFhRDhuU1kwUXMKQkRVdkFmOHJyUTQwakd6TWNGQmt6RVFGNW1OQlk3bVZyR1VQZlo5MHVaVVVjMml3Z3I3cnpkN0FVcXIzYlFtYwpxTmFBbUVVZmh5SHJLZzdvb05XZ0I3R0U0aEdkZGxhTDNBR3cvbjFIdC9sOTBYdXNaWGJaYllHTHZ1Y1BlREY3Cm5zOVBBZ01CQUFHamdkSXdnYzh3RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUYKQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZJWlpKK0RwTHZQYQpZbzRQMThPdEphMXRaN2QyTUc4R0ExVWRFUVJvTUdhQ0wzSmxiR1ZoYzJVdGJtRnRaUzFyZFdKbGMzUmhjMmd0CmIzQmxjbUYwYjNJdGQyVmlhRzl2YXk1a1pXWmhkV3gwZ2pOeVpXeGxZWE5sTFc1aGJXVXRhM1ZpWlhOMFlYTm8KTFc5d1pYSmhkRzl5TFhkbFltaHZiMnN1WkdWbVlYVnNkQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQgpBQzFJa1hzL04zTkJ1YmZ0WE9kOWs2SXh3UEVFemh0R2V3VEhIaTZvbDhMZC9FZ0RzWmRJTlJiSXRldTZjVzh2ClZjVFhCM0tzY2duMFZBUW5TRTBLUGc4aXg1ZFpobGtYZGFHMTc4eHprTjloeGdSUTJiamhlVkRuTjBKYlA5WEsKSWFCa2Mvbmx3S21nZXlZRm5aN05DODFGVk5aM1lSbi9RYUxHd2g1VWJoTXJZTDJ2U1ZEbElybndPNmFqV1NrbApsNS9JRWhicGRNRHY5aFk3K0NuSzJHSmFDUitMdHBYdFZTaGF5cGdLOFZEUVJtdTFUdk9uaHNEbVpRTkNzelQ0CnRaNk51ZVdBN1YzVVhDZU1TMGNjTldLeGlNa3FkNE43cW82c0ZJM0xKTVRnVDZZNSs3TDZIZEZwQldEWk9oUGQKVGpCWVpTZjY5S09NVjVnNEpqZnY2WWs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdnlLK0JMUWhaU2RhSWJLZWk2OFVuM0w5S0FTYWpKek8yWTF6anIxTXkvYytTYVNVCmZiWE42a2JjVFhIbkFXRGVIT0xCRDZ4aC80citzR2Z5NUJJTS9qdy90dDJlT011a1ZsU2sxOGc4WVhpdXFzclYKbHQ0b0RIYW1FVE5KM1ZTMFVlUnd3czV6NFlMNmMvdG03Rnl1WFk2am9FUHFNTFAwNnFrNll3ejJCNFpWSThaKwpHaHBkUkNkdTdKM0FYcHo1OWFVNHhGSzBHZy9KMG1ORUxBUTFMd0gvSzYwT05JeHN6SEJRWk14RUJlWmpRV081CmxheGxEMzJmZExtVkZITm9zSUsrNjgzZXdGS3E5MjBKbktqV2dKaEZINGNoNnlvTzZLRFZvQWV4aE9JUm5YWlcKaTl3QnNQNTlSN2Y1ZmRGN3JHVjIyVzJCaTc3bkQzZ3hlNTdQVHdJREFRQUJBb0lCQVFDK2U0QkZyY0xPVFc2TQp3TGN5M0RSQVI5ZTFwd2ppODI5TjdxTm9jSTExaEJ4bVJnZmFWSEkzZFpFZCtWTFAwOXJuaksvOHo3NEdiMTR0Ckxoc3BZamZpc3VhSWRzcTFMWFhFdDZ4a2crQncvMVdMVG9PWVRDUTdiNDlHK3djMDliS1RIb2VtRFJ2OWRZdm0KUkhpcFBDQmxpcjdVL0hvTE9YenUwK0lsVG9odXE1NzlSWCs2bXkvcWx4M1hlV3RjZ1MvcHBjTmdTVjhhZllHRgpuQStBcUNhOTZqdDdaeWJMenJQeXIyd0dIRmVJcS94VENCMURxY3VxS0tVUEQ4U20xeDFQUG9uRldZSmNFVHdPCllFVTNpN24xSExWWFZ4M2dwd25hSEdIWjJvZk9CeXJiZ2dmWGlrbzlFN0YwY3pnOUg2MGlTNUl0RnBmcWZkbTYKcnlCSmpadTVBb0dCQU9pcmltZ0k1Ykt6RHZSRUZCQy9FL3pQNHNuNHhkVE5ycmZFNkRvbTBkbVhUT2RQVGlxNwpYM3ZDUnE2ZXZCTUl3RkJMdVlSa1pudldsekFGYzZXSVFIVFZ5UHpuUlZacE9VSWp4MS8zUDBQME9GTldiQXNqCi8vRDJMSUNLL2htdGRuaEs5eWozS3J0SE53K2VscDhreEVZSFZQMWNYTVN0NUZ5K3RzbWxBSWJ0QW9HQkFOSk4KQy9vb3lrdGlaOFpNMW91OVdtb280bnF2M0FEV3UvczdmSWcxWnJISXVOQzB3TDZFQmVSRXBqV1ZTVllmZTNaWQpPSjd6bnlXZ2tHMUx0Qi9SbzZ6bGpsZ3ZkS1JONGNsQUI3OStvTmd4TTl2dUJNa2h3aDNaT0IycWgyN05IS1dwCmtpTy9qbnRUZ1JmY1B6U3A0YlI5bG1HcHBzNldORnhXSzBRVXlvdXJBb0dBWUdmcm9tM0ZWMFVRTmpBYkxGRXcKSS9telc4S2puaWhYYzdlNERaaFdMVldldk4xRVl6cGVOdlpwdVNMMmhPQ0Vad0RwYnF6M05lclZuRVUyQk9tdQo0M3BObkZUcml3RndnekkyQTFKOE9WanhHYjdlWjhOVDRuRHVRWmpWN3FmTVJjMnlHWnhJYlc3MXBwZ3NpdVorCkdSSWlxaFJpTC9CcGhmQlQ1cnRpdTRVQ2dZQnFlSStEeTNyL3g0WjZveFJNRTBYZlVXdTRhYWljMUJyQUMxSDEKTS9RV05tVTdaUWZnYkw3KzNySzNsaWxXN1FGNDNSbHRnREltdnEvZ1pkOS83SWROVmJ0SGNsOC9nQjY3NFNzTApESFVxZjE2ZURsZGw3UzEySnk5OTlZUXoyS3lVUXRHMlA1bEhYdk9RdlBWVEdGOHBIaHd3dmMreDcrSDZqYlhCCjlqVEZtUUtCZ1FETjE0Wk9DRERXNjgrME1GZG1CaFZtRUhKN3FkdWxTMERDanl1cHpHWHhQMEFmYy8weFZBdTIKa1A4SWpCQkp2d1FhLzBaZFlUWEVidDhjdG85eFo4US9wNHY3S0hJZjZUQVNqbnp0TFA2cys3WUNtbTAxTG1JUAp6R3o3TWwzekU5dTlGUE9jcHdGMnhFVTFCbkdFVmVLR0lYRDgwSVkrN09OQWlPQTdTYzB2ZEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: kubestash/charts/kubestash-operator/templates/operator/configuration.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-kubestash-operator-config
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    apiVersion: config.kubestash.com/v1alpha1
    kind: KubeStashConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
      certDir: /var/serving-cert
    leaderElection:
      leaderElect: false
      resourceName: cba9d7ad.kubestash.com
    imagePullSecrets:
      []
    webhookInfo:
      validating:
        enable: true
        name: release-name-kubestash-operator
      mutating:
        enable: true
        name: release-name-kubestash-operator
    docker:
      registry: ghcr.io/kubestash
      image: kubestash
      tag: v0.8.1
    netVolAccessor:
      cpu: 100m
      memory: 128Mi
      user: 2000
      privilegedMode: false
---
# Source: kubestash/charts/kubestash-operator/templates/rbac/auth_proxy.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-kubestash-operator-auth-proxy
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
# Source: kubestash/charts/kubestash-operator/templates/rbac/cluster_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-kubestash-operator
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs: ["get", "create", "patch", "update"]
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    verbs: ["*"]
  - apiGroups:
      - core.kubestash.com
      - kubedb.com
      - snapshot.storage.k8s.io
    resources:
      - "*"
    verbs: ["*"]
  - apiGroups:
      - storage.kubestash.com
    resources:
      - "*"
    verbs: ["*"]
  - apiGroups:
      - appcatalog.appscode.com
    resources:
      - "*"
    verbs: ["get", "list", "watch"]
  - apiGroups:
      - config.kubestash.com
    resources:
      - "*"
    verbs: ["*"]
  - apiGroups:
      - addons.kubestash.com
    resources:
      - "*"
    verbs: [ "*" ]
  - apiGroups:
      - ""
    resources:
      - events
    verbs: ["create"]
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - statefulsets
      - replicasets
    verbs: ["get", "list", "watch"]
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs: ["get", "list", "watch", "create", "patch", "update"]
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
      - persistentvolumes
    verbs: ["get", "list", "watch", "create", "patch", "delete", "update"]
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]

  - apiGroups:
      - ""
    resources:
      - pods/exec
    verbs: ["create"]

  - apiGroups:
      - ""
    resources:
      - secrets
    verbs: ["get", "list", "create", "patch", "watch", "delete"]
  - apiGroups:
      - batch
    resources:
      - jobs
      - cronjobs
    verbs: ["get", "list", "watch", "create", "delete", "patch", "update"]
  - apiGroups:
      - ""
    resources:
      - nodes
      - namespaces
    verbs: [ "get", "list", "watch" ]
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs: ["get", "list", "watch", "create", "delete", "patch", "update"]
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterroles
      - roles
      - rolebindings
      - clusterrolebindings
    verbs: ["get","list", "watch", "create", "delete", "patch", "update"]
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshots
    verbs: ["get","delete"]
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs: [ "get", "list", "watch" ]
  - apiGroups:
      - catalog.kubedb.com
    resources:
      - elasticsearchs
    verbs: [ "get", "list", "watch" ]
  - apiGroups:
      - appcatalog.appscode.com
    resources:
      - appbindings
    verbs: [ "get", "list", "watch" ]
  - apiGroups:
      - elasticsearch.kubedb.com
    resources:
      - elasticsearchdashboards
    verbs: ["list"]
---
# Source: kubestash/charts/kubestash-operator/templates/rbac/metrics_reader.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-kubestash-operator-metrics-reader
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
# Source: kubestash/charts/kubestash-operator/templates/license/license-checker-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kubestash-operator-license-checker
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-checker
subjects:
- kind: ServiceAccount
  name: release-name-kubestash-operator
  namespace: default
---
# Source: kubestash/charts/kubestash-operator/templates/license/license-reader-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kubestash-operator-license-reader
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-reader
subjects:
- kind: ServiceAccount
  name: release-name-kubestash-operator
  namespace: default
---
# Source: kubestash/charts/kubestash-operator/templates/rbac/auth_proxy.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kubestash-operator-auth-proxy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-kubestash-operator-auth-proxy
subjects:
  - kind: ServiceAccount
    name: release-name-kubestash-operator
    namespace: default
---
# Source: kubestash/charts/kubestash-operator/templates/rbac/cluster_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kubestash-operator
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-kubestash-operator
subjects:
- kind: ServiceAccount
  name: release-name-kubestash-operator
  namespace: default
---
# Source: kubestash/charts/kubestash-operator/templates/rbac/leader_election.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-kubestash-operator-leader-election
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
# Source: kubestash/charts/kubestash-operator/templates/rbac/leader_election.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-kubestash-operator-leader-election
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-kubestash-operator-leader-election
subjects:
  - kind: ServiceAccount
    name: release-name-kubestash-operator
    namespace: default
---
# Source: kubestash/charts/kubestash-operator/templates/webhook-server/monitoring/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kubestash-operator
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    component: webhook-server
---
# Source: kubestash/charts/kubestash-operator/templates/webhook-server/webhook_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kubestash-operator-webhook
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    component: webhook-server
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
---
# Source: kubestash/charts/kubestash-operator/templates/operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kubestash-operator-operator
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
    component: operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubestash-operator
      app.kubernetes.io/instance: release-name
      component: operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubestash-operator
        app.kubernetes.io/instance: release-name
        component: operator
      annotations:
        checksum/apiregistration.yaml: 78d5c41a0d72a2fc8978f3ca957eb373343dfbe6d4caf3d115921371e9bfb837
    spec:
      imagePullSecrets:
        []
      serviceAccountName: release-name-kubestash-operator
      containers:
      - name: operator
        image: "ghcr.io/kubestash/kubestash:v0.8.1"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        args:
          - operator
          - --config=/var/config/config.yaml
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 100m
        volumeMounts:
        - name: kubestash-tmp-volume
          mountPath: /kubestash-tmp
        - name: config
          mountPath: /var/config
      volumes:
      - name: kubestash-tmp-volume
        emptyDir: {}
      - name: config
        configMap:
          name: release-name-kubestash-operator-config
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: kubestash/charts/kubestash-operator/templates/webhook-server/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kubestash-operator-webhook-server
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
    component: webhook-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubestash-operator
      app.kubernetes.io/instance: release-name
      component: webhook-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubestash-operator
        app.kubernetes.io/instance: release-name
        component: webhook-server
      annotations:
        checksum/apiregistration.yaml: 4cac01b45026f28e41950f4fdf3e05c6b783e2f752dae59673dd085c892b218a
    spec:
      imagePullSecrets:
        []
      serviceAccountName: release-name-kubestash-operator
      containers:
      - name: webhook-server
        image: "ghcr.io/kubestash/kubestash:v0.8.1"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        args:
          - webhook-server
          - --config=/var/config/config.yaml
        ports:
        - name: webhook-server
          containerPort: 9443
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 100m
        volumeMounts:
        - name: kubestash-tmp-volume
          mountPath: /kubestash-tmp
        - name: serving-cert
          mountPath: /var/serving-cert
          readOnly: true
        - name: config
          mountPath: /var/config
      - name: kube-rbac-proxy
        image: "ghcr.io/appscode/kube-rbac-proxy:v0.11.0"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
      volumes:
      - name: kubestash-tmp-volume
        emptyDir: {}
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: release-name-kubestash-operator-webhook-cert
      - name: config
        configMap:
          name: release-name-kubestash-operator-config
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: kubestash/charts/kubestash-operator/templates/license/license.yaml
# if license file is provided, then create a secret for license
---
# Source: kubestash/charts/kubestash-catalog/templates/kubedump/kubedump-addon.yaml
apiVersion: addons.kubestash.com/v1alpha1
kind: Addon
metadata:
  name: 'kubedump-addon'
  labels:
    helm.sh/chart: kubestash-catalog-v2024.4.27
    app.kubernetes.io/name: kubestash-catalog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2024.4.27"
    app.kubernetes.io/managed-by: Helm
spec:
  backupTasks:
  - driver: Restic
    executor: Job
    function: kubedump-backup
    name: manifest-backup
    parameters:
    - default: "true"
      name: enableCache
      required: false
      usage: Enable or disable caching. Disabling caching may impact backup performance.
    - default: /kubestash-tmp
      name: scratchDir
      required: false
      usage: Directory for holding temporary files and restic cache.
    - default: "true"
      name: sanitize
      required: false
      usage: Specify whether to remove the decorators from the resource YAML.
    - default: "false"
      name: includeDependants
      required: false
      usage: Specify whether to backup the dependants object along with their parent.
    - default: ""
      name: labelSelector
      required: false
      usage: Specify a label selector to filter the resources.
    singleton: true
    volumeMounts:
    - mountPath: /kubestash-tmp
      name: kubestash-tmp-volume
    volumeTemplate:
    - name: kubestash-tmp-volume
      source:
        emptyDir: {}
      usage: Holds temporary files and restic cache.
---
# Source: kubestash/charts/kubestash-catalog/templates/pvc/pvc-addon.yaml
apiVersion: addons.kubestash.com/v1alpha1
kind: Addon
metadata:
  name: 'pvc-addon'
  labels:
    helm.sh/chart: kubestash-catalog-v2024.4.27
    app.kubernetes.io/name: kubestash-catalog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2024.4.27"
    app.kubernetes.io/managed-by: Helm
spec:
  backupTasks:
  - driver: Restic
    executor: Job
    function: pvc-backup
    name: logical-backup
    parameters:
    - default: /kubestash-data
      name: paths
      required: false
      usage: List of file paths to backup.
    - name: exclude
      required: false
      usage: List of patterns for the files that should be ignored during restore.
    - default: "true"
      name: enableCache
      required: false
      usage: Enable or disable caching. Disabling caching may impact backup performance.
    - default: /kubestash-tmp
      name: scratchDir
      required: false
      usage: Directory for holding temporary files and restic cache.
    singleton: true
    volumeMounts:
    - mountPath: /kubestash-data
      name: kubestash-data-volume
    - mountPath: /kubestash-tmp
      name: kubestash-tmp-volume
    volumeTemplate:
    - name: kubestash-data-volume
      source:
        persistentVolumeClaim:
          claimName: ${PVC_NAME}
    - name: kubestash-tmp-volume
      source:
        emptyDir: {}
      usage: Holds temporary files and restic cache.
  - driver: VolumeSnapshotter
    function: volumesnapshot-backup
    name: volume-snapshot
    parameters:
    - name: volumeSnapshotClassName
      required: false
      usage: The VolumeSnapshotClassName to be used by volumeSnapshot
    singleton: true
  restoreTasks:
  - driver: Restic
    executor: Job
    function: pvc-restore
    name: logical-backup-restore
    parameters:
    - default: "true"
      name: enableCache
      required: false
      usage: Enable or disable caching. Disabling caching may impact backup performance.
    - default: /kubestash-tmp
      name: scratchDir
      required: false
      usage: Directory for holding temporary files and restic cache.
    singleton: true
    volumeMounts:
    - mountPath: /kubestash-data
      name: kubestash-data-volume
    - mountPath: /kubestash-tmp
      name: kubestash-tmp-volume
    volumeTemplate:
    - name: kubestash-data-volume
      source:
        persistentVolumeClaim:
          claimName: ${PVC_NAME}
    - name: kubestash-tmp-volume
      source:
        emptyDir: {}
      usage: Holds temporary files and restic cache.
  - driver: Restic
    executor: Job
    function: pvc-restore
    name: volume-clone
    parameters:
    - default: "true"
      name: enableCache
      required: false
      usage: Enable or disable caching. Disabling caching may impact backup performance.
    - default: /kubestash-tmp
      name: scratchDir
      required: false
      usage: Directory for holding temporary files and restic cache.
    singleton: false
    volumeMounts:
    - mountPath: /kubestash-tmp
      name: kubestash-tmp-volume
    volumeTemplate:
    - name: kubestash-tmp-volume
      source:
        emptyDir: {}
      usage: Holds temporary files and restic cache.
  - driver: VolumeSnapshotter
    executor: Job
    function: volumesnapshot-restore
    name: volume-snapshot-restore
    singleton: true
---
# Source: kubestash/charts/kubestash-catalog/templates/workload/workload-addon.yaml
apiVersion: addons.kubestash.com/v1alpha1
kind: Addon
metadata:
  name: 'workload-addon'
  labels:
    helm.sh/chart: kubestash-catalog-v2024.4.27
    app.kubernetes.io/name: kubestash-catalog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2024.4.27"
    app.kubernetes.io/managed-by: Helm
spec:
  backupTasks:
  - driver: Restic
    executor: Job
    function: workload-backup
    name: logical-backup
    parameters:
    - name: paths
      required: true
      usage: List of file paths to backup.
    - name: exclude
      required: false
      usage: List of patterns for the files that should be ignored during backup.
    - default: "true"
      name: enableCache
      required: false
      usage: Enable or disable caching. Disabling caching may impact backup performance.
    - default: /kubestash-tmp
      name: scratchDir
      required: false
      usage: Directory for holding temporary files and restic cache.
    singleton: false
    volumeMounts:
    - mountPath: /kubestash-tmp
      name: kubestash-tmp-volume
    volumeTemplate:
    - name: kubestash-tmp-volume
      source:
        emptyDir: {}
      usage: Holds temporary files and restic cache.
  - driver: VolumeSnapshotter
    function: volumesnapshot-backup
    name: volume-snapshot
    parameters:
    - name: volumeSnapshotClassName
      required: false
      usage: The VolumeSnapshotClassName to be used by volumeSnapshot
    singleton: true
  restoreTasks:
  - driver: Restic
    executor: Job
    function: workload-restore
    name: logical-backup-restore
    parameters:
    - name: exclude
      required: false
      usage: List of patterns for the files that should be ignored during restore.
    - name: include
      required: false
      usage: List of patterns for the files that should be restored.
    - default: "true"
      name: enableCache
      required: false
      usage: Enable or disable caching. Disabling caching may impact backup performance.
    - default: /kubestash-tmp
      name: scratchDir
      required: false
      usage: Directory for holding temporary files and restic cache.
    singleton: false
    volumeMounts:
    - mountPath: /kubestash-tmp
      name: kubestash-tmp-volume
    volumeTemplate:
    - name: kubestash-tmp-volume
      source:
        emptyDir: {}
      usage: Holds temporary files and restic cache.
---
# Source: kubestash/charts/kubestash-catalog/templates/kubedump/kubedump-backup.yaml
apiVersion: addons.kubestash.com/v1alpha1
kind: Function
metadata:
  name: 'kubedump-backup'
  labels:
    helm.sh/chart: kubestash-catalog-v2024.4.27
    app.kubernetes.io/name: kubestash-catalog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2024.4.27"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup
  - --namespace=${namespace:=default}
  - --backupsession=${backupSession:=}
  - --enable-cache=${enableCache:=}
  - --scratch-dir=${scratchDir:=}
  - --sanitize=${sanitize:=true}
  - --label-selector=${labelSelector:=}
  - --include-dependants=${includeDependants:=false}
  image: 'ghcr.io/kubestash/kubedump:v0.7.0'
---
# Source: kubestash/charts/kubestash-catalog/templates/pvc/pvc-backup.yaml
apiVersion: addons.kubestash.com/v1alpha1
kind: Function
metadata:
  name: 'pvc-backup'
  labels:
    helm.sh/chart: kubestash-catalog-v2024.4.27
    app.kubernetes.io/name: kubestash-catalog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2024.4.27"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup
  - --namespace=${namespace:=default}
  - --backupsession=${backupSession:=}
  - --enable-cache=${enableCache:=}
  - --scratch-dir=${scratchDir:=}
  - --exclude=${exclude:=}
  - --paths=${paths:=}
  image: 'ghcr.io/kubestash/pvc:v0.7.0'
---
# Source: kubestash/charts/kubestash-catalog/templates/pvc/pvc-restore.yaml
apiVersion: addons.kubestash.com/v1alpha1
kind: Function
metadata:
  name: 'pvc-restore'
  labels:
    helm.sh/chart: kubestash-catalog-v2024.4.27
    app.kubernetes.io/name: kubestash-catalog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2024.4.27"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore
  - --namespace=${namespace:=default}
  - --restoresession=${restoreSession:=}
  - --snapshot=${snapshot:=}
  - --enable-cache=${enableCache:=}
  - --scratch-dir=${scratchDir:=}
  image: 'ghcr.io/kubestash/pvc:v0.7.0'
---
# Source: kubestash/charts/kubestash-catalog/templates/volumesnapshot/volumesnapshot-backup.yaml
apiVersion: addons.kubestash.com/v1alpha1
kind: Function
metadata:
  name: 'volumesnapshot-backup'
  labels:
    helm.sh/chart: kubestash-catalog-v2024.4.27
    app.kubernetes.io/name: kubestash-catalog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2024.4.27"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup
  - --namespace=${namespace:=default}
  - --backupsession=${backupSession:=}
  - --volume-snapshot-class-name=${volumeSnapshotClassName:=}
  image: 'ghcr.io/kubestash/volume-snapshotter:v0.7.0'
---
# Source: kubestash/charts/kubestash-catalog/templates/volumesnapshot/volumesnapshot-restore.yaml
apiVersion: addons.kubestash.com/v1alpha1
kind: Function
metadata:
  name: 'volumesnapshot-restore'
  labels:
    helm.sh/chart: kubestash-catalog-v2024.4.27
    app.kubernetes.io/name: kubestash-catalog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2024.4.27"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore
  - --namespace=${namespace:=default}
  - --restoresession=${restoreSession:=}
  - --snapshot=${snapshot:=}
  - --task-name=${taskName:=}
  image: 'ghcr.io/kubestash/volume-snapshotter:v0.7.0'
---
# Source: kubestash/charts/kubestash-catalog/templates/workload/workload-backup.yaml
apiVersion: addons.kubestash.com/v1alpha1
kind: Function
metadata:
  name: 'workload-backup'
  labels:
    helm.sh/chart: kubestash-catalog-v2024.4.27
    app.kubernetes.io/name: kubestash-catalog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2024.4.27"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup
  - --namespace=${namespace:=default}
  - --backupsession=${backupSession:=}
  - --enable-cache=${enableCache:=}
  - --scratch-dir=${scratchDir:=}
  - --paths=${paths:=}
  - --exclude=${exclude:=}
  image: 'ghcr.io/kubestash/workload:v0.7.0'
---
# Source: kubestash/charts/kubestash-catalog/templates/workload/workload-restore.yaml
apiVersion: addons.kubestash.com/v1alpha1
kind: Function
metadata:
  name: 'workload-restore'
  labels:
    helm.sh/chart: kubestash-catalog-v2024.4.27
    app.kubernetes.io/name: kubestash-catalog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2024.4.27"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore
  - --namespace=${namespace:=default}
  - --restoresession=${restoreSession:=}
  - --snapshot=${snapshot:=}
  - --enable-cache=${enableCache:=}
  - --scratch-dir=${scratchDir:=}
  - --exclude=${exclude:=}
  - --include=${include:=}
  image: 'ghcr.io/kubestash/workload:v0.7.0'
---
# Source: kubestash/charts/kubestash-metrics/templates/metricsconfig-backupconfiguration.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: kubestash-appscode-com-backupconfiguration
spec:
  targetRef:
    apiVersion: core.kubestash.com/v1alpha1
    kind: BackupConfiguration
  commonLabels:
  - key: backup_invoker_kind
    value: "BackupConfiguration"
  - key: backup_invoker_name
    valuePath: .metadata.name
  - key: target_kind
    valuePath: .spec.target.kind
  - key: target_name
    valuePath: .spec.target.name
  - key: target_namespace
    valuePath: .spec.target.namespace
  metrics:
  - name: created
    help: "Unix creation timestamp of this BackupConfiguration object"
    type: gauge
    field:
      path: .metadata.creationTimestamp
      type: DateTime
    metricValue:
      valueFromPath: .metadata.creationTimestamp
  - name: info
    help: "General information about this BackupConfiguration"
    type: gauge
    metricValue:
      value: 1
  - name: sessions
    help: "List of sessions of this BackupConfiguration"
    type: gauge
    field:
      path: .spec.sessions
      type: Array
    labels:
    - key: session_name
      valuePath: .spec.sessions[*].name
    - key: schedule
      valuePath: .spec.sessions[*].scheduler.schedule
    - key: addon_name
      valuePath: .spec.sessions[*].addon.name
    metricValue:
      value: 1
  - name: phase
    help: "BackupConfiguration object current phase"
    type: gauge
    field:
      path: .status.phase
      type: String
    params:
    - key: phase
      valuePath: .status.phase
    states:
      labelKey: phase
      values:
      - labelValue: Ready
        metricValue:
          valueFromExpression: "int(phase == 'Ready')"
      - labelValue: NotReady
        metricValue:
          valueFromExpression: "int(phase == 'NotReady')"
      - labelValue: Invalid
        metricValue:
          valueFromExpression: "int(phase == 'Invalid')" 
  - name: conditions
    help: "Current conditions of this BackupConfiguration"
    type: gauge
    field:
      path: .status.conditions
      type: Array
    labels:
    - key: condition
      valuePath: .status.conditions[*].type
    - key: status
      valuePath: .status.conditions[*].status
    metricValue:
      value: 1
---
# Source: kubestash/charts/kubestash-metrics/templates/metricsconfig-backupsession.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: kubestash-appscode-com-backupsession
spec:
  targetRef:
    apiVersion: core.kubestash.com/v1alpha1
    kind: BackupSession
  commonLabels:
  - key: invoker_kind
    value: "BackupSession"
  - key: invoker_name
    valuePath: .metadata.name
  - key: backup_invoker_kind
    valuePath: .spec.invoker.kind
  - key: backup_invoker_name
    valuePath: .spec.invoker.name
  metrics:
  - name: created
    help: "Unix creation timestamp of this BackupSession object"
    type: gauge
    field:
      path: .metadata.creationTimestamp
      type: DateTime
    metricValue:
      valueFromPath: .metadata.creationTimestamp
  - name: info
    help: "General information about this BackupSession"
    type: gauge
    labels:
    - key: session
      valuePath: .spec.session
    - key: phase
      valuePath: .status.phase
    metricValue:
      value: 1
  - name: snapshots
    help: "General information about the snapshots of this BackupSession"
    type: gauge
    field:
      path: .status.snapshots
      type: Array
    labels:
    - key: snapshot_name
      valuePath: .status.snapshots[*].name
    - key: snapshot_phase
      valuePath: .status.snapshots[*].phase
    - key: repository
      valuePath: .status.snapshots[*].repository
    - key: backedup_app_kind
      valuePath: .status.snapshots[*].appRef.kind
    - key: backedup_app_name
      valuePath: .status.snapshots[*].appRef.name
    - key: backedup_app_namespace
      valuePath: .status.snapshots[*].appRef.namespace
    metricValue:
      value: 1
  - name: phase
    help: "BackupSession object current phase"
    type: gauge
    field:
      path: .status.phase
      type: String
    params:
    - key: phase
      valuePath: .status.phase
    states:
      labelKey: phase
      values:
      - labelValue: Pending
        metricValue:
          valueFromExpression: "int(phase == 'Pending')"
      - labelValue: Running
        metricValue:
          valueFromExpression: "int(phase == 'Running')"
      - labelValue: Succeeded
        metricValue:
          valueFromExpression: "int(phase == 'Succeeded')"
      - labelValue: Failed
        metricValue:
          valueFromExpression: "int(phase == 'Failed')"
      - labelValue: Skipped
        metricValue:
          valueFromExpression: "int(phase == 'Skipped')"
  - name: duration_seconds
    help: "Time required to complete this backup process"
    type: gauge
    field:
      path: .status.duration
      type: String
    params:
    - key: duration
      valuePath: .status.duration
    metricValue:
      valueFromExpression: toSecond(duration)
  - name: conditions
    help: "Current conditions of this BackupSession"
    type: gauge
    field:
      path: .status.conditions
      type: Array
    labels:
    - key: condition
      valuePath: .status.conditions[*].type
    - key: status
      valuePath: .status.conditions[*].status
    metricValue:
      value: 1
---
# Source: kubestash/charts/kubestash-metrics/templates/metricsconfig-backupstorage.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: kubestash-appscode-com-backupstorage
spec:
  targetRef:
    apiVersion: storage.kubestash.com/v1alpha1
    kind: BackupStorage
  commonLabels:
  - key: invoker_kind
    value: "BackupStorage"
  - key: invoker_name
    valuePath: .metadata.name
  metrics:
  - name: created
    help: "Unix creation timestamp of this BackupStorage object"
    type: gauge
    field:
      path: .metadata.creationTimestamp
      type: DateTime
    metricValue:
      valueFromPath: .metadata.creationTimestamp
  - name: info
    help: "General information about this BackupStorage"
    type: gauge
    labels:
    - key: provider
      valuePath: .spec.storage.provider
    - key: default
      valuePath: .spec.default
    - key: deletionPolicy
      valuePath: .spec.deletionPolicy
    - key: phase
      valuePath: .status.phase
    metricValue:
      value: 1
  - name: repository_size_bytes
    help: "Total backed up data in the repository of this BackupStorage"
    type: gauge
    field: 
      path: .status.repositories
      type: Array
    params:
    - key: size
      valuePath: .status.repositories[*].size
    labels:
    - key: repo_name
      valuePath: .status.repositories[*].name
    - key: repo_namespace
      valuePath: .status.repositories[*].namespace
    - key: repo_path
      valuePath: .status.repositories[*].path
    metricValue:
      valueFromExpression: "bytes(size)"
  - name: phase
    help: "BackupStorage object current phase"
    type: gauge
    field:
      path: .status.phase
      type: String
    params:
    - key: phase
      valuePath: .status.phase
    states:
      labelKey: phase
      values:
      - labelValue: Ready
        metricValue:
          valueFromExpression: "int(phase == 'Ready')"
      - labelValue: NotReady
        metricValue:
          valueFromExpression: "int(phase == 'NotReady')"
  - name: size_bytes
    help: "Total backed up data size in this BackupStorage"
    type: gauge
    field:
      path: .status.totalSize
      type: String
    params:
    - key: size
      valuePath: .status.totalSize
    metricValue:
     valueFromExpression: "bytes(size)"
  - name: conditions
    help: "Current conditions of this BackupStorage"
    type: gauge
    field:
      path: .status.conditions
      type: Array
    labels:
    - key: condition
      valuePath: .status.conditions[*].type
    - key: status
      valuePath: .status.conditions[*].status
    metricValue:
      value: 1
---
# Source: kubestash/charts/kubestash-metrics/templates/metricsconfig-repository.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: kubestash-appscode-com-repository
spec:
  targetRef:
    apiVersion: storage.kubestash.com/v1alpha1
    kind: Repository
  commonLabels:
  - key: invoker_kind
    value: "Repository"
  - key: invoker_name
    valuePath: .metadata.name
  - key: target_kind
    valuePath: .spec.appRef.kind
  - key: target_name
    valuePath: .spec.appRef.name
  - key: target_namespace
    valuePath: .spec.appRef.namespace
  metrics:
  - name: created
    help: "Unix creation timestamp of this Repository object"
    type: gauge
    field:
      path: .metadata.creationTimestamp
      type: DateTime
    metricValue:
      valueFromPath: .metadata.creationTimestamp
  - name: info
    help: "General information about this Repository"
    type: gauge
    labels:
    - key: path
      valuePath: .spec.path
    - key: phase
      valuePath: .status.phase
    - key: integrity
      valuePath: .status.integrity
    metricValue:
      value: 1
  - name: last_successful_backup
    help: "Last successful backup stored in this Repository"
    type: gauge
    field:
      path: .status.lastBackupTime
      type: DateTime
    metricValue:
      valueFromPath: .status.lastBackupTime
  - name: size_bytes
    help: "Total backed up data stored in this Repository"
    type: gauge
    field:
      path: .status.size
      type: String
    params:
    - key: size
      valuePath: .status.size
    metricValue:
      valueFromExpression: "bytes(size)"
  - name: snapshot_count_total
    help: "Number of current snapshots stored in this Repository"
    type: gauge
    field:
      path: .status.snapshotCount
      type: Integer
    metricValue:
      valueFromPath: .status.snapshotCount
  - name: conditions
    help: "Current conditions of this Repository"
    type: gauge
    field:
      path: .status.conditions
      type: Array
    labels:
    - key: condition
      valuePath: .status.conditions[*].type
    - key: status
      valuePath: .status.conditions[*].status
    metricValue:
      value: 1
---
# Source: kubestash/charts/kubestash-metrics/templates/metricsconfig-restoresession.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: kubestash-appscode-com-restoresession
spec:
  targetRef:
    apiVersion: core.kubestash.com/v1alpha1
    kind: RestoreSession
  commonLabels:
  - key: invoker_kind
    value: "RestoreSession"
  - key: invoker_name
    valuePath: .metadata.name
  - key: target_kind
    valuePath: .spec.target.kind
  - key: target_name
    valuePath: .spec.target.name
  - key: target_namespace
    valuePath: .spec.target.namespace
  metrics:
  - name: created
    help: "Unix creation timestamp of this RestoreSession object"
    type: gauge
    field:
      path: .metadata.creationTimestamp
      type: DateTime
    metricValue:
      valueFromPath: .metadata.creationTimestamp
  - name: info
    help: "General information about this RestoreSession"
    type: gauge
    labels:
    - key: datasource_namespace
      valuePath: .spec.dataSource.namespace
    - key: repository
      valuePath: .spec.dataSource.repository
    - key: snapshot
      valuePath: .spec.dataSource.snapshot
    - key: addon_name
      valuePath: .spec.addon.name
    - key: phase
      valuePath: .status.phase
    metricValue:
      value: 1
  - name: phase
    help: "RestoreSession object current phase"
    type: gauge
    field:
      path: .status.phase
      type: String
    params:
    - key: phase
      valuePath: .status.phase
    states:
      labelKey: phase
      values:
      - labelValue: Pending
        metricValue:
          valueFromExpression: "int(phase == 'Pending')"
      - labelValue: Running
        metricValue:
          valueFromExpression: "int(phase == 'Running')"
      - labelValue: Succeeded
        metricValue:
          valueFromExpression: "int(phase == 'Succeeded')"
      - labelValue: Failed
        metricValue:
          valueFromExpression: "int(phase == 'Failed')"
      - labelValue: Invalid
        metricValue:
          valueFromExpression: "int(phase == 'Invalid')"
      - labelValue: Unknown
        metricValue:
          valueFromExpression: "int(phase == 'Unknown')"
  - name: duration_seconds
    help: "The total time taken to complete the restore process"
    type: gauge
    field:
      path: .status.duration
      type: String
    params:
    - key: duration
      valuePath: .status.duration
    metricValue:
      valueFromExpression: toSecond(duration)
  - name: component_count_total
    help: "The number of total components for this RestoreSession"
    type: gauge
    field:
      path: .status.totalComponents
      type: Integer
    metricValue:
      valueFromPath: .status.totalComponents
  - name: conditions
    help: "Current conditions of this RestoreSession"
    type: gauge
    field:
      path: .status.conditions
      type: Array
    labels:
    - key: condition
      valuePath: .status.conditions[*].type
    - key: status
      valuePath: .status.conditions[*].status
    metricValue:
      value: 1
---
# Source: kubestash/charts/kubestash-metrics/templates/metricsconfig-snapshot.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: kubestash-appscode-com-snapshot
spec:
  targetRef:
    apiVersion: storage.kubestash.com/v1alpha1
    kind: Snapshot
  commonLabels:
  - key: invoker_kind
    value: "Snapshot"
  - key: invoker_name
    valuePath: .metadata.name
  - key: target_kind
    valuePath: .spec.appRef.kind
  - key: target_name
    valuePath: .spec.appRef.name
  - key: target_namespace
    valuePath: .spec.appRef.namespace
  metrics:
  - name: created
    help: "Unix creation timestamp of this Snapshot object"
    type: gauge
    field:
      path: .metadata.creationTimestamp
      type: DateTime
    metricValue:
      valueFromPath: .metadata.creationTimestamp
  - name: info
    help: "General information about this Snapshot"
    type: gauge
    labels:
    - key: snapshot_type
      valuePath: .spec.type
    - key: repository
      valuePath: .spec.repository
    - key: session
      valuePath: .spec.session
    - key: backupsession
      valuePath: .spec.backupSession
    - key: version
      valuePath: .spec.version
    - key: phase
      valuePath: .status.phase
    - key: integrity
      valuePath: .status.integrity
    metricValue:
      value: 1
  - name: phase
    help: "Snapshot object current phase"
    type: gauge
    field:
      path: .status.phase
      type: String
    params:
    - key: phase
      valuePath: .status.phase
    states:
      labelKey: phase
      values:
      - labelValue: Pending
        metricValue:
          valueFromExpression: "int(phase == 'Pending')"
      - labelValue: Running
        metricValue:
          valueFromExpression: "int(phase == 'Running')"
      - labelValue: Succeeded
        metricValue:
          valueFromExpression: "int(phase == 'Succeeded')"
      - labelValue: Failed
        metricValue:
          valueFromExpression: "int(phase == 'Failed')"
  - name: size_bytes
    help: "Size of this Snapshot"
    type: gauge
    field:
      path: .status.size
      type: String
    params:
    - key: size
      valuePath: .status.size
    metricValue:
      valueFromExpression: "bytes(size)"
  - name: time_seconds
    help: "The time when this Snapshot was taken"
    type: gauge
    field:
      path: .status.snapshotTime
      type: DateTime
    metricValue:
      valueFromPath: .status.snapshotTime
  - name: component_count_total
    help: "The number of total components for this Snapshot"
    type: gauge
    field:
      path: .status.totalComponents
      type: Integer
    metricValue:
      valueFromPath: .status.totalComponents
  - name: conditions
    help: "Current conditions of this Snapshot"
    type: gauge
    field:
      path: .status.conditions
      type: Array
    labels:
    - key: condition
      valuePath: .status.conditions[*].type
    - key: status
      valuePath: .status.conditions[*].status
    metricValue:
      value: 1
---
# Source: kubestash/charts/kubestash-operator/templates/cleaner/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kubestash-operator-cleaner
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
---
# Source: kubestash/charts/kubestash-operator/templates/cleaner/cluster_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-kubestash-operator-cleaner
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    verbs: ["delete"]
  - apiGroups:
      - addons.kubestash.com
      - core.kubestash.com
      - storage.kubestash.com
    resources:
      - "*"
    verbs: ["delete"]
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs: ["delete"]
---
# Source: kubestash/charts/kubestash-operator/templates/license/license-checker-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-checker
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get", "list", "watch"]
# Issue license
- apiGroups:
  - proxyserver.licenses.appscode.com
  resources:
  - licenserequests
  verbs: ["create"]
# Detect workload/owner of operator pod
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["get"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get"]
# Write events in case of license verification failure
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "create", "patch"]
# audit site info
- apiGroups:
  - ""
  resources:
  - nodes
  verbs: ["get", "list", "watch"]
---
# Source: kubestash/charts/kubestash-operator/templates/license/license-reader-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-reader
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Detect license server endpoint for kubedb addons
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get"]
- nonResourceURLs:
  - /appscode/license
  verbs: ["get"]
---
# Source: kubestash/charts/kubestash-operator/templates/rbac/user_roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:release-name-kubestash-operator:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - addons.kubestash.com
  - core.kubestash.com
  - storage.kubestash.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: kubestash/charts/kubestash-operator/templates/rbac/user_roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:release-name-kubestash-operator:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - addons.kubestash.com
  - core.kubestash.com
  - storage.kubestash.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubestash/charts/kubestash-operator/templates/cleaner/cluster_rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kubestash-operator-cleaner
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-kubestash-operator-cleaner
subjects:
  - kind: ServiceAccount
    name: release-name-kubestash-operator-cleaner
    namespace: default
---
# Source: kubestash/charts/kubestash-operator/templates/cleaner/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-kubestash-operator-cleaner
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 120
  template:
    spec:
      imagePullSecrets:
        []
      serviceAccountName: release-name-kubestash-operator-cleaner
      containers:
      - name: busybox
        image: "ghcr.io/appscode/kubectl:v1.24"
        command:
          - sh
          - -c
          - "sleep 2; \
           kubectl delete functions.stash.appscode.com update-status pvc-backup pvc-restore || true; \
           kubectl delete tasks.stash.appscode.com pvc-backup pvc-restore || true;"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
      restartPolicy: Never
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: kubestash/charts/kubestash-operator/templates/webhook-server/mutating_webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: release-name-kubestash-operator
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-kubestash-operator-webhook
        namespace: default
        path: /mutate-storage-kubestash-com-v1alpha1-backupstorage
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: mbackupstorage.kb.io
    rules:
      - apiGroups:
          - storage.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - backupstorages
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-kubestash-operator-webhook
        namespace: default
        path: /mutate-storage-kubestash-com-v1alpha1-retentionpolicy
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: mretentionpolicy.kb.io
    rules:
      - apiGroups:
          - storage.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - retentionpolicies
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-kubestash-operator-webhook
        namespace: default
        path: /mutate-core-kubestash-com-v1alpha1-backupblueprint
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: mbackupblueprint.kb.io
    rules:
      - apiGroups:
          - core.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - backupblueprints
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-kubestash-operator-webhook
        namespace: default
        path: /mutate-core-kubestash-com-v1alpha1-backupconfiguration
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: mbackupconfiguration.kb.io
    rules:
      - apiGroups:
          - core.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - backupconfigurations
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-kubestash-operator-webhook
        namespace: default
        path: /mutate-core-kubestash-com-v1alpha1-hooktemplate
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: mhooktemplate.kb.io
    rules:
      - apiGroups:
          - core.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - hooktemplates
    sideEffects: None
---
# Source: kubestash/charts/kubestash-operator/templates/webhook-server/validating_webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: release-name-kubestash-operator
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-kubestash-operator-webhook
        namespace: default
        path: /validate-storage-kubestash-com-v1alpha1-backupstorage
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: vbackupstorage.kb.io
    rules:
      - apiGroups:
          - storage.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - backupstorages
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-kubestash-operator-webhook
        namespace: default
        path: /validate-storage-kubestash-com-v1alpha1-repository
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: vrepository.kb.io
    rules:
      - apiGroups:
          - storage.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - repositories
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-kubestash-operator-webhook
        namespace: default
        path: /validate-storage-kubestash-com-v1alpha1-retentionpolicy
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: vretentionpolicy.kb.io
    rules:
      - apiGroups:
          - storage.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - retentionpolicies
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-kubestash-operator-webhook
        namespace: default
        path: /validate-core-kubestash-com-v1alpha1-backupbatch
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: vbackupbatch.kb.io
    rules:
      - apiGroups:
          - core.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - backupbatches
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-kubestash-operator-webhook
        namespace: default
        path: /validate-core-kubestash-com-v1alpha1-backupblueprint
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: vbackupblueprint.kb.io
    rules:
      - apiGroups:
          - core.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - backupblueprints
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-kubestash-operator-webhook
        namespace: default
        path: /validate-core-kubestash-com-v1alpha1-backupconfiguration
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: vbackupconfiguration.kb.io
    rules:
      - apiGroups:
          - core.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - backupconfigurations
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-kubestash-operator-webhook
        namespace: default
        path: /validate-core-kubestash-com-v1alpha1-backupsession
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: vbackupsession.kb.io
    rules:
      - apiGroups:
          - core.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - backupsessions
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-kubestash-operator-webhook
        namespace: default
        path: /validate-core-kubestash-com-v1alpha1-hooktemplate
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: vhooktemplate.kb.io
    rules:
      - apiGroups:
          - core.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - hooktemplates
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-kubestash-operator-webhook
        namespace: default
        path: /validate-core-kubestash-com-v1alpha1-restoresession
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: vrestoresession.kb.io
    rules:
      - apiGroups:
          - core.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - restoresessions
    sideEffects: None
