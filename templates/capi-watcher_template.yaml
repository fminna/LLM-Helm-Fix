---
# Source: capi-watcher/templates/base.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-capi-watcher
  labels:
    helm.sh/chart: capi-watcher-0.1.0
    app.kubernetes.io/name: capi-watcher
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: capi-watcher/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-capi-watcher
  labels:
        helm.sh/chart: capi-watcher-0.1.0
        app.kubernetes.io/name: capi-watcher
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "0.1.0"
        app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create"]
  - apiGroups: ["cluster.x-k8s.io"]
    resources: ["clusters"]
    verbs: ["get", "list", "watch"]
---
# Source: capi-watcher/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-capi-watcher
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-capi-watcher
subjects:
- kind: ServiceAccount
  name: release-name-capi-watcher
  namespace: default
---
# Source: capi-watcher/templates/base.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  capi-watcher
  namespace: default
  labels:
    helm.sh/chart: capi-watcher-0.1.0
    app.kubernetes.io/name: capi-watcher
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: capi-watcher
      app.kubernetes.io/instance: release-name
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        helm.sh/chart: capi-watcher-0.1.0
        app.kubernetes.io/name: capi-watcher
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "0.1.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      terminationGracePeriodSeconds: 60
      serviceAccountName: release-name-capi-watcher
      securityContext:
        {}
      containers:
        - name: capi-watcher
          securityContext:
            {}
          image: "ghcr.io/krateoplatformops/capi-watcher:0.1.0"
          imagePullPolicy: IfNotPresent
          ports:
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 50m
              memory: 128Mi
          env:
            - name: CAPI_WATCHER_NAMESPACE
              value: ""
            - name: CAPI_WATCHER_DEBUG
              value: "false"
            - name: CAPI_WATCHER_RESYNC_INTERVAL
              value: 15m
