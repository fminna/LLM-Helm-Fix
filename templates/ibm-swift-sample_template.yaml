---
# Source: ibm-swift-sample/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: 'true'
  name: "ibm-swift-sample"
  labels:
    app: ibm-swift-sample
    chart: "ibm-swift-sample"
    release: "release-name"
    heritage: "Helm"
spec:
  type: NodePort
  ports:
  - port: 8080
    name: swift
  selector:
    app: "ibm-swift-sample-selector"
---
# Source: ibm-swift-sample/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: "ibm-swift-sample-deployment"
  labels:
    app: ibm-swift-sample
    chart: 'ibm-swift-sample'
    release: "release-name"
    heritage: "Helm"
spec:
  selector:
    matchLabels:
      release: "release-name"
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  revisionHistoryLimit: 1
  template:
    metadata:
      # Here's where a user could define their own annotation too
      annotations:
        productName: Swift Sample Application
        productID: Swift_Sample_Application_1.0.0_perpetual_00000
        productVersion: 1.0.0
      labels:
        app: "ibm-swift-sample-selector"
        chart: 'ibm-swift-sample'
        release: "release-name"
        heritage: "Helm"
    spec:
      affinity:      
      #https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          #If you specify multiple nodeSelectorTerms associated with nodeAffinity types,
          #then the pod can be scheduled onto a node if one of the nodeSelectorTerms is satisfied.
          #
          #If you specify multiple matchExpressions associated with nodeSelectorTerms,
          #then the pod can be scheduled onto a node only if all matchExpressions can be satisfied.
          #
          #valid operators: In, NotIn, Exists, DoesNotExist, Gt, Lt
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
                - s390x
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 3
            preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
          - weight: 2
            preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - s390x
      containers:
      - name: "ibm-swift-sample"
        image: "ibmcom/icp-swift-sample:latest"
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          requests:
            cpu: "200m"
            memory: "300Mi"
        env:
          - name: PORT
            value : "8080"
---
# Source: ibm-swift-sample/templates/tests/health-endpoint-test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-health-endpoint-test"
  labels:
    heritage: Helm
    release: release-name
    chart: ibm-swift-sample-1.1.2
    app: ibm-swift-sample
  annotations:
    "helm.sh/hook": test-success
spec:
  restartPolicy: Never
  containers:
    - name: "release-name-health-endpoint-test"
      image: ibmcom/icp-swift-sample:latest
      command: ["wget"]
      args: ['ibm-swift-sample:8080/health']
---
# Source: ibm-swift-sample/templates/tests/main-endpoint-test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-main-endpoint-test"
  labels:
    heritage: Helm
    release: release-name
    chart: ibm-swift-sample-1.1.2
    app: ibm-swift-sample
  annotations:
    "helm.sh/hook": test-success
spec:
  restartPolicy: Never
  containers:
    - name: "release-name-main-endpoint-test"
      image: ibmcom/icp-swift-sample:latest
      command: ["wget"]
      args: ['ibm-swift-sample:8080']
---
# Source: ibm-swift-sample/templates/tests/metrics-endpoint-test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-metrics-endpoint-test"
  labels:
    heritage: Helm
    release: release-name
    chart: ibm-swift-sample-1.1.2
    app: ibm-swift-sample
  annotations:
    "helm.sh/hook": test-success
spec:
  restartPolicy: Never
  containers:
    - name: "release-name-metrics-endpoint-test"
      image: ibmcom/icp-swift-sample:latest
      command: ["wget"]
      args: ['ibm-swift-sample:8080/metrics']
