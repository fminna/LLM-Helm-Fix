---
# Source: ibm-sccm/templates/network-policy-default-deny-all.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-ibm-sccm-default-deny-all
  labels:
    app.kubernetes.io/name: ibm-sccm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ibm-sccm-3.1.2
    release: release-name
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: ibm-sccm
      app.kubernetes.io/instance: release-name
  policyTypes:
  - Ingress
  - Egress
---
# Source: ibm-sccm/templates/network-policy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-ibm-sccm
  labels:
    app.kubernetes.io/name: ibm-sccm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ibm-sccm-3.1.2
    release: release-name
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: ibm-sccm
      app.kubernetes.io/instance: release-name
  ingress:
    - from:
      ports:
        - protocol: TCP
          port: 58080
        - protocol: TCP
          port: 58082
        - protocol: TCP
          port: 58081
        - protocol: TCP
          port: 58083
  egress:
  - {}
  policyTypes:
  - Ingress
  - Egress
---
# Source: ibm-sccm/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-ibm-sccm-serviceaccount
  labels:
    app.kubernetes.io/name: ibm-sccm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ibm-sccm-3.1.2
    release: release-name
    namespace: default

imagePullSecrets:
  #- name: sa-default
  - name: ibm-entitlement-key
---
# Source: ibm-sccm/templates/ccm-pvClaim.yaml
# Sample for creating a volume claim.
# It will be used while creating the container.

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-ibm-sccm-pvc-ccm
  labels:
    app.kubernetes.io/name: ibm-sccm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ibm-sccm-3.1.2
    release: release-name
spec:
  # Disable dynamic provisioning
  storageClassName: "manual"
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "20Gi"
---
# Source: ibm-sccm/templates/ui-pvClaim.yaml
# Sample for creating a volume claim.
# It will be used while creating the container.

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-ibm-sccm-pvc-ui
  labels:
    app.kubernetes.io/name: ibm-sccm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ibm-sccm-3.1.2
    release: release-name
spec:
  # Disable dynamic provisioning
  storageClassName: "manual"
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "2Gi"
---
# Source: ibm-sccm/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-ibm-sccm-podclusterrole
  namespace: default
  labels:
    app.kubernetes.io/name: ibm-sccm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ibm-sccm-3.1.2
    release: release-name
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - get
  - list
---
# Source: ibm-sccm/templates/role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "release-name-ibm-sccm-podrolebind"
  labels:
    app.kubernetes.io/name: ibm-sccm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ibm-sccm-3.1.2
    release: release-name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-ibm-sccm-podclusterrole
subjects:
 - kind: ServiceAccount
   name: release-name-ibm-sccm-serviceaccount
   namespace: default
---
# Source: ibm-sccm/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-ibm-sccm
  labels:
    app.kubernetes.io/name: ibm-sccm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ibm-sccm-3.1.2
    release: release-name
    author: IBM
spec:
  selector:
    app.kubernetes.io/name: ibm-sccm
    app.kubernetes.io/instance: release-name
    release: release-name
    author: IBM
  type: LoadBalancer 
  ports:
  - name: swing-console
    port: 58080
    targetPort: 58080
    protocol: TCP
  - name: web-console
    port: 58082
    targetPort: 58082
    protocol: TCP
  - name: web-console-secure
    port: 58083
    targetPort: 58083
    protocol: TCP
  - name: swing-console-secure
    port: 58081
    targetPort: 58081
    protocol: TCP
  sessionAffinity: ClientIP
---
# Source: ibm-sccm/templates/statefulset.yaml
#Deployment
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-ibm-sccm
  labels:
    app.kubernetes.io/name: ibm-sccm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ibm-sccm-3.1.2
    release: release-name
    author: IBM
spec:
  replicas: 1
  selector: 
    matchLabels:
      app.kubernetes.io/name: ibm-sccm
      app.kubernetes.io/instance: release-name
      author: IBM
  serviceName: release-name-ibm-sccm
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ibm-sccm
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: ibm-sccm-3.1.2
        release: release-name
        author: IBM
      
      annotations:
        rollme: "Nc2KJ"        
        productID: "6827a92f0c4447ad8685d9ef4107c949"
        productName: "IBM Control Center Monitor Non-Prod Certified Container"
        productVersion: "v6.3"
        productMetric: "VIRTUAL_PROCESSOR_CORE"
        productChargedContainers: "All"
  
    spec:
      serviceAccountName: release-name-ibm-sccm-serviceaccount
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
              
        fsGroup: 65534
        runAsGroup: 0
        runAsNonRoot: true
        runAsUser: 1010
        seccompProfile:
          type: RuntimeDefault
        supplementalGroups:
        - 65534
      affinity:        
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:      
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
          preferredDuringSchedulingIgnoredDuringExecution:        
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          preferredDuringSchedulingIgnoredDuringExecution:        
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          preferredDuringSchedulingIgnoredDuringExecution:
      initContainers:
      - name: release-name-ibm-sccm-init-secret
        image: "cp.icr.io/cp/ibm-scc/ibmscc@sha256:e25fa783f8659271007a46246ed2a1d2ea592eb100c4cae8d2f92e4b5ba5ca68"
        imagePullPolicy: IfNotPresent
        env:
        - name: ENGINE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DEBUG_SCRIPT 
          value: "true"
        command: ["/app/ccEntrypoint.sh", "populateSecret"]
        volumeMounts:
        - mountPath: /app/CC/conf
          name: cc-volume
          subPathExpr: $(ENGINE_NAME)/conf
        - mountPath: /app/secret_files
          name: scc-secret
        - mountPath: /app/containerInfo.txt
          name: scc-param
          subPath: container_info_file
        resources:
          limits:
            cpu: 500m
            memory: 2Gi
          requests:
            cpu: 250m
            memory: 1Gi
        securityContext:
            
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsUser: 1010
      containers:
        - name: release-name-ibm-sccm
          image: "cp.icr.io/cp/ibm-scc/ibmscc@sha256:e25fa783f8659271007a46246ed2a1d2ea592eb100c4cae8d2f92e4b5ba5ca68"
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "/app/ccEntrypoint.sh preStop  > /proc/1/fd/1"]
          env:
            - name: LICENSE
              value: "false"
            - name: ENGINE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CC_APP_INTERVAL
              value: "2h"
            - name: DEBUG_SCRIPT
              value: "true"
            - name: REBALANCE_SERVERS
              value: "true"
            - name: CC_BUILD_ENVIRONMENT
              value: "false"
            - name: TZ
              value: "Asia/Calcutta"
          volumeMounts:
            - mountPath: /app/CC/log/
              name: cc-volume
              subPathExpr: $(ENGINE_NAME)/logs
            - mountPath: /app/CC/conf/
              name: cc-volume
              subPathExpr: $(ENGINE_NAME)/conf
            - mountPath: /app/CC/conf-exported
              name: cc-volume
              subPathExpr: $(ENGINE_NAME)/conf-exported
            - mountPath: /app/CC/web/ccbase
              name: cc-volume
              subPathExpr: $(ENGINE_NAME)/ccbase
            - mountPath: /app/CC/packages/
              name: cc-volume
              subPathExpr: packages
            - mountPath: /app/CC/web/ccbase/reports
              name: cc-volume
              subPathExpr: reports
            - mountPath: /app/CC/user_inputs/
              name: cc-volume-user-inputs
              subPathExpr: user_inputs
            - mountPath: /app/cc_config_file
              name: scc-param
              subPath: scc_param_file
          securityContext:
                      
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsUser: 1010
          # Set liveness probe to determine if Control Center is running
          #seLinuxOptions:
            #level: s0:c0
          livenessProbe:
            initialDelaySeconds: 175
            periodSeconds: 120
            timeoutSeconds: 45
            failureThreshold: 10
            #tcpSocket:
            #  port: 58083
            exec:              
              command: 
              - bash
              - -c
              - /app/ccEntrypoint.sh monitor 58083
          # Set readiness probe to determine if Control Center is running
          readinessProbe:
            initialDelaySeconds: 175
            periodSeconds: 120
            timeoutSeconds: 15
            failureThreshold: 10
            #tcpSocket:              
            #  port: 58083
            exec:              
              command: 
              - bash
              - -c
              - /app/ccEntrypoint.sh monitor 58083
          startupProbe:
            exec:
              command:
              - bash
              - -c
              - /app/ccEntrypoint.sh monitor 58083
            periodSeconds: 120     
            failureThreshold: 10
          resources:
            limits:
              cpu: 3000m
              ephemeral-storage: 4Gi
              memory: 8Gi
            requests:
              cpu: 1500m
              ephemeral-storage: 2Gi
              memory: 4Gi
      volumes:
      - name: cc-volume
        persistentVolumeClaim:
          claimName: release-name-ibm-sccm-pvc-ccm
      - name: cc-volume-user-inputs
        persistentVolumeClaim:
          claimName: release-name-ibm-sccm-pvc-ui
      - name: scc-param
        configMap:
          name: release-name-ibm-sccm
      - name: scc-secret
        secret:
          secretName:
---
# Source: ibm-sccm/templates/configMap.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: release-name-ibm-sccm
  annotations:
        # This is what defines this resource as a hook. Without this line, the
        # job is considered part of the release.
        "helm.sh/hook": "pre-install, pre-upgrade, pre-rollback"
        "helm.sh/hook-weight": "0"
        "helm.sh/hook-delete-policy": "before-hook-creation"
  labels:
    app.kubernetes.io/name: ibm-sccm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ibm-sccm-3.1.2
    release: release-name
data:
  # Container resourcse related information
  container_info_file: |
    cpuAllocation=3000m
    memoryAllocation=8Gi
    archVersion=amd64
    
  # Configuration values can be set as key-value properties
  scc_param_file: |
    appUserUID=1010
    ccInterval=2h
    #Control center database information
    engineName=
    productEntitilement=CCD,CCM
    dbType=MSSQL
    dbHost=
    dbPort=1433
    dbUser=ibm
    dbName=CC_HELM
    dbLoc=none
    dbInit=false
    dbPartition=false
    dbDrivers=/app/CC/conf/db2jcc4.jar,/app/CC/conf/db2jcc_license_cu.jar
    mssqlGlobal=false
 
    #Port numbers of Control centers
    httpPort=58080
    webHttpPort=58082
    httpsPort=58081
    webHttpsPort=58083
 
    weblistenAddress=   
    webHost=
    autoStopJavaWebAppServer=true
    eventRepositoryAuth=false
    
    #Email related details
    emailHostname=localhost
    emailPort=25
    emailUser=
    emailRespond=noone@anywhere
    ccAdminEmailAddress=noone@anywhere
    emailTLSEnabled=true
    
    oracleRacOrScan=
    
    #JMS related details
    jmsEnable=
    jmsType=
    jmsHost=
    jmsPort=
    jmsQueueManager=
    jmsChannel=
    jmsSubject=
    jmsTopic=
    jmsEmbedBroker=
    jmsDataDirectory=
    jmsTimeToLive=
    jmsRetries=
    jmsRetryWait=
    jmsBrokerName=
    
    #Secure parameters
    dbSSL=
    
    #JRE certificate details
    keyStore=/app/CC/user_inputs/CCenter.keystore
    trustStore=/app/CC/user_inputs/CCenter.truststore
    keyAlias=ccalias120
    adminEmailAddress=admin@test.com    

    #seas parameters
    packagePath=../packages
    seasPrimaryAddress=
    seasPrimaryPort=
    seasAlternativeAddress=
    seasAlternativePort=
    seasSecureConnection=N
    seasProfileName=test
    seasPersistentConnection=N
    seasSecureProtocol=
---
# Source: ibm-sccm/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: release-name-ibm-sccm-test
  annotations:
    "helm.sh/hook": test-success
    "helm.sh/hook-delete-policy": hook-succeeded
#    
    productID: "6827a92f0c4447ad8685d9ef4107c949"
    productName: "IBM Control Center Monitor Non-Prod Certified Container"
    productVersion: "v6.3"
    productMetric: "VIRTUAL_PROCESSOR_CORE"
  labels:
    app.kubernetes.io/name: ibm-sccm-test
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ibm-sccm-3.1.2
    release: release-name
spec:
  restartPolicy: Never
  serviceAccountName: release-name-ibm-sccm-serviceaccount
  hostNetwork: false
  hostPID: false
  hostIPC: false
  securityContext:
      
    fsGroup: 65534
    runAsGroup: 0
    runAsNonRoot: true
    runAsUser: 1010
    seccompProfile:
      type: RuntimeDefault
    supplementalGroups:
    - 65534
  affinity:        
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:      
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
          preferredDuringSchedulingIgnoredDuringExecution:
  containers:
    - name: ibm-sccm
      image: "cp.icr.io/cp/ibm-scc/ibmscc@sha256:e25fa783f8659271007a46246ed2a1d2ea592eb100c4cae8d2f92e4b5ba5ca68"
      imagePullPolicy: IfNotPresent
      securityContext:
              
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: false
        runAsUser: 1010
      command: ["/bin/sh", "-c", "ret=`cat /app/CC/log/CCStartup.log | grep 'Web Server has been started!'` ; if [[ -n $ret ]]; then echo 'IBM SCC installation is successful and IBM Control Center Monitor application is running!' ; else echo 'IBM SCC application is not running!' ; fi"]
      resources:
        limits:
          cpu: 3000m
          memory: 8Gi
        requests:
          cpu: 1500m
          memory: 4Gi
      env:
        - name: LICENSE
          value: "false"
        - name: ENGINE_NAME
          value: release-name-ibm-sccm-0 
      volumeMounts:
        - mountPath: /app/CC/log/
          name: cc-volume
          subPathExpr: $(ENGINE_NAME)/logs
  imagePullSecrets:
    - name: ibm-entitlement-key
  volumes:
      - name: cc-volume
        persistentVolumeClaim:
          claimName: release-name-ibm-sccm-pvc-ccm
---
# Source: ibm-sccm/templates/post-rollback.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-ibm-sccm-prerollback
  labels:
    app.kubernetes.io/name: ibm-sccm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ibm-sccm-3.1.2
    release: release-name
  annotations:
    "helm.sh/hook": pre-rollback
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: "release-name"
      labels:
        app.kubernetes.io/name: ibm-sccm-prerollback
        app.kubernetes.io/instance: release-name-prerollback
        app.kubernetes.io/managed-by: Helm-prerollback
        helm.sh/chart: ibm-sccm-3.1.2-prerollback
        release: release-name-prerollback
      annotations:        
        productID: "6827a92f0c4447ad8685d9ef4107c949"
        productName: "IBM Control Center Monitor Non-Prod Certified Container"
        productVersion: "v6.3"
        productMetric: "VIRTUAL_PROCESSOR_CORE"
        productChargedContainers: "All"
    spec:
      serviceAccountName: release-name-ibm-sccm-serviceaccount
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        
        fsGroup: 65534
        runAsGroup: 0
        runAsNonRoot: true
        runAsUser: 1010
        seccompProfile:
          type: RuntimeDefault
        supplementalGroups:
        - 65534
      affinity:        
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:      
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
          preferredDuringSchedulingIgnoredDuringExecution:        
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          preferredDuringSchedulingIgnoredDuringExecution:        
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          preferredDuringSchedulingIgnoredDuringExecution:
      restartPolicy: Never
      containers:
        - name: post-rollback-job
          image: "cp.icr.io/cp/ibm-scc/ibmscc@sha256:e25fa783f8659271007a46246ed2a1d2ea592eb100c4cae8d2f92e4b5ba5ca68"
          imagePullPolicy: IfNotPresent
          env:
            - name: DEBUG_SCRIPT
              value: "true"
          command: ["/app/ccEntrypoint.sh", "rollback", release-name-ibm-sccm]
          volumeMounts:
            - mountPath: /app/backup
              name: cc-volume 
          resources:
            limits:
              cpu: 500m
              memory: 2Gi
            requests:
              cpu: 250m
              memory: 1Gi
          securityContext:
            
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsUser: 1010
      volumes:
      - name: cc-volume
        persistentVolumeClaim:
          claimName: release-name-ibm-sccm-pvc-ccm
---
# Source: ibm-sccm/templates/pre-upgrade.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-ibm-sccm-preupgrade
  labels:
    app.kubernetes.io/name: ibm-sccm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ibm-sccm-3.1.2
    release: release-name
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
spec:
  template:
    metadata:
      name: "release-name"
      labels:
        app.kubernetes.io/name: ibm-sccm-preupgrade
        app.kubernetes.io/instance: release-name-preupgrade
        app.kubernetes.io/managed-by: Helm-preupgrade
        helm.sh/chart: ibm-sccm-3.1.2-preupgrade
        release: release-name-preupgrade
      annotations:        
        productID: "6827a92f0c4447ad8685d9ef4107c949"
        productName: "IBM Control Center Monitor Non-Prod Certified Container"
        productVersion: "v6.3"
        productMetric: "VIRTUAL_PROCESSOR_CORE"
        productChargedContainers: "All"

    spec:
      serviceAccountName: release-name-ibm-sccm-serviceaccount
      restartPolicy: Never
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        
        fsGroup: 65534
        runAsGroup: 0
        runAsNonRoot: true
        runAsUser: 1010
        seccompProfile:
          type: RuntimeDefault
        supplementalGroups:
        - 65534
      affinity:        
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:      
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
          preferredDuringSchedulingIgnoredDuringExecution:        
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          preferredDuringSchedulingIgnoredDuringExecution:        
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          preferredDuringSchedulingIgnoredDuringExecution:
      containers:
        - name: pre-upgrade-job
          image: "cp.icr.io/cp/ibm-scc/ibmscc@sha256:e25fa783f8659271007a46246ed2a1d2ea592eb100c4cae8d2f92e4b5ba5ca68"
          imagePullPolicy: IfNotPresent
          command: ["/app/ccEntrypoint.sh", "upgrade", release-name-ibm-sccm]
          env:
            - name: FIRST_POD
              value: release-name-ibm-sccm-0
            - name: DEBUG_SCRIPT
              value: "true" 
          volumeMounts:
            - mountPath: /app/CC/log/
              name: cc-volume
              subPathExpr: $(FIRST_POD)/logs
            - mountPath: /app/CC/conf/
              name: cc-volume
              subPathExpr: $(FIRST_POD)/conf
            - mountPath: /app/CC/conf-exported
              name: cc-volume
              subPathExpr: $(FIRST_POD)/conf-exported
            - mountPath: /app/CC/web/ccbase
              name: cc-volume
              subPathExpr: $(FIRST_POD)/ccbase
            - mountPath: /app/CC/user_inputs/
              name: cc-volume-user-inputs
              subPathExpr: user_inputs
            - mountPath: /app/backup
              name: cc-volume
          resources:
            limits:
              cpu: 500m
              memory: 2Gi
            requests:
              cpu: 250m
              memory: 1Gi
          securityContext:
            
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsUser: 1010
      volumes:
      - name: cc-volume
        persistentVolumeClaim:
          claimName: release-name-ibm-sccm-pvc-ccm
      - name: cc-volume-user-inputs
        persistentVolumeClaim:
          claimName: release-name-ibm-sccm-pvc-ui
