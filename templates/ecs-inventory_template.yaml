---
# Source: ecs-inventory/templates/secrets.yaml
# only create the secret if injectSecret is false AND existingSecrets is false
apiVersion: v1
kind: Secret
metadata:
  name: release-name-ecs-inventory
  labels:
    helm.sh/chart: ecs-inventory-0.0.6
    app.kubernetes.io/name: ecs-inventory
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.3.0"
    chart: ecs-inventory-0.0.6
    app.kubernetes.io/managed-by: Helm
    app: release-name-ecs-inventory
    release: release-name
    heritage: Helm
type: Opaque
stringData:
  ANCHORE_ECS_INVENTORY_ANCHORE_PASSWORD: "foobar"
  AWS_ACCESS_KEY_ID: "foobar"
  AWS_SECRET_ACCESS_KEY: "foobar"
---
# Source: ecs-inventory/templates/configmap.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: release-name-ecs-inventory
  annotations:
  labels:
    helm.sh/chart: ecs-inventory-0.0.6
    app.kubernetes.io/name: ecs-inventory
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.3.0"
    chart: ecs-inventory-0.0.6
    app.kubernetes.io/managed-by: Helm
    app: release-name-ecs-inventory
    release: release-name
    heritage: Helm
data:
  config.yaml: |
    output: "json"
    log:
      level: "info"
      file: ""
    anchore:
      url: "http://localhost:8228"
      user: "admin"
      password: $ANCHORE_ECS_INVENTORY_ANCHORE_PASSWORD
      account: "admin"
      http:
        insecure: true
        timeout-seconds: 10
    region: "us-west-2"
    polling-interval-seconds: 60
    quiet: false
---
# Source: ecs-inventory/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-ecs-inventory
  labels:
    helm.sh/chart: ecs-inventory-0.0.6
    app.kubernetes.io/name: ecs-inventory
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.3.0"
    chart: ecs-inventory-0.0.6
    app.kubernetes.io/managed-by: Helm
    app: release-name-ecs-inventory
    release: release-name
    heritage: Helm
  annotations:
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ecs-inventory
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/secrets: d5f6b354cac616a65fbcd4c0de19cac0c9e7d5dbc629ec32b79299bb3d722bf9
        checksum/config: 0f4ddaa0e810de2413322a437dc16475fb02a89e849b56cda268d2c983c11944
      labels:
        helm.sh/chart: ecs-inventory-0.0.6
        app.kubernetes.io/name: ecs-inventory
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.3.0"
        chart: ecs-inventory-0.0.6
        app.kubernetes.io/managed-by: Helm
        app: release-name-ecs-inventory
        release: release-name
        heritage: Helm
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsUser: 1000
      containers:
        - name: ecs-inventory
          image: docker.io/anchore/ecs-inventory:v1.3.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - /anchore-ecs-inventory
                - version
            initialDelaySeconds: 1
            timeoutSeconds: 10
            periodSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          readinessProbe:
            exec:
              command:
                - /anchore-ecs-inventory
                - version
            timeoutSeconds: 10
            periodSeconds: 15
            failureThreshold: 3
            successThreshold: 1
          volumeMounts:
            - name: config-volume
              mountPath: /etc/xdg/anchore-ecs-inventory/config.yaml
              subPath: config.yaml
          envFrom:
            - secretRef:
                name: release-name-ecs-inventory
          env:

      volumes:
        - name: config-volume
          configMap:
            name: release-name-ecs-inventory
