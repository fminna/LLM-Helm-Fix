---
# Source: powfaucet/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-powfaucet
  labels:
    helm.sh/chart: powfaucet-0.0.4
    app.kubernetes.io/name: powfaucet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.0.0"
    app.kubernetes.io/managed-by: Helm
  namespace: default
---
# Source: powfaucet/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-powfaucet
  labels:
    helm.sh/chart: powfaucet-0.0.4
    app.kubernetes.io/name: powfaucet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.0.0"
    app.kubernetes.io/managed-by: Helm
data:
  faucet-config.yaml: |
    # PoWFaucet config (example)
    version: 2
    
    ### General Settings
    
    # faucet database (defaults to local sqlite)
    database:
      driver: "sqlite"
      file: "/data/faucet-store.db"
    
    # logfile for faucet events (comment out for no logging)
    faucetLogFile: "/data/faucet-events.log"
    
    # path to file to write the process pid to (comment out to disable)
    faucetPidFile: "/data/faucet-pid.txt"
    
    # faucet http/ws server port
    serverPort: 8080
    
    # number of http proxies in front of this faucet
    httpProxyCount: 1
    
    # title of the faucet
    faucetTitle: "PoW Faucet"
    
    # url to image displayed on the startpage
    faucetImage: "/images/fauceth_420.jpg"
    
    # some additional html to show on the startpage
    faucetHomeHtml: |
      
        
    
    # random secret string that is used by the faucet to "sign" session data.
    # use a random string and do not share / reuse it anywhere.
    faucetSecret: "feedbeef12340000feedbeef12340000feedbeef12340000feedbeef12340000-secret"
    
    # ETH execution layer RPC host
    ethRpcHost: "http://your-el-node:8545"
    
    # faucet wallet private key (hex, without 0x prefix)
    ethWalletKey: "feedbeef12340000feedbeef12340000feedbeef12340000feedbeef12340000"
    
    # EVM chain id (null for auto-detect from RPC)
    ethChainId: null
    
    # symbol (short name) of the coin that can be mined
    faucetCoinSymbol: "ETH"
    
    # type of coin that can be mined
    # native = native coin (ETH)
    # erc20 = ERC20 token
    faucetCoinType: "native"
    
    # transaction gas limit
    # use 21000 to prevent transactions to contracts
    ethTxGasLimit: 21000
    
    # use legacy (non-eip1559) transaction type
    # true: Type 0 (Legacy Transactions), false: Type 2 (EIP1559 Transactions)
    ethLegacyTx: false
    
    # max transaction gas fee (in wei)
    # used as limit for legacy transactions (faucet won't build transactions with higher gas price)
    ethTxMaxFee: 1e+11
    
    # max transaction priority fee (in wei)
    ethTxPrioFee: 2e+09
    
    # max number of unconfirmed transactions to create simultaneously
    ethMaxPending: 12
    
    # queue transactions and wait for funding when faucet is out of funds (show "No Funds" error when false)
    ethQueueNoFunds: false
    
    # link to eth transaction explorer with {txid} as placeholder for transaction id or null for no link
    ethTxExplorerLink: "https://your-el-block-explorer.com/tx/{txid}"
    
    
    # min/max drop amount (max is the default if no module lowers it)
    maxDropAmount: 5e+19
    minDropAmount: 1e+18
    
    # maximum session time (from start till payout)
    # only relevant if one of the enabled protection mechanisms introduces a session delay (eg. mining)
    sessionTimeout: 86400  # 24h
    
    # session cleanup time
    # session data will be removed from the faucet DB after that time
    sessionCleanup: 2592000 # 30 days
    
    # session save time
    # how often session updates will be written to DB
    sessionSaveTime: 120
    
    
    ### Protection mechanisms
    modules:
    
      ## Captcha Protection
      captcha:
        # enable / disable captcha protection
        enabled: false
    
        # captcha provider
        # hcaptcha:  HCaptcha (https://hcaptcha.com)
        # recaptcha: ReCAPTCHA (https://developers.google.com/recaptcha)
        provider: "hcaptcha"
    
        # captcha site key
        siteKey: "00000000-0000-0000-0000-000000000000"
    
        # captcha secret key
        secret: "0xCensoredHCaptchaSecretKey"
    
        # require captcha to start a new session (default: false)
        checkSessionStart: true
    
        # require captcha to start claim payout (default: false)
        checkBalanceClaim: false
    
      ## ENS Name
      ensname:
        enabled: true
    
        # RPC Host for ENS name resolver (mainnet)
        rpcHost: "https://rpc.flashbots.net/"
    
        # require ENS name
        required: false
    
      ## IP-Info module
      ipinfo:
        # enable / disable IP-Info protection
        enabled: true
    
        # ip info lookup api url (default: http://ip-api.com/json/{ip}?fields=21155839)
        apiUrl: "http://ip-api.com/json/{ip}?fields=21155839"
    
        # ip info caching time
        cacheTime: 86400 # 1 day
    
        # require valid ip info (throw error if lookup failed)
        required: true
    
        # ip info based restrictions
        restrictions:
          # percentage of drop amount if IP is in a hosting range (default: 100), 0 to block entirely
          hosting: 10
    
          # percentage of drop amount if IP is in a proxy range (default: 100), 0 to block entirely
          proxy: 10
    
        # ip info pattern based restrictions
        restrictionsPattern:
          "^.*Tencent Cloud.*$": 10
          "^.*UCLOUD.*$": 10
          "^.*Server Hosting.*$": 10
          "^.*SCloud.*$": 10
    
      ethinfo:
        # enable / disable max balance protection
        enabled: true
    
        # check balance and deny session if balance exceeds the limit (in wei)
        maxBalance: 1e+20
    
        # deny sessions for contract addresses
        denyContract: true
    
      ## Faucet Outflow module
      faucet-outflow:
        # enable / disable faucet outflow protection
        enabled: false
    
        # limit outflow to 1000ETH per day
        amount: 1e+21
        duration: 86400
    
        # outflow balance limits
        lowerLimit: -5e+20
        upperLimit: 5e+20
    
      ## Github login protection
      github:
        # enable / disable github login protection
        enabled: false
    
        # github api credentials
        appClientId: ""
        appSecret: ""
    
        # authentication timeout
        authTimeout: 86400
    
        # github account checks
        checks:
          - minAccountAge: 604800 # min account age (7 days)
            minRepoCount: 5 # min number of repositories (includes forked ones)
            minFollowers: 5 # min number of followers
            required: true # require passing this check or throw error
            message: "Your github account does not meet the minimum requirements" # custom error message
    
        # recurring restrictions based on github account
        restrictions:
          - limitAmount: 1e+20
            duration: 86400
    
      ## Mainnet Wallet module
      mainnet-wallet:
        # enable / disable mainnet wallet protection
        enabled: false
    
        # RPC host for mainnet
        rpcHost: ""
    
        # require minimum balance on mainnet wallet
        minBalance: 1e+16
    
        # require minimum number of transactions from mainnet wallet (nonce count)
        minTxCount: 5
    
      ## Recurring Limits module
      recurring-limits:
        # enable / disable recurring limits protection
        enabled: true
    
        limits: # array of individual limits, which all need to be passed
          - limitAmount: 1e+20
            duration: 86400
    
      ## Concurrency Limit module
      concurrency-limit:
        # enable / disable concurrency limit
        enabled: true
    
        concurrencyLimit: 1 # only allow 1 concurrent session (sessions in 'running' state at the same time for the same ip / target addr)
        byAddrOnly: false # only check concurrency by target address
        byIPOnly: false # only check concurrency by IP address
        #messageByAddr: "" # custom error message when limit is exceeded by same target address
        #messageByIP: "" # custom error message when limit is exceeded by same IP address
    
      ## Proof of Work (mining) protection
      pow:
        # enable / disable PoW protection
        enabled: false
    
        # reward amount per eligible hash (in wei)
        powShareReward: 5e+17
    
        # penalty for not responding to a verification request (percent of powShareReward)
        # shouldn't be too high as this can happen regularily in case of connection loss or so
        verifyMinerMissPenaltyPerc: 10  # 10% of powShareReward
    
        # reward for responding to a verification request in time (percent of powShareReward)
        # some extra reward for slow miners
        # comment out to disable rewards for verification requests
        verifyMinerRewardPerc:   15  # 15% of powShareReward
    
        # maximum mining session time (in seconds)
        powSessionTimeout: 18000
    
        # maximum number of seconds a session can idle until it gets closed
        powIdleTimeout: 1800 # 30min
    
        # maximum allowed mining hashrate (will be throttled to this rate when faster)
        powHashrateSoftLimit: 1000 # soft limit (enforced client side)
        powHashrateHardLimit: 1100 # hard limit (reject shares with too high nonces)
    
        # number of 0-bits the scrypt hash needs to start with to be eligible for a reward
        powDifficulty: 12
    
        # mining algorithm to use
        powHashAlgo: "argon2"  # scrypt / cryptonight / argon2
    
        # pow module settings have been trimmed for readability.
        # you can find all available settings on https://github.com/pk910/PoWFaucet/wiki/Operator-Wiki#module-pow
    
        powPingInterval: 45
        powPingTimeout: 90
    
    ### Fund Management
    
    # minimum balance to keep in the faucet wallet (in wei)
    spareFundsAmount: 100000000000000000  # 0.1 ETH
    
    # minimum balance to show the empty faucet error message
    noFundsBalance:   1000000000000000000  # 1 ETH
    
    # minimum balance to show the low funds warning
    lowFundsBalance: 1000000000000000000000  # 1000 ETH
    
    # low faucet balance warning message / false to disable the warning
    lowFundsWarning: "The faucet is running out of funds! Faucet Balance: {1}"
    
    # empty faucet error message / false to disable the error
    noFundsError: "Sorry, the faucet is out of funds :("
    
    # RPC unreachable error message / true to show the generic message / false to disable the error
    rpcConnectionError: "The Faucet is currently not working properly (RPC error)"
    
    # prevent creation of new sessions (used for maintenance)
    #denyNewSessions: "Sorry, the faucet is currently in maintenance mode. Please try again later."
    
    ### Other Settings
    
    # print faucet stats to log interval (10min default)
    #faucetLogStatsInterval: 600
    
    # build SEO optimized index.seo.html and deliver as index page
    # the blank loader page just looks bad when parsed by search engines
    buildSeoIndex: true
    
    # some additional meta tags to add to the SEO optimized page
    buildSeoMeta:
      keywords: "powfaucet,faucet,ethereum,ethereum faucet,evm,eth,pow"
    
    resultSharing:
      preHtml: |
        <div class="sh-opt">
          Did you like the faucet? Give that project a
          <iframe src="https://ghbtns.com/github-btn.html?user=pk910&repo=PoWFaucet&type=star&count=true"
           frameborder="0" scrolling="0" width="150" height="20" title="GitHub"></iframe>
        </div>
      caption: ""
---
# Source: powfaucet/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-powfaucet-headless
  labels:
    helm.sh/chart: powfaucet-0.0.4
    app.kubernetes.io/name: powfaucet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: powfaucet
    app.kubernetes.io/instance: release-name
---
# Source: powfaucet/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-powfaucet
  labels:
    helm.sh/chart: powfaucet-0.0.4
    app.kubernetes.io/name: powfaucet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: powfaucet
    app.kubernetes.io/instance: release-name
---
# Source: powfaucet/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-powfaucet
  labels:
    helm.sh/chart: powfaucet-0.0.4
    app.kubernetes.io/name: powfaucet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: powfaucet
      app.kubernetes.io/instance: release-name
  serviceName: release-name-powfaucet-headless
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: powfaucet
        app.kubernetes.io/instance: release-name
      annotations:
        checksum/config: c6a3e31c2fbaa55cde0f5e6cba7355672cc88463d5cda49f0446f12a09a61a0b
    spec:
      serviceAccountName: release-name-powfaucet
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      initContainers:
      containers:
        - name: powfaucet
          image: "pk910/powfaucet:v2-stable"
          imagePullPolicy: IfNotPresent
          args:
            - --datadir=/data
          securityContext:
            {}
          volumeMounts:
            - name: storage
              mountPath: "/data"
            - name: config
              mountPath: "/data/faucet-config.yaml"
              subPath: faucet-config.yaml
              readOnly: true
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            {}
          env:
      nodeSelector:
        {}
      affinity:
        {}
      tolerations:
        []
      topologySpreadConstraints:
        []
      terminationGracePeriodSeconds: 30
      volumes:
        - name: config
          configMap:
            name: release-name-powfaucet
        - name: storage
          emptyDir: {}
---
# Source: powfaucet/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-powfaucet-test-connection"
  labels:
    helm.sh/chart: powfaucet-0.0.4
    app.kubernetes.io/name: powfaucet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
       - --location
       - --request
       - GET
       - 'release-name-powfaucet:8080/'
  restartPolicy: Never
