---
# Source: argo-ci/charts/argo/templates/server-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-server
  annotations:
    {}
---
# Source: argo-ci/charts/argo/templates/workflow-controller-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo
  annotations:
    {}
---
# Source: argo-ci/charts/argo/templates/workflow-controller-config-map.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-workflow-controller-configmap
  labels:
    chart: argo-0.16.10
    release: release-name
    heritage: Helm
data:
  config: |
    containerRuntimeExecutor: docker
---
# Source: argo-ci/charts/argo/templates/server-cluster-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-server
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - events
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - pods
  - pods/exec
  - pods/log
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - watch
  - create
  - patch
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  - workfloweventbindings
  - workflowtemplates
  - cronworkflows
  - cronworkflows/finalizers
  - clusterworkflowtemplates
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
---
# Source: argo-ci/charts/argo/templates/server-cluster-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-server-cluster-template
rules:
- apiGroups:
  - argoproj.io
  resources:
  - clusterworkflowtemplates
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
# Source: argo-ci/charts/argo/templates/workflow-controller-cluster-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-workflow-controller
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - pods/exec
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - create
  - delete
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  - workflows/finalizers
  verbs:
  - get
  - list
  - watch
  - update
  - patch
  - delete
  - create
- apiGroups:
  - argoproj.io
  resources:
  - workflowtemplates
  - workflowtemplates/finalizers
  - clusterworkflowtemplates
  - clusterworkflowtemplates/finalizers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - cronworkflows
  - cronworkflows/finalizers
  verbs:
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - list
- apiGroups:
  - "policy"
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - get
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  resourceNames:
  - workflow-controller
  - workflow-controller-lease
  verbs:
  - get
  - watch
  - update
  - patch
  - delete
---
# Source: argo-ci/charts/argo/templates/workflow-controller-cluster-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-workflow-controller-cluster-template
rules:
- apiGroups:
  - argoproj.io
  resources:
  - clusterworkflowtemplates
  - clusterworkflowtemplates/finalizers
  verbs:
  - get
  - list
  - watch
---
# Source: argo-ci/charts/argo/templates/server-crb.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-server
subjects:
- kind: ServiceAccount
  name: argo-server
  namespace: default
---
# Source: argo-ci/charts/argo/templates/server-crb.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-server-cluster-template
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-server-cluster-template
subjects:
- kind: ServiceAccount
  name: argo-server
  namespace: default
---
# Source: argo-ci/charts/argo/templates/workflow-controller-crb.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-workflow-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-workflow-controller
subjects:
  - kind: ServiceAccount
    name: argo
    namespace: default
---
# Source: argo-ci/charts/argo/templates/workflow-controller-crb.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-workflow-controller-cluster-template
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-workflow-controller-cluster-template
subjects:
  - kind: ServiceAccount
    name: argo
    namespace: default
---
# Source: argo-ci/charts/argo/templates/server-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-server
  labels:
    chart: argo-0.16.10
    release: release-name
    heritage: Helm
spec:
  ports:
  - port: 2746
    targetPort: 2746
  selector:
    app: release-name-server
  sessionAffinity: None
  type: ClusterIP
---
# Source: argo-ci/templates/ci-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-ci
  labels:
    chart: argo-ci-1.0.0
    release: release-name
    heritage: Helm
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8001
  selector:
    app: release-name-ci
  sessionAffinity: None
  type: LoadBalancer
---
# Source: argo-ci/charts/argo/templates/server-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-server
  labels:
    chart: argo-0.16.10
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: release-name-server
      release: release-name
  template:
    metadata:
      labels:
        app: release-name-server
        release: release-name
    spec:
      serviceAccountName: "argo-server"
      containers:
        - name: argo-server
          args:
          - server
          - --configmap=release-name-workflow-controller-configmap
          image: "argoproj/argocli:v2.12.5"
          imagePullPolicy: Always
          readinessProbe:
            httpGet:
              path: /
              port: 2746
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 20
          env:
          - name: IN_CLUSTER
            value: "true"
          - name: ARGO_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: BASE_HREF
            value: "/"
          resources:
            {}
          volumeMounts:
          - name: tmp
            mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: argo-ci/charts/argo/templates/workflow-controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-workflow-controller
  labels:
    app: release-name-workflow-controller
    chart: argo-0.16.10
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: release-name-workflow-controller
      release: release-name
  template:
    metadata:
      labels:
        app: release-name-workflow-controller
        release: release-name
    spec:
      serviceAccountName: "argo"
      containers:
        - name: controller
          image: "argoproj/workflow-controller:v2.12.5"
          imagePullPolicy: Always
          command: [ "workflow-controller" ]
          args:
          - "--configmap"
          - "release-name-workflow-controller-configmap"
          - "--executor-image"
          - "argoproj/argoexec:v2.12.5"
          - "--loglevel"
          - "info"
          - "--gloglevel"
          - "0"
          env:
          - name: ARGO_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          resources:
            {}
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: argo-ci/templates/ci-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-ci
  labels:
    chart: argo-ci-1.0.0
    release: release-name
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: release-name-ci
      release: release-name
  template:
    metadata:
      labels:
        app: release-name-ci
        release: release-name
    spec:
      containers:
        - name: ci
          image: "argoproj/argoci:v1.0.0-alpha2"
          imagePullPolicy: Always
          env:
          - name: IN_CLUSTER
            value: "true"
          - name: NAMESPACE
            value: default
          - name: ARGO_CI_IMAGE
            value: "argoproj/argoci:v1.0.0-alpha2"
          - name: CONTROLLER_INSTANCE_ID
            value: release-name
          ports:
          - containerPort: 8001
          - containerPort: 8002
---
# Source: argo-ci/charts/argo/templates/workflow-aggregate-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation
  name: argo-aggregate-to-view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
rules:
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  - workflows/finalizers
  - workflowtemplates
  - workflowtemplates/finalizers
  - cronworkflows
  - cronworkflows/finalizers
  - clusterworkflowtemplates
  - clusterworkflowtemplates/finalizers
  verbs:
  - get
  - list
  - watch
---
# Source: argo-ci/charts/argo/templates/workflow-aggregate-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation
  name: argo-aggregate-to-edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
rules:
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  - workflows/finalizers
  - workflowtemplates
  - workflowtemplates/finalizers
  - cronworkflows
  - cronworkflows/finalizers
  - clusterworkflowtemplates
  - clusterworkflowtemplates/finalizers
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
---
# Source: argo-ci/charts/argo/templates/workflow-aggregate-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation
  name: argo-aggregate-to-admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
rules:
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  - workflows/finalizers
  - workflowtemplates
  - workflowtemplates/finalizers
  - cronworkflows
  - cronworkflows/finalizers
  - clusterworkflowtemplates
  - clusterworkflowtemplates/finalizers
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
