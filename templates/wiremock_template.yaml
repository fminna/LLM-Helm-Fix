---
# Source: wiremock/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-wiremock
  labels:
    helm.sh/chart: wiremock-0.3.1
    app.kubernetes.io/name: wiremock
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.27.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: wiremock/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-wiremock
  labels:
    helm.sh/chart: wiremock-0.3.1
    app.kubernetes.io/name: wiremock
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.27.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/resource-policy: keep
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 10Gi
---
# Source: wiremock/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-wiremock
  labels:
    helm.sh/chart: wiremock-0.3.1
    app.kubernetes.io/name: wiremock
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.27.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: wiremock
    app.kubernetes.io/instance: release-name
---
# Source: wiremock/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-wiremock
  labels:
    helm.sh/chart: wiremock-0.3.1
    app.kubernetes.io/name: wiremock
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.27.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: wiremock
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: wiremock
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-wiremock
      securityContext:
        {}
      containers:
        - name: wiremock
          securityContext:
            {}
          image: "rodolpheche/wiremock:2.27.2"
          imagePullPolicy: IfNotPresent
          command: ["/docker-entrypoint.sh"]
          args:
            - --max-request-journal=1000
            - --local-response-templating
            - --root-dir=/home/wiremock
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: wiremock-data
              mountPath: /home/wiremock
          livenessProbe:
            httpGet:
              path: /__admin
              port: http
          readinessProbe:
            httpGet:
              path: /__admin
              port: http
          resources:
            {}
      volumes:
        - name: wiremock-data
          persistentVolumeClaim:
            claimName: release-name-wiremock
---
# Source: wiremock/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-wiremock-test-connection"
  labels:
    helm.sh/chart: wiremock-0.3.1
    app.kubernetes.io/name: wiremock
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.27.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-wiremock:80']
  restartPolicy: Never
