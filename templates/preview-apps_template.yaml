---
# Source: preview-apps/charts/kubernetes-replicator/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kubernetes-replicator
  labels:
    helm.sh/chart: kubernetes-replicator-2.7.3
    app.kubernetes.io/name: kubernetes-replicator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2.7.3"
    app.kubernetes.io/managed-by: Helm
---
# Source: preview-apps/charts/kubernetes-replicator/templates/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-kubernetes-replicator
  labels:
    helm.sh/chart: kubernetes-replicator-2.7.3
    app.kubernetes.io/name: kubernetes-replicator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2.7.3"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [ "" ]
    resources: [ "namespaces" ]
    verbs: [ "get", "watch", "list" ]
  - apiGroups: [""]
    resources: ["secrets", "configmaps"]
    verbs: ["get", "watch", "list", "create", "update", "patch", "delete"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["roles", "rolebindings"]
    verbs: ["get", "watch", "list", "create", "update", "patch", "delete"]
---
# Source: preview-apps/charts/kubernetes-replicator/templates/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-kubernetes-replicator
  labels:
    helm.sh/chart: kubernetes-replicator-2.7.3
    app.kubernetes.io/name: kubernetes-replicator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2.7.3"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  name: release-name-kubernetes-replicator
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: release-name-kubernetes-replicator
    namespace: "default"
---
# Source: preview-apps/charts/kubernetes-replicator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kubernetes-replicator
  labels:
    helm.sh/chart: kubernetes-replicator-2.7.3
    app.kubernetes.io/name: kubernetes-replicator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2.7.3"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubernetes-replicator
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubernetes-replicator
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-kubernetes-replicator
      securityContext:
        {}
      containers:
        - name: kubernetes-replicator
          securityContext:
            {}
          image: "quay.io/mittwald/kubernetes-replicator:v2.7.3"
          imagePullPolicy: Always
          args:
            []
          ports:
            - name: health
              containerPort: 9102
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: health
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: health
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          resources:
            {}
---
# Source: preview-apps/templates/certificate.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: preview-apps-tls
spec:
  secretName: preview-apps-tls
  issuerRef: 
    kind: Issuer
    name: preview-apps
  commonName: "*.preview.sandbox.evilmartians.net"
  dnsNames:
    - "*.preview.sandbox.evilmartians.net"
  secretTemplate:
    annotations:
      replicator.v1.mittwald.de/replication-allowed: "true"
      replicator.v1.mittwald.de/replication-allowed-namespaces: "preview-[0-9]+"
---
# Source: preview-apps/templates/issuer.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: preview-apps
spec:
  acme:
    email: admin@evilmartians.com
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: preview-apps
    solvers:
    - selector:
        dnsZones:
          - preview.sandbox.evilmartians.net
      dns01: 
        route53:
          accessKeyID: AKIA5EXAMPLE
          hostedZoneID: Z0152EXAMPLE
          region: us-east-1
          secretAccessKeySecretRef:
            key: secret-access-key
            name: route53-secret
