---
# Source: plex-nfs/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-plex-nfs
  labels:
    helm.sh/chart: plex-nfs-2.2.3
    app.kubernetes.io/name: plex-nfs
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.29.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: plex-nfs/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-plex-nfs
  labels:
    helm.sh/chart: plex-nfs-2.2.3
    app.kubernetes.io/name: plex-nfs
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.29.2"
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: plex-nfs/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-plex-nfs
  labels:
    helm.sh/chart: plex-nfs-2.2.3
    app.kubernetes.io/name: plex-nfs
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.29.2"
    app.kubernetes.io/managed-by: Helm
data:
  {}
---
# Source: plex-nfs/templates/pv-nfs.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: release-name-plex-nfs
spec:
  storageClassName: ""
  capacity:
    storage: "1Ti"     
  accessModes:
    - "ReadWriteOnce"
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: /volume1/Plex
    server: 192.168.1.20
    readOnly: true
---
# Source: plex-nfs/templates/pvc-config.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-plex-nfs-config
  labels:
    helm.sh/chart: plex-nfs-2.2.3
    app.kubernetes.io/name: plex-nfs
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.29.2"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
---
# Source: plex-nfs/templates/pvc-nfs.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-plex-nfs-data
spec:
  accessModes:
    - "ReadWriteOnce"
  storageClassName: ""
  volumeName: release-name-plex-nfs
  volumeMode: Filesystem
  resources:
    requests:
      storage: "1Ti"
---
# Source: plex-nfs/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-plex-nfs
  labels:
    helm.sh/chart: plex-nfs-2.2.3
    app.kubernetes.io/name: plex-nfs
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.29.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 32400
      targetPort: plex
      protocol: TCP
      name: plex
  selector:
    app.kubernetes.io/name: plex-nfs
    app.kubernetes.io/instance: release-name
---
# Source: plex-nfs/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-plex-nfs
  labels:
    helm.sh/chart: plex-nfs-2.2.3
    app.kubernetes.io/name: plex-nfs
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.29.2"
    app.kubernetes.io/managed-by: Helm
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: plex-nfs
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/configmap: 9345f7e9dbbe16385a944a67b593a3ab56cd82ebffe9c0aa33b7758d860c9781
        checksum/secret: 6d71308358117915bed9459fa406f7b13c009c69b1b02518c7a85b748f14bdb8
      labels:
        app.kubernetes.io/name: plex-nfs
        app.kubernetes.io/instance: release-name
    spec:
      hostNetwork: true
      serviceAccountName: release-name-plex-nfs
      securityContext:
        {}
      dnsPolicy: ClusterFirst
      containers:
        - name: plex-nfs
          securityContext:
            {}
          image: "docker.io/linuxserver/plex:1.29.2"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /data
              name: data
          envFrom:
            - configMapRef:
                name: release-name-plex-nfs
            - secretRef:
                name: release-name-plex-nfs
          ports:
            - name: plex
              containerPort: 32400
              protocol: TCP
              hostPort: 32400
          readinessProbe:
            tcpSocket:
              port: plex
          resources:
            {}
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: release-name-plex-nfs-config
        - name: data
          persistentVolumeClaim:
            claimName: release-name-plex-nfs-data
