---
# Source: kimai/charts/mariadb/templates/common.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: release-name-mariadb-credentials
  namespace: default
  labels:
    app: "mariadb-11.0.2"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "mariadb"
    app.kubernetes.io/version: "11.1.3"
    helm-revision: "1"
    helm.sh/chart: "mariadb-11.0.2"
    release: "release-name"
stringData:
  mariadb-password: 'empty'
  mariadb-root-password: 'testroot'
---
# Source: kimai/templates/common.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: release-name-kimai-kimai-secret
  namespace: default
  labels:
    app: "kimai-8.0.22"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "kimai"
    app.kubernetes.io/version: "2.1.0"
    helm-revision: "1"
    helm.sh/chart: "kimai-8.0.22"
    release: "release-name"
stringData:
  APP_SECRET: GwEPbr5DskWNvxsGyPir1V5ytvGXXASF
---
# Source: kimai/templates/common.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: release-name-mariadbcreds
  namespace: default
  labels:
    app: "kimai-8.0.22"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "kimai"
    app.kubernetes.io/version: "2.1.0"
    helm-revision: "1"
    helm.sh/chart: "kimai-8.0.22"
    release: "release-name"
stringData:
  jdbc: jdbc:sqlserver://release-name-mariadb:3306/kimai
  jdbc-mariadb: jdbc:mariadb://release-name-mariadb:3306/kimai
  jdbc-mysql: jdbc:mysql://release-name-mariadb:3306/kimai
  mariadb-password: 4TegDsAkGyR5caDhtLbvPlVtP2v35VGJnGOK43He6sZ5NtBDiR
  mariadb-root-password: dQEwWexFWcRcTM6vHRFD3ip1vfjyf98JPUU2UTvyWNMRYTOj2v
  plainhost: release-name-mariadb
  plainporthost: release-name-mariadb:3306
  url: sql://kimai:4TegDsAkGyR5caDhtLbvPlVtP2v35VGJnGOK43He6sZ5NtBDiR@release-name-mariadb:3306/kimai
  urlnossl: sql://kimai:4TegDsAkGyR5caDhtLbvPlVtP2v35VGJnGOK43He6sZ5NtBDiR@release-name-mariadb:3306/kimai?sslmode=disable
---
# Source: kimai/templates/common.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-kimai-kimai-config
  namespace: default
  labels:
    app: "kimai-8.0.22"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "kimai"
    app.kubernetes.io/version: "2.1.0"
    helm-revision: "1"
    helm.sh/chart: "kimai-8.0.22"
    release: "release-name"
data:
  ADMINMAIL: admin@change.me
  ADMINPASS: ChangeME
  APP_ENV: prod
  DB_BASE: kimai
  DB_PORT: "3306"
  DB_TYPE: mysql
  DB_USER: kimai
  TRUSTED_HOSTS: localhost
  memory_limit: 256M
---
# Source: kimai/charts/mariadb/templates/common.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-mariadb-data
  namespace: default
  labels:
    app: "mariadb-11.0.2"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "mariadb"
    app.kubernetes.io/version: "11.1.3"
    helm-revision: "1"
    helm.sh/chart: "mariadb-11.0.2"
    release: "release-name"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
---
# Source: kimai/templates/common.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-kimai-data
  namespace: default
  labels:
    app: "kimai-8.0.22"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "kimai"
    app.kubernetes.io/version: "2.1.0"
    helm-revision: "1"
    helm.sh/chart: "kimai-8.0.22"
    release: "release-name"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
---
# Source: kimai/templates/common.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-kimai-plugins
  namespace: default
  labels:
    app: "kimai-8.0.22"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "kimai"
    app.kubernetes.io/version: "2.1.0"
    helm-revision: "1"
    helm.sh/chart: "kimai-8.0.22"
    release: "release-name"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
---
# Source: kimai/charts/mariadb/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mariadb
  namespace: default
  labels:
    app: "mariadb-11.0.2"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "mariadb"
    app.kubernetes.io/version: "11.1.3"
    helm-revision: "1"
    helm.sh/chart: "mariadb-11.0.2"
    release: "release-name"
    service.name: "main"
spec:
  type: ClusterIP
  publishNotReadyAddresses: false
  ports:
    - name: main
      port: 3306
      protocol: TCP
      targetPort: 3306
  selector:
    pod.name: main
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/instance: release-name
---
# Source: kimai/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kimai
  namespace: default
  labels:
    app: "kimai-8.0.22"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "kimai"
    app.kubernetes.io/version: "2.1.0"
    helm-revision: "1"
    helm.sh/chart: "kimai-8.0.22"
    release: "release-name"
    service.name: "main"
spec:
  type: ClusterIP
  publishNotReadyAddresses: false
  ports:
    - name: main
      port: 10198
      protocol: TCP
      targetPort: 8001
  selector:
    pod.name: main
    app.kubernetes.io/name: kimai
    app.kubernetes.io/instance: release-name
---
# Source: kimai/charts/mariadb/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-mariadb
  namespace: default
  labels:
    app: "mariadb-11.0.2"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "mariadb"
    app.kubernetes.io/version: "11.1.3"
    helm-revision: "1"
    helm.sh/chart: "mariadb-11.0.2"
    release: "release-name"
spec:  
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      pod.name: main
      app.kubernetes.io/name: mariadb
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app: "mariadb-11.0.2"
        app.kubernetes.io/instance: "release-name"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/name: "mariadb"
        app.kubernetes.io/version: "11.1.3"
        helm-revision: "1"
        helm.sh/chart: "mariadb-11.0.2"
        pod.lifecycle: "permanent"
        pod.name: "main"
        release: "release-name"
      annotations:
        rollme: "DMQ1K"
    spec:
      serviceAccountName: default
      automountServiceAccountToken: false
      runtimeClassName: 
      hostNetwork: false
      hostPID: false
      hostIPC: false
      shareProcessNamespace: false
      enableServiceLinks: false
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/arch: amd64
      topologySpreadConstraints:
        - maxSkew: 1
          whenUnsatisfiable: ScheduleAnyway
          topologyKey: "truecharts.org/rack"
          labelSelector:
            matchLabels:      
              pod.name: main
              app.kubernetes.io/name: mariadb
              app.kubernetes.io/instance: release-name
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
        - maxSkew: 1
          whenUnsatisfiable: ScheduleAnyway
          topologyKey: "kubernetes.io/hostname"
          labelSelector:
            matchLabels:      
              pod.name: main
              app.kubernetes.io/name: mariadb
              app.kubernetes.io/instance: release-name
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      terminationGracePeriodSeconds: 60
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 568
        sysctls: []
      hostUsers: true
      containers:
        - name: release-name-mariadb
          image: bitnami/mariadb:11.1.3@sha256:256bba825841017077b0dcd9fabafd1d0a54dfde957cd4bf71c2cb291b454a25
          imagePullPolicy: IfNotPresent
          tty: false
          stdin: false
          ports:
            - name: main
              containerPort: 3306
              protocol: TCP
              hostPort: null
          volumeMounts:
            - name: data
              mountPath: /bitnami/mariadb
              readOnly: false
            - name: devshm
              mountPath: /dev/shm
              readOnly: false
            - name: shared
              mountPath: /shared
              readOnly: false
            - name: tmp
              mountPath: /tmp
              readOnly: false
            - name: varlogs
              mountPath: /var/logs
              readOnly: false
            - name: varrun
              mountPath: /var/run
              readOnly: false
          livenessProbe:
            exec:
              command:
                - "/bin/bash"
                - "-ec"
                - "until /opt/bitnami/scripts/mariadb/healthcheck.sh; do sleep 2; done"
            initialDelaySeconds: 10
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - "/bin/bash"
                - "-ec"
                - "until /opt/bitnami/scripts/mariadb/healthcheck.sh; do sleep 2; done"
            initialDelaySeconds: 10
            failureThreshold: 5
            successThreshold: 2
            timeoutSeconds: 5
            periodSeconds: 10
          startupProbe:
            exec:
              command:
                - "/bin/bash"
                - "-ec"
                - "until /opt/bitnami/scripts/mariadb/healthcheck.sh; do sleep 2; done"
            initialDelaySeconds: 10
            failureThreshold: 60
            successThreshold: 1
            timeoutSeconds: 2
            periodSeconds: 5
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits: 
              cpu: 4000m 
              memory: 8Gi
          securityContext:
            runAsNonRoot: false
            runAsUser: 568
            runAsGroup: 0
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            privileged: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add: []
              drop:
                - ALL
          env:
            - name: "TZ"
              value: "UTC"
            - name: "UMASK"
              value: "0022"
            - name: "UMASK_SET"
              value: "0022"
            - name: "PUID"
              value: "568"
            - name: "USER_ID"
              value: "568"
            - name: "UID"
              value: "568"
            - name: "PGID"
              value: "568"
            - name: "GROUP_ID"
              value: "568"
            - name: "GID"
              value: "568"
            - name: "MARIADB_DATABASE"
              value: "kimai"
            - name: "MARIADB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  key: "mariadb-password"
                  name: "release-name-mariadbcreds"
            - name: "MARIADB_ROOT_PASSWORD"
              valueFrom:
                secretKeyRef:
                  key: "mariadb-root-password"
                  name: "release-name-mariadbcreds"
            - name: "MARIADB_USER"
              value: "kimai"
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: release-name-mariadb-data
        - name: devshm
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: shared
          emptyDir: {}
        - name: tmp
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: varlogs
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: varrun
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
---
# Source: kimai/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kimai
  namespace: default
  labels:
    app: "kimai-8.0.22"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "kimai"
    app.kubernetes.io/version: "2.1.0"
    helm-revision: "1"
    helm.sh/chart: "kimai-8.0.22"
    release: "release-name"
spec:  
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      pod.name: main
      app.kubernetes.io/name: kimai
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app: "kimai-8.0.22"
        app.kubernetes.io/instance: "release-name"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/name: "kimai"
        app.kubernetes.io/version: "2.1.0"
        helm-revision: "1"
        helm.sh/chart: "kimai-8.0.22"
        pod.lifecycle: "permanent"
        pod.name: "main"
        release: "release-name"
      annotations:
        rollme: "JhVlr"
    spec:
      serviceAccountName: default
      automountServiceAccountToken: false
      runtimeClassName: 
      hostNetwork: false
      hostPID: false
      hostIPC: false
      shareProcessNamespace: false
      enableServiceLinks: false
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/arch: amd64
      topologySpreadConstraints:
        - maxSkew: 1
          whenUnsatisfiable: ScheduleAnyway
          topologyKey: "truecharts.org/rack"
          labelSelector:
            matchLabels:      
              pod.name: main
              app.kubernetes.io/name: kimai
              app.kubernetes.io/instance: release-name
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
        - maxSkew: 1
          whenUnsatisfiable: ScheduleAnyway
          topologyKey: "kubernetes.io/hostname"
          labelSelector:
            matchLabels:      
              pod.name: main
              app.kubernetes.io/name: kimai
              app.kubernetes.io/instance: release-name
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      terminationGracePeriodSeconds: 60
      securityContext:
        fsGroup: 33
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 568
        sysctls: []
      hostUsers: true
      containers:
        - name: release-name-kimai
          image: kimai/kimai2:apache-2.1.0-prod@27b7e83d471f5adf7127d05c6dfab5c961bedf51dab405bfa585a12d62dbf517
          imagePullPolicy: IfNotPresent
          tty: false
          stdin: false
          ports:
            - name: main
              containerPort: 8001
              protocol: TCP
              hostPort: null
          volumeMounts:
            - name: data
              mountPath: /opt/kimai/var/data
              readOnly: false
            - name: devshm
              mountPath: /dev/shm
              readOnly: false
            - name: plugins
              mountPath: /opt/kimai/var/plugins
              readOnly: false
            - name: shared
              mountPath: /shared
              readOnly: false
            - name: tmp
              mountPath: /tmp
              readOnly: false
            - name: varlock
              mountPath: /var/lock
              readOnly: false
            - name: varlogs
              mountPath: /var/logs
              readOnly: false
            - name: varrun
              mountPath: /var/run
              readOnly: false
          livenessProbe:
            httpGet:
              port: 8001
              path: /en/login
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              port: 8001
              path: /en/login
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 5
            successThreshold: 2
            timeoutSeconds: 5
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 8001
            initialDelaySeconds: 10
            failureThreshold: 60
            successThreshold: 1
            timeoutSeconds: 2
            periodSeconds: 5
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits: 
              cpu: 4000m 
              memory: 8Gi
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
            runAsGroup: 0
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            privileged: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add:
                - CHOWN
                - DAC_OVERRIDE
                - FOWNER
                - SETGID
                - SETUID
              drop:
                - ALL
          envFrom:
            - configMapRef:
                name: "release-name-kimai-kimai-config"
          env:
            - name: "TZ"
              value: "UTC"
            - name: "UMASK"
              value: "0022"
            - name: "UMASK_SET"
              value: "0022"
            - name: "PUID"
              value: "568"
            - name: "USER_ID"
              value: "568"
            - name: "UID"
              value: "568"
            - name: "PGID"
              value: "33"
            - name: "GROUP_ID"
              value: "33"
            - name: "GID"
              value: "33"
            - name: "APP_SECRET"
              valueFrom:
                secretKeyRef:
                  key: "APP_SECRET"
                  name: "release-name-kimai-kimai-secret"
            - name: "DB_HOST"
              valueFrom:
                secretKeyRef:
                  key: "plainhost"
                  name: "release-name-mariadbcreds"
            - name: "DB_PASS"
              valueFrom:
                secretKeyRef:
                  key: "mariadb-password"
                  name: "release-name-mariadbcreds"
      initContainers:
        - name: release-name-kimai-system-mariadb-wait
          image: tccr.io/tccr/db-wait-mariadb:v1.1.0@sha256:62858b8191b662716d84840f8d9b3c86654f175686159c5267a1c860d75f398d
          imagePullPolicy: IfNotPresent
          tty: false
          stdin: false
          command:
            - "/bin/sh"
            - "-c"
            - "/bin/bash <<'EOF'\necho \"Executing DB waits...\"\nuntil\n  mysqladmin -uroot -h\"${MARIADB_HOST}\" -p\"${MARIADB_ROOT_PASSWORD}\" ping \\\n  && mysqladmin -uroot -h\"${MARIADB_HOST}\" -p\"${MARIADB_ROOT_PASSWORD}\" status;\n  do sleep 2;\ndone\nEOF"
          volumeMounts:
            - name: devshm
              mountPath: /dev/shm
              readOnly: false
            - name: shared
              mountPath: /shared
              readOnly: false
            - name: tmp
              mountPath: /tmp
              readOnly: false
            - name: varlogs
              mountPath: /var/logs
              readOnly: false
            - name: varrun
              mountPath: /var/run
              readOnly: false
          
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits: 
              cpu: 4000m 
              memory: 8Gi
          securityContext:
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            privileged: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add: []
              drop:
                - ALL
          env:
            - name: "TZ"
              value: "UTC"
            - name: "UMASK"
              value: "0022"
            - name: "UMASK_SET"
              value: "0022"
            - name: "S6_READ_ONLY_ROOT"
              value: "1"
            - name: "MARIADB_HOST"
              valueFrom:
                secretKeyRef:
                  key: "plainhost"
                  name: "release-name-mariadbcreds"
            - name: "MARIADB_ROOT_PASSWORD"
              valueFrom:
                secretKeyRef:
                  key: "mariadb-root-password"
                  name: "release-name-mariadbcreds"
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: release-name-kimai-data
        - name: devshm
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: plugins
          persistentVolumeClaim:
            claimName: release-name-kimai-plugins
        - name: shared
          emptyDir: {}
        - name: tmp
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: varlock
          emptyDir: {}
        - name: varlogs
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: varrun
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
