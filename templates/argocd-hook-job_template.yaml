---
# Source: argocd-hook-job/templates/serviceaccount.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
  name: argocd-hook-job
  namespace: replace
---
# Source: argocd-hook-job/templates/role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: argocd-hook-job
  namespace: replace
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
rules:
  - replace
---
# Source: argocd-hook-job/templates/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: argocd-hook-job
  namespace: replace
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
subjects:
  - kind: ServiceAccount
    name: argocd-hook-job
    namespace: replace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argocd-hook-job
---
# Source: argocd-hook-job/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  generateName: argocd-hook-job-
  namespace: replace
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    spec:
      serviceAccountName: argocd-hook-job
      initContainers:
        - name: init
          image: replace:replace
          imagePullPolicy: IfNotPresent
          command: ["replace"]
          args:
            - replace
      containers:
        - name: job
          image: replace:replace
          command: ["replace"]
          args:
            - replace
      restartPolicy: Never
  backoffLimit: 4
---
# Source: argocd-hook-job/templates/scc-anyuid.yaml
allowHostPorts: false
priority: 10
requiredDropCapabilities:
  - MKNOD
allowPrivilegedContainer: false
runAsUser:
  type: RunAsAny
users:
  - 'system:serviceaccount:replace:argocd-hook-job'
allowHostDirVolumePlugin: false
allowHostIPC: false
seLinuxContext:
  type: MustRunAs
readOnlyRootFilesystem: false
metadata:
  annotations:
    argocd.argoproj.io/sync-options: Validate=false
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
  name: argocd-hook-job-anyuid
fsGroup:
  type: RunAsAny
groups:
  - 'system:cluster-admins'
kind: SecurityContextConstraints
defaultAddCapabilities: null
supplementalGroups:
  type: RunAsAny
volumes:
  - configMap
  - downwardAPI
  - emptyDir
  - persistentVolumeClaim
  - projected
  - secret
allowHostPID: false
allowHostNetwork: false
allowPrivilegeEscalation: true
apiVersion: security.openshift.io/v1
allowedCapabilities: null
---
# Source: argocd-hook-job/templates/scc-privileged.yaml
allowHostPorts: true
priority: null
requiredDropCapabilities: null
allowPrivilegedContainer: true
runAsUser:
  type: RunAsAny
users:
  - 'system:serviceaccount:replace:argocd-hook-job'
allowHostDirVolumePlugin: true
seccompProfiles:
  - '*'
allowHostIPC: true
seLinuxContext:
  type: RunAsAny
readOnlyRootFilesystem: false
metadata:
  annotations:
    argocd.argoproj.io/sync-options: Validate=false
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded   
  name: argocd-hook-job-privileged
fsGroup:
  type: RunAsAny
groups:
  - 'system:cluster-admins'
  - 'system:nodes'
  - 'system:masters'
kind: SecurityContextConstraints
defaultAddCapabilities: null
allowedUnsafeSysctls:
  - '*'
supplementalGroups:
  type: RunAsAny
volumes:
  - '*'
allowHostPID: true
allowHostNetwork: true
allowPrivilegeEscalation: true
apiVersion: security.openshift.io/v1
allowedCapabilities:
  - '*'
