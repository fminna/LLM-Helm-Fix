---
# Source: acp/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-acp
  labels:
    helm.sh/chart: acp-2.21.0
    app.kubernetes.io/name: acp
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.21.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: acp/templates/secretconfig.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-acp
  labels:
    helm.sh/chart: acp-2.21.0
    app.kubernetes.io/name: acp
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.21.0"
    app.kubernetes.io/managed-by: Helm
stringData:
  config.yaml: |
---
# Source: acp/templates/tls-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-acp-tls
  labels:
    helm.sh/chart: acp-2.21.0
    app.kubernetes.io/name: acp
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.21.0"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVEakNDQXZhZ0F3SUJBZ0lVRkxVR2IrVXgzTGJ5VEFkUDNac2t0MGlDYlFJd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1Z6RUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2xkaGMyaHBibWQwYjI0eEVEQU9CZ05WQkFjVApCMU5sWVhSMGJHVXhGREFTQmdOVkJBb1RDME5zYjNWa1pXNTBhWFI1TVFzd0NRWURWUVFMRXdKRFFUQWVGdzB5Ck1UQTBNakl3TnpRMk1EQmFGdzB5TmpBME1qRXdOelEyTURCYU1IY3hDekFKQmdOVkJBWVRBbFZUTVJRd0VnWUQKVlFRSUV3dFhZWE5vYVc1bmFIUnZiakVRTUE0R0ExVUVCeE1IVTJWaGRIUnNaVEVVTUJJR0ExVUVDaE1MUTJ4dgpkV1JsYm5ScGRIa3hGakFVQmdOVkJBc1REVUYxZEdodmNtbDZZWFJwYjI0eEVqQVFCZ05WQkFNVENXRmpjQzVzCmIyTmhiRENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFLM0wxRzdWS080YURhY3cKREdBNklPbmNUZ1QwaklVbHRTK09TTEg5a2U1bHRMZklLWitiamRNWWp2N0xUOXhPSDlWOWxJNUhSTXRNeGJoRAptTFl5OStkeWJXTEIxNW1jeG0rejNscnVoQk1QUy9aeGNHdkRkWlFJTGwzQ1VmM3o2SmZKRnQ3YzNjWHNKZmN1CnZCb1FKY1RDb0s3UjFmQTFSUGVDS0lUQU1jQ0UrT2FiNjdtUWhaREM3TkxjbUowVU9SS2FlVmhuMmdocGlVSU0KaVArdWhkQ2FBR3M2ODNQNkFvaDBOMXoxenNmcmM2cEpMbTQ0STZFOGNZVVN0MEtoNGdDOEs0aXZKaURFcFpVVgpPNlZGRnpiR0xwbURKdFE3c3ljUUNUSzlYbklDK0pMREJpOHRKTC9KbGtFekk4VDdGRFFucmFWRXBJKzNYdktpCldpbktsWlVDQXdFQUFhT0JzVENCcmpBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUIKQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0hRWURWUjBPQkJZRUZHY1lKZDhuN0djZgpjYnZOVlpnV1BHbnFKVnFyTUI4R0ExVWRJd1FZTUJhQUZNcFpCNFJrRkVuOVE3VS9Mc1I5Tm82cFc2TnRNQzhHCkExVWRFUVFvTUNhQ0NXeHZZMkZzYUc5emRJSURZV053Z2c1aFkzQXVZV053TFhONWMzUmxiWWNFZndBQUFUQU4KQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBY20zMGZHeENXVnBSK1ZSa0Yybm1uQ3RZNmtzV1QyN2ViNVpwcHNOcwpDb0F3VDlFTWFSUlEzc3g0My9UdnZkcHh6SktjQ0htZFBMUk9nZy9MNVVNbU9NakdUNW1xY0V2RjhDaXlBVC9nCnBZMWl1d3FJYnAzc1NmbnlUaVFuR3BTekhmdlVzYU9na2NGckxrQzhsWUxMYWw3YUhTUDVPbjN5K1BNaDhtZG0KREpTS3Q5NzNWUWo4N3E0cUU5aURYZHB6ajBLNU1LUytzYk5PaU9IOElmOUkyVHFNY3F3ZHJyTGUvVlA3bWh6NgpvTmMrY3IrK3hJZDZoMWpPNzY4anEwT2lLNUcvb1FRWFpQRC93TCtUWEYwVy9kdzZGNThFd0hlUWNEL0g3d0FzCloxaFFiNTFlLytiU0p4V01vZ1RWUFRFQ2xYejBOcE1JVjlYcmN4ZmhrNzFSanc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBcmN2VWJ0VW83aG9OcHpBTVlEb2c2ZHhPQlBTTWhTVzFMNDVJc2YyUjdtVzB0OGdwCm41dU4weGlPL3N0UDNFNGYxWDJVamtkRXkwekZ1RU9ZdGpMMzUzSnRZc0hYbVp6R2I3UGVXdTZFRXc5TDluRncKYThOMWxBZ3VYY0pSL2ZQb2w4a1czdHpkeGV3bDl5NjhHaEFseE1LZ3J0SFY4RFZFOTRJb2hNQXh3SVQ0NXB2cgp1WkNGa01MczB0eVluUlE1RXBwNVdHZmFDR21KUWd5SS82NkYwSm9BYXpyemMvb0NpSFEzWFBYT3grdHpxa2t1CmJqZ2pvVHh4aFJLM1FxSGlBTHdyaUs4bUlNU2xsUlU3cFVVWE5zWXVtWU1tMUR1ekp4QUpNcjFlY2dMNGtzTUcKTHkwa3Y4bVdRVE1qeFBzVU5DZXRwVVNrajdkZThxSmFLY3FWbFFJREFRQUJBb0lCQVFDc2dUYjRVOGZ1bmhtVApLeFA5cDNUbjYyM2RhVWJaR2haL2Y0RVVlcFlReFE3ZHBHWDhNSkJUU1hzVjJJUUtMZGxYTlBEeFVEZ3VlcU4rClJFb2QvdlVsMitSTE5CQm1Qc0NRT3o2bmp6dTFGMmZVMDhBOGxxUHNMVHFvZ2FxVW9UYnJBZ1FiYmFzTE8xeHIKdncyaDZRazBCZU1yNHNleFI0NlBCYmhtRzhiR1NSTS9GKzJsSkt3ckxkb0JhbUpCcmF4MHMzM1FYSEp6RTQwMQpNYnAwQVBTT3IvOFNsN05HZUFLNmJqQktaZ0Q2UGpDUkZ2Z1RQSDROOElYVUtjcm8yNWdscHdUOEFRQXZwQjJOCmhuVUx2R3BFbGJNRWNIWVJ6ODZNamYvN3pkSWphUngwLzNkSzg3Ym1JM01yUmVOYUp2MVUrbmUvbHNsUEppelUKbVhiVjFtQUJBb0dCQU5sOE9rSXpSSTBKbUM0RE4vUVAwRENFbVFNdkUxdmtSM3JoUlFNQ2VXUFduOEUrMTdUNApwT1crZmZLRW5UNXBhUm1acnc5WDNJNzlPRUJyVkVyWllGTmY2ZjMzRE1qQjExYnpzNktRRitOMGlmMk5sU2Y5ClJNT09yYklLZWcwK0ZSdURUeEpYMFZZK21qdzd4ZnpScTdaZyt6TFNkeVRIYnltdnRMZnlWcm1WQW9HQkFNeVMKOFgzV1NZS0xWS0VrREg0SUV6L09oZjlCdnBTN2YybFNyOVZlSzgyMFdZSkRLYlZpNVcrVXNqcjAvS1I4ZEFnUgpxSmRraTNJNFBRRXdHVDNBQmNZZzhEdjkvaGRSU3grS1Y5b0NQY3RBMXBLRzJlQWlaa1NYWWVQRFpBTlUzU053CjlTTE1GV1Q3QUVOUm1yYlNab3haaDc5YzNSQnU5U1dZYWFBc1JXd0JBb0dCQUxVdVJjYUN1VmdacHhxbCtjWXMKS2s5UkY3dk1TdjlodEo3TTdsWXNpSDVBL1lQYTI0N2JHVnlBRHFLc0VlYzluNTRCSnhMTUttVkExTXp0M1NJaAo1NXB0ckJ5ejVJV1czdE9FWUtGTUUycWMycHhOaC9YeGk0aXk0MGNRYlU5ODZjNnEzSU8yZnlHdk00UjhjMXRFClBSM0p1MXRDZEpsQ1AveGxjVk5RNHlqbEFvR0JBS1RES0lwdi93Nk1CeUl0ZFg1QUpMaThMZ0hTd3BycGxBbVEKMWhzajJHVzVmbW5DakNJUnY3WXBiWTY4WjRwV3plRDl6K24yeWJTNWhMQ2pPNEVYV2M4a0VqaFBMY2s3NlNSQworTlNWLzR6bThLcGN2N2VjSFAvYmFMVFhWb0swWTlLNmxFUnRXRUhYUW5QMWtvVHlXak5wbkVKTW1hTTFxbTJZCkhtSXBwZFFCQW9HQVViRURpdWpBVFBPOFhWRnFGUGNGcDRxSEtsV0ZFcmFCYzRUZXNrMXcxckRONnZJclQ4VmgKVTc4R21hVlRYY0dUck10OFFCdDZmRlVWYlZwdVcyQ2YvYURILzZVZWxrd3NvYlphV1F5NThkMk52ME5Ta2d1TwpEYkl1OUtSQU9QKzJUVmc4dVRZZzFZK1BxQXVBYlFBYXVZcGMrd2I0OEViTWdYeDFhMjk0ZnVJPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
# Source: acp/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-acp
  labels:
    helm.sh/chart: acp-2.21.0
    app.kubernetes.io/name: acp
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.21.0"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    server:
      url: https://acp.local:8443
      certificate:
        cert_path: "/tls/tls.crt"
        key_path: "/tls/tls.key"
      port: 8443
      client_certificate_header: "X-SSL-CERT"
  extraconfig.yaml: |
---
# Source: acp/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-acp
  labels:
    helm.sh/chart: acp-2.21.0
    app.kubernetes.io/name: acp
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.21.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8443
      targetPort: http
      protocol: TCP
      name: http
    - port: 9000
      targetPort: metrics
      protocol: TCP
      name: metrics
    - port: 9443
      targetPort: grpc
      protocol: TCP
      name: grpc
  selector:
    app.kubernetes.io/name: acp
    app.kubernetes.io/instance: release-name
---
# Source: acp/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-acp
  labels:
    helm.sh/chart: acp-2.21.0
    app.kubernetes.io/name: acp
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.21.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: acp
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: acp
        app.kubernetes.io/instance: release-name
    spec:
      imagePullSecrets:
        - name: docker.cloudentity.io
      volumes:
        - name: data
          configMap:
            name: release-name-acp
        - name: tls
          projected:
            defaultMode: 384
            sources:
            - secret:
                name: release-name-acp-tls
        - name: secret
          secret:
            secretName: release-name-acp
      serviceAccountName: release-name-acp
      securityContext:
        fsGroup: 65535
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: acp
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 65535
            runAsNonRoot: true
            runAsUser: 65535
          image: "docker.cloudentity.io/acp-distroless:2.21.0"
          imagePullPolicy: IfNotPresent
          args:
            - server
            - start
            - --demo
            - --metrics
            - --create-default-tenant
            - --create-default-workspaces
            - --config
            - /data/config.yaml,/data/extraconfig.yaml,/secret/config.yaml
            
          env:
            - name: SERVER_DISABLE_ASYNC_PROCESSING
              value: "false"
            - name: SQL_MIGRATIONS_DISABLE
              value: "false"
          ports:
            - name: http
              containerPort: 8443
              protocol: TCP
            - name: metrics
              containerPort: 9000
              protocol: TCP
            - name: grpc
              containerPort: 9443
              protocol: TCP
          startupProbe:
            httpGet:
              path: /alive
              scheme: HTTPS
              port: 8443
            failureThreshold: 10
            periodSeconds: 10
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /alive
              scheme: HTTPS
              port: 8443
            initialDelaySeconds: 5
            failureThreshold: 3
            periodSeconds: 10
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: /alive
              scheme: HTTPS
              port: 8443
            initialDelaySeconds: 3
            failureThreshold: 10
            periodSeconds: 10
            timeoutSeconds: 10
          volumeMounts:
            - mountPath: /data
              name: data
              readOnly: true
            - mountPath: /tls
              name: tls
              readOnly: true
            - mountPath: /secret
              name: secret
              readOnly: true
          resources:
            {}
---
# Source: acp/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: release-name-acp
  labels:
    helm.sh/chart: acp-2.21.0
    app.kubernetes.io/name: acp
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.21.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
    nginx.ingress.kubernetes.io/proxy-ssl-ciphers: "EECDH+AESGCM:EDH+AESGCM"
    nginx.ingress.kubernetes.io/proxy-ssl-protocols: "TLSv1.2"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-ssl-secret: "default/release-name-acp-tls"
    nginx.ingress.kubernetes.io/proxy-ssl-server-name: "on"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-ciphers: "EECDH+AESGCM:EDH+AESGCM"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-SSL-CERT "";
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
    nginx.ingress.kubernetes.io/service-upstream: "true"
spec:
  rules:
    - host: "acp.local"
      http:
        paths:
          - path: /
            backend:
              serviceName: release-name-acp
              servicePort: 8443
---
# Source: acp/templates/tls-secrets.yaml
---
---
# Source: acp/templates/tests/get-access-token.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-access-token-test"
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: release-name-access-token-test
      image: curlimages/curl
      args: 
        - --insecure
        - --request
        - POST
        - --data
        - grant_type=client_credentials
        - --user
        - system:5c8f3f5b353ba0f55c8f3f5b353ba0f5
        - https://acp.local:8443/system/system/oauth2/token
  restartPolicy: Never
