---
# Source: istio-authorizer/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-istio-authorizer
  labels:
    helm.sh/chart: istio-authorizer-2.21.1
    app.kubernetes.io/name: istio-authorizer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.21.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: istio-authorizer/templates/dockerregistry.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/dockerconfigjson
metadata:
  name: docker.cloudentity.io
data:
  .dockerconfigjson: eyJhdXRocyI6eyJkb2NrZXIuY2xvdWRlbnRpdHkuaW8iOnsidXNlcm5hbWUiOiJhdXRob3JpemVycyIsInBhc3N3b3JkIjoiek0zRjMzSWZWWWx5Q3BCZUVpUkxYN0tpc0RHU2plUVkiLCJhdXRoIjoiWVhWMGFHOXlhWHBsY25NNmVrMHpSak16U1daV1dXeDVRM0JDWlVWcFVreFlOMHRwYzBSSFUycGxVVms9In19fQ==
---
# Source: istio-authorizer/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-istio-authorizer
  labels:
    helm.sh/chart: istio-authorizer-2.21.1
    app.kubernetes.io/name: istio-authorizer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.21.0"
    app.kubernetes.io/managed-by: Helm
stringData:
  clientID: YnZnN2h2YzA1NnV0YmdpaHF1OWcK
  clientSecret: aE0wdmYwZHNBMHkxSHBHZW1WXzlDa21iYmlOclp2NW92S1JDTm5hd2pJbwo=
---
# Source: istio-authorizer/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-istio-authorizer
  labels:
    helm.sh/chart: istio-authorizer-2.21.1
    app.kubernetes.io/name: istio-authorizer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.21.0"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    logging:
      level: info
    discovery:
      enabled: true
      namespaces:
      - default
      open_api_endpoint: 
      grpc_reflection_calls: false
    enforcement:
      allow_unknown: false
    target_service:
      inject:
        headers:
          custom_data_prefix: x-output-
          auth_ctx: x-auth-ctx
    trust_domain: cluster.local
    token_exchange:
      enabled: false
      inject:
        mode: InjectExchangedToken
        headers:
          original_token: 
          exchanged_token: Authorization
          strip_bearer: false
      request_scopes: original_token
  extraconfig.yaml: |
---
# Source: istio-authorizer/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-istio-authorizer
  labels:
    helm.sh/chart: istio-authorizer-2.21.1
    app.kubernetes.io/name: istio-authorizer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.21.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - "namespaces"
  verbs:
  - "list"
- apiGroups:
  - "apps"
  resources:
  - "deployments"
  verbs:
  - "list"
---
# Source: istio-authorizer/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-istio-authorizer
  namespace: default
  labels:
    helm.sh/chart: istio-authorizer-2.21.1
    app.kubernetes.io/name: istio-authorizer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.21.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: ""
  kind: ClusterRole
  name: release-name-istio-authorizer
subjects:
- kind: ServiceAccount
  name: release-name-istio-authorizer
  namespace: default
---
# Source: istio-authorizer/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-istio-authorizer
  labels:
    helm.sh/chart: istio-authorizer-2.21.1
    app.kubernetes.io/name: istio-authorizer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.21.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9001
      name: grpc
    - port: 9002
      name: http
    - port: 9000
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: istio-authorizer
    app.kubernetes.io/instance: release-name
---
# Source: istio-authorizer/templates/deployment.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: release-name-istio-authorizer
  labels:
    helm.sh/chart: istio-authorizer-2.21.1
    app.kubernetes.io/name: istio-authorizer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.21.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: istio-authorizer
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/config: 1aa5cda1c4234d8606790b44ae2819b865a64b9da6b29ed23e900edafa6b5a34
      labels:
        app.kubernetes.io/name: istio-authorizer
        app.kubernetes.io/instance: release-name
    spec:
      imagePullSecrets:
        - name: docker.cloudentity.io
      serviceAccountName: release-name-istio-authorizer
      securityContext:
        fsGroup: 65535
        runAsNonRoot: true
      containers:
        - name: istio-authorizer
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 65535
            runAsNonRoot: true
            runAsUser: 65535
          image: "docker.cloudentity.io/istio-authorizer:2.21.0"
          imagePullPolicy: IfNotPresent
          args:
            - --config
            - /data/config.yaml,/data/extraconfig.yaml
          env:
            - name: ACP_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: release-name-istio-authorizer
                  key: clientID
            - name: ACP_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: release-name-istio-authorizer
                  key: clientSecret
            - name: ACP_ISSUER_URL
              value: https://acp.acp-system:8443/default/system
            - name: ACP_TENANT_ID
              value: 
            - name: ACP_SERVER_ID
              value: 
          ports:
            - name: grpc
              containerPort: 9001
              protocol: TCP
            - name: metrics
              containerPort: 9000
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: 9001
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 9001
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            {}
          volumeMounts:
            - mountPath: /data
              name: data
      volumes:
        - name: data
          configMap:
            name: release-name-istio-authorizer
---
# Source: istio-authorizer/templates/policy.yaml
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: acp-istio-authorizer-policy
  namespace: default
spec:
  action: CUSTOM
  provider:
    name: acp-authorizer
  rules:
  - {}
---
# Source: istio-authorizer/templates/envoyfilter.yaml
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: release-name-istio-authorizer
  namespace: default
  labels:
    helm.sh/chart: istio-authorizer-2.21.1
    app.kubernetes.io/name: istio-authorizer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.21.0"
    app.kubernetes.io/managed-by: Helm
spec:
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: ANY
      listener:
        filterChain:
          filter:
            name: "envoy.filters.network.http_connection_manager"
            subFilter:
              name: "envoy.filters.http.ext_authz"
    patch:
      operation: MERGE
      value:
        name: envoy.filters.http.ext_authz
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
          with_request_body:
            max_request_bytes: 8192
            allow_partial_message: true
            pack_as_bytes: true
---
# Source: istio-authorizer/templates/tests/allow-request.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-allow-request-validation-test"
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: release-name-allow-request-istio-validate-test
      image: curlimages/curl
      args: 
        - --insecure
        - http://httpbin.default:80/headers
  restartPolicy: Never
---
# Source: istio-authorizer/templates/tests/block-request.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-block-access-validation-test"
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: release-name-block-access-istio-validate-test
      image: curlimages/curl
      command: ["/bin/sh", "-c", "[ $(curl --insecure --silent --output /dev/null --write-out \"%{http_code}\" http://httpbin.default:80/anything) -eq 403 ]"]
  restartPolicy: Never
