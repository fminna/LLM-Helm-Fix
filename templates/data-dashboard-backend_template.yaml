---
# Source: data-dashboard-backend/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-data-dashboard-backend
  labels:
    helm.sh/chart: data-dashboard-backend-0.1.6
    app.kubernetes.io/name: data-dashboard-backend
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  databaseUrl: "amRiYzpwb3N0Z3Jlc3FsOi8vcG9zdGdyZXNxbDo1NDMyL2RhdGEtZGFzaGJvYXJk"
  databaseUser: "cmFkYXJiYXNl"
  databasePassword: "cGFzc3dvcmQ="
---
# Source: data-dashboard-backend/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-data-dashboard-backend
  labels:
    app: data-dashboard-backend
    chart: data-dashboard-backend-0.1.6
    release: release-name
    heritage: Helm
data:
  dashboard.yml: |
    service:
      baseUri: http://0.0.0.0:9000/api
      advertisedBaseUri: null
      enableCors: true
    auth:
      managementPortal:
        url: http://management-portal:8080/managementportal
        clientId: radar_data_dashboard_backend
        clientSecret: secret
      jwtResourceName: res_data_dashboard_backend
    database:
      url: jdbc:postgresql://postgresql:5432/data-dashboard
      user: radarbase
      password: password
      dialect: org.hibernate.dialect.PostgreSQLDialect
---
# Source: data-dashboard-backend/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-data-dashboard-backend
  labels:
    helm.sh/chart: data-dashboard-backend-0.1.6
    app.kubernetes.io/name: data-dashboard-backend
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: data-dashboard-backend
    app.kubernetes.io/instance: release-name
---
# Source: data-dashboard-backend/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-data-dashboard-backend
  labels:
    helm.sh/chart: data-dashboard-backend-0.1.6
    app.kubernetes.io/name: data-dashboard-backend
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: data-dashboard-backend
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/configmap: b8dcb84d9af12c7ec224a5e9451119d82015b4912e8bc6469e970b257cf74ced
        checksum/secrets: b005f2898e18ef2b9d0f61132d4946057c4b91c75eb287e79b774f9fd6055c7d
      labels:
        app.kubernetes.io/name: data-dashboard-backend
        app.kubernetes.io/instance: release-name
    spec:
      securityContext:
        {}
      containers:
        - name: data-dashboard-backend
          securityContext:
            {}
          image: "ghcr.io/thehyve/radar-data-dashboard-backend:0.1.0"
          imagePullPolicy: Always
          args:
            - "/etc/data-dashboard-backend/dashboard.yml"
          env:
          - name: DATABASE_URL
            valueFrom:
              secretKeyRef:
                name: release-name-data-dashboard-backend
                key: databaseUrl
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                name: release-name-data-dashboard-backend
                key: databaseUser
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: release-name-data-dashboard-backend
                key: databasePassword
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
              httpHeaders:
                - name: Accept
                  value: application/json
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
              httpHeaders:
                - name: Accept
                  value: application/json
          resources:
            {}
          volumeMounts:
            - name: config
              mountPath: /etc/data-dashboard-backend/
      volumes:
        - name: config
          configMap:
            name: release-name-data-dashboard-backend
---
# Source: data-dashboard-backend/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-data-dashboard-backend
  labels:
    helm.sh/chart: data-dashboard-backend-0.1.6
    app.kubernetes.io/name: data-dashboard-backend
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
    - hosts:
        - "localhost"
      secretName: radar-base-data-dashboard
  rules:
    - host: "localhost"
      http:
        paths:
          - path: "/api"
            pathType: ImplementationSpecific
            backend:
              service:
                name: release-name-data-dashboard-backend
                port:
                  number: 9000
---
# Source: data-dashboard-backend/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-data-dashboard-backend-test-connection"
  labels:
    helm.sh/chart: data-dashboard-backend-0.1.6
    app.kubernetes.io/name: data-dashboard-backend
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox:1.36
      command: ['wget']
      args: ['release-name-data-dashboard-backend:9000']
  restartPolicy: Never
