---
# Source: devlake/templates/devlake/configmap-env.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-devlake-env-config
  labels:
    helm.sh/chart: devlake-1.0.4
    app.kubernetes.io/name: devlake
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.10.0"
    app.kubernetes.io/managed-by: Helm
data:
  env-cm: |
    AE_APP_ID=
    AE_ENDPOINT=
    AE_PROXY=
    AE_RATE_LIMIT=100
    AE_SECRET_KEY=
    API_REQUESTS_PER_HOUR=10000
    API_RETRY=3
    API_TIMEOUT=10s
    ASYNC_CF=true
    COMPOSE_PROFILES=user
    DB_LOGGING_LEVEL=Error
    FEISHU_APPID=
    FEISHU_APPSCRECT=
    FEISHU_ENDPOINT=https://open.feishu.cn/open-apis/vc/v1/
    GITHUB_API_REQUESTS_PER_HOUR=
    GITHUB_ENDPOINT=https://api.github.com/
    GITHUB_ISSUE_COMPONENT=component/(.*)$
    GITHUB_ISSUE_PRIORITY=^(highest|high|medium|low)$
    GITHUB_ISSUE_SEVERITY=severity/(.*)$
    GITHUB_ISSUE_TYPE_BUG=^(bug|failure|error)$
    GITHUB_ISSUE_TYPE_INCIDENT=
    GITHUB_ISSUE_TYPE_REQUIREMENT=^(feat|feature|proposal|requirement)$
    GITHUB_PROXY=
    GITHUB_PR_BODY_CLOSE_PATTERN='(?mi)(fix|close|resolve|fixes|closes|resolves|fixed|closed|resolved)[\s]*.*(((and )?(#|https:\/\/github.com\/%s\/%s\/issues\/)\d+[ ]*)+)'
    GITHUB_PR_COMPONENT=component/(.*)$
    GITHUB_PR_TITLE_PATTERN=.*\(#(\d+)\)
    GITHUB_PR_TYPE=type/(.*)$
    GITLAB_API_REQUESTS_PER_HOUR=
    GITLAB_AUTH=
    GITLAB_ENDPOINT=https://gitlab.com/api/v4/
    GITLAB_PROXY=
    JENKINS_API_REQUESTS_PER_HOUR=
    JENKINS_ENDPOINT=
    JENKINS_PROXY=
    JENKINS_USERNAME=
    JIRA_BOARD_GITLAB_PROJECTS=
    LOGGING_LEVEL=
    MODE=release
    NOTIFICATION_ENDPOINT=
    NOTIFICATION_SECRET=
    PLUGIN_DIR=bin/plugins
    PORT=:8080
    TEMPORAL_TASK_QUEUE=
    TEMPORAL_URL=
---
# Source: devlake/templates/configui/service-configui.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-configui
  labels:
    helm.sh/chart: devlake-1.0.4
    app.kubernetes.io/name: devlake-configui
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.10.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: devlake-configui
    app.kubernetes.io/instance: release-name
---
# Source: devlake/templates/devlake/service-devlake.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-devlake
  labels:
    helm.sh/chart: devlake-1.0.4
    app.kubernetes.io/name: devlake
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.10.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: devlake
    app.kubernetes.io/instance: release-name
---
# Source: devlake/templates/configui/config-ui-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-configui
  labels:
    helm.sh/chart: devlake-1.0.4
    app.kubernetes.io/name: devlake-configui
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.10.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: devlake-configui
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: devlake-configui
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: devlake
          securityContext:
            {}
          image: "mericodev/config-ui:20220523"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 4000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
          env:
            - name: GRAFANA_ENDPOINT
              value: http://grafana:8080
            - name: DEVLAKE_ENDPOINT
              value: release-name-devlake.default.svc.cluster.local:80
      securityContext:
        runAsNonRoot: true 
        runAsUser: 1000
        fsGroup: 1000
---
# Source: devlake/templates/devlake/dev-lake-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-devlake
  labels:
    helm.sh/chart: devlake-1.0.4
    app.kubernetes.io/name: devlake
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.10.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: devlake
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: devlake
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: default
      securityContext:
        {}
      initContainers:
        - name: busybox-init
          image: busybox
          volumeMounts:
          - name: shared
            mountPath: /tmp/config
          - name: env-cm
            mountPath: /appenv/env-cm
            subPath: env-cm
          command:
            - sh
            - -c
            - "env|grep -E '^PLACEHOLDER_'|sed 's/^PLACEHOLDER_//g' > /tmp/env-secret && cat /appenv/env-cm /tmp/env-secret > /tmp/config/.env && chmod 644 /tmp/config/.env"
      containers:
        - name: devlake
          securityContext:
            {}
          image: "mericodev/lake:20220523"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
          - name: shared
            mountPath: /tmp/config
          env:
            - name: ENV_PATH
              value: /tmp/config/.env
          livenessProbe:
            tcpSocket:              
              port: http
            failureThreshold: 3
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: http
            failureThreshold: 3
            periodSeconds: 10
          
          resources:
            {}
      volumes:
        - name: shared
          emptyDir: {}
        - name: env-cm
          configMap:
            name: release-name-devlake-env-config
      securityContext:
        runAsNonRoot: true 
        runAsUser: 1000
        fsGroup: 1000
---
# Source: devlake/templates/configui/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-configui
  labels:
    helm.sh/chart: devlake-1.0.4
    app.kubernetes.io/name: devlake-configui
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.10.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
    - host: 
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: release-name-configui
                port:
                  number: 80
