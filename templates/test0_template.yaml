---
# Source: test0/templates/app1/namespace_app1.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: app1
---
# Source: test0/templates/app2/namespace_app2.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: app2
  #  labels:
  # label: app1
---
# Source: test0/templates/app1/networkpolicy_app1.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: test-network-policy-app1
  namespace: app1
spec:
  podSelector: {}
  ingress:
  - from:
      - namespaceSelector:
          matchLabels:
            label: app1
---
# Source: test0/templates/app2/networkpolicy_app2.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: test-network-policy-app2
  namespace: app2
spec:
  podSelector: {}
  ingress:
  - from:
      - namespaceSelector:
          matchLabels:
            label: app2
---
# Source: test0/templates/app1/configmap.yaml
kind: ConfigMap 
apiVersion: v1 
metadata:
  name: myconfigmapv1.0
  namespace: app1
data:
  BG_COLOR: '#12181b'
  FONT_COLOR: '#FFFFFF'
  CUSTOM_HEADER: 'Customized with a configmap!'
---
# Source: test0/templates/app1/service_app1.yaml
apiVersion: v1
kind: Service
metadata:
  name: apliakce1
  namespace: app1
  labels:
    app: apliakce1
spec:
  ports:
  - port: 80
    protocol: TCP
    name: flask
  selector:
    app: apliakce1    
    tier: frontend
  type: NodePort
---
# Source: test0/templates/app2/service_app2.yaml
apiVersion: v1
kind: Service
metadata:
  name: apliakce2
  namespace: app2
  labels:
    app: apliakce2
spec:
  ports:
  - port: 80
    protocol: TCP
    name: flask
  selector:
    app: apliakce2    
    tier: frontend
  type: NodePort
---
# Source: test0/templates/app1/deployment_app1.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apliakce1
  namespace: app1
  labels:
    app: apliakce1
    #label: app1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: apliakce1
      tier: frontend
  template:
    metadata:
      labels:
        app: apliakce1
        tier: frontend
    spec: # Pod spec
      containers:
      - name: mycontainer
        image: "devopsjourney1/mywebapp:latest"
        ports:
        - containerPort: 80
        envFrom:
        - configMapRef:
            name: myconfigmapv1.0
        resources:
          requests:
            memory: "16Mi" 
            cpu: "50m"    # 500milliCPUs (1/2 CPU)
          limits:
            memory: "128Mi"
            cpu: "100m"
---
# Source: test0/templates/app2/deployment_app2.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apliakce2
  namespace: app2
  labels:
    app: apliakce2
spec:
  replicas: 2
  selector:
    matchLabels:
      app: apliakce2
      tier: frontend
  template:
    metadata:
      labels:
        app: apliakce2
        tier: frontend
    spec: # Pod spec
      containers:
      - name: mycontainer
        image: "nginx:latest"
        ports:
        - containerPort: 80
        envFrom:
        resources:
          requests:
            memory: "16Mi" 
            cpu: "50m"    # 500milliCPUs (1/2 CPU)
          limits:
            memory: "128Mi"
            cpu: "100m"
