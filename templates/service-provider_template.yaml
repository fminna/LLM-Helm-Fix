---
# Source: service-provider/templates/rbac/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-service-provider
  namespace: default
  labels:
    helm.sh/chart: service-provider-v2024.2.11
    app.kubernetes.io/name: service-provider
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: service-provider/templates/webhook-server/cert.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-service-provider-webhook-cert
  namespace: default
  labels:
    helm.sh/chart: service-provider-v2024.2.11
    app.kubernetes.io/name: service-provider
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRU0pncFIzVzZoV3NzRDVjMHlaQUpYakFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMU1UVXdPVFUyTVRkYUZ3MHpOREExTVRNd09UVTJNVGRhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFzSXVxCjJ3K1dhZU11bEJUbldrT0xCRmp4a3F1ZW56cy9tYWdOR0EwMXZzS0wvT0lCQVllUWh4c25pK2pxZ1VjdXZjckMKYmVqczlSUmJSYUFXcktDTEpZdFBuQTVlR2FiekRZSVYyS2hCY0dsejFJSWk3QkpXdGZqdEphSjJIWEU3VW93dwpwbXJsRDcrb0NZOUhQUk04cTNmUlpDVEtzY2EwcDhrZFU3VHhxRmN1S2hyL0R5QjdQMTBOQTVEMnJ6T25CaXFoCnY4MmZVclA3RFQ1UHBDQUI0WGwwTnZ5c0xGbXZMNmdwcXg5M1BSMmtldTIrMEpidWFVVVozV3ZDR094TEVERkgKZWFHUWtVUVBtbGhmaTJmTTZERy81QmtqOERPeDFBdU40WXp3VWgwcncweHBzSnBMa1RwR1V4bzY2VTlKTDMwbgpxVnRDNVZOU1hwbUkrUTBMVVFJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRkpEY0QrQ0EySW90R0w4SjIzWEttUlB2emJJcE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ3NGWHdXWWYzSwpDVjdMaGl1dVE1K2poYWx6Zmh1MHlnWDRpWTlxdGVXd0phTTNOSTlGQ0dmY3k1UC81Z3BkY3YyWGJUeFZEWHNRCjhWdml2L094ZUx3bnhJWUMrSDc4TER3eWdtdkptMWxlVTJUVGEyUmdhTUZXRDU5Y0RKbHI4aDlob3B2UU9rVFQKNVF3UzFNM0doSlE3MldhU0VqcUhURmFiZFV3akxQZHFtdEZTamFuQVVaMytWY3FQaUNlWnlzaGZrZjIxOGovbQoyOUZBQk83L08yRDlQL3VUOGhSSlpRQW9OQmVGUi9DaEdjemhDV1hCM3FtTjNjVjhteE5OMlpud2EwdVFqVnQrCkVXT0R5QUthWlhteFlkZ0M4Qnd1ZzJpdk9Sa20zcWVzWk1vdDhGb0NNV3RpQVcrR0UyOHBmUnBRYnhVR0lGankKa01vVWVaMlNnK0phCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURyRENDQXBTZ0F3SUJBZ0lSQU85d1JOVnlidEF0NUh1bmVCQkI4VjR3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05URTFNRGsxTmpFM1doY05NelF3TlRFek1EazFOakUzV2pBMwpNVFV3TXdZRFZRUURFeXh5Wld4bFlYTmxMVzVoYldVdGMyVnlkbWxqWlMxd2NtOTJhV1JsY2kxM1pXSm9iMjlyCkxYTmxjblpsY2pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHc0RkhLRDRUK08KUmFYbHo4STYrOXFkdSswcjlENVcwZmZZR2xaL00ySVlrYWZBMG9rSk56QWdMYUpPbmRSYTN4OStnR1FRb0FrWApJWVFvaURmS2dSV3BkVkZYZkNFTGEvUTJrZ2ZqeVJoSEdzcWNkbms3WkpkOS9UY3U4WDB0ekdMYUMxbk5lK28wClpyWGtXTU5EQ0dTMGNyNFowRmRMRm5MNWowcW1xSWswTjRGZzlSK1pEcm1oSFdvaWpQdFNvdU9qNnFwSENuSDIKUDJYVnB2a2s5c3dTTWZnN2kyVFVDZEdGc2RVS0xlY3FOTGxtM3dDa204RDlVbnZYUTEzM2w4NFVIRklDOG14WQpqU1ozM05KREtQcDlQbXlHSDZUQUJNSjBaV3lHL05KSk1TL0lyYldvSE9WNU1hMjcybDdEWG5Lek5GN2JBMGtHCkp1VGk1SnJVam5rQ0F3RUFBYU9CM0RDQjJUQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUkKS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVa053UAo0SURZaWkwWXZ3bmJkY3FaRSsvTnNpa3dlUVlEVlIwUkJISXdjSUkwY21Wc1pXRnpaUzF1WVcxbExYTmxjblpwClkyVXRjSEp2ZG1sa1pYSXRkMlZpYUc5dmF5MXpaWEoyWlhJdVpHVm1ZWFZzZElJNGNtVnNaV0Z6WlMxdVlXMWwKTFhObGNuWnBZMlV0Y0hKdmRtbGtaWEl0ZDJWaWFHOXZheTF6WlhKMlpYSXVaR1ZtWVhWc2RDNXpkbU13RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFCNVdEWlZvTThaQnlLTThmekdhcVdVQmtGdmlxUUZJK2xLQkhOUnF6d216CllOTE5kcDBDbmhtcDhrVE5udld0WmhnWkhlZG9pNTRBUGpSVWNTWk5XcUxCK2s1T3IvN1hGTGFMMDFFVkZnaUoKQzh5RmZOZmR5ZTNXYnMwUTZhNklwL0JsU3kxL3FnWEJ5bkFaQkJDdGNDZnVqZ2Yya2JxWnRFYlYwZEthNlNZcQp3V0dvYjhkVE5WNkJvdkdRYzN4R1ZtNm9sY1BvbHhPOEl6OU5NNENUS2kxMDdOdU1uRW82Wkg1cllaQWg3bDlGCk1DeWNOUzZIREVJYUJ3REhWQ2Z1amt6ZU1IcGxvREZrZHJnTzloTFEzWWo5Ylo2cmZMb0N5VFBLVDljOXZHT0oKMlpVWnhEaGRFc2xJZDNmeXRBV1VEdUVNeEhHem1lc0E5TzBlelVBUk1ZST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdkRnVWNvUGhQNDVGcGVYUHdqcjcycDI3N1N2MFBsYlI5OWdhVm44elloaVJwOERTCmlRazNNQ0F0b2s2ZDFGcmZIMzZBWkJDZ0NSY2hoQ2lJTjhxQkZhbDFVVmQ4SVF0cjlEYVNCK1BKR0VjYXlweDIKZVR0a2wzMzlOeTd4ZlMzTVl0b0xXYzE3NmpSbXRlUll3ME1JWkxSeXZoblFWMHNXY3ZtUFNxYW9pVFEzZ1dEMQpINWtPdWFFZGFpS00rMUtpNDZQcXFrY0tjZlkvWmRXbStTVDJ6Qkl4K0R1TFpOUUowWVd4MVFvdDV5bzB1V2JmCkFLU2J3UDFTZTlkRFhmZVh6aFFjVWdMeWJGaU5KbmZjMGtNbytuMCtiSVlmcE1BRXduUmxiSWI4MGtreEw4aXQKdGFnYzVYa3hyYnZhWHNOZWNyTTBYdHNEU1FZbTVPTGttdFNPZVFJREFRQUJBb0lCQUZ3V0UrcnpHd0U5V2xZUQpXZFZ0aGtzdllRSm92dGJCSTNsZkFZUFFPQk9HY2J6aFdpQXhvZzZwcjZuNVRMN1l0dEZ4MHQ4aVF5b3ZadmFCCjNpTnRzRG9vN24wZGtGMmFlUGJDdkMrZ0FvTWVScjFhVDV5QXNuWnI3YmRTQUZSK1U4RUpiUVJDeEoyUmhhNzQKU1hVL0Zwd3VyUFRWTEZtSkl6S2RacjNmVEJYVDM0YUNwb3JEazhuT3dHS2V6bHF4cHIyRXBoN3BxMkoyLzN5Zgo4SUFyLzZDb0xVMkNZYkh1VHN0empqZGkvSllML1hHY01qSkRIdklycUlibWRRR0tnY3dVMGV4alBHU3UvVkF3ClJvUk9SOEFLY3lnejFUa0J3VkhrbGlMcGZLdEZtbDNkVVNtU3JoL3gzTWxUY1NPUnJEZ2RUYzRVU2tBOHNNdkQKSmJVUHdRRUNnWUVBMlZUN1E1akZZLzBvSUZpc2Izcnl3VmtUS2FKUzJuakh1aEZXS1gxWmpIb2RGZWY3RnZEUApXMXhBMGlXSGl0a2d4MUdRdEJKQjMyeWJENjN1cWYrK0w4YzBDaU43dllaYTlzbUFreUZhTFRGMVE4dmlCOUFlCnhpeXJwR0tYb1NjcDVOak0xWnBTOG0xR0hKbkIyc3lGRFFGdlBDbjRXL1E5Sll0SUdxMEdlcThDZ1lFQTNiVVIKQmJzZkREbmx2dGgrYVMyWWxvL1cvQVZGM0paSjE3SkVYZzY2amZ6Uk9zMzBkQWtZbXBScmdNL1I3ejhGc2VWVgpIWWZEcnlFempINFRqYzZrcjJJbzVyMHRkYnE0MkVrdlVHeklzaGNReEpJRnRlQXk2eU9Jait6UDc2K3o4cUtzCnh6Q0I4VmpHUlNYOG1PKzYzdWU4ZzF0eWppRWUrQlc5cHJ2UU0xY0NnWUJQZjZPTjNZTlBDUnExZ2xwSlNUc2wKZU5UbXBPY1QzWnlKdHEvQzY0Um5PNEFLTkZxSDBMeTVHYXpvY2l2N29XTTVKZC85enJQajY1RnBFZUc4czcwNQpNdkFaU1ZPSlIyMWMydWE2YXpmV1VrSW44NXVSNmhKbndZMWp5MkRWNVVLUTRMRkU3WGVzRUViV1RYUTQraGt0CllibnoweEp6YUlzNWdaSjFsNWRJSndLQmdRQ25DNzFHcHlXT2piVVlKWUNoZU5SbVpQeGpxUWxwV2VkTFdLc0EKZjNKNmR3bWlsL2xlMEZlMGFLM1RRVUo1VSsvVGlPcW50RnB4Z3IrWFZJc2hKcGlZK0ltK3lMME8zbUJWdmxhaQo3MFFNUXlyRUlRMmlhc21TdDVRMmRRUjdJTlNodFlZZkV1SmxXVEVTZXJ1bTg4SEdINjYrL2xFQzI5dThxb3paCnF0c0ZRd0tCZ0dkbldQSFdlMHJxMUtnU2tsbFdCQTZ0akIyQ1B4djdZTWdtT1ljYzNmeXB1THk4L0tBRWErN3QKczZSVkZYMEVyWXRBVjN4OHpkNElSVEFOcnpZQ1l5eUJhZzg1a3FPVmhjdTZDV3ZLMjd4dlFwYmFkN1ZGVkFFYgpzWWx0NURxVWxDQnlSSEhSaUJrcUVqM0NCamF2NWlFZ1ZENWRlNjRHeWsxcVhGTWZsRGVSCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: service-provider/templates/rbac/auth_proxy.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-service-provider-auth-proxy
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
# Source: service-provider/templates/rbac/cluster_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-service-provider
  labels:
    helm.sh/chart: service-provider-v2024.2.11
    app.kubernetes.io/name: service-provider
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["get", "list", "watch"]
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - "clusterroles"
  - "clusterrolebindings"
  - "roles"
  - "rolebindings"
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - "namespaces"
  - "serviceaccounts"
  verbs: ["get", "list", "watch", "create"]
- apiGroups:
  - "apiextensions.k8s.io"
  resources:
  - "customresourcedefinitions"
  verbs: ["get", "list", "watch"]
- apiGroups:
  - "kube-bind.appscode.com"
  resources:
  - "apiserviceexportrequests"
  verbs: ["*"]
- apiGroups:
  - "kube-bind.appscode.com"
  resources:
  - "apiserviceexportrequests/status"
  verbs: ["patch","update","get"]
- apiGroups:
  - ""
  resources:
  - "secrets"
  verbs: ["*"]
- apiGroups:
  - "kube-bind.appscode.com"
  resources:
  - "clusterbindings"
  verbs: ["get", "watch", "list", "create"]
- apiGroups:
  - "kube-bind.appscode.com"
  resources:
  - "clusterbindings/status"
  verbs: ["get","patch","update"]
- apiGroups:
  - "kube-bind.appscode.com"
  resources:
  - "apiserviceexports"
  verbs: ["get", "watch", "list", "create"]
- apiGroups:
  - "kube-bind.appscode.com"
  resources:
  - "apiserviceexports/status"
  verbs: ["get","patch","update"]
- apiGroups:
  - "kube-bind.appscode.com"
  resources:
  - "apiservicenamespaces"
  verbs: ["*"]
- apiGroups:
  - "kube-bind.appscode.com"
  resources:
  - "apiservicenamespaces/status"
  verbs: ["patch", "update", "get"]
- apiGroups:
  - "admissionregistration.k8s.io"
  resources:
  - "mutatingwebhookconfigurations"
  - "validatingwebhookconfigurations"
  verbs: ["get", "list", "watch", "update"]
---
# Source: service-provider/templates/rbac/auth_proxy.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-service-provider-auth-proxy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-service-provider-auth-proxy
subjects:
  - kind: ServiceAccount
    name: release-name-service-provider
    namespace: default
---
# Source: service-provider/templates/rbac/cluster_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-service-provider
  labels:
    helm.sh/chart: service-provider-v2024.2.11
    app.kubernetes.io/name: service-provider
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-service-provider
subjects:
- kind: ServiceAccount
  name: release-name-service-provider
  namespace: default
---
# Source: service-provider/templates/webhook-server/monitoring/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-service-provider
  namespace: default
  labels:
    helm.sh/chart: service-provider-v2024.2.11
    app.kubernetes.io/name: service-provider
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: webhook-server
    app.kubernetes.io/name: service-provider
    app.kubernetes.io/instance: release-name
---
# Source: service-provider/templates/webhook-server/webhook_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-service-provider-webhook-server
  namespace: default
  labels:
    helm.sh/chart: service-provider-v2024.2.11
    app.kubernetes.io/name: service-provider
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/component: webhook-server
    app.kubernetes.io/name: service-provider
    app.kubernetes.io/instance: release-name
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
---
# Source: service-provider/templates/provider/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-service-provider-operator
  namespace: default
  labels:
    app.kubernetes.io/component: operator
    helm.sh/chart: service-provider-v2024.2.11
    app.kubernetes.io/name: service-provider
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: service-provider
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/name: service-provider
        app.kubernetes.io/instance: release-name
      annotations:
    spec:
      
      serviceAccountName: release-name-service-provider
      containers:
      - name: operator
        image: "ghcr.io/appscode/service-provider:v0.0.1"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        args:
          - provider
          - --namespace-prefix=ace-
          - --provider-cluster-name=Appscode
          - --consumer-scope=Namespaced
          - --external-address=
          - --external-ca-file=
          - --external-server-name=






        resources:
          requests:
            cpu: 100m
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: service-provider/templates/webhook-server/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-service-provider-webhook-server
  namespace: default
  labels:
    app.kubernetes.io/component: webhook-server
    helm.sh/chart: service-provider-v2024.2.11
    app.kubernetes.io/name: service-provider
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: webhook-server
      app.kubernetes.io/name: service-provider
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/component: webhook-server
        app.kubernetes.io/name: service-provider
        app.kubernetes.io/instance: release-name
      annotations:
        checksum/apiregistration.yaml: 3584136a83338bf7276908fd727856b0d04d45cf046d6faddf99ed06da71fc61
    spec:
      
      serviceAccountName: release-name-service-provider
      containers:
      - name: webhook-server
        image: "ghcr.io/appscode/service-provider:v0.0.1"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        args:
          - webhook
          - --webhook-name=release-name-service-provider
        ports:
        - name: webhook-server
          containerPort: 9443
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 100m
        volumeMounts:
        - name: serving-cert
          mountPath: /var/serving-cert
          readOnly: true
      - name: kube-rbac-proxy
        image: "ghcr.io/appscode/kube-rbac-proxy:v0.15.0"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          requests:
            cpu: 100m
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: release-name-service-provider-webhook-cert
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: service-provider/templates/webhook-server/mutating_webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: release-name-service-provider
  labels:
    helm.sh/chart: service-provider-v2024.2.11
    app.kubernetes.io/name: service-provider
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-service-provider-webhook-server
        namespace: default
        path: /mutate-kube-bind-appscode-com-v1alpha1-clusterbinding
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: clusterbindings.kube-bind.appscode.com
    rules:
      - apiGroups:
          - kube-bind.appscode.com
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - clusterbindings
    sideEffects: None
---
# Source: service-provider/templates/webhook-server/validating_webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: release-name-service-provider
  labels:
    helm.sh/chart: service-provider-v2024.2.11
    app.kubernetes.io/name: service-provider
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-service-provider-webhook-server
        namespace: default
        path: /validate-kube-bind-appscode-com-v1alpha1-clusterbinding
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: clusterbindings.kube-bind.appscode.com
    rules:
      - apiGroups:
          - kube-bind.appscode.com
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - clusterbindings
    sideEffects: None
---
# Source: service-provider/templates/rbac/user_roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:kube-bind:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kube-bind.appscode.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: service-provider/templates/rbac/user_roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:kube-bind:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kube-bind.appscode.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
