---
# Source: msockperf-chart/charts/msockperf-chart/templates/msockperf/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: msockperf
  labels:
  annotations:
---
# Source: msockperf-chart/templates/msockperf/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: msockperf
  labels:
  annotations:
---
# Source: msockperf-chart/charts/msockperf-chart/templates/msockperf/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: msockperf-service
  namespace: msockperf
  labels:
    app.kubernetes.io/part-of: msockperf
  annotations:
    prometheus.io/port: '8082'
    prometheus.io/scrape: 'true'
spec:
  ports:
  - port: 8082
    targetPort: 8082
    protocol: TCP
    name: web 
  selector:
    app: msockperf-app
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
# Source: msockperf-chart/charts/msockperf-chart/templates/sockperf/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: sockperf-server-service
  namespace: msockperf
spec:
  ports:
  - port: 3600
    targetPort: 3600
    protocol: TCP
    name: web 
  selector:
    app: sockperf-app
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
# Source: msockperf-chart/templates/msockperf/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: msockperf-service
  namespace: msockperf
  labels:
    app.kubernetes.io/part-of: msockperf
  annotations:
    prometheus.io/port: '8082'
    prometheus.io/scrape: 'true'
spec:
  ports:
  - port: 8082
    targetPort: 8082
    protocol: TCP
    name: web 
  selector:
    app: msockperf-app
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
# Source: msockperf-chart/templates/sockperf/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: sockperf-server-service
  namespace: msockperf
spec:
  ports:
  - port: 3600
    targetPort: 3600
    protocol: TCP
    name: web 
  selector:
    app: sockperf-app
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
# Source: msockperf-chart/charts/msockperf-chart/templates/msockperf/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: msockperf-app
  namespace: msockperf
  labels:
    app: msockperf-app
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: msockperf-app
  template:
    metadata:
      labels:
        app: msockperf-app
    spec:
      containers:
      - name: msockperf-app
        imagePullPolicy: Always
        image: ghcr.io/aetrius/msockperf-client/msockperf-client:main
        env:
        - name: MSOCK_NAMESPACE
          value: "default"
        - name: MSOCK_REMOTE_HOST
          value: "sockperf-server-service.sre-msockperf"
        - name: MSOCK_REMOTE_PORT
          value: "3600"
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP # Expose pod's IP address
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName # Expose node name
        ports:
        - name: web #web interface
          containerPort: 8082
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 200m
            memory: 400Mi
        readinessProbe:
          httpGet:
            path: /metrics
            port: 8082
          initialDelaySeconds: 2
          periodSeconds: 2
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
---
# Source: msockperf-chart/charts/msockperf-chart/templates/sockperf/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sockperf-app
  namespace: msockperf
  labels:
    app: sockperf-app
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: sockperf-app
  template:
    metadata:
      labels:
        app: sockperf-app
    spec:
      containers:
      - name: sockperf-app
        imagePullPolicy: Always
        image: ghcr.io/aetrius/msockperf-server/msockperf-server:main
        command: ["/bin/bash", "-c", "sockperf server -p 3600 -i $(POD_IP) --tcp"]
        ports:
        - name: msockperf #web interface
          containerPort: 3600
        # command: ["./msockperf"]
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 150m
            memory: 120Mi
---
# Source: msockperf-chart/templates/msockperf/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: msockperf-app
  namespace: msockperf
  labels:
    app: msockperf-app
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: msockperf-app
  template:
    metadata:
      labels:
        app: msockperf-app
    spec:
      containers:
      - name: msockperf-app
        imagePullPolicy: Always
        image: ghcr.io/aetrius/msockperf-client/msockperf-client:main
        env:
        - name: MSOCK_NAMESPACE
          value: "default"
        - name: MSOCK_REMOTE_HOST
          value: "sockperf-server-service.sre-msockperf"
        - name: MSOCK_REMOTE_PORT
          value: "3600"
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP # Expose pod's IP address
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName # Expose node name
        ports:
        - name: web #web interface
          containerPort: 8082
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 200m
            memory: 400Mi
        readinessProbe:
          httpGet:
            path: /metrics
            port: 8082
          initialDelaySeconds: 2
          periodSeconds: 2
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
---
# Source: msockperf-chart/templates/sockperf/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sockperf-app
  namespace: msockperf
  labels:
    app: sockperf-app
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: sockperf-app
  template:
    metadata:
      labels:
        app: sockperf-app
    spec:
      containers:
      - name: sockperf-app
        imagePullPolicy: Always
        image: ghcr.io/aetrius/msockperf-server/msockperf-server:main
        command: ["/bin/bash", "-c", "sockperf server -p 3600 -i $(POD_IP) --tcp"]
        ports:
        - name: msockperf #web interface
          containerPort: 3600
        # command: ["./msockperf"]
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 150m
            memory: 120Mi
---
# Source: msockperf-chart/charts/msockperf-chart/templates/sockperf/ingress.yaml
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   annotations:
#   name: sockperf-app-ingress
#   namespace: default
# spec:
#   ingressClassName: nginx
#   rules:
#     - host: msockperf.domainname.com
#       http:
#         paths:
#           - backend:
#               service:
#                 name: sockperf-server-service
#                 port:
#                   number: 3600
#             path: /
#             pathType: Prefix
---
# Source: msockperf-chart/templates/sockperf/ingress.yaml
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   annotations:
#   name: sockperf-app-ingress
#   namespace: default
# spec:
#   ingressClassName: nginx
#   rules:
#     - host: msockperf.domainname.com
#       http:
#         paths:
#           - backend:
#               service:
#                 name: sockperf-server-service
#                 port:
#                   number: 3600
#             path: /
#             pathType: Prefix
---
# Source: msockperf-chart/charts/msockperf-chart/templates/msockperf/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: msockperf-service-service-monitor
  namespace: msockperf
spec:
  endpoints:
    - interval: 15s
      port: web
      scrapeTimeout: 14s
  namespaceSelector:
    matchNames:
      - msockperf
  selector:
    matchLabels:
      app.kubernetes.io/part-of: msockperf
---
# Source: msockperf-chart/templates/msockperf/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: msockperf-service-service-monitor
  namespace: msockperf
spec:
  endpoints:
    - interval: 15s
      port: web
      scrapeTimeout: 14s
  namespaceSelector:
    matchNames:
      - msockperf
  selector:
    matchLabels:
      app.kubernetes.io/part-of: msockperf
