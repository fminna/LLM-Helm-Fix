---
# Source: pvc-autoresizer/templates/controller/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-pvc-autoresizer-controller
  namespace: default
  labels:
    helm.sh/chart: pvc-autoresizer-0.1.0
    app.kubernetes.io/name: pvc-autoresizer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: pvc-autoresizer/templates/controller/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-pvc-autoresizer-controller
  labels:
    helm.sh/chart: pvc-autoresizer-0.1.0
    app.kubernetes.io/name: pvc-autoresizer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - apps
  resources:
    - deployments
  verbs:
    - create
    - get
    - list
    - watch
    - update
- apiGroups:
    - apps
  resources:
    - statefulsets
  verbs:
    - create
    - get
    - list
    - watch
    - update
---
# Source: pvc-autoresizer/templates/controller/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-pvc-autoresizer-controller
  labels:
    helm.sh/chart: pvc-autoresizer-0.1.0
    app.kubernetes.io/name: pvc-autoresizer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-pvc-autoresizer-controller
subjects:
- kind: ServiceAccount
  name: release-name-pvc-autoresizer-controller
  namespace: default
---
# Source: pvc-autoresizer/templates/controller/role.yaml
# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-pvc-autoresizer-leader-election-role
  namespace: default
  labels:
    helm.sh/chart: pvc-autoresizer-0.1.0
    app.kubernetes.io/name: pvc-autoresizer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  - coordination.k8s.io
  resources:
  - configmaps
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: pvc-autoresizer/templates/controller/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-pvc-autoresizer-leader-election-rolebinding
  namespace: default
  labels:
    helm.sh/chart: pvc-autoresizer-0.1.0
    app.kubernetes.io/name: pvc-autoresizer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-pvc-autoresizer-leader-election-role
subjects:
- kind: ServiceAccount
  name: release-name-pvc-autoresizer-controller
  namespace: default
---
# Source: pvc-autoresizer/templates/controller/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-pvc-autoresizer-controller
  namespace: default
  labels:
    helm.sh/chart: pvc-autoresizer-0.1.0
    app.kubernetes.io/name: pvc-autoresizer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: pvc-autoresizer
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pvc-autoresizer
    spec:
      serviceAccountName: release-name-pvc-autoresizer-controller
      containers:
        - name: pvc-autoresizer
          command:
            - /pvc-autoresizer
          args:
            - --prometheus-url=http://prometheus-k8s.kubesphere-monitoring-system:9090
            - --interval=10s
          image: "kubesphere/pvc-autoresizer:v0.1"
          resources: 
            requests:
              cpu: 100m
              memory: 20Mi
          ports:
            - name: metrics
              containerPort: 8080
              protocol: TCP
            - name: health
              containerPort: 8081
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: health
          livenessProbe:
            httpGet:
              path: /healthz
              port: health
