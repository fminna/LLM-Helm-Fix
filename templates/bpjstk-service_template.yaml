---
# Source: bpjstk-service/templates/0. bpjstk-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: bpjstk-cm
  labels:
    app: bpjstk-cm
data:
  oracleUri: "jdbc:oracle:thin:@payment-teller.visiondg.xyz:1521:ORADB"
  oracleUsername: "BPJSTK"
  oraclePassword: "P4ssw0rd"
---
# Source: bpjstk-service/templates/7. backoffice.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: backoffice-nginx-config
data:
  backoffice.conf: |
    worker_processes  auto;

    error_log  /var/log/nginx/error.log notice;
    pid        /var/cache/nginx/nginx.pid;


    events {
        worker_connections  1024;
    }


    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        #gzip  on;

        server {
        # listen 8080 default_server ssl;
        listen 8080 default_server;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # ssl_certificate /ssl/fullchain.pem; # managed by Certbot
        # ssl_certificate_key /ssl/key.pem;

        gzip on;
        gzip_disable "msie6";

        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 9;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_min_length 0;
        gzip_types text/plain application/javascript text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype;

        location / {
      return 301 /backoffice;
        }

        location /backoffice {
            try_files $uri $uri/backoffice /backoffice/index.html;
        }

      location /backoffice-be {
          proxy_pass http://backoffice-be:8089;
          proxy_set_header    Host               $host;
          proxy_set_header    X-Real-IP          $remote_addr;
          proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
          proxy_set_header    X-Forwarded-Host   $host;
          proxy_set_header    X-Forwarded-Server $host;
          proxy_set_header    X-Forwarded-Port   $server_port;
          proxy_set_header    X-Forwarded-Proto  $scheme;
      }

      location /bpjstk-service {
          proxy_pass http://bpjstk-service:8091;
          proxy_set_header    Host               $host;
          proxy_set_header    X-Real-IP          $remote_addr;
          proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
          proxy_set_header    X-Forwarded-Host   $host;
          proxy_set_header    X-Forwarded-Server $host;
          proxy_set_header    X-Forwarded-Port   $server_port;
          proxy_set_header    X-Forwarded-Proto  $scheme;
      }
    }
    }
---
# Source: bpjstk-service/templates/2. bpjstk-simulator.yaml
apiVersion: v1
kind: Service
metadata:
  name: bpjstk-simulator
  labels:
    app: bpjstk-simulator
spec:
  type: ClusterIP
  selector:
    app: bpjstk-simulator
  ports:
    - name: 8090-tcp
      protocol: TCP
      port: 8090
      targetPort: 8090
---
# Source: bpjstk-service/templates/3. iso-server.yaml
apiVersion: v1
kind: Service
metadata:
  name: iso-server
  labels:
    app: iso-server
spec:
  type: ClusterIP
  selector:
    app: iso-server
  ports:
    - name: 8828-tcp
      protocol: TCP
      port: 8828
      targetPort: 8828
---
# Source: bpjstk-service/templates/4. iso-client.yaml
apiVersion: v1
kind: Service
metadata:
  name: iso-client
  labels:
    app: iso-client
spec:
  type: ClusterIP
  selector:
    app: iso-client
  ports:
    - name: 8100-tcp
      protocol: TCP
      port: 8100
      targetPort: 8100
---
# Source: bpjstk-service/templates/5. bpjstk-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: bpjstk-service
  labels:
    app: bpjstk-service
spec:
  type: ClusterIP
  selector:
    app: bpjstk-service
  ports:
    - name: 8091-tcp
      protocol: TCP
      port: 8091
      targetPort: 8091
---
# Source: bpjstk-service/templates/6. backoffice-be.yaml
apiVersion: v1
kind: Service
metadata:
  name: backoffice-be
  labels:
    app: backoffice-be
spec:
  type: ClusterIP
  selector:
    app: backoffice-be
  ports:
    - name: 8089-tcp
      protocol: TCP
      port: 8089
      targetPort: 8089
---
# Source: bpjstk-service/templates/7. backoffice.yaml
apiVersion: v1
kind: Service
metadata:
  name: backoffice
  labels:
    app: backoffice
spec:
  type: ClusterIP
  selector:
    app: backoffice
  ports:
    - name: 8080-tcp
      protocol: TCP
      port: 8080
      targetPort: 8080
---
# Source: bpjstk-service/templates/2. bpjstk-simulator.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: bpjstk-simulator
  name: bpjstk-simulator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bpjstk-simulator
  template:
    metadata:
      labels:
        app: bpjstk-simulator
    spec:
      containers:
        - image: andrianrf/bpjstk-simulator:latest
          imagePullPolicy: IfNotPresent
          name: bpjstk-simulator
          ports:
            - containerPort: 8090
          envFrom:
            - configMapRef:
                name: bpjstk-cm
          env:
            - name: "springJpaHibernateDdlAuto"
              value: "update"
          resources:
            requests:
              memory: "0Mi"
              cpu: "0m"
            limits:
              memory: "512Mi"
              cpu: "1000m"
---
# Source: bpjstk-service/templates/3. iso-server.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: iso-server
  name: iso-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: iso-server
  template:
    metadata:
      labels:
        app: iso-server
    spec:
      containers:
        - image: andrianrf/iso-server:latest
          imagePullPolicy: IfNotPresent
          name: iso-server
          ports:
            - containerPort: 8828
          resources:
            requests:
              memory: "0Mi"
              cpu: "0m"
            limits:
              memory: "512Mi"
              cpu: "1000m"
---
# Source: bpjstk-service/templates/4. iso-client.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: iso-client
  name: iso-client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: iso-client
  template:
    metadata:
      labels:
        app: iso-client
    spec:
      containers:
        - image: andrianrf/iso-client:latest
          imagePullPolicy: IfNotPresent
          name: iso-client
          ports:
            - containerPort: 8100
          envFrom:
            - configMapRef:
                name: bpjstk-cm
          env:
            - name: "isoServerUrl"
              value: "iso-server"
            - name: "isoServerPort"
              value: "8828"
            - name: "springJpaHibernateDdlAuto"
              value: "update"
          resources:
            requests:
              memory: "0Mi"
              cpu: "0m"
            limits:
              memory: "512Mi"
              cpu: "1000m"
---
# Source: bpjstk-service/templates/5. bpjstk-service.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: bpjstk-service
  name: bpjstk-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bpjstk-service
  template:
    metadata:
      labels:
        app: bpjstk-service
    spec:
      containers:
        - image: andrianrf/bpjstk-service:latest
          imagePullPolicy: IfNotPresent
          name: bpjstk-service
          ports:
            - containerPort: 8091
          envFrom:
            - configMapRef:
                name: bpjstk-cm
          env:
            - name: "bpjstkUri"
              value: "http://bpjstk-simulator:8090/ws"
            - name: "bpjstkUsername"
              value: "admin"
            - name: "bpjstkPassword"
              value: "password"
            - name: "vlinkUrl"
              value: "http://iso-client:8100/pembayaran-bpjstk"
            - name: "vlinkAccountAdminFee"
              value: "11111111111"
            - name: "vlinkAccountJht"
              value: "22222222222"
            - name: "vlinkAccountJkk"
              value: "33333333333"
            - name: "vlinkAccountJkm"
              value: "44444444444"
            - name: "vlinkAccountJpk"
              value: "55555555555"
            - name: "vlinkAccountJpn"
              value: "66666666666"
            - name: "vlinkNoteTotalIuran"
              value: "Total Iuran BPJSTK"
            - name: "vlinkNoteAdminFee"
              value: "Admin Fee Bank BPJSTK"
            - name: "vlinkNoteJht"
              value: "Iuran JHT BPJSTK"
            - name: "vlinkNoteJkk"
              value: "Iuran JKK BPJSTK"
            - name: "vlinkNoteJkm"
              value: "Iuran JKM BPJSTK"
            - name: "vlinkNoteJpk"
              value: "Iuran JPK BPJSTK"
            - name: "vlinkNoteJpn"
              value: "Iuran JPN BPJSTK"
            - name: "springJpaHibernateDdlAuto"
              value: "update"
          resources:
            requests:
              memory: "0Mi"
              cpu: "0m"
            limits:
              memory: "512Mi"
              cpu: "1000m"
---
# Source: bpjstk-service/templates/6. backoffice-be.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: backoffice-be
  name: backoffice-be
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backoffice-be
  template:
    metadata:
      labels:
        app: backoffice-be
    spec:
      containers:
        - image: andrianrf/backoffice-be:latest
          imagePullPolicy: IfNotPresent
          name: backoffice-be
          ports:
            - containerPort: 8089
          envFrom:
            - configMapRef:
                name: bpjstk-cm
          env:
            - name: "springJpaHibernateDdlAuto"
              value: "update"
          resources:
            requests:
              memory: "0Mi"
              cpu: "0m"
            limits:
              memory: "512Mi"
              cpu: "1000m"
---
# Source: bpjstk-service/templates/7. backoffice.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: backoffice
  name: backoffice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backoffice
  template:
    metadata:
      labels:
        app: backoffice
    spec:
      containers:
        - image: andrianrf/backoffice:latest
          imagePullPolicy: IfNotPresent
          name: backoffice
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "0Mi"
              cpu: "0m"
            limits:
              memory: "300Mi"
              cpu: "250m"
          volumeMounts:
            - name: application-config
              mountPath: "/etc/nginx/nginx.conf"
              subPath: "nginx.conf"
              readOnly: true
      # kubectl create configmap backoffice-nginx-config --from-file="C:\\Users\\AndrianRF\\Desktop\bpjstk bsb\\deployment\\1. docker\\backoffice.conf"
      volumes:
        - name: application-config
          configMap:
            name: backoffice-nginx-config
            items:
              - key: backoffice.conf
                path: nginx.conf
---
# Source: bpjstk-service/templates/8. ingress-backoffice.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
  name: backoffice
spec:
  rules:
  - host: "backoffice-helm.docker.internal"
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: "backoffice"
            port:
              number: 8080
---
# Source: bpjstk-service/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "bpjstk-service-test-connection"
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: registry.access.redhat.com/ubi8/ubi:latest
      command:
        - '/bin/bash'
        - '-ec'
        - curl http://backoffice:8080/backoffice
  restartPolicy: Never
