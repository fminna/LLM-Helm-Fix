---
# Source: axual-governance-core/charts/api-gateway/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-api-gateway
  labels:
    helm.sh/chart: api-gateway-0.3.1
    app.kubernetes.io/name: api-gateway
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: axual-governance-core/charts/organization-mgmt/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-organization-mgmt
  labels:
    helm.sh/chart: organization-mgmt-0.2.1
    app.kubernetes.io/name: organization-mgmt
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.2.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: axual-governance-core/charts/platform-manager/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-platform-manager
  labels:
    helm.sh/chart: platform-manager-8.3.0
    app.kubernetes.io/name: platform-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "8.3.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: axual-governance-core/charts/platform-ui/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-platform-ui
  labels:
    helm.sh/chart: platform-ui-9.3.0
    app.kubernetes.io/name: platform-ui
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "9.3.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: axual-governance-core/charts/topic-browse/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-topic-browse
  labels:
    helm.sh/chart: topic-browse-0.3.1
    app.kubernetes.io/name: topic-browse
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: axual-governance-core/charts/api-gateway/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-api-gateway-secrets
  labels:
    helm.sh/chart: api-gateway-0.3.1
    app.kubernetes.io/name: api-gateway
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.1"
    app.kubernetes.io/managed-by: Helm
stringData:
---
# Source: axual-governance-core/charts/organization-mgmt/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-organization-mgmt-secrets
  labels:
    app.kubernetes.io/name: organization-mgmt
    helm.sh/chart: organization-mgmt-0.2.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
stringData:
---
# Source: axual-governance-core/charts/platform-manager/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-platform-manager-secrets
  labels:
    helm.sh/chart: platform-manager-8.3.0
    app.kubernetes.io/name: platform-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "8.3.0"
    app.kubernetes.io/managed-by: Helm
stringData:
---
# Source: axual-governance-core/charts/platform-ui/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-platform-ui-secrets
  labels:
    helm.sh/chart: platform-ui-9.3.0
    app.kubernetes.io/name: platform-ui
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "9.3.0"
    app.kubernetes.io/managed-by: Helm
stringData:
---
# Source: axual-governance-core/charts/topic-browse/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-topic-browse-secrets
  labels:
    helm.sh/chart: topic-browse-0.3.1
    app.kubernetes.io/name: topic-browse
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.1"
    app.kubernetes.io/managed-by: Helm
stringData:
---
# Source: axual-governance-core/charts/api-gateway/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-api-gateway-config
  labels:
    helm.sh/chart: api-gateway-0.3.1
    app.kubernetes.io/name: api-gateway
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.1"
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: axual-governance-core/charts/organization-mgmt/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-organization-mgmt-config
  labels:
    app.kubernetes.io/name: organization-mgmt
    helm.sh/chart: organization-mgmt-0.2.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: axual-governance-core/charts/platform-manager/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-platform-manager-config
  labels:
    helm.sh/chart: platform-manager-8.3.0
    app.kubernetes.io/name: platform-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "8.3.0"
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: axual-governance-core/charts/platform-ui/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-platform-ui-config
  labels:
    helm.sh/chart: platform-ui-9.3.0
    app.kubernetes.io/name: platform-ui
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "9.3.0"
    app.kubernetes.io/managed-by: Helm
data:
  nginx.conf: |
    user              nginx;
    worker_processes  1;

    error_log  /var/log/nginx/error.log warn;
    pid        /tmp/nginx.pid;

    events {
      worker_connections  1024;
    }

    http {
      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;

      log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

      access_log  /var/log/nginx/access.log  main;

      sendfile          on;
      keepalive_timeout 65;
      server_tokens     off;

      server {
          listen       8080;
          server_name  localhost;

          root /opt/app-root/src;

          location /health {
            return 200;
          }

          location / {
            try_files $uri $uri/ /index.html =404;
            gzip_static on;
            expires -1;
          }

          # redirect server error pages to the static page /50x.html
          #
          error_page  500 502 503 504 /50x.html;
          location = /50x.html {
            root   /usr/share/nginx/html;
          }

          add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
          add_header Content-Security-Policy "default-src 'self' https://example.local wss://*.firebaseio.com/; script-src 'self' https://example.local https://www.google-analytics.com/  'unsafe-inline'; media-src 'self' ; img-src 'self' https://example.local https://s3.eu-central-1.amazonaws.com/axual-flux/ https://www.google-analytics.com/  data:; style-src 'self' https://fonts.googleapis.com  'unsafe-inline' ; font-src 'self' https://fonts.gstatic.com data:; frame-src 'unsafe-inline' https://example.auth0.com https://example.local; connect-src 'self' https://example.auth0.com https://example.local  wss://*.firebaseio.com/; object-src 'none'; frame-ancestors 'self' ; base-uri 'self'; form-action 'self'; block-all-mixed-content; upgrade-insecure-requests";
          add_header X-Frame-Options "SAMEORIGIN" always;
          add_header X-Xss-Protection "1; mode=block" always;
          add_header X-Content-Type-Options "nosniff" always;
          add_header Referrer-Policy "strict-origin-when-cross-origin";

      }
    }
---
# Source: axual-governance-core/charts/topic-browse/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-topic-browse-config
  labels:
    helm.sh/chart: topic-browse-0.3.1
    app.kubernetes.io/name: topic-browse
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.1"
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: axual-governance-core/charts/api-gateway/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-api-gateway
  labels:
    helm.sh/chart: api-gateway-0.3.1
    app.kubernetes.io/name: api-gateway
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: api
      protocol: TCP
      name: api
    - port: 8086
      targetPort: management
      protocol: TCP
      name: management
  selector:
    app.kubernetes.io/name: api-gateway
    app.kubernetes.io/instance: release-name
---
# Source: axual-governance-core/charts/organization-mgmt/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-organization-mgmt
  labels:
    app.kubernetes.io/name: organization-mgmt
    helm.sh/chart: organization-mgmt-0.2.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: organization-mgmt
    app.kubernetes.io/instance: release-name
---
# Source: axual-governance-core/charts/platform-manager/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-platform-manager
  labels:
    helm.sh/chart: platform-manager-8.3.0
    app.kubernetes.io/name: platform-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "8.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: api
      protocol: TCP
      name: api
    - port: 8086
      targetPort: management
      protocol: TCP
      name: management
  selector:
    app.kubernetes.io/name: platform-manager
    app.kubernetes.io/instance: release-name
---
# Source: axual-governance-core/charts/platform-ui/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-platform-ui
  labels:
    helm.sh/chart: platform-ui-9.3.0
    app.kubernetes.io/name: platform-ui
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "9.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: platform-ui
    app.kubernetes.io/instance: release-name
---
# Source: axual-governance-core/charts/topic-browse/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-topic-browse
  labels:
    helm.sh/chart: topic-browse-0.3.1
    app.kubernetes.io/name: topic-browse
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: api
      protocol: TCP
      name: api
    - port: 8086
      targetPort: management
      protocol: TCP
      name: management
  selector:
    app.kubernetes.io/name: topic-browse
    app.kubernetes.io/instance: release-name
---
# Source: axual-governance-core/charts/api-gateway/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-api-gateway
  labels:
    helm.sh/chart: api-gateway-0.3.1
    app.kubernetes.io/name: api-gateway
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: api-gateway
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/config: 66d14da149a2895d9166899065e2d09e975e4801e85c8ec5fb4937796f586fcd
        checksum/secrets: 545c3147ac58e11e8afaf99cb4dee0d8f81ae5e93ac1e5382d9848722cc95439
      labels:
        app.kubernetes.io/name: api-gateway
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-api-gateway
      securityContext:
        {}
      containers:
        - name: api-gateway
          securityContext:
            {}
          image: "registry.axual.io/axual/api-gateway:0.3.1"
          imagePullPolicy: IfNotPresent
          env:
            - name: SPRING_CONFIG_ADDITIONALLOCATION
              value: optional:file:/config/application.yml;optional:file:/secrets/secrets.yml
          ports:
            - name: api
              containerPort: 8080
              protocol: TCP
            - name: management
              containerPort: 8086
              protocol: TCP
          livenessProbe:
            httpGet:
              path: "/actuator/health/liveness"
              port: management
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: "/actuator/health/readiness"
              port: management
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 512Mi
          volumeMounts:
            - name: app-config
              mountPath: /config
            - name: app-secrets
              mountPath: /secrets
      volumes:
        - name: app-config
          configMap:
            name: release-name-api-gateway-config
        - name: app-secrets
          secret:
            secretName: release-name-api-gateway-secrets
---
# Source: axual-governance-core/charts/organization-mgmt/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-organization-mgmt
  labels:
    app.kubernetes.io/name: organization-mgmt
    helm.sh/chart: organization-mgmt-0.2.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: organization-mgmt
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/config: c390395d687dacae6f670660334d0dabe1b761d222dcb35fa453c9f7d8889a12
      labels:
        app.kubernetes.io/name: organization-mgmt
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-organization-mgmt
      securityContext:
        {}
      containers:
        - name: organization-mgmt
          securityContext:
            {}
          image: "registry.axual.io/axual/axual-organization-mgmt:0.2.1"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            tcpSocket:
              port: http
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 30m
              memory: 200Mi
          volumeMounts:
            - name: app-config
              mountPath: /usr/src/app/src/config.env
              subPath: config.env
            - name: app-secrets
              mountPath: /secrets
      volumes:
        - name: app-config
          configMap:
            name: release-name-organization-mgmt-config
        - name: app-secrets
          secret:
            secretName: release-name-organization-mgmt-secrets
---
# Source: axual-governance-core/charts/platform-manager/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-platform-manager
  labels:
    helm.sh/chart: platform-manager-8.3.0
    app.kubernetes.io/name: platform-manager
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "8.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: platform-manager
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/config: 5916ca9361024438e1a5dee4175c6012ff6de8af00e8e802fdcaf6c280514263
        checksum/secrets: 9def0d9561ff60494c3f1050d1df37ad624a9131a4fc0e13f7a068b67d3ab7e9
      labels:
        app.kubernetes.io/name: platform-manager
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-platform-manager
      securityContext:
        {}
      containers:
        - name: platform-manager
          securityContext:
            {}
          image: "registry.axual.io/axual/axual-api:8.3.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: SPRING_CONFIG_ADDITIONALLOCATION
              value: optional:file:/config/application.yml;optional:file:/secrets/secrets.yml
          ports:
            - name: api
              containerPort: 8080
              protocol: TCP
            - name: management
              containerPort: 8086
              protocol: TCP
          livenessProbe:
            httpGet:
              path: "/management/actuator/health/liveness"
              port: management
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: "/management/actuator/health/readiness"
              port: management
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 512Mi
          volumeMounts:
            - name: app-config
              mountPath: /config
            - name: app-secrets
              mountPath: /secrets
            
      volumes:
        - name: app-config
          configMap:
            name: release-name-platform-manager-config
        - name: app-secrets
          secret:
            secretName: release-name-platform-manager-secrets
---
# Source: axual-governance-core/charts/platform-ui/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-platform-ui
  labels:
    helm.sh/chart: platform-ui-9.3.0
    app.kubernetes.io/name: platform-ui
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "9.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: platform-ui
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/config: fbf1b4ec0d8319c338cd4adea2c5c3d0b835df3a9540ac60a3b81c53b434f381
      labels:
        app.kubernetes.io/name: platform-ui
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-platform-ui
      securityContext:
        {}
      containers:
        - name: platform-ui
          securityContext:
            {}
          image: "registry.axual.io/axual/axual-frontend:9.3.0"
          imagePullPolicy: IfNotPresent
          env:
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            {}
          volumeMounts:
            - name: app-config
              mountPath: /opt/app-root/src/env.js
              subPath: env.js
            - name: app-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: app-secrets
              mountPath: /secrets
      volumes:
        - name: app-config
          configMap:
            name: release-name-platform-ui-config
        - name: app-secrets
          secret:
            secretName: release-name-platform-ui-secrets
---
# Source: axual-governance-core/charts/topic-browse/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-topic-browse
  labels:
    helm.sh/chart: topic-browse-0.3.1
    app.kubernetes.io/name: topic-browse
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: topic-browse
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/config: 78ca0053a0be9656da95ef44c520896464859d1895a4ca0e9ea68f88931d5937
        checksum/secrets: 6c8ea09e87c1325a25f6b20484023df72578405c17f91294215658cf9da870b7
      labels:
        app.kubernetes.io/name: topic-browse
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-topic-browse
      securityContext:
        null
      containers:
        - name: topic-browse
          securityContext:
            {}
          image: "registry.axual.io/axual/topic-browse:0.3.1"
          imagePullPolicy: IfNotPresent
          env:
            - name: SPRING_CONFIG_ADDITIONALLOCATION
              value: optional:file:/config/application.yml;optional:file:/secrets/secrets.yml
          ports:
            - name: api
              containerPort: 8080
              protocol: TCP
            - name: management
              containerPort: 8086
              protocol: TCP
          livenessProbe:
            httpGet:
              path: "/actuator/health/liveness"
              port: management
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: "/actuator/health/readiness"
              port: management
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            {}
          volumeMounts:
            - name: app-config
              mountPath: /config
            - name: app-secrets
              mountPath: /secrets
      volumes:
        - name: app-config
          configMap:
            name: release-name-topic-browse-config
        - name: app-secrets
          secret:
            secretName: release-name-topic-browse-secrets
---
# Source: axual-governance-core/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-test"
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: success
      image: registry.access.redhat.com/ubi9-minimal:9.3-1475
      command: ['/bin/echo']
      args: ['1']
  restartPolicy: Never
