---
# Source: ambassador-agent/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-ambassador-agent
  namespace: default
  labels:
    app.kubernetes.io/name: ambassador-agent
    helm.sh/chart: ambassador-agent-1.0.21
    app.kubernetes.io/version: "1.0.21"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
---
# Source: ambassador-agent/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-ambassador-agent
  labels:
    app.kubernetes.io/name: ambassador-agent
    helm.sh/chart: ambassador-agent-1.0.21
    app.kubernetes.io/version: "1.0.21"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      rbac.getambassador.io/role-group: release-name-ambassador-agent
rules: []
---
# Source: ambassador-agent/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-ambassador-agent-pods
  labels:
    rbac.getambassador.io/role-group: release-name-ambassador-agent
    app.kubernetes.io/name: ambassador-agent
    helm.sh/chart: ambassador-agent-1.0.21
    app.kubernetes.io/version: "1.0.21"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
rules:
- apiGroups: [""]
  resources: [ "pods"]
  verbs: [ "get", "list", "watch" ]
---
# Source: ambassador-agent/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-ambassador-agent-deployments
  labels:
    rbac.getambassador.io/role-group: release-name-ambassador-agent
    app.kubernetes.io/name: ambassador-agent
    helm.sh/chart: ambassador-agent-1.0.21
    app.kubernetes.io/version: "1.0.21"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
rules:
- apiGroups: ["apps", "extensions"]
  resources: [ "deployments" ]
  verbs: [ "get", "list", "watch" ]
---
# Source: ambassador-agent/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-ambassador-agent-endpoints
  labels:
    rbac.getambassador.io/role-group: release-name-ambassador-agent
    app.kubernetes.io/name: ambassador-agent
    helm.sh/chart: ambassador-agent-1.0.21
    app.kubernetes.io/version: "1.0.21"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
rules:
- apiGroups: [""]
  resources: [ "endpoints", "services" ]
  verbs: [ "get", "list", "watch" ]
---
# Source: ambassador-agent/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-ambassador-agent-default-ns
  labels:
    rbac.getambassador.io/role-group: release-name-ambassador-agent
    app.kubernetes.io/name: ambassador-agent
    helm.sh/chart: ambassador-agent-1.0.21
    app.kubernetes.io/version: "1.0.21"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
rules:
- apiGroups: [""]
  resources: [ "namespaces" ]
  resourceNames: ["default"]
  verbs: [ "get" ]
---
# Source: ambassador-agent/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-ambassador-agent-ingresses
  labels:
    rbac.getambassador.io/role-group: release-name-ambassador-agent
    app.kubernetes.io/name: ambassador-agent
    helm.sh/chart: ambassador-agent-1.0.21
    app.kubernetes.io/version: "1.0.21"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
rules:
- apiGroups: ["networking.k8s.io", "extensions"]
  resources: [ "ingresses" ]
  verbs: [ "get", "list", "watch" ]
---
# Source: ambassador-agent/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-ambassador-agent-rollouts
  labels:
    rbac.getambassador.io/role-group: release-name-ambassador-agent
    app.kubernetes.io/name: ambassador-agent
    helm.sh/chart: ambassador-agent-1.0.21
    app.kubernetes.io/version: "1.0.21"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
rules:
- apiGroups: ["argoproj.io"]
  resources: [ "rollouts", "rollouts/status" ]
  verbs: [ "get", "list", "watch", "patch" ]
---
# Source: ambassador-agent/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-ambassador-agent-applications
  labels:
    rbac.getambassador.io/role-group: release-name-ambassador-agent
    app.kubernetes.io/name: ambassador-agent
    helm.sh/chart: ambassador-agent-1.0.21
    app.kubernetes.io/version: "1.0.21"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
rules:
- apiGroups: ["argoproj.io"]
  resources: [ "applications" ]
  verbs: [ "get", "list", "watch" ]
---
# Source: ambassador-agent/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-ambassador-agent
  labels:
    app.kubernetes.io/name: ambassador-agent
    helm.sh/chart: ambassador-agent-1.0.21
    app.kubernetes.io/version: "1.0.21"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-ambassador-agent
subjects:
- kind: ServiceAccount
  name: release-name-ambassador-agent
  namespace: default
---
# Source: ambassador-agent/templates/leaselock.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-ambassador-agent-leaderelection
  namespace: default
  labels:
    app.kubernetes.io/name: ambassador-agent
    helm.sh/chart: ambassador-agent-1.0.21
    app.kubernetes.io/version: "1.0.21"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
rules:
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["*"]
---
# Source: ambassador-agent/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-ambassador-agent-config
  namespace: default
  labels:
    app.kubernetes.io/name: ambassador-agent
    helm.sh/chart: ambassador-agent-1.0.21
    app.kubernetes.io/version: "1.0.21"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
rules:
- apiGroups: [""]
  resources: [ "configmaps" ]
  verbs: [ "get", "list", "watch" ]
- apiGroups: [""]
  resources: [ "secrets" ]
  verbs: [ "get", "list", "create", "delete", "patch", "watch" ]
---
# Source: ambassador-agent/templates/leaselock.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-ambassador-agent-leaderelection
  namespace: default
  labels:
    app.kubernetes.io/name: ambassador-agent
    helm.sh/chart: ambassador-agent-1.0.21
    app.kubernetes.io/version: "1.0.21"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-ambassador-agent-leaderelection
subjects:
  - kind: ServiceAccount
    name: release-name-ambassador-agent
    namespace: default
---
# Source: ambassador-agent/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-ambassador-agent-config
  namespace: default
  labels:
    app.kubernetes.io/name: ambassador-agent
    helm.sh/chart: ambassador-agent-1.0.21
    app.kubernetes.io/version: "1.0.21"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-ambassador-agent-config
subjects:
- kind: ServiceAccount
  name: release-name-ambassador-agent
  namespace: default
---
# Source: ambassador-agent/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-ambassador-agent
  namespace: default
  labels:
    app.kubernetes.io/name: ambassador-agent
    helm.sh/chart: ambassador-agent-1.0.21
    app.kubernetes.io/version: "1.0.21"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
spec:
  type: ClusterIP
  ports:
    - port: 80
      name: http
      targetPort: http
  selector:
    app.kubernetes.io/name: ambassador-agent
    app.kubernetes.io/instance: release-name
---
# Source: ambassador-agent/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-ambassador-agent
  namespace: default
  labels:
    app.kubernetes.io/name: ambassador-agent
    helm.sh/chart: ambassador-agent-1.0.21
    app.kubernetes.io/version: "1.0.21"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ambassador-agent
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ambassador-agent
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-ambassador-agent
      securityContext:
        {}
      containers:
        - name: ambassador-agent
          image: docker.io/ambassador/ambassador-agent:1.0.21
          imagePullPolicy: IfNotPresent
          securityContext:
            {}
          ports:
            - name: http
              containerPort: 8080
          resources:
            {}
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: AGENT_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: AGENT_CONFIG_RESOURCE_NAME
              value: release-name-ambassador-agent-cloud-token
            - name: RPC_CONNECTION_ADDRESS
              value:
