---
# Source: vsphere-csi/templates/controller/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-vsphere-csi-controller
  namespace: "default"
  labels:
    app.kubernetes.io/name: vsphere-csi
    helm.sh/chart: vsphere-csi-2.5.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: vsphere-csi-controller
---
# Source: vsphere-csi/templates/node/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-vsphere-csi-node
  namespace: "default"
  labels:
    app.kubernetes.io/name: vsphere-csi
    helm.sh/chart: vsphere-csi-2.5.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: vsphere-csi-node
---
# Source: vsphere-csi/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-vsphere-csi
  namespace: "default"
  labels:
    app.kubernetes.io/name: vsphere-csi
    helm.sh/chart: vsphere-csi-2.5.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: release-name-vsphere-csi
type: Opaque
stringData:
  csi-vsphere.conf: |
    [Global]
    insecure-flag = true
    port = 443
---
# Source: vsphere-csi/templates/snapshot-validation-webhook/validatingwebhookconfiguration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-vsphere-csi-snapshot-webhook-certs
  namespace: "default"
  labels:
    app.kubernetes.io/name: vsphere-csi
    helm.sh/chart: vsphere-csi-2.5.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: vsphere-csi-snapshotwebhook
type: Opaque
stringData:
  tls.key:  "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEA5P1BOfimrtn52T5auOuoqwKVIHS7JtcCpEgITR1N1v6aNpIU\nnBtlXs0xSEuemk6nzsdCl449Vt7d/O6g+xR9OUIn7PZwvFxIA+IqMi5U5lUv6GpY\nSMRud7Tryb7VVQWMtAbV+3f+/pa2WZ0P9UzB6aWyQ58PuWUK53IuqWKevM76u7/A\nnOAxK2sMenRMUSmyBvHG/Wx41Kt1RRfX+yn+Db1EkHnE4t2LtLVVbRLm0Heewogm\na9pkyI0VBGk4cxRxUP3kP2xju7SWD1SL333W6osmTWlKzCtdqK+CeTNakJ+O5REB\nnTONfHYg21nmPeTH41QiGTvZYr97uaVPlQFN7wIDAQABAoIBAQC1uMmPoOVec3uU\nzKggglv7QnRoKlrvasgc6VE1KWFBkhF95xXWAOPEhSBsGB7IpE0FixosveOt0fXn\nKNS2DL+HthmLMtOql61K76u+4QfdNpNrZSGktcZY10obc4dHDr1njNk51DOXhLE3\nkq48Y+qraiR7B3rqDObHX9Tp9Wq1uCeLCtSM5YrLjs5Yh22wJ+yIojOmPrNAuWeR\n8RlcDjolQqzmXRiradCN1OSO+LqSwKXoNdWcr8KyeC+RHCK2BF8cVST1j4313MOD\ny//p5YmP2iAdMJtLVwnFUKZefvL5GTbWklbWG3/+jZfiyDlIb48Qd9ke/GvrFkGZ\nhqFllpzRAoGBAP2/PfyunNsZS61QIu79t299FNPHxkpkycPCVG7okKaJCrHrYRIQ\nSlkx8pGsAVD4HRR9YtgMynodjq/P46H3RLCygyO3LNvOlotv7uUUnoCkmK8txPSI\nO7KLzY6OB3YQnsXcBOsmFObUqSUUdEg7Z4gJTec3fWuE0PWrfvQCsl5nAoGBAOcF\nvTkQ9ZdYC3JxqqXRTz1kXeu4fXFO7JCth3xcsf3LK4BS/mikYegDwBwTBvmqXT58\n/Baa2cFrJy5DB3JkpGgb69BsMF90IqWXWgROL3BkwH//L6h9zNzhNBixHf6tGX2B\nPf3/6WCT1pRmBafZ1l5nXdAseGz+QU/lqJIUQ885AoGBAMaACLnWzxYG39Cg0/Mp\nv4oTy2sw6MnhtoTRTMPGYwIkSp2MiM9ctwy3qg6TBCSXNAiHXf+tYefNn4Whl21o\nxe+EdlpGPW1mWxaRZc0HKEdye47uuxigSjMOcquGKAgQUGRwDdj2XXuF+RvsuFqZ\nPhCJVsv9+LtXly/YDOROB8MZAoGAZr3cq3ZpYodbf+ghNmFh1jG+u0hvMWciOi2S\nZbJrziz/CbDfR/ZjPGX+l/22Sm6DzXiUPBFd6nEXGbHhq/QqUcqpEyYqVSk3B2HK\nPMPwwRFtsv7wWQSpiUn2e0y5xDuDbJd/1Ghth+/3rEO7HCz68z0RMbW1UPO6ZCgE\n0gKFLbECgYAiUSjTO1oEHgdZVdIhrb1+yb+SqBWJEALFgo5C4YlkfEJKxLul5EIr\nqbzgjMiFVIcbhlVCyydOpd9qe3bCYoYLaQZHy3W+dT62uJSS21gWbRjLoLO2EbLf\nECb9GmRIjZC3Pj8n7O+JcROd8SOOajvFZ5rEn7KkHkC1riSNjMKqUQ==\n-----END RSA PRIVATE KEY-----\n"
  tls.crt: "-----BEGIN CERTIFICATE-----\nMIIEBzCCAu+gAwIBAgIRAK3Y+0QWKiXGpPS0lDIWet4wDQYJKoZIhvcNAQELBQAw\nGTEXMBUGA1UEAxMOdnNwaGVyZS1jc2ktY2EwHhcNMjQwNTE1MTAxODAyWhcNMjUw\nNTE1MTAxODAyWjAjMSEwHwYDVQQDExhyZWxlYXNlLW5hbWUtdnNwaGVyZS1jc2kw\nggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDk/UE5+Kau2fnZPlq466ir\nApUgdLsm1wKkSAhNHU3W/po2khScG2VezTFIS56aTqfOx0KXjj1W3t387qD7FH05\nQifs9nC8XEgD4ioyLlTmVS/oalhIxG53tOvJvtVVBYy0BtX7d/7+lrZZnQ/1TMHp\npbJDnw+5ZQrnci6pYp68zvq7v8Cc4DErawx6dExRKbIG8cb9bHjUq3VFF9f7Kf4N\nvUSQecTi3Yu0tVVtEubQd57CiCZr2mTIjRUEaThzFHFQ/eQ/bGO7tJYPVIvffdbq\niyZNaUrMK12or4J5M1qQn47lEQGdM418diDbWeY95MfjVCIZO9liv3u5pU+VAU3v\nAgMBAAGjggE+MIIBOjAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUH\nAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAUJ00MOPWRgXx7\n3ppzL/b2zs4u5nAwgdkGA1UdEQSB0TCBzoI8cmVsZWFzZS1uYW1lLXZzcGhlcmUt\nY3NpLXNuYXBzaG90LXZhbGlkYXRpb24tc2VydmljZS5kZWZhdWx0gkByZWxlYXNl\nLW5hbWUtdnNwaGVyZS1jc2ktc25hcHNob3QtdmFsaWRhdGlvbi1zZXJ2aWNlLmRl\nZmF1bHQuc3ZjgiByZWxlYXNlLW5hbWUtdnNwaGVyZS1jc2kuZGVmYXVsdIIkcmVs\nZWFzZS1uYW1lLXZzcGhlcmUtY3NpLmRlZmF1bHQuc3ZjhwR/AAABMA0GCSqGSIb3\nDQEBCwUAA4IBAQC4Bicvp/lf6IBXdKgwZmcaJj3K00hyx32vf+BcalfRs8UUXjGP\nf8H8Xpc+VtU0TRQgdOEZCwtqX25MVKoK7u3VFRWtkzIhHUQs7kvYl9180rtcNqOP\nLtr4O3gtSSdm8eo9qgDzjhsOUuYI/9lgjQtKD4ZJGXbX8oabEfBSeFRqJHBz1k6u\nknqrQ9dOq8vENKUUG4aFdLs3/cE7ueimNOli05wF1eJNEUlLcBDeqJwhZ5qDFsYi\nxogGS+7QZEvJnwoxvkv+9lS+bY9BzargfSKmtqWGZ3O2TLQ6JpIR9TtsnS0wEEnH\nHwHCR1gyjIuCsOLXl2WxWvUTAM2/YoDescE/\n-----END CERTIFICATE-----\n"
---
# Source: vsphere-csi/templates/controller/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: internal-feature-states.csi.vsphere.vmware.com
  namespace: "default"
  labels:
    app.kubernetes.io/name: vsphere-csi
    helm.sh/chart: vsphere-csi-2.5.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: vsphere-csi-controller
data:
  "async-query-volume": "true"
  "block-volume-snapshot": "true"
  "cnsmgr-suspend-create-volume": "true"
  "csi-auth-check": "true"
  "csi-migration": "false"
  "csi-windows-support": "false"
  "improved-csi-idempotency": "true"
  "improved-volume-topology": "true"
  "list-volumes": "false"
  "max-pvscsi-targets-per-vm": "true"
  "online-volume-extend": "true"
  "pv-to-backingdiskobjectid-mapping": "false"
  "topology-preferential-datastores": "true"
  "trigger-csi-fullsync": "false"
  "use-csinode-id": "true"
---
# Source: vsphere-csi/templates/controller/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vsphere-csi-controller
  labels:
    app.kubernetes.io/name: vsphere-csi
    helm.sh/chart: vsphere-csi-2.5.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: vsphere-csi-controller
rules:
  - apiGroups: [""]
    resources: ["nodes", "pods", "configmaps"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims/status"]
    verbs: ["patch"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "update", "delete", "patch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses", "csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "patch"]
  - apiGroups: ["cns.vmware.com"]
    resources: ["triggercsifullsyncs"]
    verbs: ["create", "get", "update", "watch", "list"]
  - apiGroups: ["cns.vmware.com"]
    resources: ["cnsvspherevolumemigrations"]
    verbs: ["create", "get", "list", "watch", "update", "delete"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "create", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments/status"]
    verbs: ["patch"]
  - apiGroups: ["cns.vmware.com"]
    resources: ["cnsvolumeoperationrequests"]
    verbs: ["create", "get", "list", "update", "delete"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotclasses"]
    verbs: ["watch", "get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: [ "create", "get", "list", "watch", "update", "delete", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents/status"]
    verbs: ["update", "patch"]
  - apiGroups: ["cns.vmware.com"]
    resources: ["csinodetopologies"]
    verbs: ["get", "update", "watch", "list"]
---
# Source: vsphere-csi/templates/node/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vsphere-csi-node
rules:
- apiGroups: ["cns.vmware.com"]
  resources: ["csinodetopologies"]
  verbs: ["create", "watch", "get", "patch"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get"]
---
# Source: vsphere-csi/templates/controller/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vsphere-csi-controller
  labels:
    app.kubernetes.io/name: vsphere-csi
    helm.sh/chart: vsphere-csi-2.5.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: vsphere-csi-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vsphere-csi-controller
subjects:
  - kind: ServiceAccount
    name: release-name-vsphere-csi-controller
    namespace: default
---
# Source: vsphere-csi/templates/node/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vsphere-csi-node-cluster-role-binding
subjects:
  - kind: ServiceAccount
    name: release-name-vsphere-csi-node
    namespace: default
roleRef:
  kind: ClusterRole
  name: vsphere-csi-node
  apiGroup: rbac.authorization.k8s.io
---
# Source: vsphere-csi/templates/node/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: vsphere-csi-node
  namespace: "default"
  labels:
    app.kubernetes.io/name: vsphere-csi
    helm.sh/chart: vsphere-csi-2.5.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: vsphere-csi-node
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch"]
---
# Source: vsphere-csi/templates/node/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vsphere-csi-node
  namespace: "default"
  labels:
    app.kubernetes.io/name: vsphere-csi
    helm.sh/chart: vsphere-csi-2.5.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: vsphere-csi-node
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: vsphere-csi-node
subjects:
  - kind: ServiceAccount
    name: release-name-vsphere-csi-node
    namespace: default
---
# Source: vsphere-csi/templates/controller/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: vsphere-csi-controller
  namespace: "default"
  labels:
    app.kubernetes.io/name: vsphere-csi
    helm.sh/chart: vsphere-csi-2.5.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: vsphere-csi-controller
spec:
  type: ClusterIP
  
  ports:
    - name: ctlr
      port: 2112
      targetPort: 2112
      protocol: TCP
    - name: syncer
      port: 2113
      targetPort: 2113
      protocol: TCP
  selector:
    app.kubernetes.io/name: vsphere-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: vsphere-csi-controller
---
# Source: vsphere-csi/templates/snapshot-validation-webhook/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: snapshot-validation-service
  namespace: "default"
spec:
  selector:
    app: snapshot-validation
  ports:
  - protocol: TCP
    port: 443   # Change if needed
    targetPort: 443   # Change if the webserver image expects a different port
---
# Source: vsphere-csi/templates/node/daemonset-linux.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: release-name-vsphere-csi
  namespace: "default"
  labels:
    app.kubernetes.io/name: vsphere-csi
    helm.sh/chart: vsphere-csi-2.5.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: release-name-vsphere-csi-node
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: vsphere-csi
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: release-name-vsphere-csi-node
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vsphere-csi
        helm.sh/chart: vsphere-csi-2.5.0
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: release-name-vsphere-csi-node
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: release-name-vsphere-csi-node
      
      dnsPolicy:
        ClusterFirstWithHostNet
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: vsphere-csi
                    app.kubernetes.io/instance: release-name
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
      initContainers:
      containers:
        - name: node-driver-registrar
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.5.1
          imagePullPolicy: IfNotPresent
          args:
            - --v=5
            - --csi-address=$(ADDRESS)
            - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: /var/lib/kubelet/plugins/csi.vsphere.vmware.com/csi.sock
          envFrom:
          ports:
          - containerPort: 9808
            name: healthz
          resources:
            limits: {}
            requests: {}
          livenessProbe:
            exec:
              command:
              - /csi-node-driver-registrar
              - --kubelet-registration-path=/var/lib/kubelet/plugins/csi.vsphere.vmware.com/csi.sock
              - --mode=kubelet-registration-probe
            initialDelaySeconds: 3
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration

        - name: vsphere-csi-node
          image: gcr.io/cloud-provider-vsphere/csi/release/driver:v2.7.0
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add:
              - SYS_ADMIN
            privileged: true
          args:
            - --fss-name=internal-feature-states.csi.vsphere.vmware.com
            - --fss-namespace=$(CSI_NAMESPACE)
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: X_CSI_MODE
              value: "node"
            - name: X_CSI_SPEC_REQ_VALIDATION
              value: "false"
            - name: X_CSI_DEBUG
              value: "true"
            - name: LOGGER_LEVEL
              value: "PRODUCTION" # Options: DEVELOPMENT, PRODUCTION
            - name: MAX_VOLUMES_PER_NODE
              value: "59"     # Maximum number of volumes that controller can publish to the node. If value is not set or zero Kubernetes decide how many volumes can be published by the controller to the node.
            - name: GODEBUG
              value: x509sha1=1
            - name: CSI_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODEGETINFO_WATCH_TIMEOUT_MINUTES
              value: "1"
          envFrom:
          ports:
          resources:
            limits: {}
            requests: {}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: pods-mount-dir
              mountPath: /var/lib/kubelet
              # needed so that any mounts setup inside this container are
              # propagated back to the host machine.
              mountPropagation: "Bidirectional"
            - name: device-dir
              mountPath: /dev
            - name: blocks-dir
              mountPath: /sys/block
            - name: sys-devices-dir
              mountPath: /sys/devices
        - name: liveness-probe
          image: k8s.gcr.io/sig-storage/livenessprobe:v2.7.0
          imagePullPolicy: IfNotPresent
          args:
            - --v=4
            - --csi-address=/csi/csi.sock
          env:
          envFrom:
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
      volumes:
      - name: registration-dir
        hostPath:
          path: /var/lib/kubelet/plugins_registry
          type: Directory
      - name: plugin-dir
        hostPath:
          path: /var/lib/kubelet/plugins/csi.vsphere.vmware.com
          type: DirectoryOrCreate
      - name: pods-mount-dir
        hostPath:
          path: /var/lib/kubelet
          type: Directory
      - name: device-dir
        hostPath:
          path: /dev
      - name: blocks-dir
        hostPath:
          path: /sys/block
          type: Directory
      - name: sys-devices-dir
        hostPath:
          path: /sys/devices
          type: Directory
---
# Source: vsphere-csi/templates/controller/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vsphere-csi-controller
  namespace: "default"
  labels:
    app.kubernetes.io/name: vsphere-csi
    helm.sh/chart: vsphere-csi-2.5.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: vsphere-csi-controller
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: vsphere-csi
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: vsphere-csi-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vsphere-csi
        helm.sh/chart: vsphere-csi-2.5.0
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: vsphere-csi-controller
    spec:
      serviceAccountName: release-name-vsphere-csi-controller
      
      dnsPolicy:
        Default
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: vsphere-csi
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: vsphere-csi-controller
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
      initContainers:
      containers:
        - name: csi-attacher
          image: k8s.gcr.io/sig-storage/csi-attacher:v3.5.0
          imagePullPolicy: IfNotPresent
          args:
            - --v=4
            - --timeout=300s
            - --csi-address=$(ADDRESS)
            - --leader-election
            - --kube-api-qps=100
            - --kube-api-burst=100
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          envFrom:
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
        - name: csi-resizer
          image: k8s.gcr.io/sig-storage/csi-resizer:v1.5.0
          imagePullPolicy: IfNotPresent
          args:
            - --v=4
            - --timeout=300s
            - --handle-volume-inuse-error=false
            - --csi-address=$(ADDRESS)
            - --kube-api-qps=100
            - --kube-api-burst=100
            - --leader-election
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          envFrom:
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
        - name: vsphere-csi-controller
          image: gcr.io/cloud-provider-vsphere/csi/release/driver:v2.7.0
          imagePullPolicy: IfNotPresent
          args:
            - --fss-name=internal-feature-states.csi.vsphere.vmware.com
            - --fss-namespace=$(CSI_NAMESPACE)
            - "--fss-name=internal-feature-states.csi.vsphere.vmware.com"
            - "--fss-namespace=$(CSI_NAMESPACE)"
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: X_CSI_MODE
              value: "controller"
            - name: X_CSI_SPEC_DISABLE_LEN_CHECK
              value: "true"
            - name: X_CSI_SERIAL_VOL_ACCESS_TIMEOUT
              value: 3m
            - name: VSPHERE_CSI_CONFIG
              value: "/etc/cloud/csi-vsphere.conf"
            - name: LOGGER_LEVEL
              value: PRODUCTION
            - name: INCLUSTER_CLIENT_QPS
              value: "100"
            - name: INCLUSTER_CLIENT_BURST
              value: "100"
            - name: CSI_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
          resources:
            limits: {}
            requests: {}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 25
            periodSeconds: 5
            timeoutSeconds: 3
          ports:
            - name: healthz
              containerPort: 9808
              protocol: TCP
            - name: prometheus
              containerPort: 2112
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/cloud
              name: vsphere-config-volume
              readOnly: true
            - mountPath: /csi
              name: socket-dir
        - name: liveness-probe
          image: k8s.gcr.io/sig-storage/livenessprobe:v2.7.0
          imagePullPolicy: IfNotPresent
          args:
            - --v=4
            - --csi-address=/csi/csi.sock
          env:
          envFrom:
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: vsphere-syncer
          image: gcr.io/cloud-provider-vsphere/csi/release/syncer:v2.7.0
          imagePullPolicy: IfNotPresent
          args:
            - --leader-election
            - --fss-name=internal-feature-states.csi.vsphere.vmware.com
            - --fss-namespace=$(CSI_NAMESPACE)
          env:
            - name: FULL_SYNC_INTERVAL_MINUTES
              value: "30"
            - name: VSPHERE_CSI_CONFIG
              value: "/etc/cloud/csi-vsphere.conf"
            - name: LOGGER_LEVEL
              value: PRODUCTION
            - name: INCLUSTER_CLIENT_QPS
              value: "100"
            - name: INCLUSTER_CLIENT_BURST
              value: "100"
            - name: GODEBUG
              value: x509sha1=1
            - name: CSI_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
          resources:
            limits: {}
            requests: {}
          ports:
            - containerPort: 2113
              name: prometheus
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/cloud
              name: vsphere-config-volume
              readOnly: true
        - name: csi-provisioner
          image: k8s.gcr.io/sig-storage/csi-provisioner:v3.2.1
          imagePullPolicy: IfNotPresent
          args:
            - --v=4
            - --timeout=300s
            - --csi-address=$(ADDRESS)
            - --kube-api-qps=100
            - --kube-api-burst=100
            - --leader-election
            - --default-fstype=ext4
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          envFrom:
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - mountPath: /csi
              name: socket-dir


        - name: csi-snapshotter
          image: k8s.gcr.io/sig-storage/csi-snapshotter:v6.0.1
          imagePullPolicy: IfNotPresent
          args:
            - --v=4
            - --kube-api-qps=100
            - --kube-api-burst=100
            - --timeout=300s
            - --csi-address=$(ADDRESS)
            - --leader-election
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          envFrom:
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
      volumes:
        - name: vsphere-config-volume
          secret:
            secretName: release-name-vsphere-csi
        - name: socket-dir
          emptyDir: {}
---
# Source: vsphere-csi/templates/snapshot-validation-webhook/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vsphere-csi-snapshotwebhook
  namespace: "default"
  labels:
    app.kubernetes.io/name: vsphere-csi
    helm.sh/chart: vsphere-csi-2.5.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: vsphere-csi-snapshotwebhook
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: vsphere-csi
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: vsphere-csi-snapshotwebhook
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vsphere-csi
        helm.sh/chart: vsphere-csi-2.5.0
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: vsphere-csi-snapshotwebhook
    spec:
      #serviceAccountName: release-name-vsphere-csi-snapshotwebhook
      
      dnsPolicy:
        Default
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: vsphere-csi
                    app.kubernetes.io/instance: release-name
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
      initContainers:
      containers:
        - name: snapshot-validation
          image: k8s.gcr.io/sig-storage/snapshot-validation-webhook:v6.0.1
          imagePullPolicy: IfNotPresent
          args:
            - --tls-cert-file=/run/secrets/tls/tls.crt
            - --tls-private-key-file=/run/secrets/tls/tls.key
          env:
          envFrom:
          resources:
            limits: {}
            requests: {}
          ports:
            - containerPort: 443 
          volumeMounts:
            - name: webhook-certs
              mountPath: /run/secrets/tls
              readOnly: true
      volumes:
        - name: webhook-certs
          secret:
            secretName: release-name-vsphere-csi-snapshot-webhook-certs
---
# Source: vsphere-csi/templates/csi-driver.yaml
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: csi.vsphere.vmware.com
spec:
  attachRequired: true
  podInfoOnMount: false
---
# Source: vsphere-csi/templates/snapshot-validation-webhook/validatingwebhookconfiguration.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: "validation-webhook.snapshot.storage.k8s.io"
  labels:
    app.kubernetes.io/name: vsphere-csi
    helm.sh/chart: vsphere-csi-2.5.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: vsphere-csi-snapshotwebhook
webhooks:
- name: "validation-webhook.snapshot.storage.k8s.io"
  rules:
  - apiGroups: ["snapshot.storage.k8s.io"]
    apiVersions: ["v1", "v1beta1"]
    operations: ["CREATE", "UPDATE"]
    resources: ["volumesnapshots", "volumesnapshotcontents"]
    scope: "*"
  clientConfig:
    service:
      namespace: "default"
      name: release-name-vsphere-csi-snapshot-validation-service
      path: "/volumesnapshot"
    caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIVENDQWdXZ0F3SUJBZ0lRUzRJOG9WUjBvMStIZ1RvaVZCRTY5ekFOQmdrcWhraUc5dzBCQVFzRkFEQVoKTVJjd0ZRWURWUVFERXc1MmMzQm9aWEpsTFdOemFTMWpZVEFlRncweU5EQTFNVFV4TURFNE1ESmFGdzB5TlRBMQpNVFV4TURFNE1ESmFNQmt4RnpBVkJnTlZCQU1URG5aemNHaGxjbVV0WTNOcExXTmhNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5REVqSmUycUsrZEFNeS94RXdmME9wdkxKVHRaeHJBTnIzdmYKQ3lrMWh5bU1GTkVKUVlkRHUya2lIOXlLZHY2cTV1djQ0UkVETDd6TG55VUh2cE82M0pVem01bHo5dFJRaGxGQwptdWIzeURpa01ibnVQektBamhTRk5ZU05FZDR5dm5keUNteTBkSXp1dmhtMHBJZmt1NEdLcDgyQ05VR3BZbGdOClJZQVp5d3Y5RHFtZVV0blllbTM4K01NWnc4OURWaVA5MUp3a3FnZTBRN0FKdFo1YWRBbzFoK1VUNlAxOHV6ZTcKRXJtMGdaYllqMWNuVHRXSTJPWVN6dTFRbjErVG1yZ0JBbkFxM1RKMDQvRERuL05ZekxOYkQyRUl3WURFYjhHZQpEL3VQQmhrUDBwRU5ld2lyWnNPQ3VscGVzWjl6OFRxWkRVYjZ2cWxCSWlKczB3R2Z5UUlEQVFBQm8yRXdYekFPCkJnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ2RORERqMWtZRjhlOTZhY3kvMjlzN09MdVp3TUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXc4a05DR0VmeVRuOHJTYjJoL0JXa0QwWkloNVZhbFl1enpxSUh1L0pICkx1WTEzZWI5aU9jMnZ2RGFSVzk2YnNOMkNobkh5cjRJY040WVNwMjR4MW41OHQ3Z3RwTit4a3ZSUDdWdCsyS3AKbXZ2UjMrT05NaEQ1bDBnaE4weWRPMWl3RU1yR05rcGVqQ2t1ZTlBQ200VFpDUGpCU1k3MnF5UHRQQVozWG9YdgppZXR4V0NtK1k1elNGN0d0STJBTDJ1cnhUL2Y4Smh2UUU3dHAxeVZoOVhJRFYzSjFlc0hhUVk0N0pIbHZSSEUrCjZZdmoyT2JoV3RIMkxPelgxTm8wNDZkOXJEUnVxeGNaOThGWS80dlBRRm81UktSZjdhR1lhZkgwbVhlQzFGRnMKYjFySzZaVUpwUjI2QklYSFNaMWlnQS9LdW1PVVRibzJvZzZYd1NDeHFjZHcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
  admissionReviewVersions: ["v1"]
  sideEffects: None
  failurePolicy: Ignore   # We recommend switching to Fail only after successful installation of the webhook server and webhook.
  timeoutSeconds: 2   # This will affect the latency and performance. Finetune this value based on your application's tolerance.
