---
# Source: trillian/templates/mysql/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: "mysql"
    app.kubernetes.io/name: trillian
    app.kubernetes.io/instance: release-name
    helm.sh/chart: trillian-0.2.22
    app.kubernetes.io/managed-by: Helm
  name: release-name-trillian-mysql
  namespace: default
  annotations:
    {}
---
# Source: trillian/templates/trillian-log-server/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: "mysql"
    app.kubernetes.io/name: trillian
    app.kubernetes.io/instance: release-name
    helm.sh/chart: trillian-0.2.22
    app.kubernetes.io/managed-by: Helm
  name: release-name-trillian-log-server
  namespace: default
  annotations:
    {}
---
# Source: trillian/templates/trillian-log-signer/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: "log-signer"
    app.kubernetes.io/name: trillian
    app.kubernetes.io/instance: release-name
    helm.sh/chart: trillian-0.2.22
    app.kubernetes.io/managed-by: Helm
  name: release-name-trillian-log-signer
  namespace: default
  annotations:
    {}
---
# Source: trillian/templates/mysql/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: "mysql"
    app.kubernetes.io/name: trillian
    app.kubernetes.io/instance: release-name
    helm.sh/chart: trillian-0.2.22
    app.kubernetes.io/managed-by: Helm
  name: release-name-trillian-mysql
  namespace: default
type: Opaque
data:
  mysql-root-password: "S3hzSkIxTVRPNw=="
  mysql-password: "MFRYSDBUc3ZpSQ=="
  mysql-user: "bXlzcWw="
  mysql-database:  "cmVsZWFzZS1uYW1lLXRyaWxsaWFu"
---
# Source: trillian/templates/mysql/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  labels:
    app.kubernetes.io/component: "mysql"
    app.kubernetes.io/name: trillian
    app.kubernetes.io/instance: release-name
    helm.sh/chart: trillian-0.2.22
    app.kubernetes.io/managed-by: Helm
  name: release-name-trillian-mysql
  namespace: default
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "5Gi"
---
# Source: trillian/templates/mysql/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: "mysql"
    app.kubernetes.io/name: trillian
    app.kubernetes.io/instance: release-name
    helm.sh/chart: trillian-0.2.22
    app.kubernetes.io/managed-by: Helm
  name: release-name-trillian-mysql
  namespace: default
spec:
  ports:
    - name: 3306-tcp
      port: 3306
      protocol: TCP
      targetPort: 3306
  selector:
    app.kubernetes.io/component: "mysql"
    app.kubernetes.io/name: trillian
    app.kubernetes.io/instance: release-name
  type: "ClusterIP"
---
# Source: trillian/templates/trillian-log-server/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: "log-server"
    app.kubernetes.io/name: trillian
    app.kubernetes.io/instance: release-name
    helm.sh/chart: trillian-0.2.22
    app.kubernetes.io/managed-by: Helm
  name: release-name-trillian-log-server
  namespace: default
spec:
  ports:
    - name: 8091-tcp
      port: 8091
      protocol: TCP
      targetPort: 8091
    - name: 8090-tcp
      port: 8090
      protocol: TCP
      targetPort: 8090
  selector:
    app.kubernetes.io/component: "log-server"
    app.kubernetes.io/name: trillian
    app.kubernetes.io/instance: release-name
  type: "ClusterIP"
---
# Source: trillian/templates/trillian-log-signer/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: "log-signer"
    app.kubernetes.io/name: trillian
    app.kubernetes.io/instance: release-name
    helm.sh/chart: trillian-0.2.22
    app.kubernetes.io/managed-by: Helm
  name: release-name-trillian-log-signer
  namespace: default
spec:
  ports:
    - name: 8091-tcp
      port: 8091
      protocol: TCP
      targetPort: 8091
  selector:
    app.kubernetes.io/component: "log-signer"
    app.kubernetes.io/name: trillian
    app.kubernetes.io/instance: release-name
  type: "ClusterIP"
---
# Source: trillian/templates/mysql/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: "mysql"
    app.kubernetes.io/name: trillian
    app.kubernetes.io/instance: release-name
    helm.sh/chart: trillian-0.2.22
    app.kubernetes.io/managed-by: Helm
  name: release-name-trillian-mysql
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: "mysql"
      app.kubernetes.io/name: trillian
      app.kubernetes.io/instance: release-name
  replicas: 1
  strategy:
    type: Recreate
    rollingUpdate: null
  template:
    metadata:
      labels:
        app.kubernetes.io/component: "mysql"
        app.kubernetes.io/name: trillian
        app.kubernetes.io/instance: release-name
        helm.sh/chart: trillian-0.2.22
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: release-name-trillian-mysql
      containers:
        - name: trillian-mysql
          image: "gcr.io/trillian-opensource-ci/db_server@sha256:2a685a38dd0129cceb646c232d285383f614c7e6fa51ff8f512aef78e4298461"
          imagePullPolicy: "IfNotPresent"
          args:
            - --ignore-db-dir=lost+found
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-trillian-mysql
                  key: mysql-root-password
            - name: MYSQL_USER
              value: "mysql"
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-trillian-mysql
                  key: mysql-password
            - name: MYSQL_DATABASE
              value: release-name-trillian
          ports:            
            - containerPort: 3306
              protocol: TCP
          livenessProbe:
            exec:
              command:
              - /etc/init.d/mysql
              - status
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            exec:
              command:
              - /etc/init.d/mysql
              - status
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            {}
          volumeMounts:
            - name: storage
              mountPath: /var/lib/mysql
              subPath: 
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: release-name-trillian-mysql
---
# Source: trillian/templates/trillian-log-server/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: "log-server"
    app.kubernetes.io/name: trillian
    app.kubernetes.io/instance: release-name
    helm.sh/chart: trillian-0.2.22
    app.kubernetes.io/managed-by: Helm
  name: release-name-trillian-log-server
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: "log-server"
      app.kubernetes.io/name: trillian
      app.kubernetes.io/instance: release-name
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/component: "log-server"
        app.kubernetes.io/name: trillian
        app.kubernetes.io/instance: release-name
        helm.sh/chart: trillian-0.2.22
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: release-name-trillian-log-server
      initContainers:
        - name: "wait-for-trillian-db"
          image: "cgr.dev/chainguard/netcat@sha256:7243b469d34bd28969fa2c764a12d91084c427209540bb68645629d635b3f143"
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c", "until nc -z -w 10 release-name-trillian-mysql 3306; do echo waiting for release-name-trillian-mysql; sleep 5; done;"]
      containers:
        - name: trillian-log-server
          image: "ghcr.io/sigstore/scaffolding/trillian_log_server@sha256:34a87140ff88da3f8b83ef8f12575a5dc684afc79af880f148f45ca27f16e60e"
          imagePullPolicy: "IfNotPresent"
          args:
            - "--storage_system=mysql"
            - "--quota_system=mysql"
            - "--mysql_uri=$(MYSQL_USER):$(MYSQL_PASSWORD)@tcp($(MYSQL_HOSTNAME):$(MYSQL_PORT))/$(MYSQL_DATABASE)"
            - "--rpc_endpoint=0.0.0.0:8091"
            - "--http_endpoint=0.0.0.0:8090"
            - "--alsologtostderr"
          env:            
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                    name: release-name-trillian-mysql
                    key: mysql-user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                    name: release-name-trillian-mysql
                    key: mysql-password
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                    name: release-name-trillian-mysql
                    key: mysql-database
            - name: MYSQL_HOSTNAME
              value: release-name-trillian-mysql
            - name: MYSQL_PORT
              value: "3306"
          ports:            
            - containerPort: 8091
              protocol: TCP
            - containerPort: 8090
              protocol: TCP
          resources:
            {}
---
# Source: trillian/templates/trillian-log-signer/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: "log-signer"
    app.kubernetes.io/name: trillian
    app.kubernetes.io/instance: release-name
    helm.sh/chart: trillian-0.2.22
    app.kubernetes.io/managed-by: Helm
  name: release-name-trillian-log-signer
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: "log-signer"
      app.kubernetes.io/name: trillian
      app.kubernetes.io/instance: release-name
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/component: "log-signer"
        app.kubernetes.io/name: trillian
        app.kubernetes.io/instance: release-name
        helm.sh/chart: trillian-0.2.22
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: release-name-trillian-log-signer
      initContainers:
        - name: "wait-for-trillian-db"
          image: "cgr.dev/chainguard/netcat@sha256:7243b469d34bd28969fa2c764a12d91084c427209540bb68645629d635b3f143"
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c", "until nc -z -w 10 release-name-trillian-mysql 3306; do echo waiting for release-name-trillian-mysql; sleep 5; done;"]
      containers:
        - name: trillian-log-signer
          image: "ghcr.io/sigstore/scaffolding/trillian_log_signer@sha256:ab97f7591e96e7ae1dbfea3bcc4b5f4b8ad13857e04779d8c6c2309cc432e5ce"
          imagePullPolicy: "IfNotPresent"
          args:
            - "--storage_system=mysql"
            - "--quota_system=mysql"
            - "--mysql_uri=$(MYSQL_USER):$(MYSQL_PASSWORD)@tcp($(MYSQL_HOSTNAME):$(MYSQL_PORT))/$(MYSQL_DATABASE)"
            - "--rpc_endpoint=0.0.0.0:8091"
            - "--http_endpoint=0.0.0.0:8090"
            - "--force_master=true"
            - "--alsologtostderr"
          env:            
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                    name: release-name-trillian-mysql
                    key: mysql-user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                    name: release-name-trillian-mysql
                    key: mysql-password
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                    name: release-name-trillian-mysql
                    key: mysql-database
            - name: MYSQL_HOSTNAME
              value: release-name-trillian-mysql
            - name: MYSQL_PORT
              value: "3306"
          ports:            
            - containerPort: 8091
              protocol: TCP
          resources:
            {}
---
# Source: trillian/templates/createdb/createdb-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-trillian-createdb
  namespace: default
  labels:
    app.kubernetes.io/component: "mysql"
    app.kubernetes.io/name: trillian
    app.kubernetes.io/instance: release-name
    helm.sh/chart: trillian-0.2.22
    app.kubernetes.io/managed-by: Helm
spec:
  ttlSecondsAfterFinished: 3600
  template:
    spec:
      serviceAccountName: release-name-trillian-log-server
      restartPolicy: Never
      automountServiceAccountToken: 
      containers:
        - name: release-name-trillian-createdb
          image: "ghcr.io/sigstore/scaffolding/createdb@sha256:ea809b5f603764df5fb7e1f46f7e7be24b6717890c560e7e67fdb0a640a8a755"
          imagePullPolicy: "IfNotPresent"
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: release-name-trillian-mysql
                  key: mysql-user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-trillian-mysql
                  key: mysql-password
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: release-name-trillian-mysql
                  key: mysql-database
            - name: MYSQL_HOSTNAME
              value: release-name-trillian-mysql
            - name: MYSQL_PORT
              value: "3306"
            - name: EXIT_DIR
              value: "/var/exitdir"
          args: [
            "--db_name=$(MYSQL_DATABASE)",
            "--mysql_uri=$(MYSQL_USER):$(MYSQL_PASSWORD)@tcp($(MYSQL_HOSTNAME):$(MYSQL_PORT))/"
          ]
          volumeMounts:
            - name: exit-dir
              mountPath: "/var/exitdir"
      volumes:
        - name: exit-dir
          emptyDir: {}
