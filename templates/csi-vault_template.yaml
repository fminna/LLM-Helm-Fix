---
# Source: csi-vault/charts/csi-vault/templates/controller-plugin.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: release-name-csi-vault-controller
  namespace: default
  labels:
    app: "csi-vault"
    chart: "csi-vault-0.2.0"
    release: "release-name"
    heritage: "Helm"
    component: controller
---
# Source: csi-vault/charts/csi-vault/templates/node-plugin.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-csi-vault-node
  namespace: default
  labels:
    app: "csi-vault"
    chart: "csi-vault-0.2.0"
    release: "release-name"
    heritage: "Helm"
    component: node
---
# Source: csi-vault/charts/csi-vault/templates/apiserver-cert.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-csi-vault-apiserver-cert
  namespace: default
  labels:
    app: "csi-vault"
    chart: "csi-vault-0.2.0"
    release: "release-name"
    heritage: "Helm"
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQwekNDQXJ1Z0F3SUJBZ0lSQVA3YTNLWk9QRVZPMDkvZ2FDVkt3Vkl3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05URTFNRGd6TlRRMFdoY05NelF3TlRFek1EZ3pOVFEwV2pBaApNUjh3SFFZRFZRUURFeFp5Wld4bFlYTmxMVzVoYldVdFkzTnBMWFpoZFd4ME1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXF2MEF3NG81R1FPbWNwa0NaQ0NkRzhMc3M3aEVPTE5hU3NyTXlqSHcKeFRreWNsTU54aEhxR3drM21uS1FYc1I3dnp2aGVBV2RPVVJQMllPTm56aUFITUI3QzlPczNmUTBZSmN6ODRTMApSdzZncUVCNUZOUzg2T3VDUm5ZL05Ha3RoSjJ5WGFkMW9qaVhjdGt0a3FJanRMTkNSdjhaa1N4bE1vN2Y4eWI3CjlhOFZ2ZlJ4MWJYR3NmUW50ZzhRSVFyOU9BdDBNUnRJekR3alAyaW1DZExTQTVNSWFtSWkxOTlmdWQrRkVrZFMKMEIrRXRoWnJQVjZKODR3cWVkLzZkQzNZbUV3VS83YWpxWDdKMmhyWDU5TjJnd21rT29xRFU2RFk1R1RDZ2pwegpPSDF6TCtaQVQvNnNpTkZFN3FkbVZScGNGcGxTQ1NBdkNZbWZvYXhmMUgrdjl3SURBUUFCbzRJQkdEQ0NBUlF3CkRnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU0KQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGRzM2b3JZR0JCRDF5ZnMwSE10WFlGNGdBY3dyTUlHegpCZ05WSFJFRWdhc3dnYWlDS1hKbGJHVmhjMlV0Ym1GdFpTMWpjMmt0ZG1GMWJIUXRZMjl1ZEhKdmJHeGxjaTVrClpXWmhkV3gwZ2kxeVpXeGxZWE5sTFc1aGJXVXRZM05wTFhaaGRXeDBMV052Ym5SeWIyeHNaWEl1WkdWbVlYVnMKZEM1emRtT0NJM0psYkdWaGMyVXRibUZ0WlMxamMya3RkbUYxYkhRdGJtOWtaUzVrWldaaGRXeDBnaWR5Wld4bApZWE5sTFc1aGJXVXRZM05wTFhaaGRXeDBMVzV2WkdVdVpHVm1ZWFZzZEM1emRtTXdEUVlKS29aSWh2Y05BUUVMCkJRQURnZ0VCQUdZZDA2Q0orWi9qTUVGa3M3TUNDTEV4aUxuRzZDOFFrTjZ1anNIMTdBKzZmRHVyYTdwSXkxM0sKK0MwUjU0dmNwbkxqYnZwUjNLVHEwaklvOElTR2N3OGN3eGtmOW1SeDlTRE9HL1NGeWlEVmgvZSt6aSswdEVJTAo1WCtiNmcrcXI0UlNyWENiK3lRcTZtNHFpNE5PTHlQTUliQmVLSzlzbWVFYStUWnlqWnQ5dHRrSWJ2VU4za1pHCkhqZDFLQUU3a1M1VVFkRG43SjNvUGZveXcrYnZrTmw2RnlDU242RWYwbjdGL1JITjRVSnI1by9JNGt4cURSdTUKU1ZSR1JLUlNDbzNFaVpNSVdOdFdqSnVRV0J4L1lpdkg4TXdoSzZKTklpQW5oSjJORmpvaE9nL3VadjRWQ1ZPUQpWbFJPK2xqcHhCTXg4a1BxOE42bGFDd2pwZE11MXdjPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBcXYwQXc0bzVHUU9tY3BrQ1pDQ2RHOExzczdoRU9MTmFTc3JNeWpId3hUa3ljbE1OCnhoSHFHd2szbW5LUVhzUjd2enZoZUFXZE9VUlAyWU9ObnppQUhNQjdDOU9zM2ZRMFlKY3o4NFMwUnc2Z3FFQjUKRk5TODZPdUNSblkvTkdrdGhKMnlYYWQxb2ppWGN0a3RrcUlqdExOQ1J2OFprU3hsTW83Zjh5Yjc5YThWdmZSeAoxYlhHc2ZRbnRnOFFJUXI5T0F0ME1SdEl6RHdqUDJpbUNkTFNBNU1JYW1JaTE5OWZ1ZCtGRWtkUzBCK0V0aFpyClBWNko4NHdxZWQvNmRDM1ltRXdVLzdhanFYN0oyaHJYNTlOMmd3bWtPb3FEVTZEWTVHVENnanB6T0gxekwrWkEKVC82c2lORkU3cWRtVlJwY0ZwbFNDU0F2Q1ltZm9heGYxSCt2OXdJREFRQUJBb0lCQVFDT2doRUo2QURRalU5RApnYTBSZ0hFUXV6UUdVWlJpWVhEbWx3RjVuNGZaQ0dPNER1cVM0MGxuUVJaYm5oSWZPY2tkU0M0Umx6UkRqMkN4Cm04Z0VKTlg1b0o2czY3M091d0tRWWxURktCd01nTzk3YTBpL0NOTnRtU05aMEtHNjc5SWxEajJqZXJjNi9jbVQKeWRnR3R5WGxLK1lZUC9LeUlQc3kyUXRqbjJFdGtHTDVZbkhmdnN6MkkyUHQyRFhFdFpDWndQU29NMExteXJBYwpTOElxb25JdFNVeWVQdiszeDFhRW40ajNrekJiNzZWQXU1QVFZNnI3Z0x1WDhQcjNkVUxydThud2p3UVI2WDIyCnR2Y21IelYzY1I3anE2bmhrcTFCc1hYR0NwVHplVnF1YTZWekROZndzS202MXVwZHI1aFkzRW1yam1GWmlGNHQKUSt5eVFQajVBb0dCQU1kWGFSUVVVSUkzeTRJTXlZbjJCMG5IazNVNDhSTW92VnZmd1F6UWUzbDhXNno4dlQzSwoxdEUxM3c0c09VN0RzWEE2bGN2NUp0ck5Xbk5hSis5bmR2eWczQmRFeDZKUmVHTmFISnJnTHhOaUVxWHFwTlpGCmxGVFFWcGlza0lFR29ocURJejlGQzFzeDdsVmtRSnVkclVHUHpGdG5GbG50WGFxcEdrdDBvNjdUQW9HQkFOdVcKaTRuV3lIMURaREZ3eERBVW11Z0ltS2xOZE5laWFPa1RxYS9MUWlxM0x3L1hUbHRuY25EQkhqUlNVTHp1Q1NxdQpwcHJ5QjhKczVZUWxpcjdKdXBmSEdCT3VoeHE1TXdqeDZJZVMyOEU3bWlHbTRLL0ZxdGorS09QcCtaYnhFYlZWCnM3MVk4cEF0bG43NzEvRE52Rms5TXo4ZTBoWnRJUHlEaWlubnErdk5Bb0dCQUxFOW9EbHhRcEExeWVYdE5ybEwKSHZuVDBPRzJhbXRObXVoNGo2NjBKRVZGZEVIZ1N1Y0pWbTJZUjZiVFhYVVIvTSs3MTNzUUlpTUQyYnVjMnNzNwpwSWxGQWN4U3BHcEhwQkk2aWhxTzRHeU1rK1lnTnNZcUFaUlQxZHRUKy93dENLOG9FSXZ0K1FYeDVHYmFoN09WCncvbjZRSXE0b3gvOE5IOU1jZ3ZMUHNwdkFvR0JBSy9Tay9vVFUwY1JQZGxrZklJdkRYVzY1Rm16WGxvR2ZkQWEKWVdVVDcrLzU2eUhZK0xHeFcrMnlnN2ZMTFVDSnJDZFQzcXowSElodDN6eDNQdWZTNktmOHoyZDYrRXpLZTNXdgpGTXZ4S0NwSnlma21BSVJkVnBZV3M3RUNPRW5HenJJT1pETzVVOGRqNlR2VjlTcW40U2JuSFBCdWdqTll2Ky9RCmQwRmtjY0VGQW9HQkFKTzIrbkVGRTBqY1RmeTVGK0QxMXlHTit3MDVZdTZkTHBsVys4MFU0VUNwcitEZlNsc2UKV254ekZqRE1KUVEwWjF2MlZ5R2pjK0RvUk1qUFA4NWQxTFhSY1F6NU11NVBoWlBQVi9SNkMxQ3ZSckowTWkrOQp0ajl5M1UycjU1V0RGcVhCQmo0TG5oM2xHTkN0bGRyWFZXWWdnZ1FZMzUxa0w1bzdISXR1NHQ2eAotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: csi-vault/charts/csi-vault/templates/appbinding-crd.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
    creationTimestamp: null
    labels:
      app: "csi-vault"
      chart: "csi-vault-0.2.0"
      release: "release-name"
      heritage: "Helm"
      app: catalog
    name: appbindings.appcatalog.appscode.com
spec:
    additionalPrinterColumns:
        - JSONPath: .metadata.creationTimestamp
          name: Age
          type: date
    group: appcatalog.appscode.com
    names:
        categories:
            - catalog
            - appscode
            - all
        kind: AppBinding
        plural: appbindings
        singular: appbinding
    scope: Namespaced
    validation:
        openAPIV3Schema:
            properties:
                apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                    type: string
                kind:
                    description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                    type: string
                metadata:
                    description: ObjectMeta is metadata that all persisted resources must have,
                        which includes all objects users must create.
                    properties:
                        annotations:
                            description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                            type: object
                        clusterName:
                            description: The name of the cluster which the object belongs to. This
                                is used to distinguish resources with same name and namespace in different
                                clusters. This field is not set anywhere right now and apiserver is
                                going to ignore it if set in create or update request.
                            type: string
                        creationTimestamp:
                            description: Time is a wrapper around time.Time which supports correct
                                marshaling to YAML and JSON.  Wrappers are provided for many of the
                                factory methods that the time package offers.
                            format: date-time
                            type: string
                        deletionGracePeriodSeconds:
                            description: Number of seconds allowed for this object to gracefully
                                terminate before it will be removed from the system. Only set when
                                deletionTimestamp is also set. May only be shortened. Read-only.
                            format: int64
                            type: integer
                        deletionTimestamp:
                            description: Time is a wrapper around time.Time which supports correct
                                marshaling to YAML and JSON.  Wrappers are provided for many of the
                                factory methods that the time package offers.
                            format: date-time
                            type: string
                        finalizers:
                            description: Must be empty before the object is deleted from the registry.
                                Each entry is an identifier for the responsible component that will
                                remove the entry from the list. If the deletionTimestamp of the object
                                is non-nil, entries in this list can only be removed.
                            items:
                                type: string
                            type: array
                        generateName:
                            description: |-
                                GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.

                                If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).

                                Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
                            type: string
                        generation:
                            description: A sequence number representing a specific generation of
                                the desired state. Populated by the system. Read-only.
                            format: int64
                            type: integer
                        initializers:
                            description: Initializers tracks the progress of initialization.
                            properties:
                                pending:
                                    description: Pending is a list of initializers that must execute
                                        in order before this object is visible. When the last pending
                                        initializer is removed, and no failing result is set, the initializers
                                        struct will be set to nil and the object is considered as initialized
                                        and visible to all clients.
                                    items:
                                        description: Initializer is information about an initializer that
                                            has not yet completed.
                                        properties:
                                            name:
                                                description: name of the process that is responsible for initializing
                                                    this object.
                                                type: string
                                        required:
                                            - name
                                    type: array
                                result:
                                    description: Status is a return value for calls that don't return
                                        other objects.
                                    properties:
                                        apiVersion:
                                            description: 'APIVersion defines the versioned schema of this
                        representation of an object. Servers should convert recognized
                        schemas to the latest internal value, and may reject unrecognized
                        values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                                            type: string
                                        code:
                                            description: Suggested HTTP return code for this status, 0 if
                                                not set.
                                            format: int32
                                            type: integer
                                        details:
                                            description: StatusDetails is a set of additional properties
                                                that MAY be set by the server to provide additional information
                                                about a response. The Reason field of a Status object defines
                                                what attributes will be set. Clients must ignore fields that
                                                do not match the defined type of each attribute, and should
                                                assume that any attribute may be empty, invalid, or under
                                                defined.
                                            properties:
                                                causes:
                                                    description: The Causes array includes more details associated
                                                        with the StatusReason failure. Not all StatusReasons may
                                                        provide detailed causes.
                                                    items:
                                                        description: StatusCause provides more information about
                                                            an api.Status failure, including cases when multiple
                                                            errors are encountered.
                                                        properties:
                                                            field:
                                                                description: |-
                                                                    The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.

                                                                    Examples:
                                                                      "name" - the field "name" on the current resource
                                                                      "items[0].name" - the field "name" on the first array entry in "items"
                                                                type: string
                                                            message:
                                                                description: A human-readable description of the cause
                                                                    of the error.  This field may be presented as-is
                                                                    to a reader.
                                                                type: string
                                                            reason:
                                                                description: A machine-readable description of the
                                                                    cause of the error. If this value is empty there
                                                                    is no information available.
                                                                type: string
                                                    type: array
                                                group:
                                                    description: The group attribute of the resource associated
                                                        with the status StatusReason.
                                                    type: string
                                                kind:
                                                    description: 'The kind attribute of the resource associated
                            with the status StatusReason. On some operations may differ
                            from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                                    type: string
                                                name:
                                                    description: The name attribute of the resource associated
                                                        with the status StatusReason (when there is a single name
                                                        which can be described).
                                                    type: string
                                                retryAfterSeconds:
                                                    description: If specified, the time in seconds before the
                                                        operation should be retried. Some errors may indicate
                                                        the client must take an alternate action - for those errors
                                                        this field may indicate how long to wait before taking
                                                        the alternate action.
                                                    format: int32
                                                    type: integer
                                                uid:
                                                    description: 'UID of the resource. (when there is a single
                            resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                                                    type: string
                                        kind:
                                            description: 'Kind is a string value representing the REST resource
                        this object represents. Servers may infer this from the endpoint
                        the client submits requests to. Cannot be updated. In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                            type: string
                                        message:
                                            description: A human-readable description of the status of this
                                                operation.
                                            type: string
                                        metadata:
                                            description: ListMeta describes metadata that synthetic resources
                                                must have, including lists and various status objects. A resource
                                                may have only one of {ObjectMeta, ListMeta}.
                                            properties:
                                                continue:
                                                    description: continue may be set if the user set a limit
                                                        on the number of items returned, and indicates that the
                                                        server has more data available. The value is opaque and
                                                        may be used to issue another request to the endpoint that
                                                        served this list to retrieve the next set of available
                                                        objects. Continuing a consistent list may not be possible
                                                        if the server configuration has changed or more than a
                                                        few minutes have passed. The resourceVersion field returned
                                                        when using this continue value will be identical to the
                                                        value in the first response, unless you have received
                                                        this token from an error message.
                                                    type: string
                                                resourceVersion:
                                                    description: 'String that identifies the server''s internal
                            version of this object that can be used by clients to
                            determine when objects have changed. Value must be treated
                            as opaque by clients and passed unmodified back to the
                            server. Populated by the system. Read-only. More info:
                            https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                                                    type: string
                                                selfLink:
                                                    description: selfLink is a URL representing this object.
                                                        Populated by the system. Read-only.
                                                    type: string
                                        reason:
                                            description: A machine-readable description of why this operation
                                                is in the "Failure" status. If this value is empty there is
                                                no information available. A Reason clarifies an HTTP status
                                                code but does not override it.
                                            type: string
                                        status:
                                            description: 'Status of the operation. One of: "Success" or
                        "Failure". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
                                            type: string
                            required:
                                - pending
                        labels:
                            description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
                            type: object
                        name:
                            description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                            type: string
                        namespace:
                            description: |-
                                Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

                                Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
                            type: string
                        ownerReferences:
                            description: List of objects depended by this object. If ALL objects
                                in the list have been deleted, this object will be garbage collected.
                                If this object is managed by a controller, then an entry in this list
                                will point to this controller, with the controller field set to true.
                                There cannot be more than one managing controller.
                            items:
                                description: OwnerReference contains enough information to let you
                                    identify an owning object. Currently, an owning object must be in
                                    the same namespace, so there is no namespace field.
                                properties:
                                    apiVersion:
                                        description: API version of the referent.
                                        type: string
                                    blockOwnerDeletion:
                                        description: If true, AND if the owner has the "foregroundDeletion"
                                            finalizer, then the owner cannot be deleted from the key-value
                                            store until this reference is removed. Defaults to false. To
                                            set this field, a user needs "delete" permission of the owner,
                                            otherwise 422 (Unprocessable Entity) will be returned.
                                        type: boolean
                                    controller:
                                        description: If true, this reference points to the managing controller.
                                        type: boolean
                                    kind:
                                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                        type: string
                                    name:
                                        description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                        type: string
                                    uid:
                                        description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                                        type: string
                                required:
                                    - apiVersion
                                    - kind
                                    - name
                                    - uid
                            type: array
                        resourceVersion:
                            description: |-
                                An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.

                                Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
                            type: string
                        selfLink:
                            description: SelfLink is a URL representing this object. Populated by
                                the system. Read-only.
                            type: string
                        uid:
                            description: |-
                                UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

                                Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
                            type: string
                spec:
                    description: AppBindingSpec is the spec for app
                    properties:
                        clientConfig:
                            description: ClientConfig contains the information to make a connection
                                with an app
                            properties:
                                caBundle:
                                    description: CABundle is a PEM encoded CA bundle which will be used
                                        to validate the serving certificate of this app.
                                    format: byte
                                    type: string
                                insecureSkipTLSVerify:
                                    description: InsecureSkipTLSVerify disables TLS certificate verification
                                        when communicating with this app. This is strongly discouraged.  You
                                        should use the CABundle instead.
                                    type: boolean
                                service:
                                    description: ServiceReference holds a reference to Service.legacy.k8s.io
                                    properties:
                                        name:
                                            description: '`name` is the name of the service. Required'
                                            type: string
                                        path:
                                            description: '`path` is an optional URL path which will be sent
                        in any request to this service.'
                                            type: string
                                        port:
                                            description: The port that will be exposed by this app.
                                            format: int32
                                            type: integer
                                        scheme:
                                            description: 'Specifies which scheme to use, for example: http,
                        https If specified, then it will applied as prefix in this
                        format: scheme:// If not specified, then nothing will be prefixed'
                                            type: string
                                    required:
                                        - scheme
                                        - name
                                        - port
                                url:
                                    description: |-
                                        `url` gives the location of the app, in standard URL form (`[scheme://]host:port/path`). Exactly one of `url` or `service` must be specified.

                                        The `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.

                                        A path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the app, for example, a cluster identifier.

                                        Attempting to use a user or basic auth e.g. "user:password@" is not allowed. Fragments ("#...") and query parameters ("?...") are not allowed, either.
                                    type: string
                        parameters:
                            description: "RawExtension is used to hold extensions in external versions.\n\nTo
                use this, make a field which has RawExtension as its type in your
                external, versioned struct, and Object in your internal struct. You
                also need to register your various plugin types.\n\n// Internal package:
                type MyAPIObject struct {\n\truntime.TypeMeta `json:\",inline\"`\n\tMyPlugin
                runtime.Object `json:\"myPlugin\"`\n} type PluginA struct {\n\tAOption
                string `json:\"aOption\"`\n}\n\n// External package: type MyAPIObject
                struct {\n\truntime.TypeMeta `json:\",inline\"`\n\tMyPlugin runtime.RawExtension
                `json:\"myPlugin\"`\n} type PluginA struct {\n\tAOption string `json:\"aOption\"`\n}\n\n//
                On the wire, the JSON will look something like this: {\n\t\"kind\":\"MyAPIObject\",\n\t\"apiVersion\":\"v1\",\n\t\"myPlugin\":
                {\n\t\t\"kind\":\"PluginA\",\n\t\t\"aOption\":\"foo\",\n\t},\n}\n\nSo
                what happens? Decode first uses json or yaml to unmarshal the serialized
                data into your external MyAPIObject. That causes the raw JSON to be
                stored, but not unpacked. The next step is to copy (using pkg/conversion)
                into the internal struct. The runtime package's DefaultScheme has
                conversion functions installed which will unpack the JSON stored in
                RawExtension, turning it into the correct object type, and storing
                it in the Object. (TODO: In the case where the object is of an unknown
                type, a runtime.Unknown object will be created and stored.)"
                            type: object
                        secret:
                            description: LocalObjectReference contains enough information to let
                                you locate the referenced object inside the same namespace.
                            properties:
                                name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                        type:
                            description: Used to facilitate programmatic handling of application.
                            type: string
                    required:
                        - clientConfig
    version: v1alpha1
    versions:
        - name: v1alpha1
          served: true
          storage: true
---
# Source: csi-vault/charts/csi-vault/templates/driver-crds.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: csidrivers.csi.storage.k8s.io
  labels:
    app: "csi-vault"
    chart: "csi-vault-0.2.0"
    release: "release-name"
    heritage: "Helm"
spec:
  group: csi.storage.k8s.io
  names:
    kind: CSIDriver
    plural: csidrivers
  scope: Cluster
  version: v1alpha1
---
# Source: csi-vault/charts/csi-vault/templates/driver-crds.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: csinodeinfos.csi.storage.k8s.io
  labels:
    app: "csi-vault"
    chart: "csi-vault-0.2.0"
    release: "release-name"
    heritage: "Helm"
spec:
  group: csi.storage.k8s.io
  names:
    kind: CSINodeInfo
    plural: csinodeinfos
  scope: Cluster
  version: v1alpha1
---
# Source: csi-vault/charts/csi-vault/templates/controller-plugin.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-csi-vault-controller
  namespace: default
  labels:
    app: "csi-vault"
    chart: "csi-vault-0.2.0"
    release: "release-name"
    heritage: "Helm"
    component: controller
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["persistentvolumes"]
  verbs: ["get", "list", "watch", "create", "delete"]
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["get", "list", "watch", "update"]
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["list", "watch", "create", "update", "patch"]
- apiGroups: ["snapshot.storage.k8s.io"]
  resources: ["volumesnapshots"]
  verbs: ["get", "list"]
- apiGroups: ["snapshot.storage.k8s.io"]
  resources: ["volumesnapshotcontents"]
  verbs: ["get", "list"]
- apiGroups: ["csi.storage.k8s.io"]
  resources: ["csidrivers", "csinodeinfos"]
  verbs: ["get", "watch", "list", "update", "patch", "create"]
- apiGroups: ["authorization.k8s.io"]
  resources: ["subjectaccessreviews"]
  verbs: ["get", "create"]
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["get", "create"]
---
# Source: csi-vault/charts/csi-vault/templates/controller-plugin.yaml
# Attacher must be able to work with PVs, nodes and VolumeAttachments
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-csi-vault-attacher
  labels:
    app: "csi-vault"
    chart: "csi-vault-0.2.0"
    release: "release-name"
    heritage: "Helm"
    component: controller
rules:
- apiGroups: [""]
  resources: ["persistentvolumes"]
  verbs: ["get", "list", "watch", "update"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["csi.storage.k8s.io"]
  resources: ["csidrivers", "csinodeinfos"]
  verbs: ["get", "watch", "list", "update", "patch", "create"]
- apiGroups: ["storage.k8s.io"]
  resources: ["volumeattachments"]
  verbs: ["get", "list", "watch", "update"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["create", "list", "watch", "delete"]
- apiGroups: ["appcatalog.appscode.com"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list"]
---
# Source: csi-vault/charts/csi-vault/templates/node-plugin.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-csi-vault-node
  namespace: default
  labels:
    app: "csi-vault"
    chart: "csi-vault-0.2.0"
    release: "release-name"
    heritage: "Helm"
    component: node
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
---
# Source: csi-vault/charts/csi-vault/templates/node-plugin.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-csi-vault-node-registrar
  namespace: default
  labels:
    app: "csi-vault"
    chart: "csi-vault-0.2.0"
    release: "release-name"
    heritage: "Helm"
    component: node
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "update"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["persistentvolumes"]
  verbs: ["get", "list", "watch", "update"]
- apiGroups: ["storage.k8s.io"]
  resources: ["volumeattachments"]
  verbs: ["get", "list", "watch", "update", "create"]
- apiGroups: ["csi.storage.k8s.io"]
  resources: ["csidrivers", "csinodeinfos"]
  verbs: ["get", "watch", "list", "update", "patch", "create"]
- apiGroups: [""]
  resources: ["serviceaccounts"]
  verbs: ["get", "list"]
- apiGroups: ["appcatalog.appscode.com"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["authorization.k8s.io"]
  resources: ["subjectaccessreviews"]
  verbs: ["get", "create"]
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["get", "create"]
---
# Source: csi-vault/charts/csi-vault/templates/controller-plugin.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-csi-vault-controller
  labels:
    app: "csi-vault"
    chart: "csi-vault-0.2.0"
    release: "release-name"
    heritage: "Helm"
    component: controller
subjects:
- kind: ServiceAccount
  name: release-name-csi-vault-controller
  namespace: default
roleRef:
    kind: ClusterRole
    name: release-name-csi-vault-controller
    apiGroup: rbac.authorization.k8s.io
---
# Source: csi-vault/charts/csi-vault/templates/controller-plugin.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-csi-vault-attacher
  labels:
    app: "csi-vault"
    chart: "csi-vault-0.2.0"
    release: "release-name"
    heritage: "Helm"
    component: controller
subjects:
- kind: ServiceAccount
  name: release-name-csi-vault-controller
  namespace: default
roleRef:
    kind: ClusterRole
    name: release-name-csi-vault-attacher
    apiGroup: rbac.authorization.k8s.io
---
# Source: csi-vault/charts/csi-vault/templates/node-plugin.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-csi-vault-node
  labels:
    app: "csi-vault"
    chart: "csi-vault-0.2.0"
    release: "release-name"
    heritage: "Helm"
    component: node
subjects:
- kind: ServiceAccount
  name: release-name-csi-vault-node
  namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-csi-vault-node
  apiGroup: rbac.authorization.k8s.io
---
# Source: csi-vault/charts/csi-vault/templates/node-plugin.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-csi-vault-node-registrar
  labels:
    app: "csi-vault"
    chart: "csi-vault-0.2.0"
    release: "release-name"
    heritage: "Helm"
    component: node
subjects:
- kind: ServiceAccount
  name: release-name-csi-vault-node
  namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-csi-vault-node-registrar
  apiGroup: rbac.authorization.k8s.io
---
# Source: csi-vault/charts/csi-vault/templates/controller-plugin.yaml
# needed for StatefulSet
kind: Service
apiVersion: v1
metadata:
  name: release-name-csi-vault-controller
  namespace: default
  labels:
    app: "csi-vault"
    chart: "csi-vault-0.2.0"
    release: "release-name"
    heritage: "Helm"
    component: controller
spec:
  selector:
    app: csi-vault
    component: controller
    release: "release-name"
  ports:
  - name: api
    port: 443
    targetPort: 8443
---
# Source: csi-vault/charts/csi-vault/templates/node-plugin.yaml
# needed for StatefulSet
kind: Service
apiVersion: v1
metadata:
  name: release-name-csi-vault-node
  namespace: default
  labels:
    app: "csi-vault"
    chart: "csi-vault-0.2.0"
    release: "release-name"
    heritage: "Helm"
    component: node
spec:
  selector:
    app: csi-vault
    component: node
  ports:
  - name: api
    port: 443
    targetPort: 8443
---
# Source: csi-vault/charts/csi-vault/templates/node-plugin.yaml
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: release-name-csi-vault-node
  namespace: default
  labels:
    app: "csi-vault"
    chart: "csi-vault-0.2.0"
    release: "release-name"
    heritage: "Helm"
    component: node
spec:
  selector:
    matchLabels:
      app: csi-vault
      component: node
      release: "release-name"
  template:
    metadata:
      labels:
        app: "csi-vault"
        chart: "csi-vault-0.2.0"
        release: "release-name"
        heritage: "Helm"
        component: node
    spec:
      priorityClassName: system-node-critical
      serviceAccount: release-name-csi-vault-node
      containers:
      - name: node-driver-registrar
        image: quay.io/k8scsi/csi-node-driver-registrar:v1.1.0
        args:
        - --v=3
        - "--csi-address=$(ADDRESS)"
        - "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        - name: DRIVER_REG_SOCK_PATH
          value: /var/lib/kubelet/plugins/secrets.csi.kubevault.com/csi.sock
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        imagePullPolicy: IfNotPresent
        resources:
              
          {}
        volumeMounts:
        - name: plugin-dir
          mountPath: /csi/
        - name: registration-dir
          mountPath: /registration/
      - name: csi-vault-plugin
        image: kubevault/csi-vault:0.2.0
        args :
        - run
        - "--endpoint=$(CSI_ENDPOINT)"
        - "--node=$(NODE_NAME)"
        - "--v=3"
        - --secure-port=8443
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --use-kubeapiserver-fqdn-for-aks=true
        - --enable-analytics=true
        ports:
        - containerPort: 8443
        env:
        - name: CSI_ENDPOINT
          value: unix:///csi/csi.sock
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        imagePullPolicy: Always
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 5
        resources:
                        {}
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
          allowPrivilegeEscalation: true
        volumeMounts:
        - name: plugin-dir
          mountPath: /csi
        - name: pods-mount-dir
          mountPath: /var/lib/kubelet
                  # needed so that any mounts setup inside this container are
          # propagated back to the host machine.
          mountPropagation: "Bidirectional"
        - name: device-dir
          mountPath: /dev
        - mountPath: /var/serving-cert
          name: serving-cert
      volumes:
      - name: registration-dir
        hostPath:
          path: /var/lib/kubelet/plugins_registry/
          type: DirectoryOrCreate
      - name: plugin-dir
        hostPath:
          path: /var/lib/kubelet/plugins/secrets.csi.kubevault.com
          type: DirectoryOrCreate
      - name: pods-mount-dir
        hostPath:
          path: /var/lib/kubelet
          type: Directory
      - name: device-dir
        hostPath:
          path: /dev
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: release-name-csi-vault-apiserver-cert
---
# Source: csi-vault/charts/csi-vault/templates/controller-plugin.yaml
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: release-name-csi-vault-controller
  namespace: default
  labels:
    app: "csi-vault"
    chart: "csi-vault-0.2.0"
    release: "release-name"
    heritage: "Helm"
    component: controller
spec:
  serviceName: release-name-csi-vault-controller
  replicas: 1
  selector:
    matchLabels:
      app: csi-vault
      component: controller
      release: "release-name"
  template:
    metadata:
      labels:
        app: "csi-vault"
        chart: "csi-vault-0.2.0"
        release: "release-name"
        heritage: "Helm"
        component: controller
    spec:
      serviceAccount: release-name-csi-vault-controller
      containers:
      - name: csi-provisioner
        image: quay.io/k8scsi/csi-provisioner:v1.3.0
        args:
        - --provisioner=secrets.csi.kubevault.com
        - "--csi-address=$(ADDRESS)"
        - --v=3
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        imagePullPolicy: IfNotPresent
        resources:
                        {}
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/csi/sockets/pluginproxy/
      - name: csi-attacher
        image: quay.io/k8scsi/csi-attacher:v1.2.0
        args:
        - --v=3
        - "--csi-address=$(ADDRESS)"
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        imagePullPolicy: IfNotPresent
        resources:
                        {}
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/csi/sockets/pluginproxy/
      - name: csi-cluster-registry
        image: quay.io/k8scsi/csi-cluster-driver-registrar:v1.0.1
        args:
        - --v=3
        - "--pod-info-mount-version=v1"
        - "--csi-address=$(ADDRESS)"
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        imagePullPolicy: IfNotPresent
        resources:
                        {}
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - name: csi-vault-plugin
        image: kubevault/csi-vault:0.2.0
        args :
        - run
        - "--endpoint=$(CSI_ENDPOINT)"
        - "--node=$(NODE_NAME)"
        - "--v=3"
        - --secure-port=8443
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --use-kubeapiserver-fqdn-for-aks=true
        - --enable-analytics=true
        ports:
        - containerPort: 8443
        env:
        - name: CSI_ENDPOINT
          value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        imagePullPolicy: Always
        readinessProbe:
          httpGet:
            port: 8443
            path: /healthz
            scheme: HTTPS
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            port: 8443
            path: /healthz
            scheme: HTTPS
          initialDelaySeconds: 5
        resources:
                        {}
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: serving-cert
          mountPath: /var/serving-cert
      volumes:
      - name: socket-dir
        emptyDir: {}
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: release-name-csi-vault-apiserver-cert
---
# Source: csi-vault/charts/csi-vault/templates/appcatalog-user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:appcatalog:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: csi-vault/charts/csi-vault/templates/appcatalog-user-roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: appscode:appcatalog:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
