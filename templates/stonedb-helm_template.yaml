---
# Source: stonedb-helm/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-stonedb-cm
  namespace: "default"
data:
  my.cnf: |
    [mysqld]
    port                            = 3306
    basedir                         = /opt/stonedb57/install/
    character-sets-dir              = /opt/stonedb57/install/share/charsets/
    lc-messages-dir                 = /opt/stonedb57/install/share/
    plugin_dir                      = /opt/stonedb57/install/lib/plugin/
    tmpdir                          = /opt/stonedb57/install/tmp/
    socket                          = /tmp/mysql.sock
    datadir                         = /opt/stonedb57/install/data/
    pid-file                        = /opt/stonedb57/install/data/mysqld.pid
    log-error                       = /opt/stonedb57/install/log/mysqld.log
    lc-messages-dir                 = /opt/stonedb57/install/share/english/


    server-id = 1
    secure-file-priv=""
    default_storage_engine=innodb
    character-set-server = utf8mb4
    collation-server = utf8mb4_general_ci
    init_connect='SET NAMES utf8mb4'
    max_connections=1000
    tmp_table_size = 1024M

    slow-query-log = 1
    slow_query_log_file=/opt/stonedb57/install/log/slow.log

    #binlog config
    long_query_time=5
    max_binlog_size=1024M
    sync_binlog=1
    log-bin=/opt/stonedb57/install/binlog/binlog
    expire_logs_days=1
    binlog_format=row
    binlog_cache_size = 524288

    wait_timeout=3600
    interactive_timeout=3600
    connect_timeout=360
    net_read_timeout=360
    net_write_timeout=360
    lock_wait_timeout=120
    slave-net-timeout=120


    loose-key_buffer_size = 512M
    max_allowed_packet = 512M
    loose-sort_buffer_size = 4M
    loose-read_buffer_size = 4M
    loose-read_rnd_buffer_size = 16M
    loose-thread_cache_size = 8
    loose-query_cache_size = 0

    thread_stack = 512K
    lower_case_table_names=2

    group_concat_max_len=512

    open_files_limit = 65535

    # Uncomment the following if you are using innodb tables
    loose-innodb_data_home_dir = /opt/stonedb57/install/data/
    loose-innodb_data_file_path = ibdata1:2000M;ibdata2:10M:autoextend
    loose-innodb_buffer_pool_size=    1024M
    loose-innodb_lru_scan_depth=      100
    loose-innodb_write_io_threads=    2
    loose-innodb_read_io_threads=     2
    loose-innodb_log_buffer_size=     1M
    loose-innodb_log_file_size=       1024M
    loose-innodb_log_files_in_group=  2
    loose-innodb_log_group_home_dir = /opt/stonedb57/install/redolog/
    loose-innodb-stats-persistent=    OFF
    loose-innodb_lock_wait_timeout = 50
    loose-innodb_flush_method = O_DIRECT
    loose-innodb_io_capacity = 500
    loose-innodb_buffer_pool_dump_pct = 40
    loose-innodb_print_all_deadlocks = 1
    loose-innodb_undo_directory = /opt/stonedb57/install/undolog/
    loose-innodb_undo_log_truncate = 1
    loose-innodb_undo_tablespaces = 3
    loose-innodb_undo_logs = 128

    # here, at the end of [mysqld] group mtr will automatically disable
    # all optional plugins.

    plugin-load=AUDIT=libaudit_plugin.so
    audit_json_file=ON #Audit ON/OFF
    audit_record_cmds= "insert,update,delete,truncate,create_table,drop_table,alter_table,create_index,drop_index,create_db,drop_db,create_user,drop_user,alter_user,grant,revoke,shutdown,connect,create_view,drop_view,alter_view,create_procedure,create_function,drop_function,drop_procedure,call_procedure,call_function"
    audit_json_log_output="table"

    [connection]
    default-character-set=utf8mb4
---
# Source: stonedb-helm/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-stonedb-pvc
  namespace: "default"
spec:
  accessModes: [ReadWriteOnce]
  resources:
    requests:
      storage: 100Gi
  storageClassName: local-path
---
# Source: stonedb-helm/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-stonedb-svc
  namespace: "default"
  labels:
    helm.sh/chart: stonedb-helm-0.1.0
    app.kubernetes.io/name: stonedb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "5.7_1.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3306
      targetPort: mysql
      protocol: TCP
      name: mysql
  selector:
    app.kubernetes.io/name: stonedb
    app.kubernetes.io/instance: release-name
---
# Source: stonedb-helm/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-stonedb-sts
  namespace: "default"
  labels:
    helm.sh/chart: stonedb-helm-0.1.0
    app.kubernetes.io/name: stonedb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "5.7_1.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: stonedb
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: stonedb
        app.kubernetes.io/instance: release-name
    spec:
      securityContext:
        {}
      containers:
        - name: stonedb
          securityContext:
            {}
          image: "stoneatom/stonedb:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: Aa123456
          ports:
            - name: mysql
              containerPort: 3306
              protocol: TCP
          volumeMounts:
            - mountPath: /opt/stonedb57/install/data
              name: data
            - mountPath: /opt/stonedb57/install/my.cnf
              name: config
              subPath: my.cnf
          livenessProbe:
            tcpSocket:
              port: mysql
            initialDelaySeconds: 100
            periodSeconds: 20
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: mysql
            initialDelaySeconds: 100
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          resources:
            {}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: release-name-stonedb-pvc
        - name: config
          configMap:
            name: release-name-stonedb-cm
---
# Source: stonedb-helm/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-stonedb-test-connection"
  labels:
    helm.sh/chart: stonedb-helm-0.1.0
    app.kubernetes.io/name: stonedb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "5.7_1.0.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-stonedb:3306']
  restartPolicy: Never
