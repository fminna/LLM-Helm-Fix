---
# Source: flask-app/templates/postgres-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app: postgres
data:
  POSTGRES_DB: "app_db"
  POSTGRES_USER: "student"
  POSTGRES_PASSWORD: "student123"
---
# Source: flask-app/templates/postgres-pv.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv
spec:
  storageClassName: ""
  capacity:
    storage: 5Gi
  accessModes:
  - ReadWriteOnce
  hostPath:
    path: "/postgres-db"
---
# Source: flask-app/templates/postgres-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# Source: flask-app/templates/flask-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  labels:
    app: flask
spec:
  ports:
  - protocol: "TCP"
    port: 80
    targetPort: 5000
  selector:
    app: flask
  type: LoadBalancer
  externalIPs:
    - 192.168.1.100
---
# Source: flask-app/templates/postgres-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  ports:
    - port: 5432
  selector:
    app: postgres
---
# Source: flask-app/templates/flask-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask
  labels:
    app: flask
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: flask
  template:
    metadata:
      labels:
        app: flask
    spec: 
      initContainers:
      - name: svc-check
        image: radial/busyboxplus:curl
        command: ['sh', '-c', 'until nslookup postgres; do echo waiting for postgres to start; sleep 2; done']
      - name: prepare
        image: radial/busyboxplus:curl
        command: ['sh', '-c', 'nslookup postgres | tail -n1 | cut -d " " -f 3 > /output/postgres-ip']
        volumeMounts:
        - name: sharedvol
          mountPath: /output
      containers:
      - name: flask
        image: marcinkujawski/flask-app:2.0.1
        volumeMounts:
        - name: sharedvol
          mountPath: /input
      volumes:
      - name: sharedvol
        emptyDir: {}
---
# Source: flask-app/templates/postgres-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      nodeName: worker01
      containers:
      - name: postgres
        image: postgres:9.6.2
        env:
        - name: "POSTGRES_DB"
          valueFrom:
            configMapKeyRef:
              key: "POSTGRES_DB"
              name: "postgres-config"
        - name: "POSTGRES_USER"
          valueFrom:
            configMapKeyRef:
              key: "POSTGRES_USER"
              name: "postgres-config"
        - name: "POSTGRES_PASSWORD"
          valueFrom:
            configMapKeyRef:
              key: "POSTGRES_PASSWORD"
              name: "postgres-config"
        ports:
          - containerPort: 5432
            name: postgres
        volumeMounts:
          - name: postgres-storage
            mountPath: /var/lib/postgresql/db-data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim
