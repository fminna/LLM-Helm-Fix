---
# Source: dagster-cloud-agent/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-dagster-cloud-agent
  labels: 
    helm.sh/chart: dagster-cloud-agent-1.7.5
    app.kubernetes.io/name: dagster-cloud-agent
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.7.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
---
# Source: dagster-cloud-agent/templates/configmap-agent.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-dagster-cloud-agent-agent-env
  labels:
    app: dagster-cloud-agent
    chart: dagster-cloud-agent-1.7.5
    release: release-name
    heritage: Helm
data:
  DAGSTER_HOME: /opt/dagster/dagster_home
---
# Source: dagster-cloud-agent/templates/configmap-instance.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-dagster-cloud-agent-instance
  labels:
    app: dagster-cloud-agent
    chart: dagster-cloud-agent-1.7.5
    release: release-name
    heritage: Helm
data:
  dagster.yaml: |
    instance_class:
      module: dagster_cloud.instance
      class: DagsterCloudAgentInstance

    dagster_cloud_api:
      agent_token:
        env: DAGSTER_CLOUD_AGENT_TOKEN
    user_code_launcher:
      module: dagster_cloud.workspace.kubernetes
      class: K8sUserCodeLauncher
      config:
        dagster_home: /opt/dagster/dagster_home
        instance_config_map: release-name-dagster-cloud-agent-instance
        service_account_name: release-name-dagster-cloud-agent
        namespace: default
        pull_policy: Always
        env_secrets:
          - "dagster-cloud-agent-token"
---
# Source: dagster-cloud-agent/templates/configmap-logging.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-dagster-cloud-agent-logging
  labels:
    app: dagster-cloud-agent
    chart: dagster-cloud-agent-1.7.5
    release: release-name
    heritage: Helm
data:
  logging.yaml: |
      {}
---
# Source: dagster-cloud-agent/templates/role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-dagster-cloud-agent-role
  labels:
    app: dagster-cloud-agent
    chart: dagster-cloud-agent-1.7.5
    release: "release-name"
    heritage: "Helm"

# Allow the Dagster service account to read and write Kubernetes jobs, deployments, pods, and events.
rules:
  - apiGroups: ["batch"]
    resources: ["jobs", "jobs/status"]
    verbs: ["*"]
  - apiGroups: ["apps"]
    resources: ["deployments", "deployments/status", "deployments/revision"]
    verbs: ["*"]
  # The empty arg "" corresponds to the core API group
  - apiGroups: [""]
    resources: ["pods", "pods/log", "pods/status", "services", "events"]
    verbs: ["*"]
---
# Source: dagster-cloud-agent/templates/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-dagster-cloud-agent-rolebinding
  labels:
    app: dagster-cloud-agent
    chart: dagster-cloud-agent-1.7.5
    release: "release-name"
    heritage: "Helm"
subjects:
  - kind: ServiceAccount
    name: release-name-dagster-cloud-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-dagster-cloud-agent-role
---
# Source: dagster-cloud-agent/templates/deployment-agent.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-dagster-cloud-agent-agent
  labels:
    helm.sh/chart: dagster-cloud-agent-1.7.5
    app.kubernetes.io/name: dagster-cloud-agent
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.7.5"
    app.kubernetes.io/managed-by: Helm
    component: agent
    deployment: agent
  annotations:
spec:
  replicas: 1
  strategy:
            null
  selector:
    matchLabels:
      app.kubernetes.io/name: dagster-cloud-agent
      app.kubernetes.io/instance: release-name
      component: agent
      deployment: agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dagster-cloud-agent
        app.kubernetes.io/instance: release-name
        component: agent
        deployment: agent
      annotations:
        checksum/dagster-instance: b6be11f3c21353c1f09a64e930b75a7e7823de2574bdf5d7de5ff8b4614b3d5c
        checksum/dagster-logging: faf68741fb252fc52af8f9653df8fb4062f26a1b083f204520c91f2bb7351f92
    spec:
      imagePullSecrets:
        []
      serviceAccountName: release-name-dagster-cloud-agent
      securityContext:
        {}
      containers:
        - name: dagster-cloud-agent
          securityContext:
            {}
          imagePullPolicy: Always
          image: "docker.io/dagster/dagster-cloud-agent:1.7.5"
          command:
            - "/bin/bash"
            - "-c"
            - "dagster-cloud agent run --agent-logging-config-path /opt/dagster/dagster_home/logging.yaml"
          env:
            - name: DAGSTER_CLOUD_AGENT_CPU_REQUEST
              valueFrom:
                resourceFieldRef:
                  containerName: dagster-cloud-agent
                  resource: requests.cpu
            - name: DAGSTER_CLOUD_AGENT_CPU_LIMIT
              valueFrom:
                resourceFieldRef:
                  containerName: dagster-cloud-agent
                  resource: limits.cpu
            - name: DAGSTER_CLOUD_AGENT_MEMORY_REQUEST
              valueFrom:
                resourceFieldRef:
                  containerName: dagster-cloud-agent
                  resource: requests.memory
            - name: DAGSTER_CLOUD_AGENT_MEMORY_LIMIT
              valueFrom:
                resourceFieldRef:
                  containerName: dagster-cloud-agent
                  resource: limits.memory
          envFrom:
            - configMapRef:
                name: release-name-dagster-cloud-agent-agent-env
            - secretRef:
                name: dagster-cloud-agent-token
          volumeMounts:
            - name: dagster-instance
              mountPath: "/opt/dagster/dagster_home/dagster.yaml"
              subPath: dagster.yaml
            - name: dagster-agent-logging
              mountPath: /opt/dagster/dagster_home/logging.yaml
              subPath: logging.yaml
          resources:
            {}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          readinessProbe:
            null
      initContainers:
        []
      nodeSelector:
        {}
      volumes:
        - name: dagster-instance
          configMap:
            name: release-name-dagster-cloud-agent-instance
        - name: dagster-agent-logging
          configMap:
            name: release-name-dagster-cloud-agent-logging
      affinity:
        {}
      tolerations:
        []
