---
# Source: shyama/templates/secret-postgresdb.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-shyama-postgresdb
  namespace: "default"
  labels:
    helm.sh/chart: shyama-0.4.1
    app.kubernetes.io/name: shyama
    app.kubernetes.io/instance: release-name
    gyeeta.io/podtype: shyama
    app.kubernetes.io/version: 12.2.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: gyeeta
type: Opaque
data:
  CFG_POSTGRES_PASSWORD: "cmVsZWFzZS1uYW1lLXBvc3RncmVzcGFzcw=="
---
# Source: shyama/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-shyama
  namespace: "default"
  labels:
    helm.sh/chart: shyama-0.4.1
    app.kubernetes.io/name: shyama
    app.kubernetes.io/instance: release-name
    gyeeta.io/podtype: shyama
    app.kubernetes.io/version: "0.4.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: shyama
    app.kubernetes.io/part-of: gyeeta
type: Opaque
data:
  CFG_SHYAMA_SECRET: "cmVsZWFzZS1uYW1lLXNlY3JldA=="
---
# Source: shyama/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-shyama
  namespace: default
  labels:
    helm.sh/chart: shyama-0.4.1
    app.kubernetes.io/name: shyama
    app.kubernetes.io/instance: release-name
    gyeeta.io/podtype: shyama
    app.kubernetes.io/version: "0.4.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: shyama
    app.kubernetes.io/part-of: gyeeta
data:
  shyama_main.json: |-
    {  
      "shyama_name" : "shyama_release_name",  
      "min_madhava" : 1,
      "listener_port" : 10037,
      "service_hostname" : "release-name-shyama-headless.default.svc.cluster.local",
      "service_port" : 10037,
      "webserver_url" : "http://nodewebserver.default.svc.cluster.local:10039",
      "postgres_hostname" : "localhost",
      "postgres_port" : 10040,
      "postgres_user" : "postgres",
      "postgres_storage_days" : 3
    }
---
# Source: shyama/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-shyama-headless
  namespace: "default"
  labels:
    helm.sh/chart: shyama-0.4.1
    app.kubernetes.io/name: shyama
    app.kubernetes.io/instance: release-name
    gyeeta.io/podtype: shyama
    app.kubernetes.io/version: "0.4.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: shyama
    app.kubernetes.io/part-of: gyeeta
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: tcp-shyama
      port: 10037
      targetPort: tcp-shyama
  selector:
    app.kubernetes.io/name: shyama
    app.kubernetes.io/instance: release-name
    gyeeta.io/podtype: shyama
---
# Source: shyama/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-shyama
  namespace: "default"
  labels:
    helm.sh/chart: shyama-0.4.1
    app.kubernetes.io/name: shyama
    app.kubernetes.io/instance: release-name
    gyeeta.io/podtype: shyama
    app.kubernetes.io/version: "0.4.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: shyama
    app.kubernetes.io/part-of: gyeeta
spec:
  type: ClusterIP
  ports:
    - name: tcp-shyama
      port: 10037
      targetPort: tcp-shyama
      nodePort: null
  selector:
    app.kubernetes.io/name: shyama
    app.kubernetes.io/instance: release-name
    gyeeta.io/podtype: shyama
---
# Source: shyama/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-shyama
  namespace: "default"
  labels:
    helm.sh/chart: shyama-0.4.1
    app.kubernetes.io/name: shyama
    app.kubernetes.io/instance: release-name
    gyeeta.io/podtype: shyama
    app.kubernetes.io/version: "0.4.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: shyama
    app.kubernetes.io/part-of: gyeeta
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: shyama
      app.kubernetes.io/instance: release-name
      gyeeta.io/podtype: shyama
  serviceName: release-name-shyama-headless
  replicas: 1
  minReadySeconds: 10
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  template:
    metadata:
      name: release-name-shyama
      labels:
        app.kubernetes.io/name: shyama
        app.kubernetes.io/instance: release-name
        gyeeta.io/podtype: shyama
      annotations:
        checksum/config: c6c42508dff04c08eb9480b5b79b219489e256cc7b08fa2fcaa7cd1315d30170
        checksum/secret: a70a4de165e5f0d59ee0b118af6c3685dc5c4051ca97237dc973551d7259618f
        checksum/secret-postgresdb: e95abf0bc70c80f2ce5bcdee38f06d79761c359a497e8a41c6dd3753d4abc496
    spec:
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: shyama
                    app.kubernetes.io/instance: release-name
                    gyeeta.io/podtype: shyama
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      terminationGracePeriodSeconds: 10
      securityContext:
        fsGroup: 1001
      initContainers:
        - name: init-postgres
          image: ghcr.io/gyeeta/postgresdb:12.2.0
          imagePullPolicy: IfNotPresent
          resources:
            limits: {}
            requests: {}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: CFG_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-shyama-postgresdb
                  key: "CFG_POSTGRES_PASSWORD"
            - name: CFG_POSTGRES_PORT
              value: "10040"
          args:
            - "--initdb"
          volumeMounts:
            - name: dbdata
              mountPath: "/dbdata"
      containers:
        - name: shyama
          image: ghcr.io/gyeeta/shyama:0.4.1
          imagePullPolicy: IfNotPresent
          resources:
            limits: {}
            requests: {}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
            readOnlyRootFilesystem: true 
          args:
            - start
          env:
            - name: "CFG_MAIN_JSON"
              value: "/etc/shyama/shyama_main.json"
          envFrom:
            - secretRef:
                name: release-name-shyama
            - secretRef:
                name: release-name-shyama-postgresdb  
          ports:
            - name: tcp-shyama
              containerPort: 10037
          volumeMounts:
          - name: config-volume
            mountPath: /etc/shyama         
            readOnly: true
          - mountPath: /hostdata
            name: shyamavol              
          readinessProbe:
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
            tcpSocket:
              port: 10037
          resources:
            limits: {}
            requests: {}
        - name: postgresdb
          image: ghcr.io/gyeeta/postgresdb:12.2.0
          imagePullPolicy: IfNotPresent
          resources:
            limits: {}
            requests: {}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
            readOnlyRootFilesystem: true 
          args:
            - start
          env:
          ports:
            - name: tcp-postgresql
              containerPort: 10040    
          livenessProbe:
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
            exec:
              command:
                - /bin/bash
                - -c
                - exec /postgresdb/bin/pg_isready -U "postgres" -h 127.0.0.1 -p 10040      
          volumeMounts:
            - name: dbdata
              mountPath: "/dbdata"
          resources:
            limits: {}
            requests: {}
      volumes:
        - name: shyamavol
          emptyDir: {}  
        - name: config-volume
          configMap:
            name: release-name-shyama
  volumeClaimTemplates:
    - metadata:
        name: dbdata
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "10Gi"
