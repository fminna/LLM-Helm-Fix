---
# Source: zeppelin/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-zeppelin
  labels:
    helm.sh/chart: zeppelin-0.1.3
    app.kubernetes.io/name: zeppelin
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.10.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: zeppelin/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-zeppelin-conf-map
data:
  FLINK_HOME: "/opt/flink"
  SERVICE_DOMAIN: ""
  SPARK_HOME: "/spark"
  SPARK_MASTER: "k8s://https://kubernetes.default.svc"
  ZEPPELIN_HOME: "/opt/zeppelin"
  ZEPPELIN_K8S_CONTAINER_IMAGE: "apache/zeppelin:0.11.0"
  ZEPPELIN_K8S_SPARK_CONTAINER_IMAGE: "gcr.io/spark-operator/spark:v3.1.1"
  ZEPPELIN_PORT: "8080"
  ZEPPELIN_SERVER_RPC_PORTRANGE: "12320:12320"
---
# Source: zeppelin/templates/serviceaccount.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-zeppelin-role
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps"]
  verbs: ["create", "get", "update", "patch", "list", "delete", "watch"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings"]
  verbs: ["bind", "create", "get", "update", "patch", "list", "delete", "watch"]
---
# Source: zeppelin/templates/serviceaccount.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-zeppelin-role-binding
subjects:
- kind: ServiceAccount
  name: release-name-zeppelin
roleRef:
  kind: Role
  name: release-name-zeppelin-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: zeppelin/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-zeppelin
  labels:
    helm.sh/chart: zeppelin-0.1.3
    app.kubernetes.io/name: zeppelin
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.10.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: zeppelin
    app.kubernetes.io/instance: release-name
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
    - port: 8443
      targetPort: https
      protocol: TCP
      name: https
    - port: 12320 # port name is referenced in the code. So it shouldn't be changed.
      name: rpc
---
# Source: zeppelin/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-zeppelin
  labels:
    helm.sh/chart: zeppelin-0.1.3
    app.kubernetes.io/name: zeppelin
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.10.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: zeppelin
      app.kubernetes.io/instance: release-name
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: zeppelin
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-zeppelin
      securityContext:
        {}
      containers:
      - name: zeppelin-server
        image: "apache/zeppelin:0.11.0"
        command: ["sh", "-c", "$(ZEPPELIN_HOME)/bin/zeppelin.sh"]
        lifecycle:
          preStop:
            exec:
              # SIGTERM triggers a quick exit; gracefully terminate instead
              command: ["sh", "-c", "ps -ef | grep org.apache.zeppelin.server.ZeppelinServer | grep -v grep | awk '{print $2}' | xargs kill"]
        ports:
        - name: http
          containerPort: 8080
        - name: https
          containerPort: 8443
        - name: rpc
          containerPort: 12320
        env:
        - name: SERVICE_DOMAIN
          value: release-name-zeppelin
        - name: POD_UID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.uid
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: ZEPPELIN_K8S_SERVICE_NAME
          value: release-name-zeppelin
        envFrom:
        - configMapRef:
            name: release-name-zeppelin-conf-map
        resources:
          {}
        livenessProbe:
          tcpSocket:
            port: http
          periodSeconds: 30
        readinessProbe:
          tcpSocket:
            port: http
          periodSeconds: 30

      # volumeMounts:
      #  - name: zeppelin-server-notebook-volume     # configure this to persist notebook
      #    mountPath: /zeppelin/notebook
      #  - name: zeppelin-server-conf                # configure this to persist Zeppelin configuration
      #    mountPath: /zeppelin/conf
      #  - name: zeppelin-server-custom-k8s          # configure this to mount customized Kubernetes spec for interpreter
      #    mountPath: /zeppelin/k8s
---
# Source: zeppelin/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-zeppelin-test-connection"
  labels:
    helm.sh/chart: zeppelin-0.1.3
    app.kubernetes.io/name: zeppelin
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.10.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-zeppelin:80']
  restartPolicy: Never
