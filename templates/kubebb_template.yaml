---
# Source: kubebb/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name
  namespace: default
---
# Source: kubebb/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: release-name
  namespace: default
---
# Source: kubebb/templates/deploy.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name
  namespace: default
  labels:
    control-plane: release-name-kubebb-core
spec:
  selector:
    matchLabels:
      control-plane:  release-name-kubebb-core
  replicas: 1
  template:
    metadata:
      labels:
        control-plane: release-name-kubebb-core
    spec:
      securityContext:
        runAsNonRoot: true
        # TODO(user): For common cases that do not require escalating privileges
        # it is recommended to ensure that all your Pods/Containers are restrictive.
        # More info: https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted
        # Please uncomment the following code if your project does NOT have to work on old Kubernetes
        # versions < 1.19 or on vendors versions which do NOT support this field by default (i.e. Openshift < 4.11 ).
        # seccompProfile:
        #   type: RuntimeDefault
      containers:
      - command:
        - /manager
        image: kubebb/core
        imagePullPolicy: 
        name: manager
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - "ALL"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources: 
          limits:
            cpu: 5000m
            memory: 1280Mi
          requests:
            cpu: 10m
            memory: 64Mi 
      serviceAccountName: release-name
      terminationGracePeriodSeconds: 10
