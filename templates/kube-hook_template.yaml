---
# Source: kube-hook/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kube-hook
  labels:
    helm.sh/chart: kube-hook-1.0.3
    app.kubernetes.io/name: kube-hook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
---
# Source: kube-hook/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-kube-hook
  labels:
    helm.sh/chart: kube-hook-1.0.3
    app.kubernetes.io/name: kube-hook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list"]
  - apiGroups: ["", "apps"]
    resources: ["deployments", "replicasets", "pods"]
    verbs: ["get", "list", "update", "patch"]
---
# Source: kube-hook/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kube-hook
  labels:
    helm.sh/chart: kube-hook-1.0.3
    app.kubernetes.io/name: kube-hook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-kube-hook
subjects:
  - kind: ServiceAccount
    name: release-name-kube-hook
    namespace: default
---
# Source: kube-hook/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kube-hook
  labels:
    helm.sh/chart: kube-hook-1.0.3
    app.kubernetes.io/name: kube-hook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kube-hook
    app.kubernetes.io/instance: release-name
---
# Source: kube-hook/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kube-hook
  labels:
    helm.sh/chart: kube-hook-1.0.3
    app.kubernetes.io/name: kube-hook
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-hook
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kube-hook
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-kube-hook
      securityContext:
        {}
      containers:
        - name: kube-hook
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 101
            runAsUser: 101
          image: "glenndehaan/kube-hook:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /_health
              port: http
          readinessProbe:
            httpGet:
              path: /_health
              port: http
          env:
            - name: TOKENS
              value: ""
          resources:
            limits:
              memory: 125Mi
            requests:
              memory: 125Mi
