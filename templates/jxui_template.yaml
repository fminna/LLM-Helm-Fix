---
# Source: jxui/charts/jxui-cleanup/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: jxui-cleanup
    chart: "jxui-cleanup-2.3.56"
    release: "release-name"
    heritage: "Helm"
  name: jxui-cleanup
---
# Source: jxui/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: jxui
    chart: "jxui-0.0.1289"
    release: "release-name"
    heritage: "Helm"
  name: jxui
  annotations:
---
# Source: jxui/templates/single-user-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
    labels:
        app: jxui
        chart: "jxui-0.0.1289"
        release: "release-name"
        heritage: "Helm"
    name: single-user
---
# Source: jxui/templates/rolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-jxui
  labels:
    app: jxui
    chart: jxui-0.0.1289
    release: release-name
    heritage: Helm
subjects:
- kind: ServiceAccount
  name: jxui
  namespace: default
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: cluster-admin
---
# Source: jxui/charts/jxui-cleanup/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: jxui-cleanup
rules:
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
  - patch
  - create
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  - services
  verbs:
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
  - patch
  - update
---
# Source: jxui/charts/jxui-cleanup/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: jxui-cleanup
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: jxui-cleanup
subjects:
- kind: ServiceAccount
  name: jxui-cleanup
  namespace: default
---
# Source: jxui/templates/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jxui-metrics
  labels:
    app: jxui
    chart: jxui-0.0.1289
    release: release-name
    heritage: Helm
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: jxui-frontend
  selector:
    app: jxui
    release: release-name
---
# Source: jxui/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: jxui
  labels:
    app: jxui
    chart: jxui-0.0.1289
    release: release-name
    heritage: Helm
    jenkins.io/ui-resource: "true"
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8000
      protocol: TCP
      name: jxui-frontend
  selector:
    app: jxui
    release: release-name
---
# Source: jxui/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-jxui
  labels:
    app: jxui
    chart: jxui-0.0.1289
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jxui
      release: release-name
  strategy:
    rollingUpdate:
      maxUnavailable: 35%
  template:
    metadata:
      labels:
        app: jxui
        release: release-name
    spec:
      containers:
        - name: jxui-frontend
          env:
          - name: API_PORT
            value: "8080"
          - name: BASE_PATH
            value: ""
          - name: AUTH_BASIC
            value: '"JXUI"'
          image: "gcr.io/jenkinsxio/jxui-frontend:0.0.1289"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          livenessProbe:
            httpGet:
              path: "/_health"
              port: 8000
            periodSeconds: 60
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: "/_health"
              port: 8000
            periodSeconds: 60
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
          volumeMounts:
          - name: jx-basic-auth
            mountPath: /etc/nginx/auth
            readOnly: true
        - name: jxui-backend
          image: "gcr.io/jenkinsxio/jxui-backend:0.0.457"
          imagePullPolicy: IfNotPresent
          env:
          - name: XDG_CONFIG_HOME
            value: /home
          - name: DISABLE_SSO
            value: "true"
          - name: JX_LOG_FORMAT
            value: json
          - name: PIPELINE_KIND
            value: dummy
          livenessProbe:
            exec:
              command:
              - /usr/bin/curl
              - -fsS
              - http://127.0.0.1:8080/_health
            periodSeconds: 60
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
              - /usr/bin/curl
              - -fsS
              - http://127.0.0.1:8080/_health
            periodSeconds: 60
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
      serviceAccountName: jxui
      volumes:
      - name: jx-basic-auth
        secret:
          secretName: jx-basic-auth
          items:
          - key: auth
            path: htpasswd
---
# Source: jxui/templates/single-user-environmentrolebinding.yaml
apiVersion: jenkins.io/v1
kind: EnvironmentRoleBinding
metadata:
    labels:
        app: jxui
        chart: "jxui-0.0.1289"
        release: "release-name"
        heritage: "Helm"
    name: single-user
    namespace: jx
spec:
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: viewer
  subjects:
    - kind: ServiceAccount
      name: single-user
      namespace: jx
---
# Source: jxui/charts/jxui-cleanup/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: jxui-cleanup
  labels:
    heritage: "Helm"
    release: "release-name"
    chart: "jxui-cleanup-2.3.56"
    component: "release-name-jxui-cleanup"
  name: jxui-cleanup
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  # backoffLimit: 5
  template:
    metadata:
      name: "release-name"
      labels:
        heritage: "Helm"
        release: "release-name"
        chart: "jxui-cleanup-2.3.56"
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: "jenkinsxio/exposecontroller:2.3.56"
        name: jxui-cleanup
        command: ["/exposecontroller"]
        args:
        - "--cleanup"
        - "--filter"
        - "jxui-jxui"
      serviceAccountName: jxui-cleanup
      restartPolicy: Never
