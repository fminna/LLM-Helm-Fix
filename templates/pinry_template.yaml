---
# Source: pinry/templates/common.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: release-name-pinry-secrets
  namespace: default
  labels:
    app: "pinry-10.0.5"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "pinry"
    app.kubernetes.io/version: "2.1.12"
    helm-revision: "1"
    helm.sh/chart: "pinry-10.0.5"
    release: "release-name"
stringData:
  SECRET_KEY: ZFomfxR7UFgFo1aHSINbPVTn8rVnCI2m
---
# Source: pinry/templates/common.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-pinry-data
  namespace: default
  labels:
    app: "pinry-10.0.5"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "pinry"
    app.kubernetes.io/version: "2.1.12"
    helm-revision: "1"
    helm.sh/chart: "pinry-10.0.5"
    release: "release-name"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
---
# Source: pinry/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-pinry
  namespace: default
  labels:
    app: "pinry-10.0.5"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "pinry"
    app.kubernetes.io/version: "2.1.12"
    helm-revision: "1"
    helm.sh/chart: "pinry-10.0.5"
    release: "release-name"
    service.name: "main"
spec:
  type: ClusterIP
  publishNotReadyAddresses: false
  ports:
    - name: main
      port: 10213
      protocol: TCP
      targetPort: 80
  selector:
    pod.name: main
    app.kubernetes.io/name: pinry
    app.kubernetes.io/instance: release-name
---
# Source: pinry/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-pinry
  namespace: default
  labels:
    app: "pinry-10.0.5"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "pinry"
    app.kubernetes.io/version: "2.1.12"
    helm-revision: "1"
    helm.sh/chart: "pinry-10.0.5"
    release: "release-name"
spec:  
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      pod.name: main
      app.kubernetes.io/name: pinry
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app: "pinry-10.0.5"
        app.kubernetes.io/instance: "release-name"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/name: "pinry"
        app.kubernetes.io/version: "2.1.12"
        helm-revision: "1"
        helm.sh/chart: "pinry-10.0.5"
        pod.lifecycle: "permanent"
        pod.name: "main"
        release: "release-name"
      annotations:
        checksum/cnpg: "ffd338b55cc50a8b366097eec597eeb134dee46563555614453e28233d208d00"
        checksum/configmaps: "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a"
        checksum/mariadb: "09c85576cb45b1eecd1467732b11ea8fa3363b0105c465f02a6ad64991521d52"
        checksum/mongodb: "09c85576cb45b1eecd1467732b11ea8fa3363b0105c465f02a6ad64991521d52"
        checksum/persistence: "5570af8c0f8f5d32ce7cd6580e0de240faccf39e25c1cf9699e5ccdca7b20b59"
        checksum/redis: "013343a028cbb3f7e08f4ba7522702dd98e52632c688641074b0b1db3df29894"
        checksum/secrets: "9e4a9c9ef89e69de92551f4151ed4726ca790f3046ddceca95ce44d2fdd4729c"
        checksum/services: "ad2f79abbaa2cd8a56cdf554f1d5241d1fd200f3388d5eb89d539d618afc8fb2"
        checksum/solr: "29c14feeaddbf7762052db593898d274941f539cee681ddc613957587686f347"
    spec:
      serviceAccountName: default
      automountServiceAccountToken: false
      runtimeClassName: 
      hostNetwork: false
      hostPID: false
      hostIPC: false
      shareProcessNamespace: false
      enableServiceLinks: false
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/arch: amd64
      topologySpreadConstraints:
        - maxSkew: 1
          whenUnsatisfiable: ScheduleAnyway
          topologyKey: "kubernetes.io/hostname"
          labelSelector:
            matchLabels:      
              pod.name: main
              app.kubernetes.io/name: pinry
              app.kubernetes.io/instance: release-name
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      terminationGracePeriodSeconds: 60
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 568
        sysctls:
          - name: "net.ipv4.ip_unprivileged_port_start"
            value: "80"
      hostUsers: true
      containers:
        - name: release-name-pinry
          image: getpinry/pinry:2.1.12@sha256:b0f9eeb195d478d9a989e220861b4638f4fb489d02fdaac1e46bbacd46e90a96
          imagePullPolicy: IfNotPresent
          tty: false
          stdin: false
          ports:
            - name: main
              containerPort: 80
              protocol: TCP
              hostPort: null
          volumeMounts:
            - name: data
              mountPath: /data
              readOnly: false
            - name: devshm
              mountPath: /dev/shm
              readOnly: false
            - name: shared
              mountPath: /shared
              readOnly: false
            - name: tmp
              mountPath: /tmp
              readOnly: false
            - name: varlogs
              mountPath: /var/logs
              readOnly: false
            - name: varrun
              mountPath: /var/run
              readOnly: false
          livenessProbe:
            httpGet:
              port: 80
              path: /
              scheme: HTTP
            initialDelaySeconds: 12
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
            periodSeconds: 15
          readinessProbe:
            httpGet:
              port: 80
              path: /
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 4
            successThreshold: 2
            timeoutSeconds: 5
            periodSeconds: 12
          startupProbe:
            httpGet:
              port: 80
              path: /
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 60
            successThreshold: 1
            timeoutSeconds: 3
            periodSeconds: 5
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits: 
              cpu: 4000m 
              memory: 8Gi
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
            runAsGroup: 0
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            privileged: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add:
                - NET_BIND_SERVICE
                - CHOWN
                - SETUID
                - SETGID
                - FOWNER
                - DAC_OVERRIDE
              drop:
                - ALL
          env:
            - name: "TZ"
              value: "UTC"
            - name: "UMASK"
              value: "0022"
            - name: "UMASK_SET"
              value: "0022"
            - name: "NVIDIA_VISIBLE_DEVICES"
              value: "void"
            - name: "PUID"
              value: "568"
            - name: "USER_ID"
              value: "568"
            - name: "UID"
              value: "568"
            - name: "PGID"
              value: "568"
            - name: "GROUP_ID"
              value: "568"
            - name: "GID"
              value: "568"
            - name: "SECRET_KEY"
              valueFrom:
                secretKeyRef:
                  key: "SECRET_KEY"
                  name: "release-name-pinry-secrets"
      initContainers:
        - name: release-name-pinry-install-1-create-key-file
          image: getpinry/pinry:2.1.12@sha256:b0f9eeb195d478d9a989e220861b4638f4fb489d02fdaac1e46bbacd46e90a96
          imagePullPolicy: IfNotPresent
          tty: false
          stdin: false
          command:
            - "sh"
            - "-c"
          args:
            - "keyfile=\"/data/production_secret_key.txt\";\nif [ ! -f ${keyfile} ]; then\n  echo \"No ${keyfile} File...\";\n  echo \"Creating ${keyfile} file...\";\n  echo \"${SECRET_KEY}\" > ${keyfile};\n  if [ -f ${keyfile} ];\n  then\n    echo \"Success!\";\n  else\n    echo \"Failed.\";\n  fi;\nelse\n  echo \"${keyfile} File exists. Skipping...\";\nfi;\n"
          volumeMounts:
            - name: data
              mountPath: /data
              readOnly: false
            - name: devshm
              mountPath: /dev/shm
              readOnly: false
            - name: shared
              mountPath: /shared
              readOnly: false
            - name: tmp
              mountPath: /tmp
              readOnly: false
            - name: varlogs
              mountPath: /var/logs
              readOnly: false
            - name: varrun
              mountPath: /var/run
              readOnly: false
          
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits: 
              cpu: 4000m 
              memory: 8Gi
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
            runAsGroup: 0
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            privileged: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add:
                - NET_BIND_SERVICE
                - CHOWN
                - SETUID
                - SETGID
                - FOWNER
                - DAC_OVERRIDE
              drop:
                - ALL
          env:
            - name: "TZ"
              value: "UTC"
            - name: "UMASK"
              value: "0022"
            - name: "UMASK_SET"
              value: "0022"
            - name: "NVIDIA_VISIBLE_DEVICES"
              value: "void"
            - name: "PUID"
              value: "568"
            - name: "USER_ID"
              value: "568"
            - name: "UID"
              value: "568"
            - name: "PGID"
              value: "568"
            - name: "GROUP_ID"
              value: "568"
            - name: "GID"
              value: "568"
            - name: "SECRET_KEY"
              valueFrom:
                secretKeyRef:
                  key: "SECRET_KEY"
                  name: "release-name-pinry-secrets"
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: release-name-pinry-data
        - name: devshm
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: shared
          emptyDir: {}
        - name: tmp
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: varlogs
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: varrun
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
