---
# Source: jackett2telegram/templates/common.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-jackett2telegram
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: jackett2telegram
    app.kubernetes.io/version: 1.9.0
    helm-revision: "1"
    helm.sh/chart: jackett2telegram-0.0.7
stringData:
  CHATID: ""
  TOKEN: ""
---
# Source: jackett2telegram/templates/common.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-jackett2telegram-blackhole
  labels:
    helm.sh/chart: jackett2telegram-0.0.7
    app.kubernetes.io/name: jackett2telegram
    app.kubernetes.io/instance: release-name
    helm-revision: "1"
    app.kubernetes.io/version: "1.9.0"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "999Gi"
---
# Source: jackett2telegram/templates/common.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-jackett2telegram-config
  labels:
    helm.sh/chart: jackett2telegram-0.0.7
    app.kubernetes.io/name: jackett2telegram
    app.kubernetes.io/instance: release-name
    helm-revision: "1"
    app.kubernetes.io/version: "1.9.0"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "999Gi"
---
# Source: jackett2telegram/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-jackett2telegram
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: jackett2telegram
    app.kubernetes.io/version: 1.9.0
    helm-revision: "1"
    helm.sh/chart: jackett2telegram-0.0.7
  annotations:
    rollme: mSQCm
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: jackett2telegram
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        
      labels:
        app.kubernetes.io/name: jackett2telegram
        app.kubernetes.io/instance: release-name
    spec:
      
        
      serviceAccountName: default
      securityContext:
          
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 568
        runAsUser: 568
        supplementalGroups:
        - 568
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          
          - name: ndots
            value: "1"
      enableServiceLinks: false
      terminationGracePeriodSeconds: 10
      initContainers:
        
      containers:
        - name: release-name-jackett2telegram
          image: tccr.io/truecharts/jackett2telegram:1.9.0@sha256:efc57e6a18dd7f6895a75202874f22a15091f93de25f4cbd53fdf8e144e86fef
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add: []
              drop: []
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
        
          env:
            - name: UMASK
              value: "2"
            - name: UMASK_SET
              value: "2"
            - name: S6_READ_ONLY_ROOT
              value: "1"
            - name: NVIDIA_VISIBLE_DEVICES
              value: "void"
            - name: TZ
              value: "UTC"
            - name: "DELAY"
              value: "600"
          envFrom:
            - secretRef:
                name: release-name-jackett2telegram
          ports:
            
          volumeMounts:
            
            - mountPath: /app/blackhole
              name: blackhole
            - mountPath: /app/config
              name: config
            - mountPath: /shared
              name: shared
            - mountPath: /dev/shm
              name: shm
            - mountPath: /tmp
              name: temp
            - mountPath: /var/logs
              name: varlogs
          
          
          resources:
            limits:
              cpu: 4000m
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
      volumes:
        - name: blackhole
          persistentVolumeClaim:
            claimName: release-name-jackett2telegram-blackhole
        - name: config
          persistentVolumeClaim:
            claimName: release-name-jackett2telegram-config
        - name: shared
          emptyDir:
            {}
        - name: shm
          emptyDir:
            medium: Memory
        - name: temp
          emptyDir:
            {}
        - name: varlogs
          emptyDir:
            {}
---
# Source: jackett2telegram/templates/common.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-jackett2telegram-manifests
  namespace: default
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-7"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
---
# Source: jackett2telegram/templates/common.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-jackett2telegram-manifests
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-7"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
rules:
  - apiGroups:  ["*"]
    resources:  ["*"]
    verbs:  ["*"]
---
# Source: jackett2telegram/templates/common.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-jackett2telegram-manifests
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-7"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-jackett2telegram-manifests
subjects:
  - kind: ServiceAccount
    name: release-name-jackett2telegram-manifests
    namespace: default
---
# Source: jackett2telegram/templates/common.yaml
apiVersion: batch/v1
kind: Job
metadata:
  namespace: default
  name: release-name-jackett2telegram-manifests
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-6"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  template:
    spec:
      serviceAccountName: release-name-jackett2telegram-manifests
      containers:
        - name: release-name-jackett2telegram-manifests
          image: tccr.io/truecharts/kubectl:v1.26.0@sha256:6d6e0e50f28b961ed1c1c6a9c140553238641591fbdc9ac7c1a348636f78c552
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          command:
            - "/bin/sh"
            - "-c"
            - |
              /bin/sh <<'EOF'
              echo "installing manifests..."
              kubectl apply --server-side --force-conflicts -k https://github.com/truecharts/manifests/manifests  || echo "Manifest application failed..."
              EOF
          volumeMounts:
            - name: release-name-jackett2telegram-manifests-temp
              mountPath: /tmp
      restartPolicy: Never
      volumes:
        - name: release-name-jackett2telegram-manifests-temp
          emptyDir: {}
