---
# Source: omnia-feed/charts/gofer/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-gofer
  labels:
    helm.sh/chart: gofer-0.0.3
    app.kubernetes.io/name: gofer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.10.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: omnia-feed/charts/spire/charts/tor-proxy/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: feed-tor-proxy
  labels:
    helm.sh/chart: tor-proxy-0.0.5
    app.kubernetes.io/name: tor-proxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.4.7.10"
    app.kubernetes.io/managed-by: Helm
---
# Source: omnia-feed/charts/spire/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: feed-spire
  labels:
    helm.sh/chart: spire-0.1.0
    app.kubernetes.io/name: spire
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.11.0-dev.5"
    app.kubernetes.io/managed-by: Helm
---
# Source: omnia-feed/charts/ssb-server/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-ssb-server
  labels:
    helm.sh/chart: ssb-server-0.0.2
    app.kubernetes.io/name: ssb-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.13.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: omnia-feed/templates/serviceaccount-test.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-omnia-feed-test
---
# Source: omnia-feed/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-omnia-feed
  labels:
    helm.sh/chart: omnia-feed-0.0.5
    app.kubernetes.io/name: omnia-feed
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.15.2-rc.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: omnia-feed/charts/spire/templates/keystore-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: feed-spire-keystore
data:
  keystore.json: |-
    
  password.txt: ""
---
# Source: omnia-feed/charts/ssb-server/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-ssb-server-config
data:
  config: |
    {
      "connections": {
        "incoming": {
          "net": [
            {"port": 8007, "transform": "shs", "scope": "public"}
          ]
        },
        "outgoing": {
          "net": [{ "transform": "shs" }],
          "onion": [{ "transform": "shs" }]
        }
      },
      "caps": {
        "shs": "BRsTikbASMIC6jAvsIbZy24Wd6IpLQ5FbEx1oyooGb8=",
        "sign": "HOGP1DI4ZybjiHYv7SvaadeSLSnt1MQ2bDo2v7aszh0="
      },
      "logging":{"level": "info"}
    }
    
  secret: |
    {
      "curve": "ed25519",
      "public": "YSa2zbx07RNKQrrFX1vS5mFN+Pbnul61hd9GGymao1o=.ed25519",
      "private": "XhEkyFWb0TkhRU5t/yDTCI6Q9gwhsJM/SpL02UUwVtZhJrbNvHTtE0pCusVfW9LmYU349ue6XrWF30YbKZqjWg==.ed25519",
      "id": "@YSa2zbx07RNKQrrFX1vS5mFN+Pbnul61hd9GGymao1o=.ed25519"
    }
---
# Source: omnia-feed/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-omnia-feed-config
data:
  ### note this config is only suitable for eth goerli as per https://github.com/chronicleprotocol/omnia-feed/blob/master/omnia/config/relay-ethereum-goerli.json
  omnia.json: |-
    {
      "mode": "feed",
      "ethereum": {
        "from": "0x0000000000000000000000000000000000000000",
        "keystore": "/keystore/",
        "password": "/password/password.txt",
        "network": "https://ethereum-goerli-rpc.allthatnode.com",
        "gasPrice": {
          "multiplier": 1,
          "source": "node"
        }
      },
      "options": {
        "interval": 60,
        "msgLimit": 35,
        "srcTimeout": 10,
        "setzerTimeout": 10,
        "setzerCacheExpiry": 120,
        "setzerMinMedian": 3,
        "setzerEthRpcUrl": "https://ethereum-goerli-rpc.allthatnode.com",
        "verbose": true,
        "logFormat": "text"
      },
      "sources": ["gofer"],
      
      "transports": ["ssb","spire"],
      
      "feeds": [
        "0x3CB645a8f10Fb7B0721eaBaE958F77a878441Cb9",
        "0x4b0E327C08e23dD08cb87Ec994915a5375619aa2",
        "0x4f95d9B4D842B2E2B1d1AC3f2Cf548B93Fd77c67",
        "0x8aFBD9c3D794eD8DF903b3468f4c4Ea85be953FB",
        "0x8de9c5F1AC1D4d02bbfC25fD178f5DAA4D5B26dC",
        "0x8ff6a38A1CD6a42cAac45F08eB0c802253f68dfD",
        "0x60da93D9903cb7d3eD450D4F81D402f7C4F71dd9",
        "0x71eCFF5261bAA115dcB1D9335c88678324b8A987",
        "0x75ef8432566A79C86BBF207A47df3963B8Cf0753",
        "0x77EB6CF8d732fe4D92c427fCdd83142DB3B742f7",
        "0x83e23C207a67a9f9cB680ce84869B91473403e7d",
        "0x130431b4560Cd1d74A990AE86C337a33171FF3c6",
        "0x16655369Eb59F3e1cAFBCfAC6D3Dd4001328f747",
        "0xA8EB82456ed9bAE55841529888cDE9152468635A",
        "0xa580BBCB1Cee2BCec4De2Ea870D20a12A964819e",
        "0xaC8519b3495d8A3E3E44c041521cF7aC3f8F63B3",
        "0xC9508E9E3Ccf319F5333A5B8c825418ABeC688BA",
        "0xD27Fa2361bC2CfB9A591fb289244C538E190684B",
        "0xd72BA9402E9f3Ff01959D6c841DDD13615FFff42",
        "0xd94BBe83b4a68940839cD151478852d16B3eF891",
        "0xDA1d2961Da837891f43235FddF66BAD26f41368b",
        "0xE6367a7Da2b20ecB94A25Ef06F3b551baB2682e6",
        "0xFbaF3a7eB4Ec2962bd1847687E56aAEE855F5D00",
        "0xfeEd00AA3F0845AFE52Df9ECFE372549B74C69D2"
      ],
      "pairs": {
        "BTC/USD": {
          "msgExpiration": 1800,
          "msgSpread": 0.5
        },
        "GNO/USD": {
          "msgExpiration": 1800,
          "msgSpread": 0.5
        },
        "MKR/USD": {
          "msgExpiration": 1800,
          "msgSpread": 0.5
        }
        
      }
    }
  spire.json: |-
    {
      "spire": {
        "rpc": {
          "address": "feed-spire:9100"
        },
      }
    }
---
# Source: omnia-feed/templates/keystore-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-omnia-feed-keystore
data:
  keystore.json: |-
    
  password.txt: ""
---
# Source: omnia-feed/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-omnia-feed-test
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log"]
  verbs: ["get", "list"]
---
# Source: omnia-feed/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-omnia-feed-test
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-omnia-feed-test
subjects:
- kind: ServiceAccount
  name: release-name-omnia-feed-test
---
# Source: omnia-feed/charts/gofer/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-gofer
  labels:
    helm.sh/chart: gofer-0.0.3
    app.kubernetes.io/name: gofer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.10.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9200
      targetPort: listener
      protocol: TCP
      name: listener
  selector:
    app.kubernetes.io/name: gofer
    app.kubernetes.io/instance: release-name
---
# Source: omnia-feed/charts/spire/charts/tor-proxy/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: feed-tor-proxy
  labels:
    helm.sh/chart: tor-proxy-0.0.5
    app.kubernetes.io/name: tor-proxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.4.7.10"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9050
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: tor-proxy
    app.kubernetes.io/instance: release-name
---
# Source: omnia-feed/charts/spire/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: feed-spire
  labels:
    helm.sh/chart: spire-0.1.0
    app.kubernetes.io/name: spire
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.11.0-dev.5"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: libp2p
    - port: 9100
      targetPort: 9100
      protocol: TCP
      name: rpc
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: webapi
  selector:
    app.kubernetes.io/name: spire
    app.kubernetes.io/instance: release-name
---
# Source: omnia-feed/charts/ssb-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-ssb-server
  labels:
    helm.sh/chart: ssb-server-0.0.2
    app.kubernetes.io/name: ssb-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.13.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8007
      targetPort: 8007
      protocol: TCP
      name: net
  selector:
    app.kubernetes.io/name: ssb-server
    app.kubernetes.io/instance: release-name
---
# Source: omnia-feed/charts/gofer/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-gofer
  labels:
    helm.sh/chart: gofer-0.0.3
    app.kubernetes.io/name: gofer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.10.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: gofer
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gofer
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-gofer
      securityContext:
        {}
      containers:
        - name: gofer
          securityContext:
            {}
          image: "ghcr.io/chronicleprotocol/gofer:0.11.0-dev.5"
          imagePullPolicy: IfNotPresent
          args: ["agent", "-v", "debug"]
          ports:
            - name: listener
              containerPort: 9200
              protocol: TCP
          # readinessProbe:
          #   tcpSocket:
          #     port: 9200
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          # livenessProbe:
          #   tcpSocket:
          #     port: 9200
          #   initialDelaySeconds: 15
          #   periodSeconds: 20
          resources:
            {}
          volumeMounts:
          env:            
            - name: CFG_ETH_RPC_URLS
              value: "https://eth-mainnet.public.blastapi.io,https://eth.public-rpc.com"

      volumes:
      - name: config
        configMap:
          name: release-name-gofer-config
---
# Source: omnia-feed/charts/spire/charts/tor-proxy/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: feed-tor-proxy
  labels:
    helm.sh/chart: tor-proxy-0.0.5
    app.kubernetes.io/name: tor-proxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.4.7.10"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tor-proxy
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tor-proxy
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: feed-tor-proxy
      securityContext:
        {}
      containers:
        - name: tor-proxy
          securityContext:
            {}
          image: "btcpayserver/tor:0.4.7.10"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 9050
              protocol: TCP
          # livenessProbe:
          #   exec:
          #     command:
          #     - /bin/sh
          #     - -c
          #     - "echo authenticate '""' | nc 127.0.0.1 9050 && echo signal NEWNYM | nc 127.0.0.1 9050"
          #   initialDelaySeconds: 30
          #   periodSeconds: 10
          # readinessProbe:
          #   exec:
          #     command:
          #     - /bin/sh
          #     - -c
          #     - "echo authenticate '""' | nc 127.0.0.1 9050"
          resources:
            {}
          env:            
            - name: TOR_EXTRA_ARGS
              value: "AutomapHostsOnResolve 1\nControlSocketsGroupWritable 1\nCookieAuthentication 1\nCookieAuthFileGroupReadable 1\nDNSPort 5353\nExitPolicy reject *:*\nLog notice stderr\nRunAsDaemon 0\nControlSocket /home/tor/.tor/control_socket\nCookieAuthFile /home/tor/.tor/control_socket.authcookie\nDataDirectory /home/tor/.tor\nHiddenServiceDir /var/lib/tor/hidden_services\nHiddenServicePort 8888 feed-spire:8080\nHiddenServiceVersion\n"
          volumeMounts:
            - name: tor-hidden-services
              mountPath: /var/lib/tor/hidden_services
      volumes:
        - name: tor-hidden-services
          emptyDir: {}
---
# Source: omnia-feed/charts/spire/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: feed-spire
  labels:
    helm.sh/chart: spire-0.1.0
    app.kubernetes.io/name: spire
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.11.0-dev.5"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: spire
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/config: 2eeae91b5474b819ddab63615bdf8bec6d70e0bd8b6ed90dfa73e2514c9d9a47
      labels:
        app.kubernetes.io/name: spire
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: feed-spire
      securityContext:
        {}
      containers:
        - name: spire
          securityContext:
            {}
          image: "ghcr.io/chronicleprotocol/spire:0.11.0-dev.5"
          imagePullPolicy: IfNotPresent
          args: ["agent", "-v", "debug", "--log.format", "text"]
          ports:
            - name: libp2p
              containerPort: 8000
              protocol: TCP
            - name: rpc
              containerPort: 9100
              protocol: TCP
            - name: webapi
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            tcpSocket:
              port: libp2p
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            tcpSocket:
              port: rpc
          resources:
            {}
          env:            
            - name: CFG_LIBP2P_ENABLE
              value: "true"
            - name: CFG_WEBAPI_LISTEN_ADDR
              value: "0.0.0.0:8080"
            - name: CFG_WEBAPI_SOCKS5_PROXY_ADDR
              value: "feed-tor-proxy:9050"
          volumeMounts:
          - name: keystore
            mountPath: /keystore/
          - name: password
            mountPath: /password/
      volumes:
      - name: keystore
        configMap:
          name: feed-spire-keystore
          items:
          - key: keystore.json
            path: keystore.json
      - name: password
        configMap:
          name: feed-spire-keystore
          items:
          - key: password.txt
            path: password.txt
---
# Source: omnia-feed/charts/ssb-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-ssb-server
  labels:
    helm.sh/chart: ssb-server-0.0.2
    app.kubernetes.io/name: ssb-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.13.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ssb-server
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ssb-server
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-ssb-server
      securityContext:
        {}
      initContainers:
      - name: copy-ssb-configs
        image: busybox
        command: ['sh', '-c', 'cp /config/* /root/.ssb/']
        volumeMounts:
        - name: ssb-dir
          mountPath: /root/.ssb/
        - name: config
          mountPath: /config/
      containers:
        - name: ssb-server
          securityContext:
            {}
          image: "ghcr.io/chronicleprotocol/ssb_server:1.13.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: net
              containerPort: 8007
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {}
          env:            
          volumeMounts:
          - name: ssb-dir
            mountPath: /root/.ssb/
      volumes:
      - name: ssb-dir
        emptyDir: {}
      - name: config
        configMap:
          name: release-name-ssb-server-config
          items:
          - key: config
            path: config
          - key: secret
            path: secret
---
# Source: omnia-feed/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-omnia-feed
  labels:
    helm.sh/chart: omnia-feed-0.0.5
    app.kubernetes.io/name: omnia-feed
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.15.2-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: omnia-feed
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/config: 6bbf4906f1cb5280fb1ab3f961f3a82696cd2f1cc7534613926aa75aa905d56a
      labels:
        app.kubernetes.io/name: omnia-feed
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-omnia-feed
      securityContext:
        {}
      containers:
        - name: omnia-feed
          securityContext:
            {}
          image: "ghcr.io/chronicleprotocol/omnia_feed:1.15.2-rc.0"
          imagePullPolicy: IfNotPresent
          # command: ["sleep", "infinity"]
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          env:
          - name: OMNIA_CONFIG
            value: /config/omnia/omnia.json
          - name: SPIRE_CONFIG
            value: /config/omnia/spire.json
          - name: ETH_RPC_URL
            value: "https://ethereum-goerli-rpc.allthatnode.com"
          - name: ETH_GAS
            value: "7000000"
          resources:
            {}
          volumeMounts:
          - name: omnia
            mountPath: /home/omnia/
          - name: config
            mountPath: /config/omnia/
          - name: keystore
            mountPath: /keystore/
          - name: password
            mountPath: /password/
          - name: ssb-config
            mountPath: /home/omnia/.ssb/
      volumes:
      - name: config
        configMap:
          name: release-name-omnia-feed-config
      - name: omnia
        emptyDir: {}
      - name: ssb-config
        configMap:
          name: release-name-ssb-server-config
      - name: keystore
        configMap:
          name: release-name-omnia-feed-keystore
          items:
          - key: keystore.json
            path: keystore.json
      - name: password
        configMap:
          name: release-name-omnia-feed-keystore
          items:
          - key: password.txt
            path: password.txt
---
# Source: omnia-feed/charts/gofer/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-gofer-test-connection"
  labels:
    helm.sh/chart: gofer-0.0.3
    app.kubernetes.io/name: gofer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.10.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: nc
      image: busybox
      command: ['nc']
      args:
        - '-zv'
        - 'release-name-gofer'
        - '9200'
  restartPolicy: Never
---
# Source: omnia-feed/charts/spire/charts/tor-proxy/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "feed-tor-proxy-test-connection"
  labels:
    helm.sh/chart: tor-proxy-0.0.5
    app.kubernetes.io/name: tor-proxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.4.7.10"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: nc
      image: busybox
      command: ['nc']
      args:
        - '-zv'
        - 'feed-tor-proxy'
        - '9050'
  restartPolicy: Never
---
# Source: omnia-feed/charts/spire/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "feed-spire-test-connection"
  labels:
    helm.sh/chart: spire-0.1.0
    app.kubernetes.io/name: spire
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.11.0-dev.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: nc-libp2p
      image: busybox
      command: ['nc']
      args:
        - '-zv'
        - '-v'
        - 'feed-spire'
        - '8000'
    - name: nc-rpc
      image: busybox
      command: ['nc']
      args:
        - '-zv'
        - '-v'
        - 'feed-spire'
        - '9100'
    - name: nc-webapi
      image: busybox
      command: ['nc']
      args:
        - '-zv'
        - '-v'
        - 'feed-spire'
        - '8080'
  restartPolicy: Never
---
# Source: omnia-feed/charts/ssb-server/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-ssb-server-test-connection"
  labels:
    helm.sh/chart: ssb-server-0.0.2
    app.kubernetes.io/name: ssb-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.13.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: nc-net
      image: busybox
      command: ['nc']
      args:
        - '-zv'
        - '-v'
        - 'release-name-ssb-server'
        - '8007'
  restartPolicy: Never
---
# Source: omnia-feed/templates/tests/test-logs.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-omnia-feed-test-logs"
  labels:
    helm.sh/chart: omnia-feed-0.0.5
    app.kubernetes.io/name: omnia-feed
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.15.2-rc.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  serviceAccountName: release-name-omnia-feed-test
  containers:
    - name: test-omnia-feed-logs
      image: bitnami/kubectl:latest
      command:
        - /bin/sh
        - -c
        - |
          echo 'Running tests';
          kubectl logs --namespace default $(kubectl get pods --namespace default -l 'app.kubernetes.io/instance=release-name,app.kubernetes.io/name=omnia-feed' -o jsonpath='{.items[0].metadata.name}') | grep 'INITIALIZATION COMPLETE'
  restartPolicy: Never
