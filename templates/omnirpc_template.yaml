---
# Source: omnirpc/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-omnirpc
  labels:
    helm.sh/chart: omnirpc-0.2.92
    app.kubernetes.io/name: omnirpc
    app.kubernetes.io/instance: release-name
    
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: omnirpc/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-omnirpc-release-name
  labels:
    app: release-name-omnirpc
    chart: "omnirpc"
    release: release-name
    heritage: Helm
data:
  config.yml: |-
    client_type: resty
    chains:
      1:
        rpcs:
          - https://eth.llamarpc.com
        confirmations: 1
---
# Source: omnirpc/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-omnirpc
  labels:
    helm.sh/chart: omnirpc-0.2.92
    app.kubernetes.io/name: omnirpc
    app.kubernetes.io/instance: release-name
    
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 5080
    - name: prometheus
      port: 8080
      targetPort: 8080
  selector:
    app.kubernetes.io/name: omnirpc
    app.kubernetes.io/instance: release-name
---
# Source: omnirpc/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-omnirpc
  labels:
    helm.sh/chart: omnirpc-0.2.92
    app.kubernetes.io/name: omnirpc
    app.kubernetes.io/instance: release-name
    
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: omnirpc
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/config: 51559214e5c4151e169ccdf8841adde1ccfeaea6bcf503f27781ab3a8db2a5f7
      labels:
        app.kubernetes.io/name: omnirpc
        app.kubernetes.io/instance: release-name
        
    spec:
      serviceAccountName: release-name-omnirpc
      securityContext:
        {}
      initContainers:
        - name: copy-release-name-config
          image: busybox
          command: ['sh', '-c', 'cp /configmap/* /config/']
          volumeMounts:
            - name: configmap
              mountPath: /configmap
            - name: release-name-config
              mountPath: /config
      containers:
        - name: omnirpc
          securityContext:
            {}
          image: "ghcr.io/synapsecns/sanguine/omnirpc:latest"
          imagePullPolicy: Always
          args:
            - server
            - --port=5080
            - --config=/config/config.yml
          env:
            - name: GOLOG_LOG_FMT
              value: json
          ports:
            - containerPort: 5080
              name: http
            - containerPort: 8080
              name: prometheus
          livenessProbe:
            httpGet:
              path: /health-check
              port: http
          readinessProbe:
            httpGet:
              path: /health-check
              port: http
          resources:
            {}
          volumeMounts:
            - name: configmap
              mountPath: /config
      volumes:
        - name: release-name-config
          emptyDir: {}
        - name: configmap
          configMap:
            name: release-name-omnirpc-release-name
---
# Source: omnirpc/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-omnirpc-test-connection"
  labels:
    helm.sh/chart: omnirpc-0.2.92
    app.kubernetes.io/name: omnirpc
    app.kubernetes.io/instance: release-name
    
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-omnirpc:80/health-check']
  restartPolicy: Never
