---
# Source: oauth2/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-oauth2
  labels:
    helm.sh/chart: oauth2-1.0.0
    app.kubernetes.io/name: oauth2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.2.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: oauth2/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name
  namespace: "default"
  labels:
    helm.sh/chart: oauth2-1.0.0
    app.kubernetes.io/name: oauth2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.2.1"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  db.password: ""
  token.key: ""
  redis.password: ""
---
# Source: oauth2/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name
  namespace: "default"
  labels:
    helm.sh/chart: oauth2-1.0.0
    app.kubernetes.io/name: oauth2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.2.1"
    app.kubernetes.io/managed-by: Helm
data:
  db.user: ""
  db.host: ""
  db.ssl: "disable"
  db.database: ""
  db.port: "5432"

  token.issuer: ""
  token.ttl: "2"
  token.enable: "true"

  redis.addr: ""
  redis.db: "0"

  web.listen: ":80"
---
# Source: oauth2/templates/hufu/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-oauth2-hufu
  labels:
    helm.sh/chart: oauth2-1.0.0
    app.kubernetes.io/name: oauth2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.2.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: hufu
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: oauth2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: hufu
---
# Source: oauth2/templates/hufu/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-oauth2-hufu
  labels:
    helm.sh/chart: oauth2-1.0.0
    app.kubernetes.io/name: oauth2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.2.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: hufu
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: oauth2
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: hufu
  template:
    metadata:
      labels:
        app.kubernetes.io/name: oauth2
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: hufu
    spec:
      serviceAccountName: release-name-oauth2
      securityContext:
        {}
      containers:
        - name: oauth2
          securityContext:
            {}
          image: "lishimeng/hufu:v1.2.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            {}
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: db.password
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  name: release-name
                  key: db.user
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: release-name
                  key: db.host
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: release-name
                  key: db.port
            - name: DB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: release-name
                  key: db.database
            - name: DB_SSL
              valueFrom:
                configMapKeyRef:
                  name: release-name
                  key: db.ssl

            - name: REDIS_ADDR
              valueFrom:
                configMapKeyRef:
                  name: release-name
                  key: redis.addr
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: redis.password
            - name: REDIS_DB
              valueFrom:
                configMapKeyRef:
                  name: release-name
                  key: redis.db

            - name: TOKEN_ENABLE
              valueFrom:
                configMapKeyRef:
                  name: release-name
                  key: token.enable
            - name: TOKEN_ISSUER
              valueFrom:
                configMapKeyRef:
                  name: release-name
                  key: token.issuer
            - name: TOKEN_TTL
              valueFrom:
                configMapKeyRef:
                  name: release-name
                  key: token.ttl
            - name: TOKEN_KEY
              valueFrom:
                secretKeyRef:
                  name: release-name
                  key: token.key

            - name: WEB_LISTEN
              valueFrom:
                configMapKeyRef:
                  name: release-name
                  key: web.listen
