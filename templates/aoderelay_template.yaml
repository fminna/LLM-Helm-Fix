---
# Source: aoderelay/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-aoderelay
  labels:
    helm.sh/chart: aoderelay-0.1.10
    app.kubernetes.io/name: aoderelay
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.82"
    app.kubernetes.io/managed-by: Helm
---
# Source: aoderelay/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-aoderelay
  labels:
    helm.sh/chart: aoderelay-0.1.10
    app.kubernetes.io/name: aoderelay
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.82"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
---
# Source: aoderelay/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-aoderelay
  labels:
    helm.sh/chart: aoderelay-0.1.10
    app.kubernetes.io/name: aoderelay
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.82"
    app.kubernetes.io/managed-by: Helm
data:
  HOSTNAME: "relay.my.tld"
  RESTRICTED_MODE: "false"
  RUST_LOG: "warn"
  ADDR: "0.0.0.0"
  PORT: "8080"
  DEBUG: "false"
  VALIDATE_SIGNATURES: "true"
  HTTPS: "true"
  PRETTY_LOG: "false"
  PUBLISH_BLOCKS: "true"
  SLED_PATH: "/mnt/sled/db-0.34"
  PROMETHEUS_ADDR: "0.0.0.0"
  PROMETHEUS_PORT: "9000"
---
# Source: aoderelay/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-aoderelay
  labels:
    helm.sh/chart: aoderelay-0.1.10
    app.kubernetes.io/name: aoderelay
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.82"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: aoderelay
    app.kubernetes.io/instance: release-name
---
# Source: aoderelay/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-aoderelay
  labels:
    helm.sh/chart: aoderelay-0.1.10
    app.kubernetes.io/name: aoderelay
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.82"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: aoderelay
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/configmap: b8d4506433a147848a984ab8e03cd14e11c58a247654761bc682bed3001bfe47
        checksum/secret: 8de8abd26b7d66aee782b338354ce34059122c7863b58726b45c6135c29f4d32
        prometheus.io/scrape: "true"
        prometheus.io/port: "9000"
      labels:
        app.kubernetes.io/name: aoderelay
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-aoderelay
      securityContext:
        fsGroup: 65534
      volumes:
        - name: data-volume
          emptyDir: {}
      containers:
        - name: aoderelay
          securityContext:
            {}
          image: "asonix/relay:0.3.82"
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: release-name-aoderelay
            - secretRef:
                name: release-name-aoderelay
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
          volumeMounts:
            - name: data-volume
              mountPath: /mnt
---
# Source: aoderelay/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-aoderelay-test-connection"
  labels:
    helm.sh/chart: aoderelay-0.1.10
    app.kubernetes.io/name: aoderelay
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.3.82"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-aoderelay:8080']
  restartPolicy: Never
