---
# Source: crane/templates/controller-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: crane-scheduler-controller
  namespace: default
  labels:
    helm.sh/chart: crane-0.5.2
    app.kubernetes.io/name: crane
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.5.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: crane/templates/craned-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: craned
  namespace: default
  labels:
    helm.sh/chart: crane-0.5.2
    app.kubernetes.io/name: crane
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.5.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: crane/templates/scheduler-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: scheduler
  namespace: default
  labels:
    helm.sh/chart: crane-0.5.2
    app.kubernetes.io/name: crane
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.5.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: crane/templates/craned-deployment.yaml
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURSakNDQWk2Z0F3SUJBZ0lVY3F6aTdhaHVtYmM2N21ZVzVWTWxwWjVidTIwd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0VERU9NQXdHQTFVRUF3d0ZZM0poYm1Vd0hoY05Nakl3TmpBMk1UTXhPVEEyV2hjTk16SXdOakF6TVRNeApPVEEyV2pBaU1TQXdIZ1lEVlFRRERCZGpjbUZ1WldRdVkzSmhibVV0YzNsemRHVnRMbk4yWXpDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUtzczd2RXJDWFl4RTFFOUk5c1JXM3BJU2laSUQ4VmYKaklXNHJwRGxtVDhTYThJSzdjTVVaTVhSZ1EwNitHSTdhL2FaeXpDTGFnS2NHNWtzVHlxcEdLRUs1cWtWVG1lNgpXM2lOY2l5RzluTVg1bEo4M3l2Zmlha1AvRUVZZk52M3RqZlVtam9OZDVIVVVSdVVjTmhacVd5Um5FNFMwaE1uCjZPRnhCTTE5SmQvYnlxKzdGRWZnYXFkUEhlWFdMSFRYRElpV3dDU1FGUzZwNkl2RzErSzZYNmYxbzhUQUV2cm0KMXlKMldUUFVzTC9mU0M2dU4rdkpxMUNhbFZQNEVSR2lsdVBvYlo4WDFlMXZkZ3NCT2NTN29Nd3h6Ulc1WkRvNAppM2dmZFBwRU1panlTSFNZQWU2ZXloZzUwdHliRDZFTWt5bHp4QmR2cXNzRzZkZmNRc2FMSitzQ0F3RUFBYU9CCmhUQ0JnakFKQmdOVkhSTUVBakFBTUFzR0ExVWREd1FFQXdJRjREQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQWdZSUt3WUJCUVVIQXdFd1NRWURWUjBSQkVJd1FJSVhZM0poYm1Wa0xtTnlZVzVsTFhONWMzUmxiUzV6ZG1PQwpKV055WVc1bFpDNWpjbUZ1WlMxemVYTjBaVzB1YzNaakxtTnNkWE4wWlhJdWJHOWpZV3d3RFFZSktvWklodmNOCkFRRUxCUUFEZ2dFQkFGU1FqT1k2QUZRQTEzbWFqUWc4dTFWb3hKL1hzck1CMG9sZHlVdWQzSC9Sa1BNM1ZLUU8KR0R3bWUvRTZUbXZ1Q3l6WFJ6UEdPdXhwT0JocHdpUFRaVHhkaWM0VEk3YWt5TU1TbTF4RURPdDJidW1odks0TAo5bWxJNlZrcXlRS2ZSR05jaDNTU3RtTCtnRlRwbEswZXA5S1NCVnltYi9ueFRqOHNDU05SeTFjNElnOS91OTRtCngrQmpMMm5LMlFjSTVaWnFjVlppSHRZT2FOb3lCNWlXWnpOZlZ0QmlxYzdrTFJTSlZoNVpQdE1iMm1CMDdNdXEKL0svRzlSbjVHeU90c0VvZFVaVGtYaVBXcTFSM2lBQnNLNldUNFQ5QzZzalJ4V0NjMmpob1ZzK3BKM3Fvc0kwKwoxREtzczNlRTZwRDdtUm54bm1mWHpQa2tGaHVlcThVdzZUOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcXl6dThTc0pkakVUVVQwajJ4RmJla2hLSmtnUHhWK01oYml1a09XWlB4SnJ3Z3J0Cnd4Umt4ZEdCRFRyNFlqdHI5cG5MTUl0cUFwd2JtU3hQS3FrWW9Rcm1xUlZPWjdwYmVJMXlMSWIyY3hmbVVuemYKSzkrSnFRLzhRUmg4Mi9lMk45U2FPZzEza2RSUkc1UncyRm1wYkpHY1RoTFNFeWZvNFhFRXpYMGwzOXZLcjdzVQpSK0JxcDA4ZDVkWXNkTmNNaUpiQUpKQVZMcW5vaThiWDRycGZwL1dqeE1BUyt1YlhJblpaTTlTd3Y5OUlMcTQzCjY4bXJVSnFWVS9nUkVhS1c0K2h0bnhmVjdXOTJDd0U1eEx1Z3pESE5GYmxrT2ppTGVCOTAra1F5S1BKSWRKZ0IKN3A3S0dEblMzSnNQb1F5VEtYUEVGMitxeXdicDE5eEN4b3NuNndJREFRQUJBb0lCQURBbkg4QndIdVZFd081bAppS1NqcVZ3bzRkTUxDb1MzY0V4ZHU1Mi9PUERwT2E4SWJBSW94b0J2Z3lJNXFJM1pzWEZacWpNcHhOU2ZIWlJsClJvLzFxWndEK1Fjdm16TEsxZGgvMGRKODFPOWpsY00ycFlFdURRZW1HNHdrVzF0MXY2ak5BZVc2ekJ3VjRnc2sKSXVwNXJwT0FFcnhUeHd6a2VUcVNGSXZKM05Hd0NKTTEwUU8reUxDOEk2K0s3UzZHTVNxUkhKSUpXWnNBZ24rTwpYRmQxa056OWg3aS9ER004eEhVMHlBZlBTMG9ya29CT3JHekFMY3ZsN0NZWnU5NlBDL1o5ajN4cmU4ZnFCdk9BCm15VlQreXRuYmN3TmhDMktWbm5SVmZhSGwyS0RRNDJWQmRORmxwbVlDYkNJQVRmRmNtMFo1RlBLTms5aDYzN0UKS0RtbGtHRUNnWUVBNDFXaWNCRUhzekRSV0VpcG9IOHFVZnFBQXUzVldkSkpQSTRVV1kwMUdYNFhFdG9CNHlGUApBYTQ3M0c0NDBwSkI4aFVuVHZ0NzRGZTZFb1M4b0JyNjBFaGF5OHZLV1puSElrN1FlRURIdGtKRnhnK1YyMUxTCms4SThIT0VNekdzbUtmRzV2ZFVkaFlRVHdzam0xR2FOR2VFNFBCdDltbCs5MU9jN0VGc0RURFVDZ1lFQXdNSjgKSGVOc1Npanc2R043ekJlZTJOOEtKSWxaK3VYUmcvRjNPdUVFOXMvYkRwU09kWlN6LzZQQnFjRUNGSmNwdmJDbApBUnVzeXR3cU4yL0lSYkRvWkxmNGFqTG9TRml2MTFvYlZidno2TVVZWTlnb2g4NWVhZG1wSXprVHFBZjNlRkEwClhkNGpHSDBQdm9mOUZJU09WRE1Dc0xyUU5ZQUFBSXZFZXlndjU1OENnWUEwSDBRNUVZNkVaU0w2Yk42SGIrQ1MKSHk4T2ZOMDMxT0Q1dzFHakhwOFlFekxUSGF6bEdKUDJ2SzM0NGtTZzh1dXZ4MjNWekE4ZzVyeEExckl3dXo3YQpWbHlLOFZTWnFvcGZzVlpXMi9OdU5FK3ZFNCsyVTR6NFY4WlVrTHpRZVppc2NVRzI1by80TnNvWkZOcm54QU9CCjlZTmhOS1JkcXFucGtJS1lRMlhFS1FLQmdRQy9XRkFjMjBVRDJPQkx6M1YwZzM0TGlseG5LSEZKdmhqZEFUVjYKSFNUd1hDVDN0RUEyT0FiMkhYaUJLamNHZVlmVjVTUG1sYkpSTFh3Nnk1dmlrbG9lb1FEWGF2RnAzNSt1QnFSYgoxdGVvbVA0OUhyWWRHWjVmTk5IUlJUZGQ5WXFTeEFzM291cnp4REY4MFVGSXZNME1pQmFEbU81V0xWblRNT3M1CjFncTN3UUtCZ0NWL2NkZjhGWHFoTFhyVDRTNHAweVRoQVVVN1lGYjJSTjFvS2ZRZlBJZTdpTHVPdThDeXdrc0UKS1E2T2FwdWRUN205czdhaHJpNUlqcXJhZC9BNWNYOEZycW5rMU5RUUpvQjUyVDRIK0l2N0xKYm1jaW9aaFZ6UgpWN2lJZXI4Ti9nWXFnblNyV3ZwN3NmdXFnQ3ZnVTdrOTUvV2hGclBQdkFPNDNocE1JS2wxCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: webhook-server-tls
  namespace: default
  labels:
    helm.sh/chart: crane-0.5.2
    app.kubernetes.io/name: crane
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.5.2"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
---
# Source: crane/templates/controller-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: dynamic-scheduler-policy
  namespace: default
  labels:
    helm.sh/chart: crane-0.5.2
    app.kubernetes.io/name: crane
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.5.2"
    app.kubernetes.io/managed-by: Helm
data:
  policy.yaml: |
    apiVersion: scheduler.policy.crane.io/v1alpha1
    kind: DynamicSchedulerPolicy
    spec:
      syncPolicy:
        ##cpu usage
        - name: cpu_usage_avg_5m
          period: 3m
        - name: cpu_usage_max_avg_1h
          period: 15m
        - name: cpu_usage_max_avg_1d
          period: 3h
        ##memory usage
        - name: mem_usage_avg_5m
          period: 3m
        - name: mem_usage_max_avg_1h
          period: 15m
        - name: mem_usage_max_avg_1d
          period: 3h

      predicate:
        ##cpu usage
        - name: cpu_usage_avg_5m
          maxLimitPecent: 0.65
        - name: cpu_usage_max_avg_1h
          maxLimitPecent: 0.75
        ##memory usage
        - name: mem_usage_avg_5m
          maxLimitPecent: 0.65
        - name: mem_usage_max_avg_1h
          maxLimitPecent: 0.75

      priority:
        ###score = sum(() * weight) / len,  0 <= score <= 10
        ##cpu usage
        - name: cpu_usage_avg_5m
          weight: 0.2
        - name: cpu_usage_max_avg_1h
          weight: 0.3
        - name: cpu_usage_max_avg_1d
          weight: 0.5
        ##memory usage
        - name: mem_usage_avg_5m
          weight: 0.2
        - name: mem_usage_max_avg_1h
          weight: 0.3
        - name: mem_usage_max_avg_1d
          weight: 0.5

      hotValue:
        - timeRange: 5m
          count: 5
        - timeRange: 1m
          count: 2
---
# Source: crane/templates/craned-deployment.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: recommendation-config
  namespace: default
  labels:
    helm.sh/chart: crane-0.5.2
    app.kubernetes.io/name: crane
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.5.2"
    app.kubernetes.io/managed-by: Helm
data:
  config_set.yaml: |-
    apiVersion: analysis.crane.io/v1alpha1
    kind: ConfigSet
    configs:
      - targets: []
        properties:
          resource.cpu-request-percentile: "0.98"
          replicas.workload-min-replicas: "3"
          replicas.pod-min-ready-seconds: "30"
          replicas.pod-available-ratio: "0.5"
          replicas.default-min-replicas: "3"
          replicas.max-replicas-factor: "3"
          replicas.min-cpu-usage-threshold: "0.1"
          replicas.fluctuation-threshold: "1.0"
          replicas.min-cpu-target-utilization: "30"
          replicas.max-cpu-target-utilization: "75"
          replicas.cpu-target-utilization: "30"
          replicas.cpu-percentile: "95"
          replicas.reference-hpa: "true"
---
# Source: crane/templates/scheduler-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: scheduler-config
  namespace: default
  labels:
    helm.sh/chart: crane-0.5.2
    app.kubernetes.io/name: crane
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.5.2"
    app.kubernetes.io/managed-by: Helm
data:
  scheduler-config.yaml: |
    apiVersion: kubescheduler.config.k8s.io/v1beta2
    kind: KubeSchedulerConfiguration
    leaderElection:
      leaderElect: false
    profiles:
    - schedulerName: crane-scheduler
      plugins:
        filter:
          enabled:
          - name: Dynamic
        score:
          enabled:
          - name: Dynamic
            weight: 3
      pluginConfig:
      - name: Dynamic
        args:
          policyConfigPath: /etc/kubernetes/policy.yaml
---
# Source: crane/templates/controller-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: crane-scheduler-controller
  labels:
    helm.sh/chart: crane-0.5.2
    app.kubernetes.io/name: crane
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.5.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - nodes
  - namespaces
  verbs:
  - list
  - watch
  - get
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  verbs:
  - get
  - list
  - watch
  - update
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: crane/templates/craned-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: craned
  labels:
    helm.sh/chart: crane-0.5.2
    app.kubernetes.io/name: crane
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.5.2"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [ '*' ]
    resources: [ '*' ]
    verbs: [ "*" ]
---
# Source: crane/templates/scheduler-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: scheduler
  labels:
    helm.sh/chart: crane-0.5.2
    app.kubernetes.io/name: crane
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.5.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  - events.k8s.io
  resources:
  - events
  verbs:
  - create
  - patch
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
- apiGroups:
  - coordination.k8s.io
  resourceNames:
  - kube-scheduler
  resources:
  - leases
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - create
- apiGroups:
  - ""
  resourceNames:
  - kube-scheduler
  resources:
  - endpoints
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - bindings
  - pods/binding
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - pods/status
  verbs:
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - replicationcontrollers
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  - extensions
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - persistentvolumes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - storage.k8s.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - namespaces
  verbs:
  - get
  - list
  - watch
---
# Source: crane/templates/controller-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: crane-scheduler-controller
  labels:
    helm.sh/chart: crane-0.5.2
    app.kubernetes.io/name: crane
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.5.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: crane-scheduler-controller
subjects:
- kind: ServiceAccount
  name: crane-scheduler-controller
  namespace: default
---
# Source: crane/templates/craned-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: craned
  labels:
    helm.sh/chart: crane-0.5.2
    app.kubernetes.io/name: crane
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.5.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: craned
subjects:
  - kind: ServiceAccount
    name: craned
    namespace: default
---
# Source: crane/templates/scheduler-rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: scheduler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: scheduler
subjects:
- kind: ServiceAccount
  name: scheduler
  namespace: default
---
# Source: crane/templates/craned-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: craned
  namespace: default
  labels:
    helm.sh/chart: crane-0.5.2
    app.kubernetes.io/name: crane
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.5.2"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 9443
      name: craned
    - port: 8082
      protocol: TCP
      targetPort: 8082
      name: crane-server
    - port: 9090
      protocol: TCP
      targetPort: 9090
      name: dashboard-service
    - name: metrics-http
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: craned
---
# Source: crane/templates/controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    helm.sh/chart: crane-0.5.2
    app.kubernetes.io/name: crane
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.5.2"
    app.kubernetes.io/managed-by: Helm
    app: crane-scheduler-controller
  name: crane-scheduler-controller
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: crane-scheduler-controller
  template:
    metadata:
      labels:
        app: crane-scheduler-controller
    spec:
      serviceAccountName: crane-scheduler-controller
      containers:
        - name: crane-scheduler-controller
          env:
            - name: TZ
              value: Asia/Shanghai
            - name: CRANE_SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          command:
            - /controller
            - --policy-config-path=/data/policy.yaml
            - --prometheus-address=http://prometheus-k8s.kubesphere-monitoring-system.svc.cluster.local:9090
          image:  "docker.io/gocrane/crane-scheduler-controller:0.1.23"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /data
              name: dynamic-scheduler-policy
          resources:
            requests:
              cpu: 200m
              memory: 200Mi
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
        - configMap:
            defaultMode: 420
            name: dynamic-scheduler-policy
          name: dynamic-scheduler-policy
---
# Source: crane/templates/craned-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: craned
  namespace: default
  labels:
    helm.sh/chart: crane-0.5.2
    app.kubernetes.io/name: crane
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.5.2"
    app.kubernetes.io/managed-by: Helm
    app: craned
spec:
  replicas: 1
  selector:
    matchLabels:
      app: craned
  template:
    metadata:
      labels:
        app: craned
    spec:
      serviceAccountName: craned
      containers:
        - name: craned
          image: "docker.io/gocrane/craned:v0.5.1"
          imagePullPolicy: IfNotPresent
          env:
            - name: TZ
              value: Asia/Shanghai
            - name: CRANE_SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          command:
            - /craned
          args:
            - --recommendation-config-file=/tmp/recommendation-config/config_set.yaml
            - --prometheus-address=http://prometheus-k8s.kubesphere-monitoring-system.svc.cluster.local:9090
            - --feature-gates=Analysis=true,TimeSeriesPrediction=true,Autoscaling=true
            - --v=2
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
            - name: config
              mountPath: /tmp/recommendation-config
          ports:
            - name: http
              containerPort: 9443
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /api/healthz
              port: 8082
              scheme: HTTP
          resources:
            {}
        
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: webhook-server-tls
        - name: config
          configMap:
            name: recommendation-config
---
# Source: crane/templates/scheduler-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    helm.sh/chart: crane-0.5.2
    app.kubernetes.io/name: crane
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.5.2"
    app.kubernetes.io/managed-by: Helm
    component: scheduler
  name: crane-scheduler
  namespace: default
spec:
  selector:
    matchLabels:
      component: scheduler
  replicas: 1
  template:
    metadata:
      labels:
        component: scheduler
    spec:
      serviceAccountName: scheduler
      containers:
      - command:
        - /scheduler
        - --leader-elect=false
        - --config=/etc/kubernetes/kube-scheduler/scheduler-config.yaml
        image: "docker.io/gocrane/crane-scheduler:0.0.23"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10259
            scheme: HTTPS
          initialDelaySeconds: 15
        name: crane-scheduler
        readinessProbe:
          httpGet:
            path: /healthz
            port: 10259
            scheme: HTTPS
        resources:
          requests:
            cpu: '0.2'
        securityContext:
          privileged: false
        volumeMounts:
        - name: scheduler-config
          mountPath: /etc/kubernetes/kube-scheduler
          readOnly: true
        - name: dynamic-scheduler-policy
          mountPath: /etc/kubernetes
          readOnly: true
      hostNetwork: false
      hostPID: false
      volumes:
      - name: scheduler-config
        configMap:
          name: scheduler-config
      - name: dynamic-scheduler-policy
        configMap:
          name: dynamic-scheduler-policy
---
# Source: crane/templates/scheduler-prometheus-rules.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: crane-scheduler-rules
  namespace: default
  labels:
    helm.sh/chart: crane-0.5.2
    app.kubernetes.io/name: crane
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.5.2"
    app.kubernetes.io/managed-by: Helm
    prometheus: k8s
    role: alert-rules
spec:
  groups:
    - name: scheduler.rules.30s
      interval: 30s
      rules:
        - record: cpu_usage_active
          expr: 100 - (avg by (instance) (irate(node_cpu_seconds_total{mode="idle"}[90s])) * 100)
        - record: mem_usage_active
          expr: 100*(1-node_memory_MemAvailable_bytes/node_memory_MemTotal_bytes)
    - name: scheduler.rules.1m
      interval: 1m
      rules:
        - record: cpu_usage_avg_5m
          expr: avg_over_time(cpu_usage_active[5m])
        - record: mem_usage_avg_5m
          expr: avg_over_time(mem_usage_active[5m])
    - name: scheduler.rules.5m
      interval: 5m
      rules:
        - record: cpu_usage_max_avg_1h
          expr: max_over_time(cpu_usage_avg_5m[1h])
        - record: cpu_usage_max_avg_1d
          expr: max_over_time(cpu_usage_avg_5m[1d])
        - record: mem_usage_max_avg_1h
          expr: max_over_time(mem_usage_avg_5m[1h])
        - record: mem_usage_max_avg_1d
          expr: max_over_time(mem_usage_avg_5m[1d])
