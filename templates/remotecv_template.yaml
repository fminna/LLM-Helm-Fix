---
# Source: remotecv/charts/redis/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-redis
  labels:
    app: release-name-redis
    chart: "redis-0.4.5"
    release: "release-name"
    heritage: "Helm"
type: Opaque
data:
  
  redis-password: "ckhmMHBxdzJOUA=="
---
# Source: remotecv/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-remotecv
  labels:
    chart: "remotecv-0.1.1"
data:
  log.level: "info"
  redis.host: release-name-redis
  redis.port: "6379"
  redis.database: "0"
  app.loader: "remotecv.http_loader"
  app.store: "remotecv.result_store.redis_store"
  app.timeout: "60"
  sentry.url: ""
---
# Source: remotecv/charts/redis/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-redis
  labels:
    app: release-name-redis
    chart: "redis-0.4.5"
    release: "release-name"
    heritage: "Helm"
  annotations:
    volume.alpha.kubernetes.io/storage-class: default
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: remotecv/charts/redis/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-redis
  labels:
    app: release-name-redis
    chart: "redis-0.4.5"
    release: "release-name"
    heritage: "Helm"
spec:
  ports:
  - name: redis
    port: 6379
    targetPort: redis
  selector:
    app: release-name-redis
---
# Source: remotecv/charts/redis/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-redis
  labels:
    app: release-name-redis
    chart: "redis-0.4.5"
    release: "release-name"
    heritage: "Helm"
spec:
  template:
    metadata:
      labels:
        app: release-name-redis
    spec:
      containers:
      - name: release-name-redis
        image: "bitnami/redis:3.2.6-r2"
        imagePullPolicy: "IfNotPresent"
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: release-name-redis
              key: redis-password
        ports:
        - name: redis
          containerPort: 6379
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - name: redis-data
          mountPath: /bitnami/redis
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: release-name-redis
---
# Source: remotecv/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-remotecv
  labels:
    chart: "remotecv-0.1.1"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: release-name-remotecv
      annotations:
        checksum/config: 2de696b980c49d852df37cceab2bd6efd127239dfb6d4cec862f32a22e32aa1d
    spec:
      containers:
      - name: remotecv
        image: "cloudposse/remotecv:latest"
        imagePullPolicy: Always
        env:
        - name: "LOG_LEVEL"
          valueFrom:
            configMapKeyRef:
              name: release-name-remotecv
              key: log.level
        - name: "REDIS_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: release-name-redis
              key: redis-password
        - name: "REDIS_HOST"
          valueFrom:
            configMapKeyRef:
              name: release-name-remotecv
              key: redis.host
        - name: "REDIS_PORT"
          valueFrom:
            configMapKeyRef:
              name: release-name-remotecv
              key: redis.port
        - name: "REDIS_DATABASE"
          valueFrom:
            configMapKeyRef:
              name: release-name-remotecv
              key: redis.database
        - name: "LOADER"
          valueFrom:
            configMapKeyRef:
              name: release-name-remotecv
              key: app.loader
        - name: "STORE"
          valueFrom:
            configMapKeyRef:
              name: release-name-remotecv
              key: app.store
        - name: "TIMEOUT"
          valueFrom:
            configMapKeyRef:
              name: release-name-remotecv
              key: app.timeout
        - name: "SENTRY_URL"
          valueFrom:
            configMapKeyRef:
              name: release-name-remotecv
              key: sentry.url
        resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
