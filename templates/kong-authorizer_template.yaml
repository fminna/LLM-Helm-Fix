---
# Source: kong-authorizer/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kong-authorizer
  labels:
    helm.sh/chart: kong-authorizer-2.21.0
    app.kubernetes.io/name: kong-authorizer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.21.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kong-authorizer/templates/dockerregistry.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/dockerconfigjson
metadata:
  name: docker.cloudentity.io
data:
  .dockerconfigjson: eyJhdXRocyI6eyJkb2NrZXIuY2xvdWRlbnRpdHkuaW8iOnsidXNlcm5hbWUiOiJhdXRob3JpemVycyIsInBhc3N3b3JkIjoiek0zRjMzSWZWWWx5Q3BCZUVpUkxYN0tpc0RHU2plUVkiLCJhdXRoIjoiWVhWMGFHOXlhWHBsY25NNmVrMHpSak16U1daV1dXeDVRM0JDWlVWcFVreFlOMHRwYzBSSFUycGxVVms9In19fQ==
---
# Source: kong-authorizer/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-kong-authorizer
  labels:
    helm.sh/chart: kong-authorizer-2.21.0
    app.kubernetes.io/name: kong-authorizer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.21.0"
    app.kubernetes.io/managed-by: Helm
data:
  clientID: YzdjN21nbXZkM2liZjZrMTI0bjA=
  clientSecret: VHVJRW1TV0h0VS0wZnRPTzc0NDVuY2NvbXF1NzFWNFdjdjRTVzNmenZpTQ==
stringData:
  config.yaml: |
    token_exchange:
      enabled: false
      inject:
        mode: InjectExchangedToken
        headers:
          original_token: 
          exchanged_token: Authorization
          strip_bearer: false
      request_scopes: original_token
---
# Source: kong-authorizer/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-kong-authorizer
  labels:
    helm.sh/chart: kong-authorizer-2.21.0
    app.kubernetes.io/name: kong-authorizer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.21.0"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    http_server:
      certificate:
    logging:
      level: info
    discovery:
      enabled: true
    enforcement:
      allow_unknown: false
    kong:
      admin_url: http://kong-kong-admin.kong-system:8001
  extraconfig.yaml: |
---
# Source: kong-authorizer/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kong-authorizer
  labels:
    helm.sh/chart: kong-authorizer-2.21.0
    app.kubernetes.io/name: kong-authorizer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.21.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9003
      name: http
      protocol: TCP
  selector:
    app.kubernetes.io/name: kong-authorizer
    app.kubernetes.io/instance: release-name
---
# Source: kong-authorizer/templates/deployment.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: release-name-kong-authorizer
  labels:
    helm.sh/chart: kong-authorizer-2.21.0
    app.kubernetes.io/name: kong-authorizer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.21.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kong-authorizer
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/config: bab4e051d07e678929d286e2c7c1bfc8da73c41febb5fafa5c35b02bf9b21602
      labels:
        app.kubernetes.io/name: kong-authorizer
        app.kubernetes.io/instance: release-name
    spec:
      imagePullSecrets:
        - name: docker.cloudentity.io
      serviceAccountName: release-name-kong-authorizer
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: kong-authorizer
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          image: "docker.cloudentity.io/kong-authorizer:2.21.0"
          imagePullPolicy: IfNotPresent
          args:
            - --config
            - /data/config.yaml,/data/extraconfig.yaml,/secret/config.yaml
          env:
            - name: ACP_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: release-name-kong-authorizer
                  key: clientID
            - name: ACP_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: release-name-kong-authorizer
                  key: clientSecret
            - name: ACP_ISSUER_URL
              value: "https://acp.acp-system:8443/default/system"
            - name: KONG_ADMIN_URL
              value: ""
            - name: ACP_TENANT_ID
              value: ""
            - name: ACP_SERVER_ID
              value: ""
          ports:
            - name: http
              containerPort: 9003
              protocol: TCP
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /alive
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              scheme: HTTPS
              path: /alive
              port: http
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
              requests:
                cpu: 100m
                memory: 200Mi
              limits:
                cpu: 200m
                memory: 200Mi
            
          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /secret
              name: secret
              readOnly: true
      volumes:
        - name: data
          configMap:
            name: release-name-kong-authorizer
        - name: secret
          secret:
            secretName: release-name-kong-authorizer
            items:
            - key: config.yaml
              path: config.yaml
---
# Source: kong-authorizer/templates/tests/allow-request.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-allow-request-validation-test"
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: release-name-allow-request-istio-validate-test
      image: curlimages/curl
      args: 
        - --insecure
        - http://kong-kong-proxy.kong-system:80/headers
  restartPolicy: Never
---
# Source: kong-authorizer/templates/tests/block-request.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-block-access-validation-test"
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: release-name-block-access-istio-validate-test
      image: curlimages/curl
      command: ["/bin/sh", "-c", "[ $(curl --insecure --silent --output /dev/null --write-out \"%{http_code}\" http://kong-kong-proxy.kong-system:80/anything) -eq 403 ]"]
  restartPolicy: Never
