---
# Source: tyk-mdcb-data-plane/charts/tyk-gateway/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: secrets-release-name-tyk-gateway
  labels:
    app: secrets-data-release-name-tyk-gateway
    chart: release-name-tyk-gateway
    release: release-name
    heritage: Helm
type: Opaque
stringData:
  redisPass: ""
  APISecret: "CHANGEME"
---
# Source: tyk-mdcb-data-plane/charts/tyk-pump/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: secrets-release-name-tyk-pump
  labels:
    app: secrets-data-release-name-tyk-pump
    chart: release-name-tyk-pump
    release: release-name
    heritage: Helm
type: Opaque
stringData:
  redisPass: ""
  mongoURL: "mongodb://mongo.default.svc.cluster.local:27017/tyk_analytics"
  pgConnectionString: database=tyk_analytics host=tyk-postgres-postgresql.tyk.svc.cluster.local port=5432 sslmode=disable user=postgres
---
# Source: tyk-mdcb-data-plane/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: secrets-release-name-tyk-mdcb-data-plane
  namespace: default
  labels:
    app: secrets-tyk-data-plane
    release: release-name
type: Opaque
stringData:
  APISecret: "CHANGEME"
---
# Source: tyk-mdcb-data-plane/charts/tyk-gateway/templates/service-gw.yaml
apiVersion: v1
kind: Service
metadata:
  name: gateway-svc-release-name-tyk-gateway
  labels:
    app: gateway-svc-release-name-tyk-gateway
    chart: tyk-gateway-1.1.0
    release: release-name
    heritage: Helm
spec:
  type: NodePort
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app: gateway-release-name-tyk-gateway
    release: release-name
---
# Source: tyk-mdcb-data-plane/charts/tyk-gateway/templates/deployment-gw-repset.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-release-name-tyk-gateway
  labels:
    app: gateway-release-name-tyk-gateway
    chart: tyk-gateway-1.1.0
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  minReadySeconds: 5
  strategy:
    # indicate which strategy we want for rolling update
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  selector:
    matchLabels:
      app: gateway-release-name-tyk-gateway
      release: release-name
  template:
    metadata:
      labels:
        app: gateway-release-name-tyk-gateway
        release: release-name
    spec:
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
      initContainers:
      - name: "setup-directories"
        image: busybox:1.32
        command: ['sh','-c','mkdir -p apps middleware policies && touch policies/policies.json']
        workingDir: /mnt/tyk-gateway
        volumeMounts:
          - name: tyk-scratch
            mountPath: /mnt/tyk-gateway
      containers:
      - name: gateway-tyk-gateway
        image: "tykio/tyk-gateway:v5.2.0"
        imagePullPolicy: IfNotPresent
        securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
        env:
          - name: TYK_GW_LISTENPORT
            value: "8080"
          

          # Legacy support for Redis Cluster driver. Driver dropped in v3.0.0.
          - name: REDIGOCLUSTER_SHARDCOUNT
            value: "128"
          - name: TYK_GW_STORAGE_TYPE
            value: "redis"
          - name: TYK_GW_STORAGE_ADDRS
            value: "redis.default.svc.cluster.local:6379"
          
          - name: TYK_GW_STORAGE_ENABLECLUSTER
            value: "false"
         

          - name: TYK_GW_STORAGE_DATABASE
            value: "0"
          - name: TYK_GW_STORAGE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: secrets-release-name-tyk-gateway
                key: redisPass
          - name: TYK_GW_STORAGE_USESSL
            value: "false"
          - name: TYK_GW_SECRET
            valueFrom:
              secretKeyRef:
                name:  secrets-release-name-tyk-gateway 
                key: APISecret
          - name: TYK_GW_NODESECRET
            valueFrom:
              secretKeyRef:
                name:  secrets-release-name-tyk-gateway 
                key: APISecret

          - name: TYK_GW_POLICIES_ALLOWEXPLICITPOLICYID
            value: "true"
          - name: TYK_GW_HTTPSERVEROPTIONS_USESSL
            value: "false"
          - name: TYK_GW_TEMPLATEPATH
            value: "/opt/tyk-gateway/templates"
          - name: TYK_GW_TYKJSPATH
            value: "/opt/tyk-gateway/js/tyk.js"
          - name: TYK_GW_MIDDLEWAREPATH
            value: "/mnt/tyk-gateway/middleware"
          - name: TYK_GW_APPPATH
            value: "/mnt/tyk-gateway/apps"
          - name: TYK_GW_POLICIES_POLICYPATH
            value: "/mnt/tyk-gateway/policies"
          - name: TYK_GW_STORAGE_MAXIDLE
            value: "1000"
          - name: TYK_GW_ENABLENONTRANSACTIONALRATELIMITER
            value: "true"
          - name: TYK_GW_POLICIES_POLICYSOURCE
            value: "rpc"

        # Set this environment variable only if either analyticsEnabled or global.components.pump is set
        
          - name: TYK_GW_ENABLEANALYTICS
            value: "true"

          - name: TYK_GW_ANALYTICSCONFIG_TYPE
            value: ""
          - name: TYK_GW_SLAVEOPTIONS_USERPC
            value: "true"
          - name: TYK_GW_AUTHOVERRIDE_FORCEAUTHPROVIDER
            value: "true"
          - name: TYK_GW_AUTHOVERRIDE_AUTHPROVIDER_STORAGEENGINE
            value: "rpc"
          - name: TYK_GW_SLAVEOPTIONS_RPCKEY
            
            value: ""
            
          - name: TYK_GW_SLAVEOPTIONS_APIKEY
            
            value: ""
            
          - name: TYK_GW_SLAVEOPTIONS_GROUPID
            
            value: ""
            
          - name: TYK_GW_SLAVEOPTIONS_CONNECTIONSTRING
            value: ""
          - name: TYK_GW_SLAVEOPTIONS_USESSL
            value: "true"
          - name: TYK_GW_SLAVEOPTIONS_SSLINSECURESKIPVERIFY
            value: "true"
          - name: TYK_GW_POLICIES_POLICYRECORDNAME
            value: "tyk_policies"
          - name: TYK_GW_HASHKEYS
            value: "true"
          - name: TYK_GW_HASHKEYFUNCTION
            value: "murmur128"
          - name: TYK_GW_HTTPSERVEROPTIONS_ENABLEWEBSOCKETS
            value: "true"
          - name: TYK_GW_HTTPSERVEROPTIONS_MINVERSION
            value: "771"
          - name: TYK_GW_HTTPSERVEROPTIONS_CERTIFICATES
            value: '[{"cert_file":"/etc/certs/tyk-gateway/tls.crt","domain_name":"*","key_file":"/etc/certs/tyk-gateway/tls.key"}]'
          - name: TYK_GW_HTTPSERVEROPTIONS_SSLINSECURESKIPVERIFY
            value: "false"
          - name: TYK_GW_ALLOWINSECURECONFIGS
            value: "true"
          - name: TYK_GW_COPROCESSOPTIONS_ENABLECOPROCESS
            value: "true"
          - name: TYK_GW_GLOBALSESSIONLIFETIME
            value: "100"
          - name: TYK_GW_MAXIDLECONNSPERHOST
            value: "500"
          - name: TYK_GW_ENABLECUSTOMDOMAINS
            value: "true"
          - name: TYK_GW_PIDFILELOCATION
            value: "/mnt/tyk-gateway/tyk.pid"

          - name: TYK_GW_DBAPPCONFOPTIONS_CONNECTIONSTRING
            value: "http://dashboard-svc-release-name-tyk-dashboard.default.svc.cluster.local:3000"
          - name: TYK_GW_POLICIES_POLICYCONNECTIONSTRING
            value: "http://dashboard-svc-release-nametyk-dashboard.default.svc.cluster.local:3000"
          - name: TYK_GW_DBAPPCONFOPTIONS_NODEISSEGMENTED
            value: "false"
        command: ["/opt/tyk-gateway/tyk"]
        workingDir: /opt/tyk-gateway
        ports:
        - containerPort: 8080
        resources:
            {}
        volumeMounts:
          
          - name: tyk-scratch
            mountPath: /mnt/tyk-gateway
        livenessProbe:
          httpGet:
            scheme: "HTTP"
            path: /hello
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 2
          timeoutSeconds: 3
          failureThreshold: 2
        readinessProbe:
          httpGet:
            scheme: "HTTP"
            path: /hello
            port: 8080
          initialDelaySeconds: 1
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
      securityContext:
          fsGroup: 2000
          runAsUser: 1000
      volumes:
        - name: tyk-scratch
          emptyDir: {}
---
# Source: tyk-mdcb-data-plane/charts/tyk-pump/templates/deployment-pmp.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pump-release-name-tyk-pump
  labels:
    app: pump-release-name-tyk-pump
    chart: tyk-pump-1.1.0
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pump-release-name-tyk-pump
      release: release-name
  template:
    metadata:
      labels:
        app: pump-release-name-tyk-pump
        release: release-name
    spec:
      containers:
      - name: pump-tyk-pump
        image: "docker.tyk.io/tyk-pump/tyk-pump:v1.8.3"
        imagePullPolicy: IfNotPresent
        workingDir: "/opt/tyk-pump"
        ports:
          - name: tyk-pump-port
            containerPort: 9090
        securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
        env:
          # Legacy support for Redis Cluster driver. Driver dropped in v3.0.0.
          - name: REDIGOCLUSTER_SHARDCOUNT
            value: "128"
         
          # Configure Hybrid Pump for Tyk Pump
          - name: TYK_PMP_PUMPS_HYBRID_TYPE
            value: hybrid
          - name: TYK_PMP_PUMPS_HYBRID_META_CONNECTIONSTRING
            value: ""
          - name: TYK_PMP_PUMPS_HYBRID_META_RPCKEY
            value: ""
          - name: TYK_PMP_PUMPS_HYBRID_META_APIKEY
            value: ""
          - name: TYK_PMP_PUMPS_HYBRID_META_GROUPID
            value: ""
          - name: TYK_PMP_PUMPS_HYBRID_META_USESSL
            value: "true"
          - name: TYK_PMP_PUMPS_HYBRID_META_SSLINSECURESKIPVERIFY
            value: "true"
          - name: TYK_PMP_PUMPS_HYBRID_META_AGGREGATED
            value: "true"
            
          - name: TYK_PMP_PUMPS_HYBRID_META_CALLTIMEOUT
            value: "10"
            
            
          - name: TYK_PMP_PUMPS_HYBRID_META_RPCPOOLSIZE
            value: "5"
            
          
          
          # Configure Prometheus Pump for Tyk Pump
          - name: TYK_PMP_PUMPS_PROMETHEUS_TYPE
            value: prometheus
          # Since PodMonitor is in use, please use containerPort of Tyk Pump pod.
          - name: TYK_PMP_PUMPS_PROMETHEUS_META_ADDR
            value: ":9090"
          - name: TYK_PMP_PUMPS_PROMETHEUS_META_PATH
            value: "/metrics"
            
          

          
          
          
          
          

          # Uptime Pump configurations
          
          - name: TYK_PMP_DONTPURGEUPTIMEDATA
            value: "true"
          

          - name: TYK_PMP_ANALYTICSSTORAGECONFIG_ADDRS
            value: "redis.default.svc.cluster.local:6379"
          
          - name: TYK_PMP_ANALYTICSSTORAGECONFIG_MASTERNAME
            value: ""
          - name: TYK_PMP_ANALYTICSSTORAGECONFIG_ENABLECLUSTER
            value: "false"
          
          - name: TYK_PMP_ANALYTICSSTORAGECONFIG_PASSWORD
            valueFrom:
              secretKeyRef:
               name: secrets-release-name-tyk-pump
               key: redisPass
          - name: TYK_PMP_ANALYTICSSTORAGECONFIG_REDISUSESSL
            value: "false"

          - name: TYK_PMP_OMITCONFIGFILE
            value: "true"
          - name: TYK_PMP_ANALYTICSSTORAGETYPE
            value: "redis"
          - name: TYK_PMP_ANALYTICSSTORAGECONFIG_MAXIDLE
            value: "2000"
          - name: TYK_PMP_ANALYTICSSTORAGECONFIG_MAXACTIVE
            value: "4000"
          - name: TYK_PMP_PURGEDELAY
            value: "2"

        command: ["/opt/tyk-pump/tyk-pump"]
        volumeMounts:
        resources:
            {}
      securityContext:
          fsGroup: 2000
          runAsUser: 1000
      volumes:
---
# Source: tyk-mdcb-data-plane/templates/tests/script-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-tyk-mdcb-data-plane-map
  annotations:
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
    "helm.sh/hook": test
data:
  mdcb-data-plane-test.sh: |-
    apk --no-cache add curl jq
  
    TYK_GW_ADDR="${TYK_GW_PROTO}://${TYK_GW_SVC}.${TYK_POD_NAMESPACE}.svc.cluster.local:${TYK_GW_LISTENPORT}"
    TYK_GW_SECRET=${TYK_GW_SECRET}
  
    checkGateway() {
      count=0
      while [ $count -le 10 ]
      do
        healthCheck="$(curl --fail-with-body -sS ${TYK_GW_ADDR}/hello --connect-timeout 5)"
  
        redisStatus=$(echo "${healthCheck}" | jq -r '.details.redis.status')
        if [[ "${redisStatus}" != "pass" ]]
        then
          echo "Redis is not ready"
          echo "${healthCheck}"
          count=$((count+1))
          sleep 2
          continue
        fi
  
        rpcStatus=$(echo "${healthCheck}" | jq -r '.details.rpc.status')
        if [[ "${rpcStatus}" != "pass" ]]
        then
          echo "RPC is not ready"
          echo "${healthCheck}"
          count=$((count+1))
          sleep 2
          continue
        fi
  
        break
      done
  
      if [[ $count -ge 10 ]]
      then
        echo "All components required for the Tyk MDCB Data Plane to work are NOT available"
      else
        echo "All components required for the Tyk MDCB Data Plane to work are available"
      fi
    }
  
    main() {
      checkGateway
      echo "Tests passed"
    }
  
    main
---
# Source: tyk-mdcb-data-plane/templates/tests/mdcb-data-plane-test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-tyk-mdcb-data-plane-test-tyk-data-plane"
  labels:
    chart: tyk-mdcb-data-plane-1.1.0
  annotations:
    "helm.sh/hook": test
spec:
  restartPolicy: Never
  containers:
    - name: health-check-container
      image: alpine:3.17
      command:
        - /bin/sh
        - -c
        - /tests/mdcb-data-plane-test.sh
      volumeMounts:
        - mountPath: "/tests"
          name: test-tyk-data-plane
      env:
        - name: TYK_GW_PROTO
          value: http
        - name: TYK_GW_SVC
          value: gateway-svc-release-name-tyk-gateway
        - name: TYK_GW_LISTENPORT
          value: "8080"
        - name: TYK_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: TYK_GW_SECRET
          valueFrom:
            secretKeyRef:
              name: secrets-release-name-tyk-mdcb-data-plane
              key: APISecret
  volumes:
    - name: test-tyk-data-plane
      configMap:
        name: test-tyk-mdcb-data-plane-map
        defaultMode: 0777
