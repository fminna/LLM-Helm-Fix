---
# Source: kubevault/charts/kubevault-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kubevault-operator
  namespace: default
  labels:
    helm.sh/chart: kubevault-operator-v0.18.0
    app.kubernetes.io/name: kubevault-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.18.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubevault/charts/kubevault-webhook-server/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kubevault-webhook-server
  namespace: default
  labels:
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubevault/charts/kubevault-webhook-server/templates/apiregistration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-kubevault-webhook-server-apiserver-cert
  namespace: default
  labels:
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRRGptWml6dml6WENpajdXWnBjc1pxREFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMU1UVXdPVEEyTXpaYUZ3MHpOREExTVRNd09UQTJNelphTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF1eXp3CnNreXh0QWVpU1RUcTRSRndOQjZPN29IRVd4ZlNZWThJVnVqNEhocU0zcU0zb05KbGtGbk0reXlTQlFvU2lQQkMKSktnNDVOZFQ2ZWova3JmZmlpckVXMmFpb1RkMTljR0t5Nzd2aldNQXJadk1qL2VuQmRhUFZrRVlIM2gzOG5nQgpOWG1HeFROSDJ6QVpnWVVKaVpqTXQvZVVRL2tSYzgvK2VVMU5LUTVlMnFneDkyREJBM1BmYUQwM0tTM2ZNU1JwCmRBcmpzaXVSRVljaVZXRHFOTW9DVklFamVyMFhmRnhmNmhDTlVHQjQ2aEZHNENaYVEyVzZjVVp1eUFMSWcwTVYKTlJCWjY5T2Z0WENiemRLdHc3QlJ3OElUTWI0ajZybGQxYjNQNVlhTGhFSHNnTlN6ZitqTmI5TndnUTdNb0o0ZgpndGhFUTNGM1JZSVZXVUxOb3dJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRkR1ZFBrRFdtQmpyRVU2UnNFZVpwTEtTbnpYZ01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ3BHTUFpemhHagp4RjA1VHpsbDR4eDdKU1AyazRGOE04TzgrN1BoZ1NrbXprZXptbzdiM2plVHlTL3JXT25MNE1JQkkyMHBvZ1JSCm1QbmNvUnFoQjhHUVdscDlTTWgrc2FVSURPQmlYelZaS0ZhZzJoMURXWmdmbk9oNlJUR3U0Mk9oeVlkUytHVXMKeXBKVEU1ZVA1Mlc0YVJ4M2lTblhGeUh2K1kybmhvbFhNNjdlRytnSjhHQXRTOVExN2tRcHdsWUhrampwZnpCTQpLcDRieGlIbTNUbitEanRkN29aSmIreFlzNTdlTzVTSHo0T2l2WmpqcWlqUU5ITXJNZDdONjV6c1ExWWgvM3MyCkcwc2tCOUUzWitTMldlcDJ0VHdZQ3lkMFN1b1VzWmQ0d0F5SFlpejRIWEozV3M3UHlXKytvcUtYOHZpdk5iZXQKOW9NSys2czBlelVSCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURsakNDQW42Z0F3SUJBZ0lRWnlITlQxNHY2Sjdja1FDYm9xYmg5REFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMU1UVXdPVEEyTXpaYUZ3MHpOREExTVRNd09UQTJNelphTURBeApMakFzQmdOVkJBTVRKWEpsYkdWaGMyVXRibUZ0WlMxcmRXSmxkbUYxYkhRdGQyVmlhRzl2YXkxelpYSjJaWEl3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUREUzBEU1pKMEFPUXNpMDhSalc4Z0oKZmlxMTJDbzJYNnRraVZESGdxYzdBQUJ3ZDZIRFlSdnltL0lZVjFBdDRMekdNZlcrWXFTd0IrU3ZNdUQxa0x2OApWVzRram9LdGJSZkk1R2hkaGxGc2RvUktJWGthdzh5UGl2c0QvZ3NSOSszM2t4UnZjdkY2eFdLTU85cTZ6cEkrClJWak82ckFNRmw4UTRNQ09HU2Z0YWxtaytkbXBUOHlVbFBtS1Y5ZjN6NFpIZkRGcWYwdEtMV1cwb0dHUWVOSjgKcnBSbmgyLzE0b042ejZNb08zVytJVXM4MkVoVFJMcFRaY2FFSytkbTE5MGdhNEQ3dkhoTXNqRWRiS1cwVDROSApwYjFxY0IvN2ZCaEJKNmdvUHdOcWdickc2NUhubk9ST1ViQmMvem5lZkxRdEZGeUl5MTBVNSttaVBCMzBWelh4CkFnTUJBQUdqZ2M0d2djc3dEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUIKQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkR1ZFBrRFdtQmpyRVU2UgpzRWVacExLU256WGdNR3NHQTFVZEVRUmtNR0tDTFhKbGJHVmhjMlV0Ym1GdFpTMXJkV0psZG1GMWJIUXRkMlZpCmFHOXZheTF6WlhKMlpYSXVaR1ZtWVhWc2RJSXhjbVZzWldGelpTMXVZVzFsTFd0MVltVjJZWFZzZEMxM1pXSm8KYjI5ckxYTmxjblpsY2k1a1pXWmhkV3gwTG5OMll6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFLam9IQmMwdworT3hGaitGemFyYXMyTmJ2Y0wzRDJFa0FkeUlPY3JrQVFCejVtNGFrL0FURjVadHhlamFDbjE0VE0zMkdwaUs5CmFqZlRrUy9yU2I1R29YMllKS0g3V1E0S215YTM1MnFHODhVQ3B2LzJjWU1oaVRqdlBGQzFvUy9GdlYyZWlubTQKTlFjOVkxQUFLL2UvTnlHaGVmZDFtMmZLMzE3QUprbGVEcUFrMG9kNkx2TWR0RytVMXZTczZGd25ocTRRQW5VcQpDSEVyNk0vWjVWcSttc3VTNEk5d1dacXlTcHJWMmw3NzNCTXViMkF3WTRXQmg1Q29sd2hqTGxycWxXWmQvbTM0CjJDaW9KNnNLRms5OTg0azh1YWdJME14bEZrKzBqeDdZa1Q0TnYwQUhNLzNNVDgwZnlzQVovSWQ0SnZCcis3ZmMKRGdjSVhHeUNoQ0M5T2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdzB0QTBtU2RBRGtMSXRQRVkxdklDWDRxdGRncU5sK3JaSWxReDRLbk93QUFjSGVoCncyRWI4cHZ5R0ZkUUxlQzh4akgxdm1La3NBZmtyekxnOVpDNy9GVnVKSTZDclcwWHlPUm9YWVpSYkhhRVNpRjUKR3NQTWo0cjdBLzRMRWZmdDk1TVViM0x4ZXNWaWpEdmF1czZTUGtWWXp1cXdEQlpmRU9EQWpoa243V3BacFBuWgpxVS9NbEpUNWlsZlg5OCtHUjN3eGFuOUxTaTFsdEtCaGtIalNmSzZVWjRkdjllS0RlcytqS0R0MXZpRkxQTmhJClUwUzZVMlhHaEN2blp0ZmRJR3VBKzd4NFRMSXhIV3lsdEUrRFI2VzlhbkFmKzN3WVFTZW9LRDhEYW9HNnh1dVIKNTV6a1RsR3dYUDg1M255MExSUmNpTXRkRk9mcG9qd2Q5RmMxOFFJREFRQUJBb0lCQUhYcnRwUlRsRWxTS0ZzNwpLMVlqVVVJS0lKZjBrbWlLazk3ODJ2M2M4a1U1MXdvUjhtY2E5OWtpT0toaDhGUURZM2o1S2IxdnFxbHYyckcvCk12NlVDaTV2RnphVHBtdzVkeWNpWTdJMUxHMGxrdk9BQ3JRU2ppNE9hVXNiMW10ZkhSMWtmZTVkcFZuUVhaVDMKZnpkVkRCRDFwbzRxUDJyTkIxSVZvNjhwbVdaTXhhS1NSdjcyMGZ4Z0pQcTlzYmJBRFlLaGxINmpwWkpiOVlxNwpQU0JaMGp3dS90Rm9LaGVFTW4zVHJyMi8yU01yVXYvLzV4UzdpRmNIMkVYZ1cxcDZCUDUwTVBsbkpGOHdQMjNBCm0wZTRrbVB4M3JjM2lDeFlUUXVaeDhyaHF0Zms1bkl6QmowUEg1WGhqSnBKWlNDVVNRWC8yblhDZktBMm9kVTYKSGdNQkpzRUNnWUVBK0FNNlFWeHZBc3Y5WXJRd3RvR1ZhY05ESUZ5OHpDYWhQdnpTTE9ia3VkR0VxZm4wVnMraApRL1BlWmtENEx3bkxIb2FsaTdrWHdya2NhdE5iQUIzWlpnQ0paUTFnbzZwZmhIWUY3RktpeW9oSVFYalFrWWJkCmN3R0JIbmpKZDRJWFZzWEVEdGZvaEVhVGUxRDMzdFJSSktNRlVHOFVIRmtmQ2VPNDBnU3BwSVVDZ1lFQXlaVmgKUE5mbkh6Vld3a1BoSVh3ZGtVZ1FwdytFdWlhckxhSzE5Y0lrZVA3S05COXUyUlNRNzVzd20xR2dPNi92UDQzdwozREdkdTFHZmdiNlVGYmMvRy9VTW9PYnVhV0tjTEhrSG1CTnNpSWtaZzZYck9YTm1nbkhpbWh6b3IvNzdYUm5vCnRMZnlnRmdPdUZKTUkrSWhKZGZrQ1hOWTQrdnJvNml5OE41RXJYMENnWUFhRk56UGV0VUJ5a24vVTB1OEpheDgKenRnRVV6eFhpOGh4UTAwbkE3RVNDWUtXRFg4d2tlMDNwREhETnhuaWVIa3Y0S0VRTElyZkkzQmxtNHg2V3FrKwpITmhXRkM0UmlCMDdaTjRDbUQ0ZVptNlMxQTI3QUIvUnRGckx4WkFLVFZmKy9CVStLbDU5YXA2ZjNVZnoyd2dkCmZqZFUyaG1YVVpmK0JrQ3RkV2dSc1FLQmdRQ1NXQW9odTdRa3FmcDBTZ2MwNGdBdEtwNDhTajNYVHA5VElCN3QKYmFaQTJPZys4dHJzYWN2V3gxbUFTTUFFMVBMaHR0QTNheVhSaWE0ODZQaGswNFhUYkJGZzlvWDZxQVl0R3loeQpOUmZELzVRd1NOSCtBVk5ZUEFtQVRLQjR0S29UcXUyUDFVTU4vZCtoM00wOTk3cU0yTERLVTUwaXluRmxmT0Y3CmtFRlhtUUtCZ1FDd01NTEg3YlJ3V2oyRktqdlJuZ1RyWjM2YXpSWUVpV09JOUVIQ2dkZURrK1M0VDdpb0N0UEcKRTU0TzVXWkU3N20xYU50eFJqMXRhWENEM1QwY1NNTU1YVWtGMWl1dFJ6VWhtV1czeG5KYldQenFMSFZDUU5kcwpzVWZTaXlOOHdRY2hYWnpUSGl4SWFBU2JpSENNblZrL1krazBRWEMwWWJPTDFaREJRQ1N4S0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: kubevault/charts/kubevault-operator/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-kubevault-operator
  labels:
    helm.sh/chart: kubevault-operator-v0.18.0
    app.kubernetes.io/name: kubevault-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.18.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs: ["create", "patch", "list", "get"]
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get"]
- apiGroups:
  - kubevault.com
  - catalog.kubevault.com
  - engine.kubevault.com
  - policy.kubevault.com
  - appcatalog.appscode.com
  - ops.kubevault.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - kubevault.com
  resources:
  - vaultservers/finalizers
  verbs: ["update"]
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs: ["create", "get", "list", "watch", "patch", "delete"]
- apiGroups:
  - apps
  resources:
  - statefulsets/finalizers
  verbs: ["update"]
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs: ["create", "get", "patch"]
- apiGroups:
  - ""
  resources:
  - secrets
  - services
  verbs: ["watch", "create", "get", "patch", "delete", "list"]
- apiGroups:
  - ""
  resources:
  - services/finalizers
  verbs: ["update"]
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs: ["create", "get", "list", "watch", "patch"]
- apiGroups:
  - ""
  resources:
  - nodes
  verbs: ["get", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["create"]
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: [ "get", "list"]
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - pods
  - pods/exec
  - pods/eviction
  verbs: ["get", "create", "list"]
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - clusterrolebindings
  - roles
  - rolebindings
  verbs: ["get", "update", "create", "patch", "delete"]
- apiGroups:
  - cert-manager.io
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs: ["create"]
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs: ["create"]
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs: ["get", "list", "create", "delete", "patch", "deletecollection"]
- apiGroups:
  - supervisor.appscode.com
  resources: ["*"]
  verbs: ["create", "get", "list", "watch", "update", "patch"]
---
# Source: kubevault/charts/kubevault-webhook-server/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-kubevault-webhook-server
  labels:
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get"]
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs: ["get", "list", "watch", "patch"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get", "list", "watch"]
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs: ["get"]
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["create"]
- apiGroups:
  - ""
  resources:
  - nodes
  - namespaces
  verbs: ["get", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - secrets
  verbs: ["get"]
- apiGroups:
  - kubevault.com
  - catalog.kubevault.com
  - engine.kubevault.com
  - policy.kubevault.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: kubevault/charts/kubevault-operator/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kubevault-operator
  labels:
    helm.sh/chart: kubevault-operator-v0.18.0
    app.kubernetes.io/name: kubevault-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.18.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-kubevault-operator
subjects:
- kind: ServiceAccount
  name: release-name-kubevault-operator
  namespace: default
---
# Source: kubevault/charts/kubevault-operator/templates/license-checker-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kubevault-operator-license-checker
  labels:
    helm.sh/chart: kubevault-operator-v0.18.0
    app.kubernetes.io/name: kubevault-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.18.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-checker
subjects:
- kind: ServiceAccount
  name: release-name-kubevault-operator
  namespace: default
---
# Source: kubevault/charts/kubevault-operator/templates/license-reader-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kubevault-operator-license-reader
  labels:
    helm.sh/chart: kubevault-operator-v0.18.0
    app.kubernetes.io/name: kubevault-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.18.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-reader
subjects:
- kind: ServiceAccount
  name: release-name-kubevault-operator
  namespace: default
---
# Source: kubevault/charts/kubevault-webhook-server/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kubevault-webhook-server
  labels:
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-kubevault-webhook-server
subjects:
- kind: ServiceAccount
  name: release-name-kubevault-webhook-server
  namespace: default
---
# Source: kubevault/charts/kubevault-webhook-server/templates/license-checker-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kubevault-webhook-server-license-checker
  labels:
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-checker
subjects:
- kind: ServiceAccount
  name: release-name-kubevault-webhook-server
  namespace: default
---
# Source: kubevault/charts/kubevault-webhook-server/templates/license-reader-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kubevault-webhook-server-license-reader
  labels:
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-reader
subjects:
- kind: ServiceAccount
  name: release-name-kubevault-webhook-server
  namespace: default
---
# Source: kubevault/charts/kubevault-webhook-server/templates/webhook-eas-rbac.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kubevault-webhook-server-apiserver-auth-delegator
  labels:
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: release-name-kubevault-webhook-server
  namespace: default
---
# Source: kubevault/charts/kubevault-webhook-server/templates/webhook-eas-rbac.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-kubevault-webhook-server-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: release-name-kubevault-webhook-server
  namespace: default
---
# Source: kubevault/charts/kubevault-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kubevault-operator
  namespace: default
  labels:
    helm.sh/chart: kubevault-operator-v0.18.0
    app.kubernetes.io/name: kubevault-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.18.1"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: metrics
    port: 8080
    targetPort: metrics
  selector:
    app.kubernetes.io/name: kubevault-operator
    app.kubernetes.io/instance: release-name
---
# Source: kubevault/charts/kubevault-webhook-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kubevault-webhook-server
  namespace: default
  labels:
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: operator
    port: 443
    targetPort: operator
  selector:
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: release-name
---
# Source: kubevault/charts/kubevault-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kubevault-operator
  namespace: default
  labels:
    helm.sh/chart: kubevault-operator-v0.18.0
    app.kubernetes.io/name: kubevault-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.18.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubevault-operator
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubevault-operator
        app.kubernetes.io/instance: release-name
      annotations:
        reload: MWzBQwfG
    spec:
      imagePullSecrets:
        []
      serviceAccountName: release-name-kubevault-operator
      containers:
      - name: operator
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        image: ghcr.io/kubevault/vault-operator:v0.18.1
        imagePullPolicy: IfNotPresent
        args:
        - operator
        - --v=3
        - --use-kubeapiserver-fqdn-for-aks=true
        - --cluster-name=
        - --metrics-bind-address=:8080
        - --health-probe-bind-address=:8081
        - --recommendation-resync-period=1h0m0s
        - --gen-rotate-tls-recommendation-before-expiry-year=0
        - --gen-rotate-tls-recommendation-before-expiry-month=1
        - --gen-rotate-tls-recommendation-before-expiry-day=0
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: metrics
          containerPort: 8080
        - name: probes
          containerPort: 8081
        volumeMounts:
        - mountPath: /tmp
          name: tmpdir
        readinessProbe:
          httpGet:
            path: /readyz
            port: probes
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthz
            port: probes
          initialDelaySeconds: 15
          periodSeconds: 20
        resources:
          {}
      volumes:
      - name: tmpdir
        emptyDir: {}
      securityContext:
        {}
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: kubevault/charts/kubevault-webhook-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kubevault-webhook-server
  namespace: default
  labels:
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubevault-webhook-server
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubevault-webhook-server
        app.kubernetes.io/instance: release-name
      annotations:
        reload: gyzPLlsK
    spec:
      imagePullSecrets:
        []
      serviceAccountName: release-name-kubevault-webhook-server
      containers:
      - name: operator
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        image: ghcr.io/kubevault/vault-operator:v0.18.0
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --cluster-name=
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --authorization-always-allow-paths=/healthz,/readyz,/livez,/convert
        - --enable-mutating-webhook=true
        - --enable-validating-webhook=true
        - --use-kubeapiserver-fqdn-for-aks=true
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: operator
          containerPort: 8443
        volumeMounts:
        - mountPath: /tmp
          name: tmpdir
        - mountPath: /var/serving-cert
          name: serving-cert
        resources:
          {}
      volumes:
      - name: tmpdir
        emptyDir: {}
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: release-name-kubevault-webhook-server-apiserver-cert
      securityContext:
        {}
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: kubevault/charts/kubevault-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.validators.kubevault.com
  labels:
    app.kubernetes.io/component: kubevault-core
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: validators.kubevault.com
  version: v1alpha1
  service:
    namespace: default
    name: release-name-kubevault-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRRGptWml6dml6WENpajdXWnBjc1pxREFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMU1UVXdPVEEyTXpaYUZ3MHpOREExTVRNd09UQTJNelphTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF1eXp3CnNreXh0QWVpU1RUcTRSRndOQjZPN29IRVd4ZlNZWThJVnVqNEhocU0zcU0zb05KbGtGbk0reXlTQlFvU2lQQkMKSktnNDVOZFQ2ZWova3JmZmlpckVXMmFpb1RkMTljR0t5Nzd2aldNQXJadk1qL2VuQmRhUFZrRVlIM2gzOG5nQgpOWG1HeFROSDJ6QVpnWVVKaVpqTXQvZVVRL2tSYzgvK2VVMU5LUTVlMnFneDkyREJBM1BmYUQwM0tTM2ZNU1JwCmRBcmpzaXVSRVljaVZXRHFOTW9DVklFamVyMFhmRnhmNmhDTlVHQjQ2aEZHNENaYVEyVzZjVVp1eUFMSWcwTVYKTlJCWjY5T2Z0WENiemRLdHc3QlJ3OElUTWI0ajZybGQxYjNQNVlhTGhFSHNnTlN6ZitqTmI5TndnUTdNb0o0ZgpndGhFUTNGM1JZSVZXVUxOb3dJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRkR1ZFBrRFdtQmpyRVU2UnNFZVpwTEtTbnpYZ01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ3BHTUFpemhHagp4RjA1VHpsbDR4eDdKU1AyazRGOE04TzgrN1BoZ1NrbXprZXptbzdiM2plVHlTL3JXT25MNE1JQkkyMHBvZ1JSCm1QbmNvUnFoQjhHUVdscDlTTWgrc2FVSURPQmlYelZaS0ZhZzJoMURXWmdmbk9oNlJUR3U0Mk9oeVlkUytHVXMKeXBKVEU1ZVA1Mlc0YVJ4M2lTblhGeUh2K1kybmhvbFhNNjdlRytnSjhHQXRTOVExN2tRcHdsWUhrampwZnpCTQpLcDRieGlIbTNUbitEanRkN29aSmIreFlzNTdlTzVTSHo0T2l2WmpqcWlqUU5ITXJNZDdONjV6c1ExWWgvM3MyCkcwc2tCOUUzWitTMldlcDJ0VHdZQ3lkMFN1b1VzWmQ0d0F5SFlpejRIWEozV3M3UHlXKytvcUtYOHZpdk5iZXQKOW9NSys2czBlelVSCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubevault/charts/kubevault-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.mutators.kubevault.com
  labels:
    app.kubernetes.io/component: kubevault-core
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: mutators.kubevault.com
  version: v1alpha1
  service:
    namespace: default
    name: release-name-kubevault-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRRGptWml6dml6WENpajdXWnBjc1pxREFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMU1UVXdPVEEyTXpaYUZ3MHpOREExTVRNd09UQTJNelphTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF1eXp3CnNreXh0QWVpU1RUcTRSRndOQjZPN29IRVd4ZlNZWThJVnVqNEhocU0zcU0zb05KbGtGbk0reXlTQlFvU2lQQkMKSktnNDVOZFQ2ZWova3JmZmlpckVXMmFpb1RkMTljR0t5Nzd2aldNQXJadk1qL2VuQmRhUFZrRVlIM2gzOG5nQgpOWG1HeFROSDJ6QVpnWVVKaVpqTXQvZVVRL2tSYzgvK2VVMU5LUTVlMnFneDkyREJBM1BmYUQwM0tTM2ZNU1JwCmRBcmpzaXVSRVljaVZXRHFOTW9DVklFamVyMFhmRnhmNmhDTlVHQjQ2aEZHNENaYVEyVzZjVVp1eUFMSWcwTVYKTlJCWjY5T2Z0WENiemRLdHc3QlJ3OElUTWI0ajZybGQxYjNQNVlhTGhFSHNnTlN6ZitqTmI5TndnUTdNb0o0ZgpndGhFUTNGM1JZSVZXVUxOb3dJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRkR1ZFBrRFdtQmpyRVU2UnNFZVpwTEtTbnpYZ01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ3BHTUFpemhHagp4RjA1VHpsbDR4eDdKU1AyazRGOE04TzgrN1BoZ1NrbXprZXptbzdiM2plVHlTL3JXT25MNE1JQkkyMHBvZ1JSCm1QbmNvUnFoQjhHUVdscDlTTWgrc2FVSURPQmlYelZaS0ZhZzJoMURXWmdmbk9oNlJUR3U0Mk9oeVlkUytHVXMKeXBKVEU1ZVA1Mlc0YVJ4M2lTblhGeUh2K1kybmhvbFhNNjdlRytnSjhHQXRTOVExN2tRcHdsWUhrampwZnpCTQpLcDRieGlIbTNUbitEanRkN29aSmIreFlzNTdlTzVTSHo0T2l2WmpqcWlqUU5ITXJNZDdONjV6c1ExWWgvM3MyCkcwc2tCOUUzWitTMldlcDJ0VHdZQ3lkMFN1b1VzWmQ0d0F5SFlpejRIWEozV3M3UHlXKytvcUtYOHZpdk5iZXQKOW9NSys2czBlelVSCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubevault/charts/kubevault-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.validators.engine.kubevault.com
  labels:
    app.kubernetes.io/component: kubevault-engine
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: validators.engine.kubevault.com
  version: v1alpha1
  service:
    namespace: default
    name: release-name-kubevault-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRRGptWml6dml6WENpajdXWnBjc1pxREFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMU1UVXdPVEEyTXpaYUZ3MHpOREExTVRNd09UQTJNelphTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF1eXp3CnNreXh0QWVpU1RUcTRSRndOQjZPN29IRVd4ZlNZWThJVnVqNEhocU0zcU0zb05KbGtGbk0reXlTQlFvU2lQQkMKSktnNDVOZFQ2ZWova3JmZmlpckVXMmFpb1RkMTljR0t5Nzd2aldNQXJadk1qL2VuQmRhUFZrRVlIM2gzOG5nQgpOWG1HeFROSDJ6QVpnWVVKaVpqTXQvZVVRL2tSYzgvK2VVMU5LUTVlMnFneDkyREJBM1BmYUQwM0tTM2ZNU1JwCmRBcmpzaXVSRVljaVZXRHFOTW9DVklFamVyMFhmRnhmNmhDTlVHQjQ2aEZHNENaYVEyVzZjVVp1eUFMSWcwTVYKTlJCWjY5T2Z0WENiemRLdHc3QlJ3OElUTWI0ajZybGQxYjNQNVlhTGhFSHNnTlN6ZitqTmI5TndnUTdNb0o0ZgpndGhFUTNGM1JZSVZXVUxOb3dJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRkR1ZFBrRFdtQmpyRVU2UnNFZVpwTEtTbnpYZ01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ3BHTUFpemhHagp4RjA1VHpsbDR4eDdKU1AyazRGOE04TzgrN1BoZ1NrbXprZXptbzdiM2plVHlTL3JXT25MNE1JQkkyMHBvZ1JSCm1QbmNvUnFoQjhHUVdscDlTTWgrc2FVSURPQmlYelZaS0ZhZzJoMURXWmdmbk9oNlJUR3U0Mk9oeVlkUytHVXMKeXBKVEU1ZVA1Mlc0YVJ4M2lTblhGeUh2K1kybmhvbFhNNjdlRytnSjhHQXRTOVExN2tRcHdsWUhrampwZnpCTQpLcDRieGlIbTNUbitEanRkN29aSmIreFlzNTdlTzVTSHo0T2l2WmpqcWlqUU5ITXJNZDdONjV6c1ExWWgvM3MyCkcwc2tCOUUzWitTMldlcDJ0VHdZQ3lkMFN1b1VzWmQ0d0F5SFlpejRIWEozV3M3UHlXKytvcUtYOHZpdk5iZXQKOW9NSys2czBlelVSCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubevault/charts/kubevault-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.mutators.engine.kubevault.com
  labels:
    app.kubernetes.io/component: kubevault-engine
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: mutators.engine.kubevault.com
  version: v1alpha1
  service:
    namespace: default
    name: release-name-kubevault-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRRGptWml6dml6WENpajdXWnBjc1pxREFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMU1UVXdPVEEyTXpaYUZ3MHpOREExTVRNd09UQTJNelphTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF1eXp3CnNreXh0QWVpU1RUcTRSRndOQjZPN29IRVd4ZlNZWThJVnVqNEhocU0zcU0zb05KbGtGbk0reXlTQlFvU2lQQkMKSktnNDVOZFQ2ZWova3JmZmlpckVXMmFpb1RkMTljR0t5Nzd2aldNQXJadk1qL2VuQmRhUFZrRVlIM2gzOG5nQgpOWG1HeFROSDJ6QVpnWVVKaVpqTXQvZVVRL2tSYzgvK2VVMU5LUTVlMnFneDkyREJBM1BmYUQwM0tTM2ZNU1JwCmRBcmpzaXVSRVljaVZXRHFOTW9DVklFamVyMFhmRnhmNmhDTlVHQjQ2aEZHNENaYVEyVzZjVVp1eUFMSWcwTVYKTlJCWjY5T2Z0WENiemRLdHc3QlJ3OElUTWI0ajZybGQxYjNQNVlhTGhFSHNnTlN6ZitqTmI5TndnUTdNb0o0ZgpndGhFUTNGM1JZSVZXVUxOb3dJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRkR1ZFBrRFdtQmpyRVU2UnNFZVpwTEtTbnpYZ01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ3BHTUFpemhHagp4RjA1VHpsbDR4eDdKU1AyazRGOE04TzgrN1BoZ1NrbXprZXptbzdiM2plVHlTL3JXT25MNE1JQkkyMHBvZ1JSCm1QbmNvUnFoQjhHUVdscDlTTWgrc2FVSURPQmlYelZaS0ZhZzJoMURXWmdmbk9oNlJUR3U0Mk9oeVlkUytHVXMKeXBKVEU1ZVA1Mlc0YVJ4M2lTblhGeUh2K1kybmhvbFhNNjdlRytnSjhHQXRTOVExN2tRcHdsWUhrampwZnpCTQpLcDRieGlIbTNUbitEanRkN29aSmIreFlzNTdlTzVTSHo0T2l2WmpqcWlqUU5ITXJNZDdONjV6c1ExWWgvM3MyCkcwc2tCOUUzWitTMldlcDJ0VHdZQ3lkMFN1b1VzWmQ0d0F5SFlpejRIWEozV3M3UHlXKytvcUtYOHZpdk5iZXQKOW9NSys2czBlelVSCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubevault/charts/kubevault-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.mutators.policy.kubevault.com
  labels:
    app.kubernetes.io/component: kubevault-policy
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: mutators.policy.kubevault.com
  version: v1alpha1
  service:
    namespace: default
    name: release-name-kubevault-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRRGptWml6dml6WENpajdXWnBjc1pxREFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMU1UVXdPVEEyTXpaYUZ3MHpOREExTVRNd09UQTJNelphTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF1eXp3CnNreXh0QWVpU1RUcTRSRndOQjZPN29IRVd4ZlNZWThJVnVqNEhocU0zcU0zb05KbGtGbk0reXlTQlFvU2lQQkMKSktnNDVOZFQ2ZWova3JmZmlpckVXMmFpb1RkMTljR0t5Nzd2aldNQXJadk1qL2VuQmRhUFZrRVlIM2gzOG5nQgpOWG1HeFROSDJ6QVpnWVVKaVpqTXQvZVVRL2tSYzgvK2VVMU5LUTVlMnFneDkyREJBM1BmYUQwM0tTM2ZNU1JwCmRBcmpzaXVSRVljaVZXRHFOTW9DVklFamVyMFhmRnhmNmhDTlVHQjQ2aEZHNENaYVEyVzZjVVp1eUFMSWcwTVYKTlJCWjY5T2Z0WENiemRLdHc3QlJ3OElUTWI0ajZybGQxYjNQNVlhTGhFSHNnTlN6ZitqTmI5TndnUTdNb0o0ZgpndGhFUTNGM1JZSVZXVUxOb3dJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRkR1ZFBrRFdtQmpyRVU2UnNFZVpwTEtTbnpYZ01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ3BHTUFpemhHagp4RjA1VHpsbDR4eDdKU1AyazRGOE04TzgrN1BoZ1NrbXprZXptbzdiM2plVHlTL3JXT25MNE1JQkkyMHBvZ1JSCm1QbmNvUnFoQjhHUVdscDlTTWgrc2FVSURPQmlYelZaS0ZhZzJoMURXWmdmbk9oNlJUR3U0Mk9oeVlkUytHVXMKeXBKVEU1ZVA1Mlc0YVJ4M2lTblhGeUh2K1kybmhvbFhNNjdlRytnSjhHQXRTOVExN2tRcHdsWUhrampwZnpCTQpLcDRieGlIbTNUbitEanRkN29aSmIreFlzNTdlTzVTSHo0T2l2WmpqcWlqUU5ITXJNZDdONjV6c1ExWWgvM3MyCkcwc2tCOUUzWitTMldlcDJ0VHdZQ3lkMFN1b1VzWmQ0d0F5SFlpejRIWEozV3M3UHlXKytvcUtYOHZpdk5iZXQKOW9NSys2czBlelVSCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubevault/charts/kubevault-operator/templates/license.yaml
# if license file is provided, then create a secret for license
---
# Source: kubevault/charts/kubevault-webhook-server/templates/license.yaml
# if license file is provided, then create a secret for license
---
# Source: kubevault/charts/kubevault-webhook-server/templates/core/mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: mutators.kubevault.com
  labels:
    app.kubernetes.io/component: kubevault-core
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: vaultserverwebhook.mutators.kubevault.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubevault.com/v1alpha1/vaultserverwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - kubevault.com
    apiVersions:
    - "*"
    resources:
    - vaultservers
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubevault/charts/kubevault-webhook-server/templates/engine/mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: mutators.engine.kubevault.com
  labels:
    app.kubernetes.io/component: kubevault-engine
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: secretaccessrequestwebhook.mutators.engine.kubevault.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.engine.kubevault.com/v1alpha1/secretaccessrequestwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - engine.kubevault.com
    apiVersions:
    - "*"
    resources:
    - secretaccessrequests
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubevault/charts/kubevault-webhook-server/templates/policy/mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: mutators.policy.kubevault.com
  labels:
    app.kubernetes.io/component: kubevault-policy
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: vaultpolicybindingwebhook.mutators.policy.kubevault.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.policy.kubevault.com/v1alpha1/vaultpolicybindingwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - policy.kubevault.com
    apiVersions:
    - "*"
    resources:
    - vaultpolicybindings
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubevault/charts/kubevault-webhook-server/templates/core/validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.kubevault.com
  labels:
    app.kubernetes.io/component: kubevault-core
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: vaultserverwebhook.validators.kubevault.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubevault.com/v1alpha1/vaultserverwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - operations:
    - CREATE
    - UPDATE
    - DELETE
    apiGroups:
    - kubevault.com
    apiVersions:
    - "*"
    resources:
    - vaultservers
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubevault/charts/kubevault-webhook-server/templates/engine/validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.engine.kubevault.com
  labels:
    app.kubernetes.io/component: kubevault-engine
    helm.sh/chart: kubevault-webhook-server-v0.18.0
    app.kubernetes.io/name: kubevault-webhook-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.18.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: secretaccessrequestwebhook.validators.engine.kubevault.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.engine.kubevault.com/v1alpha1/secretaccessrequestwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - engine.kubevault.com
    apiVersions:
    - "*"
    resources:
    - secretaccessrequests
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubevault/charts/kubevault-catalog/templates/vaultserver/vaultserver-0.11.5.yaml
apiVersion: catalog.kubevault.com/v1alpha1
kind: VaultServerVersion
metadata:
  name: '0.11.5'
  labels:
    helm.sh/chart: kubevault-catalog-v2024.3.12
    app.kubernetes.io/name: kubevault-catalog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2024.3.12"
    app.kubernetes.io/managed-by: Helm
spec:
  exporter:
    image: 'ghcr.io/kubevault/vault-exporter:v0.1.1'
  stash:
    addon:
      backupTask:
        name: vault-backup-1.10.3
      restoreTask:
        name: vault-restore-1.10.3
  unsealer:
    image: 'kubevault/vault-unsealer:v0.18.0'
  vault:
    image: 'vault:0.11.5'
  version: 0.11.5
---
# Source: kubevault/charts/kubevault-catalog/templates/vaultserver/vaultserver-1.10.3.yaml
apiVersion: catalog.kubevault.com/v1alpha1
kind: VaultServerVersion
metadata:
  name: '1.10.3'
  labels:
    helm.sh/chart: kubevault-catalog-v2024.3.12
    app.kubernetes.io/name: kubevault-catalog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2024.3.12"
    app.kubernetes.io/managed-by: Helm
spec:
  exporter:
    image: 'ghcr.io/kubevault/vault-exporter:v0.1.1'
  stash:
    addon:
      backupTask:
        name: vault-backup-1.10.3
      restoreTask:
        name: vault-restore-1.10.3
  unsealer:
    image: 'kubevault/vault-unsealer:v0.18.0'
  vault:
    image: 'vault:1.10.3'
  version: 1.10.3
---
# Source: kubevault/charts/kubevault-catalog/templates/vaultserver/vaultserver-1.11.5.yaml
apiVersion: catalog.kubevault.com/v1alpha1
kind: VaultServerVersion
metadata:
  name: '1.11.5'
  labels:
    helm.sh/chart: kubevault-catalog-v2024.3.12
    app.kubernetes.io/name: kubevault-catalog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2024.3.12"
    app.kubernetes.io/managed-by: Helm
spec:
  exporter:
    image: 'ghcr.io/kubevault/vault-exporter:v0.1.1'
  stash:
    addon:
      backupTask:
        name: vault-backup-1.10.3
      restoreTask:
        name: vault-restore-1.10.3
  unsealer:
    image: 'kubevault/vault-unsealer:v0.18.0'
  vault:
    image: 'vault:1.11.5'
  version: 1.11.5
---
# Source: kubevault/charts/kubevault-catalog/templates/vaultserver/vaultserver-1.12.1.yaml
apiVersion: catalog.kubevault.com/v1alpha1
kind: VaultServerVersion
metadata:
  name: '1.12.1'
  labels:
    helm.sh/chart: kubevault-catalog-v2024.3.12
    app.kubernetes.io/name: kubevault-catalog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2024.3.12"
    app.kubernetes.io/managed-by: Helm
spec:
  exporter:
    image: 'ghcr.io/kubevault/vault-exporter:v0.1.1'
  stash:
    addon:
      backupTask:
        name: vault-backup-1.10.3
      restoreTask:
        name: vault-restore-1.10.3
  unsealer:
    image: 'kubevault/vault-unsealer:v0.18.0'
  vault:
    image: 'vault:1.12.1'
  version: 1.12.1
---
# Source: kubevault/charts/kubevault-catalog/templates/vaultserver/vaultserver-1.13.3.yaml
apiVersion: catalog.kubevault.com/v1alpha1
kind: VaultServerVersion
metadata:
  name: '1.13.3'
  labels:
    helm.sh/chart: kubevault-catalog-v2024.3.12
    app.kubernetes.io/name: kubevault-catalog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2024.3.12"
    app.kubernetes.io/managed-by: Helm
spec:
  exporter:
    image: 'ghcr.io/kubevault/vault-exporter:v0.1.1'
  stash:
    addon:
      backupTask:
        name: vault-backup-1.10.3
      restoreTask:
        name: vault-restore-1.10.3
  unsealer:
    image: 'kubevault/vault-unsealer:v0.18.0'
  vault:
    image: 'vault:1.13.3'
  version: 1.13.3
---
# Source: kubevault/charts/kubevault-catalog/templates/vaultserver/vaultserver-1.2.0.yaml
apiVersion: catalog.kubevault.com/v1alpha1
kind: VaultServerVersion
metadata:
  name: '1.2.0'
  labels:
    helm.sh/chart: kubevault-catalog-v2024.3.12
    app.kubernetes.io/name: kubevault-catalog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2024.3.12"
    app.kubernetes.io/managed-by: Helm
spec:
  exporter:
    image: 'ghcr.io/kubevault/vault-exporter:v0.1.1'
  stash:
    addon:
      backupTask:
        name: vault-backup-1.10.3
      restoreTask:
        name: vault-restore-1.10.3
  unsealer:
    image: 'kubevault/vault-unsealer:v0.18.0'
  vault:
    image: 'vault:1.2.0'
  version: 1.2.0
---
# Source: kubevault/charts/kubevault-catalog/templates/vaultserver/vaultserver-1.2.2.yaml
apiVersion: catalog.kubevault.com/v1alpha1
kind: VaultServerVersion
metadata:
  name: '1.2.2'
  labels:
    helm.sh/chart: kubevault-catalog-v2024.3.12
    app.kubernetes.io/name: kubevault-catalog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2024.3.12"
    app.kubernetes.io/managed-by: Helm
spec:
  exporter:
    image: 'ghcr.io/kubevault/vault-exporter:v0.1.1'
  stash:
    addon:
      backupTask:
        name: vault-backup-1.10.3
      restoreTask:
        name: vault-restore-1.10.3
  unsealer:
    image: 'kubevault/vault-unsealer:v0.18.0'
  vault:
    image: 'vault:1.2.2'
  version: 1.2.2
---
# Source: kubevault/charts/kubevault-catalog/templates/vaultserver/vaultserver-1.2.3.yaml
apiVersion: catalog.kubevault.com/v1alpha1
kind: VaultServerVersion
metadata:
  name: '1.2.3'
  labels:
    helm.sh/chart: kubevault-catalog-v2024.3.12
    app.kubernetes.io/name: kubevault-catalog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2024.3.12"
    app.kubernetes.io/managed-by: Helm
spec:
  exporter:
    image: 'ghcr.io/kubevault/vault-exporter:v0.1.1'
  stash:
    addon:
      backupTask:
        name: vault-backup-1.10.3
      restoreTask:
        name: vault-restore-1.10.3
  unsealer:
    image: 'kubevault/vault-unsealer:v0.18.0'
  vault:
    image: 'vault:1.2.3'
  version: 1.2.3
---
# Source: kubevault/charts/kubevault-catalog/templates/vaultserver/vaultserver-1.5.9.yaml
apiVersion: catalog.kubevault.com/v1alpha1
kind: VaultServerVersion
metadata:
  name: '1.5.9'
  labels:
    helm.sh/chart: kubevault-catalog-v2024.3.12
    app.kubernetes.io/name: kubevault-catalog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2024.3.12"
    app.kubernetes.io/managed-by: Helm
spec:
  exporter:
    image: 'ghcr.io/kubevault/vault-exporter:v0.1.1'
  stash:
    addon:
      backupTask:
        name: vault-backup-1.10.3
      restoreTask:
        name: vault-restore-1.10.3
  unsealer:
    image: 'kubevault/vault-unsealer:v0.18.0'
  vault:
    image: 'vault:1.5.9'
  version: 1.5.9
---
# Source: kubevault/charts/kubevault-catalog/templates/vaultserver/vaultserver-1.6.5.yaml
apiVersion: catalog.kubevault.com/v1alpha1
kind: VaultServerVersion
metadata:
  name: '1.6.5'
  labels:
    helm.sh/chart: kubevault-catalog-v2024.3.12
    app.kubernetes.io/name: kubevault-catalog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2024.3.12"
    app.kubernetes.io/managed-by: Helm
spec:
  exporter:
    image: 'ghcr.io/kubevault/vault-exporter:v0.1.1'
  stash:
    addon:
      backupTask:
        name: vault-backup-1.10.3
      restoreTask:
        name: vault-restore-1.10.3
  unsealer:
    image: 'kubevault/vault-unsealer:v0.18.0'
  vault:
    image: 'vault:1.6.5'
  version: 1.6.5
---
# Source: kubevault/charts/kubevault-catalog/templates/vaultserver/vaultserver-1.7.2.yaml
apiVersion: catalog.kubevault.com/v1alpha1
kind: VaultServerVersion
metadata:
  name: '1.7.2'
  labels:
    helm.sh/chart: kubevault-catalog-v2024.3.12
    app.kubernetes.io/name: kubevault-catalog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2024.3.12"
    app.kubernetes.io/managed-by: Helm
spec:
  exporter:
    image: 'ghcr.io/kubevault/vault-exporter:v0.1.1'
  stash:
    addon:
      backupTask:
        name: vault-backup-1.10.3
      restoreTask:
        name: vault-restore-1.10.3
  unsealer:
    image: 'kubevault/vault-unsealer:v0.18.0'
  vault:
    image: 'vault:1.7.2'
  version: 1.7.2
---
# Source: kubevault/charts/kubevault-catalog/templates/vaultserver/vaultserver-1.7.3.yaml
apiVersion: catalog.kubevault.com/v1alpha1
kind: VaultServerVersion
metadata:
  name: '1.7.3'
  labels:
    helm.sh/chart: kubevault-catalog-v2024.3.12
    app.kubernetes.io/name: kubevault-catalog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2024.3.12"
    app.kubernetes.io/managed-by: Helm
spec:
  exporter:
    image: 'ghcr.io/kubevault/vault-exporter:v0.1.1'
  stash:
    addon:
      backupTask:
        name: vault-backup-1.10.3
      restoreTask:
        name: vault-restore-1.10.3
  unsealer:
    image: 'kubevault/vault-unsealer:v0.18.0'
  vault:
    image: 'vault:1.7.3'
  version: 1.7.3
---
# Source: kubevault/charts/kubevault-catalog/templates/vaultserver/vaultserver-1.8.2.yaml
apiVersion: catalog.kubevault.com/v1alpha1
kind: VaultServerVersion
metadata:
  name: '1.8.2'
  labels:
    helm.sh/chart: kubevault-catalog-v2024.3.12
    app.kubernetes.io/name: kubevault-catalog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2024.3.12"
    app.kubernetes.io/managed-by: Helm
spec:
  exporter:
    image: 'ghcr.io/kubevault/vault-exporter:v0.1.1'
  stash:
    addon:
      backupTask:
        name: vault-backup-1.10.3
      restoreTask:
        name: vault-restore-1.10.3
  unsealer:
    image: 'kubevault/vault-unsealer:v0.18.0'
  vault:
    image: 'vault:1.8.2'
  version: 1.8.2
---
# Source: kubevault/charts/kubevault-catalog/templates/vaultserver/vaultserver-1.9.2.yaml
apiVersion: catalog.kubevault.com/v1alpha1
kind: VaultServerVersion
metadata:
  name: '1.9.2'
  labels:
    helm.sh/chart: kubevault-catalog-v2024.3.12
    app.kubernetes.io/name: kubevault-catalog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2024.3.12"
    app.kubernetes.io/managed-by: Helm
spec:
  exporter:
    image: 'ghcr.io/kubevault/vault-exporter:v0.1.1'
  stash:
    addon:
      backupTask:
        name: vault-backup-1.10.3
      restoreTask:
        name: vault-restore-1.10.3
  unsealer:
    image: 'kubevault/vault-unsealer:v0.18.0'
  vault:
    image: 'vault:1.9.2'
  version: 1.9.2
---
# Source: kubevault/charts/kubevault-operator/templates/appcatalog-user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:appcatalog:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: kubevault/charts/kubevault-operator/templates/appcatalog-user-roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: appscode:appcatalog:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubevault/charts/kubevault-operator/templates/license-checker-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-checker
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get"]
# Issue license
- apiGroups:
  - proxyserver.licenses.appscode.com
  resources:
  - licenserequests
  verbs: ["create"]
# Detect workload/owner of operator pod
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["get"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get"]
# Write events in case of license verification failure
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "create", "patch"]
---
# Source: kubevault/charts/kubevault-operator/templates/license-reader-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-reader
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Detect license server endpoint for kubevault addons
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get"]
- nonResourceURLs:
  - /appscode/license
  verbs: ["get"]
---
# Source: kubevault/charts/kubevault-operator/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubevault:core:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubevault.com
  - catalog.kubevault.com
  - policy.kubevault.com
  - appcatalog.appscode.com
  - engine.kubevault.com
  - ops.kubevault.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: kubevault/charts/kubevault-operator/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubevault:core:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubevault.com
  resources:
  - vaultservers
  verbs: ["*"]
- apiGroups:
  - policy.kubevault.com
  resources:
  - vaultpolicies
  - vaultpolicybindings
  verbs: ["*"]
- apiGroups:
  - engine.kubevault.com
  resources:
  - secretengines
  - mongodbroles
  - mysqlroles
  - redisroles
  - postgresroles
  - mariadbroles
  - awsroles
  - gcproles
  - azureroles
  - secretaccessrequests
  verbs: ["*"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - appbindings
  verbs: ["*"]
- apiGroups:
  - catalog.kubevault.com
  resources:
  - vaultserverversions
  verbs: ["get", "list", "watch"]
- apiGroups:
  - ops.kubevault.com
  resources:
  - vaultopsrequests
  verbs: ["*"]
---
# Source: kubevault/charts/kubevault-operator/templates/user-roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubevault:core:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubevault.com
  resources:
  - vaultservers
  verbs: ["get", "list", "watch"]
- apiGroups:
  - policy.kubevault.com
  resources:
  - vaultpolicies
  - vaultpolicybindings
  verbs: ["get", "list", "watch"]
- apiGroups:
  - engine.kubevault.com
  resources:
  - secretengines
  - mongodbroles
  - redisroles
  - mysqlroles
  - postgresroles
  - mariadbroles
  - awsroles
  - gcproles
  - azureroles
  - secretaccessrequests
  verbs: ["get", "list", "watch"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - appbindings
  verbs: ["get", "list", "watch"]
- apiGroups:
  - catalog.kubevault.com
  resources:
  - vaultserverversions
  verbs: ["get", "list", "watch"]
- apiGroups:
  - ops.kubevault.com
  resources:
  - vaultopsrequests
  verbs: ["*"]
---
# Source: kubevault/charts/kubevault-webhook-server/templates/garbage-collector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubevault:garbage-collector:psp
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - policy
  verbs: ["use"]
  resources:
  - podsecuritypolicies
---
# Source: kubevault/charts/kubevault-webhook-server/templates/license-checker-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-checker
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get"]
# Issue license
- apiGroups:
  - proxyserver.licenses.appscode.com
  resources:
  - licenserequests
  verbs: ["create"]
# Detect workload/owner of operator pod
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["get"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get"]
# Write events in case of license verification failure
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "create", "patch"]
---
# Source: kubevault/charts/kubevault-webhook-server/templates/license-reader-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-reader
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Detect license server endpoint for kubevault addons
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get"]
- nonResourceURLs:
  - /appscode/license
  verbs: ["get"]
---
# Source: kubevault/charts/kubevault-webhook-server/templates/garbage-collector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubevault:garbage-collector:psp
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubevault:garbage-collector:psp
subjects:
- kind: ServiceAccount
  name: generic-garbage-collector
  namespace: kubevault
