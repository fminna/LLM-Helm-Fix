---
# Source: node-configurer/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-node-configurer
  labels:
    helm.sh/chart: node-configurer-0.1.0
    app.kubernetes.io/name: node-configurer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "3.18"
    app.kubernetes.io/managed-by: Helm
---
# Source: node-configurer/templates/script.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-node-configurer-script-routes
  labels:
    helm.sh/chart: node-configurer-0.1.0
    app.kubernetes.io/name: node-configurer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "3.18"
    app.kubernetes.io/managed-by: Helm
data:
  configurer-routes.sh: |
    #!/bin/sh

    while true; do
      all_routes_correct=true

      if $all_routes_correct; then
        echo "All routes are correct. Sleeping..."
      fi

      sleep 30
    done
---
# Source: node-configurer/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: release-name-node-configurer
  labels:
    helm.sh/chart: node-configurer-0.1.0
    app.kubernetes.io/name: node-configurer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "3.18"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: node-configurer
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: node-configurer
        app.kubernetes.io/instance: release-name
    spec:
      hostNetwork: true
      serviceAccountName: release-name-node-configurer
      securityContext:
        {}
      containers:
        - name: node-configurer
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              drop:
              - ALL
          image: "alpine:3.18"
          imagePullPolicy: IfNotPresent
          command: ["/usr/local/bin/routes.sh"]
          volumeMounts:
            - name: configurer-script-routes
              mountPath: /usr/local/bin/routes.sh
              subPath: configurer-routes.sh
              readOnly: true
          resources:
            {}
      volumes:
        - name: configurer-script-routes
          configMap:
            name: release-name-node-configurer-script-routes
            defaultMode: 0755
