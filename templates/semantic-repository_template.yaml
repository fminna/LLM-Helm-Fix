---
# Source: semantic-repository/templates/backend/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-semantic-repository-backend
  namespace: "default"
  labels:
    helm.sh/chart: semantic-repository-1.1.0
    app.kubernetes.io/name: semantic-repository
    app.kubernetes.io/instance: release-name
    enabler: semantic-repository
    app.kubernetes.io/component: backend
    isMainInterface: "yes"
    tier: external
    app.kubernetes.io/version: "1.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/name: semantic-repository
    app.kubernetes.io/instance: release-name
    enabler: semantic-repository
    app.kubernetes.io/component: backend
    isMainInterface: "yes"
    tier: external
---
# Source: semantic-repository/templates/minio/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-semantic-repository-minio-headless
  namespace: "default"
  labels:
    helm.sh/chart: semantic-repository-1.1.0
    app.kubernetes.io/name: semantic-repository
    app.kubernetes.io/instance: release-name
    enabler: semantic-repository
    app.kubernetes.io/component: minio
    isMainInterface: "no"
    tier: internal
    app.kubernetes.io/version: "1.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - port: 9000
      targetPort: 9000
      protocol: TCP
  selector:
    app.kubernetes.io/name: semantic-repository
    app.kubernetes.io/instance: release-name
    enabler: semantic-repository
    app.kubernetes.io/component: minio
    isMainInterface: "no"
    tier: internal
---
# Source: semantic-repository/templates/minio/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-semantic-repository-minio
  namespace: "default"
  labels:
    helm.sh/chart: semantic-repository-1.1.0
    app.kubernetes.io/name: semantic-repository
    app.kubernetes.io/instance: release-name
    enabler: semantic-repository
    app.kubernetes.io/component: minio
    isMainInterface: "no"
    tier: internal
    app.kubernetes.io/version: "1.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 9000
      targetPort: 9000
      protocol: TCP
  selector:
    app.kubernetes.io/name: semantic-repository
    app.kubernetes.io/instance: release-name
    enabler: semantic-repository
    app.kubernetes.io/component: minio
    isMainInterface: "no"
    tier: internal
---
# Source: semantic-repository/templates/mongodb/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-semantic-repository-mongodb-headless
  namespace: "default"
  labels:
    helm.sh/chart: semantic-repository-1.1.0
    app.kubernetes.io/name: semantic-repository
    app.kubernetes.io/instance: release-name
    enabler: semantic-repository
    app.kubernetes.io/component: mongodb
    isMainInterface: "no"
    tier: internal
    app.kubernetes.io/version: "1.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - port: 27017
      targetPort: 27017
      protocol: TCP
  selector:
    app.kubernetes.io/name: semantic-repository
    app.kubernetes.io/instance: release-name
    enabler: semantic-repository
    app.kubernetes.io/component: mongodb
    isMainInterface: "no"
    tier: internal
---
# Source: semantic-repository/templates/mongodb/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-semantic-repository-mongodb
  namespace: "default"
  labels:
    helm.sh/chart: semantic-repository-1.1.0
    app.kubernetes.io/name: semantic-repository
    app.kubernetes.io/instance: release-name
    enabler: semantic-repository
    app.kubernetes.io/component: mongodb
    isMainInterface: "no"
    tier: internal
    app.kubernetes.io/version: "1.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 27017
      targetPort: 27017
      protocol: TCP
  selector:
    app.kubernetes.io/name: semantic-repository
    app.kubernetes.io/instance: release-name
    enabler: semantic-repository
    app.kubernetes.io/component: mongodb
    isMainInterface: "no"
    tier: internal
---
# Source: semantic-repository/templates/backend/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-semantic-repository-backend
  namespace: "default"
  labels:
    helm.sh/chart: semantic-repository-1.1.0
    app.kubernetes.io/name: semantic-repository
    app.kubernetes.io/instance: release-name
    enabler: semantic-repository
    app.kubernetes.io/component: backend
    isMainInterface: "yes"
    tier: external
    app.kubernetes.io/version: "1.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: semantic-repository
      app.kubernetes.io/instance: release-name
      enabler: semantic-repository
      app.kubernetes.io/component: backend
      isMainInterface: "yes"
      tier: external
  template:
    metadata:
      labels:
        helm.sh/chart: semantic-repository-1.1.0
        app.kubernetes.io/name: semantic-repository
        app.kubernetes.io/instance: release-name
        enabler: semantic-repository
        app.kubernetes.io/component: backend
        isMainInterface: "yes"
        tier: external
        app.kubernetes.io/version: "1.1.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      securityContext:
        {}
      containers:
        - name: backend
          securityContext:
            {}
          image: "assistiot/semantic_repository:1.0.0:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            {}
          env:
            - name: REPO_REST_HOST
              value: "0.0.0.0"
            - name: REPO_REST_PORT
              value: "8080"
            - name: REPO_MONGO_URL
              value: "mongodb://root:assistIsJoy@release-name-semantic-repository-mongodb:27017/?serverSelectionTimeoutMS=500&replicaSet=replicaset"
            - name: REPO_S3_URL
              value: "http://release-name-semantic-repository-minio:9000"
            - name: REPO_S3_KEY
              value: "semrepo"
            - name: REPO_S3_SECRET
              value: "k8sIsNotFun"
            - name: REPO_EXTRA_CONFIG
              value: ""
---
# Source: semantic-repository/templates/minio/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-semantic-repository-minio
  namespace: "default"
  labels:
    helm.sh/chart: semantic-repository-1.1.0
    app.kubernetes.io/name: semantic-repository
    app.kubernetes.io/instance: release-name
    enabler: semantic-repository
    app.kubernetes.io/component: minio
    isMainInterface: "no"
    tier: internal
    app.kubernetes.io/version: "1.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: release-name-semantic-repository-minio-headless
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: semantic-repository
      app.kubernetes.io/instance: release-name
      enabler: semantic-repository
      app.kubernetes.io/component: minio
      isMainInterface: "no"
      tier: internal
  template:
    metadata:
      labels:
        helm.sh/chart: semantic-repository-1.1.0
        app.kubernetes.io/name: semantic-repository
        app.kubernetes.io/instance: release-name
        enabler: semantic-repository
        app.kubernetes.io/component: minio
        isMainInterface: "no"
        tier: internal
        app.kubernetes.io/version: "1.1.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      securityContext:
        {}
      containers:
        - name: minio
          securityContext:
            {}
          image: "minio/minio:latest"
          imagePullPolicy: IfNotPresent
          args: ["minio", "server", "data"]
          ports:
            - containerPort: 9000
              protocol: TCP
          resources:
            {}
          env:
            - name: MINIO_ROOT_USER
              value: "semrepo"
            - name: MINIO_ROOT_PASSWORD
              value: "k8sIsNotFun"
          volumeMounts:
            - name: data
              mountPath: /data
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "5Gi"
---
# Source: semantic-repository/templates/mongodb/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-semantic-repository-mongodb
  namespace: "default"
  labels:
    helm.sh/chart: semantic-repository-1.1.0
    app.kubernetes.io/name: semantic-repository
    app.kubernetes.io/instance: release-name
    enabler: semantic-repository
    app.kubernetes.io/component: mongodb
    isMainInterface: "no"
    tier: internal
    app.kubernetes.io/version: "1.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: release-name-semantic-repository-mongodb-headless
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: semantic-repository
      app.kubernetes.io/instance: release-name
      enabler: semantic-repository
      app.kubernetes.io/component: mongodb
      isMainInterface: "no"
      tier: internal
  template:
    metadata:
      labels:
        helm.sh/chart: semantic-repository-1.1.0
        app.kubernetes.io/name: semantic-repository
        app.kubernetes.io/instance: release-name
        enabler: semantic-repository
        app.kubernetes.io/component: mongodb
        isMainInterface: "no"
        tier: internal
        app.kubernetes.io/version: "1.1.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      securityContext:
        {}
      containers:
        - name: mongodb
          securityContext:
            {}
          image: "docker.io/bitnami/mongodb:6.0"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
              protocol: TCP
          resources:
            {}
          env:
            - name: MONGODB_ROOT_PASSWORD
              value: "assistIsJoy"
#            - name: MONGODB_USER
#              value: "semrepo"
#            - name: MONGODB_PASSWORD
#              value: "nobodyExpectsTheSpanishPassword"
#            - name: MONGODB_DATABASE
#              value: 'semrepo'
            - name: MONGODB_REPLICA_SET_MODE
              value: 'primary'
            - name: MONGODB_REPLICA_SET_NAME
              value: "replicaset"
            - name: MONGODB_REPLICA_SET_KEY
              value: 'replicasetkey'
            - name: MONGODB_ADVERTISED_HOSTNAME
              value: "release-name-semantic-repository-mongodb"
          volumeMounts:
            - name: data
              mountPath: /bitnami
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "1Gi"
