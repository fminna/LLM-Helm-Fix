---
# Source: statefulset/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-statefulset
  labels:
    helm.sh/chart: statefulset-1.0.2
    app.kubernetes.io/name: statefulset
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: container-port
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: statefulset
    app.kubernetes.io/instance: release-name
---
# Source: statefulset/templates/statefulSet.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-statefulset
  labels:
    helm.sh/chart: statefulset-1.0.2
    app.kubernetes.io/name: statefulset
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  serviceName: release-name-statefulset
  podManagementPolicy: OrderedReady
  selector:
    matchLabels:
      app.kubernetes.io/name: statefulset
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: statefulset
        app.kubernetes.io/instance: release-name
    spec:
      securityContext:
        {}
      containers:
        - name: release-name-statefulset
          securityContext:
            {}
          image: "nginx:1.0.2"
          imagePullPolicy: IfNotPresent
          env: [ ]
          ports:
            - name: container-port
              containerPort: 80
          command: [
            
          ]
          args: [
          ]
          resources:
            {}
          volumeMounts:
            - name: volume
              mountPath: /mnt/volume
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: statefulset
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: master
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
  volumeClaimTemplates:
    - metadata:
        name: volume
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 2Gi
        storageClassName: longhorn
---
# Source: statefulset/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-statefulset
  labels:
    helm.sh/chart: statefulset-1.0.2
    app.kubernetes.io/name: statefulset
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
    - host: "chart-example.local"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: release-name-statefulset
                port:
                  number: 80
