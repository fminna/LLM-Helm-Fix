---
# Source: registry-ui/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-registry-ui
  labels:
    app.kubernetes.io/name: registry-ui
    helm.sh/chart: registry-ui-0.2.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: registry-ui
    app.kubernetes.io/instance: release-name
---
# Source: registry-ui/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-registry-ui
  labels:
    app.kubernetes.io/name: registry-ui
    helm.sh/chart: registry-ui-0.2.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: registry-ui
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: registry-ui
        app.kubernetes.io/instance: release-name
    spec:
      containers:
        - name: registry-ui
          image: "konradkleine/docker-registry-frontend:v2"
          imagePullPolicy: IfNotPresent
          env:
            - name: ENV_DOCKER_REGISTRY_HOST
              value: registry
            - name: ENV_DOCKER_REGISTRY_PORT
              value: "5000"
            
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
