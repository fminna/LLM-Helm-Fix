---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/backend/poddisruptionbudget-backend.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: loki-backend
  namespace: default
  labels:
    helm.sh/chart: loki-5.5.12
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.2"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: backend
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: loki
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: backend
  maxUnavailable: 1
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/read/poddisruptionbudget-read.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: loki-read
  namespace: default
  labels:
    helm.sh/chart: loki-5.5.12
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.2"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: read
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: loki
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: read
  maxUnavailable: 1
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/write/poddisruptionbudget-write.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: loki-write
  labels:
    helm.sh/chart: loki-5.5.12
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.2"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: write
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: loki
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: write
  maxUnavailable: 1
---
# Source: dnation-kubernetes-monitoring-stack/charts/dnation-kubernetes-monitoring/charts/dnation-kubernetes-jsonnet-translator/templates/serviceaccount.yaml
#
# Copyright 2020 The dNation Jsonnet Translator Authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-dnation-kubernetes-jsonnet-translator
  labels:
    app: dnation-kubernetes-jsonnet-translator
    helm.sh/chart: dnation-kubernetes-jsonnet-translator-1.0.3
    app.kubernetes.io/name: dnation-kubernetes-jsonnet-translator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.3"
    app.kubernetes.io/managed-by: Helm
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/charts/grafana/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: grafana-6.60.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "10.1.5"
    app.kubernetes.io/managed-by: Helm
  name: release-name-grafana
  namespace: default
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/charts/kube-state-metrics/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:    
    helm.sh/chart: kube-state-metrics-5.14.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.10.0"
    release: release-name
  name: release-name-kube-state-metrics
  namespace: default
imagePullSecrets:
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/charts/prometheus-node-exporter/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-prometheus-node-exporter
  namespace: default
  labels:
    helm.sh/chart: prometheus-node-exporter-4.23.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: prometheus-node-exporter
    app.kubernetes.io/name: prometheus-node-exporter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.6.1"
    jobLabel: node-exporter
    release: release-name
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/alertmanager/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-prometheus-alertmanager
  namespace: default
  labels:
    app: kube-prometheus-stack-alertmanager
    app.kubernetes.io/name: kube-prometheus-stack-alertmanager
    app.kubernetes.io/component: alertmanager
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
automountServiceAccountToken: true
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-prometheus-operator
  namespace: default
  labels:
    app: kube-prometheus-stack-operator
    app.kubernetes.io/name: kube-prometheus-stack-prometheus-operator
    app.kubernetes.io/component: prometheus-operator
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-prometheus-prometheus
  namespace: default
  labels:
    app: kube-prometheus-stack-prometheus
    app.kubernetes.io/name: kube-prometheus-stack-prometheus
    app.kubernetes.io/component: prometheus
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/charts/grafana-agent-operator/templates/operator-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-grafana-agent-operator
  labels:
    app.kubernetes.io/name: grafana-agent-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: operator
    helm.sh/chart: grafana-agent-operator-0.2.3
    app.kubernetes.io/version: "0.25.1"
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/loki-canary/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: loki-canary
  namespace: default
  labels:
    helm.sh/chart: loki-5.5.12
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.2"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: canary
  annotations:
automountServiceAccountToken: true
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/monitoring/grafana-agent.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-loki-grafana-agent
  namespace: default
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: loki
  namespace: default
  labels:
    helm.sh/chart: loki-5.5.12
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.2"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: dnation-kubernetes-monitoring-stack/charts/promtail/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-promtail
  namespace: default
  labels:
    helm.sh/chart: promtail-6.0.2
    app.kubernetes.io/name: promtail
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.5.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: dnation-kubernetes-monitoring-stack/charts/thanos/templates/query/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-thanos-query
  namespace: "default"
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: thanos
    app.kubernetes.io/version: 0.32.5
    helm.sh/chart: thanos-12.13.13
    app.kubernetes.io/component: query
automountServiceAccountToken: true
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/charts/grafana/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-grafana
  namespace: default
  labels:
    helm.sh/chart: grafana-6.60.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "10.1.5"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  admin-user: "YWRtaW4="
  admin-password: "cGFzcw=="
  ldap-toml: ""
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/alertmanager/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: alertmanager-kube-prometheus-alertmanager
  namespace: default
  labels:
    app: kube-prometheus-stack-alertmanager
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
data:
  alertmanager.yaml: "Z2xvYmFsOgogIHJlc29sdmVfdGltZW91dDogNW0KaW5oaWJpdF9ydWxlczoKLSBlcXVhbDoKICAtIGFsZXJ0bmFtZQogIHNvdXJjZV9tYXRjaDoKICAgIHNldmVyaXR5OiBjcml0aWNhbAogIHRhcmdldF9tYXRjaDoKICAgIHNldmVyaXR5OiB3YXJuaW5nCnJlY2VpdmVyczoKLSBuYW1lOiAibnVsbCIKcm91dGU6CiAgZ3JvdXBfYnk6CiAgLSBuYW1lc3BhY2UKICBncm91cF9pbnRlcnZhbDogNW0KICBncm91cF93YWl0OiAzMHMKICByZWNlaXZlcjogIm51bGwiCiAgcmVwZWF0X2ludGVydmFsOiAxMmgKICByb3V0ZXM6CiAgLSBtYXRjaDoKICAgICAgYWxlcnRuYW1lOiBXYXRjaGRvZwogICAgcmVjZWl2ZXI6ICJudWxsIgp0ZW1wbGF0ZXM6Ci0gL2V0Yy9hbGVydG1hbmFnZXIvY29uZmlnLyoudG1wbA=="
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kube-prometheus-prometheus
  namespace: default
  labels:
    app: kube-prometheus-stack-prometheus
    app.kubernetes.io/component: prometheus
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
data:
---
# Source: dnation-kubernetes-monitoring-stack/charts/promtail/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-promtail
  namespace: default
  labels:
    helm.sh/chart: promtail-6.0.2
    app.kubernetes.io/name: promtail
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.5.0"
    app.kubernetes.io/managed-by: Helm
stringData:
  promtail.yaml: |
    server:
      log_level: info
      http_listen_port: 3101
    
    clients:
      - tenant_id: 1
        url: http://loki-gateway/loki/api/v1/push
    
    positions:
      filename: /run/promtail/positions.yaml
    
    scrape_configs:
      # See also https://github.com/grafana/loki/blob/master/production/ksonnet/promtail/scrape_config.libsonnet for reference
      - job_name: kubernetes-pods
        pipeline_stages:
          - cri: {}
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_pod_controller_name
            regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?
            action: replace
            target_label: __tmp_controller_name
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
              - __meta_kubernetes_pod_label_app
              - __tmp_controller_name
              - __meta_kubernetes_pod_name
            regex: ^;*([^;]+)(;.*)?$
            action: replace
            target_label: app
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_instance
              - __meta_kubernetes_pod_label_release
            regex: ^;*([^;]+)(;.*)?$
            action: replace
            target_label: instance
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_component
              - __meta_kubernetes_pod_label_component
            regex: ^;*([^;]+)(;.*)?$
            action: replace
            target_label: component
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_node_name
            target_label: node_name
          - action: replace
            source_labels:
            - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            replacement: $1
            separator: /
            source_labels:
            - namespace
            - app
            target_label: job
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_name
            target_label: pod
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_container_name
            target_label: container
          - action: replace
            replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
            - __meta_kubernetes_pod_uid
            - __meta_kubernetes_pod_container_name
            target_label: __path__
          - action: replace
            regex: true/(.*)
            replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
            - __meta_kubernetes_pod_annotationpresent_kubernetes_io_config_hash
            - __meta_kubernetes_pod_annotation_kubernetes_io_config_hash
            - __meta_kubernetes_pod_container_name
            target_label: __path__
---
# Source: dnation-kubernetes-monitoring-stack/templates/dnation/brand.yaml
#
# Copyright 2020 The dNation Kubernetes Monitoring Stack Authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: v1
kind: Secret
metadata:
  name: dnation-brand
  namespace: default
  labels:
    app: dnation-kubernetes-monitoring-stack
data:
  dnation_brand.sh: IyEvYmluL2Jhc2gKIyBNb2RpZnkgZmF2aWNvbgpzZWQgLWkgJ3MvXFtcWy5BcHBUaXRsZVxdXF0vZE5hdGlvbi9nJyAvdXNyL3NoYXJlL2dyYWZhbmEvcHVibGljL3ZpZXdzL2luZGV4Lmh0bWwKc2VkIC1pICdzL1xbXFsuQXBwVGl0bGVcXVxdL2ROYXRpb24vZycgL3Vzci9zaGFyZS9ncmFmYW5hL3B1YmxpYy92aWV3cy9pbmRleC10ZW1wbGF0ZS5odG1sCnNlZCAtaSAncy9cW1xbLkZhdkljb25cXVxdL2h0dHBzOlwvXC9zdG9yYWdlLmdvb2dsZWFwaXMuY29tXC9jZG4uaWZuZS5ldVwvcHVibGljXC9pY29uc1wvZG5hdGlvbl9rOHNtOGcucG5nL2cnIC91c3Ivc2hhcmUvZ3JhZmFuYS9wdWJsaWMvdmlld3MvaW5kZXguaHRtbAojTW9kaWZ5IGxvZ3AKc2VkIC1pICdzQHB1YmxpYy9pbWcvZ3JhZmFuYV9pY29uLnN2Z0BwdWJsaWMvaW1nL2RuYXRpb25fbG9nby5zdmdAZycgL3Vzci9zaGFyZS9ncmFmYW5hL3B1YmxpYy9idWlsZC8qLioKI01vZGlmeSBhcHAgdGl0bGUKc2VkIC1pICdzLyJBcHBUaXRsZSIsIkdyYWZhbmEiLyJBcHBUaXRsZSIsImROYXRpb24iL2cnIC91c3Ivc2hhcmUvZ3JhZmFuYS9wdWJsaWMvYnVpbGQvKi4qCnNlZCAtaSAicy9zdGF0aWMgQXBwVGl0bGUgPSAnR3JhZmFuYScvc3RhdGljIEFwcFRpdGxlID0gJ2ROYXRpb24nL2ciIC91c3Ivc2hhcmUvZ3JhZmFuYS9wdWJsaWMvYnVpbGQvKi4qCiNNb2RpZnkgd2VsY29tZSBtZXNzYWdlCnNlZCAtaSAncy9XZWxjb21lIHRvIEdyYWZhbmEvZE5hdGlvbiBLdWJlcm5ldGVzIE1vbml0b3JpbmcvZycgL3Vzci9zaGFyZS9ncmFmYW5hL3B1YmxpYy9idWlsZC8qLioKI01vZGlmeSB0aGUgZG9jcwpzZWQgLWkgJ3NAaHR0cHM6Ly9ncmFmYW5hLmNvbS9kb2NzL2dyYWZhbmEvbGF0ZXN0Lz91dG1fc291cmNlPWdyYWZhbmFfZm9vdGVyQGh0dHBzOi8vZ2l0aHViLmNvbS9kTmF0aW9uQ2xvdWQva3ViZXJuZXRlcy1tb25pdG9yaW5nQGcnIC91c3Ivc2hhcmUvZ3JhZmFuYS9wdWJsaWMvYnVpbGQvKi4q
---
# Source: dnation-kubernetes-monitoring-stack/charts/dnation-kubernetes-monitoring/templates/dashboards/dashboards.yaml
#
# Copyright 2020 The dNation Kubernetes Monitoring Authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: default
  name: release-name-dnation-kubernetes-monitoring-dashboards-jsonnet
  labels:
    
    app: dnation-kubernetes-monitoring
    release: release-name
    grafana_dashboard_jsonnet: "1"
  annotations:
    jsonnet_filename: "dashboards.jsonnet"
    tla_codes: |-
      { 'customConfig': '{"blackboxMonitoring":{"enabled":false},"clusterMonitoring":{"clusters":[{"apps":[],"description":"Kubernetes cluster monitoring","label":"observer-cluster","name":"K8sCluster"}],"enabled":true},"commonLabels":{},"dnation-kubernetes-jsonnet-translator":{"affinity":{},"enabled":true,"fullnameOverride":"","global":{},"image":{"args":["--libsonnet","https://github.com/grafana/grafonnet-lib/grafonnet@daad85cf3fad3580e58029414630e29956aefe21","https://github.com/thelastpickle/grafonnet-polystat-panel@275a48de57afdac0d72219d82863d8ab8bd0e682"],"pullPolicy":"IfNotPresent","repository":"dnationcloud/kubernetes-jsonnet-translator","tag":""},"nameOverride":"","nodeSelector":{},"podAnnotations":{},"podSecurityContext":{},"preDeleteHook":{"enable":true},"rbac":{"create":true},"replicaCount":1,"resources":{},"securityContext":{},"serviceAccount":{"annotations":{},"create":true},"tolerations":[]},"enabled":true,"fullnameOverride":"","global":{},"grafanaDashboards":{"enable":true,"labelGrafana":{"grafana_dashboard":"1"},"labelJsonnet":{"grafana_dashboard_jsonnet":"1"}},"hostMonitoring":{"enabled":false,"hosts":[]},"kaasMonitoring":{"clusters":[{"description":"KaaS monitoring","name":"KaasCluster"}],"enabled":false},"nameOverride":"","namespaceOverride":"","prometheusRules":{"enable":true,"labelJsonnet":{"prometheus_rule_jsonnet":"1"},"labelPrometheus":{"prometheus_rule":"1"}},"testbedMonitoring":{"enabled":false}}' }
    grafana_label: "grafana_dashboard=1"
binaryData:
  jsonnet-dashboards.tar.gz: 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
---
# Source: dnation-kubernetes-monitoring-stack/charts/dnation-kubernetes-monitoring/templates/rules/rules.yaml
#
# Copyright 2020 The dNation Kubernetes Monitoring Authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: default
  name: release-name-dnation-kubernetes-monitoring-rules-jsonnet
  labels:
    
    app: dnation-kubernetes-monitoring
    release: release-name
    prometheus_rule_jsonnet: "1"
  annotations:
    jsonnet_filename: "rules.jsonnet"
    tla_codes: |-
      { 'customConfig': '{"blackboxMonitoring":{"enabled":false},"clusterMonitoring":{"clusters":[{"apps":[],"description":"Kubernetes cluster monitoring","label":"observer-cluster","name":"K8sCluster"}],"enabled":true},"commonLabels":{},"dnation-kubernetes-jsonnet-translator":{"affinity":{},"enabled":true,"fullnameOverride":"","global":{},"image":{"args":["--libsonnet","https://github.com/grafana/grafonnet-lib/grafonnet@daad85cf3fad3580e58029414630e29956aefe21","https://github.com/thelastpickle/grafonnet-polystat-panel@275a48de57afdac0d72219d82863d8ab8bd0e682"],"pullPolicy":"IfNotPresent","repository":"dnationcloud/kubernetes-jsonnet-translator","tag":""},"nameOverride":"","nodeSelector":{},"podAnnotations":{},"podSecurityContext":{},"preDeleteHook":{"enable":true},"rbac":{"create":true},"replicaCount":1,"resources":{},"securityContext":{},"serviceAccount":{"annotations":{},"create":true},"tolerations":[]},"enabled":true,"fullnameOverride":"","global":{},"grafanaDashboards":{"enable":true,"labelGrafana":{"grafana_dashboard":"1"},"labelJsonnet":{"grafana_dashboard_jsonnet":"1"}},"hostMonitoring":{"enabled":false,"hosts":[]},"kaasMonitoring":{"clusters":[{"description":"KaaS monitoring","name":"KaasCluster"}],"enabled":false},"nameOverride":"","namespaceOverride":"","prometheusRules":{"enable":true,"labelJsonnet":{"prometheus_rule_jsonnet":"1"},"labelPrometheus":{"prometheus_rule":"1"}},"testbedMonitoring":{"enabled":false}}' }
    prometheus_label: "prometheus_rule=1"
binaryData:
  jsonnet-rules.tar.gz: 
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/charts/grafana/templates/configmap-dashboard-provider.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    helm.sh/chart: grafana-6.60.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "10.1.5"
    app.kubernetes.io/managed-by: Helm
  name: release-name-grafana-config-dashboards
  namespace: default
data:
  provider.yaml: |-
    apiVersion: 1
    providers:
      - name: 'dNation'
        orgId: 1
        folder: 'dNation'
        type: file
        disableDeletion: false
        allowUiUpdates: true
        updateIntervalSeconds: 30
        options:
          foldersFromFilesStructure: false
          path: /var/lib/grafana/dashboards/dnation
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/charts/grafana/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-grafana
  namespace: default
  labels:
    helm.sh/chart: grafana-6.60.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "10.1.5"
    app.kubernetes.io/managed-by: Helm
data:
  plugins: camptocamp-prometheus-alertmanager-datasource 1.0.0,grafana-polystat-panel 1.2.11
  grafana.ini: |
    [analytics]
    check_for_updates = true
    [grafana_net]
    url = https://grafana.net
    [log]
    mode = console
    [paths]
    data = /var/lib/grafana/
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
    [server]
    domain = ''
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/grafana/configmaps-datasources.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kube-prometheus-grafana-datasource
  namespace: default
  labels:
    grafana_datasource: "1"
    app: kube-prometheus-stack-grafana
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
data:
  datasource.yaml: |-
    apiVersion: 1
    datasources:
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki
  labels:
    helm.sh/chart: loki-5.5.12
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.2"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    
    auth_enabled: true
    common:
      compactor_address: 'loki-backend'
      path_prefix: /var/loki
      replication_factor: 3
      storage:
        s3:
          bucketnames: chunks
          insecure: false
          s3forcepathstyle: false
    frontend:
      scheduler_address: query-scheduler-discovery.default.svc.cluster.local.:9095
    frontend_worker:
      scheduler_address: query-scheduler-discovery.default.svc.cluster.local.:9095
    index_gateway:
      mode: ring
    limits_config:
      enforce_metric_name: false
      max_cache_freshness_per_query: 10m
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      split_queries_by_interval: 15m
    memberlist:
      join_members:
      - loki-memberlist
    query_range:
      align_queries_with_step: true
    ruler:
      storage:
        s3:
          bucketnames: ruler
          insecure: false
          s3forcepathstyle: false
        type: s3
    runtime_config:
      file: /etc/loki/runtime-config/runtime-config.yaml
    schema_config:
      configs:
      - from: "2022-01-11"
        index:
          period: 24h
          prefix: loki_index_
        object_store: s3
        schema: v12
        store: boltdb-shipper
    server:
      grpc_listen_port: 9095
      http_listen_port: 3100
    storage_config:
      hedging:
        at: 250ms
        max_per_second: 20
        up_to: 3
    table_manager:
      retention_deletes_enabled: false
      retention_period: 0
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/gateway/configmap-gateway.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-gateway
  namespace: default
  labels:
    helm.sh/chart: loki-5.5.12
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.2"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: gateway
data:
  nginx.conf: |    
    worker_processes  5;  ## Default: 1
    error_log  /dev/stderr;
    pid        /tmp/nginx.pid;
    worker_rlimit_nofile 8192;
    
    events {
      worker_connections  4096;  ## Default: 1024
    }
    
    http {
      client_body_temp_path /tmp/client_temp;
      proxy_temp_path       /tmp/proxy_temp_path;
      fastcgi_temp_path     /tmp/fastcgi_temp;
      uwsgi_temp_path       /tmp/uwsgi_temp;
      scgi_temp_path        /tmp/scgi_temp;
    
      client_max_body_size 4M;
    
      proxy_read_timeout    600; ## 6 minutes
      proxy_send_timeout    600;
      proxy_connect_timeout 600;
    
      proxy_http_version    1.1;
    
      default_type application/octet-stream;
      log_format   main '$remote_addr - $remote_user [$time_local]  $status '
            '"$request" $body_bytes_sent "$http_referer" '
            '"$http_user_agent" "$http_x_forwarded_for"';
      access_log   /dev/stderr  main;
    
      sendfile     on;
      tcp_nopush   on;
      resolver kube-dns.kube-system.svc.cluster.local.;
      
    
      server {
        listen             8080;
        listen             [::]:8080;
    
        location = / {
          return 200 'OK';
          auth_basic off;
        }
    
    
        # Distributor
        location = /api/prom/push {
          proxy_pass       http://loki-write.default.svc.cluster.local:3100$request_uri;
        }
        location = /loki/api/v1/push {
          proxy_pass       http://loki-write.default.svc.cluster.local:3100$request_uri;
        }
        location = /distributor/ring {
          proxy_pass       http://loki-write.default.svc.cluster.local:3100$request_uri;
        }
    
        # Ingester
        location = /flush {
          proxy_pass       http://loki-write.default.svc.cluster.local:3100$request_uri;
        }
        location ^~ /ingester/ {
          proxy_pass       http://loki-write.default.svc.cluster.local:3100$request_uri;
        }
        location = /ingester {
          internal;        # to suppress 301
        }
    
        # Ring
        location = /ring {
          proxy_pass       http://loki-write.default.svc.cluster.local:3100$request_uri;
        }
    
        # MemberListKV
        location = /memberlist {
          proxy_pass       http://loki-write.default.svc.cluster.local:3100$request_uri;
        }
    
    
        # Ruler
        location = /ruler/ring {
          proxy_pass       http://loki-backend.default.svc.cluster.local:3100$request_uri;
        }
        location = /api/prom/rules {
          proxy_pass       http://loki-backend.default.svc.cluster.local:3100$request_uri;
        }
        location ^~ /api/prom/rules/ {
          proxy_pass       http://loki-backend.default.svc.cluster.local:3100$request_uri;
        }
        location = /loki/api/v1/rules {
          proxy_pass       http://loki-backend.default.svc.cluster.local:3100$request_uri;
        }
        location ^~ /loki/api/v1/rules/ {
          proxy_pass       http://loki-backend.default.svc.cluster.local:3100$request_uri;
        }
        location = /prometheus/api/v1/alerts {
          proxy_pass       http://loki-backend.default.svc.cluster.local:3100$request_uri;
        }
        location = /prometheus/api/v1/rules {
          proxy_pass       http://loki-backend.default.svc.cluster.local:3100$request_uri;
        }
    
        # Compactor
        location = /compactor/ring {
          proxy_pass       http://loki-backend.default.svc.cluster.local:3100$request_uri;
        }
        location = /loki/api/v1/delete {
          proxy_pass       http://loki-backend.default.svc.cluster.local:3100$request_uri;
        }
        location = /loki/api/v1/cache/generation_numbers {
          proxy_pass       http://loki-backend.default.svc.cluster.local:3100$request_uri;
        }
    
        # IndexGateway
        location = /indexgateway/ring {
          proxy_pass       http://loki-backend.default.svc.cluster.local:3100$request_uri;
        }
    
        # QueryScheduler
        location = /scheduler/ring {
          proxy_pass       http://loki-backend.default.svc.cluster.local:3100$request_uri;
        }
    
    
        # QueryFrontend, Querier
        location = /api/prom/tail {
          proxy_pass       http://loki-read.default.svc.cluster.local:3100$request_uri;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
        }
        location = /loki/api/v1/tail {
          proxy_pass       http://loki-read.default.svc.cluster.local:3100$request_uri;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
        }
        location ^~ /api/prom/ {
          proxy_pass       http://loki-read.default.svc.cluster.local:3100$request_uri;
        }
        location = /api/prom {
          internal;        # to suppress 301
        }
        location ^~ /loki/api/v1/ {
          proxy_pass       http://loki-read.default.svc.cluster.local:3100$request_uri;
        }
        location = /loki/api/v1 {
          internal;        # to suppress 301
        }
      }
    }
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/monitoring/dashboards/configmap-1.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-dashboards-1
  namespace: default
  labels:
    helm.sh/chart: loki-5.5.12
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.2"
    app.kubernetes.io/managed-by: Helm
    grafana_dashboard: "1"
data:
  "loki-chunks.json": |
    {"annotations":{"list":[]},"editable":true,"gnetId":null,"graphTooltip":0,"hideControls":false,"links":[{"asDropdown":true,"icon":"external link","includeVars":true,"keepTime":true,"tags":["loki"],"targetBlank":false,"title":"Loki Dashboards","type":"dashboards"}],"refresh":"10s","rows":[{"collapse":false,"height":"250px","panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":1,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(loki_ingester_memory_chunks{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"})","format":"time_series","intervalFactor":2,"legendFormat":"series","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Series","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":2,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(loki_ingester_memory_chunks{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"}) / sum(loki_ingester_memory_streams{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"})","format":"time_series","intervalFactor":2,"legendFormat":"chunks","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Chunks per series","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]}],"repeat":null,"repeatIteration":null,"repeatRowId":null,"showTitle":true,"title":"Active Series / Chunks","titleSize":"h6"},{"collapse":false,"height":"250px","panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":3,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"histogram_quantile(0.99, sum(rate(loki_ingester_chunk_utilization_bucket{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"}[$__rate_interval])) by (le)) * 1","format":"time_series","intervalFactor":2,"legendFormat":"99th Percentile","refId":"A","step":10},{"expr":"histogram_quantile(0.50, sum(rate(loki_ingester_chunk_utilization_bucket{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"}[$__rate_interval])) by (le)) * 1","format":"time_series","intervalFactor":2,"legendFormat":"50th Percentile","refId":"B","step":10},{"expr":"sum(rate(loki_ingester_chunk_utilization_sum{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"}[$__rate_interval])) * 1 / sum(rate(loki_ingester_chunk_utilization_count{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"}[$__rate_interval]))","format":"time_series","intervalFactor":2,"legendFormat":"Average","refId":"C","step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Utilization","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percentunit","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":4,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"histogram_quantile(0.99, sum(rate(loki_ingester_chunk_age_seconds_bucket{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"}[$__rate_interval])) by (le)) * 1e3","format":"time_series","intervalFactor":2,"legendFormat":"99th Percentile","refId":"A","step":10},{"expr":"histogram_quantile(0.50, sum(rate(loki_ingester_chunk_age_seconds_bucket{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"}[$__rate_interval])) by (le)) * 1e3","format":"time_series","intervalFactor":2,"legendFormat":"50th Percentile","refId":"B","step":10},{"expr":"sum(rate(loki_ingester_chunk_age_seconds_sum{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"}[$__rate_interval])) * 1e3 / sum(rate(loki_ingester_chunk_age_seconds_count{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"}[$__rate_interval]))","format":"time_series","intervalFactor":2,"legendFormat":"Average","refId":"C","step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Age","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]}],"repeat":null,"repeatIteration":null,"repeatRowId":null,"showTitle":true,"title":"Flush Stats","titleSize":"h6"},{"collapse":false,"height":"250px","panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":5,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"histogram_quantile(0.99, sum(rate(loki_ingester_chunk_entries_bucket{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"}[$__rate_interval])) by (le)) * 1","format":"time_series","intervalFactor":2,"legendFormat":"99th Percentile","refId":"A","step":10},{"expr":"histogram_quantile(0.50, sum(rate(loki_ingester_chunk_entries_bucket{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"}[$__rate_interval])) by (le)) * 1","format":"time_series","intervalFactor":2,"legendFormat":"50th Percentile","refId":"B","step":10},{"expr":"sum(rate(loki_ingester_chunk_entries_sum{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"}[$__rate_interval])) * 1 / sum(rate(loki_ingester_chunk_entries_count{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"}[$__rate_interval]))","format":"time_series","intervalFactor":2,"legendFormat":"Average","refId":"C","step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Log Entries Per Chunk","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":6,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(loki_chunk_store_index_entries_per_chunk_sum{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"}[5m])) / sum(rate(loki_chunk_store_index_entries_per_chunk_count{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"}[5m]))","format":"time_series","intervalFactor":2,"legendFormat":"Index Entries","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Index Entries Per Chunk","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]}],"repeat":null,"repeatIteration":null,"repeatRowId":null,"showTitle":true,"title":"Flush Stats","titleSize":"h6"},{"collapse":false,"height":"250px","panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":7,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"cortex_ingester_flush_queue_length{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"}","format":"time_series","intervalFactor":2,"legendFormat":"{{pod}}","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Queue Length","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{"1xx":"#EAB839","2xx":"#7EB26D","3xx":"#6ED0E0","4xx":"#EF843C","5xx":"#E24D42","error":"#E24D42","success":"#7EB26D"},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":10,"id":8,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":0,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":true,"steppedLine":false,"targets":[{"expr":"sum by (status) (\n  label_replace(label_replace(rate(loki_ingester_chunk_age_seconds_count{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-z]+)\"))\n","format":"time_series","intervalFactor":2,"legendFormat":"{{status}}","refId":"A","step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Flush Rate","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]}],"repeat":null,"repeatIteration":null,"repeatRowId":null,"showTitle":true,"title":"Flush Stats","titleSize":"h6"},{"collapse":false,"height":"250px","panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":9,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(loki_ingester_chunks_flushed_total{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"}[$__rate_interval]))","format":"time_series","intervalFactor":2,"legendFormat":"{{pod}}","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Chunks Flushed/Second","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":10,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":true,"steppedLine":false,"targets":[{"expr":"sum by (reason) (rate(loki_ingester_chunks_flushed_total{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"}[$__rate_interval])) / ignoring(reason) group_left sum(rate(loki_ingester_chunks_flushed_total{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"}[$__rate_interval]))","format":"time_series","intervalFactor":2,"legendFormat":"{{reason}}","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Chunk Flush Reason","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":1,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":1,"min":null,"show":false}]}],"repeat":null,"repeatIteration":null,"repeatRowId":null,"showTitle":true,"title":"Flush Stats","titleSize":"h6"},{"collapse":false,"height":"250px","panels":[{"cards":{"cardPadding":null,"cardRound":null},"color":{"cardColor":"#b4ff00","colorScale":"sqrt","colorScheme":"interpolateSpectral","exponent":0.5,"mode":"spectrum"},"dataFormat":"tsbuckets","datasource":"$datasource","heatmap":{},"hideZeroBuckets":false,"highlightCards":true,"id":11,"legend":{"show":true},"span":12,"targets":[{"expr":"sum by (le) (rate(loki_ingester_chunk_utilization_bucket{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"}[$__rate_interval]))","format":"heatmap","intervalFactor":2,"legendFormat":"{{le}}","refId":"A"}],"title":"Chunk Utilization","tooltip":{"show":true,"showHistogram":true},"type":"heatmap","xAxis":{"show":true},"xBucketNumber":null,"xBucketSize":null,"yAxis":{"decimals":0,"format":"percentunit","show":true,"splitFactor":null},"yBucketBound":"auto"}],"repeat":null,"repeatIteration":null,"repeatRowId":null,"showTitle":true,"title":"Utilization","titleSize":"h6"},{"collapse":false,"height":"250px","panels":[{"cards":{"cardPadding":null,"cardRound":null},"color":{"cardColor":"#b4ff00","colorScale":"sqrt","colorScheme":"interpolateSpectral","exponent":0.5,"mode":"spectrum"},"dataFormat":"tsbuckets","datasource":"$datasource","heatmap":{},"hideZeroBuckets":false,"highlightCards":true,"id":12,"legend":{"show":true},"span":12,"targets":[{"expr":"sum(rate(loki_ingester_chunk_size_bytes_bucket{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"}[$__rate_interval])) by (le)","format":"heatmap","intervalFactor":2,"legendFormat":"{{le}}","refId":"A"}],"title":"Chunk Size Bytes","tooltip":{"show":true,"showHistogram":true},"type":"heatmap","xAxis":{"show":true},"xBucketNumber":null,"xBucketSize":null,"yAxis":{"decimals":0,"format":"bytes","show":true,"splitFactor":null},"yBucketBound":"auto"}],"repeat":null,"repeatIteration":null,"repeatRowId":null,"showTitle":true,"title":"Utilization","titleSize":"h6"},{"collapse":false,"height":"250px","panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":13,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":12,"stack":false,"steppedLine":false,"targets":[{"expr":"histogram_quantile(0.99, sum(rate(loki_ingester_chunk_size_bytes_bucket{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"}[1m])) by (le))","format":"time_series","intervalFactor":2,"legendFormat":"p99","legendLink":null,"step":10},{"expr":"histogram_quantile(0.90, sum(rate(loki_ingester_chunk_size_bytes_bucket{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"}[1m])) by (le))","format":"time_series","intervalFactor":2,"legendFormat":"p90","legendLink":null,"step":10},{"expr":"histogram_quantile(0.50, sum(rate(loki_ingester_chunk_size_bytes_bucket{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"}[1m])) by (le))","format":"time_series","intervalFactor":2,"legendFormat":"p50","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Chunk Size Quantiles","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"bytes","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]}],"repeat":null,"repeatIteration":null,"repeatRowId":null,"showTitle":true,"title":"Utilization","titleSize":"h6"},{"collapse":false,"height":"250px","panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":14,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":12,"stack":false,"steppedLine":false,"targets":[{"expr":"histogram_quantile(0.5, sum(rate(loki_ingester_chunk_bounds_hours_bucket{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"}[5m])) by (le))","format":"time_series","intervalFactor":2,"legendFormat":"p50","legendLink":null,"step":10},{"expr":"histogram_quantile(0.99, sum(rate(loki_ingester_chunk_bounds_hours_bucket{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"}[5m])) by (le))","format":"time_series","intervalFactor":2,"legendFormat":"p99","legendLink":null,"step":10},{"expr":"sum(rate(loki_ingester_chunk_bounds_hours_sum{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"}[5m])) / sum(rate(loki_ingester_chunk_bounds_hours_count{cluster=\"$cluster\", job=~\"$namespace/(loki|enterprise-logs)-write\"}[5m]))","format":"time_series","intervalFactor":2,"legendFormat":"avg","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Chunk Duration hours (end-start)","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]}],"repeat":null,"repeatIteration":null,"repeatRowId":null,"showTitle":true,"title":"Duration","titleSize":"h6"}],"schemaVersion":14,"style":"dark","tags":["loki"],"templating":{"list":[{"current":{"text":"default","value":"default"},"hide":0,"label":"Data Source","name":"datasource","options":[],"query":"prometheus","refresh":1,"regex":"","type":"datasource"},{"allValue":null,"current":{"text":"prod","value":"prod"},"datasource":"$datasource","hide":0,"includeAll":false,"label":"cluster","multi":false,"name":"cluster","options":[],"query":"label_values(loki_build_info, cluster)","refresh":1,"regex":"","sort":2,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{"text":"prod","value":"prod"},"datasource":"$datasource","hide":0,"includeAll":false,"label":"namespace","multi":false,"name":"namespace","options":[],"query":"label_values(loki_build_info{cluster=~\"$cluster\"}, namespace)","refresh":1,"regex":"","sort":2,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-1h","to":"now"},"timepicker":{"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"],"time_options":["5m","15m","1h","6h","12h","24h","2d","7d","30d"]},"timezone":"utc","title":"Loki / Chunks","uid":"chunks","version":0}
  "loki-deletion.json": |
    {"annotations":{"list":[]},"editable":true,"gnetId":null,"graphTooltip":0,"hideControls":false,"links":[{"asDropdown":true,"icon":"external link","includeVars":true,"keepTime":true,"tags":["loki"],"targetBlank":false,"title":"Loki Dashboards","type":"dashboards"}],"refresh":"10s","rows":[{"collapse":false,"height":"100px","panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"format":"none","id":1,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(loki_compactor_pending_delete_requests_count{cluster=~\"$cluster\", namespace=~\"$namespace\"})","format":"time_series","instant":true,"intervalFactor":2,"refId":"A"}],"thresholds":"70,80","timeFrom":null,"timeShift":null,"title":"Number of Pending Requests","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"singlestat","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"format":"dtdurations","id":2,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"max(loki_compactor_oldest_pending_delete_request_age_seconds{cluster=~\"$cluster\", namespace=~\"$namespace\"})","format":"time_series","instant":true,"intervalFactor":2,"refId":"A"}],"thresholds":"70,80","timeFrom":null,"timeShift":null,"title":"Oldest Pending Request Age","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"singlestat","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]}],"repeat":null,"repeatIteration":null,"repeatRowId":null,"showTitle":false,"title":"Headlines","titleSize":"h6"},{"collapse":false,"height":"250px","panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":3,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(increase(loki_compactor_delete_requests_received_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[1d]))","format":"time_series","intervalFactor":2,"legendFormat":"received","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Delete Requests Received / Day","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":4,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(increase(loki_compactor_delete_requests_processed_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[1d]))","format":"time_series","intervalFactor":2,"legendFormat":"processed","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Delete Requests Processed / Day","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]}],"repeat":null,"repeatIteration":null,"repeatRowId":null,"showTitle":true,"title":"Churn","titleSize":"h6"},{"collapse":false,"height":"250px","panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":5,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":12,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(increase(loki_compactor_load_pending_requests_attempts_total{status=\"fail\", cluster=~\"$cluster\", namespace=~\"$namespace\"}[1h]))","format":"time_series","intervalFactor":2,"legendFormat":"failures","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Failures in Loading Delete Requests / Hour","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]}],"repeat":null,"repeatIteration":null,"repeatRowId":null,"showTitle":true,"title":"Failures","titleSize":"h6"},{"collapse":false,"height":"250px","panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":6,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":12,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(loki_compactor_deleted_lines{cluster=~\"$cluster\",job=~\"$namespace/(loki|enterprise-logs)-read\"}[$__rate_interval])) by (user)","format":"time_series","intervalFactor":2,"legendFormat":"{{user}}","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Lines Deleted / Sec","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]}],"repeat":null,"repeatIteration":null,"repeatRowId":null,"showTitle":true,"title":"Deleted lines","titleSize":"h6"}],"schemaVersion":14,"style":"dark","tags":["loki"],"templating":{"list":[{"current":{"text":"default","value":"default"},"hide":0,"label":"Data Source","name":"datasource","options":[],"query":"prometheus","refresh":1,"regex":"","type":"datasource"},{"allValue":null,"current":{"text":"prod","value":"prod"},"datasource":"$datasource","hide":0,"includeAll":false,"label":"cluster","multi":false,"name":"cluster","options":[],"query":"label_values(loki_build_info, cluster)","refresh":1,"regex":"","sort":2,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{"text":"prod","value":"prod"},"datasource":"$datasource","hide":0,"includeAll":false,"label":"namespace","multi":false,"name":"namespace","options":[],"query":"label_values(loki_build_info{cluster=~\"$cluster\"}, namespace)","refresh":1,"regex":"","sort":2,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-1h","to":"now"},"timepicker":{"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"],"time_options":["5m","15m","1h","6h","12h","24h","2d","7d","30d"]},"timezone":"utc","title":"Loki / Deletion","uid":"deletion","version":0}
  "loki-logs.json": |
    {"annotations":{"list":[]},"editable":true,"gnetId":null,"graphTooltip":0,"hideControls":false,"id":8,"iteration":1583185057230,"links":[{"asDropdown":true,"icon":"external link","includeVars":true,"keepTime":true,"tags":["loki"],"targetBlank":false,"title":"Loki Dashboards","type":"dashboards"}],"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":4,"w":3,"x":0,"y":0},"hiddenSeries":false,"id":35,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(go_goroutines{cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$deployment.*\", pod=~\"$pod\"})","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"goroutines","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":4,"w":3,"x":3,"y":0},"hiddenSeries":false,"id":41,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(go_gc_duration_seconds{cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$deployment.*\", pod=~\"$pod\"}) by (quantile)","legendFormat":"{{quantile}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"gc duration","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":4,"w":3,"x":6,"y":0},"hiddenSeries":false,"id":36,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(container_cpu_usage_seconds_total{cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$deployment.*\", pod=~\"$pod\", container=~\"$container\"}[5m]))","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"cpu","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":4,"w":3,"x":9,"y":0},"hiddenSeries":false,"id":40,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(container_memory_working_set_bytes{cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$deployment.*\", pod=~\"$pod\", container=~\"$container\"})","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"working set","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"bytes","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":4,"w":3,"x":12,"y":0},"hiddenSeries":false,"id":38,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(container_network_transmit_bytes_total{cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$deployment.*\", pod=~\"$pod\"}[5m]))","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"tx","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"bytes","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":4,"w":3,"x":15,"y":0},"hiddenSeries":false,"id":39,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(container_network_receive_bytes_total{cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$deployment.*\", pod=~\"$pod\"}[5m]))","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"rx","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"decbytes","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":4,"w":3,"x":18,"y":0},"hiddenSeries":false,"id":37,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"increase(kube_pod_container_status_last_terminated_reason{cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$deployment.*\", pod=~\"$pod\", container=~\"$container\"}[30m]) \u003e 0","legendFormat":"{{reason}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"restarts","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"bytes","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":4,"w":3,"x":21,"y":0},"hiddenSeries":false,"id":42,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(promtail_custom_bad_words_total{cluster=\"$cluster\", exported_namespace=\"$namespace\", exported_pod=~\"$deployment.*\", exported_pod=~\"$pod\", container=~\"$container\"}[5m])) by (level)","legendFormat":"{{level}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"bad words","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"bytes","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$logs","fill":1,"fillGradient":0,"gridPos":{"h":7,"w":24,"x":0,"y":4},"hiddenSeries":false,"id":31,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[{"alias":"warn","color":"#FF780A"},{"alias":"error","color":"#E02F44"},{"alias":"info","color":"#56A64B"},{"alias":"debug","color":"#3274D9"}],"spaceLength":10,"stack":true,"steppedLine":false,"targets":[{"expr":"sum(rate({cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$deployment.*\", pod=~\"$pod\", container=~\"$container\" } |logfmt| level=\"$level\" |= \"$filter\" [5m])) by (level)","intervalFactor":3,"legendFormat":"{{level}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Log Rate","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":false,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"$logs","gridPos":{"h":19,"w":24,"x":0,"y":6},"id":29,"maxDataPoints":"","options":{"showLabels":false,"showTime":true,"sortOrder":"Descending","wrapLogMessage":true},"targets":[{"expr":"{cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$deployment.*\", pod=~\"$pod\", container=~\"$container\"} | logfmt | level=\"$level\" |= \"$filter\"","refId":"A"}],"timeFrom":null,"timeShift":null,"title":"Logs","type":"logs"}],"refresh":"10s","rows":[],"schemaVersion":14,"style":"dark","tags":["loki"],"templating":{"list":[{"current":{"text":"default","value":"default"},"hide":0,"label":"Data Source","name":"datasource","options":[],"query":"prometheus","refresh":1,"regex":"","type":"datasource"},{"allValue":null,"current":{"text":"prod","value":"prod"},"datasource":"$datasource","hide":0,"includeAll":false,"label":"cluster","multi":false,"name":"cluster","options":[],"query":"label_values(loki_build_info, cluster)","refresh":1,"regex":"","sort":2,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{"text":"prod","value":"prod"},"datasource":"$datasource","hide":0,"includeAll":false,"label":"namespace","multi":false,"name":"namespace","options":[],"query":"label_values(loki_build_info{cluster=~\"$cluster\"}, namespace)","refresh":1,"regex":"","sort":2,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"hide":0,"label":null,"name":"logs","options":[],"query":"loki","refresh":1,"regex":"","type":"datasource"},{"allValue":null,"current":{},"datasource":"$datasource","hide":0,"includeAll":false,"label":null,"multi":false,"name":"deployment","options":[],"query":"label_values(kube_deployment_created{cluster=\"$cluster\", namespace=\"$namespace\"}, deployment)","refresh":0,"regex":"","sort":1,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{},"datasource":"$datasource","hide":0,"includeAll":false,"label":null,"multi":false,"name":"pod","options":[],"query":"label_values(kube_pod_container_info{cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$deployment.*\"}, pod)","refresh":0,"regex":"","sort":1,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{},"datasource":"$datasource","hide":0,"includeAll":false,"label":null,"multi":false,"name":"container","options":[],"query":"label_values(kube_pod_container_info{cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"$pod\", pod=~\"$deployment.*\"}, container)","refresh":0,"regex":"","sort":1,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{"selected":true,"text":"","value":""},"hide":0,"includeAll":false,"label":"","multi":true,"name":"level","options":[{"selected":false,"text":"debug","value":"debug"},{"selected":false,"text":"info","value":"info"},{"selected":false,"text":"warn","value":"warn"},{"selected":false,"text":"error","value":"error"}],"query":"debug,info,warn,error","refresh":0,"type":"custom"},{"current":{"selected":false,"text":"","value":""},"label":"LogQL Filter","name":"filter","query":"","type":"textbox"}]},"time":{"from":"now-1h","to":"now"},"timepicker":{"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"],"time_options":["5m","15m","1h","6h","12h","24h","2d","7d","30d"]},"timezone":"utc","title":"Loki / Logs","uid":"logs","version":0}
  "loki-mixin-recording-rules.json": |
    {"annotations":{"list":[{"builtIn":1,"datasource":"-- Grafana --","enable":true,"hide":true,"iconColor":"rgba(0, 211, 255, 1)","name":"Annotations \u0026 Alerts","target":{"limit":100,"matchAny":false,"tags":[],"type":"dashboard"},"type":"dashboard"},{"datasource":"${datasource}","enable":false,"expr":"sum by (tenant) (changes(loki_ruler_wal_prometheus_tsdb_wal_truncations_total{tenant=~\"${tenant}\"}[$__rate_interval]))","iconColor":"red","name":"WAL Truncations","target":{"queryType":"Azure Monitor","refId":"Anno"},"titleFormat":"{{tenant}}"}]},"editable":true,"fiscalYearStartMonth":0,"gnetId":null,"graphTooltip":0,"iteration":1635347545534,"links":[],"liveNow":false,"panels":[{"datasource":"${datasource}","fieldConfig":{"defaults":{"color":{"mode":"thresholds"},"mappings":[],"noValue":"0","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":1}]}},"overrides":[]},"gridPos":{"h":10,"w":2,"x":0,"y":0},"id":2,"options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"textMode":"auto"},"pluginVersion":"8.3.0-38205pre","targets":[{"datasource":"${datasource}","exemplar":false,"expr":"sum(loki_ruler_wal_appender_ready) by (pod, tenant) == 0","instant":true,"interval":"","legendFormat":"","refId":"A"}],"title":"Appenders Not Ready","type":"stat"},{"datasource":"${datasource}","description":"","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":11,"x":2,"y":0},"id":4,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"datasource":"${datasource}","exemplar":true,"expr":"sum(rate(loki_ruler_wal_samples_appended_total{tenant=~\"${tenant}\"}[$__rate_interval])) by (tenant) \u003e 0","interval":"","legendFormat":"{{tenant}}","refId":"A"}],"title":"Samples Appended to WAL per Second","type":"timeseries"},{"datasource":"${datasource}","description":"Series are unique combinations of labels","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":11,"x":13,"y":0},"id":5,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"datasource":"${datasource}","exemplar":true,"expr":"sum(rate(loki_ruler_wal_storage_created_series_total{tenant=~\"${tenant}\"}[$__rate_interval])) by (tenant) \u003e 0","interval":"","legendFormat":"{{tenant}}","refId":"A"}],"title":"Series Created per Second","type":"timeseries"},{"datasource":"${datasource}","description":"Difference between highest timestamp appended to WAL and highest timestamp successfully written to remote storage","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":10},"id":6,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"datasource":"${datasource}","exemplar":true,"expr":"loki_ruler_wal_prometheus_remote_storage_highest_timestamp_in_seconds{tenant=~\"${tenant}\"}\n- on (tenant)\n  (\n    loki_ruler_wal_prometheus_remote_storage_queue_highest_sent_timestamp_seconds{tenant=~\"${tenant}\"}\n    or vector(0)\n  )","interval":"","legendFormat":"{{tenant}}","refId":"A"}],"title":"Write Behind","type":"timeseries"},{"datasource":"${datasource}","description":"","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":10},"id":7,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"datasource":"${datasource}","exemplar":true,"expr":"sum(rate(loki_ruler_wal_prometheus_remote_storage_samples_total{tenant=~\"${tenant}\"}[$__rate_interval])) by (tenant) \u003e 0","interval":"","legendFormat":"{{tenant}}","refId":"A"}],"title":"Samples Sent per Second","type":"timeseries"},{"datasource":"${datasource}","description":"\n","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]},"unit":"bytes"},"overrides":[]},"gridPos":{"h":10,"w":12,"x":0,"y":20},"id":8,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"datasource":"${datasource}","exemplar":true,"expr":"sum by (tenant) (loki_ruler_wal_disk_size{tenant=~\"${tenant}\"})","interval":"","legendFormat":"{{tenant}}","refId":"A"}],"title":"WAL Disk Size","type":"timeseries"},{"datasource":"${datasource}","description":"Some number of pending samples is expected, but if remote-write is failing this value will remain high","fieldConfig":{"defaults":{"color":{"mode":"palette-classic"},"custom":{"axisLabel":"","axisPlacement":"auto","barAlignment":0,"drawStyle":"line","fillOpacity":0,"gradientMode":"none","hideFrom":{"legend":false,"tooltip":false,"viz":false},"lineInterpolation":"linear","lineWidth":1,"pointSize":5,"scaleDistribution":{"type":"linear"},"showPoints":"auto","spanNulls":false,"stacking":{"group":"A","mode":"none"},"thresholdsStyle":{"mode":"off"}},"mappings":[],"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":80}]}},"overrides":[]},"gridPos":{"h":10,"w":12,"x":12,"y":20},"id":9,"options":{"legend":{"calcs":[],"displayMode":"list","placement":"bottom"},"tooltip":{"mode":"single"}},"targets":[{"datasource":"${datasource}","exemplar":true,"expr":"max(loki_ruler_wal_prometheus_remote_storage_samples_pending{tenant=~\"${tenant}\"}) by (tenant,pod) \u003e 0","interval":"","legendFormat":"{{tenant}}","refId":"A"}],"title":"Pending Samples","type":"timeseries"}],"schemaVersion":31,"style":"dark","tags":[],"templating":{"list":[{"description":null,"error":null,"hide":0,"includeAll":false,"label":"Datasource","multi":false,"name":"datasource","options":[],"query":"prometheus","queryValue":"","refresh":1,"regex":"","skipUrlSync":false,"type":"datasource"},{"allValue":null,"datasource":"${datasource}","definition":"label_values(loki_ruler_wal_samples_appended_total, tenant)","description":null,"error":null,"hide":0,"includeAll":true,"label":"Tenant","multi":true,"name":"tenant","options":[],"query":{"query":"label_values(loki_ruler_wal_samples_appended_total, tenant)","refId":"StandardVariableQuery"},"refresh":2,"regex":"","skipUrlSync":false,"sort":0,"type":"query"}]},"time":{"from":"now-6h","to":"now"},"timepicker":{},"timezone":"","title":"Recording Rules","uid":"2xKA_ZK7k","version":9,"weekStart":""}
  "loki-operational.json": |
    {"annotations":{"list":[]},"editable":true,"gnetId":null,"graphTooltip":0,"hideControls":false,"id":68,"iteration":1588704280892,"links":[{"asDropdown":true,"icon":"external link","includeVars":true,"keepTime":true,"tags":["loki"],"targetBlank":false,"title":"Loki Dashboards","type":"dashboards"}],"panels":[{"collapsed":false,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":0},"id":17,"panels":[],"targets":[],"title":"Main","type":"row"},{"aliasColors":{"5xx":"red"},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":5,"w":4,"x":0,"y":1},"hiddenSeries":false,"id":6,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum by (status) (\nlabel_replace(\n  label_replace(\n        rate(loki_request_duration_seconds_count{cluster=\"$cluster\", job=~\"($namespace)/(loki|enterprise-logs)-read\", route=~\"api_prom_query|api_prom_label|api_prom_label_name_values|loki_api_v1_query|loki_api_v1_query_range|loki_api_v1_label|loki_api_v1_label_name_values\"}[5m]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n\"status\", \"${1}\", \"status_code\", \"([a-z]+)\")\n)","legendFormat":"{{status}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Queries/Second","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":10,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{"5xx":"red"},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":5,"w":4,"x":4,"y":1},"hiddenSeries":false,"id":7,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum by (status) (\nlabel_replace(\n  label_replace(\n          rate(loki_request_duration_seconds_count{cluster=\"$cluster\", job=~\"($namespace)/(loki|enterprise-logs)-write\", route=~\"api_prom_push|loki_api_v1_push\"}[5m]),\n   \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n\"status\", \"${1}\", \"status_code\", \"([a-z]+)\"))","legendFormat":"{{status}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Pushes/Second","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":10,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":5,"w":4,"x":12,"y":1},"hiddenSeries":false,"id":2,"interval":"","legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"topk(10, sum(rate(loki_distributor_lines_received_total{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (tenant))","legendFormat":"{{tenant}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Lines Per Tenant (top 10)","tooltip":{"shared":false,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":5,"w":4,"x":16,"y":1},"hiddenSeries":false,"id":4,"legend":{"avg":false,"current":false,"hideEmpty":true,"hideZero":true,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"topk(10, sum(rate(loki_distributor_bytes_received_total{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (tenant)) / 1024 / 1024","legendFormat":"{{tenant}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"MBs Per Tenant (Top 10)","tooltip":{"shared":false,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":5,"w":4,"x":20,"y":1},"hiddenSeries":false,"id":24,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"increase(kube_pod_container_status_restarts_total{cluster=\"$cluster\", namespace=\"$namespace\"}[10m]) \u003e 0","hide":false,"interval":"","legendFormat":"{{container}}-{{pod}}","refId":"B"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Container Restarts","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":12,"x":0,"y":6},"hiddenSeries":false,"id":9,"legend":{"alignAsTable":true,"avg":false,"current":false,"max":false,"min":false,"rightSide":true,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"histogram_quantile(0.99, sum by (le) (job_route:loki_request_duration_seconds_bucket:sum_rate{job=~\"($namespace)/(loki|enterprise-logs)-write\", route=~\"api_prom_push|loki_api_v1_push\", cluster=~\"$cluster\"})) * 1e3","legendFormat":".99","refId":"A"},{"expr":"histogram_quantile(0.75, sum by (le) (job_route:loki_request_duration_seconds_bucket:sum_rate{job=~\"($namespace)/(loki|enterprise-logs)-write\", route=~\"api_prom_push|loki_api_v1_push\", cluster=~\"$cluster\"})) * 1e3","legendFormat":".9","refId":"B"},{"expr":"histogram_quantile(0.5, sum by (le) (job_route:loki_request_duration_seconds_bucket:sum_rate{job=~\"($namespace)/(loki|enterprise-logs)-write\", route=~\"api_prom_push|loki_api_v1_push\", cluster=~\"$cluster\"})) * 1e3","legendFormat":".5","refId":"C"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Push Latency","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":5,"w":6,"x":12,"y":6},"hiddenSeries":false,"id":12,"legend":{"alignAsTable":true,"avg":false,"current":false,"max":false,"min":false,"rightSide":true,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"histogram_quantile(0.99, sum by (le) (job:loki_request_duration_seconds_bucket:sum_rate{job=~\"($namespace)/(loki|enterprise-logs)-write\", cluster=~\"$cluster\"})) * 1e3","legendFormat":".99","refId":"A"},{"expr":"histogram_quantile(0.9, sum by (le) (job:loki_request_duration_seconds_bucket:sum_rate{job=~\"($namespace)/(loki|enterprise-logs)-write\", cluster=~\"$cluster\"})) * 1e3","legendFormat":".9","refId":"B"},{"expr":"histogram_quantile(0.5, sum by (le) (job:loki_request_duration_seconds_bucket:sum_rate{job=~\"($namespace)/(loki|enterprise-logs)-write\", cluster=~\"$cluster\"})) * 1e3","legendFormat":".5","refId":"C"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Distributor Latency","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":0,"fillGradient":0,"gridPos":{"h":5,"w":6,"x":18,"y":6},"hiddenSeries":false,"id":71,"legend":{"alignAsTable":true,"avg":false,"current":false,"max":false,"min":false,"rightSide":true,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(loki_request_duration_seconds_count{cluster=\"$cluster\", namespace=\"$namespace\", job=~\"($namespace)/(loki|enterprise-logs)-write\", status_code!~\"5[0-9]{2}\"}[5m])) by (route)\n/\nsum(rate(loki_request_duration_seconds_count{cluster=\"$cluster\", namespace=\"$namespace\", job=~\"($namespace)/(loki|enterprise-logs)-write\"}[5m])) by (route)","interval":"","legendFormat":"{{route}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Distributor Success Rate","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"decimals":null,"format":"percentunit","label":"","logBase":1,"max":"1","min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":5,"w":6,"x":12,"y":11},"hiddenSeries":false,"id":13,"legend":{"alignAsTable":true,"avg":false,"current":false,"max":false,"min":false,"rightSide":true,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"histogram_quantile(0.99, sum by (le) (job_route:loki_request_duration_seconds_bucket:sum_rate{job=~\"($namespace)/(loki|enterprise-logs)-write\", route=\"/logproto.Pusher/Push\", cluster=~\"$cluster\"})) * 1e3","legendFormat":".99","refId":"A"},{"expr":"histogram_quantile(0.9, sum by (le) (job_route:loki_request_duration_seconds_bucket:sum_rate{job=~\"($namespace)/(loki|enterprise-logs)-write\", route=\"/logproto.Pusher/Push\", cluster=~\"$cluster\"})) * 1e3","hide":false,"legendFormat":".9","refId":"B"},{"expr":"histogram_quantile(0.5, sum by (le) (job_route:loki_request_duration_seconds_bucket:sum_rate{job=~\"($namespace)/(loki|enterprise-logs)-write\", route=\"/logproto.Pusher/Push\", cluster=~\"$cluster\"})) * 1e3","hide":false,"legendFormat":".5","refId":"C"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Ingester Latency Write","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":0,"fillGradient":0,"gridPos":{"h":5,"w":6,"x":18,"y":11},"hiddenSeries":false,"id":72,"legend":{"alignAsTable":true,"avg":false,"current":false,"max":false,"min":false,"rightSide":true,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(loki_request_duration_seconds_count{cluster=\"$cluster\", namespace=\"$namespace\", job=~\"($namespace)/(loki|enterprise-logs)-write\", status_code!~\"5[0-9]{2}\", route=\"/logproto.Pusher/Push\"}[5m])) by (route)\n/\nsum(rate(loki_request_duration_seconds_count{cluster=\"$cluster\", namespace=\"$namespace\", job=~\"($namespace)/(loki|enterprise-logs)-write\", route=\"/logproto.Pusher/Push\"}[5m])) by (route)","interval":"","legendFormat":"{{route}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Ingester Success Rate Write","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"decimals":null,"format":"percentunit","label":"","logBase":1,"max":"1","min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":10,"w":12,"x":0,"y":16},"hiddenSeries":false,"id":10,"legend":{"alignAsTable":true,"avg":false,"current":false,"hideEmpty":true,"hideZero":false,"max":false,"min":false,"rightSide":true,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"histogram_quantile(0.99, sum by (le,route) (job_route:loki_request_duration_seconds_bucket:sum_rate{job=~\"($namespace)/(loki|enterprise-logs)-read\", route=~\"api_prom_query|api_prom_labels|api_prom_label_name_values|loki_api_v1_query|loki_api_v1_query_range|loki_api_v1_label|loki_api_v1_label_name_values\", cluster=\"$cluster\"}))","legendFormat":"{{route}}-.99","refId":"A"},{"expr":"histogram_quantile(0.9, sum by (le,route) (job_route:loki_request_duration_seconds_bucket:sum_rate{job=~\"($namespace)/(loki|enterprise-logs)-read\", route=~\"api_prom_query|api_prom_labels|api_prom_label_name_values|loki_api_v1_query|loki_api_v1_query_range|loki_api_v1_label|loki_api_v1_label_name_values\", cluster=\"$cluster\"}))","legendFormat":"{{route}}-.9","refId":"B"},{"expr":"histogram_quantile(0.5, sum by (le,route) (job_route:loki_request_duration_seconds_bucket:sum_rate{job=~\"($namespace)/(loki|enterprise-logs)-read\", route=~\"api_prom_query|api_prom_labels|api_prom_label_name_values|loki_api_v1_query|loki_api_v1_query_range|loki_api_v1_label|loki_api_v1_label_name_values\", cluster=\"$cluster\"}))","legendFormat":"{{route}}-.5","refId":"C"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Query Latency","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":5,"w":6,"x":12,"y":16},"hiddenSeries":false,"id":14,"legend":{"alignAsTable":true,"avg":false,"current":false,"max":false,"min":false,"rightSide":true,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"histogram_quantile(0.99, sum by (le,route) (job_route:loki_request_duration_seconds_bucket:sum_rate{job=~\"($namespace)/(loki|enterprise-logs)-read\", route=~\"api_prom_query|api_prom_labels|api_prom_label_name_values|loki_api_v1_query|loki_api_v1_query_range|loki_api_v1_label|loki_api_v1_label_name_values\", cluster=\"$cluster\"})) * 1e3","legendFormat":".99-{{route}}","refId":"A"},{"expr":"histogram_quantile(0.9, sum by (le,route) (job_route:loki_request_duration_seconds_bucket:sum_rate{job=~\"($namespace)/(loki|enterprise-logs)-read\", route=~\"api_prom_query|api_prom_labels|api_prom_label_name_values|loki_api_v1_query|loki_api_v1_query_range|loki_api_v1_label|loki_api_v1_label_name_values\", cluster=\"$cluster\"})) * 1e3","legendFormat":".9-{{route}}","refId":"B"},{"expr":"histogram_quantile(0.5, sum by (le,route) (job_route:loki_request_duration_seconds_bucket:sum_rate{job=~\"($namespace)/(loki|enterprise-logs)-read\", route=~\"api_prom_query|api_prom_labels|api_prom_label_name_values|loki_api_v1_query|loki_api_v1_query_range|loki_api_v1_label|loki_api_v1_label_name_values\", cluster=\"$cluster\"})) * 1e3","legendFormat":".5-{{route}}","refId":"C"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Querier Latency","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":0,"fillGradient":0,"gridPos":{"h":5,"w":6,"x":18,"y":16},"hiddenSeries":false,"id":73,"legend":{"alignAsTable":true,"avg":false,"current":false,"max":false,"min":false,"rightSide":true,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(loki_request_duration_seconds_count{cluster=\"$cluster\", namespace=\"$namespace\", job=~\"($namespace)/(loki|enterprise-logs)-read\", status_code!~\"5[0-9]{2}\"}[5m])) by (route)\n/\nsum(rate(loki_request_duration_seconds_count{cluster=\"$cluster\", namespace=\"$namespace\", job=~\"($namespace)/(loki|enterprise-logs)-read\"}[5m])) by (route)","interval":"","legendFormat":"{{route}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Querier Success Rate","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"decimals":null,"format":"percentunit","label":"","logBase":1,"max":"1","min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","description":"","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":1,"fillGradient":0,"gridPos":{"h":5,"w":6,"x":12,"y":21},"hiddenSeries":false,"id":15,"legend":{"alignAsTable":true,"avg":false,"current":false,"max":false,"min":false,"rightSide":true,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"histogram_quantile(0.99, sum by (le,route) (job_route:loki_request_duration_seconds_bucket:sum_rate{job=~\"($namespace)/(loki|enterprise-logs)-write\", route=~\"/logproto.Querier/Query|/logproto.Querier/Label|/logproto.Querier/Series|/logproto.Querier/QuerySample|/logproto.Querier/GetChunkIDs\", cluster=\"$cluster\"})) * 1e3","legendFormat":".99-{{route}}","refId":"A"},{"expr":"histogram_quantile(0.9, sum by (le,route) (job_route:loki_request_duration_seconds_bucket:sum_rate{job=~\"($namespace)/(loki|enterprise-logs)-write\", route=~\"/logproto.Querier/Query|/logproto.Querier/Label|/logproto.Querier/Series|/logproto.Querier/QuerySample|/logproto.Querier/GetChunkIDs\", cluster=\"$cluster\"})) * 1e3","legendFormat":".9-{{route}}","refId":"B"},{"expr":"histogram_quantile(0.5, sum by (le,route) (job_route:loki_request_duration_seconds_bucket:sum_rate{job=~\"($namespace)/(loki|enterprise-logs)-write\", route=~\"/logproto.Querier/Query|/logproto.Querier/Label|/logproto.Querier/Series|/logproto.Querier/QuerySample|/logproto.Querier/GetChunkIDs\", cluster=\"$cluster\"})) * 1e3","legendFormat":".5-{{route}}","refId":"C"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Ingester Latency Read","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fieldConfig":{"defaults":{"custom":{}},"overrides":[]},"fill":0,"fillGradient":0,"gridPos":{"h":5,"w":6,"x":18,"y":21},"hiddenSeries":false,"id":74,"legend":{"alignAsTable":true,"avg":false,"current":false,"max":false,"min":false,"rightSide":true,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(loki_request_duration_seconds_count{cluster=\"$cluster\", namespace=\"$namespace\", job=~\"($namespace)/(loki|enterprise-logs)-write\", status_code!~\"5[0-9]{2}\", route=~\"/logproto.Querier/Query|/logproto.Querier/Label|/logproto.Querier/Series|/logproto.Querier/QuerySample|/logproto.Querier/GetChunkIDs\"}[5m])) by (route)\n/\nsum(rate(loki_request_duration_seconds_count{cluster=\"$cluster\", namespace=\"$namespace\", job=~\"($namespace)/(loki|enterprise-logs)-write\", route=~\"/logproto.Querier/Query|/logproto.Querier/Label|/logproto.Querier/Series|/logproto.Querier/QuerySample|/logproto.Querier/GetChunkIDs\"}[5m])) by (route)","interval":"","legendFormat":"{{route}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Ingester Success Rate Read","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"decimals":null,"format":"percentunit","label":"","logBase":1,"max":"1","min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":26},"id":110,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":27},"hiddenSeries":false,"id":112,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"topk(10,sum by (tenant, reason) (rate(loki_discarded_samples_total{cluster=\"$cluster\",namespace=\"$namespace\"}[1m])))","interval":"","legendFormat":"{{ tenant }} - {{ reason }}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Discarded Lines","tooltip":{"shared":false,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"columns":[],"datasource":"$datasource","fontSize":"100%","gridPos":{"h":8,"w":12,"x":12,"y":27},"id":113,"pageSize":null,"panels":[],"showHeader":true,"sort":{"col":3,"desc":true},"styles":[{"alias":"Time","align":"auto","dateFormat":"YYYY-MM-DD HH:mm:ss","pattern":"Time","type":"hidden"},{"alias":"","align":"auto","colorMode":null,"colors":["rgba(245, 54, 54, 0.9)","rgba(237, 129, 40, 0.89)","rgba(50, 172, 45, 0.97)"],"dateFormat":"YYYY-MM-DD HH:mm:ss","decimals":2,"mappingType":1,"pattern":"tenant","thresholds":[],"type":"string","unit":"short"},{"alias":"","align":"auto","colorMode":null,"colors":["rgba(245, 54, 54, 0.9)","rgba(237, 129, 40, 0.89)","rgba(50, 172, 45, 0.97)"],"dateFormat":"YYYY-MM-DD HH:mm:ss","decimals":2,"mappingType":1,"pattern":"reason","thresholds":[],"type":"number","unit":"short"},{"alias":"","align":"right","colorMode":null,"colors":["rgba(245, 54, 54, 0.9)","rgba(237, 129, 40, 0.89)","rgba(50, 172, 45, 0.97)"],"decimals":2,"pattern":"/.*/","thresholds":[],"type":"number","unit":"short"}],"targets":[{"expr":"topk(10, sum by (tenant, reason) (sum_over_time(increase(loki_discarded_samples_total{cluster=\"$cluster\",namespace=\"$namespace\"}[1m])[$__range:1m])))","format":"table","instant":true,"interval":"","legendFormat":"{{ tenant }} - {{ reason }}","refId":"A"}],"timeFrom":null,"timeShift":null,"title":"Discarded Lines Per Interval","transform":"table","type":"table-old"}],"targets":[],"title":"Limits","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":27},"id":23,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":7,"w":6,"x":0,"y":28},"hiddenSeries":false,"id":26,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":false,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":true,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"(loki|enterprise-logs)-write.*\"}","intervalFactor":3,"legendFormat":"{{pod}}-{{container}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"CPU Usage","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":7,"w":6,"x":6,"y":28},"hiddenSeries":false,"id":27,"legend":{"avg":false,"current":false,"hideEmpty":false,"hideZero":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":false,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":true,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"go_memstats_heap_inuse_bytes{cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"(loki|enterprise-logs)-write.*\"}","instant":false,"intervalFactor":3,"legendFormat":"{{pod}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Memory Usage","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"bytes","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":true,"dashLength":10,"dashes":false,"datasource":"$logs","fill":1,"fillGradient":0,"gridPos":{"h":4,"w":12,"x":12,"y":28},"hiddenSeries":false,"id":31,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":false,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[{"alias":"{}","color":"#C4162A"}],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate({cluster=\"$cluster\", namespace=\"$namespace\", job=~\"($namespace)/(loki|enterprise-logs)-write\"} | logfmt | level=\"error\"[1m]))","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Error Log Rate","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":false,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"$logs","gridPos":{"h":18,"w":12,"x":12,"y":32},"id":29,"options":{"showLabels":false,"showTime":false,"sortOrder":"Descending","wrapLogMessage":true},"panels":[],"targets":[{"expr":"{cluster=\"$cluster\", namespace=\"$namespace\", job=~\"($namespace)/(loki|enterprise-logs)-write\"} | logfmt | level=\"error\"","refId":"A"}],"timeFrom":null,"timeShift":null,"title":"Logs","type":"logs"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":0,"fillGradient":0,"gridPos":{"h":7,"w":6,"x":0,"y":35},"hiddenSeries":false,"id":33,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(loki_request_duration_seconds_count{cluster=\"$cluster\", namespace=\"$namespace\", job=~\"($namespace)/(loki|enterprise-logs)-write\", status_code!~\"5[0-9]{2}\"}[5m])) by (route)\n/\nsum(rate(loki_request_duration_seconds_count{cluster=\"$cluster\", namespace=\"$namespace\", job=~\"($namespace)/(loki|enterprise-logs)-write\"}[5m])) by (route)","interval":"","intervalFactor":1,"legendFormat":"{{route}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Success Rate","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":7,"w":6,"x":6,"y":35},"hiddenSeries":false,"id":32,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(loki_distributor_ingester_append_failures_total{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (ingester)","intervalFactor":1,"legendFormat":"{{ingester}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Append Failures By Ingester","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":7,"w":6,"x":0,"y":42},"hiddenSeries":false,"id":34,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(loki_distributor_bytes_received_total{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (pod)","intervalFactor":1,"legendFormat":"{{pod}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Bytes Received/Second","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":7,"w":6,"x":6,"y":42},"hiddenSeries":false,"id":35,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(loki_distributor_lines_received_total{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (pod)","intervalFactor":1,"legendFormat":"{{pod}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Lines Received/Second","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"targets":[],"title":"Write Path","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":29},"id":104,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":30},"hiddenSeries":false,"id":106,"legend":{"avg":false,"current":false,"hideEmpty":true,"hideZero":true,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"topk(10,sum by (tenant) (loki_ingester_memory_streams{cluster=\"$cluster\",job=~\"($namespace)/(loki|enterprise-logs)-write\"}))","interval":"","legendFormat":"{{ tenant }}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Active Streams","tooltip":{"shared":false,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":12,"y":30},"hiddenSeries":false,"id":108,"legend":{"avg":false,"current":false,"hideEmpty":true,"hideZero":true,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"topk(10, sum by (tenant) (rate(loki_ingester_streams_created_total{cluster=\"$cluster\",job=~\"($namespace)/(loki|enterprise-logs)-write\"}[1m]) \u003e 0))","interval":"","legendFormat":"{{ tenant }}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Streams Created/Sec","tooltip":{"shared":false,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"targets":[],"title":"Streams","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":30},"id":94,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":12,"x":0,"y":31},"hiddenSeries":false,"id":102,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[{"alias":"De-Dupe Ratio","yaxis":2}],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(loki_ingester_chunks_flushed_total{cluster=\"$cluster\",job=~\"($namespace)/(loki|enterprise-logs)-write\"}[1m]))","interval":"","legendFormat":"Chunks","refId":"A"},{"expr":"sum(increase(loki_chunk_store_deduped_chunks_total{cluster=\"$cluster\", job=~\"($namespace)/(loki|enterprise-logs)-write\"}[1m]))/sum(increase(loki_ingester_chunks_flushed_total{cluster=\"$cluster\", job=~\"($namespace)/(loki|enterprise-logs)-write\"}[1m])) \u003c 1","interval":"","legendFormat":"De-Dupe Ratio","refId":"B"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Chunks Flushed/Sec","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"cards":{"cardPadding":null,"cardRound":null},"color":{"cardColor":"#b4ff00","colorScale":"sqrt","colorScheme":"interpolateSpectral","exponent":0.5,"mode":"spectrum"},"dataFormat":"tsbuckets","datasource":"$datasource","gridPos":{"h":8,"w":12,"x":12,"y":31},"heatmap":{},"hideZeroBuckets":false,"highlightCards":true,"id":100,"legend":{"show":true},"panels":[],"reverseYBuckets":false,"targets":[{"expr":"sum(rate(loki_ingester_chunk_size_bytes_bucket{cluster=\"$cluster\",job=~\"($namespace)/(loki|enterprise-logs)-write\"}[1m])) by (le)","format":"heatmap","instant":false,"interval":"","legendFormat":"{{ le }}","refId":"A"}],"timeFrom":null,"timeShift":null,"title":"Chunk Size Bytes","tooltip":{"show":true,"showHistogram":false},"type":"heatmap","xAxis":{"show":true},"xBucketNumber":null,"xBucketSize":null,"yAxis":{"decimals":0,"format":"bytes","logBase":1,"max":null,"min":null,"show":true,"splitFactor":null},"yBucketBound":"auto","yBucketNumber":null,"yBucketSize":null},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":7,"fillGradient":0,"gridPos":{"h":9,"w":12,"x":0,"y":39},"hiddenSeries":false,"id":96,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":true,"steppedLine":false,"targets":[{"expr":"sum by(reason) (rate(loki_ingester_chunks_flushed_total{cluster=~\"$cluster\",job=~\"$namespace/ingester\", namespace=~\"$namespace\"}[$__rate_interval])) / ignoring(reason) group_left sum(rate(loki_ingester_chunks_flushed_total{cluster=~\"$cluster\",job=~\"$namespace/ingester\", namespace=~\"$namespace\"}[$__rate_interval]))","interval":"","legendFormat":"{{ reason }}"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Chunk Flush Reason %","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percentunit","label":null,"logBase":1,"max":"1","min":"0","show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"cards":{"cardPadding":null,"cardRound":null},"color":{"cardColor":"#b4ff00","colorScale":"sqrt","colorScheme":"interpolateSpectral","exponent":0.5,"max":null,"min":null,"mode":"spectrum"},"dataFormat":"tsbuckets","datasource":"$datasource","gridPos":{"h":9,"w":12,"x":12,"y":39},"heatmap":{},"hideZeroBuckets":true,"highlightCards":true,"id":98,"legend":{"show":true},"panels":[],"reverseYBuckets":false,"targets":[{"expr":"sum by (le) (rate(loki_ingester_chunk_utilization_bucket{cluster=\"$cluster\", job=~\"($namespace)/(loki|enterprise-logs)-write\"}[1m]))","format":"heatmap","instant":false,"interval":"","legendFormat":"{{ le }}","refId":"A"}],"timeFrom":null,"timeShift":null,"title":"Chunk Utilization","tooltip":{"show":true,"showHistogram":false},"type":"heatmap","xAxis":{"show":true},"xBucketNumber":null,"xBucketSize":null,"yAxis":{"decimals":0,"format":"percentunit","logBase":1,"max":null,"min":null,"show":true,"splitFactor":null},"yBucketBound":"auto","yBucketNumber":null,"yBucketSize":null}],"targets":[],"title":"Chunks","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":31},"id":64,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":7,"w":6,"x":0,"y":32},"hiddenSeries":false,"id":68,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":false,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":true,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"(loki|enterprise-logs)-read.*\"}","intervalFactor":3,"legendFormat":"{{pod}}-{{container}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"CPU Usage","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":7,"w":6,"x":0,"y":39},"hiddenSeries":false,"id":69,"legend":{"avg":false,"current":false,"hideEmpty":false,"hideZero":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":false,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":true,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"go_memstats_heap_inuse_bytes{cluster=\"$cluster\", namespace=\"$namespace\", pod=~\"(loki|enterprise-logs)-read.*\"}","instant":false,"intervalFactor":3,"legendFormat":"{{pod}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Memory Usage","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"bytes","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":true,"dashLength":10,"dashes":false,"datasource":"$logs","fill":1,"fillGradient":0,"gridPos":{"h":3,"w":18,"x":12,"y":32},"hiddenSeries":false,"id":65,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":false,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[{"alias":"{}","color":"#F2495C"}],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate({cluster=\"$cluster\", namespace=\"$namespace\", job=~\"($namespace)/(loki|enterprise-logs)-read\"} | logfmt |  level=\"error\"[1m]))","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Error Log Rate","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":false,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}],"yaxis":{"align":false,"alignLevel":null}},{"datasource":"$logs","gridPos":{"h":18,"w":18,"x":12,"y":35},"id":66,"options":{"showLabels":false,"showTime":false,"sortOrder":"Descending","wrapLogMessage":true},"panels":[],"targets":[{"expr":"{cluster=\"$cluster\", namespace=\"$namespace\", job=~\"($namespace)/(loki|enterprise-logs)-read\"} | logfmt | level=\"error\"","refId":"A"}],"timeFrom":null,"timeShift":null,"title":"Logs","type":"logs"},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":0,"fillGradient":0,"gridPos":{"h":7,"w":6,"x":0,"y":46},"hiddenSeries":false,"id":70,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(loki_request_duration_seconds_count{cluster=\"$cluster\", namespace=\"$namespace\", job=~\"($namespace)/(loki|enterprise-logs)-read\", status_code!~\"5[0-9]{2}\"}[1m])) by (route)\n/\nsum(rate(loki_request_duration_seconds_count{cluster=\"$cluster\", namespace=\"$namespace\", job=~\"($namespace)/(loki|enterprise-logs)-read\"}[1m])) by (route)","interval":"","intervalFactor":1,"legendFormat":"{{route}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Success Rate","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"targets":[],"title":"Read Path","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":32},"id":52,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":24,"x":0,"y":30},"hiddenSeries":false,"id":53,"interval":"","legend":{"alignAsTable":true,"avg":false,"current":false,"max":false,"min":false,"rightSide":true,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"histogram_quantile(.99, sum(rate(loki_memcache_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (method, name, le, container))","intervalFactor":1,"legendFormat":"{{container}}: .99-{{method}}-{{name}}","refId":"A"},{"expr":"histogram_quantile(.9, sum(rate(loki_memcache_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (method, name, le, container))","hide":false,"legendFormat":"{{container}}: .9-{{method}}-{{name}}","refId":"B"},{"expr":"histogram_quantile(.5, sum(rate(loki_memcache_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (method, name, le, container))","hide":false,"legendFormat":"{{container}}: .5-{{method}}-{{name}}","refId":"C"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Latency By Method","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":24,"x":0,"y":38},"hiddenSeries":false,"id":54,"interval":"","legend":{"alignAsTable":true,"avg":false,"current":false,"max":false,"min":false,"rightSide":true,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(loki_memcache_request_duration_seconds_count{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (status_code, method, name, container)","intervalFactor":1,"legendFormat":"{{container}}: {{status_code}}-{{method}}-{{name}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Status By Method","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"targets":[],"title":"Memcached","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":33},"id":57,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":24,"x":0,"y":31},"hiddenSeries":false,"id":55,"interval":"","legend":{"alignAsTable":true,"avg":false,"current":false,"max":false,"min":false,"rightSide":true,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"histogram_quantile(.99, sum(rate(loki_consul_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (operation, le))","intervalFactor":1,"legendFormat":".99-{{operation}}","refId":"A"},{"expr":"histogram_quantile(.9, sum(rate(loki_consul_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (operation, le))","hide":false,"legendFormat":".9-{{operation}}","refId":"B"},{"expr":"histogram_quantile(.5, sum(rate(loki_consul_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (operation, le))","hide":false,"legendFormat":".5-{{operation}}","refId":"C"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Latency By Operation","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":24,"x":0,"y":39},"hiddenSeries":false,"id":58,"interval":"","legend":{"alignAsTable":true,"avg":false,"current":false,"max":false,"min":false,"rightSide":true,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(loki_consul_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (operation, status_code, method)","intervalFactor":1,"legendFormat":"{{status_code}}-{{operation}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Status By Operation","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"targets":[],"title":"Consul","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":34},"id":43,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":7,"w":6,"x":0,"y":9},"hiddenSeries":false,"id":41,"interval":"","legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"histogram_quantile(.99, sum(rate(loki_bigtable_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\", operation=\"/google.bigtable.v2.Bigtable/MutateRows\"}[5m])) by (operation, le))","intervalFactor":1,"legendFormat":".9","refId":"A"},{"expr":"histogram_quantile(.9, sum(rate(loki_bigtable_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\", operation=\"/google.bigtable.v2.Bigtable/MutateRows\"}[5m])) by (operation, le))","refId":"B"},{"expr":"histogram_quantile(.5, sum(rate(loki_bigtable_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\", operation=\"/google.bigtable.v2.Bigtable/MutateRows\"}[5m])) by (operation, le))","refId":"C"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"MutateRows Latency","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":7,"w":6,"x":6,"y":9},"hiddenSeries":false,"id":46,"interval":"","legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"histogram_quantile(.99, sum(rate(loki_bigtable_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\", operation=\"/google.bigtable.v2.Bigtable/ReadRows\"}[5m])) by (operation, le))","interval":"","intervalFactor":1,"legendFormat":"99%","refId":"A"},{"expr":"histogram_quantile(.9, sum(rate(loki_bigtable_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\", operation=\"/google.bigtable.v2.Bigtable/ReadRows\"}[5m])) by (operation, le))","interval":"","legendFormat":"90%","refId":"B"},{"expr":"histogram_quantile(.5, sum(rate(loki_bigtable_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\", operation=\"/google.bigtable.v2.Bigtable/ReadRows\"}[5m])) by (operation, le))","interval":"","legendFormat":"50%","refId":"C"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"ReadRows Latency","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":7,"w":6,"x":12,"y":9},"hiddenSeries":false,"id":44,"interval":"","legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"histogram_quantile(.99, sum(rate(loki_bigtable_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\", operation=\"/google.bigtable.admin.v2.BigtableTableAdmin/GetTable\"}[5m])) by (operation, le))","interval":"","intervalFactor":1,"legendFormat":"99%","refId":"A"},{"expr":"histogram_quantile(.9, sum(rate(loki_bigtable_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\", operation=\"/google.bigtable.admin.v2.BigtableTableAdmin/GetTable\"}[5m])) by (operation, le))","interval":"","legendFormat":"90%","refId":"B"},{"expr":"histogram_quantile(.5, sum(rate(loki_bigtable_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\", operation=\"/google.bigtable.admin.v2.BigtableTableAdmin/GetTable\"}[5m])) by (operation, le))","interval":"","legendFormat":"50%","refId":"C"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"GetTable Latency","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":7,"w":6,"x":18,"y":9},"hiddenSeries":false,"id":45,"interval":"","legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"histogram_quantile(.99, sum(rate(loki_bigtable_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\", operation=\"/google.bigtable.admin.v2.BigtableTableAdmin/ListTables\"}[5m])) by (operation, le))","intervalFactor":1,"legendFormat":".9","refId":"A"},{"expr":"histogram_quantile(.9, sum(rate(loki_bigtable_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\", operation=\"/google.bigtable.admin.v2.BigtableTableAdmin/ListTables\"}[5m])) by (operation, le))","refId":"B"},{"expr":"histogram_quantile(.5, sum(rate(loki_bigtable_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\", operation=\"/google.bigtable.admin.v2.BigtableTableAdmin/ListTables\"}[5m])) by (operation, le))","refId":"C"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"ListTables Latency","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":7,"w":6,"x":0,"y":16},"hiddenSeries":false,"id":47,"interval":"","legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(loki_bigtable_request_duration_seconds_count{cluster=\"$cluster\", namespace=\"$namespace\", operation=\"/google.bigtable.v2.Bigtable/MutateRows\"}[5m])) by (status_code)","intervalFactor":1,"legendFormat":"{{status_code}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"MutateRows Status","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":7,"w":6,"x":6,"y":16},"hiddenSeries":false,"id":50,"interval":"","legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(loki_bigtable_request_duration_seconds_count{cluster=\"$cluster\", namespace=\"$namespace\", operation=\"/google.bigtable.v2.Bigtable/ReadRows\"}[5m])) by (status_code)","intervalFactor":1,"legendFormat":"{{status_code}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"ReadRows Status","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":7,"w":6,"x":12,"y":16},"hiddenSeries":false,"id":48,"interval":"","legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(loki_bigtable_request_duration_seconds_count{cluster=\"$cluster\", namespace=\"$namespace\", operation=\"/google.bigtable.admin.v2.BigtableTableAdmin/GetTable\"}[5m])) by (status_code)","intervalFactor":1,"legendFormat":"{{status_code}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"GetTable Status","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":7,"w":6,"x":18,"y":16},"hiddenSeries":false,"id":49,"interval":"","legend":{"avg":false,"current":false,"max":false,"min":false,"show":false,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(loki_bigtable_request_duration_seconds_count{cluster=\"$cluster\", namespace=\"$namespace\", operation=\"/google.bigtable.admin.v2.BigtableTableAdmin/ListTables\"}[5m])) by (status_code)","intervalFactor":1,"legendFormat":"{{status_code}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"ListTables Status","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"targets":[],"title":"Big Table","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":35},"id":60,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":24,"x":0,"y":33},"hiddenSeries":false,"id":61,"interval":"","legend":{"alignAsTable":true,"avg":false,"current":false,"max":false,"min":false,"rightSide":true,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"histogram_quantile(.99, sum(rate(loki_gcs_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (operation, le))","intervalFactor":1,"legendFormat":".99-{{operation}}","refId":"A"},{"expr":"histogram_quantile(.9, sum(rate(loki_gcs_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (operation, le))","hide":false,"legendFormat":".9-{{operation}}","refId":"B"},{"expr":"histogram_quantile(.5, sum(rate(loki_gcs_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (operation, le))","hide":false,"legendFormat":".5-{{operation}}","refId":"C"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Latency By Operation","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":24,"x":0,"y":41},"hiddenSeries":false,"id":62,"interval":"","legend":{"alignAsTable":true,"avg":false,"current":false,"max":false,"min":false,"rightSide":true,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(loki_gcs_request_duration_seconds_count{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (status_code, operation)","intervalFactor":1,"legendFormat":"{{status_code}}-{{operation}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Status By Method","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"targets":[],"title":"GCS","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":36},"id":76,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":null,"fill":1,"fillGradient":0,"gridPos":{"h":6,"w":6,"x":0,"y":9},"id":82,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(cortex_dynamo_failures_total{cluster=\"$cluster\", namespace=\"$namespace\"}[5m]))","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Failure Rate","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":null,"fill":1,"fillGradient":0,"gridPos":{"h":6,"w":6,"x":6,"y":9},"id":83,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(cortex_dynamo_consumed_capacity_total{cluster=\"$cluster\", namespace=\"$namespace\"}[5m]))","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Consumed Capacity Rate","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":null,"fill":1,"fillGradient":0,"gridPos":{"h":6,"w":6,"x":12,"y":9},"id":84,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(cortex_dynamo_throttled_total{cluster=\"$cluster\", namespace=\"$namespace\"}[5m]))","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Throttled Rate","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":null,"fill":1,"fillGradient":0,"gridPos":{"h":6,"w":6,"x":18,"y":9},"id":85,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(cortex_dynamo_dropped_requests_total{cluster=\"$cluster\", namespace=\"$namespace\"}[5m]))","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Dropped Rate","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":null,"fill":1,"fillGradient":0,"gridPos":{"h":6,"w":6,"x":0,"y":15},"id":86,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":2,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"histogram_quantile(.99, sum(rate(cortex_dynamo_query_pages_count{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])))","legendFormat":".99","refId":"A"},{"expr":"histogram_quantile(.9, sum(rate(cortex_dynamo_query_pages_count{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])))","legendFormat":".9","refId":"B"},{"expr":"histogram_quantile(.5, sum(rate(cortex_dynamo_query_pages_count{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])))","legendFormat":".5","refId":"C"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Query Pages","tooltip":{"shared":true,"sort":0,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":6,"w":9,"x":6,"y":15},"id":87,"interval":"","legend":{"alignAsTable":true,"avg":false,"current":false,"max":false,"min":false,"rightSide":true,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"histogram_quantile(.99, sum(rate(cortex_dynamo_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (operation, le))","intervalFactor":1,"legendFormat":".99-{{operation}}","refId":"A"},{"expr":"histogram_quantile(.9, sum(rate(cortex_dynamo_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (operation, le))","hide":false,"legendFormat":".9-{{operation}}","refId":"B"},{"expr":"histogram_quantile(.5, sum(rate(cortex_dynamo_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (operation, le))","hide":false,"legendFormat":".5-{{operation}}","refId":"C"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Latency By Operation","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":6,"w":9,"x":15,"y":15},"id":88,"interval":"","legend":{"alignAsTable":true,"avg":false,"current":false,"max":false,"min":false,"rightSide":true,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(cortex_dynamo_request_duration_seconds_count{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (status_code, operation)","intervalFactor":1,"legendFormat":"{{status_code}}-{{operation}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Status By Method","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"targets":[],"title":"Dynamo","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":37},"id":78,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":24,"x":0,"y":10},"id":79,"interval":"","legend":{"alignAsTable":true,"avg":false,"current":false,"max":false,"min":false,"rightSide":true,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"histogram_quantile(.99, sum(rate(loki_s3_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (operation, le))","intervalFactor":1,"legendFormat":".99-{{operation}}","refId":"A"},{"expr":"histogram_quantile(.9, sum(rate(loki_s3_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (operation, le))","hide":false,"legendFormat":".9-{{operation}}","refId":"B"},{"expr":"histogram_quantile(.5, sum(rate(loki_s3_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (operation, le))","hide":false,"legendFormat":".5-{{operation}}","refId":"C"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Latency By Operation","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":24,"x":0,"y":18},"id":80,"interval":"","legend":{"alignAsTable":true,"avg":false,"current":false,"max":false,"min":false,"rightSide":true,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(loki_s3_request_duration_seconds_count{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (status_code, operation)","intervalFactor":1,"legendFormat":"{{status_code}}-{{operation}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Status By Method","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"targets":[],"title":"S3","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":37},"id":78,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":24,"x":0,"y":10},"id":79,"interval":"","legend":{"alignAsTable":true,"avg":false,"current":false,"max":false,"min":false,"rightSide":true,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"histogram_quantile(.99, sum(rate(loki_azure_blob_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (operation, le))","intervalFactor":1,"legendFormat":".99-{{operation}}","refId":"A"},{"expr":"histogram_quantile(.9, sum(rate(loki_azure_blob_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (operation, le))","hide":false,"legendFormat":".9-{{operation}}","refId":"B"},{"expr":"histogram_quantile(.5, sum(rate(loki_azure_blob_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (operation, le))","hide":false,"legendFormat":".5-{{operation}}","refId":"C"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Latency By Operation","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":24,"x":0,"y":18},"id":80,"interval":"","legend":{"alignAsTable":true,"avg":false,"current":false,"max":false,"min":false,"rightSide":true,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(loki_azure_blob_request_duration_seconds_count{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (status_code, operation)","intervalFactor":1,"legendFormat":"{{status_code}}-{{operation}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Status By Method","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"targets":[],"title":"Azure Blob","type":"row"},{"collapsed":true,"datasource":null,"gridPos":{"h":1,"w":24,"x":0,"y":37},"id":114,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":24,"x":0,"y":10},"id":115,"interval":"","legend":{"alignAsTable":true,"avg":false,"current":false,"max":false,"min":false,"rightSide":true,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"histogram_quantile(.99, sum(rate(loki_boltdb_shipper_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (operation, le))","intervalFactor":1,"legendFormat":".99-{{operation}}","refId":"A"},{"expr":"histogram_quantile(.9, sum(rate(loki_boltdb_shipper_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (operation, le))","hide":false,"legendFormat":".9-{{operation}}","refId":"B"},{"expr":"histogram_quantile(.5, sum(rate(loki_boltdb_shipper_request_duration_seconds_bucket{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (operation, le))","hide":false,"legendFormat":".5-{{operation}}","refId":"C"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Latency By Operation","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"fillGradient":0,"gridPos":{"h":8,"w":24,"x":0,"y":18},"id":116,"interval":"","legend":{"alignAsTable":true,"avg":false,"current":false,"max":false,"min":false,"rightSide":true,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"nullPointMode":"null","options":{"dataLinks":[]},"panels":[],"percentage":false,"pointradius":1,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(rate(loki_boltdb_shipper_request_duration_seconds_count{cluster=\"$cluster\", namespace=\"$namespace\"}[5m])) by (status_code, operation)","intervalFactor":1,"legendFormat":"{{status_code}}-{{operation}}","refId":"A"}],"thresholds":[],"timeFrom":null,"timeRegions":[],"timeShift":null,"title":"Status By Method","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":true}],"yaxis":{"align":false,"alignLevel":null}}],"targets":[],"title":"BoltDB Shipper","type":"row"}],"refresh":"10s","rows":[],"schemaVersion":14,"style":"dark","tags":["loki"],"templating":{"list":[{"current":{"text":"default","value":"default"},"hide":0,"label":"Data Source","name":"datasource","options":[],"query":"prometheus","refresh":1,"regex":"","type":"datasource"},{"hide":0,"label":null,"name":"logs","options":[],"query":"loki","refresh":1,"regex":"","type":"datasource"},{"allValue":null,"current":{"text":"prod","value":"prod"},"datasource":"$datasource","hide":0,"includeAll":false,"label":"cluster","multi":false,"name":"cluster","options":[],"query":"label_values(loki_build_info, cluster)","refresh":1,"regex":"","sort":2,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{"text":"prod","value":"prod"},"datasource":"$datasource","hide":0,"includeAll":false,"label":"namespace","multi":false,"name":"namespace","options":[],"query":"label_values(loki_build_info{cluster=~\"$cluster\"}, namespace)","refresh":1,"regex":"","sort":2,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-1h","to":"now"},"timepicker":{"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"],"time_options":["5m","15m","1h","6h","12h","24h","2d","7d","30d"]},"timezone":"utc","title":"Loki / Operational","uid":"operational","version":0}
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/monitoring/dashboards/configmap-2.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-dashboards-2
  namespace: default
  labels:
    helm.sh/chart: loki-5.5.12
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.2"
    app.kubernetes.io/managed-by: Helm
    grafana_dashboard: "1"
data:
  "loki-reads-resources.json": |
    {"annotations":{"list":[]},"editable":true,"gnetId":null,"graphTooltip":0,"hideControls":false,"links":[{"asDropdown":true,"icon":"external link","includeVars":true,"keepTime":true,"tags":["loki"],"targetBlank":false,"title":"Loki Dashboards","type":"dashboards"}],"refresh":"10s","rows":[{"collapse":false,"collapsed":false,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"gridPos":{},"id":1,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[{"alias":"limit","color":"#E02F44","fill":0}],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\", container=\"loki\", pod=~\"(loki|enterprise-logs)-read.*\"}[$__rate_interval]))","format":"time_series","intervalFactor":2,"legendFormat":"{{pod}}","legendLink":null,"step":10},{"expr":"min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\", container=\"loki\", pod=~\"(loki|enterprise-logs)-read.*\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\", container=\"loki\", pod=~\"(loki|enterprise-logs)-read.*\"})","format":"time_series","intervalFactor":2,"legendFormat":"limit","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"CPU","tooltip":{"sort":2},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"gridPos":{},"id":2,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[{"alias":"limit","color":"#E02F44","fill":0}],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\", container=\"loki\", pod=~\"(loki|enterprise-logs)-read.*\"})","format":"time_series","intervalFactor":2,"legendFormat":"{{pod}}","legendLink":null,"step":10},{"expr":"min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\", container=\"loki\", pod=~\"(loki|enterprise-logs)-read.*\"} \u003e 0)","format":"time_series","intervalFactor":2,"legendFormat":"limit","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Memory (workingset)","tooltip":{"sort":2},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"bytes","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"gridPos":{},"id":3,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", job=~\"($namespace)/(loki|enterprise-logs)-read\"})","format":"time_series","intervalFactor":2,"legendFormat":"{{pod}}","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Memory (go heap inuse)","tooltip":{"sort":2},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"bytes","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":10,"gridPos":{},"id":4,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":0,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":true,"steppedLine":false,"targets":[{"expr":"sum by(instance, pod, device) (rate(node_disk_written_bytes_total[$__rate_interval])) + ignoring(pod) group_right() (label_replace(count by(instance, pod, device) (container_fs_writes_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\", container=\"loki\", pod=~\"(loki|enterprise-logs)-read.*\", device!~\".*sda.*\"}), \"device\", \"$1\", \"device\", \"/dev/(.*)\") * 0)\n","format":"time_series","intervalFactor":2,"legendFormat":"{{pod}} - {{device}}","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Disk Writes","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"Bps","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":10,"gridPos":{},"id":5,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":0,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":true,"steppedLine":false,"targets":[{"expr":"sum by(instance, pod, device) (rate(node_disk_read_bytes_total[$__rate_interval])) + ignoring(pod) group_right() (label_replace(count by(instance, pod, device) (container_fs_writes_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\", container=\"loki\", pod=~\"(loki|enterprise-logs)-read.*\", device!~\".*sda.*\"}), \"device\", \"$1\", \"device\", \"/dev/(.*)\") * 0)\n","format":"time_series","intervalFactor":2,"legendFormat":"{{pod}} - {{device}}","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Disk Reads","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"Bps","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"gridPos":{},"id":6,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"max by(persistentvolumeclaim) (kubelet_volume_stats_used_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"} / kubelet_volume_stats_capacity_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"}) and count by(persistentvolumeclaim) (kube_persistentvolumeclaim_labels{cluster=~\"$cluster\", namespace=~\"$namespace\",label_name=~\"(loki|enterprise-logs)-read.*\"})","format":"time_series","intervalFactor":2,"legendFormat":"{{persistentvolumeclaim}}","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Disk Space Utilization","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percentunit","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"gridPos":{},"id":7,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"loki_boltdb_shipper_query_readiness_duration_seconds{cluster=~\"$cluster\", namespace=~\"$namespace\"}","format":"time_series","intervalFactor":2,"legendFormat":"duration","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Query Readiness Duration","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"s","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]}],"repeat":null,"repeatIteration":null,"repeatRowId":null,"showTitle":true,"title":"Read path","titleSize":"h6","type":"row"},{"collapse":false,"height":"250px","panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":8,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[{"alias":"limit","color":"#E02F44","fill":0}],"spaceLength":10,"span":4,"stack":false,"steppedLine":false,"targets":[{"expr":"sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\", container=\"loki\", pod=~\"(loki|enterprise-logs)-write.*\"}[$__rate_interval]))","format":"time_series","intervalFactor":2,"legendFormat":"{{pod}}","legendLink":null,"step":10},{"expr":"min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\", container=\"loki\", pod=~\"(loki|enterprise-logs)-write.*\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\", container=\"loki\", pod=~\"(loki|enterprise-logs)-write.*\"})","format":"time_series","intervalFactor":2,"legendFormat":"limit","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"CPU","tooltip":{"sort":2},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":9,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[{"alias":"limit","color":"#E02F44","fill":0}],"spaceLength":10,"span":4,"stack":false,"steppedLine":false,"targets":[{"expr":"max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\", container=\"loki\", pod=~\"(loki|enterprise-logs)-write.*\"})","format":"time_series","intervalFactor":2,"legendFormat":"{{pod}}","legendLink":null,"step":10},{"expr":"min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\", container=\"loki\", pod=~\"(loki|enterprise-logs)-write.*\"} \u003e 0)","format":"time_series","intervalFactor":2,"legendFormat":"limit","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Memory (workingset)","tooltip":{"sort":2},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"bytes","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":10,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":4,"stack":false,"steppedLine":false,"targets":[{"expr":"sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", job=~\"($namespace)/(loki|enterprise-logs)-write\"})","format":"time_series","intervalFactor":2,"legendFormat":"{{pod}}","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Memory (go heap inuse)","tooltip":{"sort":2},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"bytes","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]}],"repeat":null,"repeatIteration":null,"repeatRowId":null,"showTitle":true,"title":"Ingester","titleSize":"h6"}],"schemaVersion":14,"style":"dark","tags":["loki"],"templating":{"list":[{"current":{"text":"default","value":"default"},"hide":0,"label":"Data Source","name":"datasource","options":[],"query":"prometheus","refresh":1,"regex":"","type":"datasource"},{"allValue":null,"current":{"text":"prod","value":"prod"},"datasource":"$datasource","hide":0,"includeAll":false,"label":"cluster","multi":false,"name":"cluster","options":[],"query":"label_values(loki_build_info, cluster)","refresh":1,"regex":"","sort":2,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{"text":"prod","value":"prod"},"datasource":"$datasource","hide":0,"includeAll":false,"label":"namespace","multi":false,"name":"namespace","options":[],"query":"label_values(loki_build_info{cluster=~\"$cluster\"}, namespace)","refresh":1,"regex":"","sort":2,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-1h","to":"now"},"timepicker":{"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"],"time_options":["5m","15m","1h","6h","12h","24h","2d","7d","30d"]},"timezone":"utc","title":"Loki / Reads Resources","uid":"reads-resources","version":0}
  "loki-reads.json": |
    {"annotations":{"list":[]},"editable":true,"gnetId":null,"graphTooltip":0,"hideControls":false,"links":[{"asDropdown":true,"icon":"external link","includeVars":true,"keepTime":true,"tags":["loki"],"targetBlank":false,"title":"Loki Dashboards","type":"dashboards"}],"refresh":"10s","rows":[{"collapse":false,"height":"250px","panels":[{"aliasColors":{"1xx":"#EAB839","2xx":"#7EB26D","3xx":"#6ED0E0","4xx":"#EF843C","5xx":"#E24D42","error":"#E24D42","success":"#7EB26D"},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":10,"id":1,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":0,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":true,"steppedLine":false,"targets":[{"expr":"sum by (status) (\n  label_replace(label_replace(rate(loki_request_duration_seconds_count{cluster=~\"$cluster\",job=~\"($namespace)/(loki|enterprise-logs)-read\", route=~\"loki_api_v1_series|api_prom_series|api_prom_query|api_prom_label|api_prom_label_name_values|loki_api_v1_query|loki_api_v1_query_range|loki_api_v1_labels|loki_api_v1_label_name_values\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-z]+)\"))\n","format":"time_series","intervalFactor":2,"legendFormat":"{{status}}","refId":"A","step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"QPS","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":2,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"histogram_quantile(0.99, sum by (le,route) (job_route:loki_request_duration_seconds_bucket:sum_rate{job=~\"($namespace)/(loki|enterprise-logs)-read\", route=~\"loki_api_v1_series|api_prom_series|api_prom_query|api_prom_label|api_prom_label_name_values|loki_api_v1_query|loki_api_v1_query_range|loki_api_v1_labels|loki_api_v1_label_name_values\", cluster=~\"$cluster\"})) * 1e3","format":"time_series","intervalFactor":2,"legendFormat":"{{ route }} 99th Percentile","refId":"A","step":10},{"expr":"histogram_quantile(0.50, sum by (le,route) (job_route:loki_request_duration_seconds_bucket:sum_rate{job=~\"($namespace)/(loki|enterprise-logs)-read\", route=~\"loki_api_v1_series|api_prom_series|api_prom_query|api_prom_label|api_prom_label_name_values|loki_api_v1_query|loki_api_v1_query_range|loki_api_v1_labels|loki_api_v1_label_name_values\", cluster=~\"$cluster\"})) * 1e3","format":"time_series","intervalFactor":2,"legendFormat":"{{ route }} 50th Percentile","refId":"B","step":10},{"expr":"1e3 * sum(job_route:loki_request_duration_seconds_sum:sum_rate{job=~\"($namespace)/(loki|enterprise-logs)-read\", route=~\"loki_api_v1_series|api_prom_series|api_prom_query|api_prom_label|api_prom_label_name_values|loki_api_v1_query|loki_api_v1_query_range|loki_api_v1_labels|loki_api_v1_label_name_values\", cluster=~\"$cluster\"}) by (route)  / sum(job_route:loki_request_duration_seconds_count:sum_rate{job=~\"($namespace)/(loki|enterprise-logs)-read\", route=~\"loki_api_v1_series|api_prom_series|api_prom_query|api_prom_label|api_prom_label_name_values|loki_api_v1_query|loki_api_v1_query_range|loki_api_v1_labels|loki_api_v1_label_name_values\", cluster=~\"$cluster\"}) by (route) ","format":"time_series","intervalFactor":2,"legendFormat":"{{ route }} Average","refId":"C","step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Latency","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]}],"repeat":null,"repeatIteration":null,"repeatRowId":null,"showTitle":true,"title":"Read Path","titleSize":"h6"},{"collapse":false,"height":"250px","panels":[{"aliasColors":{"1xx":"#EAB839","2xx":"#7EB26D","3xx":"#6ED0E0","4xx":"#EF843C","5xx":"#E24D42","error":"#E24D42","success":"#7EB26D"},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":10,"id":3,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":0,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":true,"steppedLine":false,"targets":[{"expr":"sum by (status) (\n  label_replace(label_replace(rate(loki_boltdb_shipper_request_duration_seconds_count{cluster=~\"$cluster\",job=~\"($namespace)/(loki|enterprise-logs)-read\", operation=\"Shipper.Query\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-z]+)\"))\n","format":"time_series","intervalFactor":2,"legendFormat":"{{status}}","refId":"A","step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"QPS","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":4,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"histogram_quantile(0.99, sum(rate(loki_boltdb_shipper_request_duration_seconds_bucket{cluster=~\"$cluster\",job=~\"($namespace)/(loki|enterprise-logs)-read\", operation=\"Shipper.Query\"}[$__rate_interval])) by (le)) * 1e3","format":"time_series","intervalFactor":2,"legendFormat":"99th Percentile","refId":"A","step":10},{"expr":"histogram_quantile(0.50, sum(rate(loki_boltdb_shipper_request_duration_seconds_bucket{cluster=~\"$cluster\",job=~\"($namespace)/(loki|enterprise-logs)-read\", operation=\"Shipper.Query\"}[$__rate_interval])) by (le)) * 1e3","format":"time_series","intervalFactor":2,"legendFormat":"50th Percentile","refId":"B","step":10},{"expr":"sum(rate(loki_boltdb_shipper_request_duration_seconds_sum{cluster=~\"$cluster\",job=~\"($namespace)/(loki|enterprise-logs)-read\", operation=\"Shipper.Query\"}[$__rate_interval])) * 1e3 / sum(rate(loki_boltdb_shipper_request_duration_seconds_count{cluster=~\"$cluster\",job=~\"($namespace)/(loki|enterprise-logs)-read\", operation=\"Shipper.Query\"}[$__rate_interval]))","format":"time_series","intervalFactor":2,"legendFormat":"Average","refId":"C","step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Latency","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]}],"repeat":null,"repeatIteration":null,"repeatRowId":null,"showTitle":true,"title":"BoltDB Shipper","titleSize":"h6"}],"schemaVersion":14,"style":"dark","tags":["loki"],"templating":{"list":[{"current":{"text":"default","value":"default"},"hide":0,"label":"Data Source","name":"datasource","options":[],"query":"prometheus","refresh":1,"regex":"","type":"datasource"},{"allValue":null,"current":{"text":"prod","value":"prod"},"datasource":"$datasource","hide":0,"includeAll":false,"label":"cluster","multi":false,"name":"cluster","options":[],"query":"label_values(loki_build_info, cluster)","refresh":1,"regex":"","sort":2,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{"text":"prod","value":"prod"},"datasource":"$datasource","hide":0,"includeAll":false,"label":"namespace","multi":false,"name":"namespace","options":[],"query":"label_values(loki_build_info{cluster=~\"$cluster\"}, namespace)","refresh":1,"regex":"","sort":2,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-1h","to":"now"},"timepicker":{"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"],"time_options":["5m","15m","1h","6h","12h","24h","2d","7d","30d"]},"timezone":"utc","title":"Loki / Reads","uid":"reads","version":0}
  "loki-retention.json": |
    {"annotations":{"list":[]},"editable":true,"gnetId":null,"graphTooltip":0,"hideControls":false,"links":[{"asDropdown":true,"icon":"external link","includeVars":true,"keepTime":true,"tags":["loki"],"targetBlank":false,"title":"Loki Dashboards","type":"dashboards"}],"refresh":"10s","rows":[{"collapse":false,"height":"250px","panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":1,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[{"alias":"limit","color":"#E02F44","fill":0}],"spaceLength":10,"span":4,"stack":false,"steppedLine":false,"targets":[{"expr":"sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\", container=\"loki\", pod=~\"(loki|enterprise-logs)-read.*\"}[$__rate_interval]))","format":"time_series","intervalFactor":2,"legendFormat":"{{pod}}","legendLink":null,"step":10},{"expr":"min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\", container=\"loki\", pod=~\"(loki|enterprise-logs)-read.*\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\", container=\"loki\", pod=~\"(loki|enterprise-logs)-read.*\"})","format":"time_series","intervalFactor":2,"legendFormat":"limit","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"CPU","tooltip":{"sort":2},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":2,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[{"alias":"limit","color":"#E02F44","fill":0}],"spaceLength":10,"span":4,"stack":false,"steppedLine":false,"targets":[{"expr":"max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\", container=\"loki\", pod=~\"(loki|enterprise-logs)-read.*\"})","format":"time_series","intervalFactor":2,"legendFormat":"{{pod}}","legendLink":null,"step":10},{"expr":"min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\", container=\"loki\", pod=~\"(loki|enterprise-logs)-read.*\"} \u003e 0)","format":"time_series","intervalFactor":2,"legendFormat":"limit","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Memory (workingset)","tooltip":{"sort":2},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"bytes","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":3,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":4,"stack":false,"steppedLine":false,"targets":[{"expr":"sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", job=~\"($namespace)/(loki|enterprise-logs)-read\"})","format":"time_series","intervalFactor":2,"legendFormat":"{{pod}}","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Memory (go heap inuse)","tooltip":{"sort":2},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"bytes","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]}],"repeat":null,"repeatIteration":null,"repeatRowId":null,"showTitle":true,"title":"Resource Usage","titleSize":"h6"},{"collapse":false,"height":"250px","panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fieldConfig":{"defaults":{"color":{"fixedColor":"blue","mode":"fixed"},"custom":{},"thresholds":{"mode":"absolute","steps":[{"color":"green","value":null}]},"unit":"dateTimeFromNow"}},"fill":1,"id":4,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","options":{"colorMode":"value","graphMode":"area","justifyMode":"auto","orientation":"auto","reduceOptions":{"calcs":["lastNotNull"],"fields":"","values":false},"text":{},"textMode":"auto"},"percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":4,"stack":false,"steppedLine":false,"targets":[{"expr":"loki_boltdb_shipper_compact_tables_operation_last_successful_run_timestamp_seconds{cluster=~\"$cluster\", namespace=~\"$namespace\"} * 1e3","format":"time_series","instant":true,"refId":"A"}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Last Compact and Mark Operation Success","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"stat","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":5,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":4,"stack":false,"steppedLine":false,"targets":[{"expr":"loki_boltdb_shipper_compact_tables_operation_duration_seconds{cluster=~\"$cluster\", namespace=~\"$namespace\"}","format":"time_series","intervalFactor":2,"legendFormat":"duration","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Compact and Mark Operations Duration","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"s","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":6,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":4,"stack":false,"steppedLine":false,"targets":[{"expr":"sum by (status)(rate(loki_boltdb_shipper_compact_tables_operation_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval]))","format":"time_series","intervalFactor":2,"legendFormat":"{{success}}","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Compact and Mark Operations Per Status","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]}],"repeat":null,"repeatIteration":null,"repeatRowId":null,"showTitle":true,"title":"Compact and Mark","titleSize":"h6"},{"collapse":false,"height":"250px","panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":10,"id":7,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":0,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":4,"stack":true,"steppedLine":false,"targets":[{"expr":"count by(action)(loki_boltdb_shipper_retention_marker_table_processed_total{cluster=~\"$cluster\", namespace=~\"$namespace\"})","format":"time_series","intervalFactor":2,"legendFormat":"{{action}}","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Processed Tables Per Action","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":10,"id":8,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":0,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":4,"stack":true,"steppedLine":false,"targets":[{"expr":"count by(table,action)(loki_boltdb_shipper_retention_marker_table_processed_total{cluster=~\"$cluster\", namespace=~\"$namespace\" , action=~\"modified|deleted\"})","format":"time_series","intervalFactor":2,"legendFormat":"{{table}}-{{action}}","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Modified Tables","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":10,"id":9,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":0,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":4,"stack":true,"steppedLine":false,"targets":[{"expr":"sum by (table)(rate(loki_boltdb_shipper_retention_marker_count_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) \u003e0","format":"time_series","intervalFactor":2,"legendFormat":"{{table}}","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Marks Creation Rate Per Table","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]}],"repeat":null,"repeatIteration":null,"repeatRowId":null,"showTitle":true,"title":"Per Table Marker","titleSize":"h6"},{"collapse":false,"height":"250px","panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"format":"short","id":10,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"sum (increase(loki_boltdb_shipper_retention_marker_count_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[24h]))","format":"time_series","instant":true,"intervalFactor":2,"refId":"A"}],"thresholds":"70,80","timeFrom":null,"timeShift":null,"title":"Marked Chunks (24h)","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"singlestat","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":11,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"histogram_quantile(0.99, sum(rate(loki_boltdb_shipper_retention_marker_table_processed_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) by (le)) * 1e3","format":"time_series","intervalFactor":2,"legendFormat":"99th Percentile","refId":"A","step":10},{"expr":"histogram_quantile(0.50, sum(rate(loki_boltdb_shipper_retention_marker_table_processed_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) by (le)) * 1e3","format":"time_series","intervalFactor":2,"legendFormat":"50th Percentile","refId":"B","step":10},{"expr":"sum(rate(loki_boltdb_shipper_retention_marker_table_processed_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) * 1e3 / sum(rate(loki_boltdb_shipper_retention_marker_table_processed_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval]))","format":"time_series","intervalFactor":2,"legendFormat":"Average","refId":"C","step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Mark Table Latency","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]}],"repeat":null,"repeatIteration":null,"repeatRowId":null,"showTitle":true,"title":"","titleSize":"h6"},{"collapse":false,"height":"250px","panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"format":"short","id":12,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"sum (increase(loki_boltdb_shipper_retention_sweeper_chunk_deleted_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\"}[24h]))","format":"time_series","instant":true,"intervalFactor":2,"refId":"A"}],"thresholds":"70,80","timeFrom":null,"timeShift":null,"title":"Delete Chunks (24h)","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"singlestat","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":13,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"histogram_quantile(0.99, sum(rate(loki_boltdb_shipper_retention_sweeper_chunk_deleted_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) by (le)) * 1e3","format":"time_series","intervalFactor":2,"legendFormat":"99th Percentile","refId":"A","step":10},{"expr":"histogram_quantile(0.50, sum(rate(loki_boltdb_shipper_retention_sweeper_chunk_deleted_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) by (le)) * 1e3","format":"time_series","intervalFactor":2,"legendFormat":"50th Percentile","refId":"B","step":10},{"expr":"sum(rate(loki_boltdb_shipper_retention_sweeper_chunk_deleted_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) * 1e3 / sum(rate(loki_boltdb_shipper_retention_sweeper_chunk_deleted_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval]))","format":"time_series","intervalFactor":2,"legendFormat":"Average","refId":"C","step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Delete Latency","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]}],"repeat":null,"repeatIteration":null,"repeatRowId":null,"showTitle":true,"title":"Sweeper","titleSize":"h6"},{"collapse":false,"height":"250px","panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":14,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":4,"stack":false,"steppedLine":false,"targets":[{"expr":"time() - (loki_boltdb_shipper_retention_sweeper_marker_file_processing_current_time{cluster=~\"$cluster\", namespace=~\"$namespace\"} \u003e 0)","format":"time_series","intervalFactor":2,"legendFormat":"lag","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Sweeper Lag","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"s","label":null,"logBase":1,"max":null,"min":null,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":15,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":4,"stack":false,"steppedLine":false,"targets":[{"expr":"sum(loki_boltdb_shipper_retention_sweeper_marker_files_current{cluster=~\"$cluster\", namespace=~\"$namespace\"})","format":"time_series","intervalFactor":2,"legendFormat":"count","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Marks Files to Process","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":16,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":4,"stack":false,"steppedLine":false,"targets":[{"expr":"sum by (status)(rate(loki_boltdb_shipper_retention_sweeper_chunk_deleted_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval]))","format":"time_series","intervalFactor":2,"legendFormat":"{{status}}","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Delete Rate Per Status","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]}],"repeat":null,"repeatIteration":null,"repeatRowId":null,"showTitle":true,"title":"","titleSize":"h6"},{"collapse":false,"height":"250px","panels":[{"datasource":"$logs","id":17,"span":12,"targets":[{"expr":"{cluster=~\"$cluster\", job=~\"($namespace)/(loki|enterprise-logs)-read\"}","refId":"A"}],"title":"Compactor Logs","type":"logs"}],"repeat":null,"repeatIteration":null,"repeatRowId":null,"showTitle":true,"title":"Logs","titleSize":"h6"}],"schemaVersion":14,"style":"dark","tags":["loki"],"templating":{"list":[{"current":{"text":"default","value":"default"},"hide":0,"label":"Data Source","name":"datasource","options":[],"query":"prometheus","refresh":1,"regex":"","type":"datasource"},{"allValue":null,"current":{"text":"prod","value":"prod"},"datasource":"$datasource","hide":0,"includeAll":false,"label":"cluster","multi":false,"name":"cluster","options":[],"query":"label_values(loki_build_info, cluster)","refresh":1,"regex":"","sort":2,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{"text":"prod","value":"prod"},"datasource":"$datasource","hide":0,"includeAll":false,"label":"namespace","multi":false,"name":"namespace","options":[],"query":"label_values(loki_build_info{cluster=~\"$cluster\"}, namespace)","refresh":1,"regex":"","sort":2,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"hide":0,"label":null,"name":"logs","options":[],"query":"loki","refresh":1,"regex":"","type":"datasource"}]},"time":{"from":"now-1h","to":"now"},"timepicker":{"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"],"time_options":["5m","15m","1h","6h","12h","24h","2d","7d","30d"]},"timezone":"utc","title":"Loki / Retention","uid":"retention","version":0}
  "loki-writes-resources.json": |
    {"annotations":{"list":[]},"editable":true,"gnetId":null,"graphTooltip":0,"hideControls":false,"links":[{"asDropdown":true,"icon":"external link","includeVars":true,"keepTime":true,"tags":["loki"],"targetBlank":false,"title":"Loki Dashboards","type":"dashboards"}],"refresh":"10s","rows":[{"collapse":false,"collapsed":false,"panels":[{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"gridPos":{},"id":1,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"sum by(pod) (loki_ingester_memory_streams{cluster=~\"$cluster\", job=~\"($namespace)/(loki|enterprise-logs)-write\"})","format":"time_series","intervalFactor":2,"legendFormat":"{{pod}}","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"In-memory streams","tooltip":{"sort":2},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"gridPos":{},"id":2,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[{"alias":"limit","color":"#E02F44","fill":0}],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\", container=\"loki\", pod=~\"(loki|enterprise-logs)-write.*\"}[$__rate_interval]))","format":"time_series","intervalFactor":2,"legendFormat":"{{pod}}","legendLink":null,"step":10},{"expr":"min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\", container=\"loki\", pod=~\"(loki|enterprise-logs)-write.*\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\", container=\"loki\", pod=~\"(loki|enterprise-logs)-write.*\"})","format":"time_series","intervalFactor":2,"legendFormat":"limit","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"CPU","tooltip":{"sort":2},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"gridPos":{},"id":3,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[{"alias":"limit","color":"#E02F44","fill":0}],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\", container=\"loki\", pod=~\"(loki|enterprise-logs)-write.*\"})","format":"time_series","intervalFactor":2,"legendFormat":"{{pod}}","legendLink":null,"step":10},{"expr":"min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\", container=\"loki\", pod=~\"(loki|enterprise-logs)-write.*\"} \u003e 0)","format":"time_series","intervalFactor":2,"legendFormat":"limit","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Memory (workingset)","tooltip":{"sort":2},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"bytes","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"gridPos":{},"id":4,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", job=~\"($namespace)/(loki|enterprise-logs)-write\"})","format":"time_series","intervalFactor":2,"legendFormat":"{{pod}}","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Memory (go heap inuse)","tooltip":{"sort":2},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"bytes","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":10,"gridPos":{},"id":5,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":0,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":true,"steppedLine":false,"targets":[{"expr":"sum by(instance, pod, device) (rate(node_disk_written_bytes_total[$__rate_interval])) + ignoring(pod) group_right() (label_replace(count by(instance, pod, device) (container_fs_writes_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\", container=\"loki\", pod=~\"(loki|enterprise-logs)-write.*\", device!~\".*sda.*\"}), \"device\", \"$1\", \"device\", \"/dev/(.*)\") * 0)\n","format":"time_series","intervalFactor":2,"legendFormat":"{{pod}} - {{device}}","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Disk Writes","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"Bps","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":10,"gridPos":{},"id":6,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":0,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":true,"steppedLine":false,"targets":[{"expr":"sum by(instance, pod, device) (rate(node_disk_read_bytes_total[$__rate_interval])) + ignoring(pod) group_right() (label_replace(count by(instance, pod, device) (container_fs_writes_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\", container=\"loki\", pod=~\"(loki|enterprise-logs)-write.*\", device!~\".*sda.*\"}), \"device\", \"$1\", \"device\", \"/dev/(.*)\") * 0)\n","format":"time_series","intervalFactor":2,"legendFormat":"{{pod}} - {{device}}","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Disk Reads","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"Bps","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"gridPos":{},"id":7,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"max by(persistentvolumeclaim) (kubelet_volume_stats_used_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"} / kubelet_volume_stats_capacity_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"}) and count by(persistentvolumeclaim) (kube_persistentvolumeclaim_labels{cluster=~\"$cluster\", namespace=~\"$namespace\",label_name=~\"(loki|enterprise-logs)-write.*\"})","format":"time_series","intervalFactor":2,"legendFormat":"{{persistentvolumeclaim}}","legendLink":null,"step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Disk Space Utilization","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"percentunit","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]}],"repeat":null,"repeatIteration":null,"repeatRowId":null,"showTitle":true,"title":"Write path","titleSize":"h6","type":"row"}],"schemaVersion":14,"style":"dark","tags":["loki"],"templating":{"list":[{"current":{"text":"default","value":"default"},"hide":0,"label":"Data Source","name":"datasource","options":[],"query":"prometheus","refresh":1,"regex":"","type":"datasource"},{"allValue":null,"current":{"text":"prod","value":"prod"},"datasource":"$datasource","hide":0,"includeAll":false,"label":"cluster","multi":false,"name":"cluster","options":[],"query":"label_values(loki_build_info, cluster)","refresh":1,"regex":"","sort":2,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{"text":"prod","value":"prod"},"datasource":"$datasource","hide":0,"includeAll":false,"label":"namespace","multi":false,"name":"namespace","options":[],"query":"label_values(loki_build_info{cluster=~\"$cluster\"}, namespace)","refresh":1,"regex":"","sort":2,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-1h","to":"now"},"timepicker":{"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"],"time_options":["5m","15m","1h","6h","12h","24h","2d","7d","30d"]},"timezone":"utc","title":"Loki / Writes Resources","uid":"writes-resources","version":0}
  "loki-writes.json": |
    {"annotations":{"list":[]},"editable":true,"gnetId":null,"graphTooltip":0,"hideControls":false,"links":[{"asDropdown":true,"icon":"external link","includeVars":true,"keepTime":true,"tags":["loki"],"targetBlank":false,"title":"Loki Dashboards","type":"dashboards"}],"refresh":"10s","rows":[{"collapse":false,"height":"250px","panels":[{"aliasColors":{"1xx":"#EAB839","2xx":"#7EB26D","3xx":"#6ED0E0","4xx":"#EF843C","5xx":"#E24D42","error":"#E24D42","success":"#7EB26D"},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":10,"id":1,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":0,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":true,"steppedLine":false,"targets":[{"expr":"sum by (status) (\n  label_replace(label_replace(rate(loki_request_duration_seconds_count{cluster=~\"$cluster\",job=~\"($namespace)/(loki|enterprise-logs)-write\", route=~\"api_prom_push|loki_api_v1_push|/httpgrpc.HTTP/Handle\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-z]+)\"))\n","format":"time_series","intervalFactor":2,"legendFormat":"{{status}}","refId":"A","step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"QPS","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":2,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"histogram_quantile(0.99, sum by (le) (job:loki_request_duration_seconds_bucket:sum_rate{job=~\"($namespace)/(loki|enterprise-logs)-write\", cluster=~\"$cluster\"})) * 1e3","format":"time_series","intervalFactor":2,"legendFormat":"99th Percentile","refId":"A","step":10},{"expr":"histogram_quantile(0.50, sum by (le) (job:loki_request_duration_seconds_bucket:sum_rate{job=~\"($namespace)/(loki|enterprise-logs)-write\", cluster=~\"$cluster\"})) * 1e3","format":"time_series","intervalFactor":2,"legendFormat":"50th Percentile","refId":"B","step":10},{"expr":"1e3 * sum(job:loki_request_duration_seconds_sum:sum_rate{job=~\"($namespace)/(loki|enterprise-logs)-write\", cluster=~\"$cluster\"}) / sum(job:loki_request_duration_seconds_count:sum_rate{job=~\"($namespace)/(loki|enterprise-logs)-write\", cluster=~\"$cluster\"})","format":"time_series","intervalFactor":2,"legendFormat":"Average","refId":"C","step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Latency","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]}],"repeat":null,"repeatIteration":null,"repeatRowId":null,"showTitle":true,"title":"Write Path","titleSize":"h6"},{"collapse":false,"height":"250px","panels":[{"aliasColors":{"1xx":"#EAB839","2xx":"#7EB26D","3xx":"#6ED0E0","4xx":"#EF843C","5xx":"#E24D42","error":"#E24D42","success":"#7EB26D"},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":10,"id":3,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":0,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":true,"steppedLine":false,"targets":[{"expr":"sum by (status) (\n  label_replace(label_replace(rate(loki_boltdb_shipper_request_duration_seconds_count{cluster=~\"$cluster\",job=~\"($namespace)/(loki|enterprise-logs)-write\", operation=\"WRITE\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-z]+)\"))\n","format":"time_series","intervalFactor":2,"legendFormat":"{{status}}","refId":"A","step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"QPS","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"short","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]},{"aliasColors":{},"bars":false,"dashLength":10,"dashes":false,"datasource":"$datasource","fill":1,"id":4,"legend":{"avg":false,"current":false,"max":false,"min":false,"show":true,"total":false,"values":false},"lines":true,"linewidth":1,"links":[],"nullPointMode":"null as zero","percentage":false,"pointradius":5,"points":false,"renderer":"flot","seriesOverrides":[],"spaceLength":10,"span":6,"stack":false,"steppedLine":false,"targets":[{"expr":"histogram_quantile(0.99, sum(rate(loki_boltdb_shipper_request_duration_seconds_bucket{cluster=~\"$cluster\",job=~\"($namespace)/(loki|enterprise-logs)-write\", operation=\"WRITE\"}[$__rate_interval])) by (le)) * 1e3","format":"time_series","intervalFactor":2,"legendFormat":"99th Percentile","refId":"A","step":10},{"expr":"histogram_quantile(0.50, sum(rate(loki_boltdb_shipper_request_duration_seconds_bucket{cluster=~\"$cluster\",job=~\"($namespace)/(loki|enterprise-logs)-write\", operation=\"WRITE\"}[$__rate_interval])) by (le)) * 1e3","format":"time_series","intervalFactor":2,"legendFormat":"50th Percentile","refId":"B","step":10},{"expr":"sum(rate(loki_boltdb_shipper_request_duration_seconds_sum{cluster=~\"$cluster\",job=~\"($namespace)/(loki|enterprise-logs)-write\", operation=\"WRITE\"}[$__rate_interval])) * 1e3 / sum(rate(loki_boltdb_shipper_request_duration_seconds_count{cluster=~\"$cluster\",job=~\"($namespace)/(loki|enterprise-logs)-write\", operation=\"WRITE\"}[$__rate_interval]))","format":"time_series","intervalFactor":2,"legendFormat":"Average","refId":"C","step":10}],"thresholds":[],"timeFrom":null,"timeShift":null,"title":"Latency","tooltip":{"shared":true,"sort":2,"value_type":"individual"},"type":"graph","xaxis":{"buckets":null,"mode":"time","name":null,"show":true,"values":[]},"yaxes":[{"format":"ms","label":null,"logBase":1,"max":null,"min":0,"show":true},{"format":"short","label":null,"logBase":1,"max":null,"min":null,"show":false}]}],"repeat":null,"repeatIteration":null,"repeatRowId":null,"showTitle":true,"title":"BoltDB Shipper","titleSize":"h6"}],"schemaVersion":14,"style":"dark","tags":["loki"],"templating":{"list":[{"current":{"text":"default","value":"default"},"hide":0,"label":"Data Source","name":"datasource","options":[],"query":"prometheus","refresh":1,"regex":"","type":"datasource"},{"allValue":null,"current":{"text":"prod","value":"prod"},"datasource":"$datasource","hide":0,"includeAll":false,"label":"cluster","multi":false,"name":"cluster","options":[],"query":"label_values(loki_build_info, cluster)","refresh":1,"regex":"","sort":2,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false},{"allValue":null,"current":{"text":"prod","value":"prod"},"datasource":"$datasource","hide":0,"includeAll":false,"label":"namespace","multi":false,"name":"namespace","options":[],"query":"label_values(loki_build_info{cluster=~\"$cluster\"}, namespace)","refresh":1,"regex":"","sort":2,"tagValuesQuery":"","tags":[],"tagsQuery":"","type":"query","useTags":false}]},"time":{"from":"now-1h","to":"now"},"timepicker":{"refresh_intervals":["5s","10s","30s","1m","5m","15m","30m","1h","2h","1d"],"time_options":["5m","15m","1h","6h","12h","24h","2d","7d","30d"]},"timezone":"utc","title":"Loki / Writes","uid":"writes","version":0}
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/runtime-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-runtime
  namespace: default
  labels:
    helm.sh/chart: loki-5.5.12
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.2"
    app.kubernetes.io/managed-by: Helm
data:
  runtime-config.yaml: |
    
    {}
---
# Source: dnation-kubernetes-monitoring-stack/templates/dnation/home.yaml
#
# Copyright 2020 The dNation Kubernetes Monitoring Stack Authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: v1
kind: ConfigMap
metadata:
  name: dnation-home
  namespace: default
  labels:
    app: dnation-kubernetes-monitoring-stack
data:
  home.json: |-
    {
      "links": [],
      "panels": [
        {
          "datasource": null,
          "gridPos": {
            "h": 3,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 1,
          "title": "",
          "transparent": false,
          "type": "welcome"
        },
        {
          "datasource": null,
          "folderId": 0,
          "gridPos": {
            "h": 15,
            "w": 24,
            "x": 0,
            "y": 4
          },
          "headings": true,
          "id": 3,
          "limit": 100,
          "links": [],
          "options": {},
          "query": "",
          "recent": true,
          "search": false,
          "starred": true,
          "tags": [],
          "title": "Dashboards",
          "type": "dashlist"
        }
      ],
      "schemaVersion": 22,
      "tags": [],
      "templating": {
        "list": []
      },
      "time": {
        "from": "now-6h",
        "to": "now"
      },
      "timepicker": {
        "hidden": true,
        "refresh_intervals": [ "5s", "10s", "30s", "1m", "5m", "15m", "30m", "1h", "2h", "1d" ],
        "time_options": [ "5m", "15m", "1h", "6h", "12h", "24h", "2d", "7d", "30d" ],
        "type": "timepicker"
      },
      "timezone": "browser",
      "title": "Home"
    }
---
# Source: dnation-kubernetes-monitoring-stack/templates/dnation/logo.yaml
#
# Copyright 2020 The dNation Kubernetes Monitoring Stack Authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: v1
kind: ConfigMap
metadata:
  name: dnation-logo
  namespace: default
  labels:
    app: dnation-kubernetes-monitoring-stack
data:
  dnation_logo.svg: "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generator: Adobe
    Illustrator 24.2.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\n<svg
    version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"
    x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 223.96 188.02\" style=\"enable-background:new
    0 0 223.96 188.02;\" xml:space=\"preserve\">\n<style type=\"text/css\">\n\t.st0{fill:#E61F2E;}\n\t.st1{fill:#F4790D;}\n\t.st2{fill:#248431;}\n\t.st3{fill:#D6D7D8;}\n</style>\n<g>\n\t<path
    id=\"Rectangle_3_2_\" class=\"st0\" d=\"M186.92,76.65L186.92,76.65c-18.68,0-33.82-15.14-33.82-33.82l0,0\n\t\tc0-18.68,15.14-33.82,33.82-33.82l0,0c18.68,0,33.82,15.14,33.82,33.82l0,0C220.74,61.51,205.6,76.65,186.92,76.65z\"/>\n\t<path
    id=\"Rectangle_4_2_\" class=\"st1\" d=\"M111.75,76.65L111.75,76.65c-18.68,0-33.82-15.14-33.82-33.82l0,0\n\t\tc0-18.68,15.14-33.82,33.82-33.82l0,0c18.68,0,33.82,15.14,33.82,33.82l0,0C145.57,61.51,130.43,76.65,111.75,76.65z\"/>\n\t<path
    id=\"Rectangle_5_2_\" class=\"st2\" d=\"M36.58,76.65L36.58,76.65c-18.68,0-33.82-15.14-33.82-33.82l0,0\n\t\tc0-18.68,15.14-33.82,33.82-33.82l0,0c18.68,0,33.82,15.14,33.82,33.82l0,0C70.4,61.51,55.26,76.65,36.58,76.65z\"/>\n</g>\n<path
    class=\"st3\" d=\"M101.92,104.25v78.93h-16.8v-6.99c-4.36,5.26-10.67,7.89-18.94,7.89c-5.71,0-10.88-1.28-15.5-3.83\n\tc-4.62-2.55-8.25-6.2-10.88-10.94c-2.63-4.74-3.95-10.22-3.95-16.46c0-6.24,1.31-11.73,3.95-16.46c2.63-4.74,6.26-8.38,10.88-10.94\n\tc4.62-2.55,9.79-3.83,15.5-3.83c7.74,0,13.79,2.44,18.15,7.33v-24.69H101.92zM80.27,165.08c2.93-3.04,4.4-7.12,4.4-12.23\n\tc0-5.11-1.47-9.19-4.4-12.23c-2.93-3.04-6.62-4.57-11.05-4.57c-4.51,0-8.23,1.52-11.16,4.57c-2.93,3.04-4.4,7.12-4.4,12.23\n\tc0,5.11,1.47,9.19,4.4,12.23c2.93,3.04,6.65,4.57,11.16,4.57C73.65,169.65,77.34,168.12,80.27,165.08z\"/>\n<path
    class=\"st3\" d=\"M181.69,104.25v78.93h-15l-39.35-47.92v47.92H109.3v-78.93h15.11l39.24,47.92v-47.92H181.69z\"/>\n</svg>\n"
---
# Source: dnation-kubernetes-monitoring-stack/templates/grafana/datasources.yaml
#
# Copyright 2020 The dNation Kubernetes Monitoring Stack Authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: v1
kind: ConfigMap
metadata:
  name: dnation-kubernetes-monitoring-stack-grafana-datasources
  namespace: default
  labels:
    app: dnation-kubernetes-monitoring-stack
    grafana_datasource: "1"
data:
  datasource.yaml: |-
    apiVersion: 1
    datasources:
    - isDefault: false
      jsonData:
        httpHeaderName1: X-Scope-OrgID
      name: cluster-logs
      secureJsonData:
        httpHeaderValue1: "1"
      type: loki
      url: http://loki-gateway
    - access: proxy
      isDefault: true
      name: thanos
      type: prometheus
      url: http://release-name-thanos-query:9090
---
# Source: dnation-kubernetes-monitoring-stack/charts/dnation-kubernetes-monitoring/charts/dnation-kubernetes-jsonnet-translator/templates/clusterrole.yaml
#
# Copyright 2020 The dNation Jsonnet Translator Authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dnation-kubernetes-jsonnet-translator
  labels:
    app: dnation-kubernetes-jsonnet-translator
rules:
- apiGroups: ["*"]
  resources: ["configmaps", "prometheusrules"]
  verbs: ["get", "watch", "list", "create", "update", "delete"]
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/charts/grafana/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    helm.sh/chart: grafana-6.60.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "10.1.5"
    app.kubernetes.io/managed-by: Helm
  name: release-name-grafana-clusterrole
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["configmaps", "secrets"]
    verbs: ["get", "watch", "list"]
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/charts/kube-state-metrics/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:    
    helm.sh/chart: kube-state-metrics-5.14.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.10.0"
    release: release-name
  name: release-name-kube-state-metrics
rules:

- apiGroups: ["certificates.k8s.io"]
  resources:
  - certificatesigningrequests
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["list", "watch"]

- apiGroups: ["batch"]
  resources:
  - cronjobs
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "apps"]
  resources:
  - daemonsets
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "apps"]
  resources:
  - deployments
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - endpoints
  verbs: ["list", "watch"]

- apiGroups: ["autoscaling"]
  resources:
  - horizontalpodautoscalers
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "networking.k8s.io"]
  resources:
  - ingresses
  verbs: ["list", "watch"]

- apiGroups: ["batch"]
  resources:
  - jobs
  verbs: ["list", "watch"]

- apiGroups: ["coordination.k8s.io"]
  resources:
  - leases
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - limitranges
  verbs: ["list", "watch"]

- apiGroups: ["admissionregistration.k8s.io"]
  resources:
    - mutatingwebhookconfigurations
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - namespaces
  verbs: ["list", "watch"]

- apiGroups: ["networking.k8s.io"]
  resources:
  - networkpolicies
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - nodes
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - persistentvolumeclaims
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - persistentvolumes
  verbs: ["list", "watch"]

- apiGroups: ["policy"]
  resources:
    - poddisruptionbudgets
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - pods
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "apps"]
  resources:
  - replicasets
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - replicationcontrollers
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - resourcequotas
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - secrets
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - services
  verbs: ["list", "watch"]

- apiGroups: ["apps"]
  resources:
  - statefulsets
  verbs: ["list", "watch"]

- apiGroups: ["storage.k8s.io"]
  resources:
    - storageclasses
  verbs: ["list", "watch"]

- apiGroups: ["admissionregistration.k8s.io"]
  resources:
    - validatingwebhookconfigurations
  verbs: ["list", "watch"]

- apiGroups: ["storage.k8s.io"]
  resources:
    - volumeattachments
  verbs: ["list", "watch"]
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-prometheus-operator
  labels:
    app: kube-prometheus-stack-operator
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
rules:
- apiGroups:
  - monitoring.coreos.com
  resources:
  - alertmanagers
  - alertmanagers/finalizers
  - alertmanagers/status
  - alertmanagerconfigs
  - prometheuses
  - prometheuses/finalizers
  - prometheuses/status
  - prometheusagents
  - prometheusagents/finalizers
  - prometheusagents/status
  - thanosrulers
  - thanosrulers/finalizers
  - thanosrulers/status
  - scrapeconfigs
  - servicemonitors
  - podmonitors
  - probes
  - prometheusrules
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - delete
- apiGroups:
  - ""
  resources:
  - services
  - services/finalizers
  - endpoints
  verbs:
  - get
  - create
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-prometheus-prometheus
  labels:
    app: kube-prometheus-stack-prometheus
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
rules:
# This permission are not in the kube-prometheus repo
# they're grabbed from https://github.com/prometheus/prometheus/blob/master/documentation/examples/rbac-setup.yml
- apiGroups: [""]
  resources:
  - nodes
  - nodes/metrics
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - "networking.k8s.io"
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics", "/metrics/cadvisor"]
  verbs: ["get"]
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/charts/grafana-agent-operator/templates/operator-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-grafana-agent-operator
  labels:
    app.kubernetes.io/name: grafana-agent-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: operator
    helm.sh/chart: grafana-agent-operator-0.2.3
    app.kubernetes.io/version: "0.25.1"
rules:
- apiGroups: [monitoring.grafana.com]
  resources:
  - grafanaagents
  - metricsinstances
  - logsinstances
  - podlogs
  - integrations
  verbs: [get, list, watch]
- apiGroups: [monitoring.grafana.com]
  resources:
  - grafanaagents/finalizers
  - metricsinstances/finalizers
  - logsinstances/finalizers
  - podlogs/finalizers
  - integrations/finalizers
  verbs: [get, list, watch, update]
- apiGroups: [monitoring.coreos.com]
  resources:
  - podmonitors
  - probes
  - servicemonitors
  verbs: [get, list, watch]
- apiGroups: [monitoring.coreos.com]
  resources:
  - podmonitors/finalizers
  - probes/finalizers
  - servicemonitors/finalizers
  verbs: [get, list, watch, update]
- apiGroups: [""]
  resources:
  - namespaces
  - nodes
  verbs: [get, list, watch]
- apiGroups: [""]
  resources:
  - secrets
  - services
  - configmaps
  - endpoints
  verbs: [get, list, watch, create, update, patch, delete]
- apiGroups: ["apps"]
  resources:
  - statefulsets
  - daemonsets
  - deployments
  verbs: [get, list, watch, create, update, patch, delete]
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/monitoring/grafana-agent.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-loki-grafana-agent
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/proxy
  - nodes/metrics
  - services
  - endpoints
  - pods
  - events
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- nonResourceURLs:
  - /metrics
  - /metrics/cadvisor
  verbs:
  - get
---
# Source: dnation-kubernetes-monitoring-stack/charts/promtail/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-promtail
  labels:
    helm.sh/chart: promtail-6.0.2
    app.kubernetes.io/name: promtail
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.5.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs:
      - get
      - watch
      - list
---
# Source: dnation-kubernetes-monitoring-stack/charts/dnation-kubernetes-monitoring/charts/dnation-kubernetes-jsonnet-translator/templates/clusterrolebinding.yaml
#
# Copyright 2020 The dNation Jsonnet Translator Authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dnation-kubernetes-jsonnet-translator
  labels:
    app: dnation-kubernetes-jsonnet-translator
roleRef:
  kind: ClusterRole
  name: dnation-kubernetes-jsonnet-translator
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: release-name-dnation-kubernetes-jsonnet-translator
  namespace: default
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/charts/grafana/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-grafana-clusterrolebinding
  labels:
    helm.sh/chart: grafana-6.60.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "10.1.5"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: release-name-grafana
    namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-grafana-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/charts/kube-state-metrics/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:    
    helm.sh/chart: kube-state-metrics-5.14.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.10.0"
    release: release-name
  name: release-name-kube-state-metrics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-kube-state-metrics
subjects:
- kind: ServiceAccount
  name: release-name-kube-state-metrics
  namespace: default
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-prometheus-operator
  labels:
    app: kube-prometheus-stack-operator
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-prometheus-operator
subjects:
- kind: ServiceAccount
  name: kube-prometheus-operator
  namespace: default
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-prometheus-prometheus
  labels:
    app: kube-prometheus-stack-prometheus
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-prometheus-prometheus
subjects:
  - kind: ServiceAccount
    name: kube-prometheus-prometheus
    namespace: default
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/charts/grafana-agent-operator/templates/operator-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-grafana-agent-operator
  labels:
    app.kubernetes.io/name: grafana-agent-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: operator
    helm.sh/chart: grafana-agent-operator-0.2.3
    app.kubernetes.io/version: "0.25.1"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-grafana-agent-operator
subjects:
- kind: ServiceAccount
  name: release-name-grafana-agent-operator
  namespace: default
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/monitoring/grafana-agent.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-loki-grafana-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-loki-grafana-agent
subjects:
- kind: ServiceAccount
  name: release-name-loki-grafana-agent
  namespace: default
---
# Source: dnation-kubernetes-monitoring-stack/charts/promtail/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-promtail
  labels:
    helm.sh/chart: promtail-6.0.2
    app.kubernetes.io/name: promtail
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.5.0"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: release-name-promtail
    namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-promtail
  apiGroup: rbac.authorization.k8s.io
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/charts/grafana/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-grafana
  namespace: default
  labels:
    helm.sh/chart: grafana-6.60.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "10.1.5"
    app.kubernetes.io/managed-by: Helm
rules: []
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/charts/grafana/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-grafana
  namespace: default
  labels:
    helm.sh/chart: grafana-6.60.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "10.1.5"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-grafana
subjects:
- kind: ServiceAccount
  name: release-name-grafana
  namespace: default
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/charts/grafana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-grafana
  namespace: default
  labels:
    helm.sh/chart: grafana-6.60.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "10.1.5"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http-web
      port: 80
      protocol: TCP
      targetPort: 3000
  selector:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/charts/kube-state-metrics/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kube-state-metrics
  namespace: default
  labels:    
    helm.sh/chart: kube-state-metrics-5.14.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.10.0"
    release: release-name
  annotations:
    prometheus.io/scrape: 'true'
spec:
  type: "ClusterIP"
  ports:
  - name: "http"
    protocol: TCP
    port: 8080
    targetPort: 8080
  
  selector:    
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: release-name
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/charts/prometheus-node-exporter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-prometheus-node-exporter
  namespace: default
  labels:
    helm.sh/chart: prometheus-node-exporter-4.23.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: prometheus-node-exporter
    app.kubernetes.io/name: prometheus-node-exporter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.6.1"
    jobLabel: node-exporter
    release: release-name
  annotations:
    prometheus.io/scrape: "true"
spec:
  type: ClusterIP
  ports:
    - port: 9100
      targetPort: 9100
      protocol: TCP
      name: http-metrics
  selector:
    app.kubernetes.io/name: prometheus-node-exporter
    app.kubernetes.io/instance: release-name
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/alertmanager/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kube-prometheus-alertmanager
  namespace: default
  labels:
    app: kube-prometheus-stack-alertmanager
    self-monitor: "true"
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
spec:
  ports:
  - name: http-web
    port: 9093
    targetPort: 9093
    protocol: TCP
  - name: reloader-web
    appProtocol: http
    port: 8080
    targetPort: reloader-web
  selector:
    app.kubernetes.io/name: alertmanager
    alertmanager: kube-prometheus-alertmanager
  type: "ClusterIP"
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/exporters/core-dns/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kube-prometheus-coredns
  labels:
    app: kube-prometheus-stack-coredns
    jobLabel: coredns
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
  namespace: kube-system
spec:
  clusterIP: None
  ports:
    - name: http-metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
  selector:
    k8s-app: kube-dns
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/exporters/kube-controller-manager/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kube-prometheus-kube-controller-manager
  labels:
    app: kube-prometheus-stack-kube-controller-manager
    jobLabel: kube-controller-manager
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
  namespace: kube-system
spec:
  clusterIP: None
  ports:
    - name: http-metrics
      port: 10257
      protocol: TCP
      targetPort: 10257
  selector:
    component: kube-controller-manager
  type: ClusterIP
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/exporters/kube-etcd/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kube-prometheus-kube-etcd
  labels:
    app: kube-prometheus-stack-kube-etcd
    jobLabel: kube-etcd
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
  namespace: kube-system
spec:
  clusterIP: None
  ports:
    - name: http-metrics
      port: 2381
      protocol: TCP
      targetPort: 2381
  selector:
    component: etcd
  type: ClusterIP
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/exporters/kube-proxy/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kube-prometheus-kube-proxy
  labels:
    app: kube-prometheus-stack-kube-proxy
    jobLabel: kube-proxy
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
  namespace: kube-system
spec:
  clusterIP: None
  ports:
    - name: http-metrics
      port: 10249
      protocol: TCP
      targetPort: 10249
  selector:
    k8s-app: kube-proxy
  type: ClusterIP
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/exporters/kube-scheduler/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kube-prometheus-kube-scheduler
  labels:
    app: kube-prometheus-stack-kube-scheduler
    jobLabel: kube-scheduler
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
  namespace: kube-system
spec:
  clusterIP: None
  ports:
    - name: http-metrics
      port: 10259
      protocol: TCP
      targetPort: 10259
  selector:
    component: kube-scheduler
  type: ClusterIP
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus-operator/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kube-prometheus-operator
  namespace: default
  labels:
    app: kube-prometheus-stack-operator
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
spec:
  ports:
  - name: https
    port: 443
    targetPort: https
  selector:
    app: kube-prometheus-stack-operator
    release: "release-name"
  type: "ClusterIP"
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kube-prometheus-prometheus
  namespace: default
  labels:
    app: kube-prometheus-stack-prometheus
    self-monitor: "true"
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
spec:
  ports:
  - name: http-web
    port: 9090
    targetPort: 9090
  - name: reloader-web
    appProtocol: http
    port: 8080
    targetPort: reloader-web
  publishNotReadyAddresses: false
  selector:
    app.kubernetes.io/name: prometheus
    operator.prometheus.io/name: kube-prometheus-prometheus
  type: "ClusterIP"
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/serviceThanosSidecar.yaml
apiVersion: v1
kind: Service
metadata:
  name: kube-prometheus-thanos-discovery
  namespace: default
  labels:
    app: kube-prometheus-stack-thanos-discovery
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: grpc
    port: 10901
    targetPort: grpc
  - name: http
    port: 10902
    targetPort: http
  selector:
    app.kubernetes.io/name: prometheus
    operator.prometheus.io/name: kube-prometheus-prometheus
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/backend/query-scheduler-discovery.yaml
apiVersion: v1
kind: Service
metadata:
  name: query-scheduler-discovery
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: backend
    prometheus.io/service-monitor: "false"
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: http-metrics
      port: 3100
      targetPort: http-metrics
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: backend
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/backend/service-backend-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: loki-backend-headless
  namespace: default
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: backend
    prometheus.io/service-monitor: "false"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: http-metrics
      port: 3100
      targetPort: http-metrics
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: backend
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/backend/service-backend.yaml
apiVersion: v1
kind: Service
metadata:
  name: loki-backend
  namespace: default
  labels:
    helm.sh/chart: loki-5.5.12
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.2"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: backend
spec:
  type: ClusterIP
  ports:
    - name: http-metrics
      port: 3100
      targetPort: http-metrics
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: backend
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/gateway/service-gateway.yaml
apiVersion: v1
kind: Service
metadata:
  name: loki-gateway
  namespace: default
  labels:
    helm.sh/chart: loki-5.5.12
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.2"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: gateway
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: gateway
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/loki-canary/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: loki-canary
  namespace: default
  labels:
    helm.sh/chart: loki-5.5.12
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.2"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: canary
spec:
  type: ClusterIP
  ports:
    - name: http-metrics
      port: 3500
      targetPort: http-metrics
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: canary
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/read/service-read-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: loki-read-headless
  namespace: default
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: read
    prometheus.io/service-monitor: "false"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: http-metrics
      port: 3100
      targetPort: http-metrics
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
      appProtocol: tcp
  selector:
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: read
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/read/service-read.yaml
apiVersion: v1
kind: Service
metadata:
  name: loki-read
  namespace: default
  labels:
    helm.sh/chart: loki-5.5.12
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.2"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: read
spec:
  type: ClusterIP
  ports:
    - name: http-metrics
      port: 3100
      targetPort: http-metrics
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: read
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/service-memberlist.yaml
apiVersion: v1
kind: Service
metadata:
  name: loki-memberlist
  namespace: default
  labels:
    helm.sh/chart: loki-5.5.12
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: tcp
      port: 7946
      targetPort: http-memberlist
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: memberlist
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/write/service-write-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: loki-write-headless
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: write
    prometheus.io/service-monitor: "false"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: http-metrics
      port: 3100
      targetPort: http-metrics
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
      appProtocol: tcp
  selector:
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: write
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/write/service-write.yaml
apiVersion: v1
kind: Service
metadata:
  name: loki-write
  labels:
    helm.sh/chart: loki-5.5.12
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.2"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: write
spec:
  type: ClusterIP
  ports:
    - name: http-metrics
      port: 3100
      targetPort: http-metrics
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: write
---
# Source: dnation-kubernetes-monitoring-stack/charts/thanos/templates/query/service-grpc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-thanos-query-grpc
  namespace: "default"
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: thanos
    app.kubernetes.io/version: 0.32.5
    helm.sh/chart: thanos-12.13.13
    app.kubernetes.io/component: query
spec:
  type: ClusterIP
  ports:
    - port: 10901
      targetPort: grpc
      protocol: TCP
      name: grpc
      nodePort: null
  selector:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: thanos
    app.kubernetes.io/component: query
---
# Source: dnation-kubernetes-monitoring-stack/charts/thanos/templates/query/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-thanos-query
  namespace: "default"
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: thanos
    app.kubernetes.io/version: 0.32.5
    helm.sh/chart: thanos-12.13.13
    app.kubernetes.io/component: query
    
spec:
  type: ClusterIP
  ports:
    - port: 9090
      targetPort: http
      protocol: TCP
      name: http
      nodePort: null
  selector:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: thanos
    app.kubernetes.io/component: query
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/charts/prometheus-node-exporter/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: release-name-prometheus-node-exporter
  namespace: default
  labels:
    helm.sh/chart: prometheus-node-exporter-4.23.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: prometheus-node-exporter
    app.kubernetes.io/name: prometheus-node-exporter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.6.1"
    jobLabel: node-exporter
    release: release-name
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus-node-exporter
      app.kubernetes.io/instance: release-name
  revisionHistoryLimit: 10
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        helm.sh/chart: prometheus-node-exporter-4.23.2
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: metrics
        app.kubernetes.io/part-of: prometheus-node-exporter
        app.kubernetes.io/name: prometheus-node-exporter
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.6.1"
        jobLabel: node-exporter
        release: release-name
    spec:
      automountServiceAccountToken: false
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: release-name-prometheus-node-exporter
      containers:
        - name: node-exporter
          image: quay.io/prometheus/node-exporter:v1.6.1
          imagePullPolicy: IfNotPresent
          args:
            - --path.procfs=/host/proc
            - --path.sysfs=/host/sys
            - --path.rootfs=/host/root
            - --path.udev.data=/host/root/run/udev/data
            - --web.listen-address=[$(HOST_IP)]:9100
            - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
            - --collector.filesystem.fs-types-exclude=^(rootfs|autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
          securityContext:
            readOnlyRootFilesystem: true
          env:
            - name: HOST_IP
              value: 0.0.0.0
          ports:
            - name: http-metrics
              containerPort: 9100
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              path: /
              port: 9100
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              path: /
              port: 9100
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
            - name: proc
              mountPath: /host/proc
              readOnly:  true
            - name: sys
              mountPath: /host/sys
              readOnly: true
            - name: root
              mountPath: /host/root
              mountPropagation: HostToContainer
              readOnly: true
      hostNetwork: true
      hostPID: true
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          operator: Exists
      volumes:
        - name: proc
          hostPath:
            path: /proc
        - name: sys
          hostPath:
            path: /sys
        - name: root
          hostPath:
            path: /
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/loki-canary/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: loki-canary
  namespace: default
  labels:
    helm.sh/chart: loki-5.5.12
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.2"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: canary
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: loki
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: canary
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: loki
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: canary
    spec:
      serviceAccountName: loki-canary
      
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      containers:
        - name: loki-canary
          image: docker.io/grafana/loki-canary:2.8.2
          imagePullPolicy: IfNotPresent
          args:
            - -addr=loki-gateway.default.svc.cluster.local.
            - -labelname=pod
            - -labelvalue=$(POD_NAME)
            - -user=self-monitoring
            - -tenant-id=self-monitoring
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          ports:
            - name: http-metrics
              containerPort: 3500
              protocol: TCP
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            
          readinessProbe:
            httpGet:
              path: /metrics
              port: http-metrics
            initialDelaySeconds: 15
            timeoutSeconds: 1
---
# Source: dnation-kubernetes-monitoring-stack/charts/promtail/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: release-name-promtail
  namespace: default
  labels:
    helm.sh/chart: promtail-6.0.2
    app.kubernetes.io/name: promtail
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.5.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: promtail
      app.kubernetes.io/instance: release-name
  updateStrategy:
    {}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: promtail
        app.kubernetes.io/instance: release-name
      annotations:
        checksum/config: 23f8e6ca6094a6bfc59dc0f7c5131ac26ab694f0ec9c6065b0cea965db93d3c7
    spec:
      serviceAccountName: release-name-promtail
      securityContext:
        runAsGroup: 0
        runAsUser: 0
      containers:
        - name: promtail
          image: "docker.io/grafana/promtail:2.5.0"
          imagePullPolicy: IfNotPresent
          args:
            - "-config.file=/etc/promtail/promtail.yaml"
            - -client.external-labels=cluster=observer-cluster
          volumeMounts:
            - name: config
              mountPath: /etc/promtail
            - mountPath: /run/promtail
              name: run
            - mountPath: /var/lib/docker/containers
              name: containers
              readOnly: true
            - mountPath: /var/log/pods
              name: pods
              readOnly: true
          env:
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          ports:
            - name: http-metrics
              containerPort: 3101
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
      volumes:
        - name: config
          secret:
            secretName: release-name-promtail
        - hostPath:
            path: /run/promtail
          name: run
        - hostPath:
            path: /var/lib/docker/containers
          name: containers
        - hostPath:
            path: /var/log/pods
          name: pods
---
# Source: dnation-kubernetes-monitoring-stack/charts/dnation-kubernetes-monitoring/charts/dnation-kubernetes-jsonnet-translator/templates/deployment.yaml
#
# Copyright 2020 The dNation Jsonnet Translator Authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: apps/v1
kind: Deployment
metadata:
  name: dnation-kubernetes-jsonnet-translator
  labels:
    app: dnation-kubernetes-jsonnet-translator
    helm.sh/chart: dnation-kubernetes-jsonnet-translator-1.0.3
    app.kubernetes.io/name: dnation-kubernetes-jsonnet-translator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.3"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dnation-kubernetes-jsonnet-translator
      app.kubernetes.io/name: dnation-kubernetes-jsonnet-translator
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app: dnation-kubernetes-jsonnet-translator
        app.kubernetes.io/name: dnation-kubernetes-jsonnet-translator
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-dnation-kubernetes-jsonnet-translator
      securityContext:
        {}
      containers:
        - name: dnation-kubernetes-jsonnet-translator
          securityContext:
            {}
          image: "dnationcloud/kubernetes-jsonnet-translator:1.0.3"
          imagePullPolicy: IfNotPresent
          command: ["python","-u","translator/main.py"]
          args:
            - --target_namespace
            - "default"
          
            - --libsonnet
          
            - https://github.com/grafana/grafonnet-lib/grafonnet@daad85cf3fad3580e58029414630e29956aefe21
          
            - https://github.com/thelastpickle/grafonnet-polystat-panel@275a48de57afdac0d72219d82863d8ab8bd0e682
          
          resources:
            {}
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/charts/grafana/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-grafana
  namespace: default
  labels:
    helm.sh/chart: grafana-6.60.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "10.1.5"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: release-name
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: release-name
      annotations:
        checksum/config: e86f2e750942d31476168a456aef53c17e28b30df5702880feb6dd779d1d0757
        checksum/dashboards-json-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/sc-dashboard-provider-config: b9e82b907d34811b43366403d8161f6b37a67772bf29795b59928dfc3f6577f4
        checksum/secret: c95dc07d9534ed6b8db922e2811bbcea4fbf8d690b367f29470f16f51bba2bdb
        kubectl.kubernetes.io/default-container: grafana
    spec:
      
      serviceAccountName: release-name-grafana
      automountServiceAccountToken: true
      securityContext:
        fsGroup: 0
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
      enableServiceLinks: true
      containers:
        - name: grafana-sc-dashboard
          image: "quay.io/kiwigrid/k8s-sidecar:1.25.1"
          imagePullPolicy: IfNotPresent
          env:
            - name: METHOD
              value: WATCH
            - name: LABEL
              value: "grafana_dashboard"
            - name: LABEL_VALUE
              value: "1"
            - name: FOLDER
              value: "/var/lib/grafana/dashboards/dnation"
            - name: RESOURCE
              value: "both"
            - name: NAMESPACE
              value: "ALL"
            - name: REQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: release-name-grafana
                  key: admin-user
            - name: REQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-grafana
                  key: admin-password
            - name: REQ_URL
              value: http://localhost:3000/api/admin/provisioning/dashboards/reload
            - name: REQ_METHOD
              value: POST
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: sc-dashboard-volume
              mountPath: "/var/lib/grafana/dashboards/dnation"
        - name: grafana-sc-datasources
          image: "quay.io/kiwigrid/k8s-sidecar:1.25.1"
          imagePullPolicy: IfNotPresent
          env:
            - name: METHOD
              value: WATCH
            - name: LABEL
              value: "grafana_datasource"
            - name: LABEL_VALUE
              value: "1"
            - name: FOLDER
              value: "/etc/grafana/provisioning/datasources"
            - name: RESOURCE
              value: "both"
            - name: REQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: release-name-grafana
                  key: admin-user
            - name: REQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-grafana
                  key: admin-password
            - name: REQ_URL
              value: http://localhost:3000/api/admin/provisioning/datasources/reload
            - name: REQ_METHOD
              value: POST
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: sc-datasources-volume
              mountPath: "/etc/grafana/provisioning/datasources"
        - name: grafana
          image: "docker.io/grafana/grafana:10.1.5"
          imagePullPolicy: IfNotPresent
          command:
            - "/bin/sh"
            - "-c"
            - "/etc/secrets/dnation_brand.sh && /run.sh"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: config
              mountPath: "/etc/grafana/grafana.ini"
              subPath: grafana.ini
            - name: dnation-logo
              mountPath: /usr/share/grafana/public/img/dnation_logo.svg
              subPath: dnation_logo.svg
              readOnly: 
            - name: dnation-home
              mountPath: /usr/share/grafana/public/dashboards/home.json
              subPath: home.json
              readOnly: 
            - name: storage
              mountPath: "/var/lib/grafana"
            - name: sc-dashboard-volume
              mountPath: "/var/lib/grafana/dashboards/dnation"
            - name: sc-dashboard-provider
              mountPath: "/etc/grafana/provisioning/dashboards/sc-dashboardproviders.yaml"
              subPath: provider.yaml
            - name: sc-datasources-volume
              mountPath: "/etc/grafana/provisioning/datasources"
            - name: dnation-brand
              mountPath: /etc/secrets
              readOnly: 
              subPath: 
          ports:
            - name: grafana
              containerPort: 3000
              protocol: TCP
            - name: gossip-tcp
              containerPort: 9094
              protocol: TCP
            - name: gossip-udp
              containerPort: 9094
              protocol: UDP
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: release-name-grafana
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-grafana
                  key: admin-password
            - name: GF_INSTALL_PLUGINS
              valueFrom:
                configMapKeyRef:
                  name: release-name-grafana
                  key: plugins
            - name: GF_PATHS_DATA
              value: /var/lib/grafana/
            - name: GF_PATHS_LOGS
              value: /var/log/grafana
            - name: GF_PATHS_PLUGINS
              value: /var/lib/grafana/plugins
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
      volumes:
        - name: config
          configMap:
            name: release-name-grafana
        - name: dnation-logo
          configMap:
            name: dnation-logo
        - name: dnation-home
          configMap:
            name: dnation-home
        - name: storage
          emptyDir: {}
        - name: sc-dashboard-volume
          emptyDir:
            {}
        - name: sc-dashboard-provider
          configMap:
            name: release-name-grafana-config-dashboards
        - name: sc-datasources-volume
          emptyDir:
            {}
        - name: dnation-brand
          secret:
            secretName: dnation-brand
            defaultMode: 493
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/charts/kube-state-metrics/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kube-state-metrics
  namespace: default
  labels:    
    helm.sh/chart: kube-state-metrics-5.14.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.10.0"
    release: release-name
spec:
  selector:
    matchLabels:      
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/instance: release-name
  replicas: 1
  strategy:
    type: RollingUpdate
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:        
        helm.sh/chart: kube-state-metrics-5.14.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: metrics
        app.kubernetes.io/part-of: kube-state-metrics
        app.kubernetes.io/name: kube-state-metrics
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "2.10.0"
        release: release-name
    spec:
      hostNetwork: false
      serviceAccountName: release-name-kube-state-metrics
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: kube-state-metrics
        args:
        - --port=8080
        - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
        imagePullPolicy: IfNotPresent
        image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.10.0
        ports:
        - containerPort: 8080
          name: "http"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-prometheus-operator
  namespace: default
  labels:
    app: kube-prometheus-stack-operator
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: kube-prometheus-stack-operator
      release: "release-name"
  template:
    metadata:
      labels:
        app: kube-prometheus-stack-operator
        
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "53.0.0"
        app.kubernetes.io/part-of: kube-prometheus-stack
        chart: kube-prometheus-stack-53.0.0
        release: "release-name"
        heritage: "Helm"
    spec:
      containers:
        - name: kube-prometheus-stack
          image: "quay.io/prometheus-operator/prometheus-operator:v0.69.1"
          imagePullPolicy: "IfNotPresent"
          args:
            - --kubelet-service=kube-system/kube-prometheus-kubelet
            - --localhost=127.0.0.1
            - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.69.1
            - --config-reloader-cpu-request=0
            - --config-reloader-cpu-limit=0
            - --config-reloader-memory-request=0
            - --config-reloader-memory-limit=0
            - --thanos-default-base-image=quay.io/thanos/thanos:v0.32.5
            - --secret-field-selector=type!=kubernetes.io/dockercfg,type!=kubernetes.io/service-account-token,type!=helm.sh/release.v1
            - --web.enable-tls=true
            - --web.cert-file=/cert/cert
            - --web.key-file=/cert/key
            - --web.listen-address=:10250
            - --web.tls-min-version=VersionTLS13
          ports:
            - containerPort: 10250
              name: https
          resources:
            {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: tls-secret
              mountPath: /cert
              readOnly: true
      volumes:
        - name: tls-secret
          secret:
            defaultMode: 420
            secretName: kube-prometheus-admission
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: kube-prometheus-operator
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/charts/grafana-agent-operator/templates/operator-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-grafana-agent-operator
  labels:
    app.kubernetes.io/name: grafana-agent-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: operator
    helm.sh/chart: grafana-agent-operator-0.2.3
    app.kubernetes.io/version: "0.25.1"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana-agent-operator
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana-agent-operator
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-grafana-agent-operator
      containers:
      - name: grafana-agent-operator
        image: "docker.io/grafana/agent-operator:v0.25.1"
        imagePullPolicy: IfNotPresent
        args:
          - --kubelet-service=default/kubelet
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/gateway/deployment-gateway.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki-gateway
  namespace: default
  labels:
    helm.sh/chart: loki-5.5.12
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.2"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: gateway
  annotations:
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: loki
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: gateway
  template:
    metadata:
      annotations:
        checksum/config: 5deae8fd62c2fceacd2e538656184d6b04695f569adaf111de62ceabf24b7e7c
      labels:
        app.kubernetes.io/name: loki
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: gateway
    spec:
      serviceAccountName: loki
      enableServiceLinks: true
      
      securityContext:
        fsGroup: 101
        runAsGroup: 101
        runAsNonRoot: true
        runAsUser: 101
      terminationGracePeriodSeconds: 30
      containers:
        - name: nginx
          image: docker.io/nginxinc/nginx-unprivileged:1.19-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 15
            timeoutSeconds: 1
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: config
              mountPath: /etc/nginx
            - name: tmp
              mountPath: /tmp
            - name: docker-entrypoint-d-override
              mountPath: /docker-entrypoint.d
          resources:
            {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: loki
                  app.kubernetes.io/instance: release-name
                  app.kubernetes.io/component: gateway
              topologyKey: kubernetes.io/hostname
        
      volumes:
        - name: config
          configMap:
            name: loki-gateway
        - name: tmp
          emptyDir: {}
        - name: docker-entrypoint-d-override
          emptyDir: {}
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/read/deployment-read.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki-read
  namespace: default
  labels:
    app.kubernetes.io/part-of: memberlist
    helm.sh/chart: loki-5.5.12
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.2"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: read
  annotations:
spec:
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: loki
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: read
  template:
    metadata:
      annotations:
        checksum/config: 98482d849c4dc586c5a7e8ec43e3a61572d90c168a66b87c044c87844bae0283
      labels:
        app.kubernetes.io/part-of: memberlist
        app.kubernetes.io/name: loki
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: read
    spec:
      serviceAccountName: loki
      automountServiceAccountToken: true
      
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      terminationGracePeriodSeconds: 30
      containers:
        - name: loki
          image: docker.io/grafana/loki:2.8.2
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/loki/config/config.yaml
            - -target=read
            - -legacy-read-mode=false
            - -common.compactor-grpc-address=loki-backend.default.svc.cluster.local:9095
          ports:
            - name: http-metrics
              containerPort: 3100
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: http-memberlist
              containerPort: 7946
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 30
            timeoutSeconds: 1
          volumeMounts:
            - name: config
              mountPath: /etc/loki/config
            - name: runtime-config
              mountPath: /etc/loki/runtime-config
            - name: tmp
              mountPath: /tmp
            - name: data
              mountPath: /var/loki
          resources:
            {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: loki
                  app.kubernetes.io/instance: release-name
                  app.kubernetes.io/component: read
              topologyKey: kubernetes.io/hostname
        
      volumes:
        - name: tmp
          emptyDir: {}
        - name: data
          emptyDir: {}
        - name: config
          configMap:
            name: loki
            items:
              - key: "config.yaml"
                path: "config.yaml"
        - name: runtime-config
          configMap:
            name: loki-runtime
---
# Source: dnation-kubernetes-monitoring-stack/charts/thanos/templates/query/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-thanos-query
  namespace: "default"
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: thanos
    app.kubernetes.io/version: 0.32.5
    helm.sh/chart: thanos-12.13.13
    app.kubernetes.io/component: query
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: thanos
      app.kubernetes.io/component: query
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: thanos
        app.kubernetes.io/version: 0.32.5
        helm.sh/chart: thanos-12.13.13
        app.kubernetes.io/component: query
    spec:
      
      serviceAccountName: release-name-thanos-query
      automountServiceAccountToken: true
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/name: thanos
                    app.kubernetes.io/component: query
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      containers:
        - name: query
          image: docker.io/bitnami/thanos:0.32.5-debian-11-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
          args:
            - query
            - --log.level=info
            - --log.format=logfmt
            - --grpc-address=0.0.0.0:10901
            - --http-address=0.0.0.0:10902
            - --query.replica-label=replica
            - --endpoint=dnssrv+_grpc._tcp.kube-prometheus-thanos-discovery.default.svc.cluster.local
            - --query.auto-downsampling
          ports:
            - name: http
              containerPort: 10902
              protocol: TCP
            - name: grpc
              containerPort: 10901
              protocol: TCP
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
            httpGet:
              path: /-/healthy
              port: http
              scheme: HTTP
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
            httpGet:
              path: /-/ready
              port: http
              scheme: HTTP
          resources:
            limits: {}
            requests: {}
          volumeMounts:
      volumes:
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/backend/statefulset-backend.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: loki-backend
  namespace: default
  labels:
    helm.sh/chart: loki-5.5.12
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.2"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: memberlist
  annotations:
spec:
  replicas: 2
  podManagementPolicy: Parallel
  updateStrategy:
    rollingUpdate:
      partition: 0
  serviceName: loki-backend-headless
  revisionHistoryLimit: 10
  
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Delete
    whenScaled: Delete
  selector:
    matchLabels:
      app.kubernetes.io/name: loki
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: backend
  template:
    metadata:
      annotations:
        checksum/config: 98482d849c4dc586c5a7e8ec43e3a61572d90c168a66b87c044c87844bae0283
      labels:
        app.kubernetes.io/name: loki
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: memberlist
    spec:
      serviceAccountName: loki
      automountServiceAccountToken: true
      
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      terminationGracePeriodSeconds: 300
      containers:
        - name: loki
          image: docker.io/grafana/loki:2.8.2
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/loki/config/config.yaml
            - -target=backend
            - -legacy-read-mode=false
          ports:
            - name: http-metrics
              containerPort: 3100
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: http-memberlist
              containerPort: 7946
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 30
            timeoutSeconds: 1
          volumeMounts:
            - name: config
              mountPath: /etc/loki/config
            - name: runtime-config
              mountPath: /etc/loki/runtime-config
            - name: tmp
              mountPath: /tmp
            - name: data
              mountPath: /var/loki
          resources:
            {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: loki
                  app.kubernetes.io/instance: release-name
                  app.kubernetes.io/component: backend
              topologyKey: kubernetes.io/hostname
        
      volumes:
        - name: tmp
          emptyDir: {}
        - name: config
          configMap:
            name: loki
            items:
              - key: "config.yaml"
                path: "config.yaml"
        - name: runtime-config
          configMap:
            name: loki-runtime
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "10Gi"
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/write/statefulset-write.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: loki-write
  labels:
    helm.sh/chart: loki-5.5.12
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.2"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: write
    app.kubernetes.io/part-of: memberlist
  annotations:
spec:
  replicas: 2
  podManagementPolicy: Parallel
  updateStrategy:
    rollingUpdate:
      partition: 0
  serviceName: loki-write-headless
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: loki
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: write
  template:
    metadata:
      annotations:
        checksum/config: 98482d849c4dc586c5a7e8ec43e3a61572d90c168a66b87c044c87844bae0283
      labels:
        app.kubernetes.io/name: loki
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: write
        app.kubernetes.io/part-of: memberlist
    spec:
      serviceAccountName: loki
      automountServiceAccountToken: true
      enableServiceLinks: true
      
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      terminationGracePeriodSeconds: 300
      containers:
        - name: loki
          image: docker.io/grafana/loki:2.8.2
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/loki/config/config.yaml
            - -target=write
          ports:
            - name: http-metrics
              containerPort: 3100
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: http-memberlist
              containerPort: 7946
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 30
            timeoutSeconds: 1
          volumeMounts:
            - name: config
              mountPath: /etc/loki/config
            - name: runtime-config
              mountPath: /etc/loki/runtime-config
            - name: data
              mountPath: /var/loki
          resources:
            {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: loki
                  app.kubernetes.io/instance: release-name
                  app.kubernetes.io/component: write
              topologyKey: kubernetes.io/hostname
        
      volumes:
        - name: config
          configMap:
            name: loki
            items:
              - key: "config.yaml"
                path: "config.yaml"
        - name: runtime-config
          configMap:
            name: loki-runtime
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "10Gi"
---
# Source: dnation-kubernetes-monitoring-stack/charts/dnation-kubernetes-monitoring/templates/apps/podmonitors.yaml
#
# Copyright 2020 The dNation Kubernetes Monitoring Authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: dnation-kubernetes-monitoring-stack/charts/dnation-kubernetes-monitoring/templates/apps/servicemonitors.yaml
#
# Copyright 2020 The dNation Kubernetes Monitoring Authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: dnation-kubernetes-monitoring-stack/charts/dnation-kubernetes-monitoring/templates/dashboards/blackbox-dashboard.yaml
#
# Copyright 2020 The dNation Kubernetes Monitoring Authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: dnation-kubernetes-monitoring-stack/charts/dnation-kubernetes-monitoring/templates/hosts/endpoints.yaml
#
# Copyright 2020 The dNation Kubernetes Monitoring Authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: dnation-kubernetes-monitoring-stack/charts/dnation-kubernetes-monitoring/templates/hosts/servicemonitors.yaml
#
# Copyright 2020 The dNation Kubernetes Monitoring Authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: dnation-kubernetes-monitoring-stack/charts/dnation-kubernetes-monitoring/templates/hosts/services.yaml
#
# Copyright 2020 The dNation Kubernetes Monitoring Authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: dnation-kubernetes-monitoring-stack/charts/dnation-kubernetes-monitoring/templates/vms/podmonitors.yaml
#
# Copyright 2020 The dNation Kubernetes Monitoring Authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: dnation-kubernetes-monitoring-stack/charts/dnation-kubernetes-monitoring/templates/vms/servicemonitors.yaml
#
# Copyright 2020 The dNation Kubernetes Monitoring Authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: dnation-kubernetes-monitoring-stack/templates/certificate.yaml
#
# Copyright 2020 The dNation Kubernetes Monitoring Stack Authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: dnation-kubernetes-monitoring-stack/templates/configmap.yaml
#
# Copyright 2020 The dNation Kubernetes Monitoring Stack Authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: dnation-kubernetes-monitoring-stack/templates/dnation/issuer.yaml
#
# Copyright 2020 The dNation Kubernetes Monitoring Stack Authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: dnation-kubernetes-monitoring-stack/templates/secrets.yaml
#
# Copyright 2020 The dNation Kubernetes Monitoring Stack Authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: dnation-kubernetes-monitoring-stack/templates/services.yaml
#
# Copyright 2020 The dNation Kubernetes Monitoring Stack Authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: dnation-kubernetes-monitoring-stack/templates/thanos/query-envoy-config.yaml
#
# Copyright 2020 The dNation Kubernetes Monitoring Stack Authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: dnation-kubernetes-monitoring-stack/templates/thanos/query-envoy-service.yaml
#
# Copyright 2020 The dNation Kubernetes Monitoring Stack Authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: dnation-kubernetes-monitoring-stack/templates/thanos/storage-secret.yaml
#
# Copyright 2020 The dNation Kubernetes Monitoring Stack Authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/alertmanager/alertmanager.yaml
apiVersion: monitoring.coreos.com/v1
kind: Alertmanager
metadata:
  name: kube-prometheus-alertmanager
  namespace: default
  labels:
    app: kube-prometheus-stack-alertmanager
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
spec:
  image: "quay.io/prometheus/alertmanager:v0.26.0"
  version: v0.26.0
  replicas: 1
  listenLocal: false
  serviceAccountName: kube-prometheus-alertmanager
  externalUrl: http://kube-prometheus-alertmanager.default:9093
  paused: false
  logFormat: "logfmt"
  logLevel:  "info"
  retention: "120h"
  alertmanagerConfigSelector: {}
  alertmanagerConfigNamespaceSelector: {}
  routePrefix: "/"
  securityContext:
    fsGroup: 2000
    runAsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
    seccompProfile:
      type: RuntimeDefault
  portName: http-web
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/monitoring/grafana-agent.yaml
apiVersion: monitoring.grafana.com/v1alpha1
kind: GrafanaAgent
metadata:
  name: release-name-loki
  labels:
    helm.sh/chart: loki-5.5.12
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.2"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceAccountName: release-name-loki-grafana-agent
  enableConfigReadAPI: false
  logs:
    instanceSelector:
      matchLabels:
        app.kubernetes.io/name: loki
        app.kubernetes.io/instance: release-name
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/monitoring/logs-instance.yaml
apiVersion: monitoring.grafana.com/v1alpha1
kind: LogsInstance
metadata:
  name: release-name-loki
  labels:
    helm.sh/chart: loki-5.5.12
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.2"
    app.kubernetes.io/managed-by: Helm
spec:
  clients:
    - url: http://loki-gateway.default.svc.cluster.local/loki/api/v1/push
      externalLabels:
        cluster: release-name-loki
      tenantId: "self-monitoring"

  podLogsNamespaceSelector: {}

  podLogsSelector:
    matchLabels:
      app.kubernetes.io/name: loki
      app.kubernetes.io/instance: release-name
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus-operator/admission-webhooks/mutatingWebhookConfiguration.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name:  kube-prometheus-admission
  labels:
    app: kube-prometheus-stack-admission    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
webhooks:
  - name: prometheusrulemutate.monitoring.coreos.com
    failurePolicy: Ignore
    rules:
      - apiGroups:
          - monitoring.coreos.com
        apiVersions:
          - "*"
        resources:
          - prometheusrules
        operations:
          - CREATE
          - UPDATE
    clientConfig:
      service:
        namespace: default
        name: kube-prometheus-operator
        path: /admission-prometheusrules/mutate
    timeoutSeconds: 10
    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/templates/monitoring/pod-logs.yaml
apiVersion: monitoring.grafana.com/v1alpha1
kind: PodLogs
metadata:
  name: release-name-loki
  labels:
    helm.sh/chart: loki-5.5.12
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.8.2"
    app.kubernetes.io/managed-by: Helm
spec:
  pipelineStages:
    - cri: { }
  relabelings:
    - sourceLabels:
        - __meta_kubernetes_pod_node_name
      targetLabel: __host__
    - action: labelmap
      regex: __meta_kubernetes_pod_label_(.+)
    - action: replace
      replacement: "$1"
      separator: "-"
      sourceLabels:
        - __meta_kubernetes_pod_label_app_kubernetes_io_name
        - __meta_kubernetes_pod_label_app_kubernetes_io_component
      targetLabel: __service__
    - action: replace
      replacement: "$1"
      separator: "/"
      sourceLabels:
        - __meta_kubernetes_namespace
        - __service__
      targetLabel: job
    - action: replace
      sourceLabels:
        - __meta_kubernetes_pod_container_name
      targetLabel: container
    - replacement: "release-name-loki"
      targetLabel: cluster
  namespaceSelector:
    matchNames:
      - default
  selector:
    matchLabels:
      app.kubernetes.io/name: loki
      app.kubernetes.io/instance: release-name
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/prometheus.yaml
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: kube-prometheus-prometheus
  namespace: default
  labels:
    app: kube-prometheus-stack-prometheus
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
spec:
  alerting:
    alertmanagers:
      - namespace: default
        name: kube-prometheus-alertmanager
        port: http-web
        pathPrefix: "/"
        apiVersion: v2
  image: "quay.io/prometheus/prometheus:v2.47.2"
  version: v2.47.2
  externalLabels:
    cluster: observer-cluster
  externalUrl: http://kube-prometheus-prometheus.default:9090
  paused: false
  replicas: 1
  shards: 1
  logLevel:  info
  logFormat:  logfmt
  listenLocal: false
  enableAdminAPI: false
  retention: "10d"
  tsdb:
    outOfOrderTimeWindow: 0s
  walCompression: true
  routePrefix: "/"
  serviceAccountName: kube-prometheus-prometheus
  serviceMonitorSelector:
    matchLabels:
      release: "release-name"

  serviceMonitorNamespaceSelector: {}
  podMonitorSelector:
    matchLabels:
      release: "release-name"

  podMonitorNamespaceSelector: {}
  probeSelector:
    matchLabels:
      release: "release-name"

  probeNamespaceSelector: {}
  securityContext:
    fsGroup: 2000
    runAsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
    seccompProfile:
      type: RuntimeDefault
  ruleNamespaceSelector: {}
  ruleSelector:
    matchLabels:
      prometheus_rule: "1"
  scrapeConfigSelector:
    matchLabels:
      release: "release-name"

  scrapeConfigNamespaceSelector: {}
  thanos:
    logLevel: info
  portName: http-web
  hostNetwork: false
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/rules-1.14/alertmanager.rules.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kube-prometheus-alertmanager.rules
  namespace: default
  labels:
    app: kube-prometheus-stack
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
    prometheus_rule: "1"
spec:
  groups:
  - name: alertmanager.rules
    rules:
    - alert: AlertmanagerFailedReload
      annotations:
        description: Configuration has failed to load for {{ $labels.namespace }}/{{ $labels.pod}}.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/alertmanager/alertmanagerfailedreload
        summary: Reloading an Alertmanager configuration has failed.
      expr: |-
        # Without max_over_time, failed scrapes could create false negatives, see
        # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
        max_over_time(alertmanager_config_last_reload_successful{job="kube-prometheus-alertmanager",namespace="default"}[5m]) == 0
      for: 10m
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: AlertmanagerMembersInconsistent
      annotations:
        description: Alertmanager {{ $labels.namespace }}/{{ $labels.pod}} has only found {{ $value }} members of the {{$labels.job}} cluster.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/alertmanager/alertmanagermembersinconsistent
        summary: A member of an Alertmanager cluster has not found all other cluster members.
      expr: |-
        # Without max_over_time, failed scrapes could create false negatives, see
        # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
          max_over_time(alertmanager_cluster_members{job="kube-prometheus-alertmanager",namespace="default"}[5m])
        < on (namespace,service,cluster) group_left
          count by (namespace,service,cluster) (max_over_time(alertmanager_cluster_members{job="kube-prometheus-alertmanager",namespace="default"}[5m]))
      for: 15m
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: AlertmanagerFailedToSendAlerts
      annotations:
        description: Alertmanager {{ $labels.namespace }}/{{ $labels.pod}} failed to send {{ $value | humanizePercentage }} of notifications to {{ $labels.integration }}.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/alertmanager/alertmanagerfailedtosendalerts
        summary: An Alertmanager instance failed to send notifications.
      expr: |-
        (
          rate(alertmanager_notifications_failed_total{job="kube-prometheus-alertmanager",namespace="default"}[5m])
        /
          rate(alertmanager_notifications_total{job="kube-prometheus-alertmanager",namespace="default"}[5m])
        )
        > 0.01
      for: 5m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: AlertmanagerClusterFailedToSendAlerts
      annotations:
        description: The minimum notification failure rate to {{ $labels.integration }} sent from any instance in the {{$labels.job}} cluster is {{ $value | humanizePercentage }}.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/alertmanager/alertmanagerclusterfailedtosendalerts
        summary: All Alertmanager instances in a cluster failed to send notifications to a critical integration.
      expr: |-
        min by (namespace,service, integration) (
          rate(alertmanager_notifications_failed_total{job="kube-prometheus-alertmanager",namespace="default", integration=~`.*`}[5m])
        /
          rate(alertmanager_notifications_total{job="kube-prometheus-alertmanager",namespace="default", integration=~`.*`}[5m])
        )
        > 0.01
      for: 5m
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: AlertmanagerClusterFailedToSendAlerts
      annotations:
        description: The minimum notification failure rate to {{ $labels.integration }} sent from any instance in the {{$labels.job}} cluster is {{ $value | humanizePercentage }}.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/alertmanager/alertmanagerclusterfailedtosendalerts
        summary: All Alertmanager instances in a cluster failed to send notifications to a non-critical integration.
      expr: |-
        min by (namespace,service, integration) (
          rate(alertmanager_notifications_failed_total{job="kube-prometheus-alertmanager",namespace="default", integration!~`.*`}[5m])
        /
          rate(alertmanager_notifications_total{job="kube-prometheus-alertmanager",namespace="default", integration!~`.*`}[5m])
        )
        > 0.01
      for: 5m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: AlertmanagerConfigInconsistent
      annotations:
        description: Alertmanager instances within the {{$labels.job}} cluster have different configurations.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/alertmanager/alertmanagerconfiginconsistent
        summary: Alertmanager instances within the same cluster have different configurations.
      expr: |-
        count by (namespace,service,cluster) (
          count_values by (namespace,service,cluster) ("config_hash", alertmanager_config_hash{job="kube-prometheus-alertmanager",namespace="default"})
        )
        != 1
      for: 20m
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: AlertmanagerClusterDown
      annotations:
        description: '{{ $value | humanizePercentage }} of Alertmanager instances within the {{$labels.job}} cluster have been up for less than half of the last 5m.'
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/alertmanager/alertmanagerclusterdown
        summary: Half or more of the Alertmanager instances within the same cluster are down.
      expr: |-
        (
          count by (namespace,service,cluster) (
            avg_over_time(up{job="kube-prometheus-alertmanager",namespace="default"}[5m]) < 0.5
          )
        /
          count by (namespace,service,cluster) (
            up{job="kube-prometheus-alertmanager",namespace="default"}
          )
        )
        >= 0.5
      for: 5m
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: AlertmanagerClusterCrashlooping
      annotations:
        description: '{{ $value | humanizePercentage }} of Alertmanager instances within the {{$labels.job}} cluster have restarted at least 5 times in the last 10m.'
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/alertmanager/alertmanagerclustercrashlooping
        summary: Half or more of the Alertmanager instances within the same cluster are crashlooping.
      expr: |-
        (
          count by (namespace,service,cluster) (
            changes(process_start_time_seconds{job="kube-prometheus-alertmanager",namespace="default"}[10m]) > 4
          )
        /
          count by (namespace,service,cluster) (
            up{job="kube-prometheus-alertmanager",namespace="default"}
          )
        )
        >= 0.5
      for: 5m
      labels:
        severity: critical
        alertgroup: Cluster
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/rules-1.14/config-reloaders.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kube-prometheus-config-reloaders
  namespace: default
  labels:
    app: kube-prometheus-stack
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
    prometheus_rule: "1"
spec:
  groups:
  - name: config-reloaders
    rules:
    - alert: ConfigReloaderSidecarErrors
      annotations:
        description: 'Errors encountered while the {{$labels.pod}} config-reloader sidecar attempts to sync config in {{$labels.namespace}} namespace.

          As a result, configuration for service running in {{$labels.pod}} may be stale and cannot be updated anymore.'
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/configreloadersidecarerrors
        summary: config-reloader sidecar has not had a successful reload for 10m
      expr: max_over_time(reloader_last_reload_successful{namespace=~".+"}[5m]) == 0
      for: 10m
      labels:
        severity: warning
        alertgroup: Cluster
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/rules-1.14/etcd.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kube-prometheus-etcd
  namespace: default
  labels:
    app: kube-prometheus-stack
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
    prometheus_rule: "1"
spec:
  groups:
  - name: etcd
    rules:
    - alert: etcdMembersDown
      annotations:
        description: 'etcd cluster "{{ $labels.job }}": members are down ({{ $value }}).'
        summary: etcd cluster members are down.
      expr: |-
        max without (endpoint) (
          sum without (instance) (up{job=~".*etcd.*"} == bool 0)
        or
          count without (To) (
            sum without (instance) (rate(etcd_network_peer_sent_failures_total{job=~".*etcd.*"}[120s])) > 0.01
          )
        )
        > 0
      for: 10m
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: etcdInsufficientMembers
      annotations:
        description: 'etcd cluster "{{ $labels.job }}": insufficient members ({{ $value }}).'
        summary: etcd cluster has insufficient number of members.
      expr: sum(up{job=~".*etcd.*"} == bool 1) without (instance) < ((count(up{job=~".*etcd.*"}) without (instance) + 1) / 2)
      for: 3m
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: etcdNoLeader
      annotations:
        description: 'etcd cluster "{{ $labels.job }}": member {{ $labels.instance }} has no leader.'
        summary: etcd cluster has no leader.
      expr: etcd_server_has_leader{job=~".*etcd.*"} == 0
      for: 1m
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: etcdHighNumberOfLeaderChanges
      annotations:
        description: 'etcd cluster "{{ $labels.job }}": {{ $value }} leader changes within the last 15 minutes. Frequent elections may be a sign of insufficient resources, high network latency, or disruptions by other components and should be investigated.'
        summary: etcd cluster has high number of leader changes.
      expr: increase((max without (instance) (etcd_server_leader_changes_seen_total{job=~".*etcd.*"}) or 0*absent(etcd_server_leader_changes_seen_total{job=~".*etcd.*"}))[15m:1m]) >= 4
      for: 5m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: etcdHighNumberOfFailedGRPCRequests
      annotations:
        description: 'etcd cluster "{{ $labels.job }}": {{ $value }}% of requests for {{ $labels.grpc_method }} failed on etcd instance {{ $labels.instance }}.'
        summary: etcd cluster has high number of failed grpc requests.
      expr: |-
        100 * sum(rate(grpc_server_handled_total{job=~".*etcd.*", grpc_code=~"Unknown|FailedPrecondition|ResourceExhausted|Internal|Unavailable|DataLoss|DeadlineExceeded"}[5m])) without (grpc_type, grpc_code)
          /
        sum(rate(grpc_server_handled_total{job=~".*etcd.*"}[5m])) without (grpc_type, grpc_code)
          > 1
      for: 10m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: etcdHighNumberOfFailedGRPCRequests
      annotations:
        description: 'etcd cluster "{{ $labels.job }}": {{ $value }}% of requests for {{ $labels.grpc_method }} failed on etcd instance {{ $labels.instance }}.'
        summary: etcd cluster has high number of failed grpc requests.
      expr: |-
        100 * sum(rate(grpc_server_handled_total{job=~".*etcd.*", grpc_code=~"Unknown|FailedPrecondition|ResourceExhausted|Internal|Unavailable|DataLoss|DeadlineExceeded"}[5m])) without (grpc_type, grpc_code)
          /
        sum(rate(grpc_server_handled_total{job=~".*etcd.*"}[5m])) without (grpc_type, grpc_code)
          > 5
      for: 5m
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: etcdGRPCRequestsSlow
      annotations:
        description: 'etcd cluster "{{ $labels.job }}": 99th percentile of gRPC requests is {{ $value }}s on etcd instance {{ $labels.instance }} for {{ $labels.grpc_method }} method.'
        summary: etcd grpc requests are slow
      expr: |-
        histogram_quantile(0.99, sum(rate(grpc_server_handling_seconds_bucket{job=~".*etcd.*", grpc_method!="Defragment", grpc_type="unary"}[5m])) without(grpc_type))
        > 0.15
      for: 10m
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: etcdMemberCommunicationSlow
      annotations:
        description: 'etcd cluster "{{ $labels.job }}": member communication with {{ $labels.To }} is taking {{ $value }}s on etcd instance {{ $labels.instance }}.'
        summary: etcd cluster member communication is slow.
      expr: |-
        histogram_quantile(0.99, rate(etcd_network_peer_round_trip_time_seconds_bucket{job=~".*etcd.*"}[5m]))
        > 0.15
      for: 10m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: etcdHighNumberOfFailedProposals
      annotations:
        description: 'etcd cluster "{{ $labels.job }}": {{ $value }} proposal failures within the last 30 minutes on etcd instance {{ $labels.instance }}.'
        summary: etcd cluster has high number of proposal failures.
      expr: rate(etcd_server_proposals_failed_total{job=~".*etcd.*"}[15m]) > 5
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: etcdHighFsyncDurations
      annotations:
        description: 'etcd cluster "{{ $labels.job }}": 99th percentile fsync durations are {{ $value }}s on etcd instance {{ $labels.instance }}.'
        summary: etcd cluster 99th percentile fsync durations are too high.
      expr: |-
        histogram_quantile(0.99, rate(etcd_disk_wal_fsync_duration_seconds_bucket{job=~".*etcd.*"}[5m]))
        > 0.5
      for: 10m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: etcdHighFsyncDurations
      annotations:
        description: 'etcd cluster "{{ $labels.job }}": 99th percentile fsync durations are {{ $value }}s on etcd instance {{ $labels.instance }}.'
        summary: etcd cluster 99th percentile fsync durations are too high.
      expr: |-
        histogram_quantile(0.99, rate(etcd_disk_wal_fsync_duration_seconds_bucket{job=~".*etcd.*"}[5m]))
        > 1
      for: 10m
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: etcdHighCommitDurations
      annotations:
        description: 'etcd cluster "{{ $labels.job }}": 99th percentile commit durations {{ $value }}s on etcd instance {{ $labels.instance }}.'
        summary: etcd cluster 99th percentile commit durations are too high.
      expr: |-
        histogram_quantile(0.99, rate(etcd_disk_backend_commit_duration_seconds_bucket{job=~".*etcd.*"}[5m]))
        > 0.25
      for: 10m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: etcdDatabaseQuotaLowSpace
      annotations:
        description: 'etcd cluster "{{ $labels.job }}": database size exceeds the defined quota on etcd instance {{ $labels.instance }}, please defrag or increase the quota as the writes to etcd will be disabled when it is full.'
        summary: etcd cluster database is running full.
      expr: (last_over_time(etcd_mvcc_db_total_size_in_bytes{job=~".*etcd.*"}[5m]) / last_over_time(etcd_server_quota_backend_bytes{job=~".*etcd.*"}[5m]))*100 > 95
      for: 10m
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: etcdExcessiveDatabaseGrowth
      annotations:
        description: 'etcd cluster "{{ $labels.job }}": Predicting running out of disk space in the next four hours, based on write observations within the past four hours on etcd instance {{ $labels.instance }}, please check as it might be disruptive.'
        summary: etcd cluster database growing very fast.
      expr: predict_linear(etcd_mvcc_db_total_size_in_bytes{job=~".*etcd.*"}[4h], 4*60*60) > etcd_server_quota_backend_bytes{job=~".*etcd.*"}
      for: 10m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: etcdDatabaseHighFragmentationRatio
      annotations:
        description: 'etcd cluster "{{ $labels.job }}": database size in use on instance {{ $labels.instance }} is {{ $value | humanizePercentage }} of the actual allocated disk space, please run defragmentation (e.g. etcdctl defrag) to retrieve the unused fragmented disk space.'
        runbook_url: https://etcd.io/docs/v3.5/op-guide/maintenance/#defragmentation
        summary: etcd database size in use is less than 50% of the actual allocated storage.
      expr: (last_over_time(etcd_mvcc_db_total_size_in_use_in_bytes{job=~".*etcd.*"}[5m]) / last_over_time(etcd_mvcc_db_total_size_in_bytes{job=~".*etcd.*"}[5m])) < 0.5 and etcd_mvcc_db_total_size_in_use_in_bytes{job=~".*etcd.*"} > 104857600
      for: 10m
      labels:
        severity: warning
        alertgroup: Cluster
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/rules-1.14/k8s.rules.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kube-prometheus-k8s.rules
  namespace: default
  labels:
    app: kube-prometheus-stack
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
    prometheus_rule: "1"
spec:
  groups:
  - name: k8s.rules
    rules:
    - expr: |-
        sum by (cluster, namespace, pod, container) (
          irate(container_cpu_usage_seconds_total{job="kubelet", metrics_path="/metrics/cadvisor", image!=""}[5m])
        ) * on (cluster, namespace, pod) group_left(node) topk by (cluster, namespace, pod) (
          1, max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
        )
      record: node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate
      labels:
        alertgroup: Cluster
    - expr: |-
        container_memory_working_set_bytes{job="kubelet", metrics_path="/metrics/cadvisor", image!=""}
        * on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,
          max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
        )
      record: node_namespace_pod_container:container_memory_working_set_bytes
      labels:
        alertgroup: Cluster
    - expr: |-
        container_memory_rss{job="kubelet", metrics_path="/metrics/cadvisor", image!=""}
        * on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,
          max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
        )
      record: node_namespace_pod_container:container_memory_rss
      labels:
        alertgroup: Cluster
    - expr: |-
        container_memory_cache{job="kubelet", metrics_path="/metrics/cadvisor", image!=""}
        * on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,
          max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
        )
      record: node_namespace_pod_container:container_memory_cache
      labels:
        alertgroup: Cluster
    - expr: |-
        container_memory_swap{job="kubelet", metrics_path="/metrics/cadvisor", image!=""}
        * on (cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1,
          max by(cluster, namespace, pod, node) (kube_pod_info{node!=""})
        )
      record: node_namespace_pod_container:container_memory_swap
      labels:
        alertgroup: Cluster
    - expr: |-
        kube_pod_container_resource_requests{resource="memory",job="kube-state-metrics"}  * on (namespace, pod, cluster)
        group_left() max by (namespace, pod, cluster) (
          (kube_pod_status_phase{phase=~"Pending|Running"} == 1)
        )
      record: cluster:namespace:pod_memory:active:kube_pod_container_resource_requests
      labels:
        alertgroup: Cluster
    - expr: |-
        sum by (namespace, cluster) (
            sum by (namespace, pod, cluster) (
                max by (namespace, pod, container, cluster) (
                  kube_pod_container_resource_requests{resource="memory",job="kube-state-metrics"}
                ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (
                  kube_pod_status_phase{phase=~"Pending|Running"} == 1
                )
            )
        )
      record: namespace_memory:kube_pod_container_resource_requests:sum
      labels:
        alertgroup: Cluster
    - expr: |-
        kube_pod_container_resource_requests{resource="cpu",job="kube-state-metrics"}  * on (namespace, pod, cluster)
        group_left() max by (namespace, pod, cluster) (
          (kube_pod_status_phase{phase=~"Pending|Running"} == 1)
        )
      record: cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests
      labels:
        alertgroup: Cluster
    - expr: |-
        sum by (namespace, cluster) (
            sum by (namespace, pod, cluster) (
                max by (namespace, pod, container, cluster) (
                  kube_pod_container_resource_requests{resource="cpu",job="kube-state-metrics"}
                ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (
                  kube_pod_status_phase{phase=~"Pending|Running"} == 1
                )
            )
        )
      record: namespace_cpu:kube_pod_container_resource_requests:sum
      labels:
        alertgroup: Cluster
    - expr: |-
        kube_pod_container_resource_limits{resource="memory",job="kube-state-metrics"}  * on (namespace, pod, cluster)
        group_left() max by (namespace, pod, cluster) (
          (kube_pod_status_phase{phase=~"Pending|Running"} == 1)
        )
      record: cluster:namespace:pod_memory:active:kube_pod_container_resource_limits
      labels:
        alertgroup: Cluster
    - expr: |-
        sum by (namespace, cluster) (
            sum by (namespace, pod, cluster) (
                max by (namespace, pod, container, cluster) (
                  kube_pod_container_resource_limits{resource="memory",job="kube-state-metrics"}
                ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (
                  kube_pod_status_phase{phase=~"Pending|Running"} == 1
                )
            )
        )
      record: namespace_memory:kube_pod_container_resource_limits:sum
      labels:
        alertgroup: Cluster
    - expr: |-
        kube_pod_container_resource_limits{resource="cpu",job="kube-state-metrics"}  * on (namespace, pod, cluster)
        group_left() max by (namespace, pod, cluster) (
         (kube_pod_status_phase{phase=~"Pending|Running"} == 1)
         )
      record: cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits
      labels:
        alertgroup: Cluster
    - expr: |-
        sum by (namespace, cluster) (
            sum by (namespace, pod, cluster) (
                max by (namespace, pod, container, cluster) (
                  kube_pod_container_resource_limits{resource="cpu",job="kube-state-metrics"}
                ) * on(namespace, pod, cluster) group_left() max by (namespace, pod, cluster) (
                  kube_pod_status_phase{phase=~"Pending|Running"} == 1
                )
            )
        )
      record: namespace_cpu:kube_pod_container_resource_limits:sum
      labels:
        alertgroup: Cluster
    - expr: |-
        max by (cluster, namespace, workload, pod) (
          label_replace(
            label_replace(
              kube_pod_owner{job="kube-state-metrics", owner_kind="ReplicaSet"},
              "replicaset", "$1", "owner_name", "(.*)"
            ) * on(replicaset, namespace) group_left(owner_name) topk by(replicaset, namespace) (
              1, max by (replicaset, namespace, owner_name) (
                kube_replicaset_owner{job="kube-state-metrics"}
              )
            ),
            "workload", "$1", "owner_name", "(.*)"
          )
        )
      labels:
        workload_type: deployment
        alertgroup: Cluster
      record: namespace_workload_pod:kube_pod_owner:relabel
    - expr: |-
        max by (cluster, namespace, workload, pod) (
          label_replace(
            kube_pod_owner{job="kube-state-metrics", owner_kind="DaemonSet"},
            "workload", "$1", "owner_name", "(.*)"
          )
        )
      labels:
        workload_type: daemonset
        alertgroup: Cluster
      record: namespace_workload_pod:kube_pod_owner:relabel
    - expr: |-
        max by (cluster, namespace, workload, pod) (
          label_replace(
            kube_pod_owner{job="kube-state-metrics", owner_kind="StatefulSet"},
            "workload", "$1", "owner_name", "(.*)"
          )
        )
      labels:
        workload_type: statefulset
        alertgroup: Cluster
      record: namespace_workload_pod:kube_pod_owner:relabel
    - expr: |-
        max by (cluster, namespace, workload, pod) (
          label_replace(
            kube_pod_owner{job="kube-state-metrics", owner_kind="Job"},
            "workload", "$1", "owner_name", "(.*)"
          )
        )
      labels:
        workload_type: job
        alertgroup: Cluster
      record: namespace_workload_pod:kube_pod_owner:relabel
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/rules-1.14/kube-apiserver-availability.rules.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kube-prometheus-kube-apiserver-availability.rules
  namespace: default
  labels:
    app: kube-prometheus-stack
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
    prometheus_rule: "1"
spec:
  groups:
  - interval: 3m
    name: kube-apiserver-availability.rules
    rules:
    - expr: avg_over_time(code_verb:apiserver_request_total:increase1h[30d]) * 24 * 30
      record: code_verb:apiserver_request_total:increase30d
      labels:
        alertgroup: Cluster
    - expr: sum by (cluster, code) (code_verb:apiserver_request_total:increase30d{verb=~"LIST|GET"})
      labels:
        verb: read
        alertgroup: Cluster
      record: code:apiserver_request_total:increase30d
    - expr: sum by (cluster, code) (code_verb:apiserver_request_total:increase30d{verb=~"POST|PUT|PATCH|DELETE"})
      labels:
        verb: write
        alertgroup: Cluster
      record: code:apiserver_request_total:increase30d
    - expr: sum by (cluster, verb, scope) (increase(apiserver_request_sli_duration_seconds_count{job="apiserver"}[1h]))
      record: cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase1h
      labels:
        alertgroup: Cluster
    - expr: sum by (cluster, verb, scope) (avg_over_time(cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase1h[30d]) * 24 * 30)
      record: cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase30d
      labels:
        alertgroup: Cluster
    - expr: sum by (cluster, verb, scope, le) (increase(apiserver_request_sli_duration_seconds_bucket[1h]))
      record: cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase1h
      labels:
        alertgroup: Cluster
    - expr: sum by (cluster, verb, scope, le) (avg_over_time(cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase1h[30d]) * 24 * 30)
      record: cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d
      labels:
        alertgroup: Cluster
    - expr: |-
        1 - (
          (
            # write too slow
            sum by (cluster) (cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase30d{verb=~"POST|PUT|PATCH|DELETE"})
            -
            sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"POST|PUT|PATCH|DELETE",le="1"})
          ) +
          (
            # read too slow
            sum by (cluster) (cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase30d{verb=~"LIST|GET"})
            -
            (
              (
                sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope=~"resource|",le="1"})
                or
                vector(0)
              )
              +
              sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope="namespace",le="5"})
              +
              sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope="cluster",le="30"})
            )
          ) +
          # errors
          sum by (cluster) (code:apiserver_request_total:increase30d{code=~"5.."} or vector(0))
        )
        /
        sum by (cluster) (code:apiserver_request_total:increase30d)
      labels:
        verb: all
        alertgroup: Cluster
      record: apiserver_request:availability30d
    - expr: |-
        1 - (
          sum by (cluster) (cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase30d{verb=~"LIST|GET"})
          -
          (
            # too slow
            (
              sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope=~"resource|",le="1"})
              or
              vector(0)
            )
            +
            sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope="namespace",le="5"})
            +
            sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"LIST|GET",scope="cluster",le="30"})
          )
          +
          # errors
          sum by (cluster) (code:apiserver_request_total:increase30d{verb="read",code=~"5.."} or vector(0))
        )
        /
        sum by (cluster) (code:apiserver_request_total:increase30d{verb="read"})
      labels:
        verb: read
        alertgroup: Cluster
      record: apiserver_request:availability30d
    - expr: |-
        1 - (
          (
            # too slow
            sum by (cluster) (cluster_verb_scope:apiserver_request_sli_duration_seconds_count:increase30d{verb=~"POST|PUT|PATCH|DELETE"})
            -
            sum by (cluster) (cluster_verb_scope_le:apiserver_request_sli_duration_seconds_bucket:increase30d{verb=~"POST|PUT|PATCH|DELETE",le="1"})
          )
          +
          # errors
          sum by (cluster) (code:apiserver_request_total:increase30d{verb="write",code=~"5.."} or vector(0))
        )
        /
        sum by (cluster) (code:apiserver_request_total:increase30d{verb="write"})
      labels:
        verb: write
        alertgroup: Cluster
      record: apiserver_request:availability30d
    - expr: sum by (cluster,code,resource) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[5m]))
      labels:
        verb: read
        alertgroup: Cluster
      record: code_resource:apiserver_request_total:rate5m
    - expr: sum by (cluster,code,resource) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[5m]))
      labels:
        verb: write
        alertgroup: Cluster
      record: code_resource:apiserver_request_total:rate5m
    - expr: sum by (cluster, code, verb) (increase(apiserver_request_total{job="apiserver",verb=~"LIST|GET|POST|PUT|PATCH|DELETE",code=~"2.."}[1h]))
      record: code_verb:apiserver_request_total:increase1h
      labels:
        alertgroup: Cluster
    - expr: sum by (cluster, code, verb) (increase(apiserver_request_total{job="apiserver",verb=~"LIST|GET|POST|PUT|PATCH|DELETE",code=~"3.."}[1h]))
      record: code_verb:apiserver_request_total:increase1h
      labels:
        alertgroup: Cluster
    - expr: sum by (cluster, code, verb) (increase(apiserver_request_total{job="apiserver",verb=~"LIST|GET|POST|PUT|PATCH|DELETE",code=~"4.."}[1h]))
      record: code_verb:apiserver_request_total:increase1h
      labels:
        alertgroup: Cluster
    - expr: sum by (cluster, code, verb) (increase(apiserver_request_total{job="apiserver",verb=~"LIST|GET|POST|PUT|PATCH|DELETE",code=~"5.."}[1h]))
      record: code_verb:apiserver_request_total:increase1h
      labels:
        alertgroup: Cluster
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/rules-1.14/kube-apiserver-burnrate.rules.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kube-prometheus-kube-apiserver-burnrate.rules
  namespace: default
  labels:
    app: kube-prometheus-stack
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
    prometheus_rule: "1"
spec:
  groups:
  - name: kube-apiserver-burnrate.rules
    rules:
    - expr: |-
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[1d]))
            -
            (
              (
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le="1"}[1d]))
                or
                vector(0)
              )
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le="5"}[1d]))
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le="30"}[1d]))
            )
          )
          +
          # errors
          sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET",code=~"5.."}[1d]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[1d]))
      labels:
        verb: read
        alertgroup: Cluster
      record: apiserver_request:burnrate1d
    - expr: |-
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[1h]))
            -
            (
              (
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le="1"}[1h]))
                or
                vector(0)
              )
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le="5"}[1h]))
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le="30"}[1h]))
            )
          )
          +
          # errors
          sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET",code=~"5.."}[1h]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[1h]))
      labels:
        verb: read
        alertgroup: Cluster
      record: apiserver_request:burnrate1h
    - expr: |-
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[2h]))
            -
            (
              (
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le="1"}[2h]))
                or
                vector(0)
              )
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le="5"}[2h]))
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le="30"}[2h]))
            )
          )
          +
          # errors
          sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET",code=~"5.."}[2h]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[2h]))
      labels:
        verb: read
        alertgroup: Cluster
      record: apiserver_request:burnrate2h
    - expr: |-
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[30m]))
            -
            (
              (
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le="1"}[30m]))
                or
                vector(0)
              )
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le="5"}[30m]))
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le="30"}[30m]))
            )
          )
          +
          # errors
          sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET",code=~"5.."}[30m]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[30m]))
      labels:
        verb: read
        alertgroup: Cluster
      record: apiserver_request:burnrate30m
    - expr: |-
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[3d]))
            -
            (
              (
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le="1"}[3d]))
                or
                vector(0)
              )
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le="5"}[3d]))
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le="30"}[3d]))
            )
          )
          +
          # errors
          sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET",code=~"5.."}[3d]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[3d]))
      labels:
        verb: read
        alertgroup: Cluster
      record: apiserver_request:burnrate3d
    - expr: |-
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[5m]))
            -
            (
              (
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le="1"}[5m]))
                or
                vector(0)
              )
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le="5"}[5m]))
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le="30"}[5m]))
            )
          )
          +
          # errors
          sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET",code=~"5.."}[5m]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[5m]))
      labels:
        verb: read
        alertgroup: Cluster
      record: apiserver_request:burnrate5m
    - expr: |-
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[6h]))
            -
            (
              (
                sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope=~"resource|",le="1"}[6h]))
                or
                vector(0)
              )
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="namespace",le="5"}[6h]))
              +
              sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward",scope="cluster",le="30"}[6h]))
            )
          )
          +
          # errors
          sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET",code=~"5.."}[6h]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"LIST|GET"}[6h]))
      labels:
        verb: read
        alertgroup: Cluster
      record: apiserver_request:burnrate6h
    - expr: |-
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[1d]))
            -
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le="1"}[1d]))
          )
          +
          sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[1d]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[1d]))
      labels:
        verb: write
        alertgroup: Cluster
      record: apiserver_request:burnrate1d
    - expr: |-
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[1h]))
            -
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le="1"}[1h]))
          )
          +
          sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[1h]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[1h]))
      labels:
        verb: write
        alertgroup: Cluster
      record: apiserver_request:burnrate1h
    - expr: |-
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[2h]))
            -
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le="1"}[2h]))
          )
          +
          sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[2h]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[2h]))
      labels:
        verb: write
        alertgroup: Cluster
      record: apiserver_request:burnrate2h
    - expr: |-
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[30m]))
            -
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le="1"}[30m]))
          )
          +
          sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[30m]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[30m]))
      labels:
        verb: write
        alertgroup: Cluster
      record: apiserver_request:burnrate30m
    - expr: |-
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[3d]))
            -
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le="1"}[3d]))
          )
          +
          sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[3d]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[3d]))
      labels:
        verb: write
        alertgroup: Cluster
      record: apiserver_request:burnrate3d
    - expr: |-
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[5m]))
            -
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le="1"}[5m]))
          )
          +
          sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[5m]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[5m]))
      labels:
        verb: write
        alertgroup: Cluster
      record: apiserver_request:burnrate5m
    - expr: |-
        (
          (
            # too slow
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_count{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[6h]))
            -
            sum by (cluster) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward",le="1"}[6h]))
          )
          +
          sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[6h]))
        )
        /
        sum by (cluster) (rate(apiserver_request_total{job="apiserver",verb=~"POST|PUT|PATCH|DELETE"}[6h]))
      labels:
        verb: write
        alertgroup: Cluster
      record: apiserver_request:burnrate6h
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/rules-1.14/kube-apiserver-histogram.rules.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kube-prometheus-kube-apiserver-histogram.rules
  namespace: default
  labels:
    app: kube-prometheus-stack
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
    prometheus_rule: "1"
spec:
  groups:
  - name: kube-apiserver-histogram.rules
    rules:
    - expr: histogram_quantile(0.99, sum by (cluster, le, resource) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"LIST|GET",subresource!~"proxy|attach|log|exec|portforward"}[5m]))) > 0
      labels:
        quantile: '0.99'
        verb: read
        alertgroup: Cluster
      record: cluster_quantile:apiserver_request_sli_duration_seconds:histogram_quantile
    - expr: histogram_quantile(0.99, sum by (cluster, le, resource) (rate(apiserver_request_sli_duration_seconds_bucket{job="apiserver",verb=~"POST|PUT|PATCH|DELETE",subresource!~"proxy|attach|log|exec|portforward"}[5m]))) > 0
      labels:
        quantile: '0.99'
        verb: write
        alertgroup: Cluster
      record: cluster_quantile:apiserver_request_sli_duration_seconds:histogram_quantile
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/rules-1.14/kube-apiserver-slos.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kube-prometheus-kube-apiserver-slos
  namespace: default
  labels:
    app: kube-prometheus-stack
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
    prometheus_rule: "1"
spec:
  groups:
  - name: kube-apiserver-slos
    rules:
    - alert: KubeAPIErrorBudgetBurn
      annotations:
        description: The API server is burning too much error budget.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeapierrorbudgetburn
        summary: The API server is burning too much error budget.
      expr: |-
        sum(apiserver_request:burnrate1h) > (14.40 * 0.01000)
        and
        sum(apiserver_request:burnrate5m) > (14.40 * 0.01000)
      for: 2m
      labels:
        long: 1h
        severity: critical
        short: 5m
        alertgroup: Cluster
    - alert: KubeAPIErrorBudgetBurn
      annotations:
        description: The API server is burning too much error budget.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeapierrorbudgetburn
        summary: The API server is burning too much error budget.
      expr: |-
        sum(apiserver_request:burnrate6h) > (6.00 * 0.01000)
        and
        sum(apiserver_request:burnrate30m) > (6.00 * 0.01000)
      for: 15m
      labels:
        long: 6h
        severity: critical
        short: 30m
        alertgroup: Cluster
    - alert: KubeAPIErrorBudgetBurn
      annotations:
        description: The API server is burning too much error budget.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeapierrorbudgetburn
        summary: The API server is burning too much error budget.
      expr: |-
        sum(apiserver_request:burnrate1d) > (3.00 * 0.01000)
        and
        sum(apiserver_request:burnrate2h) > (3.00 * 0.01000)
      for: 1h
      labels:
        long: 1d
        severity: warning
        short: 2h
        alertgroup: Cluster
    - alert: KubeAPIErrorBudgetBurn
      annotations:
        description: The API server is burning too much error budget.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeapierrorbudgetburn
        summary: The API server is burning too much error budget.
      expr: |-
        sum(apiserver_request:burnrate3d) > (1.00 * 0.01000)
        and
        sum(apiserver_request:burnrate6h) > (1.00 * 0.01000)
      for: 3h
      labels:
        long: 3d
        severity: warning
        short: 6h
        alertgroup: Cluster
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/rules-1.14/kube-prometheus-general.rules.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kube-prometheus-kube-prometheus-general.rules
  namespace: default
  labels:
    app: kube-prometheus-stack
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
    prometheus_rule: "1"
spec:
  groups:
  - name: kube-prometheus-general.rules
    rules:
    - expr: count without(instance, pod, node) (up == 1)
      record: count:up1
      labels:
        alertgroup: Cluster
    - expr: count without(instance, pod, node) (up == 0)
      record: count:up0
      labels:
        alertgroup: Cluster
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/rules-1.14/kube-prometheus-node-recording.rules.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kube-prometheus-kube-prometheus-node-recording.rules
  namespace: default
  labels:
    app: kube-prometheus-stack
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
    prometheus_rule: "1"
spec:
  groups:
  - name: kube-prometheus-node-recording.rules
    rules:
    - expr: sum(rate(node_cpu_seconds_total{mode!="idle",mode!="iowait",mode!="steal"}[3m])) BY (instance)
      record: instance:node_cpu:rate:sum
      labels:
        alertgroup: Cluster
    - expr: sum(rate(node_network_receive_bytes_total[3m])) BY (instance)
      record: instance:node_network_receive_bytes:rate:sum
      labels:
        alertgroup: Cluster
    - expr: sum(rate(node_network_transmit_bytes_total[3m])) BY (instance)
      record: instance:node_network_transmit_bytes:rate:sum
      labels:
        alertgroup: Cluster
    - expr: sum(rate(node_cpu_seconds_total{mode!="idle",mode!="iowait",mode!="steal"}[5m])) WITHOUT (cpu, mode) / ON(instance) GROUP_LEFT() count(sum(node_cpu_seconds_total) BY (instance, cpu)) BY (instance)
      record: instance:node_cpu:ratio
      labels:
        alertgroup: Cluster
    - expr: sum(rate(node_cpu_seconds_total{mode!="idle",mode!="iowait",mode!="steal"}[5m]))
      record: cluster:node_cpu:sum_rate5m
      labels:
        alertgroup: Cluster
    - expr: cluster:node_cpu:sum_rate5m / count(sum(node_cpu_seconds_total) BY (instance, cpu))
      record: cluster:node_cpu:ratio
      labels:
        alertgroup: Cluster
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/rules-1.14/kube-scheduler.rules.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kube-prometheus-kube-scheduler.rules
  namespace: default
  labels:
    app: kube-prometheus-stack
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
    prometheus_rule: "1"
spec:
  groups:
  - name: kube-scheduler.rules
    rules:
    - expr: histogram_quantile(0.99, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
      labels:
        quantile: '0.99'
        alertgroup: Cluster
      record: cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile
    - expr: histogram_quantile(0.99, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
      labels:
        quantile: '0.99'
        alertgroup: Cluster
      record: cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile
    - expr: histogram_quantile(0.99, sum(rate(scheduler_binding_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
      labels:
        quantile: '0.99'
        alertgroup: Cluster
      record: cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile
    - expr: histogram_quantile(0.9, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
      labels:
        quantile: '0.9'
        alertgroup: Cluster
      record: cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile
    - expr: histogram_quantile(0.9, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
      labels:
        quantile: '0.9'
        alertgroup: Cluster
      record: cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile
    - expr: histogram_quantile(0.9, sum(rate(scheduler_binding_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
      labels:
        quantile: '0.9'
        alertgroup: Cluster
      record: cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile
    - expr: histogram_quantile(0.5, sum(rate(scheduler_e2e_scheduling_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
      labels:
        quantile: '0.5'
        alertgroup: Cluster
      record: cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile
    - expr: histogram_quantile(0.5, sum(rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
      labels:
        quantile: '0.5'
        alertgroup: Cluster
      record: cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile
    - expr: histogram_quantile(0.5, sum(rate(scheduler_binding_duration_seconds_bucket{job="kube-scheduler"}[5m])) without(instance, pod))
      labels:
        quantile: '0.5'
        alertgroup: Cluster
      record: cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/rules-1.14/kube-state-metrics.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kube-prometheus-kube-state-metrics
  namespace: default
  labels:
    app: kube-prometheus-stack
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
    prometheus_rule: "1"
spec:
  groups:
  - name: kube-state-metrics
    rules:
    - alert: KubeStateMetricsListErrors
      annotations:
        description: kube-state-metrics is experiencing errors at an elevated rate in list operations. This is likely causing it to not be able to expose metrics about Kubernetes objects correctly or at all.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kube-state-metrics/kubestatemetricslisterrors
        summary: kube-state-metrics is experiencing errors in list operations.
      expr: |-
        (sum(rate(kube_state_metrics_list_total{job="kube-state-metrics",result="error"}[5m])) by (cluster)
          /
        sum(rate(kube_state_metrics_list_total{job="kube-state-metrics"}[5m])) by (cluster))
        > 0.01
      for: 15m
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: KubeStateMetricsWatchErrors
      annotations:
        description: kube-state-metrics is experiencing errors at an elevated rate in watch operations. This is likely causing it to not be able to expose metrics about Kubernetes objects correctly or at all.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kube-state-metrics/kubestatemetricswatcherrors
        summary: kube-state-metrics is experiencing errors in watch operations.
      expr: |-
        (sum(rate(kube_state_metrics_watch_total{job="kube-state-metrics",result="error"}[5m])) by (cluster)
          /
        sum(rate(kube_state_metrics_watch_total{job="kube-state-metrics"}[5m])) by (cluster))
        > 0.01
      for: 15m
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: KubeStateMetricsShardingMismatch
      annotations:
        description: kube-state-metrics pods are running with different --total-shards configuration, some Kubernetes objects may be exposed multiple times or not exposed at all.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kube-state-metrics/kubestatemetricsshardingmismatch
        summary: kube-state-metrics sharding is misconfigured.
      expr: stdvar (kube_state_metrics_total_shards{job="kube-state-metrics"}) by (cluster) != 0
      for: 15m
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: KubeStateMetricsShardsMissing
      annotations:
        description: kube-state-metrics shards are missing, some Kubernetes objects are not being exposed.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kube-state-metrics/kubestatemetricsshardsmissing
        summary: kube-state-metrics shards are missing.
      expr: |-
        2^max(kube_state_metrics_total_shards{job="kube-state-metrics"}) by (cluster) - 1
          -
        sum( 2 ^ max by (cluster, shard_ordinal) (kube_state_metrics_shard_ordinal{job="kube-state-metrics"}) ) by (cluster)
        != 0
      for: 15m
      labels:
        severity: critical
        alertgroup: Cluster
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/rules-1.14/kubelet.rules.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kube-prometheus-kubelet.rules
  namespace: default
  labels:
    app: kube-prometheus-stack
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
    prometheus_rule: "1"
spec:
  groups:
  - name: kubelet.rules
    rules:
    - expr: histogram_quantile(0.99, sum(rate(kubelet_pleg_relist_duration_seconds_bucket{job="kubelet", metrics_path="/metrics"}[5m])) by (cluster, instance, le) * on(cluster, instance) group_left(node) kubelet_node_name{job="kubelet", metrics_path="/metrics"})
      labels:
        quantile: '0.99'
        alertgroup: Cluster
      record: node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile
    - expr: histogram_quantile(0.9, sum(rate(kubelet_pleg_relist_duration_seconds_bucket{job="kubelet", metrics_path="/metrics"}[5m])) by (cluster, instance, le) * on(cluster, instance) group_left(node) kubelet_node_name{job="kubelet", metrics_path="/metrics"})
      labels:
        quantile: '0.9'
        alertgroup: Cluster
      record: node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile
    - expr: histogram_quantile(0.5, sum(rate(kubelet_pleg_relist_duration_seconds_bucket{job="kubelet", metrics_path="/metrics"}[5m])) by (cluster, instance, le) * on(cluster, instance) group_left(node) kubelet_node_name{job="kubelet", metrics_path="/metrics"})
      labels:
        quantile: '0.5'
        alertgroup: Cluster
      record: node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/rules-1.14/kubernetes-apps.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kube-prometheus-kubernetes-apps
  namespace: default
  labels:
    app: kube-prometheus-stack
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
    prometheus_rule: "1"
spec:
  groups:
  - name: kubernetes-apps
    rules:
    - alert: KubePodCrashLooping
      annotations:
        description: 'Pod {{ $labels.namespace }}/{{ $labels.pod }} ({{ $labels.container }}) is in waiting state (reason: "CrashLoopBackOff").'
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubepodcrashlooping
        summary: Pod is crash looping.
      expr: max_over_time(kube_pod_container_status_waiting_reason{reason="CrashLoopBackOff", job="kube-state-metrics", namespace=~".*"}[5m]) >= 1
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubePodNotReady
      annotations:
        description: Pod {{ $labels.namespace }}/{{ $labels.pod }} has been in a non-ready state for longer than 15 minutes.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubepodnotready
        summary: Pod has been in a non-ready state for more than 15 minutes.
      expr: |-
        sum by (namespace, pod, cluster) (
          max by(namespace, pod, cluster) (
            kube_pod_status_phase{job="kube-state-metrics", namespace=~".*", phase=~"Pending|Unknown|Failed"}
          ) * on(namespace, pod, cluster) group_left(owner_kind) topk by(namespace, pod, cluster) (
            1, max by(namespace, pod, owner_kind, cluster) (kube_pod_owner{owner_kind!="Job"})
          )
        ) > 0
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeDeploymentGenerationMismatch
      annotations:
        description: Deployment generation for {{ $labels.namespace }}/{{ $labels.deployment }} does not match, this indicates that the Deployment has failed but has not been rolled back.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubedeploymentgenerationmismatch
        summary: Deployment generation mismatch due to possible roll-back
      expr: |-
        kube_deployment_status_observed_generation{job="kube-state-metrics", namespace=~".*"}
          !=
        kube_deployment_metadata_generation{job="kube-state-metrics", namespace=~".*"}
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeDeploymentReplicasMismatch
      annotations:
        description: Deployment {{ $labels.namespace }}/{{ $labels.deployment }} has not matched the expected number of replicas for longer than 15 minutes.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubedeploymentreplicasmismatch
        summary: Deployment has not matched the expected number of replicas.
      expr: |-
        (
          kube_deployment_spec_replicas{job="kube-state-metrics", namespace=~".*"}
            >
          kube_deployment_status_replicas_available{job="kube-state-metrics", namespace=~".*"}
        ) and (
          changes(kube_deployment_status_replicas_updated{job="kube-state-metrics", namespace=~".*"}[10m])
            ==
          0
        )
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeDeploymentRolloutStuck
      annotations:
        description: Rollout of deployment {{ $labels.namespace }}/{{ $labels.deployment }} is not progressing for longer than 15 minutes.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubedeploymentrolloutstuck
        summary: Deployment rollout is not progressing.
      expr: |-
        kube_deployment_status_condition{condition="Progressing", status="false",job="kube-state-metrics", namespace=~".*"}
        != 0
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeStatefulSetReplicasMismatch
      annotations:
        description: StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} has not matched the expected number of replicas for longer than 15 minutes.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubestatefulsetreplicasmismatch
        summary: StatefulSet has not matched the expected number of replicas.
      expr: |-
        (
          kube_statefulset_status_replicas_ready{job="kube-state-metrics", namespace=~".*"}
            !=
          kube_statefulset_status_replicas{job="kube-state-metrics", namespace=~".*"}
        ) and (
          changes(kube_statefulset_status_replicas_updated{job="kube-state-metrics", namespace=~".*"}[10m])
            ==
          0
        )
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeStatefulSetGenerationMismatch
      annotations:
        description: StatefulSet generation for {{ $labels.namespace }}/{{ $labels.statefulset }} does not match, this indicates that the StatefulSet has failed but has not been rolled back.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubestatefulsetgenerationmismatch
        summary: StatefulSet generation mismatch due to possible roll-back
      expr: |-
        kube_statefulset_status_observed_generation{job="kube-state-metrics", namespace=~".*"}
          !=
        kube_statefulset_metadata_generation{job="kube-state-metrics", namespace=~".*"}
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeStatefulSetUpdateNotRolledOut
      annotations:
        description: StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} update has not been rolled out.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubestatefulsetupdatenotrolledout
        summary: StatefulSet update has not been rolled out.
      expr: |-
        (
          max without (revision) (
            kube_statefulset_status_current_revision{job="kube-state-metrics", namespace=~".*"}
              unless
            kube_statefulset_status_update_revision{job="kube-state-metrics", namespace=~".*"}
          )
            *
          (
            kube_statefulset_replicas{job="kube-state-metrics", namespace=~".*"}
              !=
            kube_statefulset_status_replicas_updated{job="kube-state-metrics", namespace=~".*"}
          )
        )  and (
          changes(kube_statefulset_status_replicas_updated{job="kube-state-metrics", namespace=~".*"}[5m])
            ==
          0
        )
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeDaemonSetRolloutStuck
      annotations:
        description: DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} has not finished or progressed for at least 15 minutes.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubedaemonsetrolloutstuck
        summary: DaemonSet rollout is stuck.
      expr: |-
        (
          (
            kube_daemonset_status_current_number_scheduled{job="kube-state-metrics", namespace=~".*"}
             !=
            kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics", namespace=~".*"}
          ) or (
            kube_daemonset_status_number_misscheduled{job="kube-state-metrics", namespace=~".*"}
             !=
            0
          ) or (
            kube_daemonset_status_updated_number_scheduled{job="kube-state-metrics", namespace=~".*"}
             !=
            kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics", namespace=~".*"}
          ) or (
            kube_daemonset_status_number_available{job="kube-state-metrics", namespace=~".*"}
             !=
            kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics", namespace=~".*"}
          )
        ) and (
          changes(kube_daemonset_status_updated_number_scheduled{job="kube-state-metrics", namespace=~".*"}[5m])
            ==
          0
        )
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeContainerWaiting
      annotations:
        description: pod/{{ $labels.pod }} in namespace {{ $labels.namespace }} on container {{ $labels.container}} has been in waiting state for longer than 1 hour.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubecontainerwaiting
        summary: Pod container waiting longer than 1 hour
      expr: sum by (namespace, pod, container, cluster) (kube_pod_container_status_waiting_reason{job="kube-state-metrics", namespace=~".*"}) > 0
      for: 1h
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeDaemonSetNotScheduled
      annotations:
        description: '{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} are not scheduled.'
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubedaemonsetnotscheduled
        summary: DaemonSet pods are not scheduled.
      expr: |-
        kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics", namespace=~".*"}
          -
        kube_daemonset_status_current_number_scheduled{job="kube-state-metrics", namespace=~".*"} > 0
      for: 10m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeDaemonSetMisScheduled
      annotations:
        description: '{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} are running where they are not supposed to run.'
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubedaemonsetmisscheduled
        summary: DaemonSet pods are misscheduled.
      expr: kube_daemonset_status_number_misscheduled{job="kube-state-metrics", namespace=~".*"} > 0
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeJobNotCompleted
      annotations:
        description: Job {{ $labels.namespace }}/{{ $labels.job_name }} is taking more than {{ "43200" | humanizeDuration }} to complete.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubejobnotcompleted
        summary: Job did not complete in time
      expr: |-
        time() - max by(namespace, job_name, cluster) (kube_job_status_start_time{job="kube-state-metrics", namespace=~".*"}
          and
        kube_job_status_active{job="kube-state-metrics", namespace=~".*"} > 0) > 43200
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeJobFailed
      annotations:
        description: Job {{ $labels.namespace }}/{{ $labels.job_name }} failed to complete. Removing failed job after investigation should clear this alert.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubejobfailed
        summary: Job failed to complete.
      expr: kube_job_failed{job="kube-state-metrics", namespace=~".*"}  > 0
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeHpaReplicasMismatch
      annotations:
        description: HPA {{ $labels.namespace }}/{{ $labels.horizontalpodautoscaler  }} has not matched the desired number of replicas for longer than 15 minutes.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubehpareplicasmismatch
        summary: HPA has not matched desired number of replicas.
      expr: |-
        (kube_horizontalpodautoscaler_status_desired_replicas{job="kube-state-metrics", namespace=~".*"}
          !=
        kube_horizontalpodautoscaler_status_current_replicas{job="kube-state-metrics", namespace=~".*"})
          and
        (kube_horizontalpodautoscaler_status_current_replicas{job="kube-state-metrics", namespace=~".*"}
          >
        kube_horizontalpodautoscaler_spec_min_replicas{job="kube-state-metrics", namespace=~".*"})
          and
        (kube_horizontalpodautoscaler_status_current_replicas{job="kube-state-metrics", namespace=~".*"}
          <
        kube_horizontalpodautoscaler_spec_max_replicas{job="kube-state-metrics", namespace=~".*"})
          and
        changes(kube_horizontalpodautoscaler_status_current_replicas{job="kube-state-metrics", namespace=~".*"}[15m]) == 0
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeHpaMaxedOut
      annotations:
        description: HPA {{ $labels.namespace }}/{{ $labels.horizontalpodautoscaler  }} has been running at max replicas for longer than 15 minutes.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubehpamaxedout
        summary: HPA is running at max replicas
      expr: |-
        kube_horizontalpodautoscaler_status_current_replicas{job="kube-state-metrics", namespace=~".*"}
          ==
        kube_horizontalpodautoscaler_spec_max_replicas{job="kube-state-metrics", namespace=~".*"}
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/rules-1.14/kubernetes-resources.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kube-prometheus-kubernetes-resources
  namespace: default
  labels:
    app: kube-prometheus-stack
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
    prometheus_rule: "1"
spec:
  groups:
  - name: kubernetes-resources
    rules:
    - alert: KubeCPUOvercommit
      annotations:
        description: Cluster {{ $labels.cluster }} has overcommitted CPU resource requests for Pods by {{ $value }} CPU shares and cannot tolerate node failure.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubecpuovercommit
        summary: Cluster has overcommitted CPU resource requests.
      expr: |-
        sum(namespace_cpu:kube_pod_container_resource_requests:sum{job="kube-state-metrics",}) by (cluster) - (sum(kube_node_status_allocatable{job="kube-state-metrics",resource="cpu"}) by (cluster) - max(kube_node_status_allocatable{job="kube-state-metrics",resource="cpu"}) by (cluster)) > 0
        and
        (sum(kube_node_status_allocatable{job="kube-state-metrics",resource="cpu"}) by (cluster) - max(kube_node_status_allocatable{job="kube-state-metrics",resource="cpu"}) by (cluster)) > 0
      for: 10m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeMemoryOvercommit
      annotations:
        description: Cluster {{ $labels.cluster }} has overcommitted memory resource requests for Pods by {{ $value | humanize }} bytes and cannot tolerate node failure.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubememoryovercommit
        summary: Cluster has overcommitted memory resource requests.
      expr: |-
        sum(namespace_memory:kube_pod_container_resource_requests:sum{}) by (cluster) - (sum(kube_node_status_allocatable{resource="memory", job="kube-state-metrics"}) by (cluster) - max(kube_node_status_allocatable{resource="memory", job="kube-state-metrics"}) by (cluster)) > 0
        and
        (sum(kube_node_status_allocatable{resource="memory", job="kube-state-metrics"}) by (cluster) - max(kube_node_status_allocatable{resource="memory", job="kube-state-metrics"}) by (cluster)) > 0
      for: 10m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeCPUQuotaOvercommit
      annotations:
        description: Cluster {{ $labels.cluster }}  has overcommitted CPU resource requests for Namespaces.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubecpuquotaovercommit
        summary: Cluster has overcommitted CPU resource requests.
      expr: |-
        sum(min without(resource) (kube_resourcequota{job="kube-state-metrics", type="hard", resource=~"(cpu|requests.cpu)"})) by (cluster)
          /
        sum(kube_node_status_allocatable{resource="cpu", job="kube-state-metrics"}) by (cluster)
          > 1.5
      for: 5m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeMemoryQuotaOvercommit
      annotations:
        description: Cluster {{ $labels.cluster }}  has overcommitted memory resource requests for Namespaces.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubememoryquotaovercommit
        summary: Cluster has overcommitted memory resource requests.
      expr: |-
        sum(min without(resource) (kube_resourcequota{job="kube-state-metrics", type="hard", resource=~"(memory|requests.memory)"})) by (cluster)
          /
        sum(kube_node_status_allocatable{resource="memory", job="kube-state-metrics"}) by (cluster)
          > 1.5
      for: 5m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeQuotaAlmostFull
      annotations:
        description: Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its {{ $labels.resource }} quota.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubequotaalmostfull
        summary: Namespace quota is going to be full.
      expr: |-
        kube_resourcequota{job="kube-state-metrics", type="used"}
          / ignoring(instance, job, type)
        (kube_resourcequota{job="kube-state-metrics", type="hard"} > 0)
          > 0.9 < 1
      for: 15m
      labels:
        severity: info
        alertgroup: Cluster
    - alert: KubeQuotaFullyUsed
      annotations:
        description: Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its {{ $labels.resource }} quota.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubequotafullyused
        summary: Namespace quota is fully used.
      expr: |-
        kube_resourcequota{job="kube-state-metrics", type="used"}
          / ignoring(instance, job, type)
        (kube_resourcequota{job="kube-state-metrics", type="hard"} > 0)
          == 1
      for: 15m
      labels:
        severity: info
        alertgroup: Cluster
    - alert: KubeQuotaExceeded
      annotations:
        description: Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its {{ $labels.resource }} quota.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubequotaexceeded
        summary: Namespace quota has exceeded the limits.
      expr: |-
        kube_resourcequota{job="kube-state-metrics", type="used"}
          / ignoring(instance, job, type)
        (kube_resourcequota{job="kube-state-metrics", type="hard"} > 0)
          > 1
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: CPUThrottlingHigh
      annotations:
        description: '{{ $value | humanizePercentage }} throttling of CPU in namespace {{ $labels.namespace }} for container {{ $labels.container }} in pod {{ $labels.pod }}.'
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/cputhrottlinghigh
        summary: Processes experience elevated CPU throttling.
      expr: |-
        sum(increase(container_cpu_cfs_throttled_periods_total{container!="", }[5m])) by (cluster, container, pod, namespace)
          /
        sum(increase(container_cpu_cfs_periods_total{}[5m])) by (cluster, container, pod, namespace)
          > ( 25 / 100 )
      for: 15m
      labels:
        severity: info
        alertgroup: Cluster
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/rules-1.14/kubernetes-system-apiserver.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kube-prometheus-kubernetes-system-apiserver
  namespace: default
  labels:
    app: kube-prometheus-stack
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
    prometheus_rule: "1"
spec:
  groups:
  - name: kubernetes-system-apiserver
    rules:
    - alert: KubeClientCertificateExpiration
      annotations:
        description: A client certificate used to authenticate to kubernetes apiserver is expiring in less than 7.0 days.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeclientcertificateexpiration
        summary: Client certificate is about to expire.
      expr: apiserver_client_certificate_expiration_seconds_count{job="apiserver"} > 0 and on(job) histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="apiserver"}[5m]))) < 604800
      for: 5m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeClientCertificateExpiration
      annotations:
        description: A client certificate used to authenticate to kubernetes apiserver is expiring in less than 24.0 hours.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeclientcertificateexpiration
        summary: Client certificate is about to expire.
      expr: apiserver_client_certificate_expiration_seconds_count{job="apiserver"} > 0 and on(job) histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="apiserver"}[5m]))) < 86400
      for: 5m
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: KubeAggregatedAPIErrors
      annotations:
        description: Kubernetes aggregated API {{ $labels.name }}/{{ $labels.namespace }} has reported errors. It has appeared unavailable {{ $value | humanize }} times averaged over the past 10m.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeaggregatedapierrors
        summary: Kubernetes aggregated API has reported errors.
      expr: sum by(name, namespace, cluster)(increase(aggregator_unavailable_apiservice_total{job="apiserver"}[10m])) > 4
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeAggregatedAPIDown
      annotations:
        description: Kubernetes aggregated API {{ $labels.name }}/{{ $labels.namespace }} has been only {{ $value | humanize }}% available over the last 10m.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeaggregatedapidown
        summary: Kubernetes aggregated API is down.
      expr: (1 - max by(name, namespace, cluster)(avg_over_time(aggregator_unavailable_apiservice{job="apiserver"}[10m]))) * 100 < 85
      for: 5m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeAPIDown
      annotations:
        description: KubeAPI has disappeared from Prometheus target discovery.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeapidown
        summary: Target disappeared from Prometheus target discovery.
      expr: absent(up{job="apiserver"} == 1)
      for: 15m
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: KubeAPITerminatedRequests
      annotations:
        description: The kubernetes apiserver has terminated {{ $value | humanizePercentage }} of its incoming requests.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeapiterminatedrequests
        summary: The kubernetes apiserver has terminated {{ $value | humanizePercentage }} of its incoming requests.
      expr: sum(rate(apiserver_request_terminations_total{job="apiserver"}[10m]))  / (  sum(rate(apiserver_request_total{job="apiserver"}[10m])) + sum(rate(apiserver_request_terminations_total{job="apiserver"}[10m])) ) > 0.20
      for: 5m
      labels:
        severity: warning
        alertgroup: Cluster
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/rules-1.14/kubernetes-system-controller-manager.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kube-prometheus-kubernetes-system-controller-manager
  namespace: default
  labels:
    app: kube-prometheus-stack
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
    prometheus_rule: "1"
spec:
  groups:
  - name: kubernetes-system-controller-manager
    rules:
    - alert: KubeControllerManagerDown
      annotations:
        description: KubeControllerManager has disappeared from Prometheus target discovery.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubecontrollermanagerdown
        summary: Target disappeared from Prometheus target discovery.
      expr: absent(up{job="kube-controller-manager"} == 1)
      for: 15m
      labels:
        severity: critical
        alertgroup: Cluster
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/rules-1.14/kubernetes-system-kube-proxy.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kube-prometheus-kubernetes-system-kube-proxy
  namespace: default
  labels:
    app: kube-prometheus-stack
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
    prometheus_rule: "1"
spec:
  groups:
  - name: kubernetes-system-kube-proxy
    rules:
    - alert: KubeProxyDown
      annotations:
        description: KubeProxy has disappeared from Prometheus target discovery.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeproxydown
        summary: Target disappeared from Prometheus target discovery.
      expr: absent(up{job="kube-proxy"} == 1)
      for: 15m
      labels:
        severity: critical
        alertgroup: Cluster
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/rules-1.14/kubernetes-system-kubelet.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kube-prometheus-kubernetes-system-kubelet
  namespace: default
  labels:
    app: kube-prometheus-stack
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
    prometheus_rule: "1"
spec:
  groups:
  - name: kubernetes-system-kubelet
    rules:
    - alert: KubeNodeNotReady
      annotations:
        description: '{{ $labels.node }} has been unready for more than 15 minutes.'
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubenodenotready
        summary: Node is not ready.
      expr: kube_node_status_condition{job="kube-state-metrics",condition="Ready",status="true"} == 0
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeNodeUnreachable
      annotations:
        description: '{{ $labels.node }} is unreachable and some workloads may be rescheduled.'
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubenodeunreachable
        summary: Node is unreachable.
      expr: (kube_node_spec_taint{job="kube-state-metrics",key="node.kubernetes.io/unreachable",effect="NoSchedule"} unless ignoring(key,value) kube_node_spec_taint{job="kube-state-metrics",key=~"ToBeDeletedByClusterAutoscaler|cloud.google.com/impending-node-termination|aws-node-termination-handler/spot-itn"}) == 1
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeletTooManyPods
      annotations:
        description: Kubelet '{{ $labels.node }}' is running at {{ $value | humanizePercentage }} of its Pod capacity.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubelettoomanypods
        summary: Kubelet is running at capacity.
      expr: |-
        count by(cluster, node) (
          (kube_pod_status_phase{job="kube-state-metrics",phase="Running"} == 1) * on(instance,pod,namespace,cluster) group_left(node) topk by(instance,pod,namespace,cluster) (1, kube_pod_info{job="kube-state-metrics"})
        )
        /
        max by(cluster, node) (
          kube_node_status_capacity{job="kube-state-metrics",resource="pods"} != 1
        ) > 0.95
      for: 15m
      labels:
        severity: info
        alertgroup: Cluster
    - alert: KubeNodeReadinessFlapping
      annotations:
        description: The readiness status of node {{ $labels.node }} has changed {{ $value }} times in the last 15 minutes.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubenodereadinessflapping
        summary: Node readiness status is flapping.
      expr: sum(changes(kube_node_status_condition{job="kube-state-metrics",status="true",condition="Ready"}[15m])) by (cluster, node) > 2
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeletPlegDurationHigh
      annotations:
        description: The Kubelet Pod Lifecycle Event Generator has a 99th percentile duration of {{ $value }} seconds on node {{ $labels.node }}.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeletplegdurationhigh
        summary: Kubelet Pod Lifecycle Event Generator is taking too long to relist.
      expr: node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile{quantile="0.99"} >= 10
      for: 5m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeletPodStartUpLatencyHigh
      annotations:
        description: Kubelet Pod startup 99th percentile latency is {{ $value }} seconds on node {{ $labels.node }}.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeletpodstartuplatencyhigh
        summary: Kubelet Pod startup latency is too high.
      expr: histogram_quantile(0.99, sum(rate(kubelet_pod_worker_duration_seconds_bucket{job="kubelet", metrics_path="/metrics"}[5m])) by (cluster, instance, le)) * on(cluster, instance) group_left(node) kubelet_node_name{job="kubelet", metrics_path="/metrics"} > 60
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeletClientCertificateExpiration
      annotations:
        description: Client certificate for Kubelet on node {{ $labels.node }} expires in {{ $value | humanizeDuration }}.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeletclientcertificateexpiration
        summary: Kubelet client certificate is about to expire.
      expr: kubelet_certificate_manager_client_ttl_seconds < 604800
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeletClientCertificateExpiration
      annotations:
        description: Client certificate for Kubelet on node {{ $labels.node }} expires in {{ $value | humanizeDuration }}.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeletclientcertificateexpiration
        summary: Kubelet client certificate is about to expire.
      expr: kubelet_certificate_manager_client_ttl_seconds < 86400
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: KubeletServerCertificateExpiration
      annotations:
        description: Server certificate for Kubelet on node {{ $labels.node }} expires in {{ $value | humanizeDuration }}.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeletservercertificateexpiration
        summary: Kubelet server certificate is about to expire.
      expr: kubelet_certificate_manager_server_ttl_seconds < 604800
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeletServerCertificateExpiration
      annotations:
        description: Server certificate for Kubelet on node {{ $labels.node }} expires in {{ $value | humanizeDuration }}.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeletservercertificateexpiration
        summary: Kubelet server certificate is about to expire.
      expr: kubelet_certificate_manager_server_ttl_seconds < 86400
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: KubeletClientCertificateRenewalErrors
      annotations:
        description: Kubelet on node {{ $labels.node }} has failed to renew its client certificate ({{ $value | humanize }} errors in the last 5 minutes).
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeletclientcertificaterenewalerrors
        summary: Kubelet has failed to renew its client certificate.
      expr: increase(kubelet_certificate_manager_client_expiration_renew_errors[5m]) > 0
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeletServerCertificateRenewalErrors
      annotations:
        description: Kubelet on node {{ $labels.node }} has failed to renew its server certificate ({{ $value | humanize }} errors in the last 5 minutes).
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeletservercertificaterenewalerrors
        summary: Kubelet has failed to renew its server certificate.
      expr: increase(kubelet_server_expiration_renew_errors[5m]) > 0
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeletDown
      annotations:
        description: Kubelet has disappeared from Prometheus target discovery.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeletdown
        summary: Target disappeared from Prometheus target discovery.
      expr: absent(up{job="kubelet", metrics_path="/metrics"} == 1)
      for: 15m
      labels:
        severity: critical
        alertgroup: Cluster
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/rules-1.14/kubernetes-system-scheduler.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kube-prometheus-kubernetes-system-scheduler
  namespace: default
  labels:
    app: kube-prometheus-stack
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
    prometheus_rule: "1"
spec:
  groups:
  - name: kubernetes-system-scheduler
    rules:
    - alert: KubeSchedulerDown
      annotations:
        description: KubeScheduler has disappeared from Prometheus target discovery.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeschedulerdown
        summary: Target disappeared from Prometheus target discovery.
      expr: absent(up{job="kube-scheduler"} == 1)
      for: 15m
      labels:
        severity: critical
        alertgroup: Cluster
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/rules-1.14/kubernetes-system.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kube-prometheus-kubernetes-system
  namespace: default
  labels:
    app: kube-prometheus-stack
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
    prometheus_rule: "1"
spec:
  groups:
  - name: kubernetes-system
    rules:
    - alert: KubeVersionMismatch
      annotations:
        description: There are {{ $value }} different semantic versions of Kubernetes components running.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeversionmismatch
        summary: Different semantic versions of Kubernetes components running.
      expr: count by (cluster) (count by (git_version, cluster) (label_replace(kubernetes_build_info{job!~"kube-dns|coredns"},"git_version","$1","git_version","(v[0-9]*.[0-9]*).*"))) > 1
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: KubeClientErrors
      annotations:
        description: Kubernetes API server client '{{ $labels.job }}/{{ $labels.instance }}' is experiencing {{ $value | humanizePercentage }} errors.'
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubeclienterrors
        summary: Kubernetes API server client is experiencing errors.
      expr: |-
        (sum(rate(rest_client_requests_total{job="apiserver",code=~"5.."}[5m])) by (cluster, instance, job, namespace)
          /
        sum(rate(rest_client_requests_total{job="apiserver"}[5m])) by (cluster, instance, job, namespace))
        > 0.01
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/rules-1.14/node-exporter.rules.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kube-prometheus-node-exporter.rules
  namespace: default
  labels:
    app: kube-prometheus-stack
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
    prometheus_rule: "1"
spec:
  groups:
  - name: node-exporter.rules
    rules:
    - expr: |-
        count without (cpu, mode) (
          node_cpu_seconds_total{job="node-exporter",mode="idle"}
        )
      record: instance:node_num_cpu:sum
      labels:
        alertgroup: Cluster
    - expr: |-
        1 - avg without (cpu) (
          sum without (mode) (rate(node_cpu_seconds_total{job="node-exporter", mode=~"idle|iowait|steal"}[5m]))
        )
      record: instance:node_cpu_utilisation:rate5m
      labels:
        alertgroup: Cluster
    - expr: |-
        (
          node_load1{job="node-exporter"}
        /
          instance:node_num_cpu:sum{job="node-exporter"}
        )
      record: instance:node_load1_per_cpu:ratio
      labels:
        alertgroup: Cluster
    - expr: |-
        1 - (
          (
            node_memory_MemAvailable_bytes{job="node-exporter"}
            or
            (
              node_memory_Buffers_bytes{job="node-exporter"}
              +
              node_memory_Cached_bytes{job="node-exporter"}
              +
              node_memory_MemFree_bytes{job="node-exporter"}
              +
              node_memory_Slab_bytes{job="node-exporter"}
            )
          )
        /
          node_memory_MemTotal_bytes{job="node-exporter"}
        )
      record: instance:node_memory_utilisation:ratio
      labels:
        alertgroup: Cluster
    - expr: rate(node_vmstat_pgmajfault{job="node-exporter"}[5m])
      record: instance:node_vmstat_pgmajfault:rate5m
      labels:
        alertgroup: Cluster
    - expr: rate(node_disk_io_time_seconds_total{job="node-exporter", device=~"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)"}[5m])
      record: instance_device:node_disk_io_time_seconds:rate5m
      labels:
        alertgroup: Cluster
    - expr: rate(node_disk_io_time_weighted_seconds_total{job="node-exporter", device=~"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)"}[5m])
      record: instance_device:node_disk_io_time_weighted_seconds:rate5m
      labels:
        alertgroup: Cluster
    - expr: |-
        sum without (device) (
          rate(node_network_receive_bytes_total{job="node-exporter", device!="lo"}[5m])
        )
      record: instance:node_network_receive_bytes_excluding_lo:rate5m
      labels:
        alertgroup: Cluster
    - expr: |-
        sum without (device) (
          rate(node_network_transmit_bytes_total{job="node-exporter", device!="lo"}[5m])
        )
      record: instance:node_network_transmit_bytes_excluding_lo:rate5m
      labels:
        alertgroup: Cluster
    - expr: |-
        sum without (device) (
          rate(node_network_receive_drop_total{job="node-exporter", device!="lo"}[5m])
        )
      record: instance:node_network_receive_drop_excluding_lo:rate5m
      labels:
        alertgroup: Cluster
    - expr: |-
        sum without (device) (
          rate(node_network_transmit_drop_total{job="node-exporter", device!="lo"}[5m])
        )
      record: instance:node_network_transmit_drop_excluding_lo:rate5m
      labels:
        alertgroup: Cluster
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/rules-1.14/node-exporter.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kube-prometheus-node-exporter
  namespace: default
  labels:
    app: kube-prometheus-stack
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
    prometheus_rule: "1"
spec:
  groups:
  - name: node-exporter
    rules:
    - alert: NodeFilesystemSpaceFillingUp
      annotations:
        description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available space left and is filling up.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemspacefillingup
        summary: Filesystem is predicted to run out of space within the next 24 hours.
      expr: |-
        (
          node_filesystem_avail_bytes{job="node-exporter",fstype!="",mountpoint!=""} / node_filesystem_size_bytes{job="node-exporter",fstype!="",mountpoint!=""} * 100 < 15
        and
          predict_linear(node_filesystem_avail_bytes{job="node-exporter",fstype!="",mountpoint!=""}[6h], 24*60*60) < 0
        and
          node_filesystem_readonly{job="node-exporter",fstype!="",mountpoint!=""} == 0
        )
      for: 1h
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: NodeFilesystemSpaceFillingUp
      annotations:
        description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available space left and is filling up fast.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemspacefillingup
        summary: Filesystem is predicted to run out of space within the next 4 hours.
      expr: |-
        (
          node_filesystem_avail_bytes{job="node-exporter",fstype!="",mountpoint!=""} / node_filesystem_size_bytes{job="node-exporter",fstype!="",mountpoint!=""} * 100 < 10
        and
          predict_linear(node_filesystem_avail_bytes{job="node-exporter",fstype!="",mountpoint!=""}[6h], 4*60*60) < 0
        and
          node_filesystem_readonly{job="node-exporter",fstype!="",mountpoint!=""} == 0
        )
      for: 1h
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: NodeFilesystemAlmostOutOfSpace
      annotations:
        description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available space left.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemalmostoutofspace
        summary: Filesystem has less than 5% space left.
      expr: |-
        (
          node_filesystem_avail_bytes{job="node-exporter",fstype!="",mountpoint!=""} / node_filesystem_size_bytes{job="node-exporter",fstype!="",mountpoint!=""} * 100 < 5
        and
          node_filesystem_readonly{job="node-exporter",fstype!="",mountpoint!=""} == 0
        )
      for: 30m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: NodeFilesystemAlmostOutOfSpace
      annotations:
        description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available space left.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemalmostoutofspace
        summary: Filesystem has less than 3% space left.
      expr: |-
        (
          node_filesystem_avail_bytes{job="node-exporter",fstype!="",mountpoint!=""} / node_filesystem_size_bytes{job="node-exporter",fstype!="",mountpoint!=""} * 100 < 3
        and
          node_filesystem_readonly{job="node-exporter",fstype!="",mountpoint!=""} == 0
        )
      for: 30m
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: NodeFilesystemFilesFillingUp
      annotations:
        description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available inodes left and is filling up.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemfilesfillingup
        summary: Filesystem is predicted to run out of inodes within the next 24 hours.
      expr: |-
        (
          node_filesystem_files_free{job="node-exporter",fstype!="",mountpoint!=""} / node_filesystem_files{job="node-exporter",fstype!="",mountpoint!=""} * 100 < 40
        and
          predict_linear(node_filesystem_files_free{job="node-exporter",fstype!="",mountpoint!=""}[6h], 24*60*60) < 0
        and
          node_filesystem_readonly{job="node-exporter",fstype!="",mountpoint!=""} == 0
        )
      for: 1h
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: NodeFilesystemFilesFillingUp
      annotations:
        description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available inodes left and is filling up fast.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemfilesfillingup
        summary: Filesystem is predicted to run out of inodes within the next 4 hours.
      expr: |-
        (
          node_filesystem_files_free{job="node-exporter",fstype!="",mountpoint!=""} / node_filesystem_files{job="node-exporter",fstype!="",mountpoint!=""} * 100 < 20
        and
          predict_linear(node_filesystem_files_free{job="node-exporter",fstype!="",mountpoint!=""}[6h], 4*60*60) < 0
        and
          node_filesystem_readonly{job="node-exporter",fstype!="",mountpoint!=""} == 0
        )
      for: 1h
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: NodeFilesystemAlmostOutOfFiles
      annotations:
        description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available inodes left.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemalmostoutoffiles
        summary: Filesystem has less than 5% inodes left.
      expr: |-
        (
          node_filesystem_files_free{job="node-exporter",fstype!="",mountpoint!=""} / node_filesystem_files{job="node-exporter",fstype!="",mountpoint!=""} * 100 < 5
        and
          node_filesystem_readonly{job="node-exporter",fstype!="",mountpoint!=""} == 0
        )
      for: 1h
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: NodeFilesystemAlmostOutOfFiles
      annotations:
        description: Filesystem on {{ $labels.device }}, mounted on {{ $labels.mountpoint }}, at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available inodes left.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemalmostoutoffiles
        summary: Filesystem has less than 3% inodes left.
      expr: |-
        (
          node_filesystem_files_free{job="node-exporter",fstype!="",mountpoint!=""} / node_filesystem_files{job="node-exporter",fstype!="",mountpoint!=""} * 100 < 3
        and
          node_filesystem_readonly{job="node-exporter",fstype!="",mountpoint!=""} == 0
        )
      for: 1h
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: NodeNetworkReceiveErrs
      annotations:
        description: '{{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf "%.0f" $value }} receive errors in the last two minutes.'
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodenetworkreceiveerrs
        summary: Network interface is reporting many receive errors.
      expr: rate(node_network_receive_errs_total{job="node-exporter"}[2m]) / rate(node_network_receive_packets_total{job="node-exporter"}[2m]) > 0.01
      for: 1h
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: NodeNetworkTransmitErrs
      annotations:
        description: '{{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf "%.0f" $value }} transmit errors in the last two minutes.'
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodenetworktransmiterrs
        summary: Network interface is reporting many transmit errors.
      expr: rate(node_network_transmit_errs_total{job="node-exporter"}[2m]) / rate(node_network_transmit_packets_total{job="node-exporter"}[2m]) > 0.01
      for: 1h
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: NodeHighNumberConntrackEntriesUsed
      annotations:
        description: '{{ $value | humanizePercentage }} of conntrack entries are used.'
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodehighnumberconntrackentriesused
        summary: Number of conntrack are getting close to the limit.
      expr: (node_nf_conntrack_entries{job="node-exporter"} / node_nf_conntrack_entries_limit) > 0.75
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: NodeTextFileCollectorScrapeError
      annotations:
        description: Node Exporter text file collector on {{ $labels.instance }} failed to scrape.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodetextfilecollectorscrapeerror
        summary: Node Exporter text file collector failed to scrape.
      expr: node_textfile_scrape_error{job="node-exporter"} == 1
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: NodeClockSkewDetected
      annotations:
        description: Clock at {{ $labels.instance }} is out of sync by more than 0.05s. Ensure NTP is configured correctly on this host.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodeclockskewdetected
        summary: Clock skew detected.
      expr: |-
        (
          node_timex_offset_seconds{job="node-exporter"} > 0.05
        and
          deriv(node_timex_offset_seconds{job="node-exporter"}[5m]) >= 0
        )
        or
        (
          node_timex_offset_seconds{job="node-exporter"} < -0.05
        and
          deriv(node_timex_offset_seconds{job="node-exporter"}[5m]) <= 0
        )
      for: 10m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: NodeClockNotSynchronising
      annotations:
        description: Clock at {{ $labels.instance }} is not synchronising. Ensure NTP is configured on this host.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodeclocknotsynchronising
        summary: Clock not synchronising.
      expr: |-
        min_over_time(node_timex_sync_status{job="node-exporter"}[5m]) == 0
        and
        node_timex_maxerror_seconds{job="node-exporter"} >= 16
      for: 10m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: NodeRAIDDegraded
      annotations:
        description: RAID array '{{ $labels.device }}' at {{ $labels.instance }} is in degraded state due to one or more disks failures. Number of spare drives is insufficient to fix issue automatically.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/noderaiddegraded
        summary: RAID Array is degraded.
      expr: node_md_disks_required{job="node-exporter",device=~"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)"} - ignoring (state) (node_md_disks{state="active",job="node-exporter",device=~"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)"}) > 0
      for: 15m
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: NodeRAIDDiskFailure
      annotations:
        description: At least one device in RAID array at {{ $labels.instance }} failed. Array '{{ $labels.device }}' needs attention and possibly a disk swap.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/noderaiddiskfailure
        summary: Failed device in RAID array.
      expr: node_md_disks{state="failed",job="node-exporter",device=~"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)"} > 0
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: NodeFileDescriptorLimit
      annotations:
        description: File descriptors limit at {{ $labels.instance }} is currently at {{ printf "%.2f" $value }}%.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefiledescriptorlimit
        summary: Kernel is predicted to exhaust file descriptors limit soon.
      expr: |-
        (
          node_filefd_allocated{job="node-exporter"} * 100 / node_filefd_maximum{job="node-exporter"} > 70
        )
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: NodeFileDescriptorLimit
      annotations:
        description: File descriptors limit at {{ $labels.instance }} is currently at {{ printf "%.2f" $value }}%.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefiledescriptorlimit
        summary: Kernel is predicted to exhaust file descriptors limit soon.
      expr: |-
        (
          node_filefd_allocated{job="node-exporter"} * 100 / node_filefd_maximum{job="node-exporter"} > 90
        )
      for: 15m
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: NodeCPUHighUsage
      annotations:
        description: 'CPU usage at {{ $labels.instance }} has been above 90% for the last 15 minutes, is currently at {{ printf "%.2f" $value }}%.

          '
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodecpuhighusage
        summary: High CPU usage.
      expr: sum without(mode) (avg without (cpu) (rate(node_cpu_seconds_total{job="node-exporter", mode!="idle"}[2m]))) * 100 > 90
      for: 15m
      labels:
        severity: info
        alertgroup: Cluster
    - alert: NodeSystemSaturation
      annotations:
        description: 'System load per core at {{ $labels.instance }} has been above 2 for the last 15 minutes, is currently at {{ printf "%.2f" $value }}.

          This might indicate this instance resources saturation and can cause it becoming unresponsive.

          '
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodesystemsaturation
        summary: System saturated, load per core is very high.
      expr: |-
        node_load1{job="node-exporter"}
        / count without (cpu, mode) (node_cpu_seconds_total{job="node-exporter", mode="idle"}) > 2
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: NodeMemoryMajorPagesFaults
      annotations:
        description: 'Memory major pages are occurring at very high rate at {{ $labels.instance }}, 500 major page faults per second for the last 15 minutes, is currently at {{ printf "%.2f" $value }}.

          Please check that there is enough memory available at this instance.

          '
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodememorymajorpagesfaults
        summary: Memory major page faults are occurring at very high rate.
      expr: rate(node_vmstat_pgmajfault{job="node-exporter"}[5m]) > 500
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: NodeMemoryHighUtilization
      annotations:
        description: 'Memory is filling up at {{ $labels.instance }}, has been above 90% for the last 15 minutes, is currently at {{ printf "%.2f" $value }}%.

          '
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodememoryhighutilization
        summary: Host is running out of memory.
      expr: 100 - (node_memory_MemAvailable_bytes{job="node-exporter"} / node_memory_MemTotal_bytes{job="node-exporter"} * 100) > 90
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: NodeDiskIOSaturation
      annotations:
        description: 'Disk IO queue (aqu-sq) is high on {{ $labels.device }} at {{ $labels.instance }}, has been above 10 for the last 15 minutes, is currently at {{ printf "%.2f" $value }}.

          This symptom might indicate disk saturation.

          '
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodediskiosaturation
        summary: Disk IO queue is high.
      expr: rate(node_disk_io_time_weighted_seconds_total{job="node-exporter", device=~"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|md.+|dasd.+)"}[5m]) > 10
      for: 30m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: NodeSystemdServiceFailed
      annotations:
        description: Systemd service {{ $labels.name }} has entered failed state at {{ $labels.instance }}
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodesystemdservicefailed
        summary: Systemd service has entered failed state.
      expr: node_systemd_unit_state{job="node-exporter", state="failed"} == 1
      for: 5m
      labels:
        severity: warning
        alertgroup: Cluster
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/rules-1.14/node-network.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kube-prometheus-node-network
  namespace: default
  labels:
    app: kube-prometheus-stack
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
    prometheus_rule: "1"
spec:
  groups:
  - name: node-network
    rules:
    - alert: NodeNetworkInterfaceFlapping
      annotations:
        description: Network interface "{{ $labels.device }}" changing its up status often on node-exporter {{ $labels.namespace }}/{{ $labels.pod }}
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/general/nodenetworkinterfaceflapping
        summary: Network interface is often changing its status
      expr: changes(node_network_up{job="node-exporter",device!~"veth.+"}[2m]) > 2
      for: 2m
      labels:
        severity: warning
        alertgroup: Cluster
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/rules-1.14/node.rules.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kube-prometheus-node.rules
  namespace: default
  labels:
    app: kube-prometheus-stack
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
    prometheus_rule: "1"
spec:
  groups:
  - name: node.rules
    rules:
    - expr: |-
        topk by(cluster, namespace, pod) (1,
          max by (cluster, node, namespace, pod) (
            label_replace(kube_pod_info{job="kube-state-metrics",node!=""}, "pod", "$1", "pod", "(.*)")
        ))
      record: 'node_namespace_pod:kube_pod_info:'
      labels:
        alertgroup: Cluster
    - expr: |-
        count by (cluster, node) (
          node_cpu_seconds_total{mode="idle",job="node-exporter"}
          * on (namespace, pod) group_left(node)
          topk by(namespace, pod) (1, node_namespace_pod:kube_pod_info:)
        )
      record: node:node_num_cpu:sum
      labels:
        alertgroup: Cluster
    - expr: |-
        sum(
          node_memory_MemAvailable_bytes{job="node-exporter"} or
          (
            node_memory_Buffers_bytes{job="node-exporter"} +
            node_memory_Cached_bytes{job="node-exporter"} +
            node_memory_MemFree_bytes{job="node-exporter"} +
            node_memory_Slab_bytes{job="node-exporter"}
          )
        ) by (cluster)
      record: :node_memory_MemAvailable_bytes:sum
      labels:
        alertgroup: Cluster
    - expr: |-
        avg by (cluster, node) (
          sum without (mode) (
            rate(node_cpu_seconds_total{mode!="idle",mode!="iowait",mode!="steal",job="node-exporter"}[5m])
          )
        )
      record: node:node_cpu_utilization:ratio_rate5m
      labels:
        alertgroup: Cluster
    - expr: |-
        avg by (cluster) (
          node:node_cpu_utilization:ratio_rate5m
        )
      record: cluster:node_cpu:ratio_rate5m
      labels:
        alertgroup: Cluster
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/rules-1.14/prometheus-operator.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kube-prometheus-prometheus-operator
  namespace: default
  labels:
    app: kube-prometheus-stack
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
    prometheus_rule: "1"
spec:
  groups:
  - name: prometheus-operator
    rules:
    - alert: PrometheusOperatorListErrors
      annotations:
        description: Errors while performing List operations in controller {{$labels.controller}} in {{$labels.namespace}} namespace.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatorlisterrors
        summary: Errors while performing list operations in controller.
      expr: (sum by (cluster,controller,namespace) (rate(prometheus_operator_list_operations_failed_total{job="kube-prometheus-operator",namespace="default"}[10m])) / sum by (cluster,controller,namespace) (rate(prometheus_operator_list_operations_total{job="kube-prometheus-operator",namespace="default"}[10m]))) > 0.4
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: PrometheusOperatorWatchErrors
      annotations:
        description: Errors while performing watch operations in controller {{$labels.controller}} in {{$labels.namespace}} namespace.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatorwatcherrors
        summary: Errors while performing watch operations in controller.
      expr: (sum by (cluster,controller,namespace) (rate(prometheus_operator_watch_operations_failed_total{job="kube-prometheus-operator",namespace="default"}[5m])) / sum by (cluster,controller,namespace) (rate(prometheus_operator_watch_operations_total{job="kube-prometheus-operator",namespace="default"}[5m]))) > 0.4
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: PrometheusOperatorSyncFailed
      annotations:
        description: Controller {{ $labels.controller }} in {{ $labels.namespace }} namespace fails to reconcile {{ $value }} objects.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatorsyncfailed
        summary: Last controller reconciliation failed
      expr: min_over_time(prometheus_operator_syncs{status="failed",job="kube-prometheus-operator",namespace="default"}[5m]) > 0
      for: 10m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: PrometheusOperatorReconcileErrors
      annotations:
        description: '{{ $value | humanizePercentage }} of reconciling operations failed for {{ $labels.controller }} controller in {{ $labels.namespace }} namespace.'
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatorreconcileerrors
        summary: Errors while reconciling controller.
      expr: (sum by (cluster,controller,namespace) (rate(prometheus_operator_reconcile_errors_total{job="kube-prometheus-operator",namespace="default"}[5m]))) / (sum by (cluster,controller,namespace) (rate(prometheus_operator_reconcile_operations_total{job="kube-prometheus-operator",namespace="default"}[5m]))) > 0.1
      for: 10m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: PrometheusOperatorNodeLookupErrors
      annotations:
        description: Errors while reconciling Prometheus in {{ $labels.namespace }} Namespace.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatornodelookuperrors
        summary: Errors while reconciling Prometheus.
      expr: rate(prometheus_operator_node_address_lookup_errors_total{job="kube-prometheus-operator",namespace="default"}[5m]) > 0.1
      for: 10m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: PrometheusOperatorNotReady
      annotations:
        description: Prometheus operator in {{ $labels.namespace }} namespace isn't ready to reconcile {{ $labels.controller }} resources.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatornotready
        summary: Prometheus operator not ready
      expr: min by (cluster,controller,namespace) (max_over_time(prometheus_operator_ready{job="kube-prometheus-operator",namespace="default"}[5m]) == 0)
      for: 5m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: PrometheusOperatorRejectedResources
      annotations:
        description: Prometheus operator in {{ $labels.namespace }} namespace rejected {{ printf "%0.0f" $value }} {{ $labels.controller }}/{{ $labels.resource }} resources.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatorrejectedresources
        summary: Resources rejected by Prometheus operator
      expr: min_over_time(prometheus_operator_managed_resources{state="rejected",job="kube-prometheus-operator",namespace="default"}[5m]) > 0
      for: 5m
      labels:
        severity: warning
        alertgroup: Cluster
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/rules-1.14/prometheus.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kube-prometheus-prometheus
  namespace: default
  labels:
    app: kube-prometheus-stack
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
    prometheus_rule: "1"
spec:
  groups:
  - name: prometheus
    rules:
    - alert: PrometheusBadConfig
      annotations:
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed to reload its configuration.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusbadconfig
        summary: Failed Prometheus configuration reload.
      expr: |-
        # Without max_over_time, failed scrapes could create false negatives, see
        # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
        max_over_time(prometheus_config_last_reload_successful{job="kube-prometheus-prometheus",namespace="default"}[5m]) == 0
      for: 10m
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: PrometheusSDRefreshFailure
      annotations:
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed to refresh SD with mechanism {{$labels.mechanism}}.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheussdrefreshfailure
        summary: Failed Prometheus SD refresh.
      expr: increase(prometheus_sd_refresh_failures_total{job="kube-prometheus-prometheus",namespace="default"}[10m]) > 0
      for: 20m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: PrometheusNotificationQueueRunningFull
      annotations:
        description: Alert notification queue of Prometheus {{$labels.namespace}}/{{$labels.pod}} is running full.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusnotificationqueuerunningfull
        summary: Prometheus alert notification queue predicted to run full in less than 30m.
      expr: |-
        # Without min_over_time, failed scrapes could create false negatives, see
        # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
        (
          predict_linear(prometheus_notifications_queue_length{job="kube-prometheus-prometheus",namespace="default"}[5m], 60 * 30)
        >
          min_over_time(prometheus_notifications_queue_capacity{job="kube-prometheus-prometheus",namespace="default"}[5m])
        )
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: PrometheusErrorSendingAlertsToSomeAlertmanagers
      annotations:
        description: '{{ printf "%.1f" $value }}% errors while sending alerts from Prometheus {{$labels.namespace}}/{{$labels.pod}} to Alertmanager {{$labels.alertmanager}}.'
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheuserrorsendingalertstosomealertmanagers
        summary: Prometheus has encountered more than 1% errors sending alerts to a specific Alertmanager.
      expr: |-
        (
          rate(prometheus_notifications_errors_total{job="kube-prometheus-prometheus",namespace="default"}[5m])
        /
          rate(prometheus_notifications_sent_total{job="kube-prometheus-prometheus",namespace="default"}[5m])
        )
        * 100
        > 1
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: PrometheusNotConnectedToAlertmanagers
      annotations:
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} is not connected to any Alertmanagers.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusnotconnectedtoalertmanagers
        summary: Prometheus is not connected to any Alertmanagers.
      expr: |-
        # Without max_over_time, failed scrapes could create false negatives, see
        # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
        max_over_time(prometheus_notifications_alertmanagers_discovered{job="kube-prometheus-prometheus",namespace="default"}[5m]) < 1
      for: 10m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: PrometheusTSDBReloadsFailing
      annotations:
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has detected {{$value | humanize}} reload failures over the last 3h.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheustsdbreloadsfailing
        summary: Prometheus has issues reloading blocks from disk.
      expr: increase(prometheus_tsdb_reloads_failures_total{job="kube-prometheus-prometheus",namespace="default"}[3h]) > 0
      for: 4h
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: PrometheusTSDBCompactionsFailing
      annotations:
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has detected {{$value | humanize}} compaction failures over the last 3h.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheustsdbcompactionsfailing
        summary: Prometheus has issues compacting blocks.
      expr: increase(prometheus_tsdb_compactions_failed_total{job="kube-prometheus-prometheus",namespace="default"}[3h]) > 0
      for: 4h
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: PrometheusNotIngestingSamples
      annotations:
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} is not ingesting samples.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusnotingestingsamples
        summary: Prometheus is not ingesting samples.
      expr: |-
        (
          rate(prometheus_tsdb_head_samples_appended_total{job="kube-prometheus-prometheus",namespace="default"}[5m]) <= 0
        and
          (
            sum without(scrape_job) (prometheus_target_metadata_cache_entries{job="kube-prometheus-prometheus",namespace="default"}) > 0
          or
            sum without(rule_group) (prometheus_rule_group_rules{job="kube-prometheus-prometheus",namespace="default"}) > 0
          )
        )
      for: 10m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: PrometheusDuplicateTimestamps
      annotations:
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} is dropping {{ printf "%.4g" $value  }} samples/s with different values but duplicated timestamp.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusduplicatetimestamps
        summary: Prometheus is dropping samples with duplicate timestamps.
      expr: rate(prometheus_target_scrapes_sample_duplicate_timestamp_total{job="kube-prometheus-prometheus",namespace="default"}[5m]) > 0
      for: 10m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: PrometheusOutOfOrderTimestamps
      annotations:
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} is dropping {{ printf "%.4g" $value  }} samples/s with timestamps arriving out of order.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusoutofordertimestamps
        summary: Prometheus drops samples with out-of-order timestamps.
      expr: rate(prometheus_target_scrapes_sample_out_of_order_total{job="kube-prometheus-prometheus",namespace="default"}[5m]) > 0
      for: 10m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: PrometheusRemoteStorageFailures
      annotations:
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} failed to send {{ printf "%.1f" $value }}% of the samples to {{ $labels.remote_name}}:{{ $labels.url }}
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusremotestoragefailures
        summary: Prometheus fails to send samples to remote storage.
      expr: |-
        (
          (rate(prometheus_remote_storage_failed_samples_total{job="kube-prometheus-prometheus",namespace="default"}[5m]) or rate(prometheus_remote_storage_samples_failed_total{job="kube-prometheus-prometheus",namespace="default"}[5m]))
        /
          (
            (rate(prometheus_remote_storage_failed_samples_total{job="kube-prometheus-prometheus",namespace="default"}[5m]) or rate(prometheus_remote_storage_samples_failed_total{job="kube-prometheus-prometheus",namespace="default"}[5m]))
          +
            (rate(prometheus_remote_storage_succeeded_samples_total{job="kube-prometheus-prometheus",namespace="default"}[5m]) or rate(prometheus_remote_storage_samples_total{job="kube-prometheus-prometheus",namespace="default"}[5m]))
          )
        )
        * 100
        > 1
      for: 15m
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: PrometheusRemoteWriteBehind
      annotations:
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} remote write is {{ printf "%.1f" $value }}s behind for {{ $labels.remote_name}}:{{ $labels.url }}.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusremotewritebehind
        summary: Prometheus remote write is behind.
      expr: |-
        # Without max_over_time, failed scrapes could create false negatives, see
        # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
        (
          max_over_time(prometheus_remote_storage_highest_timestamp_in_seconds{job="kube-prometheus-prometheus",namespace="default"}[5m])
        - ignoring(remote_name, url) group_right
          max_over_time(prometheus_remote_storage_queue_highest_sent_timestamp_seconds{job="kube-prometheus-prometheus",namespace="default"}[5m])
        )
        > 120
      for: 15m
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: PrometheusRemoteWriteDesiredShards
      annotations:
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} remote write desired shards calculation wants to run {{ $value }} shards for queue {{ $labels.remote_name}}:{{ $labels.url }}, which is more than the max of {{ printf `prometheus_remote_storage_shards_max{instance="%s",job="kube-prometheus-prometheus",namespace="default"}` $labels.instance | query | first | value }}.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusremotewritedesiredshards
        summary: Prometheus remote write desired shards calculation wants to run more than configured max shards.
      expr: |-
        # Without max_over_time, failed scrapes could create false negatives, see
        # https://www.robustperception.io/alerting-on-gauges-in-prometheus-2-0 for details.
        (
          max_over_time(prometheus_remote_storage_shards_desired{job="kube-prometheus-prometheus",namespace="default"}[5m])
        >
          max_over_time(prometheus_remote_storage_shards_max{job="kube-prometheus-prometheus",namespace="default"}[5m])
        )
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: PrometheusRuleFailures
      annotations:
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed to evaluate {{ printf "%.0f" $value }} rules in the last 5m.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusrulefailures
        summary: Prometheus is failing rule evaluations.
      expr: increase(prometheus_rule_evaluation_failures_total{job="kube-prometheus-prometheus",namespace="default"}[5m]) > 0
      for: 15m
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: PrometheusMissingRuleEvaluations
      annotations:
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has missed {{ printf "%.0f" $value }} rule group evaluations in the last 5m.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusmissingruleevaluations
        summary: Prometheus is missing rule evaluations due to slow rule group evaluation.
      expr: increase(prometheus_rule_group_iterations_missed_total{job="kube-prometheus-prometheus",namespace="default"}[5m]) > 0
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: PrometheusTargetLimitHit
      annotations:
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has dropped {{ printf "%.0f" $value }} targets because the number of targets exceeded the configured target_limit.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheustargetlimithit
        summary: Prometheus has dropped targets because some scrape configs have exceeded the targets limit.
      expr: increase(prometheus_target_scrape_pool_exceeded_target_limit_total{job="kube-prometheus-prometheus",namespace="default"}[5m]) > 0
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: PrometheusLabelLimitHit
      annotations:
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has dropped {{ printf "%.0f" $value }} targets because some samples exceeded the configured label_limit, label_name_length_limit or label_value_length_limit.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheuslabellimithit
        summary: Prometheus has dropped targets because some scrape configs have exceeded the labels limit.
      expr: increase(prometheus_target_scrape_pool_exceeded_label_limits_total{job="kube-prometheus-prometheus",namespace="default"}[5m]) > 0
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: PrometheusScrapeBodySizeLimitHit
      annotations:
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed {{ printf "%.0f" $value }} scrapes in the last 5m because some targets exceeded the configured body_size_limit.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusscrapebodysizelimithit
        summary: Prometheus has dropped some targets that exceeded body size limit.
      expr: increase(prometheus_target_scrapes_exceeded_body_size_limit_total{job="kube-prometheus-prometheus",namespace="default"}[5m]) > 0
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: PrometheusScrapeSampleLimitHit
      annotations:
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed {{ printf "%.0f" $value }} scrapes in the last 5m because some targets exceeded the configured sample_limit.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheusscrapesamplelimithit
        summary: Prometheus has failed scrapes that have exceeded the configured sample limit.
      expr: increase(prometheus_target_scrapes_exceeded_sample_limit_total{job="kube-prometheus-prometheus",namespace="default"}[5m]) > 0
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: PrometheusTargetSyncFailure
      annotations:
        description: '{{ printf "%.0f" $value }} targets in Prometheus {{$labels.namespace}}/{{$labels.pod}} have failed to sync because invalid configuration was supplied.'
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheustargetsyncfailure
        summary: Prometheus has failed to sync targets.
      expr: increase(prometheus_target_sync_failed_total{job="kube-prometheus-prometheus",namespace="default"}[30m]) > 0
      for: 5m
      labels:
        severity: critical
        alertgroup: Cluster
    - alert: PrometheusHighQueryLoad
      annotations:
        description: Prometheus {{$labels.namespace}}/{{$labels.pod}} query API has less than 20% available capacity in its query engine for the last 15 minutes.
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheushighqueryload
        summary: Prometheus is reaching its maximum capacity serving concurrent requests.
      expr: avg_over_time(prometheus_engine_queries{job="kube-prometheus-prometheus",namespace="default"}[5m]) / max_over_time(prometheus_engine_queries_concurrent_max{job="kube-prometheus-prometheus",namespace="default"}[5m]) > 0.8
      for: 15m
      labels:
        severity: warning
        alertgroup: Cluster
    - alert: PrometheusErrorSendingAlertsToAnyAlertmanager
      annotations:
        description: '{{ printf "%.1f" $value }}% minimum errors while sending alerts from Prometheus {{$labels.namespace}}/{{$labels.pod}} to any Alertmanager.'
        runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus/prometheuserrorsendingalertstoanyalertmanager
        summary: Prometheus encounters more than 3% errors sending alerts to any Alertmanager.
      expr: |-
        min without (alertmanager) (
          rate(prometheus_notifications_errors_total{job="kube-prometheus-prometheus",namespace="default",alertmanager!~``}[5m])
        /
          rate(prometheus_notifications_sent_total{job="kube-prometheus-prometheus",namespace="default",alertmanager!~``}[5m])
        )
        * 100
        > 3
      for: 15m
      labels:
        severity: critical
        alertgroup: Cluster
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/charts/grafana/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: release-name-grafana
  namespace: default
  labels:
    helm.sh/chart: grafana-6.60.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "10.1.5"
    app.kubernetes.io/managed-by: Helm
spec:
  endpoints:
  - port: http-web
    scrapeTimeout: 30s
    honorLabels: true
    path: /metrics
    scheme: http
  jobLabel: "release-name"
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: release-name
  namespaceSelector:
    matchNames:
      - default
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/charts/kube-state-metrics/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: release-name-kube-state-metrics
  namespace: default
  labels:    
    helm.sh/chart: kube-state-metrics-5.14.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.10.0"
    release: release-name
spec:
  jobLabel: app.kubernetes.io/name  
  selector:
    matchLabels:      
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/instance: release-name
  endpoints:
    - port: http
      honorLabels: true
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/charts/prometheus-node-exporter/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: release-name-prometheus-node-exporter
  namespace: default
  labels:
    helm.sh/chart: prometheus-node-exporter-4.23.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: prometheus-node-exporter
    app.kubernetes.io/name: prometheus-node-exporter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.6.1"
    jobLabel: node-exporter
    release: release-name
spec:
  jobLabel: jobLabel
  
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus-node-exporter
      app.kubernetes.io/instance: release-name
  attachMetadata:
    node: false
  endpoints:
    - port: http-metrics
      scheme: http
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/alertmanager/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kube-prometheus-alertmanager
  namespace: default
  labels:
    app: kube-prometheus-stack-alertmanager
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
spec:
  
  selector:
    matchLabels:
      app: kube-prometheus-stack-alertmanager
      release: "release-name"
      self-monitor: "true"
  namespaceSelector:
    matchNames:
      - "default"
  endpoints:
  - port: http-web
    enableHttp2: true
    path: "/metrics"
  - port: reloader-web
    scheme: http
    path: "/metrics"
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/exporters/core-dns/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kube-prometheus-coredns
  namespace: default
  labels:
    app: kube-prometheus-stack-coredns
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
spec:
  jobLabel: jobLabel
  
  selector:
    matchLabels:
      app: kube-prometheus-stack-coredns
      release: "release-name"
  namespaceSelector:
    matchNames:
      - "kube-system"
  endpoints:
  - port: http-metrics
    bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/exporters/kube-api-server/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kube-prometheus-apiserver
  namespace: default
  labels:
    app: kube-prometheus-stack-apiserver
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
spec:
  
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    port: https
    scheme: https
    metricRelabelings:
      - action: drop
        regex: apiserver_request_duration_seconds_bucket;(0.15|0.2|0.3|0.35|0.4|0.45|0.6|0.7|0.8|0.9|1.25|1.5|1.75|2|3|3.5|4|4.5|6|7|8|9|15|25|40|50)
        sourceLabels:
        - __name__
        - le
    tlsConfig:
      caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      serverName: kubernetes
      insecureSkipVerify: false
  jobLabel: component
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      component: apiserver
      provider: kubernetes
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/exporters/kube-controller-manager/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kube-prometheus-kube-controller-manager
  namespace: default
  labels:
    app: kube-prometheus-stack-kube-controller-manager
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
spec:
  jobLabel: jobLabel
  
  selector:
    matchLabels:
      app: kube-prometheus-stack-kube-controller-manager
      release: "release-name"
  namespaceSelector:
    matchNames:
      - "kube-system"
  endpoints:
  - port: http-metrics
    bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    scheme: https
    tlsConfig:
      caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecureSkipVerify: true
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/exporters/kube-etcd/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kube-prometheus-kube-etcd
  namespace: default
  labels:
    app: kube-prometheus-stack-kube-etcd
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
spec:
  jobLabel: jobLabel
    
  selector:
    matchLabels:
      app: kube-prometheus-stack-kube-etcd
      release: "release-name"
  namespaceSelector:
    matchNames:
      - "kube-system"
  endpoints:
  - port: http-metrics
    bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/exporters/kube-proxy/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kube-prometheus-kube-proxy
  namespace: default
  labels:
    app: kube-prometheus-stack-kube-proxy
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
spec:
  jobLabel: jobLabel
  
  selector:
    matchLabels:
      app: kube-prometheus-stack-kube-proxy
      release: "release-name"
  namespaceSelector:
    matchNames:
      - "kube-system"
  endpoints:
  - port: http-metrics
    bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/exporters/kube-scheduler/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kube-prometheus-kube-scheduler
  namespace: default
  labels:
    app: kube-prometheus-stack-kube-scheduler
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
spec:
  jobLabel: jobLabel
  
  selector:
    matchLabels:
      app: kube-prometheus-stack-kube-scheduler
      release: "release-name"
  namespaceSelector:
    matchNames:
      - "kube-system"
  endpoints:
  - port: http-metrics
    bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    scheme: https
    tlsConfig:
      caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecureSkipVerify: true
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/exporters/kubelet/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kube-prometheus-kubelet
  namespace: default
  labels:
    app: kube-prometheus-stack-kubelet    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
spec:
  
  attachMetadata:
    node: false
  endpoints:
  - port: https-metrics
    scheme: https
    tlsConfig:
      caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecureSkipVerify: true
    bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    honorLabels: true
    honorTimestamps: true
    relabelings:
    - action: replace
      sourceLabels:
      - __metrics_path__
      targetLabel: metrics_path
  - port: https-metrics
    scheme: https
    path: /metrics/cadvisor
    honorLabels: true
    honorTimestamps: true
    tlsConfig:
      caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecureSkipVerify: true
    bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    metricRelabelings:
    - action: drop
      regex: container_cpu_(cfs_throttled_seconds_total|load_average_10s|system_seconds_total|user_seconds_total)
      sourceLabels:
      - __name__
    - action: drop
      regex: container_fs_(io_current|io_time_seconds_total|io_time_weighted_seconds_total|reads_merged_total|sector_reads_total|sector_writes_total|writes_merged_total)
      sourceLabels:
      - __name__
    - action: drop
      regex: container_memory_(mapped_file|swap)
      sourceLabels:
      - __name__
    - action: drop
      regex: container_(file_descriptors|tasks_state|threads_max)
      sourceLabels:
      - __name__
    - action: drop
      regex: container_spec.*
      sourceLabels:
      - __name__
    - action: drop
      regex: .+;
      sourceLabels:
      - id
      - pod
    relabelings:
    - action: replace
      sourceLabels:
      - __metrics_path__
      targetLabel: metrics_path
  - port: https-metrics
    scheme: https
    path: /metrics/probes
    honorLabels: true
    honorTimestamps: true
    tlsConfig:
      caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecureSkipVerify: true
    bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabelings:
    - action: replace
      sourceLabels:
      - __metrics_path__
      targetLabel: metrics_path
  jobLabel: k8s-app
  namespaceSelector:
    matchNames:
    - kube-system
  selector:
    matchLabels:
      app.kubernetes.io/name: kubelet
      k8s-app: kubelet
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus-operator/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kube-prometheus-operator
  namespace: default
  labels:
    app: kube-prometheus-stack-operator
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
spec:
  
  endpoints:
  - port: https
    scheme: https
    tlsConfig:
      serverName: kube-prometheus-operator
      ca:
        secret:
          name: kube-prometheus-admission
          key: ca
          optional: false
    honorLabels: true
  selector:
    matchLabels:
      app: kube-prometheus-stack-operator
      release: "release-name"
  namespaceSelector:
    matchNames:
      - "default"
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kube-prometheus-prometheus
  namespace: default
  labels:
    app: kube-prometheus-stack-prometheus
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
spec:
  
  selector:
    matchLabels:
      app: kube-prometheus-stack-prometheus
      release: "release-name"
      self-monitor: "true"
  namespaceSelector:
    matchNames:
      - "default"
  endpoints:
  - port: http-web
    path: "/metrics"
  - port: reloader-web
    scheme: http
    path: "/metrics"
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus-operator/admission-webhooks/validatingWebhookConfiguration.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name:  kube-prometheus-admission
  labels:
    app: kube-prometheus-stack-admission    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
webhooks:
  - name: prometheusrulemutate.monitoring.coreos.com
    failurePolicy: Ignore
    rules:
      - apiGroups:
          - monitoring.coreos.com
        apiVersions:
          - "*"
        resources:
          - prometheusrules
        operations:
          - CREATE
          - UPDATE
    clientConfig:
      service:
        namespace: default
        name: kube-prometheus-operator
        path: /admission-prometheusrules/validate
    timeoutSeconds: 10
    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/charts/grafana/templates/tests/test-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: grafana-6.60.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "10.1.5"
    app.kubernetes.io/managed-by: Helm
  name: release-name-grafana-test
  namespace: default
  annotations:
    "helm.sh/hook": test-success
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus-operator/admission-webhooks/job-patch/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name:  kube-prometheus-admission
  namespace: default
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app: kube-prometheus-stack-admission    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/charts/grafana-agent-operator/templates/tests/test-grafanaagent.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana-agent-test-sa
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/charts/grafana/templates/tests/test-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-grafana-test
  namespace: default
  annotations:
    "helm.sh/hook": test-success
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
  labels:
    helm.sh/chart: grafana-6.60.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "10.1.5"
    app.kubernetes.io/managed-by: Helm
data:
  run.sh: |-
    @test "Test Health" {
      url="http://release-name-grafana/api/health"

      code=$(wget --server-response --spider --timeout 90 --tries 10 ${url} 2>&1 | awk '/^  HTTP/{print $2}')
      [ "$code" == "200" ]
    }
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus-operator/admission-webhooks/job-patch/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name:  kube-prometheus-admission
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app: kube-prometheus-stack-admission    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
      - mutatingwebhookconfigurations
    verbs:
      - get
      - update
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/charts/grafana-agent-operator/templates/tests/test-grafanaagent.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: grafana-agent-test-cr
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/proxy
  - nodes/metrics
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- nonResourceURLs:
  - /metrics
  - /metrics/cadvisor
  verbs:
  - get
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus-operator/admission-webhooks/job-patch/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name:  kube-prometheus-admission
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app: kube-prometheus-stack-admission    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-prometheus-admission
subjects:
  - kind: ServiceAccount
    name: kube-prometheus-admission
    namespace: default
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/charts/grafana-agent-operator/templates/tests/test-grafanaagent.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: grafana-agent-test-crb
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: grafana-agent-test-cr
subjects:
- kind: ServiceAccount
  name: grafana-agent-test-sa
  namespace: default
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus-operator/admission-webhooks/job-patch/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name:  kube-prometheus-admission
  namespace: default
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app: kube-prometheus-stack-admission    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - create
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus-operator/admission-webhooks/job-patch/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name:  kube-prometheus-admission
  namespace: default
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app: kube-prometheus-stack-admission    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kube-prometheus-admission
subjects:
  - kind: ServiceAccount
    name: kube-prometheus-admission
    namespace: default
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/charts/grafana/templates/tests/test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: release-name-grafana-test
  labels:
    helm.sh/chart: grafana-6.60.6
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "10.1.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
  namespace: default
spec:
  serviceAccountName: release-name-grafana-test
  containers:
    - name: release-name-test
      image: "docker.io/bats/bats:v1.4.1"
      imagePullPolicy: "IfNotPresent"
      command: ["/opt/bats/bin/bats", "-t", "/tests/run.sh"]
      volumeMounts:
        - mountPath: /tests
          name: tests
          readOnly: true
  volumes:
    - name: tests
      configMap:
        name: release-name-grafana-test
  restartPolicy: Never
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/charts/grafana-agent-operator/templates/tests/test-grafanaagent.yaml
apiVersion: v1
kind: Pod
metadata:
  name: grafana-agent-test-probe
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
spec:
  containers:
  - name: busybox
    image: busybox
    command: ['wget']
    args:  ['grafana-agent-test-operated:8080/-/healthy']
  # Wait for GrafanaAgent CR
  initContainers:
  - name: sleep
    image: busybox
    command: ['sleep', '60']
  restartPolicy: Never
---
# Source: dnation-kubernetes-monitoring-stack/charts/dnation-kubernetes-monitoring/charts/dnation-kubernetes-jsonnet-translator/templates/pre-delete-job.yaml
#
# Copyright 2020 The dNation Jsonnet Translator Authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: batch/v1
kind: Job
metadata:
  name: dnation-kubernetes-jsonnet-translator
  labels:
    app: dnation-kubernetes-jsonnet-translator
    helm.sh/chart: dnation-kubernetes-jsonnet-translator-1.0.3
    app.kubernetes.io/name: dnation-kubernetes-jsonnet-translator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      labels:
        app: dnation-kubernetes-jsonnet-translator
        app.kubernetes.io/name: dnation-kubernetes-jsonnet-translator
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-dnation-kubernetes-jsonnet-translator
      securityContext:
        {}
      restartPolicy: Never
      containers:
        - name: dnation-kubernetes-jsonnet-translator
          securityContext:
            {}
          image: "dnationcloud/kubernetes-jsonnet-translator:1.0.3"
          imagePullPolicy: IfNotPresent
          command: ["python","-u","translator/main.py"]
          args:
            - --delete_resources
            - --target_namespace
            - "default"
          
            - --libsonnet
          
            - https://github.com/grafana/grafonnet-lib/grafonnet@daad85cf3fad3580e58029414630e29956aefe21
          
            - https://github.com/thelastpickle/grafonnet-polystat-panel@275a48de57afdac0d72219d82863d8ab8bd0e682
          
          resources:
            {}
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus-operator/admission-webhooks/job-patch/job-createSecret.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name:  kube-prometheus-admission-create
  namespace: default
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded   
  labels:
    app: kube-prometheus-stack-admission-create    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
spec:
  template:
    metadata:
      name:  kube-prometheus-admission-create
      labels:
        app: kube-prometheus-stack-admission-create        
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "53.0.0"
        app.kubernetes.io/part-of: kube-prometheus-stack
        chart: kube-prometheus-stack-53.0.0
        release: "release-name"
        heritage: "Helm"
    spec:
      containers:
        - name: create
          image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20221220-controller-v1.5.1-58-g787ea74b6
          imagePullPolicy: IfNotPresent
          args:
            - create
            - --host=kube-prometheus-operator,kube-prometheus-operator.default.svc
            - --namespace=default
            - --secret-name=kube-prometheus-admission
          securityContext:
          
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          resources:
            {}
      restartPolicy: OnFailure
      serviceAccountName: kube-prometheus-admission
      securityContext:
        runAsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
        seccompProfile:
          type: RuntimeDefault
---
# Source: dnation-kubernetes-monitoring-stack/charts/kube-prometheus-stack/templates/prometheus-operator/admission-webhooks/job-patch/job-patchWebhook.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name:  kube-prometheus-admission-patch
  namespace: default
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded   
  labels:
    app: kube-prometheus-stack-admission-patch    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "53.0.0"
    app.kubernetes.io/part-of: kube-prometheus-stack
    chart: kube-prometheus-stack-53.0.0
    release: "release-name"
    heritage: "Helm"
spec:
  template:
    metadata:
      name:  kube-prometheus-admission-patch
      labels:
        app: kube-prometheus-stack-admission-patch        
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "53.0.0"
        app.kubernetes.io/part-of: kube-prometheus-stack
        chart: kube-prometheus-stack-53.0.0
        release: "release-name"
        heritage: "Helm"
    spec:
      containers:
        - name: patch
          image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20221220-controller-v1.5.1-58-g787ea74b6
          imagePullPolicy: IfNotPresent
          args:
            - patch
            - --webhook-name=kube-prometheus-admission
            - --namespace=default
            - --secret-name=kube-prometheus-admission
            - --patch-failure-policy=
          securityContext:
          
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          resources:
            {}
      restartPolicy: OnFailure
      serviceAccountName: kube-prometheus-admission
      securityContext:
        runAsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
        seccompProfile:
          type: RuntimeDefault
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/charts/grafana-agent-operator/templates/tests/test-grafanaagent.yaml
apiVersion: monitoring.grafana.com/v1alpha1
kind: GrafanaAgent
metadata:
  name: grafana-agent-test
  labels:
    app: grafana-agent-test
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
spec:
  image: "docker.io/grafana/agent:v0.25.1"
  logLevel: info
  serviceAccountName: grafana-agent-test-sa
  metrics:
    instanceSelector:
      matchLabels:
        agent: grafana-agent-test
---
# Source: dnation-kubernetes-monitoring-stack/charts/loki/charts/grafana-agent-operator/templates/tests/test-grafanaagent.yaml
apiVersion: monitoring.grafana.com/v1alpha1
kind: MetricsInstance
metadata:
  name: primary-test
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
  labels:
    agent: grafana-agent-test
spec: {}
