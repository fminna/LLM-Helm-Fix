---
# Source: cole/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-cole
  labels:
    helm.sh/chart: cole-1.4.2
    app.kubernetes.io/name: cole
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.2.3"
    app.kubernetes.io/managed-by: Helm
---
# Source: cole/templates/grafana-api-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-cole-grafana-api
type: Opaque
stringData:
  grafana-api.yaml: |-
    address: ""
    apiKey: ""
---
# Source: cole/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cole
rules:
  - apiGroups: [""]
    resources: 
    - "pods"
    - "pods/log"
    verbs:
    - get
    - list
    - watch
---
# Source: cole/templates/rolebind.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-cole
subjects:
- kind: ServiceAccount
  name: release-name-cole
  namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-cole
  apiGroup: rbac.authorization.k8s.io
---
# Source: cole/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-cole
  labels:
    helm.sh/chart: cole-1.4.2
    app.kubernetes.io/name: cole
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.2.3"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: cole
    app.kubernetes.io/instance: release-name
---
# Source: cole/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-cole
  labels:
    helm.sh/chart: cole-1.4.2
    app.kubernetes.io/name: cole
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.2.3"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cole
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cole
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-cole
      securityContext:
        {}
      containers:
        - name: cole
          args:
            - server
            - --log.level=debug
            - --grafana.namespace=grafana
            - --grafana.podLabelselector=app.kubernetes.io/name=grafana
            - --grafana.log.format=console
            - --grafana.containerName=grafana
            - --metrics.includeUname=false
            - --grafana.apiConfigFile=/tmp/grafana/grafana-api.yaml
          securityContext:
            readOnlyRootFilesystem: true
          image: "ntakashi/cole:1.2.3"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 9754
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /-/health
              port: http
          readinessProbe:
            httpGet:
              path: /-/ready
              port: http
          resources:
            {}
          volumeMounts:
            - mountPath: /tmp/grafana
              name: grafana-api
      volumes:
        - name: grafana-api
          secret: 
            secretName: release-name-cole-grafana-api
