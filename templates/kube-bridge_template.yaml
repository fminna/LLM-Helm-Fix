---
# Source: kube-bridge/templates/base.yaml
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kube-bridge
  labels:
    helm.sh/chart: kube-bridge-1.0.0
    app.kubernetes.io/name: kube-bridge
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kube-bridge/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-kube-bridge
  labels:
        helm.sh/chart: kube-bridge-1.0.0
        app.kubernetes.io/name: kube-bridge
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: ["modules.krateo.io"]
    resources: ["*"]
    verbs: ["*"]
  
  - apiGroups: ["templates.krateo.io"]
    resources: ["*"]
    verbs: ["*"]

  - apiGroups: ["pkg.crossplane.io"]
    resources: ["configurations"]
    verbs: ["list", "get", "create", "delete", "update", "watch"]
  
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "watch", "list"]

  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["*"]
---
# Source: kube-bridge/templates/clusterrolebindings.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kube-bridge
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-kube-bridge
subjects:
- kind: ServiceAccount
  name: release-name-kube-bridge
  namespace: default
---
# Source: kube-bridge/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: release-name-kube-bridge
  labels:
        helm.sh/chart: kube-bridge-1.0.0
        app.kubernetes.io/name: kube-bridge
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "create", "delete"]
---
# Source: kube-bridge/templates/rolebindings.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-kube-bridge
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-kube-bridge
subjects:
- kind: ServiceAccount
  name: release-name-kube-bridge
  namespace: default
---
# Source: kube-bridge/templates/base.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-service
  labels:
    helm.sh/chart: kube-bridge-1.0.0
    app.kubernetes.io/name: kube-bridge
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 8171
  selector:
    app.kubernetes.io/name: kube-bridge
    app.kubernetes.io/instance: release-name
---
# Source: kube-bridge/templates/base.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  kube-bridge
  namespace: default
  labels:
    helm.sh/chart: kube-bridge-1.0.0
    app.kubernetes.io/name: kube-bridge
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-bridge
      app.kubernetes.io/instance: release-name
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        helm.sh/chart: kube-bridge-1.0.0
        app.kubernetes.io/name: kube-bridge
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      terminationGracePeriodSeconds: 60
      serviceAccountName: release-name-kube-bridge
      securityContext:
        {}
      containers:
        - name: kube-bridge
          securityContext:
            {}
          image: "ghcr.io/krateoplatformops/kube-bridge:1.0.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8171
              protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 50m
              memory: 128Mi
          envFrom:
            - configMapRef:
                name: krateo-uri-config
          env:
            - name: KUBE_BRIDGE_DEBUG
              value: "true"
            - name: KUBE_BRIDGE_PORT
              value: "8171"
---
# Source: kube-bridge/templates/base.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-ingress
  labels:
    helm.sh/chart: kube-bridge-1.0.0
    app.kubernetes.io/name: kube-bridge
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: kong
spec:
  rules:
    - host: "bridge.krateo.site"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: release-name-service
                port: 
                  number: 80
