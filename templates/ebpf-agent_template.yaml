---
# Source: ebpf-agent/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-ebpf-agent
  annotations:
  labels:
    app: "release-name-ebpf-agent"
    chart: "ebpf-agent-1.1.18"
    heritage: "Helm"
    release: "release-name"
---
# Source: ebpf-agent/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-ebpf-agent
  labels:
    helm.sh/chart: ebpf-agent-1.1.18
    app.kubernetes.io/name: ebpf-agent
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
data:
  easy_monitor.yaml: |-
    easy_agent:
        name: "easy_monitor"
        unix_listen:
            proto: unix
            addr: unix:///usr/local/easyops/agent/plugin.sock
    resource_usage:
        samplers: []
---
# Source: ebpf-agent/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-ebpf-agent-cluster-role
  labels:
    app: "release-name-ebpf-agent"
    chart: "ebpf-agent-1.1.18"
    heritage: "Helm"
    release: "release-name"
rules: 
  - apiGroups:
    - ""
    resources:
    - nodes
    - namespaces
    - events
    - pods
    - services
    - endpoints
    - configmaps
    - persistentvolumeclaims
    - persistentvolumes
    - resourcequotas
    - secrets
    - limitranges
    - serviceaccounts
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - get
    - create
    - update
  - apiGroups:
    - apps
    resources:
    - statefulsets
    - daemonsets
    - deployments
    - replicasets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - jobs
    - cronjobs
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - ingressclasses
    - networkpolicies
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - roles
    - rolebindings
    - clusterroles
    - clusterrolebindings
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apiextensions.k8s.io
    resources:
    - customresourcedefinitions
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes/stats
    verbs:
    - get
  - nonResourceURLs:
    - /metrics
    verbs:
    - get
---
# Source: ebpf-agent/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-ebpf-agent-cluster-role-binding
  labels:
    app: "release-name-ebpf-agent"
    chart: "ebpf-agent-1.1.18"
    heritage: "Helm"
    release: "release-name"
roleRef:
  kind: ClusterRole
  name: release-name-ebpf-agent-cluster-role
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: release-name-ebpf-agent
  namespace: default
---
# Source: ebpf-agent/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: release-name-ebpf-agent
  labels:
    helm.sh/chart: ebpf-agent-1.1.18
    app.kubernetes.io/name: ebpf-agent
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ebpf-agent
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ebpf-agent
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-ebpf-agent
      hostNetwork: true
      securityContext:
        null
      volumes:
      - name: sampler-volume
        emptyDir: {}
      - name: sampler-pkg-volume
        emptyDir: {}
      - name: metric-sampler-volume
        emptyDir: {}
      - name: metric-sampler-pkg-volume
        emptyDir: {}
      - name: host-proc-path
        hostPath:
          path: /proc
      - name: default-netns-path
        hostPath:
          path: /var/run/netns
      - name: docker-netns-path
        hostPath:
          path: /var/run/docker/netns
      - name: config
        configMap:
          name: release-name-ebpf-agent
      containers:
        - name: ebpf-agent
          securityContext:
            null
          image: "registry.cn-hangzhou.aliyuncs.com/easyops/agent-ebpf:3.45.32"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 1000m
              memory: 4096Mi
            requests:
              cpu: 500m
              memory: 2048Mi
          securityContext:
            capabilities:
              add:
              - SYS_PTRACE
              - SYS_ADMIN
            privileged: true
          env:
            - name: S6_KEEP_ENV
              value: "1"
            - name: AGENT_KEY
              value: 
            - name: SERVER_ADDR
              value: 
            - name: HOST_FS
              value: "/rootfs"
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: SCAN_NAMESPACES
              value: 
            - name: SCAN_RESOURCE_TYPES
              value: 
            - name: SPECIFIED_CLUSTER_ID
              value: 
          volumeMounts:
            - name: sampler-volume
              mountPath: /usr/local/easyops/easy_process_sampler
              subPath: easy_process_sampler
            - name: sampler-pkg-volume
              mountPath: /usr/local/easyops/pkg/conf/process_sampler_linux
              subPath: process_sampler_linux
            - name: metric-sampler-volume
              mountPath: /usr/local/easyops/easy_metric_sampler
              subPath: easy_metric_sampler
            - name: metric-sampler-pkg-volume
              mountPath: /usr/local/easyops/pkg/conf/metric_sampler_linux
              subPath: metric_sampler_linux
            - name: host-proc-path
              mountPath: /rootfs/proc
            - name: default-netns-path
              mountPath: /rootfs/var/run/netns
            - name: docker-netns-path
              mountPath: /rootfs/var/run/docker/netns
            - mountPath: /usr/local/easyops/agent/conf/easy_monitor.yaml
              name: config
              subPath: easy_monitor.yaml
              readOnly: true
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      terminationGracePeriodSeconds: 10
---
# Source: ebpf-agent/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-ebpf-agent-test-connection"
  labels:
    helm.sh/chart: ebpf-agent-1.1.18
    app.kubernetes.io/name: ebpf-agent
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
  restartPolicy: Never
