---
# Source: eco/templates/common.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-eco-eco-network
  namespace: default
  labels:
    app: "eco-3.1.20"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "eco"
    app.kubernetes.io/version: "eco"
    helm-revision: "1"
    helm.sh/chart: "eco-3.1.20"
    release: "release-name"
data:
  Network.eco: '{"Description":"Truecharts ECO Server","DetailedDescription":"Vanilla
    ECO game","DiscordAddress":"","GameServerPort":"3000","IPAddress":"Any","MaxConnections":-1,"Password":"","Playtime":"","PublicServer":true,"Rate":20,"RemoteAddress":"localhost:3000/","ServerCategory":"None","UPnPEnabled":false,"WebServerPort":"3001","WebServerUrl":"localhost:3001"}'
---
# Source: eco/templates/common.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-eco-serverfiles
  namespace: default
  labels:
    app: "eco-3.1.20"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "eco"
    app.kubernetes.io/version: "eco"
    helm-revision: "1"
    helm.sh/chart: "eco-3.1.20"
    release: "release-name"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
---
# Source: eco/templates/common.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-eco-steamcmd
  namespace: default
  labels:
    app: "eco-3.1.20"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "eco"
    app.kubernetes.io/version: "eco"
    helm-revision: "1"
    helm.sh/chart: "eco-3.1.20"
    release: "release-name"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
---
# Source: eco/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-eco-game
  namespace: default
  labels:
    app: "eco-3.1.20"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "eco"
    app.kubernetes.io/version: "eco"
    helm-revision: "1"
    helm.sh/chart: "eco-3.1.20"
    release: "release-name"
    service.name: "game"
spec:
  type: ClusterIP
  publishNotReadyAddresses: false
  ports:
    - name: game
      port: 3000
      protocol: UDP
      targetPort: 3000
  selector:
    pod.name: main
    app.kubernetes.io/name: eco
    app.kubernetes.io/instance: release-name
---
# Source: eco/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-eco
  namespace: default
  labels:
    app: "eco-3.1.20"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "eco"
    app.kubernetes.io/version: "eco"
    helm-revision: "1"
    helm.sh/chart: "eco-3.1.20"
    release: "release-name"
    service.name: "main"
spec:
  type: ClusterIP
  publishNotReadyAddresses: false
  ports:
    - name: main
      port: 3001
      protocol: TCP
      targetPort: 3001
  selector:
    pod.name: main
    app.kubernetes.io/name: eco
    app.kubernetes.io/instance: release-name
---
# Source: eco/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-eco
  namespace: default
  labels:
    app: "eco-3.1.20"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "eco"
    app.kubernetes.io/version: "eco"
    helm-revision: "1"
    helm.sh/chart: "eco-3.1.20"
    release: "release-name"
spec:  
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      pod.name: main
      app.kubernetes.io/name: eco
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app: "eco-3.1.20"
        app.kubernetes.io/instance: "release-name"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/name: "eco"
        app.kubernetes.io/version: "eco"
        helm-revision: "1"
        helm.sh/chart: "eco-3.1.20"
        pod.lifecycle: "permanent"
        pod.name: "main"
        release: "release-name"
      annotations:
        rollme: "UCfRs"
    spec:
      serviceAccountName: default
      automountServiceAccountToken: false
      runtimeClassName: 
      hostNetwork: false
      hostPID: false
      hostIPC: false
      shareProcessNamespace: false
      enableServiceLinks: false
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/arch: amd64
      topologySpreadConstraints:
        - maxSkew: 1
          whenUnsatisfiable: ScheduleAnyway
          topologyKey: "truecharts.org/rack"
          labelSelector:
            matchLabels:      
              pod.name: main
              app.kubernetes.io/name: eco
              app.kubernetes.io/instance: release-name
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
        - maxSkew: 1
          whenUnsatisfiable: ScheduleAnyway
          topologyKey: "kubernetes.io/hostname"
          labelSelector:
            matchLabels:      
              pod.name: main
              app.kubernetes.io/name: eco
              app.kubernetes.io/instance: release-name
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      terminationGracePeriodSeconds: 60
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 568
        sysctls: []
      hostUsers: true
      containers:
        - name: release-name-eco
          image: ich777/steamcmd:eco@7b58e4cff85e87dda0e3638b2d449aef088c25db7ae6f672bfd85f9da02e7f2a
          imagePullPolicy: IfNotPresent
          tty: false
          stdin: false
          ports:
            - name: game
              containerPort: 3000
              protocol: UDP
              hostPort: null
            - name: main
              containerPort: 3001
              protocol: TCP
              hostPort: null
          volumeMounts:
            - name: devshm
              mountPath: /dev/shm
              readOnly: false
            - name: network-config
              mountPath: /serverdata/serverfiles/Configs/Network.eco
              readOnly: true
              subPath: Network.eco
            - name: serverfiles
              mountPath: /serverdata/serverfiles
              readOnly: false
            - name: shared
              mountPath: /shared
              readOnly: false
            - name: steamcmd
              mountPath: /serverdata/steamcmd
              readOnly: false
            - name: tmp
              mountPath: /tmp
              readOnly: false
            - name: varlogs
              mountPath: /var/logs
              readOnly: false
            - name: varrun
              mountPath: /var/run
              readOnly: false
          livenessProbe:
            tcpSocket:
              port: 3001
            initialDelaySeconds: 10
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 3001
            initialDelaySeconds: 10
            failureThreshold: 5
            successThreshold: 2
            timeoutSeconds: 5
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 3001
            initialDelaySeconds: 10
            failureThreshold: 60
            successThreshold: 1
            timeoutSeconds: 2
            periodSeconds: 5
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits: 
              cpu: 4000m 
              memory: 8Gi
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
            runAsGroup: 0
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            privileged: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add:
                - CHOWN
                - SETUID
                - SETGID
                - FOWNER
                - DAC_OVERRIDE
              drop:
                - ALL
          env:
            - name: "TZ"
              value: "UTC"
            - name: "UMASK"
              value: "0022"
            - name: "UMASK_SET"
              value: "0022"
            - name: "PUID"
              value: "568"
            - name: "USER_ID"
              value: "568"
            - name: "UID"
              value: "568"
            - name: "PGID"
              value: "568"
            - name: "GROUP_ID"
              value: "568"
            - name: "GID"
              value: "568"
            - name: "GAME_ID"
              value: "739590"
            - name: "GAME_PARAMS"
              value: ""
            - name: "PASSWRD"
              value: ""
            - name: "SERVER_DIR"
              value: "/serverdata/serverfiles"
            - name: "STEAMCMD_DIR"
              value: "/serverdata/steamcmd"
            - name: "USERNAME"
              value: ""
            - name: "VALIDATE"
              value: "false"
      volumes:
        - name: devshm
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: network-config
          configMap:
            name: release-name-eco-eco-network
            optional: false
        - name: serverfiles
          persistentVolumeClaim:
            claimName: release-name-eco-serverfiles
        - name: shared
          emptyDir: {}
        - name: steamcmd
          persistentVolumeClaim:
            claimName: release-name-eco-steamcmd
        - name: tmp
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: varlogs
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: varrun
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
