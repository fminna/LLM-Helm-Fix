---
# Source: goldpinger/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: goldpinger
    helm.sh/chart: goldpinger-1.1.4
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  name: release-name-goldpinger
---
# Source: goldpinger/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-goldpinger-clusterrole
  labels:
    app.kubernetes.io/name: goldpinger
    helm.sh/chart: goldpinger-1.1.4
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list"]
---
# Source: goldpinger/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-goldpinger-clusterrolebinding
  labels:
    app.kubernetes.io/name: goldpinger
    helm.sh/chart: goldpinger-1.1.4
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: release-name-goldpinger
    namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-goldpinger-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
# Source: goldpinger/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-goldpinger
  labels:
    app.kubernetes.io/name: goldpinger
    helm.sh/chart: goldpinger-1.1.4
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: goldpinger
    app.kubernetes.io/instance: release-name
---
# Source: goldpinger/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: release-name-goldpinger
  labels:
    app.kubernetes.io/name: goldpinger
    helm.sh/chart: goldpinger-1.1.4
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: goldpinger
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: goldpinger
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-goldpinger
      imagePullSecrets:
        - name: 
      containers:
      - name: goldpinger-daemon
        image: "bloomberg/goldpinger:1.5.0"
        imagePullPolicy: IfNotPresent
        env:
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: HOST
            value: "0.0.0.0"
          - name: PORT
            value: "80"
          - name: LABEL_SELECTOR
            value: "app.kubernetes.io/name=goldpinger"
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: http
        readinessProbe:
          httpGet:
            path: /
            port: http
        resources:
            {}
