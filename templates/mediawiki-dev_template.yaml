---
# Source: mediawiki-dev/templates/networkpolicy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mediawiki-dev-release-name
  labels:
    app: mediawiki-dev
    chart: mediawiki-dev-0.4.4
    release: release-name
    heritage: Helm
spec:
  podSelector:
    matchLabels:
      app: mediawiki-dev
      release: release-name
  policyTypes:
    - Ingress
  ingress:
    - ports:
      - port: 9102
        protocol: TCP
---
# Source: mediawiki-dev/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mediawiki-dev-release-name-secret-config
  labels:
    app: mediawiki-dev
    chart: mediawiki-dev-0.4.4
    release: release-name
    heritage: Helm
type: Opaque
data:
  DB_PASS: "cGFzc3dvcmQ="
  WG_SECRET_KEY: "ZDk2NGNlOThiMjcyYzIxMTVkNWY0OTYwNTYzYWY4ZmI4ZjAyZmY5NjhiYmIwZDYyYmRmNGUxZTRjMTgzOTNlZA=="
  WG_UPGRADE_KEY: "YWVkOGZmZWI1YjVmYmE5ZQ=="
  WIKI_ADMIN_PASS: "YWRtaW5wYXNz"
---
# Source: mediawiki-dev/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mediawiki-dev-release-name-secret-files
  labels:
    app: mediawiki-dev
    chart: mediawiki-dev-0.4.4
    release: release-name
    heritage: Helm
data:
  LocalSettings.php: |-
    
  setup.sh: |-
    IyEvYmluL2Jhc2gKc2V0IC1ldQoKIyBUaGlzIHNob3VsZCBvbmx5IGJlIHJ1biBvbmNlIHBlciBkZXBsb3ltZW50LgoKZnVuY3Rpb24gc2FuaXR5X2NoZWNrcyB7CiAgICAjIFNhbml0eSBjaGVja3MKICAgIGlmIFsgLXogIiREQl9TRVJWRVIiIF07IHRoZW4KICAgICAgICBlY2hvICdEQl9TRVJWRVIgbm90IHNldCwgZXhpdGluZy4nCiAgICAgICAgZXhpdCAxCiAgICBmaQogICAgCiAgICBpZiBbIC16ICIkREJfUEFTUyIgXTsgdGhlbgogICAgICAgIGVjaG8gJ0RCX1BBU1Mgbm90IHNldCwgZXhpdGluZy4nCiAgICAgICAgZXhpdCAxCiAgICBmaQogICAgCiAgICBpZiBbIC16ICIkREJfTkFNRSIgXTsgdGhlbgogICAgICAgIGVjaG8gJ0RCX05BTUUgbm90IHNldCwgZXhpdGluZy4nCiAgICAgICAgZXhpdCAxCiAgICBmaQp9ICAgIAoKZnVuY3Rpb24gd2FpdF9mb3JfZGIgewogICAgbG9jYWwgbWF4X2F0dGVtcHRzPTYwCgogICAgZWNobyAiJChkYXRlKTogV2FpdGluZyBmb3IgREIgdG8gYmVjb21lIGF2YWlsYWJsZSIKCiAgICBmb3IgKChhdHRlbXB0PTA7IGF0dGVtcHQ8JG1heF9hdHRlbXB0czsgYXR0ZW1wdCsrKSk7IGRvCiAgICAgICAgaWYgbXlzcWwgLWggIiREQl9TRVJWRVIiIC11IHJvb3QgLXAiJERCX1BBU1MiICIkREJfTkFNRSI7IHRoZW4KICAgICAgICAgICAgZWNobyAiJChkYXRlKTogREIgaXMgYXZhaWxhYmxlIgogICAgICAgICAgICByZXR1cm4KICAgICAgICBlbHNlCiAgICAgICAgICAgIHNsZWVwIDEKICAgICAgICBmaQogICAgZG9uZQogICAgIyBJZiB3ZSByZWFjaGVkIGhlcmUsIHdlIGhhZCBubyBsdWNrCiAgICBlY2hvICIkKGRhdGUpOiBEQiBub3QgYXZhaWxhYmxlLiAgR2l2aW5nIHVwIgogICAgZXhpdCAxCn0KCmZ1bmN0aW9uIHJ1bl9pbnN0YWxsX2FuZF91cGRhdGUgewogICAgIyBpbnN0YWxsLnBocCB3b24ndCBvcGVyYXRlIGlmIExvY2FsU2V0dGluZ3MucGhwIGV4aXN0cywgc28gbW92ZSBpdCBvdXQgb2YgdGhlIHdheS4KICAgIGlmIFsgLWYgL3Zhci93d3cvaHRtbC9Mb2NhbFNldHRpbmdzLnBocCBdOyB0aGVuCiAgICAgICAgbXYgL3Zhci93d3cvaHRtbC9Mb2NhbFNldHRpbmdzLnBocCAvdmFyL3d3dy9odG1sL0xvY2FsU2V0dGluZ3MucGhwLmRvY2tlci50bXAKICAgIGZpCiAgICAKICAgIHBocCAvdmFyL3d3dy9odG1sL21haW50ZW5hbmNlL2luc3RhbGwucGhwIFwKICAgICAgICAtLWRidXNlciAicm9vdCIgLS1kYnBhc3MgIiREQl9QQVNTIiAtLWRibmFtZSAiJERCX05BTUUiIC0tZGJzZXJ2ZXIgIiREQl9TRVJWRVIiIFwKICAgICAgICAtLWxhbmcgImVuIiAtLXBhc3MgIiRXSUtJX0FETUlOX1BBU1MiIFwKICAgICAgICAiJFdJS0lfTkFNRSIgIiRXSUtJX0FETUlOIgogICAgIyBXZSBkb24ndCBuZWVkIHRoZSBMb2NhbFNldHRpbmdzLnBocCBmaWxlIHRoYXQgd2FzIGdlbmVyYXRlZCBieSBpbnN0YWxsLnBocAogICAgcm0gL3Zhci93d3cvaHRtbC9Mb2NhbFNldHRpbmdzLnBocAogICAgCiAgICAjIE1vdmUgYmFjayB0aGUgb2xkIExvY2FsU2V0dGluZ3MgaWYgd2UgaGFkIG1vdmVkIG9uZSEKICAgIGlmIFsgLWYgL3Zhci93d3cvaHRtbC9Mb2NhbFNldHRpbmdzLnBocC5kb2NrZXIudG1wIF07IHRoZW4KICAgICAgICBtdiAvdmFyL3d3dy9odG1sL0xvY2FsU2V0dGluZ3MucGhwLmRvY2tlci50bXAgL3Zhci93d3cvaHRtbC9Mb2NhbFNldHRpbmdzLnBocAogICAgZmkKICAgIAogICAgIyBSdW4gdXBkYXRlLnBocCB0b28KICAgIHBocCAvdmFyL3d3dy9odG1sL21haW50ZW5hbmNlL3VwZGF0ZS5waHAgLS13aWtpICIkREJfTkFNRSIgLS1xdWljawp9CgpzYW5pdHlfY2hlY2tzCndhaXRfZm9yX2RiCnJ1bl9pbnN0YWxsX2FuZF91cGRhdGUK
---
# Source: mediawiki-dev/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mediawiki-dev-release-name
  labels:
    app: mediawiki-dev
    chart: mediawiki-dev-0.4.4
    release: release-name
    heritage: Helm
spec:
  type: NodePort
  selector:
    app: mediawiki-dev
    release: release-name
    routed_via: release-name
  ports:

    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
---
# Source: mediawiki-dev/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mediawiki-dev-release-name
  labels:
    app: mediawiki-dev
    chart: mediawiki-dev-0.4.4
    release: release-name
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: mediawiki-dev
      release: release-name
  replicas: 1
  template:
    metadata:
      labels:
        app: mediawiki-dev
        release: release-name
        routed_via: release-name
      annotations:
        checksum/secrets: ca011ddbd17eb0b49f6b46d986b7424ed137e6d874ef8b00cdce7ab0b3cce1c2
        prometheus.io/port: "9102"
        prometheus.io/scrape: "true"
    spec:
      containers:
        # The main application container
        - name: mediawiki-dev-release-name
          image: "docker-registry.wikimedia.org/wikimedia/mediawiki-core:dev"
          imagePullPolicy: IfNotPresent
          args: ["  "]
          ports:
          livenessProbe:
            tcpSocket:
              port: 8080
          readinessProbe:
            httpGet:
              path: /index.php/Special:BlankPage
              port: 8080
          env:
            - name: SERVICE_IDENTIFIER
              value: mediawiki-dev-release-name
            - name: DB_NAME
              value: "my_wiki"
            - name: DB_SERVER
              value: "release-name-mariadb"
            - name: ENABLE_DEBUG_LOGGING
              value: "true"
            - name: ENABLE_VISUAL_EDITOR
              value: "false"
            - name: IS_RESTBASE_EXTERNAL
              value: "false"
            - name: MEDIAWIKI_DOMAIN
              value: "release-name"
            - name: PARSOID_URL
              value: "http://parsoid-release-name"
            - name: RESTBASE_NODEPORT
              value: ""
            - name: RESTBASE_URL
              value: "http://restbase-release-name"
            - name: WIKI_ADMIN
              value: "admin"
            - name: WIKI_NAME
              value: "My Wiki"
            - name: XDEBUG_CONFIG
              value: "remote_autostart=1 remote_enable=1 remote_handler=dbgp remote_host= remote_log=/tmp/xdebug_remote.log remote_mode=req remote_port=9000"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: mediawiki-dev-release-name-secret-config
                  key: DB_PASS
            - name: WG_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: mediawiki-dev-release-name-secret-config
                  key: WG_SECRET_KEY
            - name: WG_UPGRADE_KEY
              valueFrom:
                secretKeyRef:
                  name: mediawiki-dev-release-name-secret-config
                  key: WG_UPGRADE_KEY
            - name: WIKI_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  name: mediawiki-dev-release-name-secret-config
                  key: WIKI_ADMIN_PASS
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 1.2
              memory: 500Mi
          volumeMounts:
            - name: secret-volume
              mountPath: /var/config
              readOnly: false
      volumes:
        - name: secret-volume
          secret:
            secretName: mediawiki-dev-release-name-secret-files
            items:
            - key: LocalSettings.php
              path: LocalSettings.php
              mode: 0555
            - key: setup.sh
              path: setup.sh
              mode: 0555
---
# Source: mediawiki-dev/templates/setup-db-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: setup-db-mediawiki-dev-release-name-1
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: setup-db
          command: [ /var/config/setup.sh ]
          image: "docker-registry.wikimedia.org/wikimedia/mediawiki-core:dev"
          imagePullPolicy: IfNotPresent
          env:
            - name: SERVICE_IDENTIFIER
              value: mediawiki-dev-release-name
            - name: DB_NAME
              value: "my_wiki"
            - name: DB_SERVER
              value: "release-name-mariadb"
            - name: ENABLE_DEBUG_LOGGING
              value: "true"
            - name: ENABLE_VISUAL_EDITOR
              value: "false"
            - name: IS_RESTBASE_EXTERNAL
              value: "false"
            - name: MEDIAWIKI_DOMAIN
              value: "release-name"
            - name: PARSOID_URL
              value: "http://parsoid-release-name"
            - name: RESTBASE_NODEPORT
              value: ""
            - name: RESTBASE_URL
              value: "http://restbase-release-name"
            - name: WIKI_ADMIN
              value: "admin"
            - name: WIKI_NAME
              value: "My Wiki"
            - name: XDEBUG_CONFIG
              value: "remote_autostart=1 remote_enable=1 remote_handler=dbgp remote_host= remote_log=/tmp/xdebug_remote.log remote_mode=req remote_port=9000"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: mediawiki-dev-release-name-secret-config
                  key: DB_PASS
            - name: WG_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: mediawiki-dev-release-name-secret-config
                  key: WG_SECRET_KEY
            - name: WG_UPGRADE_KEY
              valueFrom:
                secretKeyRef:
                  name: mediawiki-dev-release-name-secret-config
                  key: WG_UPGRADE_KEY
            - name: WIKI_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  name: mediawiki-dev-release-name-secret-config
                  key: WIKI_ADMIN_PASS
          volumeMounts:
            - name: secret-volume
              mountPath: /var/config
              readOnly: false
      volumes:
        - name: secret-volume
          secret:
            secretName: mediawiki-dev-release-name-secret-files
            items:
            - key: LocalSettings.php
              path: LocalSettings.php
              mode: 0555
            - key: setup.sh
              path: setup.sh
              mode: 0555
---
# Source: mediawiki-dev/templates/tests/test-service-checker.yaml
apiVersion: v1
kind: Pod
metadata:
  name: 'mediawiki-dev-release-name-service-checker'
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  containers:
  - name: 'mediawiki-dev-release-name-service-checker'
    image: "docker-registry.wikimedia.org/service-checker"
    imagePullPolicy: IfNotPresent
    args: ["-t", "5", '$(MEDIAWIKI_DEV_RELEASE_NAME_SERVICE_HOST)', 'http://mediawiki-dev-release-name:80']
  dnsPolicy: ClusterFirst
  restartPolicy: Never
