---
# Source: kubestash-operator/templates/rbac/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kubestash-operator
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubestash-operator/templates/webhook-server/cert.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-kubestash-operator-webhook-cert
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU9aN20yV0FTY1E5SWlSM3JjaFdaYkl3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05URTFNRGswTnpVM1doY05NelF3TlRFek1EazBOelUzV2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT3BJClIyRmZScGZqa293NTk0ZnBEVEQyL3ZJN0JBMkpPMHR4eWc1bEpIT0laeHk1cGYvWmtqREFrQVJpRlFXZE45SFQKNU9SL0xJY2xMMzh0bis0eUs4RWJ3VmN6cHZnV3JOWmc2MFdEZjV5VS9XMU5KS3lQTW1lTFVTYjRKNy9LSHNySQpwbUVaM0VseVlrOUJKMkZMV3ViVDRtTDZNK0hyL3NSbzJ5dVZOL0ltZkRXZjhKV3dlZnZxaC9MQXl1bGd4VS9qCk14ZTZlaTNKamk3aXdlVEJNWGNlK2twYkJVL1prZFE1a1VwWHV3dVdLZHYrMGlydGNzOS9tdVN3TTZadVFOUjIKcHFsTFNHWFJQQmZNN055NGNUQVhCVzBFZEpSWWlEMCsrNEltaEovZlJUOVNoQUw4UEtxb3RTWlBacE9EcW8yZAp0Yk1vcTFXS0hOeEljQnNmN0xVQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJRMTVrOXNFV3ltMDNyM2VJb0haZXdYK1E4cFFEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUE0NCt5bFZydApJVk9xem1hdTcybXpuR1o3U2lLWjdWVk5DdjVMNFFmeTVwTHpZY0UyQXdFMHlDZjBWVDBHWnZQOVNJY0R3L3FXCjl1Q05zRDhVdGxLOVo0N3pPcmRqeW83L240WFBmSm41VG9jYzA3aStCbjdFck4wcFdwTWNJTFZWemkxRG5FeGYKYWpWSlZpTHFSc0hkTTM1MDlKTDZxbnV2bStZaDk0UzV4cW9vOXFYV1hES2pJRC9ZTWFOVVBWS2VYOGR3REhTSgpGMjk5ZG5TaVRodDN5RXlyOVRxZWgyQlRWS3pZNTZzK1lTSUtQTUlnNFI1bW1Jb1NNWnVCbFNxTy84cFYvSlNVClQwUm5kTFV0ZjFlcmNNWTkyZWdhaWdBcnBRZmZiYXVOSHNiS2VyVmVobXZJS2pkWGtORXhUTEluVnUxa3V0UE4KUFhGMjhzSlg2NWlRZHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuRENDQW9TZ0F3SUJBZ0lRQjB0eCtGTHoxdW9vUWRMU2lLNWpaREFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMU1UVXdPVFEzTlRkYUZ3MHpOREExTVRNd09UUTNOVGRhTURJeApNREF1QmdOVkJBTVRKM0psYkdWaGMyVXRibUZ0WlMxcmRXSmxjM1JoYzJndGIzQmxjbUYwYjNJdGQyVmlhRzl2CmF6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU9qeFZKbG1keUxUeS82TWpKQnAKSlhnekxVOURQYnl4R1NxME1ZZFdpaGorRGFLaDg1YnI5RjdwdzRGcHN3TjZlTzZ1VURNUnB5eThaMGJNUXZ6TgozWFMzb0hvMVRkSG5qd0tOS1lDcndzMGFIenArYjQwUzduQVA1ODNnQk1HM3RMdElEZGJpS2c2Ulh2NGN0aEpNCk5HN2FlaG5RcUt3MVVTU2lvd1F6UTA3eWxyZ2tqcnY5STlmTm5zM1VsWlRONFBrSFpjTHFGZmljQ3k1TlVSUWQKbUxFbHdPR2IvYTZEVUNZRElLL2JLRkpxeVRvNmVWakhkenNMajJIclRKMW5WdEgwQkpBekhXR3VUYm1PM1ZmUwpJNzVIcE9NVnVnYkl1RTdRWkhzakZwSTJNVlI5dFc2ekVGNDlMWUJWMGh5VWtBeXlIY0hDU3NscldpaEJ0bjNSCk1LVUNBd0VBQWFPQjBqQ0J6ekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVU5lWlBiQkZzcHRONgo5M2lLQjJYc0Yva1BLVUF3YndZRFZSMFJCR2d3Wm9JdmNtVnNaV0Z6WlMxdVlXMWxMV3QxWW1WemRHRnphQzF2CmNHVnlZWFJ2Y2kxM1pXSm9iMjlyTG1SbFptRjFiSFNDTTNKbGJHVmhjMlV0Ym1GdFpTMXJkV0psYzNSaGMyZ3QKYjNCbGNtRjBiM0l0ZDJWaWFHOXZheTVrWldaaGRXeDBMbk4yWXpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQQpQckhKMmhQU1A4RFZMNEdjRVcvaW9reCtMVS9WNmFaRkd6UEUvazFIdWRpRkdINmZYRVZHTlA3VzU4cVNCdDBwCkhxc1RoNExyWDJkWjRlZ1BXS0xJSDVtL1k1dW1GTFlBeGNLUzNUL0ZrcDM2blY2OHhoNitwZ3NYTzgxdkhWWWYKZTVUeHJlOFRpQXF6cTQxbU42dUFqYm5Bbkx3Umg0R2lBOXo0ZWtLd3NuSlJ2SjNRd3pSQldpakJaT0kxKzBJYgpRQTN6WGU0cHNDaHBqQy9LaEhsUnh5NmtZU3puT3prTkM2ek50UGtmR1NMTk9ZZi9MY20zeGJVcDdZQ0ppbHU5CnZlSUh4cFgvbXBvRzRneFl1WHRxbHQwZHdlMGQ2L0hIckwwaWIweTJLZ3U4OTl6dFlzRVJZQk8xSE0yUkN6QmsKalRBUlltZ1dSVFJqWGlYYkR2Um5vUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNlBGVW1XWjNJdFBML295TWtHa2xlRE10VDBNOXZMRVpLclF4aDFhS0dQNE5vcUh6Cmx1djBYdW5EZ1dtekEzcDQ3cTVRTXhHbkxMeG5Sc3hDL00zZGRMZWdlalZOMGVlUEFvMHBnS3ZDelJvZk9uNXYKalJMdWNBL256ZUFFd2JlMHUwZ04xdUlxRHBGZS9oeTJFa3cwYnRwNkdkQ29yRFZSSktLakJETkRUdktXdUNTTwp1LzBqMTgyZXpkU1ZsTTNnK1FkbHd1b1YrSndMTGsxUkZCMllzU1hBNFp2OXJvTlFKZ01ncjlzb1VtckpPanA1CldNZDNPd3VQWWV0TW5XZFcwZlFFa0RNZFlhNU51WTdkVjlJanZrZWs0eFc2QnNpNFR0QmtleU1Xa2pZeFZIMjEKYnJNUVhqMHRnRlhTSEpTUURMSWR3Y0pLeVd0YUtFRzJmZEV3cFFJREFRQUJBb0lCQURTRTlNWUJUQ3NXQlpCRwpzQXAvS211SFhsZlltVHJKMHhyRnRjVUZ4ZTBNbXBab1hUdFJ4NjcrbFkyLy94UnhzSUpmMnNVbzNjQkFXaWlrCk5SWTZkQXUwdXdIU3N0RDRuRTIrOWZTRXhVN283TkdMWUNzMmNYdmltaWpZc1RuYjZXdXdPeTZQbjF2WmVzbGcKUDh5d1VjSU1rQ3J4MkpXN0Q2aHE0c1kzcUoxTHRtMmE3Z3krSTg0akw5MktPSE5sYnN6V2srU3liWnNtTXFsWApnZ1FIbGQ2cmp0UEdaNmlYYTJIUGJ6a1dsSWlBeGxJbStiYXRiNXRVODZBb2UrVlVWQlFtWDJoWStsWFZhemJSCnczQTRsRzdmUUZpU2t2b2ZzRk1EZFF1OHVBcVdRTXNvbE1lY3pNcG1jSnQvLzZCZTRGbkoxU2lOWlpFT01SZ24KeHFvOHdBRUNnWUVBL2FITHJRMEJBUjdGL21ubHJ2YkVyTHdUeTZiVHBFZ1BmYXl4VkZSU08zdnZlc2IyR3hIcgo4V2ZCU2VIVXhjRE8vMHRqNHF3bUZwNWZDR1c5aHBneStoTUtSS25Fc0dZTWl2S2FuTDNDK25vTWI4KzdWTE9kClBtN2lKdE5hUGhZdGZvWjBqc0ZaYzZlMzNKaGtwUFRRVGpSR3NCaTVwQWZ1TFJodGdLaFJzZ0VDZ1lFQTZ4NFYKMzNpMzd2TWZPVUhNK2xjYm1hZi9wZFdSV0Y0RHBwbjNSTUwwVzVNcEF1U2tCaHlKdDlmOUV2TVI3aWgwbGFEOQplQlZ0Mk1TRFBkcEoxdmZCa3hIazFqekdRTzEvcFhWZWhaZCtwL1dVVjdxOE1DaVNqZXprMEphMHJzYm93dHU3Cno4VUdHTWJSNlZYN2hIZ0xOYU1GQk5YQ0lvNGtCRmRWUlM4ZGRxVUNnWUVBMEdzS0ViUWo1U1hDa2FPM3FDVUQKek9Yb1ptczZjejc3Njh2akZHY09BKzkrQlNoRnlFemIwODNzMmFlSHp0RDN5SFhOS05GSm8wQ1Uyek92b0ZDbApZellPTkFwRnBLYlhHNzdzS20wTk1nTGxBV1IwamMvaklSREJLaUozZjVsOTNRRGord01MWEt5dnU4aEd1LzZvCnhmclRNNVc5eHZyMVQzMUpUbllDWEFFQ2dZQVdGTlpERGFoZ3BhNjZCdWNFWCtmMHIyV0FJcVdxNGZGLzFSZjIKK2tSTzBXeFpuRFdYYVZpNXptd3pPbWJsc2lENDZJekZtV1dlcFI0YVVnVDdUbnQ4bjRLWmFFM0tUVVBldXo0cwpWOFVLYXpNS1pqeEVYWnNkL3pDaU1uVTNzUEN0VkV1NFFLM0k1K3RRK2NWTWRLWEEzTldjMWFLTThrS0pzZFlOClVGWjVEUUtCZ1FEREtvOGYrTEhNMWpLeDR0cExJMlM1Ny9kVHVTRm5WS0JzWjZod2RDb0JTZ2VNd2tDaEx5K3MKdEtIUVc3L0J5MVBTVVVVKzdNZmZPUmhtQmJ5amdTUnJRTFZSaGlBUWZxRDE2NzBTcUYvTGtLK3JSZi93bGlHNgpGbmJxemhlME5hdUg0aVlIdEVwNjUxbGgweTJCUXJhbmV5VXp5SDJraGRSbWlnWVdTby9kRGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: kubestash-operator/templates/operator/configuration.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-kubestash-operator-config
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    apiVersion: config.kubestash.com/v1alpha1
    kind: KubeStashConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
      certDir: /var/serving-cert
    leaderElection:
      leaderElect: false
      resourceName: cba9d7ad.kubestash.com
    
    webhookInfo:
      validating:
        enable: true
        name: release-name-kubestash-operator
      mutating:
        enable: true
        name: release-name-kubestash-operator
    docker:
      registry: ghcr.io/kubestash
      image: kubestash
      tag: v0.8.1
    netVolAccessor:
      cpu: 100m
      memory: 128Mi
      user: 2000
      privilegedMode: false
---
# Source: kubestash-operator/templates/rbac/auth_proxy.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-kubestash-operator-auth-proxy
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
# Source: kubestash-operator/templates/rbac/cluster_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-kubestash-operator
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs: ["get", "create", "patch", "update"]
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    verbs: ["*"]
  - apiGroups:
      - core.kubestash.com
      - kubedb.com
      - snapshot.storage.k8s.io
    resources:
      - "*"
    verbs: ["*"]
  - apiGroups:
      - storage.kubestash.com
    resources:
      - "*"
    verbs: ["*"]
  - apiGroups:
      - appcatalog.appscode.com
    resources:
      - "*"
    verbs: ["get", "list", "watch"]
  - apiGroups:
      - config.kubestash.com
    resources:
      - "*"
    verbs: ["*"]
  - apiGroups:
      - addons.kubestash.com
    resources:
      - "*"
    verbs: [ "*" ]
  - apiGroups:
      - ""
    resources:
      - events
    verbs: ["create"]
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - statefulsets
      - replicasets
    verbs: ["get", "list", "watch"]
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs: ["get", "list", "watch", "create", "patch", "update"]
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
      - persistentvolumes
    verbs: ["get", "list", "watch", "create", "patch", "delete", "update"]
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]

  - apiGroups:
      - ""
    resources:
      - pods/exec
    verbs: ["create"]

  - apiGroups:
      - ""
    resources:
      - secrets
    verbs: ["get", "list", "create", "patch", "watch", "delete"]
  - apiGroups:
      - batch
    resources:
      - jobs
      - cronjobs
    verbs: ["get", "list", "watch", "create", "delete", "patch", "update"]
  - apiGroups:
      - ""
    resources:
      - nodes
      - namespaces
    verbs: [ "get", "list", "watch" ]
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs: ["get", "list", "watch", "create", "delete", "patch", "update"]
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterroles
      - roles
      - rolebindings
      - clusterrolebindings
    verbs: ["get","list", "watch", "create", "delete", "patch", "update"]
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshots
    verbs: ["get","delete"]
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs: [ "get", "list", "watch" ]
  - apiGroups:
      - catalog.kubedb.com
    resources:
      - elasticsearchs
    verbs: [ "get", "list", "watch" ]
  - apiGroups:
      - appcatalog.appscode.com
    resources:
      - appbindings
    verbs: [ "get", "list", "watch" ]
  - apiGroups:
      - elasticsearch.kubedb.com
    resources:
      - elasticsearchdashboards
    verbs: ["list"]
---
# Source: kubestash-operator/templates/rbac/metrics_reader.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-kubestash-operator-metrics-reader
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
# Source: kubestash-operator/templates/license/license-checker-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kubestash-operator-license-checker
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-checker
subjects:
- kind: ServiceAccount
  name: release-name-kubestash-operator
  namespace: default
---
# Source: kubestash-operator/templates/license/license-reader-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kubestash-operator-license-reader
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-reader
subjects:
- kind: ServiceAccount
  name: release-name-kubestash-operator
  namespace: default
---
# Source: kubestash-operator/templates/rbac/auth_proxy.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kubestash-operator-auth-proxy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-kubestash-operator-auth-proxy
subjects:
  - kind: ServiceAccount
    name: release-name-kubestash-operator
    namespace: default
---
# Source: kubestash-operator/templates/rbac/cluster_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kubestash-operator
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-kubestash-operator
subjects:
- kind: ServiceAccount
  name: release-name-kubestash-operator
  namespace: default
---
# Source: kubestash-operator/templates/rbac/leader_election.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-kubestash-operator-leader-election
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
# Source: kubestash-operator/templates/rbac/leader_election.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-kubestash-operator-leader-election
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-kubestash-operator-leader-election
subjects:
  - kind: ServiceAccount
    name: release-name-kubestash-operator
    namespace: default
---
# Source: kubestash-operator/templates/webhook-server/monitoring/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kubestash-operator
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    component: webhook-server
---
# Source: kubestash-operator/templates/webhook-server/webhook_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kubestash-operator-webhook
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    component: webhook-server
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
---
# Source: kubestash-operator/templates/operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kubestash-operator-operator
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
    component: operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubestash-operator
      app.kubernetes.io/instance: release-name
      component: operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubestash-operator
        app.kubernetes.io/instance: release-name
        component: operator
      annotations:
        checksum/apiregistration.yaml: f8fae75ed72c62f5fda6c3bc464b64ac001a0cbe5a2c3ea8075bbac5d031ea2c
    spec:
      
      serviceAccountName: release-name-kubestash-operator
      containers:
      - name: operator
        image: "ghcr.io/kubestash/kubestash:v0.8.1"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        args:
          - operator
          - --config=/var/config/config.yaml
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 100m
        volumeMounts:
        - name: kubestash-tmp-volume
          mountPath: /kubestash-tmp
        - name: config
          mountPath: /var/config
      volumes:
      - name: kubestash-tmp-volume
        emptyDir: {}
      - name: config
        configMap:
          name: release-name-kubestash-operator-config
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: kubestash-operator/templates/webhook-server/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kubestash-operator-webhook-server
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
    component: webhook-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubestash-operator
      app.kubernetes.io/instance: release-name
      component: webhook-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubestash-operator
        app.kubernetes.io/instance: release-name
        component: webhook-server
      annotations:
        checksum/apiregistration.yaml: 455be5f702e944a7b26d1df3f72ac7c18d7b58a95ec15f228633dcfcc21b3054
    spec:
      
      serviceAccountName: release-name-kubestash-operator
      containers:
      - name: webhook-server
        image: "ghcr.io/kubestash/kubestash:v0.8.1"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        args:
          - webhook-server
          - --config=/var/config/config.yaml
        ports:
        - name: webhook-server
          containerPort: 9443
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 100m
        volumeMounts:
        - name: kubestash-tmp-volume
          mountPath: /kubestash-tmp
        - name: serving-cert
          mountPath: /var/serving-cert
          readOnly: true
        - name: config
          mountPath: /var/config
      - name: kube-rbac-proxy
        image: "ghcr.io/appscode/kube-rbac-proxy:v0.11.0"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
      volumes:
      - name: kubestash-tmp-volume
        emptyDir: {}
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: release-name-kubestash-operator-webhook-cert
      - name: config
        configMap:
          name: release-name-kubestash-operator-config
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: kubestash-operator/templates/license/license.yaml
# if license file is provided, then create a secret for license
---
# Source: kubestash-operator/templates/cleaner/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kubestash-operator-cleaner
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
---
# Source: kubestash-operator/templates/cleaner/cluster_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-kubestash-operator-cleaner
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    verbs: ["delete"]
  - apiGroups:
      - addons.kubestash.com
      - core.kubestash.com
      - storage.kubestash.com
    resources:
      - "*"
    verbs: ["delete"]
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs: ["delete"]
---
# Source: kubestash-operator/templates/license/license-checker-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-checker
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get", "list", "watch"]
# Issue license
- apiGroups:
  - proxyserver.licenses.appscode.com
  resources:
  - licenserequests
  verbs: ["create"]
# Detect workload/owner of operator pod
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["get"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get"]
# Write events in case of license verification failure
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "create", "patch"]
# audit site info
- apiGroups:
  - ""
  resources:
  - nodes
  verbs: ["get", "list", "watch"]
---
# Source: kubestash-operator/templates/license/license-reader-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-reader
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Detect license server endpoint for kubedb addons
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get"]
- nonResourceURLs:
  - /appscode/license
  verbs: ["get"]
---
# Source: kubestash-operator/templates/rbac/user_roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:release-name-kubestash-operator:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - addons.kubestash.com
  - core.kubestash.com
  - storage.kubestash.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: kubestash-operator/templates/rbac/user_roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:release-name-kubestash-operator:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - addons.kubestash.com
  - core.kubestash.com
  - storage.kubestash.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubestash-operator/templates/cleaner/cluster_rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kubestash-operator-cleaner
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-kubestash-operator-cleaner
subjects:
  - kind: ServiceAccount
    name: release-name-kubestash-operator-cleaner
    namespace: default
---
# Source: kubestash-operator/templates/cleaner/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-kubestash-operator-cleaner
  namespace: default
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 120
  template:
    spec:
      
      serviceAccountName: release-name-kubestash-operator-cleaner
      containers:
      - name: busybox
        image: "ghcr.io/appscode/kubectl:v1.24"
        command:
          - sh
          - -c
          - "sleep 2; \
           kubectl delete functions.stash.appscode.com update-status pvc-backup pvc-restore || true; \
           kubectl delete tasks.stash.appscode.com pvc-backup pvc-restore || true;"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
      restartPolicy: Never
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: kubestash-operator/templates/webhook-server/mutating_webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: release-name-kubestash-operator
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-kubestash-operator-webhook
        namespace: default
        path: /mutate-storage-kubestash-com-v1alpha1-backupstorage
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: mbackupstorage.kb.io
    rules:
      - apiGroups:
          - storage.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - backupstorages
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-kubestash-operator-webhook
        namespace: default
        path: /mutate-storage-kubestash-com-v1alpha1-retentionpolicy
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: mretentionpolicy.kb.io
    rules:
      - apiGroups:
          - storage.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - retentionpolicies
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-kubestash-operator-webhook
        namespace: default
        path: /mutate-core-kubestash-com-v1alpha1-backupblueprint
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: mbackupblueprint.kb.io
    rules:
      - apiGroups:
          - core.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - backupblueprints
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-kubestash-operator-webhook
        namespace: default
        path: /mutate-core-kubestash-com-v1alpha1-backupconfiguration
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: mbackupconfiguration.kb.io
    rules:
      - apiGroups:
          - core.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - backupconfigurations
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-kubestash-operator-webhook
        namespace: default
        path: /mutate-core-kubestash-com-v1alpha1-hooktemplate
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: mhooktemplate.kb.io
    rules:
      - apiGroups:
          - core.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - hooktemplates
    sideEffects: None
---
# Source: kubestash-operator/templates/webhook-server/validating_webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: release-name-kubestash-operator
  labels:
    helm.sh/chart: kubestash-operator-v0.8.0
    app.kubernetes.io/name: kubestash-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-kubestash-operator-webhook
        namespace: default
        path: /validate-storage-kubestash-com-v1alpha1-backupstorage
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: vbackupstorage.kb.io
    rules:
      - apiGroups:
          - storage.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - backupstorages
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-kubestash-operator-webhook
        namespace: default
        path: /validate-storage-kubestash-com-v1alpha1-repository
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: vrepository.kb.io
    rules:
      - apiGroups:
          - storage.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - repositories
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-kubestash-operator-webhook
        namespace: default
        path: /validate-storage-kubestash-com-v1alpha1-retentionpolicy
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: vretentionpolicy.kb.io
    rules:
      - apiGroups:
          - storage.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - retentionpolicies
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-kubestash-operator-webhook
        namespace: default
        path: /validate-core-kubestash-com-v1alpha1-backupbatch
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: vbackupbatch.kb.io
    rules:
      - apiGroups:
          - core.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - backupbatches
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-kubestash-operator-webhook
        namespace: default
        path: /validate-core-kubestash-com-v1alpha1-backupblueprint
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: vbackupblueprint.kb.io
    rules:
      - apiGroups:
          - core.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - backupblueprints
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-kubestash-operator-webhook
        namespace: default
        path: /validate-core-kubestash-com-v1alpha1-backupconfiguration
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: vbackupconfiguration.kb.io
    rules:
      - apiGroups:
          - core.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - backupconfigurations
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-kubestash-operator-webhook
        namespace: default
        path: /validate-core-kubestash-com-v1alpha1-backupsession
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: vbackupsession.kb.io
    rules:
      - apiGroups:
          - core.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - backupsessions
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-kubestash-operator-webhook
        namespace: default
        path: /validate-core-kubestash-com-v1alpha1-hooktemplate
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: vhooktemplate.kb.io
    rules:
      - apiGroups:
          - core.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - hooktemplates
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: release-name-kubestash-operator-webhook
        namespace: default
        path: /validate-core-kubestash-com-v1alpha1-restoresession
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: vrestoresession.kb.io
    rules:
      - apiGroups:
          - core.kubestash.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - restoresessions
    sideEffects: None
