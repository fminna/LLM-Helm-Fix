---
# Source: traefik-forward-auth-openid/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: traefik-forward-auth-openid
  namespace: kube-system
data:
  DEFAULT_PROVIDER: oidc
  INSECURE_COOKIE: "false"
  COOKIE_DOMAIN: example.com
  DOMAINS: example.com
  AUTH_HOST: auth.example.com
  URL_PATH: /_oauth
  PROVIDERS_OIDC_ISSUER_URL: https://example.com/auth/realms/master
  PROVIDERS_OIDC_CLIENT_ID: traefik-forward-auth-openid
---
# Source: traefik-forward-auth-openid/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/service: release-name
    app.kubernetes.io/version: latest
    helm.sh/chart: traefik-forward-auth-openid-1.0.1
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 4181
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: release-name
---
# Source: traefik-forward-auth-openid/templates/common.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name
  labels:
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/version: latest
    helm.sh/chart: traefik-forward-auth-openid-1.0.1
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/component: main
      app.kubernetes.io/name: release-name
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels: 
        app.kubernetes.io/component: main
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/name: release-name
    spec: 
      enableServiceLinks: true
      serviceAccountName: default
      automountServiceAccountToken: true
      hostIPC: false
      hostNetwork: false
      hostPID: false
      dnsPolicy: ClusterFirst
      containers: 
        - env:
          - name: TZ
            value: UTC
          envFrom:
          - configMapRef:
              name: traefik-forward-auth-openid
          - secretRef:
              name: traefik-forward-auth-openid
          image: thomseddon/traefik-forward-auth:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            tcpSocket:
              port: 4181
            timeoutSeconds: 1
          name: main
          ports:
          - containerPort: 4181
            name: http
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            tcpSocket:
              port: 4181
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 100m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 65534
            runAsNonRoot: true
            runAsUser: 65534
          startupProbe:
            failureThreshold: 30
            initialDelaySeconds: 0
            periodSeconds: 5
            tcpSocket:
              port: 4181
            timeoutSeconds: 1
---
# Source: traefik-forward-auth-openid/templates/secrets.yaml
# https://kubernetes.io/docs/concepts/configuration/secret/
---
# Source: traefik-forward-auth-openid/templates/ingressroute.yaml
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-forward-auth-openid
  namespace: kube-system

spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Host(`auth.example.com`)
      services:
        - name: traefik-forward-auth-openid
          port: 80
  tls:
    certResolver: default
---
# Source: traefik-forward-auth-openid/templates/middlewares.yaml
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: traefik-forward-auth-openid
  namespace: kube-system

spec:
  forwardAuth:
    address: http://traefik-forward-auth-openid
    trustForwardHeader: true
    authResponseHeaders:
      - X-Forwarded-User
---
# Source: traefik-forward-auth-openid/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: traefik-forward-auth-openid
  namespace: kube-system
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation"
  labels:
    app: traefik-forward-auth-openid
type: Opaque
data:
  PROVIDERS_OIDC_CLIENT_SECRET: "Y2hhbmdlbWU="
  SECRET: "Mk41QTl4TWxFSFBhTkJMclJTUTNjdz09"
