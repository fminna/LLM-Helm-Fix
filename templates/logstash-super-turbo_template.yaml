---
# Source: logstash-super-turbo/charts/logstash/templates/poddisruptionbudget.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: "release-name-logstash-pdb"
  labels:
    app: "release-name-logstash"
    chart: "logstash"
    heritage: "Helm"
    release: "release-name"
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: "release-name-logstash"
---
# Source: logstash-super-turbo/charts/elasticsearch-curator/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-elasticsearch-curator-config
  labels:
    app: elasticsearch-curator
    chart: elasticsearch-curator-2.1.3
    release: release-name
    heritage: Helm
data:
  action_file.yml:   |-
    ---
    actions:
      1:
        action: delete_indices
        description: "Clean up ES by deleting old indices"
        options:
          timeout_override:
          continue_if_exception: False
          disable_action: False
          ignore_empty_list: True
        filters:
        - filtertype: age
          source: name
          direction: older
          timestring: '%Y.%m.%d'
          unit: days
          unit_count: 7
          field:
          stats_result:
          epoch:
          exclude: False
  config.yml:   |-
    ---
    client:
      hosts:
        - elasticsearch.logs.camptocamp.com
      port: 443
      use_ssl: True
      http_auth: ${CURATOR_HTTP_AUTH}
---
# Source: logstash-super-turbo/charts/logstash/templates/configmap-pipeline.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-logstash-pipeline
  labels:
    app: "release-name-logstash"
    chart: "logstash"
    heritage: "Helm"
    release: "release-name"
data:
  logstash.conf: |
    input {}
    output {}
---
# Source: logstash-super-turbo/charts/logstash/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: "release-name-logstash"
  labels:
    app: "release-name-logstash"
    chart: "logstash"
    heritage: "Helm"
    release: "release-name"
  annotations:
    null
spec:
  type: ClusterIP
  selector:
    app: "release-name-logstash"
    chart: "logstash"
    heritage: "Helm"
    release: "release-name"
  ports:
    - name: prometheus-exporter
      port: 9198
      protocol: TCP
      targetPort: 9198
---
# Source: logstash-super-turbo/charts/logstash/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-logstash
  labels:
    app: "release-name-logstash"
    chart: "logstash"
    heritage: "Helm"
    release: "release-name"
spec:
  serviceName: release-name-logstash
  selector:
    matchLabels:
      app: "release-name-logstash"
      release: "release-name"
  replicas: 1
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      name: "release-name-logstash"
      labels:
        app: "release-name-logstash"
        chart: "logstash"
        heritage: "Helm"
        release: "release-name"
      annotations:
        
        
        pipelinechecksum: 4643602d88fa8f71345a74bfffdab4ce6c2fe6c0c260a1a377b507005772645
    spec:
      securityContext:
        fsGroup: 1000240000
        runAsUser: 1000240000
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - "release-name-logstash"
            topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 120
      volumes:
        - name: kafka-ssl
          secret:
            secretName: kafka-ssl
        - name: logstashpipeline
          configMap:
            name: release-name-logstash-pipeline
      containers:
      - name: "logstash"
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000240000
        image: "docker.elastic.co/logstash/logstash-oss:6.8.10"
        imagePullPolicy: "IfNotPresent"
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 300
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 3
          timeoutSeconds: 5
        ports:
        - name: http
          containerPort: 9600
        resources:
          limits:
            cpu: "3"
            memory: 2G
          requests:
            cpu: 50m
            memory: 750M
        env:
          - name: LS_JAVA_OPTS
            value: "-Xms512m -Xmx512m"
        volumeMounts:
          - name: kafka-ssl
            mountPath: /etc/logstash/kafka-ssl
          - name: logstashpipeline
            mountPath: /usr/share/logstash/pipeline/logstash.conf
            subPath: logstash.conf
      - name: prometheus-exporter
        image: docker.io/sequra/logstash_exporter:v0.1.3
        resources:
          limits:
            memory: "256M"
          requests:
            memory: "16M"
            cpu: "10m"
---
# Source: logstash-super-turbo/charts/elasticsearch-curator/templates/cronjob.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: release-name-elasticsearch-curator
  labels:
    app: elasticsearch-curator
    chart: elasticsearch-curator-2.1.3
    release: release-name
    heritage: Helm
spec:
  schedule: "0 1 * * *"
  failedJobsHistoryLimit: 2
  successfulJobsHistoryLimit: 3
  jobTemplate:
    metadata:
      labels:
        app: elasticsearch-curator
        release: release-name
    spec:
      template:
        metadata:
          labels:
            app: elasticsearch-curator
            release: release-name
        spec:
          volumes:
            - name: config-volume
              configMap:
                name: release-name-elasticsearch-curator-config
          restartPolicy: Never
          containers:
            - name: elasticsearch-curator
              image: "untergeek/curator:5.7.6"
              imagePullPolicy: IfNotPresent
              volumeMounts:
                - name: config-volume
                  mountPath: /etc/es-curator

              command:
                - /curator/curator
              args: [ "--config", "/etc/es-curator/config.yml", "/etc/es-curator/action_file.yml" ]
              env:
              - name: "CURATOR_HTTP_AUTH"
                valueFrom:
                  secretKeyRef:
                    name: "curator-credentials"
                    key: "curator"
              resources:
                limits:
                  cpu: 250m
                  memory: 256M
                requests:
                  cpu: 100m
                  memory: 128M
          securityContext:
            runAsUser: 1000240000
---
# Source: logstash-super-turbo/templates/service_monitor_logstash.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: "release-name"
  labels:
    is-monitor: "true"
    project: "default"
spec:
  selector:
    matchLabels:
      release: "release-name"
  endpoints:
    - port: prometheus-exporter
      path: "/metrics"
      scheme: "http"
      honorLabels: true
      metricRelabelings:
        - sourceLabels:
          - project
          targetLabel: project
          replacement: "default"
        - sourceLabels:
          - sre_team
          targetLabel: sre_team
          replacement: "sret2"
        - sourceLabels:
          - line
          targetLabel: line
          replacement: "prod"
