---
# Source: choerodon-logging/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: logging
---
# Source: choerodon-logging/charts/fluent-bit/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-conf-release-name
data:
  fluent-bit.conf: |+
    #;this file is generate by flb api server
    #;api:start
    #;api:filter
    [FILTER]
        Name                        kubernetes
        Match                       kube.*
    #;api:end

    #;api:start
    #;api:output
    [OUTPUT]
        Name                        es
        Match                       *
        Host                        ${ES_HOST}
        Port                        ${ES_PORT}
        Index                       es_index
        Type                        es
    #;api:end

    #;api:start
    #;api:service
    [SERVICE]
        Flush                       1
        Log_Level                   info
        Parsers_File                parsers.conf
    #;api:end

  parsers.conf: |
    [PARSER]
        Name   apache
        Format regex
        Regex  ^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
        Time_Key time
        Time_Format %d/%b/%Y:%H:%M:%S %z

    [PARSER]
        Name   apache2
        Format regex
        Regex  ^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^ ]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
        Time_Key time
        Time_Format %d/%b/%Y:%H:%M:%S %z

    [PARSER]
        Name   apache_error
        Format regex
        Regex  ^\[[^ ]* (?<time>[^\]]*)\] \[(?<level>[^\]]*)\](?: \[pid (?<pid>[^\]]*)\])?( \[client (?<client>[^\]]*)\])? (?<message>.*)$

    [PARSER]
        Name   nginx
        Format regex
        Regex ^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
        Time_Key time
        Time_Format %d/%b/%Y:%H:%M:%S %z

    [PARSER]
        Name   json-test
        Format json
        Time_Key time
        Time_Format %d/%b/%Y:%H:%M:%S %z

    [PARSER]
        Name        docker
        Format      json
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Time_Keep   On

    [PARSER]
        Name        MicroServiceUI
        Format      json
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Time_Keep   On

    [PARSER]
        Name        Application
        Format      json
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Time_Keep   On

    [PARSER]
        Name        Mobile
        Format      json
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Time_Keep   On

    [PARSER]
        Name        spring-boot
        Format      regex
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Decode_Field_as escaped_utf8 msg
        Regex       (?m-ix)^{"log":"(?<logtime>[^ ]* [^ ]*) {1,2}(?<level>[^ ]*)( \[(?<appname>[^,]*),(?<traceid>[^,]*),(?<spanid>[^,]*),(?<exportable>[^\]]*)\])? (?<processid>\d+) --- \[(?<thread>[^\]]*)\] (?<class>[^ ]*) *:(?<msg>.*)","stream".*time":"(?<time>[^"]*)\"}$

    [PARSER]
        Name        java-spring
        Format      regex
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Regex       (?m-ix)^{"log":"(?<logtime>[^ ]* [^ ]*) {1,2}(?<level>[^ ]*)( \[(?<appname>[^,]*),(?<traceid>[^,]*),(?<spanid>[^,]*),(?<exportable>[^\]]*)\])? (?<processid>\d+) --- \[(?<thread>[^\]]*)\] (?<class>[^ ]*) *:(?<msg>.*)","stream".*time":"(?<time>[^"]*)\"}$

    [PARSER]
        Name        springnotrace
        Format      regex
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Regex       (?m-ix)^{"log":"(?<logtime>[^ ]* [^ ]*)  (?<level>[^ ]*) (?<process_id>[\d]+) \-\-\- \[(?<span_id>[^\]]+)\](?<msg>.*)","stream".*time":"(?<time>[^"]*)\"}$

    [PARSER]
        Name   ErrLines
        Format regex
        Decode_Field_as escaped_utf8 errs
        Regex  (?<errs>(?<=:\").*(?=\","stream))

    [PARSER]
        Name        syslog
        Format      regex
        Regex       ^\<(?<pri>[0-9]+)\>(?<time>[^ ]* {1,2}[^ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? *(?<message>.*)$
        Time_Key    time
        Time_Format %b %d %H:%M:%S
---
# Source: choerodon-logging/charts/logging-agent/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: logging-agent-config-release-name
data:
  config.yaml: |
    ---
    fluentbit:
      Namespace: default
      ConfigmapName: fluent-bit-conf-release-name
      DefaultCollectorType: "tail"
      DaemonSetName: fluent-bit-release-name
      LabelSelector: choerodon.io/logs-parser
      AnnotationSelector: choerodon.io/logs-parser
      ConfigKey: fluent-bit.conf
---
# Source: choerodon-logging/templates/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: logging-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: logging
  namespace: default
---
# Source: choerodon-logging/charts/fluent-bit/templates/deamonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluent-bit-release-name
  labels:
    choerodon.io/release: "release-name"
    choerodon.io/infra: "fluent-bit"
    choerodon.io/logs-parser: "docker"
spec:
  selector:
    matchLabels:
        choerodon.io/release: "release-name"
        choerodon.io/infra: "fluent-bit"
  template:
    metadata:
      labels:
            choerodon.io/release: "release-name"
            choerodon.io/infra: "fluent-bit"
    spec:
      serviceAccountName: logging
      containers:
        - name: fluent-bit
          image: "registry.cn-shanghai.aliyuncs.com/choerodon-tools/fluent-bit:0.13.6"
          imagePullPolicy: IfNotPresent
          ports:
          - name: usual
            containerPort: 24224
            protocol: TCP
          env:
          - name: ES_HOST
            value: elasticsearch.logging.svc
          - name: ES_PORT
            value: "9200"
          volumeMounts:
          - name: varlog
            mountPath: /var/log
          - name: varlibdockercontainers
            mountPath: /var/lib/docker/containers
            readOnly: true
          - name: flb-confmap
            mountPath: /fluent-bit/etc
          resources:
            limits:
              cpu: 300m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 512Mi
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: flb-confmap
        configMap:
          name: fluent-bit-conf-release-name
          items:
          - key: fluent-bit.conf
            path: fluent-bit.conf
          - key: parsers.conf
            path: parsers.conf
---
# Source: choerodon-logging/charts/logging-agent/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name
  labels:
    choerodon.io/release: "release-name"
    choerodon.io/infra: "logging-agent"
spec:
  replicas: 1
  selector:
    matchLabels:
      choerodon.io/release: "release-name"
      choerodon.io/infra: "logging-agent"
  template:
    metadata:
      annotations:
        choerodon.io/metrics-group: "logging-agent"
        choerodon.io/metrics-path: "/metrics"
      labels:
        choerodon.io/release: "release-name"
        choerodon.io/infra: "logging-agent"
        release: release-name
    spec:
      serviceAccountName: logging
      containers:
        - name: logging-agent
          image: "registry.cn-shanghai.aliyuncs.com/c7n/logging-agent:0.1.2"
          imagePullPolicy: Always
          command: ["sh", "-c", "/logging-agent -c /var/conf/config.yaml"]
          #args: ["--config", "/var/conf/config.yaml"]
          volumeMounts:
          - mountPath: /var/conf
            name: config
          ports:
            - name: http
              containerPort: 9800
              protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: config.yaml
            path: config.yaml
          name: logging-agent-config-release-name
        name: config
