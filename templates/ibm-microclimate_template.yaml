---
# Source: ibm-microclimate/charts/gitlab-ce/charts/postgresql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-postgresql
  labels:
    app: release-name-postgresql
    chart: "postgresql-0.8.1"
    release: "release-name"
    heritage: "Helm"
type: Opaque
data:
  
  postgres-password:  "Z2l0bGFi"
---
# Source: ibm-microclimate/charts/gitlab-ce/charts/redis/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-redis
  labels:
    app: release-name-redis
    chart: "redis-0.9.0"
    release: "release-name"
    heritage: "Helm"
type: Opaque
data:
  redis-password: "Z2l0bGFi"
---
# Source: ibm-microclimate/charts/gitlab-ce/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-gitlab-ce
  labels:
    app: release-name-gitlab-ce
    chart: "gitlab-ce-0.2.1"
    release: "release-name"
    heritage: "Helm"
type: Opaque
data:
  # Defaulting to a non-sensical value to silence b64enc warning. We'll never
  # actually use this default due to the if statement.
  gitlab-root-password: "cGFzc3dvcmQ="
  
  db-user: "Z2l0bGFi"
  db-password: "Z2l0bGFi"
  redis-password: "Z2l0bGFi"
---
# Source: ibm-microclimate/charts/jenkins/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-jenkins
  labels:
    app: release-name-jenkins
    chart: "jenkins-0.12.1"
    release: "release-name"
    heritage: "Helm"
type: Opaque
data:
  
  jenkins-admin-password: "YWRtaW4="
  
  jenkins-admin-user: "YWRtaW4="
---
# Source: ibm-microclimate/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-ibm-microclimate
  labels:
    app: release-name-ibm-microclimate
    chart: "ibm-microclimate-0.1.0"
    release: "release-name"
    heritage: "Helm"
type: Opaque
data:
  
  jenkins-admin-password: "YWRtaW4="
  
  jenkins-admin-user: "YWRtaW4="
  
  jenkins-admin-api-token: "YmU2NTJlMGU2MGIwYWYwNjdjMmI1NGNkMDQ3MjBkZjM="
---
# Source: ibm-microclimate/charts/gitlab-ce/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-gitlab-ce
  labels:
    app: release-name-gitlab-ce
    chart: "gitlab-ce-0.2.1"
    release: "release-name"
    heritage: "Helm"
data:
  ## This is used by GitLab Omnibus as the primary means of configuration.
  ## ref: https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/files/gitlab-config-template/gitlab.rb.template
  ##
  gitlab_omnibus_config: |
    external_url ENV['EXTERNAL_URL'];
    root_pass = ENV['GITLAB_ROOT_PASSWORD'];
    gitlab_rails['initial_root_password'] = root_pass unless root_pass.to_s == '';
    postgresql['enable'] = false;
    gitlab_rails['db_host'] = ENV['DB_HOST'];
    gitlab_rails['db_password'] = ENV['DB_PASSWORD'];
    gitlab_rails['db_username'] = ENV['DB_USER'];
    gitlab_rails['db_database'] = ENV['DB_DATABASE'];
    redis['enable'] = false;
    gitlab_rails['redis_host'] = ENV['REDIS_HOST'];
    gitlab_rails['redis_password'] = ENV['REDIS_PASSWORD'];
    unicorn['worker_processes'] = 2;
    manage_accounts['enable'] = true;
    manage_storage_directories['manage_etc'] = false;
    gitlab_shell['auth_file'] = '/gitlab-data/ssh/authorized_keys';
    git_data_dir '/gitlab-data/git-data';
    gitlab_rails['shared_path'] = '/gitlab-data/shared';
    gitlab_rails['uploads_directory'] = '/gitlab-data/uploads';
    gitlab_ci['builds_directory'] = '/gitlab-data/builds';
---
# Source: ibm-microclimate/charts/jenkins/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-jenkins
data:
  user_config.xml: |-
    <?xml version='1.0' encoding='UTF-8'?>
    <user>
      <fullName>admin</fullName>
      <description></description>
      <properties>
        <jenkins.security.ApiTokenProperty>
          <apiToken>{AQAAABAAAAAwSTU69OS1ao84T1ELN3Nb+UNbeU+n29OVrqX69YoNHEW0jAO53lgXrllwn8eIcNwteXMGP/MOxhhWanY2woXh8w==}</apiToken>
        </jenkins.security.ApiTokenProperty>
        <com.cloudbees.plugins.credentials.UserCredentialsProvider_-UserCredentialsProperty plugin="credentials@2.1.16">
          <domainCredentialsMap class="hudson.util.CopyOnWriteMap$Hash">
            <entry>
              <com.cloudbees.plugins.credentials.domains.Domain>
                <specifications/>
              </com.cloudbees.plugins.credentials.domains.Domain>
              <java.util.concurrent.CopyOnWriteArrayList/>
            </entry>
          </domainCredentialsMap>
        </com.cloudbees.plugins.credentials.UserCredentialsProvider_-UserCredentialsProperty>
        <hudson.tasks.Mailer_-UserProperty plugin="mailer@1.20">
          <emailAddress></emailAddress>
        </hudson.tasks.Mailer_-UserProperty>
        <hudson.model.MyViewsProperty>
          <primaryViewName></primaryViewName>
          <views>
            <hudson.model.AllView>
              <owner class="hudson.model.MyViewsProperty" reference="../../.."/>
              <name>all</name>
              <filterExecutors>false</filterExecutors>
              <filterQueue>false</filterQueue>
              <properties class="hudson.model.View$PropertyList"/>
            </hudson.model.AllView>
          </views>
        </hudson.model.MyViewsProperty>
        <org.jenkinsci.plugins.displayurlapi.user.PreferredProviderUserProperty plugin="display-url-api@2.2.0">
          <providerId>default</providerId>
        </org.jenkinsci.plugins.displayurlapi.user.PreferredProviderUserProperty>
        <hudson.model.PaneStatusProperties>
          <collapsed/>
        </hudson.model.PaneStatusProperties>
        <org.jenkinsci.main.modules.cli.auth.ssh.UserPropertyImpl>
          <authorizedKeys></authorizedKeys>
        </org.jenkinsci.main.modules.cli.auth.ssh.UserPropertyImpl>
        <hudson.search.UserSearchProperty>
          <insensitiveSearch>true</insensitiveSearch>
        </hudson.search.UserSearchProperty>
      </properties>
    </user>
  config.xml: |-
    <?xml version='1.0' encoding='UTF-8'?>
    <hudson>
      <disabledAdministrativeMonitors/>
      <version>lts</version>
      <numExecutors>0</numExecutors>
      <mode>NORMAL</mode>
      <useSecurity>true</useSecurity>
      <authorizationStrategy class="hudson.security.FullControlOnceLoggedInAuthorizationStrategy">
        <denyAnonymousReadAccess>true</denyAnonymousReadAccess>
      </authorizationStrategy>
      <securityRealm class="hudson.security.LegacySecurityRealm"/>
      <disableRememberMe>false</disableRememberMe>
      <projectNamingStrategy class="jenkins.model.ProjectNamingStrategy$DefaultProjectNamingStrategy"/>
      <workspaceDir>${JENKINS_HOME}/workspace/${ITEM_FULLNAME}</workspaceDir>
      <buildsDir>${ITEM_ROOTDIR}/builds</buildsDir>
      <markupFormatter class="hudson.markup.EscapedMarkupFormatter"/>
      <jdks/>
      <viewsTabBar class="hudson.views.DefaultViewsTabBar"/>
      <myViewsTabBar class="hudson.views.DefaultMyViewsTabBar"/>
      <clouds>
        <org.csanchez.jenkins.plugins.kubernetes.KubernetesCloud plugin="kubernetes@1.3.1">
          <name>kubernetes</name>
          <templates>
            <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
              <inheritFrom></inheritFrom>
              <name>default</name>
              <instanceCap>2147483647</instanceCap>
              <idleMinutes>0</idleMinutes>
              <label>release-name-jenkins-slave</label>
              <nodeSelector></nodeSelector>
                <nodeUsageMode>NORMAL</nodeUsageMode>
              <volumes>
              </volumes>
              <containers>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>jnlp</name>
                  <image>jenkins/jnlp-slave:3.10-1</image>
                  <privileged>false</privileged>
                  <alwaysPullImage>false</alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command></command>
                  <args>${computer.jnlpmac} ${computer.name}</args>
                  <ttyEnabled>false</ttyEnabled>
                  <resourceRequestCpu>200m</resourceRequestCpu>
                  <resourceRequestMemory>256Mi</resourceRequestMemory>
                  <resourceLimitCpu>200m</resourceLimitCpu>
                  <resourceLimitMemory>256Mi</resourceLimitMemory>
                  <envVars>
                    <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                      <key>JENKINS_URL</key>
                      <value>http://release-name-jenkins:8080</value>
                    </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  </envVars>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
              </containers>
              <envVars/>
              <annotations/>
              <imagePullSecrets/>
              <nodeProperties/>
            </org.csanchez.jenkins.plugins.kubernetes.PodTemplate></templates>
          <serverUrl>https://kubernetes.default</serverUrl>
          <skipTlsVerify>false</skipTlsVerify>
          <namespace>default</namespace>
          <jenkinsUrl>http://release-name-jenkins:8080</jenkinsUrl>
          <jenkinsTunnel>release-name-jenkins-agent:50000</jenkinsTunnel>
          <containerCap>10</containerCap>
          <retentionTimeout>5</retentionTimeout>
          <connectTimeout>0</connectTimeout>
          <readTimeout>0</readTimeout>
        </org.csanchez.jenkins.plugins.kubernetes.KubernetesCloud>
      </clouds>
      <quietPeriod>5</quietPeriod>
      <scmCheckoutRetryCount>0</scmCheckoutRetryCount>
      <views>
        <hudson.model.AllView>
          <owner class="hudson" reference="../../.."/>
          <name>All</name>
          <filterExecutors>false</filterExecutors>
          <filterQueue>false</filterQueue>
          <properties class="hudson.model.View$PropertyList"/>
        </hudson.model.AllView>
      </views>
      <primaryView>All</primaryView>
      <slaveAgentPort>50000</slaveAgentPort>
      <label></label>
      <nodeProperties/>
      <globalNodeProperties>
        <hudson.slaves.EnvironmentVariablesNodeProperty>
          <envVars serialization="custom">
            <unserializable-parents/>
            <tree-map>
              <default>
                <comparator class="hudson.util.CaseInsensitiveComparator"/>
              </default>
              <int>8</int>
              <string>BUILD</string>
              <string>true</string>
              <string>DEPLOY</string>
              <string>true</string>
              <string>TEST</string>
              <string>true</string>
              <string>DEBUG</string>
              <string>false</string>
              <string>NAMESPACE</string>
              <string>microclimate-pipeline-deployments</string>
              <string>DEFAULT_DEPLOY_BRANCH</string>
              <string></string>
              <string>REGISTRY</string>
              <string>mycluster.icp:8500/default</string>
              <string>REGISTRY_SECRET</string>
              <string>microclimate-icp-secret</string>
            </tree-map>
          </envVars>
        </hudson.slaves.EnvironmentVariablesNodeProperty>
      </globalNodeProperties>
      <noUsageStatistics>true</noUsageStatistics>
    </hudson>
  apply_config.sh: |-
    mkdir -p /usr/share/jenkins/ref/secrets/;
    echo "false" > /usr/share/jenkins/ref/secrets/slave-to-master-security-kill-switch;
    cp -n /var/jenkins_config/config.xml /var/jenkins_home;
    cp -n /var/jenkins_config/org.jenkinsci.plugins.workflow.libs.GlobalLibraries.xml /var/jenkins_home;
    mkdir -p /var/jenkins_home/users/admin;
    cp -n /var/jenkins_config/user_config.xml /var/jenkins_home/users/admin/config.xml;
    cp /var/jenkins_config/plugins.txt /var/jenkins_home;
    rm -rf /usr/share/jenkins/ref/plugins/*.lock
    /usr/local/bin/install-plugins.sh `echo $(cat /var/jenkins_home/plugins.txt)`;
  plugins.txt: |-
    kubernetes:1.3.1
    workflow-aggregator:2.5
    workflow-job:2.17
    credentials-binding:1.15
    git:3.8.0
  org.jenkinsci.plugins.workflow.libs.GlobalLibraries.xml: |-
    <?xml version='1.0' encoding='UTF-8'?>
    <org.jenkinsci.plugins.workflow.libs.GlobalLibraries plugin="workflow-cps-global-lib@2.9">
      <libraries>
        <org.jenkinsci.plugins.workflow.libs.LibraryConfiguration>
          <name>MicroserviceBuilder</name>
          <retriever class="org.jenkinsci.plugins.workflow.libs.SCMSourceRetriever">
            <scm class="jenkins.plugins.git.GitSCMSource" plugin="git@3.7.0">
              <id>msb.lib</id>
              <remote>https://github.com/WASdev/microservicebuilder.lib.git</remote>
              <credentialsId>github-oauth-userpass</credentialsId>
              <traits>
                <jenkins.plugins.git.traits.BranchDiscoveryTrait/>
              </traits>
            </scm>
          </retriever>
          <defaultVersion>microclimate-beta</defaultVersion>
          <implicit>true</implicit>
          <allowVersionOverride>true</allowVersionOverride>
          <includeInChangesets>true</includeInChangesets>
        </org.jenkinsci.plugins.workflow.libs.LibraryConfiguration>
      </libraries>
    </org.jenkinsci.plugins.workflow.libs.GlobalLibraries>
---
# Source: ibm-microclimate/charts/jenkins/templates/test-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-jenkins-tests
data:
  run.sh: |-
    @test "Testing Jenkins UI is accessible" {
      curl --retry 24 --retry-delay 10 release-name-jenkins:8080/login
    }
---
# Source: ibm-microclimate/charts/gitlab-ce/charts/postgresql/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-postgresql
  labels:
    app: release-name-postgresql
    chart: "postgresql-0.8.1"
    release: "release-name"
    heritage: "Helm"
  annotations:
    volume.alpha.kubernetes.io/storage-class: default
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
---
# Source: ibm-microclimate/charts/gitlab-ce/charts/redis/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-redis
  labels:
    app: release-name-redis
    chart: "redis-0.9.0"
    release: "release-name"
    heritage: "Helm"
  annotations:
    volume.alpha.kubernetes.io/storage-class: default
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
---
# Source: ibm-microclimate/charts/gitlab-ce/templates/data-pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-gitlab-ce-data
  annotations:
    volume.alpha.kubernetes.io/storage-class: default
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
---
# Source: ibm-microclimate/charts/gitlab-ce/templates/etc-pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-gitlab-ce-etc
  annotations:
    volume.alpha.kubernetes.io/storage-class: default
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "1Gi"
---
# Source: ibm-microclimate/charts/jenkins/templates/home-pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-jenkins
  labels:
    app: release-name-jenkins
    chart: "jenkins-0.12.1"
    release: "release-name"
    heritage: "Helm"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: ibm-microclimate/templates/persistentvolumeclaim.yaml
#*******************************************************************************
# Licensed Materials - Property of IBM
# "Restricted Materials of IBM"
#
# Copyright IBM Corp. 2017 All Rights Reserved
#
# US Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#*******************************************************************************
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-ibm-microclimate
  labels:
    app: release-name-ibm-microclimate
    chart: "ibm-microclimate-0.1.0"
    release: "release-name"
    heritage: "Helm"
spec:
  storageClassName: 
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "2Gi"
---
# Source: ibm-microclimate/charts/gitlab-ce/charts/postgresql/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql
  labels:
    app: release-name-postgresql
    chart: "postgresql-0.8.1"
    release: "release-name"
    heritage: "Helm"
spec:
  type: ClusterIP
  ports:
  - name: postgresql
    port: 5432
    targetPort: postgresql
  selector:
    app: release-name-postgresql
---
# Source: ibm-microclimate/charts/gitlab-ce/charts/redis/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-redis
  labels:
    app: release-name-redis
    chart: "redis-0.9.0"
    release: "release-name"
    heritage: "Helm"
spec:
  ports:
  - name: redis
    port: 6379
    targetPort: redis
  selector:
    app: release-name-redis
---
# Source: ibm-microclimate/charts/gitlab-ce/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-gitlab-ce
  labels:
    app: release-name-gitlab-ce
    chart: "gitlab-ce-0.2.1"
    release: "release-name"
    heritage: "Helm"
spec:
  type: ClusterIP
  ports:
  - name: ssh
    port: 22
    targetPort: ssh
  - name: http
    port: 80
    targetPort: http
  - name: https
    port: 443
    targetPort: https
  selector:
    app: release-name-gitlab-ce
---
# Source: ibm-microclimate/charts/jenkins/templates/jenkins-agent-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jenkins-agent
  labels:
    app: release-name-jenkins
    chart: "jenkins-0.12.1"
    component: "release-name-jenkins-master"
spec:
  ports:
    - port: 50000
      targetPort: 50000
      name: slavelistener
  selector:
    component: "release-name-jenkins-master"
  type: ClusterIP
---
# Source: ibm-microclimate/charts/jenkins/templates/jenkins-master-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jenkins
  labels:
    app: release-name-jenkins
    heritage: "Helm"
    release: "release-name"
    chart: "jenkins-0.12.1"
    component: "release-name-jenkins-master"
spec:
  ports:
    - port: 8080
      name: http
      targetPort: 8080
      
  selector:
    component: "release-name-jenkins-master"
  type: ClusterIP
---
# Source: ibm-microclimate/templates/service.yaml
#*******************************************************************************
# Licensed Materials - Property of IBM
# "Restricted Materials of IBM"
#
# Copyright IBM Corp. 2017 All Rights Reserved
#
# US Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#*******************************************************************************

apiVersion: v1
kind: Service
metadata:
  name: release-name-ibm-microclimate
  labels:
    app: release-name-ibm-microclimate
    chart: "ibm-microclimate-0.1.0"
    release: "release-name"
    heritage: "Helm"
spec:
  type: NodePort
  ports:
    - port: 4191
      name: theia-http
    - port: 9090
      name: portal-http
    - port: 9091
      name: file-watcher-http
  selector:
    app: release-name-ibm-microclimate
    release: release-name
---
# Source: ibm-microclimate/templates/service.yaml
# For the devops piece
apiVersion: v1
kind: Service
metadata:
  name: release-name-ibm-microclimate-devops
spec:
  type: ClusterIP
  ports:
    - port: 9191
      targetPort: 9191
      protocol: TCP
      name: devops-devops
  selector:
    app: release-name-ibm-microclimate-devops
    release: release-name
---
# Source: ibm-microclimate/charts/gitlab-ce/charts/postgresql/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-postgresql
  labels:
    app: release-name-postgresql
    chart: "postgresql-0.8.1"
    release: "release-name"
    heritage: "Helm"
spec:
  template:
    metadata:
      labels:
        app: release-name-postgresql
    spec:
      containers:
      - name: release-name-postgresql
        image: "postgres:9.6"
        imagePullPolicy: ""
        env:
        - name: POSTGRES_USER
          value: "gitlab"
          # Required for pg_isready in the health probes.
        - name: PGUSER
          value: "gitlab"
        - name: POSTGRES_DB
          value: "gitlab"
        - name: POSTGRES_INITDB_ARGS
          value: ""
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: release-name-postgresql
              key: postgres-password
        - name: POD_IP
          valueFrom: { fieldRef: { fieldPath: status.podIP } }
        ports:
        - name: postgresql
          containerPort: 5432
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 5
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data/pgdata
          subPath: postgresql-db
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: release-name-postgresql
---
# Source: ibm-microclimate/charts/gitlab-ce/charts/redis/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-redis
  labels:
    app: release-name-redis
    chart: "redis-0.9.0"
    release: "release-name"
    heritage: "Helm"
spec:
  template:
    metadata:
      labels:
        app: release-name-redis
    spec:
      containers:
      - name: release-name-redis
        image: "bitnami/redis:3.2.9-r2"
        imagePullPolicy: "IfNotPresent"
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: release-name-redis
              key: redis-password
        ports:
        - name: redis
          containerPort: 6379
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 1Gi
        volumeMounts:
        - name: redis-data
          mountPath: /bitnami/redis
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: release-name-redis
---
# Source: ibm-microclimate/charts/gitlab-ce/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-gitlab-ce
  labels:
    app: release-name-gitlab-ce
    chart: "gitlab-ce-0.2.1"
    release: "release-name"
    heritage: "Helm"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: release-name-gitlab-ce
    spec:
      containers:
      - name: release-name-gitlab-ce
        image: gitlab/gitlab-ce:9.4.1-ce.0
        imagePullPolicy: ""
        env:
        ## General GitLab Configs
        ##
        # This is a free-form env var that GitLab Omnibus uses to configure
        # everything. We're passing this in from a configmap and pulling some
        # of the values from the env vars defined below. This is done to
        # avoid leaving secrets visible in kubectl.
        - name: GITLAB_OMNIBUS_CONFIG
          valueFrom:
            configMapKeyRef:
              name: release-name-gitlab-ce
              key: gitlab_omnibus_config
        - name: GITLAB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: release-name-gitlab-ce
              key: gitlab-root-password
        
        - name: EXTERNAL_URL
          value: "http://gitlab.192.168.99.100.nip.io/"
        ## DB configuration
        ##
        - name: DB_HOST
          value: release-name-postgresql
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: release-name-gitlab-ce
              key: db-user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: release-name-gitlab-ce
              key: db-password
        - name: DB_DATABASE
          value: "gitlab"
        ## Redis configuration
        ##
        - name: REDIS_HOST
          value: release-name-redis
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: release-name-gitlab-ce
              key: redis-password
        ports:
        - name: ssh
          containerPort: 22
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        livenessProbe:
          httpGet:
            path: /help
            port: http
          # This pod takes a very long time to start up. Be cautious when
          # lowering this value to avoid Pod death during startup.
          initialDelaySeconds: 200
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 10
        readinessProbe:
          httpGet:
            path: /help
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: gitlab-etc
          mountPath: /etc/gitlab
        - name: gitlab-data
          mountPath: /gitlab-data
        resources:
          limits:
            cpu: 1
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 1Gi
      volumes:
      - name: gitlab-etc
        persistentVolumeClaim:
          claimName: release-name-gitlab-ce-etc
      - name: gitlab-data
        persistentVolumeClaim:
          claimName: release-name-gitlab-ce-data
---
# Source: ibm-microclimate/charts/jenkins/templates/jenkins-master-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-jenkins
  labels:
    heritage: "Helm"
    release: "release-name"
    chart: "jenkins-0.12.1"
    component: "release-name-jenkins-master"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      component: "release-name-jenkins-master"
  template:
    metadata:
      labels:
        app: release-name-jenkins
        heritage: "Helm"
        release: "release-name"
        chart: "jenkins-0.12.1"
        component: "release-name-jenkins-master"
      annotations:
        checksum/config: 7d145c3abd70515593ce673c94c7a9a8139e3a06ebd490b2ea5e04cf453f3ba7
    spec:
      securityContext:
        runAsUser: 0
      serviceAccountName: "default"
      initContainers:
        - name: "copy-default-config"
          image: "jenkins/jenkins:lts"
          imagePullPolicy: "Always"
          command: [ "sh", "/var/jenkins_config/apply_config.sh" ]
          volumeMounts:
            -
              mountPath: /var/jenkins_home
              name: jenkins-home
            -
              mountPath: /var/jenkins_config
              name: jenkins-config
            -
              mountPath: /usr/share/jenkins/ref/plugins/
              name: plugin-dir
            -
              mountPath: /usr/share/jenkins/ref/secrets/
              name: secrets-dir
      containers:
        - name: release-name-jenkins
          image: "jenkins/jenkins:lts"
          imagePullPolicy: "Always"
          args: [ "--argumentsRealm.passwd.$(ADMIN_USER)=$(ADMIN_PASSWORD)",  "--argumentsRealm.roles.$(ADMIN_USER)=admin"]
          env:
            - name: JAVA_OPTS
              value: ""
            - name: JENKINS_OPTS
              value: ""
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-jenkins
                  key: jenkins-admin-password
            - name: ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: release-name-jenkins
                  key: jenkins-admin-user
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 50000
              name: slavelistener
          livenessProbe:
            httpGet:
              path: /login
              port: http
            initialDelaySeconds: 120
          readinessProbe:
            httpGet:
              path: /login
              port: http
            initialDelaySeconds: 120
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
          volumeMounts:
            -
              mountPath: /var/jenkins_home
              name: jenkins-home
              readOnly: false
            -
              mountPath: /var/jenkins_config
              name: jenkins-config
              readOnly: true
            -
              mountPath: /usr/share/jenkins/ref/plugins/
              name: plugin-dir
              readOnly: false
            -
              mountPath: /usr/share/jenkins/ref/secrets/
              name: secrets-dir
              readOnly: false
      volumes:
      - name: jenkins-config
        configMap:
          name: release-name-jenkins
      - name: plugin-dir
        emptyDir: {}
      - name: secrets-dir
        emptyDir: {}
      - name: jenkins-home
        persistentVolumeClaim:
          claimName: release-name-jenkins
---
# Source: ibm-microclimate/templates/deployment.yaml
#*******************************************************************************
# Licensed Materials - Property of IBM
# "Restricted Materials of IBM"
#
# Copyright IBM Corp. 2017 All Rights Reserved
#
# US Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#*******************************************************************************

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-ibm-microclimate
  labels:
    app: release-name-ibm-microclimate
    chart: "ibm-microclimate-0.1.0"
    release: "release-name"
    heritage: "Helm"

spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: release-name-ibm-microclimate
        chart: "ibm-microclimate-0.1.0"
        release: "release-name"
        heritage: "Helm"
      annotations:
        productName: "IBM Microclimate v1"
        productID: "IBMMicroclimate_1.0_perpetual_00000"
        productVersion: "1.0"

    spec:
      affinity:        
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64

      volumes:
      - name: shared-workspace
        persistentVolumeClaim:
          claimName: release-name-ibm-microclimate
      - name: docker-socket
        hostPath:
          path: /var/run/
      - name: registry-secret
        secret:
          secretName: "microclimate-icp-secret"

      containers:

      - name: microclimate-portal
        image: ibmcom/microclimate-portal:latest
        imagePullPolicy: "Always"
        volumeMounts:
        - name: shared-workspace
          mountPath: /microclimate-workspace
        - name: docker-socket
          mountPath: /var/run/
        env:
          - name: IN_K8
            value: "true"
          - name: JMETER_IMAGE
            value: ibmcom/microclimate-jmeter:latest
          - name: SERVICE_NAME
            value: release-name-ibm-microclimate
          - name: EDITOR_IMAGE
            value: ibmcom/microclimate-theia:latest
          - name: EDITOR_MEM_REQUEST
            value: 350Mi
          - name: EDITOR_CPU_REQUEST
            value: 30m
          - name: EDITOR_MEM_LIMIT
            value: 1Gi
          - name: EDITOR_CPU_LIMIT
            value: 500m
        ports:
        - containerPort: 9090
        livenessProbe:
          initialDelaySeconds: 30
          periodSeconds: 10
          httpGet:
            path: /
            port: 9090
        readinessProbe:
          initialDelaySeconds: 15
          periodSeconds: 10
          httpGet:
            path: /
            port: 9090
        resources:
          requests:
            memory: 128Mi
            cpu: 300m
          limits:
            memory: 2Gi
            cpu: 500m

      - name: microclimate-editor
        image: ibmcom/microclimate-theia:latest
        imagePullPolicy: "Always"
        volumeMounts:
        - name: shared-workspace
          mountPath: /home/microclimate-workspace
        ports:
          - containerPort: 4191
        livenessProbe:
          initialDelaySeconds: 30
          periodSeconds: 10
          httpGet:
            path: /
            port: 4191
        readinessProbe:
          initialDelaySeconds: 15
          periodSeconds: 10
          httpGet:
            path: /
            port: 4191
        resources:
          requests:
            memory: 350Mi
            cpu: 30m
          limits:
            memory: 1Gi
            cpu: 500m


      - name: microclimate-file-watcher
        image: ibmcom/microclimate-file-watcher:latest
        imagePullPolicy: "Always"
        volumeMounts:
        - name: shared-workspace
          mountPath: /microclimate-workspace
        - name: docker-socket
          mountPath: /var/run/
        - name: registry-secret
          mountPath: /tmp/secret
        env:
          - name: IN_K8
            value: "true"
          - name: JMETER_IMAGE
            value: ibmcom/microclimate-jmeter:latest
          - name: DOCKER_REGISTRY
            value: "mycluster.icp:8500/default"
        ports:
          - containerPort: 9091
        command: ["/scripts/root-watcher.sh", "/microclimate-workspace"]
        livenessProbe:
          initialDelaySeconds: 30
          periodSeconds: 10
          httpGet:
            path: /health
            port: 9091
        readinessProbe:
          initialDelaySeconds: 15
          periodSeconds: 10
          httpGet:
            path: /health
            port: 9091
        resources:
          requests:
            memory: 128Mi
            cpu: 500m
          limits:
            memory: 2Gi
            cpu: 3000m
---
# Source: ibm-microclimate/templates/deployment.yaml
# Dedicated deployment for devops piece
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-ibm-microclimate-devops
  labels:
    app: release-name-ibm-microclimate-devops
    chart: ibm-microclimate-0.1.0
    release: release-name
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: release-name-ibm-microclimate-devops
      release: release-name
  replicas: 
  template:
    metadata:
      labels:
        app: release-name-ibm-microclimate-devops
        release: release-name
    spec:
      containers:
      - name: devops-chart
        image: "ibmcom/microclimate-devops:latest"
        imagePullPolicy: Always
        ports:
          - containerPort: 9191
        livenessProbe:
          httpGet:
            path: /health/liveness
            port: 9191
          initialDelaySeconds: 600
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /health/readiness
            port: 9191
          initialDelaySeconds: 30
          periodSeconds: 5
        env:
        - name: JENKINS_URL
          value: "http://release-name-jenkins:8080"
        - name: JENKINS_EXTERNAL_URL
          value: "http://jenkins.192.168.99.100.nip.io"
        - name: JENKINS_USE_SECURITY
          value: "true"
        - name: JENKINS_USER
          value: "admin"
        - name: JENKINS_API_TOKEN
          value: "be652e0e60b0af067c2b54cd04720df3"
        - name: GITLAB_URL
          value: "http://release-name-gitlab-ce:80"
        - name: GITLAB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: release-name-gitlab-ce
              key: gitlab-root-password
        resources:
---
# Source: ibm-microclimate/charts/gitlab-ce/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: release-name-gitlab-ce
  labels:
    app: release-name-gitlab-ce
    chart: "gitlab-ce-0.2.1"
    release: "release-name"
    heritage: "Helm"
spec:
  rules:
  - host: "gitlab.192.168.99.100.nip.io"
    http:
      paths:
      - path: /
        backend:
          serviceName: release-name-gitlab-ce
          servicePort: 80
---
# Source: ibm-microclimate/charts/jenkins/templates/jenkins-master-ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: release-name-jenkins
spec:
  rules:
  - host: "jenkins.192.168.99.100.nip.io"
    http:
      paths:
      - backend:
          serviceName: release-name-jenkins
          servicePort: 8080
---
# Source: ibm-microclimate/charts/jenkins/templates/jenkins-test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-ui-test-c9kxr"
  annotations:
    "helm.sh/hook": test-success
spec:
  initContainers:
    - name: "test-framework"
      image: "dduportal/bats:0.4.0"
      command:
      - "bash"
      - "-c"
      - |
        set -ex
        # copy bats to tools dir
        cp -R /usr/local/libexec/ /tools/bats/
      volumeMounts:
      - mountPath: /tools
        name: tools
  containers:
    - name: release-name-ui-test
      image: jenkins/jenkins:lts
      command: ["/tools/bats/bats", "-t", "/tests/run.sh"]
      volumeMounts:
      - mountPath: /tests
        name: tests
        readOnly: true
      - mountPath: /tools
        name: tools
  volumes:
  - name: tests
    configMap:
      name: release-name-jenkins-tests
  - name: tools
    emptyDir: {}
  restartPolicy: Never
---
# Source: ibm-microclimate/templates/tests/portal-endpoint-test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-portal-endpoint-test"
  labels:
    app: release-name-ibm-microclimate
    chart: "ibm-microclimate-0.1.0"
    release: "release-name"
    heritage: "Helm"
  annotations:
    "helm.sh/hook": test-success
spec:
  restartPolicy: Never
  containers:
    - name: "release-name-portal-endpoint-test"
      image: ibmcom/microclimate-portal:latest
      command: ["curl"]
      args:  ['release-name-ibm-microclimate:9090']
---
# Source: ibm-microclimate/templates/tests/theia-endpoint-test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-theia-endpoint-test"
  labels:
    app: release-name-ibm-microclimate
    chart: "ibm-microclimate-0.1.0"
    release: "release-name"
    heritage: "Helm"
  annotations:
    "helm.sh/hook": test-success
spec:
  restartPolicy: Never
  containers:
    - name: "release-name-theia-endpoint-test"
      image: ibmcom/microclimate-portal:latest
      command: ["curl"]
      args:  ['release-name-ibm-microclimate:4191']
