---
# Source: pipeline/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-pipeline
  labels:
    
    app.kubernetes.io/name: pipeline
    helm.sh/chart: pipeline-2.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.82.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: pipeline/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-pipeline
  labels:
    
    app.kubernetes.io/name: pipeline
    helm.sh/chart: pipeline-2.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.82.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  clientId: ""
  clientSecret: ""
  tokenSigningKey: ""
---
# Source: pipeline/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-pipeline-tls
  labels:
    
    app.kubernetes.io/name: pipeline
    helm.sh/chart: pipeline-2.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.82.0"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGekNDQWYrZ0F3SUJBZ0lRTEpoNlZ6OTZZRnREckVKWXRHeFYzREFOQmdrcWhraUc5dzBCQVFzRkFEQVcKTVJRd0VnWURWUVFERXd0d2FYQmxiR2x1WlMxallUQWVGdzB5TkRBMU1UVXdPVFE0TVRWYUZ3MHlOVEExTVRVdwpPVFE0TVRWYU1CWXhGREFTQmdOVkJBTVRDM0JwY0dWc2FXNWxMV05oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBMExIRGdXNnpNQ2NsVGdabU01cktEMm0zUE1oeFRnSjhSOVhlNFNrYVhBNXYKTHg1ZUJ0dTR1Y20vZk9USSswL3QwaUVSS25td1h5cmtXL0JmWEpOVVM3SWdTZnB2WUtqTGdvSjRHNWRxcVRBSAppWDgwcXdZL0srTFQ2OGxCbGFwaG9yM1hLbFU1Qi9vVi8yd3BHUkZwVmZNMDJGbWZYLzBqTE9sRGw0RTg2U1R5Cll4TDR6TUpYdlgvR25VaVdpa1hVa1hiVDljMlpSYlFjd3QyWEx3bk40YjNGekhyUVdEWHNDUldPREhFQTRITkcKWWxUVFdvMGNkMzJhZXQ5RUlBdkc5aFlUc2tNaGgvSVhDdjBVUjRvZ2YreFFselhJQ3ZHSG9LQ1pUSlpIWWRsOApRaG5ZWFljaW1DMTh0dC9HVWxsK2IxUXVsZFBFa0RiTC91MlRXSGZJb1FJREFRQUJvMkV3WHpBT0JnTlZIUThCCkFmOEVCQU1DQXFRd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIKL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkN2WTU3am04R2xncjAyVUNQWU9Ga0tpc3JQak1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUUFIeDF1T2NkMUVmNGFWaTVVTEVqMlFWNk9teDVRYXF3Q1V1d2lmNzcwcGtDQ2xJUEIxCktIVjkxdnppbmNiMnZSMlN4YmhvdldhSUZsa3ZoTlNEdlEwZUliQ3ZycHVERis3UEQvamFDUy9IWWZ2VmxiclYKZTVkd2JHNVVsTzI4UnFVaGkvdUpucjZpaWRkMHNjejBsZ1VqZEUvZE56Mmk2ZXRWSHRieFdLc09KNUwvVTVGawpiMm9JZG56YjJack40ZDZaemw3aHZ0eTBjWC95cW52OU9xQ280Qk1XZVJUV2VCZUtWUUZOd0FCd1NVMmNraW5uCjFMTkgxbG0vL2hPN1RKbmhGVGdHN0RoUXk3bzVWRmkvZCtEMnc0VTBYSjJTZUY3R3hiQ283MHppTHZNbXZ4WkwKb1NmOXpMVHNJY2VNd3dDdUE0eEZTaG50NEFVRFhsT3cxekJ3Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhVENDQWxHZ0F3SUJBZ0lRRnRFUVlSdVFYSDd0VkxtL1N1MEFQakFOQmdrcWhraUc5dzBCQVFzRkFEQVcKTVJRd0VnWURWUVFERXd0d2FYQmxiR2x1WlMxallUQWVGdzB5TkRBMU1UVXdPVFE0TVRWYUZ3MHlOVEExTVRVdwpPVFE0TVRWYU1DQXhIakFjQmdOVkJBTVRGWEpsYkdWaGMyVXRibUZ0WlMxd2FYQmxiR2x1WlRDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU52YW42U041VXBUTnhRdThJZmJFRFcvdGRjYU9HMTUKaEhBVHdMOUlLMDhJUWNzQ2sxTTErLzV5TXplL08zWVZSbElnMWNUenJyRHkvVDRROTR3MG1iZnI1OXpuQUJXZQphMDlQYU9SRFM5NjNkWTlaTytyeFp3R2NQeVBRSHRpRFV5Q3NUdHJnY2wrK2ZTcHlGODBsdlRXU3c0REMvbDk1CktCSDZHMzRvbFNRdEY2TTFGQS9ZNHhsWWlQV21MUThJak03b21GRHNLbEJLU1AyRzVXUXFpUm9zNnQxZ2RQS1AKSDQ0dVBaZkdTMElYY25DU1RaR2dOSjloUmpVQWxnY3lmMlFSeVZSZ29vMm41elhTZnhiSG56bHV6dXdCQzVuLwowU25zOWZpNERtL1E5bjRHdUZBTUZ4cmRuaXMvTVZUeTROdER0eTh2R24rcW00UHJpNGdrMWJrQ0F3RUFBYU9CCnFEQ0JwVEFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUYKQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVUs5am51T2J3YVdDdlRaUUk5ZzRXUXFLeQpzK013UlFZRFZSMFJCRDR3UElJVmNtVnNaV0Z6WlMxdVlXMWxMWEJwY0dWc2FXNWxnaDF5Wld4bFlYTmxMVzVoCmJXVXRjR2x3Wld4cGJtVXVaR1ZtWVhWc2RJY0Vmd0FBQVRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUlHTzkKRFE5R01sMHgxbjVvUVRLcWRPRm9kV0tybHpYTUFlbUxIRkRrRWxBYkM1TVJvdlE2RmhjS21DeFFKdC81OGNJSwoyaDlnWXdKMkFGM3RiMUdpUHZ4NUlzMVNkbkRTSk9MN3ZEbysxeUsyUDN6Tk5nS0RNU2N6N250aEhPeTVhU3AxCmRXa1YxM0oySTBJakhGQXUrWWkxS3c0SmdOeTJQbjZldkxIUVR2UC96cmc0cTlyS2gxM1FrZGp1d2pPZURONUMKOXBMQU0xaFErTkgxd2Q0R3g5WWxBT2UwTnlRZHU2THhxN1BVZjFDWTZ3dFpScTV2b2JRbnltRFpSRjQ0TGpUSgpxOVY0bHdTK3VQSWJacGVEeVQ2bmREaWdNL0phdnUrZGs5YjAwUnp0Y0x4dlJGam5PYkprOE5tRUZ2RXRQOUU5CmxvdURwMkhnbjhXaEFPUk03dz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMjlxZnBJM2xTbE0zRkM3d2g5c1FOYisxMXhvNGJYbUVjQlBBdjBnclR3aEJ5d0tUClV6WDcvbkl6Tjc4N2RoVkdVaURWeFBPdXNQTDlQaEQzakRTWnQrdm4zT2NBRlo1clQwOW81RU5MM3JkMWoxazcKNnZGbkFady9JOUFlMklOVElLeE8ydUJ5WDc1OUtuSVh6U1c5TlpMRGdNTCtYM2tvRWZvYmZpaVZKQzBYb3pVVQpEOWpqR1ZpSTlhWXREd2lNenVpWVVPd3FVRXBJL1libFpDcUpHaXpxM1dCMDhvOGZqaTQ5bDhaTFFoZHljSkpOCmthQTBuMkZHTlFDV0J6Si9aQkhKVkdDaWphZm5OZEovRnNlZk9XN083QUVMbWYvUktlejErTGdPYjlEMmZnYTQKVUF3WEd0MmVLejh4VlBMZzIwTzNMeThhZjZxYmcrdUxpQ1RWdVFJREFRQUJBb0lCQURPWjdwcGF5NVJVVDdzbgpBVUdCd3g0NmJ0MmJ3OTYrQkwyaGhUM2dISG9pUC83OERjUWNDWmRCQ3BCdEMvRzlNSklhTHRKWk40bEVudmV3ClY4bktsc0c2VnVOY1BJTFdlZTFWZ0JNRFVJMW5sZW9kVVpqbEsvNE94Q3NOc0ErMVV3OTZJYy94bWlhcXVRbjcKV1diSEVzKytNTERLRTVZcEE2U2toVXRwRHdnOE5kQ0N0bEpGQ3dFRkhDejBFNlMxVno5S3R1elpUSzR5TmV3UQppZ1czMWJtODIveHVEU0pHZXVFSE1FVHl1a1U4cUdrTnd1K1VHU0pUUG1KZVlVUEtqR1NyenpwbExwcWhkTHpWCm43WEpMNG1ndVFhajZNdkk0UyttRExBTWRvZG1JNUNYcmdxRkJwMEdyOFJyVTNrcDVObmJQRnpKbWJNeVcva3YKb0VrWG5Qa0NnWUVBN04wMEV4V01qYms2SDZLTmZQSW1FR0Q5N3huYUl2K2lOM3BISFU2cHBkZG9aSEhNSjhmVApvZy96YXM3clBERmN5QVJBWi9NbHJHRVRTVzdFa1QySHhUb1k3bTk2MzQ5Unp3dW9lbU44Mno2RlZ0NURxWmNmCjQxeVhmQ1BrK2ZPVmN4aHBoNjlyMHBsVHVmYm44eWVuWmp3K1I3RExNMElOY1NLY2ZtVnMwRmNDZ1lFQTdaMmUKb1grRW1TMWp1YjNmWkxVdStpd0xncVR4VVEwYTV1Y0lLT2hlMklSRG5VUWFGWEQ0dDNPY1M2Ujl2U1poOXg0NgptTitSZEVQUzRwNUhhSk5ILzdYdlZrZlpWRnJuR09Sa01WQWVnY0xyMGtTMlRXbVpnM3FaTk9VbURUS3hmckVFCnc2NGZUTk9aZExaZW9sTkl5Rmpya2FUNERMVUNNNHFPYjUydGdHOENnWUJNbTA1WVRjUGpvbUNXRXJESUZGa1QKT3d0bDVXcVRueklMMTFSZ3VpeE1JdHIwZ1ltUjVDTWlheDVERVNFcm1wdHpaVXlmVWhpQkkvUms3NXBManliMgpOdEFSYmFURDRVcUlPREVKUkZ3QlhMc3JXVDl3L2h1bUlUQXRTajZvU0l1eGFkZlh0bmljNkZJWDl5OFZpV0d1Cnd4VXhncEIxeDRzcGFCUk5IT2lRaVFLQmdDa013K3p1bEwvSndhTERGS2JYVGtoVjk1OFlVOEJHM1ZEcXROUXMKWU1aVEEwTldFcE9Gc3RJdW5OL01pUlIyWHhKTUhKOXdjRFoveVJ6eGJ6QzMwUVp5TGVqZi9NRy8rcENvVkU3WQpvb3lVV2gwM1ZhOUdBUWxmMHJ2Nm9ucEJPYnpEWkNsU0dZSXlSQjZQcXdXc0ViVGE5OGR2a3BMUGFwUHc2ZTZLCmRRRHRBb0dCQUxISkl2YjA4YmEwcmR2NWJNM3FYTUpnUUlldFpmOVBiSHV0M2g1NTZNZUdpWkJDUjB2b05GMDkKbFhTMkxGUmowUFRzaFk1Snp3TVFhRXR6NVc5STVKYXBVK1NvQ3VDL2VLZjhhZUNWZ3IyWHBvODdCV3BBUnlXTQpvWGFLb3FGd2FkU09UbmtFQU9rN05qS2JvaWJNdG81VjRPanRhdk5ZT2wvZkgrMG1lTDQxCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: pipeline/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-pipeline
  labels:
    
    app.kubernetes.io/name: pipeline
    helm.sh/chart: pipeline-2.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.82.0"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    auth:
      oidc:
        clientId: ""
        clientSecret: ""
      token:
        signingKey: ""
    cluster:
      securityScan:
        anchore:
          enabled: false
          secretKey: adminPassword
          secretName: ""
          user: admin
    distribution:
      pke:
        amazon:
          enabled: true
        azure:
          enabled: true
    pipeline:
      basePath: /pipeline
      caCertFile: /tls/ca.crt
      certFile: /tls/tls.crt
      keyFile: /tls/tls.key
    vault:
      address: ""
      insecure: false
    database:
      driver: ""
      host: ""
      name: pipeline
      port: ""
      tls: "false"
      user: pipeline
---
# Source: pipeline/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-pipeline
  labels:
    
    app.kubernetes.io/name: pipeline
    helm.sh/chart: pipeline-2.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.82.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
  - port: 9090
    targetPort: 9090
    protocol: TCP
    # https://github.com/containous/traefik/issues/3806
    name: "https-pipeline"
  selector:
    app.kubernetes.io/name: pipeline
    app.kubernetes.io/instance: release-name
---
# Source: pipeline/templates/deployment-worker.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-pipeline-worker
  labels:
    
    app.kubernetes.io/name: pipeline-worker
    helm.sh/chart: pipeline-2.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.82.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  replicas: 1
  strategy:
    
    {}
  selector:
    matchLabels:
      app.kubernetes.io/name: pipeline-worker
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      name: release-name-pipeline
      labels:
        app.kubernetes.io/name: pipeline-worker
        app.kubernetes.io/instance: release-name
      annotations:
        checksum/config: "5bad2a4b259c023a268322be8130b35dea6f88680f48e1a5ba6c1a1501e0a433"
    spec:
      hostAliases:
        []
      containers:
      - name: pipeline
        image: ghcr.io/banzaicloud/pipeline:0.81.0
        imagePullPolicy: IfNotPresent
        command: ["/worker"]
        env:
          # Database password from secret
          # Authentication configuration
          - name: PIPELINE_AUTH_OIDC_CLIENTID
            valueFrom:
              secretKeyRef:
                name: release-name-pipeline
                key: clientId
          - name: PIPELINE_AUTH_OIDC_CLIENTSECRET
            valueFrom:
              secretKeyRef:
                name: release-name-pipeline
                key: clientSecret
          - name: PIPELINE_AUTH_TOKEN_SIGNINGKEY
            valueFrom:
              secretKeyRef:
                name: release-name-pipeline
                key: tokenSigningKey

          # Vault configuration
          - name: VAULT_ADDR
            value: 
          - name: VAULT_SKIP_VERIFY
            value: "false"

          # Additional environment variables
        resources:
          
            requests:
              cpu: 250m
              memory: 256Mi
        volumeMounts:
          - name: config-volume
            mountPath: /config
      volumes:
        - name: config-volume
          configMap:
            name: release-name-pipeline
      serviceAccountName: release-name-pipeline
---
# Source: pipeline/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-pipeline
  labels:
    
    app.kubernetes.io/name: pipeline
    helm.sh/chart: pipeline-2.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.82.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  replicas: 1
  strategy:
     
    rollingUpdate: null
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: pipeline
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      name: release-name-pipeline
      labels:
        app.kubernetes.io/name: pipeline
        app.kubernetes.io/instance: release-name
      annotations:
        checksum/config: "5bad2a4b259c023a268322be8130b35dea6f88680f48e1a5ba6c1a1501e0a433"
    spec:
      hostAliases:
        []
      containers:
      - name: pipeline
        image: ghcr.io/banzaicloud/pipeline:0.81.0
        imagePullPolicy: IfNotPresent
        args: ["/pipeline", "--addr=0.0.0.0:9090", "--telemetry-addr=0.0.0.0:9900"]
        env:
          - name: PIPELINE_TELEMETRY_ENABLED
            value: "false"
          # Database password from secret
          # Authentication configuration
          - name: PIPELINE_AUTH_OIDC_CLIENTID
            valueFrom:
              secretKeyRef:
                name: release-name-pipeline
                key: clientId
          - name: PIPELINE_AUTH_OIDC_CLIENTSECRET
            valueFrom:
              secretKeyRef:
                name: release-name-pipeline
                key: clientSecret
          - name: PIPELINE_AUTH_TOKEN_SIGNINGKEY
            valueFrom:
              secretKeyRef:
                name: release-name-pipeline
                key: tokenSigningKey

          - name: PIPELINECTL_API_URL
            value: https://127.0.0.1:9090
          - name: PIPELINECTL_API_VERIFY
            value: "false"

          # Vault configuration
          - name: VAULT_ADDR
            value: 
          - name: VAULT_SKIP_VERIFY
            value: "false"

          # Additional environment variables
        ports:
          - name: pipeline
            containerPort: 9090

        livenessProbe:
          httpGet:
            path: /pipeline/api
            port: 9090
            scheme: HTTPS
          initialDelaySeconds: 15
        readinessProbe:
          httpGet:
            path: /pipeline/api
            port: 9090
            scheme: HTTPS
          initialDelaySeconds: 10
        resources:
          
            requests:
              cpu: 250m
              memory: 256Mi
        volumeMounts:
          - name: config-volume
            mountPath: /config
          - name: pipeline-tls
            mountPath: /tls
      volumes:
        - name: config-volume
          configMap:
            name: release-name-pipeline
        - name: pipeline-tls
          secret:
            secretName: release-name-pipeline-tls
      serviceAccountName: release-name-pipeline
