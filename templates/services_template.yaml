---
# Source: services/charts/auth/templates/app.yaml
apiVersion: v1
kind: Secret
metadata:
  name: auth-secret
  namespace: default
  labels:
    helm.sh/chart: auth-0.1.0
    app.kubernetes.io/name: auth
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  DB_HOST: "cG9zdGdyZXMtbWFzdGVy"
  DB_NAME: "YXV0aA=="
  DB_PASSWORD: "cGFzc3dvcmQ="
  DB_PORT: "NTQzMg=="
  DB_USER: "cG9zdGdyZXM="
  OAUTH2_GITHUB_CLIENT_ID: ""
  OAUTH2_GITHUB_CLIENT_SECRET: ""
  OAUTH2_GOOGLE_CLIENT_ID: ""
  OAUTH2_GOOGLE_CLIENT_SECRET: ""
  OAUTH2_LINKEDIN_CLIENT_ID: ""
  OAUTH2_LINKEDIN_CLIENT_SECRET: ""
  REDIS_HOST: "cmVkaXMtcmVhbHRpbWUtbWFzdGVy"
  REDIS_PORT: "NjM3OQ=="
  SECRET_KEY: "ZHhuNHRxZ3NlNDcrMihpITk9ayEqYmFjJiFyQDVxd3VrMzFzZm4mMjlicXVoZXJ0MHk="
---
# Source: services/charts/chat/templates/app.yaml
apiVersion: v1
kind: Secret
metadata:
  name: chat-secret
  namespace: default
  labels:
    helm.sh/chart: chat-0.1.0
    app.kubernetes.io/name: chat
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  DB_DATABASE: "Y2hhdA=="
  DB_HOST: "cG9zdGdyZXMtbWFzdGVy"
  DB_PASSWORD: "cGFzc3dvcmQ="
  DB_PORT: "NTQzMg=="
  DB_USERNAME: "cG9zdGdyZXM="
  HF_LLAMA_ENDPOINT: "aHR0cDovL2luZmVyZW5jZQ=="
  HF_LLAMA_MAX_NEW_TOKENS: "NTEy"
  HF_MISTRAL_ENDPOINT: "aHR0cDovL2luZmVyZW5jZQ=="
  HF_MISTRAL_MAX_NEW_TOKENS: "NTEy"
  HF_PHI_ENDPOINT: "aHR0cDovL3BoaQ=="
  HF_PHI_MAX_NEW_TOKENS: "NTEy"
  HF_TOKEN: ""
  RABBITMQ_HOST: "cmFiYml0bXEtcHJpbWFyeQ=="
  RABBITMQ_PASSWORD: "cGFzc3dvcmQ="
  RABBITMQ_PORT: "NTY3Mg=="
  RABBITMQ_USERNAME: "YXBwdXNlcg=="
---
# Source: services/charts/client/templates/app.yaml
apiVersion: v1
kind: Secret
metadata:
  name: client-secret
  namespace: default
  labels:
    helm.sh/chart: client-0.1.0
    app.kubernetes.io/name: client
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  DB_DATABASE: "Y2xpZW50"
  DB_HOST: "cG9zdGdyZXMtc2xhdmU="
  DB_PASSWORD: "cGFzc3dvcmQ="
  DB_PORT: "NTQzMg=="
  DB_USERNAME: "cG9zdGdyZXM="
---
# Source: services/charts/conversations/templates/app.yaml
apiVersion: v1
kind: Secret
metadata:
  name: conversations-secret
  namespace: default
  labels:
    helm.sh/chart: conversations-0.1.0
    app.kubernetes.io/name: conversations
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  DB_HOST: "cG9zdGdyZXMtbWFzdGVy"
  DB_NAME: "Y29udmVyc2F0aW9ucw=="
  DB_PASSWORD: "cGFzc3dvcmQ="
  DB_PORT: "NTQzMg=="
  DB_USER: "cG9zdGdyZXM="
  RABBITMQ_HOST: "cmFiYml0bXEtcHJpbWFyeQ=="
  RABBITMQ_PASSWORD: "cGFzc3dvcmQ="
  RABBITMQ_PORT: "NTY3Mg=="
  RABBITMQ_USERNAME: "YXBwdXNlcg=="
  SECRET_KEY: "ZHhuNHRxZ3NlNDcrMihpITk9ayEqYmFjJiFyQDVxd3VrMzFzZm4mMjlicXVoZXJ0MHk="
---
# Source: services/charts/inference/templates/app.yaml
apiVersion: v1
kind: Secret
metadata:
  name: inference-secret
  namespace: default
  labels:
    helm.sh/chart: inference-0.1.0
    app.kubernetes.io/name: inference
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  HUGGING_FACE_HUB_TOKEN: ""
---
# Source: services/charts/phi/templates/app.yaml
apiVersion: v1
kind: Secret
metadata:
  name: phi-secret
  namespace: default
  labels:
    helm.sh/chart: phi-0.1.0
    app.kubernetes.io/name: phi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  HUGGING_FACE_HUB_TOKEN: ""
---
# Source: services/charts/realtime/templates/app.yaml
apiVersion: v1
kind: Secret
metadata:
  name: realtime-secret
  namespace: default
  labels:
    helm.sh/chart: realtime-0.1.0
    app.kubernetes.io/name: realtime
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  DB_DATABASE: "Y2xpZW50"
  DB_HOST: "cG9zdGdyZXMtc2xhdmU="
  DB_PASSWORD: "cGFzc3dvcmQ="
  DB_PORT: "NTQzMg=="
  DB_USERNAME: "cG9zdGdyZXM="
  RABBITMQ_HOST: "cmFiYml0bXEtcHJpbWFyeQ=="
  RABBITMQ_PASSWORD: "cGFzc3dvcmQ="
  RABBITMQ_PORT: "NTY3Mg=="
  RABBITMQ_USERNAME: "YXBwdXNlcg=="
  REDIS_HOST: "cmVkaXMtcmVhbHRpbWUtbWFzdGVy"
  REDIS_PORT: "NjM3OQ=="
  WEBSOCKET_KEY_ID: ""
  WEBSOCKET_KEY_SECRET: ""
  WEBSOCKET_REGION: ""
  WEBSOCKET_URL: ""
---
# Source: services/charts/teams/templates/app.yaml
apiVersion: v1
kind: Secret
metadata:
  name: teams-secret
  namespace: default
  labels:
    helm.sh/chart: teams-0.1.0
    app.kubernetes.io/name: teams
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  DB_HOST: "cG9zdGdyZXMtbWFzdGVy"
  DB_NAME: "dGVhbXM="
  DB_PASSWORD: "cGFzc3dvcmQ="
  DB_PORT: "NTQzMg=="
  DB_USER: "cG9zdGdyZXM="
  RABBITMQ_HOST: "cmFiYml0bXEtcHJpbWFyeQ=="
  RABBITMQ_PASSWORD: "cGFzc3dvcmQ="
  RABBITMQ_PORT: "NTY3Mg=="
  RABBITMQ_USERNAME: "YXBwdXNlcg=="
  SECRET_KEY: "ZHhuNHRxZ3NlNDcrMihpITk9ayEqYmFjJiFyQDVxd3VrMzFzZm4mMjlicXVoZXJ0MHk="
---
# Source: services/charts/users/templates/app.yaml
apiVersion: v1
kind: Secret
metadata:
  name: users-secret
  namespace: default
  labels:
    helm.sh/chart: users-0.1.0
    app.kubernetes.io/name: users
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  AWS_BUCKET_KEY_ID: ""
  AWS_BUCKET_KEY_SECRET: ""
  AWS_BUCKET_NAME: ""
  AWS_BUCKET_URL: ""
  AWS_REGION_NAME: ""
  DB_HOST: "cG9zdGdyZXMtbWFzdGVy"
  DB_NAME: "dXNlcnM="
  DB_PASSWORD: "cGFzc3dvcmQ="
  DB_PORT: "NTQzMg=="
  DB_USER: "cG9zdGdyZXM="
  RABBITMQ_HOST: "cmFiYml0bXEtcHJpbWFyeQ=="
  RABBITMQ_PASSWORD: "cGFzc3dvcmQ="
  RABBITMQ_PORT: "NTY3Mg=="
  RABBITMQ_USERNAME: "YXBwdXNlcg=="
  SECRET_KEY: "ZHhuNHRxZ3NlNDcrMihpITk9ayEqYmFjJiFyQDVxd3VrMzFzZm4mMjlicXVoZXJ0MHk="
---
# Source: services/charts/auth/templates/app.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-config
  namespace: default
  labels:
    helm.sh/chart: auth-0.1.0
    app.kubernetes.io/name: auth
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
data:
  API_HOST: "0.0.0.0"
  API_PORT: "8011"
  CORS_ALLOW_ALL_ORIGINS: "1"
  CORS_ALLOW_CREDENTIALS: "1"
  CORS_ALLOWED_ORIGINS: ""
  DEBUG: ""
  DJANGO_ALLOWED_HOSTS: "*"
  ENVIRONMENT: "dev"
  FORCE_TLS: "0"
  V: "0.0.0"
---
# Source: services/charts/chat/templates/app.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: chat-config
  namespace: default
  labels:
    helm.sh/chart: chat-0.1.0
    app.kubernetes.io/name: chat
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
data:
  API_HOST: "0.0.0.0"
  API_PORT: "8017"
  CORS_ALLOW_ORIGINS: "[\"*\"]"
  ENVIRONMENT: ""
  V: "0.0.0"
---
# Source: services/charts/client/templates/app.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: client-config
  namespace: default
  labels:
    helm.sh/chart: client-0.1.0
    app.kubernetes.io/name: client
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
data:
  API_HOST: "0.0.0.0"
  API_PORT: "8015"
  CORS_ALLOW_ORIGINS: "[\"*\"]"
  ENVIRONMENT: ""
  V: "0.0.0"
---
# Source: services/charts/conversations/templates/app.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: conversations-config
  namespace: default
  labels:
    helm.sh/chart: conversations-0.1.0
    app.kubernetes.io/name: conversations
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
data:
  API_HOST: "0.0.0.0"
  API_PORT: "8014"
  CORS_ALLOW_ALL_ORIGINS: "1"
  CORS_ALLOW_CREDENTIALS: "1"
  CORS_ALLOWED_ORIGINS: ""
  DEBUG: ""
  DJANGO_ALLOWED_HOSTS: "*"
  ENVIRONMENT: "dev"
  RABBITMQ_ENABLED: "1"
  V: "0.0.0"
---
# Source: services/charts/inference/templates/app.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: inference-config
  namespace: default
  labels:
    helm.sh/chart: inference-0.1.0
    app.kubernetes.io/name: inference
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
data:
  CUDA_MEMORY_FRACTION: "0.9"
  HOSTNAME: "0.0.0.0"
  MODEL_ID: "meta-llama/Meta-Llama-3-8B-Instruct"
---
# Source: services/charts/phi/templates/app.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: phi-config
  namespace: default
  labels:
    helm.sh/chart: phi-0.1.0
    app.kubernetes.io/name: phi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
data:
  CUDA_MEMORY_FRACTION: "0.5"
  HOSTNAME: "0.0.0.0"
  MODEL_ID: "microsoft/phi-2"
  QUANTIZE: "bitsandbytes-fp4"
---
# Source: services/charts/realtime/templates/app.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: realtime-config
  namespace: default
  labels:
    helm.sh/chart: realtime-0.1.0
    app.kubernetes.io/name: realtime
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
data:
  API_HOST: "0.0.0.0"
  API_PORT: "8016"
  CORS_ALLOW_ORIGINS: "[\"*\"]"
  ENVIRONMENT: ""
  RABBITMQ_ENABLED: "1"
  V: "0.0.0"
---
# Source: services/charts/teams/templates/app.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: teams-config
  namespace: default
  labels:
    helm.sh/chart: teams-0.1.0
    app.kubernetes.io/name: teams
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
data:
  API_HOST: "0.0.0.0"
  API_PORT: "8012"
  CORS_ALLOW_ALL_ORIGINS: "1"
  CORS_ALLOW_CREDENTIALS: "1"
  CORS_ALLOWED_ORIGINS: ""
  DEBUG: ""
  DJANGO_ALLOWED_HOSTS: "*"
  ENVIRONMENT: "dev"
  RABBITMQ_ENABLED: "1"
  V: "0.0.0"
---
# Source: services/charts/users/templates/app.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: users-config
  namespace: default
  labels:
    helm.sh/chart: users-0.1.0
    app.kubernetes.io/name: users
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
data:
  API_HOST: "0.0.0.0"
  API_PORT: "8013"
  CORS_ALLOW_ALL_ORIGINS: "1"
  CORS_ALLOW_CREDENTIALS: "1"
  CORS_ALLOWED_ORIGINS: ""
  DEBUG: ""
  DJANGO_ALLOWED_HOSTS: "*"
  ENVIRONMENT: "dev"
  RABBITMQ_ENABLED: "1"
  V: "0.0.0"
---
# Source: services/charts/inference/templates/pvclaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: huggingface-inference-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 20Gi
  storageClassName: host
  volumeName: huggingface-host-pv-01
---
# Source: services/charts/phi/templates/pvclaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: huggingface-phi-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 20Gi
  storageClassName: host
  volumeName: huggingface-host-pv-02
---
# Source: services/charts/auth/templates/app.yaml
apiVersion: v1
kind: Service
metadata:
  name: auth
  namespace: default
  labels:
    app: auth
    helm.sh/chart: auth-0.1.0
    app.kubernetes.io/name: auth
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: auth
  clusterIP: 192.168.16.10
  ports:
    - name: auth
      port: 8011
      protocol: TCP
---
# Source: services/charts/chat/templates/app.yaml
apiVersion: v1
kind: Service
metadata:
  name: chat
  namespace: default
  labels:
    app: chat
    helm.sh/chart: chat-0.1.0
    app.kubernetes.io/name: chat
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: chat
  clusterIP: None
  ports:
    - name: chat
      port: 8017
      protocol: TCP
---
# Source: services/charts/client/templates/app.yaml
apiVersion: v1
kind: Service
metadata:
  name: client
  namespace: default
  labels:
    app: client
    helm.sh/chart: client-0.1.0
    app.kubernetes.io/name: client
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: client
  clusterIP: None
  ports:
    - name: client
      port: 8015
      protocol: TCP
---
# Source: services/charts/conversations/templates/app.yaml
apiVersion: v1
kind: Service
metadata:
  name: conversations
  namespace: default
  labels:
    app: conversations
    helm.sh/chart: conversations-0.1.0
    app.kubernetes.io/name: conversations
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: conversations
  clusterIP: None
  ports:
    - name: conversations
      port: 8014
      protocol: TCP
---
# Source: services/charts/inference/templates/app.yaml
apiVersion: v1
kind: Service
metadata:
  name: inference
  namespace: default
  labels:
    app: inference
    helm.sh/chart: inference-0.1.0
    app.kubernetes.io/name: inference
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: inference
  clusterIP: None
  ports:
    - name: inference
      port: 80
      protocol: TCP
---
# Source: services/charts/phi/templates/app.yaml
apiVersion: v1
kind: Service
metadata:
  name: phi
  namespace: default
  labels:
    app: phi
    helm.sh/chart: phi-0.1.0
    app.kubernetes.io/name: phi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: phi
  clusterIP: None
  ports:
    - name: phi
      port: 80
      protocol: TCP
---
# Source: services/charts/realtime/templates/app.yaml
apiVersion: v1
kind: Service
metadata:
  name: realtime
  namespace: default
  labels:
    app: realtime
    helm.sh/chart: realtime-0.1.0
    app.kubernetes.io/name: realtime
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: realtime
  clusterIP: None
  ports:
    - name: realtime
      port: 8016
      protocol: TCP
---
# Source: services/charts/teams/templates/app.yaml
apiVersion: v1
kind: Service
metadata:
  name: teams
  namespace: default
  labels:
    app: teams
    helm.sh/chart: teams-0.1.0
    app.kubernetes.io/name: teams
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: teams
  clusterIP: None
  ports:
    - name: teams
      port: 8012
      protocol: TCP
---
# Source: services/charts/users/templates/app.yaml
apiVersion: v1
kind: Service
metadata:
  name: users
  namespace: default
  labels:
    app: users
    helm.sh/chart: users-0.1.0
    app.kubernetes.io/name: users
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: users
  clusterIP: None
  ports:
    - name: users
      port: 8013
      protocol: TCP
---
# Source: services/charts/auth/templates/app.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth
  namespace: default
  labels:
    app: auth
    helm.sh/chart: auth-0.1.0
    app.kubernetes.io/name: auth
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: auth
  replicas: 1
  template:
    metadata:
      labels:
        app: auth
    spec:
      containers:
        - name: auth
          image: "microslac/auth:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8011
          envFrom:
            - configMapRef:
                name: auth-config
            - secretRef:
                name: auth-secret
          livenessProbe:
            null
          readinessProbe:
            null
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 1000m
              memory: 512Mi
---
# Source: services/charts/chat/templates/app.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat
  namespace: default
  labels:
    app: chat
    helm.sh/chart: chat-0.1.0
    app.kubernetes.io/name: chat
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: chat
  replicas: 1
  template:
    metadata:
      labels:
        app: chat
    spec:
      containers:
        - name: chat
          image: "microslac/chat:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8017
          envFrom:
            - configMapRef:
                name: chat-config
            - secretRef:
                name: chat-secret
          livenessProbe:
            null
          readinessProbe:
            null
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 1000m
              memory: 512Mi
---
# Source: services/charts/client/templates/app.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client
  namespace: default
  labels:
    app: client
    helm.sh/chart: client-0.1.0
    app.kubernetes.io/name: client
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: client
  replicas: 1
  template:
    metadata:
      labels:
        app: client
    spec:
      containers:
        - name: client
          image: "microslac/client:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8015
          envFrom:
            - configMapRef:
                name: client-config
            - secretRef:
                name: client-secret
          livenessProbe:
            null
          readinessProbe:
            null
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 1000m
              memory: 512Mi
---
# Source: services/charts/conversations/templates/app.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: conversations
  namespace: default
  labels:
    app: conversations
    helm.sh/chart: conversations-0.1.0
    app.kubernetes.io/name: conversations
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: conversations
  replicas: 1
  template:
    metadata:
      labels:
        app: conversations
    spec:
      containers:
        - name: conversations
          image: "microslac/conversations:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8014
          envFrom:
            - configMapRef:
                name: conversations-config
            - secretRef:
                name: conversations-secret
          livenessProbe:
            null
          readinessProbe:
            null
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 1000m
              memory: 512Mi
---
# Source: services/charts/inference/templates/app.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inference
  namespace: default
  labels:
    app: inference
    helm.sh/chart: inference-0.1.0
    app.kubernetes.io/name: inference
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: inference
  replicas: 1
  template:
    metadata:
      labels:
        app: inference
    spec:
      containers:
        - name: inference
          image: "microslac.io/inference:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          envFrom:
            - configMapRef:
                name: inference-config
            - secretRef:
                name: inference-secret
          livenessProbe:
            null
          readinessProbe:
            null
          resources:
            limits:
              cpu: 1
              memory: 2048Mi
            requests:
              cpu: 0.5
              memory: 254Mi
          volumeMounts:
            - mountPath: /data
              name: huggingface-hub
      volumes:
        - name: huggingface-hub
          persistentVolumeClaim:
            claimName: huggingface-inference-pvc
---
# Source: services/charts/phi/templates/app.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: phi
  namespace: default
  labels:
    app: phi
    helm.sh/chart: phi-0.1.0
    app.kubernetes.io/name: phi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: phi
  replicas: 1
  template:
    metadata:
      labels:
        app: phi
    spec:
      containers:
        - name: phi
          image: "microslac.io/inference:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          envFrom:
            - configMapRef:
                name: phi-config
            - secretRef:
                name: phi-secret
          livenessProbe:
            null
          readinessProbe:
            null
          resources:
            limits:
              cpu: 1
              memory: 2048Mi
            requests:
              cpu: 0.5
              memory: 254Mi
          volumeMounts:
            - mountPath: /data
              name: huggingface-hub
      volumes:
        - name: huggingface-hub
          persistentVolumeClaim:
            claimName: huggingface-phi-pvc
---
# Source: services/charts/realtime/templates/app.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: realtime
  namespace: default
  labels:
    app: realtime
    helm.sh/chart: realtime-0.1.0
    app.kubernetes.io/name: realtime
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: realtime
  replicas: 1
  template:
    metadata:
      labels:
        app: realtime
    spec:
      containers:
        - name: realtime
          image: "microslac/realtime:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8016
          envFrom:
            - configMapRef:
                name: realtime-config
            - secretRef:
                name: realtime-secret
          livenessProbe:
            null
          readinessProbe:
            null
          resources:
            limits:
              cpu: 2000m
              memory: 2048Mi
            requests:
              cpu: 1000m
              memory: 1024Mi
---
# Source: services/charts/teams/templates/app.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: teams
  namespace: default
  labels:
    app: teams
    helm.sh/chart: teams-0.1.0
    app.kubernetes.io/name: teams
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: teams
  replicas: 1
  template:
    metadata:
      labels:
        app: teams
    spec:
      containers:
        - name: teams
          image: "microslac/teams:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8012
          envFrom:
            - configMapRef:
                name: teams-config
            - secretRef:
                name: teams-secret
          livenessProbe:
            null
          readinessProbe:
            null
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 1000m
              memory: 512Mi
---
# Source: services/charts/users/templates/app.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users
  namespace: default
  labels:
    app: users
    helm.sh/chart: users-0.1.0
    app.kubernetes.io/name: users
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: users
  replicas: 1
  template:
    metadata:
      labels:
        app: users
    spec:
      containers:
        - name: users
          image: "microslac/users:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8013
          envFrom:
            - configMapRef:
                name: users-config
            - secretRef:
                name: users-secret
          livenessProbe:
            null
          readinessProbe:
            null
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 1000m
              memory: 512Mi
