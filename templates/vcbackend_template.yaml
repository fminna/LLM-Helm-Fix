---
# Source: vcbackend/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-vcbackend
  labels:
    app.kubernetes.io/name: vcbackend
    helm.sh/chart: vcbackend-0.0.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
data:
  server.yaml: |-
    server:
      listenAddress: "0.0.0.0:3000"
      staticDir: "back/www"
      templateDir: "back/views"
      environment: development
      loglevel: DEBUG

    store:
      driverName: "sqlite3"
      dataSourceName: "file:/db/issuer.sqlite?mode=rwc&cache=shared&_fk=1"

    issuer:
      id: HappyPets
      name: HappyPets
      password: ThePassword
      store:
        driverName: "sqlite3"
        dataSourceName: "file:/db/issuer.sqlite?mode=rwc&cache=shared&_fk=1"

    verifier:
      id: PacketDelivery
      name: PacketDelivery
      password: ThePassword
      store:
        driverName: "sqlite3"
        dataSourceName: "file:/db/verifier.sqlite?mode=rwc&cache=shared&_fk=1"
      protectedResource:
        url: ""

    verifiableregistry:
      password: ThePassword
      store:
        driverName: "sqlite3"
        dataSourceName: "file:/db/verifiableregistry.sqlite?mode=rwc&cache=shared&_fk=1"

    wallet:
      store:
        driverName: "sqlite3"
        dataSourceName: "file:/db/wallet.sqlite?mode=rwc&cache=shared&_fk=1"

    ssikit:
      coreURL: https://core.walt
      signatoryURL: https://signatory.walt
      auditorURL: https://auditor.walt
      custodianURL: https://custodian.walt
      essifURL: https://essif.walt

    webauthn:
      RPDisplayName: "Gaia-X AISBL"
      RPID: "localhost"
      RPOrigin: "http://localhost:3000"
      AuthenticatorAttachment: "platform"
      UserVerification: "required"
---
# Source: vcbackend/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-vcbackend
  labels:
    
    app.kubernetes.io/name: vcbackend
    helm.sh/chart: vcbackend-0.0.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "1Gi"
---
# Source: vcbackend/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-vcbackend
  labels:
    
    app.kubernetes.io/name: vcbackend
    helm.sh/chart: vcbackend-0.0.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 3000
      targetPort: backend
      protocol: TCP
  selector:
    app.kubernetes.io/name: vcbackend
    app.kubernetes.io/instance: release-name
---
# Source: vcbackend/templates/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: release-name-vcbackend
  labels:
    
    app.kubernetes.io/name: vcbackend
    helm.sh/chart: vcbackend-0.0.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: vcbackend
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        
        app.kubernetes.io/name: vcbackend
        helm.sh/chart: vcbackend-0.0.8
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "0.0.1"
        app.kubernetes.io/managed-by: Helm
    spec: 
      serviceAccountName: default
      containers:
        - name: vcbackend
          image: "wistefan/vcbackend:0.0.1"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: backend
          env:
            - name: CONFIG_FILE
              value: /configs/server.yaml
          resources:
            null
          ## workaround for missing db support
          volumeMounts:
            - mountPath: /configs/
              name: config-volume
            - mountPath: /db/
              name: db-volume
      volumes:
      - name: config-volume
        configMap:
          name: release-name-vcbackend
      - name: db-volume
        persistentVolumeClaim:
          claimName: release-name-vcbackend
