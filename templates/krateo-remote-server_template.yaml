---
# Source: krateo-remote-server/templates/base.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-service
  labels:
    helm.sh/chart: krateo-remote-server-0.2.4
    app.kubernetes.io/part-of: krateo
    app.kubernetes.io/component: service
    app.kubernetes.io/name: krateo-remote-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.2.4"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app.kubernetes.io/name: krateo-remote-server
    app.kubernetes.io/instance: release-name
---
# Source: krateo-remote-server/templates/base.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  krateo-remote-server
  namespace: default
  labels:
    helm.sh/chart: krateo-remote-server-0.2.4
    app.kubernetes.io/part-of: krateo
    app.kubernetes.io/component: service
    app.kubernetes.io/name: krateo-remote-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.2.4"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: krateo-remote-server
      app.kubernetes.io/instance: release-name
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        helm.sh/chart: krateo-remote-server-0.2.4
        app.kubernetes.io/part-of: krateo
        app.kubernetes.io/component: service
        app.kubernetes.io/name: krateo-remote-server
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "0.2.4"
        app.kubernetes.io/managed-by: Helm
    spec:
      terminationGracePeriodSeconds: 60
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: krateo-remote-server
          securityContext:
            {}
          image: "ghcr.io/krateoplatformops/krateo-remote-server:0.2.4"
          imagePullPolicy: IfNotPresent
          volumeMounts:
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 50m
              memory: 128Mi
          envFrom:
            - configMapRef:
                name: jwt-secret-key
          env:
            - name: LOG_LEVEL
              value: info
---
# Source: krateo-remote-server/templates/base.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-ingress
  labels:
    helm.sh/chart: krateo-remote-server-0.2.4
    app.kubernetes.io/part-of: krateo
    app.kubernetes.io/component: service
    app.kubernetes.io/name: krateo-remote-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.2.4"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: kong
    plugins.konghq.com: cors-krateo-remote-server
spec:
  rules:
    - host: "krateo-remote-server.krateoplatformops.io"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: release-name-service
                port: 
                  number: 80
---
# Source: krateo-remote-server/templates/cors-plugin.yaml
apiVersion: configuration.konghq.com/v1
kind: KongPlugin
metadata:
  name: cors-krateo-remote-server
config:
  origins:
    - '*'
  credentials: true
  max_age: 3600
  preflight_continue: false
plugin: cors
