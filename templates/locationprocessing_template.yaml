---
# Source: locationprocessing/templates/app/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-locationprocessing-app
  namespace: "default"
  labels:
    helm.sh/chart: locationprocessing-1.0.0
    app.kubernetes.io/name: locationprocessing
    app.kubernetes.io/instance: release-name
    enabler: locationprocessing
    app.kubernetes.io/component: app
    isMainInterface: "yes"
    tier: external
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/name: locationprocessing
    app.kubernetes.io/instance: release-name
    enabler: locationprocessing
    app.kubernetes.io/component: app
    isMainInterface: "yes"
    tier: external
---
# Source: locationprocessing/templates/db/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-locationprocessing-db-headless
  namespace: "default"
  labels:
    helm.sh/chart: locationprocessing-1.0.0
    app.kubernetes.io/name: locationprocessing
    app.kubernetes.io/instance: release-name
    enabler: locationprocessing
    app.kubernetes.io/component: db
    isMainInterface: "no"
    tier: internal
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
  selector:
    app.kubernetes.io/name: locationprocessing
    app.kubernetes.io/instance: release-name
    enabler: locationprocessing
    app.kubernetes.io/component: db
    isMainInterface: "no"
    tier: internal
---
# Source: locationprocessing/templates/db/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-locationprocessing-db
  namespace: "default"
  labels:
    helm.sh/chart: locationprocessing-1.0.0
    app.kubernetes.io/name: locationprocessing
    app.kubernetes.io/instance: release-name
    enabler: locationprocessing
    app.kubernetes.io/component: db
    isMainInterface: "no"
    tier: internal
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
  selector:
    app.kubernetes.io/name: locationprocessing
    app.kubernetes.io/instance: release-name
    enabler: locationprocessing
    app.kubernetes.io/component: db
    isMainInterface: "no"
    tier: internal
---
# Source: locationprocessing/templates/pgadmin/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-locationprocessing-pgadmin
  namespace: "default"
  labels:
    helm.sh/chart: locationprocessing-1.0.0
    app.kubernetes.io/name: locationprocessing
    app.kubernetes.io/instance: release-name
    enabler: locationprocessing
    app.kubernetes.io/component: pgadmin
    isMainInterface: "no"
    tier: internal
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 5433
      targetPort: 80
      protocol: TCP
  selector:
    app.kubernetes.io/name: locationprocessing
    app.kubernetes.io/instance: release-name
    enabler: locationprocessing
    app.kubernetes.io/component: pgadmin
    isMainInterface: "no"
    tier: internal
---
# Source: locationprocessing/templates/app/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-locationprocessing-app
  namespace: "default"
  labels:
    helm.sh/chart: locationprocessing-1.0.0
    app.kubernetes.io/name: locationprocessing
    app.kubernetes.io/instance: release-name
    enabler: locationprocessing
    app.kubernetes.io/component: app
    isMainInterface: "yes"
    tier: external
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: locationprocessing
      app.kubernetes.io/instance: release-name
      enabler: locationprocessing
      app.kubernetes.io/component: app
      isMainInterface: "yes"
      tier: external
  template:
    metadata:
      labels:
        helm.sh/chart: locationprocessing-1.0.0
        app.kubernetes.io/name: locationprocessing
        app.kubernetes.io/instance: release-name
        enabler: locationprocessing
        app.kubernetes.io/component: app
        isMainInterface: "yes"
        tier: external
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      securityContext:
        {}
      containers:
        - name: app
          securityContext:
            {}
          image: "docker.io/assistiot/location_processing:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            {}
          env:
            - name: HTTP_PORT
              value: "8080"

            - name: DB_ADMIN_SERVER_NAME
              value: "release-name-locationprocessing-db.default"
            - name: DB_ADMIN_PORT
              value: "5432"
            - name: DB_ADMIN_NAME
              value: "postgres"
            - name: DB_ADMIN_USER
              value: "postgres"
            - name: DB_ADMIN_PASSWORD
              value: "postgres"

            - name: DB_QUERIES_SERVER_NAME
              value: "release-name-locationprocessing-db.default"
            - name: DB_QUERIES_PORT
              value: "5432"
            - name: DB_QUERIES_NAME
              value: "queries"
            - name: DB_QUERIES_USER
              value: "postgres"
            - name: DB_QUERIES_PASSWORD
              value: "postgres"

            - name: DB_GEOLOCATION_SERVER_NAME
              value: "release-name-locationprocessing-db.default"
            - name: DB_GEOLOCATION_PORT
              value: "5432"
            - name: DB_GEOLOCATION_NAME
              value: "geolocation"
            - name: DB_GEOLOCATION_USER
              value: "postgres"
            - name: DB_GEOLOCATION_PASSWORD
              value: "postgres"
---
# Source: locationprocessing/templates/pgadmin/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-locationprocessing-pgadmin
  namespace: "default"
  labels:
    helm.sh/chart: locationprocessing-1.0.0
    app.kubernetes.io/name: locationprocessing
    app.kubernetes.io/instance: release-name
    enabler: locationprocessing
    app.kubernetes.io/component: pgadmin
    isMainInterface: "no"
    tier: internal
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: locationprocessing
      app.kubernetes.io/instance: release-name
      enabler: locationprocessing
      app.kubernetes.io/component: pgadmin
      isMainInterface: "no"
      tier: internal
  template:
    metadata:
      labels:
        helm.sh/chart: locationprocessing-1.0.0
        app.kubernetes.io/name: locationprocessing
        app.kubernetes.io/instance: release-name
        enabler: locationprocessing
        app.kubernetes.io/component: pgadmin
        isMainInterface: "no"
        tier: internal
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      securityContext:
        {}
      containers:
        - name: pgadmin
          securityContext:
            {}
          image: "dpage/pgadmin4:6.12"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5433
              protocol: TCP
          resources:
            {}
          env:
            - name: GUNICORN_ACCESS_LOGFILE
              value: "/dev/null"
            - name: PGADMIN_DEFAULT_EMAIL
              value: "admin@admin.org"
            - name: PGADMIN_DEFAULT_PASSWORD
              value: "admin"
            - name: PGADMIN_CONFIG_SERVER_MODE
              value: "False"
---
# Source: locationprocessing/templates/db/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-locationprocessing-db
  namespace: "default"
  labels:
    helm.sh/chart: locationprocessing-1.0.0
    app.kubernetes.io/name: locationprocessing
    app.kubernetes.io/instance: release-name
    enabler: locationprocessing
    app.kubernetes.io/component: db
    isMainInterface: "no"
    tier: internal
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: release-name-locationprocessing-db-headless
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: locationprocessing
      app.kubernetes.io/instance: release-name
      enabler: locationprocessing
      app.kubernetes.io/component: db
      isMainInterface: "no"
      tier: internal
  template:
    metadata:
      labels:
        helm.sh/chart: locationprocessing-1.0.0
        app.kubernetes.io/name: locationprocessing
        app.kubernetes.io/instance: release-name
        enabler: locationprocessing
        app.kubernetes.io/component: db
        isMainInterface: "no"
        tier: internal
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      securityContext:
        {}
      containers:
        - name: db
          securityContext:
            {}
          image: "docker.io/postgis/postgis:15-3.3"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
              protocol: TCP
          resources:
            {}
          env:
            - name: POSTGRES_DB
              value: "postgres"
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgres"
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "128Mi"
