---
# Source: clusternet-controller-manager/templates/clusternet_controller_manager_deployment.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: clusternet-controller-manager
  namespace: default
  annotations:
  labels:
    app.kubernetes.io/name: clusternet-controller-manager
    helm.sh/chart: clusternet-controller-manager-0.13.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
# Source: clusternet-controller-manager/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clusternet:controller-manager
  labels:
    app.kubernetes.io/name: clusternet-controller-manager
    helm.sh/chart: clusternet-controller-manager-0.13.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: clusternet-controller-manager
    namespace: default
---
# Source: clusternet-controller-manager/templates/clusternet_controller_manager_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-clusternet-controller-manager
  namespace: default
  annotations:
  labels:
    app.kubernetes.io/name: clusternet-controller-manager
    helm.sh/chart: clusternet-controller-manager-0.13.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app: release-name-clusternet-controller-manager
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: clusternet-controller-manager
      app.kubernetes.io/instance: release-name
      app: release-name-clusternet-controller-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: clusternet-controller-manager
        helm.sh/chart: clusternet-controller-manager-0.13.0
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app: release-name-clusternet-controller-manager
    spec:
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: clusternet-controller-manager
                    app.kubernetes.io/instance: release-name
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      hostNetwork: false
      serviceAccountName: clusternet-controller-manager
      volumes:
        - hostPath:
            path: /etc/clusternet
            type: DirectoryOrCreate
          name: clusternet
      containers:
        - name: clusternet-controller-manager
          image: ghcr.io/clusternet/clusternet-controller-manager:v0.16.0
          imagePullPolicy: IfNotPresent
          resources:
            limits: {}
            requests: {}
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: RESERVED_NAMESPACE
              value: clusternet-reserved
          ports:
            - name: https
              containerPort: 443
              protocol: TCP
          command:
            - /usr/local/bin/clusternet-controller-manager
          args:
            - --secure-port=443
            - --anonymous-auth-supported=true
            - --leader-elect=true
            - --leader-elect-resource-namespace=$(SYSTEM_NAMESPACE)
            - --reserved-namespace=$(RESERVED_NAMESPACE)
            - --feature-gates=SocketConnection=true,Deployer=true,FeedInUseProtection=true,FeedInventory=true
            - --controllers=*
            - --kube-api-burst=100
            - --kube-api-qps=50.0
          volumeMounts:
            - mountPath: /etc/clusternet
              name: clusternet
              readOnly: true
