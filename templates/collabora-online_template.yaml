---
# Source: collabora-online/templates/common.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-collabora-online
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: collabora-online
    app.kubernetes.io/version: 22.05.10.2
    helm-revision: "1"
    helm.sh/chart: collabora-online-14.0.18
stringData:
  password: ""
  username: ""
---
# Source: collabora-online/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-collabora-online
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: collabora-online
    app.kubernetes.io/version: 22.05.10.2
    helm-revision: "1"
    helm.sh/chart: collabora-online-14.0.18
  annotations:
spec:
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  
  ports:
  - port: 10105
    targetPort: 9980
    protocol: TCP
    name: main
  selector:
    app.kubernetes.io/name: collabora-online
    app.kubernetes.io/instance: release-name
---
# Source: collabora-online/templates/common.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-collabora-online
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: collabora-online
    app.kubernetes.io/version: 22.05.10.2
    helm-revision: "1"
    helm.sh/chart: collabora-online-14.0.18
  annotations:
    rollme: VMeqV
spec:
  revisionHistoryLimit: 3
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: collabora-online
      app.kubernetes.io/instance: release-name
  serviceName: release-name-collabora-online
  template:
    metadata:
      labels:
        app.kubernetes.io/name: collabora-online
        app.kubernetes.io/instance: release-name
    spec:
      
        
      serviceAccountName: default
      securityContext:
          
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 106
        runAsUser: 104
        supplementalGroups:
        - 568
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          
          - name: ndots
            value: "1"
      enableServiceLinks: false
      terminationGracePeriodSeconds: 10
      initContainers:
        
      containers:
        - name: release-name-collabora-online
          image: tccr.io/truecharts/collabora:22.05.10.2.1@sha256:8d0f870dfb100c8b72e97a3b5729e420a52e92e8fbef6ef35e51abf65c8660c9
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add: []
              drop: []
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
        
          env:
            - name: UMASK
              value: "2"
            - name: UMASK_SET
              value: "2"
            - name: S6_READ_ONLY_ROOT
              value: "1"
            - name: NVIDIA_VISIBLE_DEVICES
              value: "void"
            - name: TZ
              value: "UTC"
            - name: "DONT_GEN_SSL_CERT"
              value: "true"
            - name: "aliasgroup1"
              value: ""
            - name: "dictionaries"
              value: "de_DE en_GB en_US es_ES fr_FR it nl pt_BR pt_PT ru"
            - name: "extra_params"
              value: "--o:welcome.enable=false --o:logging.level=information --o:user_interface.mode=notebookbar --o:ssl.termination=true --o:ssl.enable=false "
            - name: "server_name"
              value: "collabora.domain.tld"
          envFrom:
            - secretRef:
                name: release-name-collabora-online
          ports:
            - name: main
              containerPort: 9980
              protocol: TCP
          volumeMounts:
            
            - mountPath: /shared
              name: shared
            - mountPath: /dev/shm
              name: shm
            - mountPath: /tmp
              name: temp
            - mountPath: /var/logs
              name: varlogs
          livenessProbe:
            tcpSocket:
              port: 9980
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 9980
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 9980
            initialDelaySeconds: 10
            failureThreshold: 60
            timeoutSeconds: 2
            periodSeconds: 5
          
          resources:
            limits:
              cpu: 4000m
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
      volumes:
        - name: shared
          emptyDir:
            {}
        - name: shm
          emptyDir:
            medium: Memory
        - name: temp
          emptyDir:
            {}
        - name: varlogs
          emptyDir:
            {}
  volumeClaimTemplates:
---
# Source: collabora-online/templates/common.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-collabora-online-manifests
  namespace: default
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-7"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
---
# Source: collabora-online/templates/common.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-collabora-online-manifests
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-7"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
rules:
  - apiGroups:  ["*"]
    resources:  ["*"]
    verbs:  ["*"]
---
# Source: collabora-online/templates/common.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-collabora-online-manifests
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-7"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-collabora-online-manifests
subjects:
  - kind: ServiceAccount
    name: release-name-collabora-online-manifests
    namespace: default
---
# Source: collabora-online/templates/common.yaml
apiVersion: batch/v1
kind: Job
metadata:
  namespace: default
  name: release-name-collabora-online-manifests
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-6"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  template:
    spec:
      serviceAccountName: release-name-collabora-online-manifests
      containers:
        - name: release-name-collabora-online-manifests
          image: tccr.io/truecharts/kubectl:v1.26.0@sha256:6d6e0e50f28b961ed1c1c6a9c140553238641591fbdc9ac7c1a348636f78c552
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          command:
            - "/bin/sh"
            - "-c"
            - |
              /bin/sh <<'EOF'
              echo "installing manifests..."
              kubectl apply --server-side --force-conflicts -k https://github.com/truecharts/manifests/manifests  || echo "Manifest application failed..."
              EOF
          volumeMounts:
            - name: release-name-collabora-online-manifests-temp
              mountPath: /tmp
      restartPolicy: Never
      volumes:
        - name: release-name-collabora-online-manifests-temp
          emptyDir: {}
