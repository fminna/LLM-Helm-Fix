---
# Source: exporter-kubernetes/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: "prometheus"
    chart: exporter-kubernetes-0.1.1
    heritage: Helm
    prometheus: release-name
    release: release-name
  name: release-name-exporter-kubernetes
data:
  kubernetes.rules: |-
    # NOTE: These rules were kindly contributed by the SoundCloud engineering team.

    ALERT K8SApiserverDown
      IF up{job="kubernetes"} == 0
      FOR 15m
      LABELS {
        service = "k8s",
        severity = "warning"
      }
      ANNOTATIONS {
        summary = "API server unreachable",
        description = "An API server could not be scraped.",
      }

    # Disable for non HA kubernetes setups.
    ALERT K8SApiserverDown
      IF absent({job="kubernetes"}) or (count by(cluster) (up{job="kubernetes"} == 1) < count by(cluster) (up{job="kubernetes"}))
      FOR 5m
      LABELS {
        service = "k8s",
        severity = "critical"
      }
      ANNOTATIONS {
        summary = "API server unreachable",
        description = "Prometheus failed to scrape multiple API servers, or all API servers have disappeared from service discovery.",
      }
---
# Source: exporter-kubernetes/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1alpha1
kind: ServiceMonitor
metadata:
  labels:
    app: prometheus
    chart: "exporter-kubernetes-0.1.1"
    component: kubelets
    heritage: "Helm"
    release: "release-name"
    prometheus: release-name
  name: release-name-exporter-kubernetes
spec:
  jobLabel: release-name-exporter-kubernetes
  selector:
    matchLabels:
      component: apiserver
      provider: kubernetes
  namespaceSelector:
    matchNames:
      - "default"
  endpoints:
  - port: https
    interval: 15s
    scheme: https
    tlsConfig:
      caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      # Skip verification until we have resolved why the certificate validation
      # for the kubelet on API server nodes fail.
      insecureSkipVerify: true
    bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
