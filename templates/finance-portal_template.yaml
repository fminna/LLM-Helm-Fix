---
# Source: finance-portal/charts/reporting-events-processor-svc/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-reporting-events-processor-svc
  namespace: "default"
  labels:
    app.kubernetes.io/name: reporting-events-processor-svc
    helm.sh/chart: reporting-events-processor-svc-2.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-events-processor-svc
---
# Source: finance-portal/charts/reporting-hub-bop-api-svc/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-reporting-hub-bop-api-svc
  namespace: "default"
  labels:
    app.kubernetes.io/name: reporting-hub-bop-api-svc
    helm.sh/chart: reporting-hub-bop-api-svc-2.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-api-svc
---
# Source: finance-portal/charts/reporting-hub-bop-experience-api-svc/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-reporting-hub-bop-experience-api-svc
  namespace: "default"
  labels:
    app.kubernetes.io/name: reporting-hub-bop-experience-api-svc
    helm.sh/chart: reporting-hub-bop-experience-api-svc-1.0.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-experience-api-svc
---
# Source: finance-portal/charts/reporting-hub-bop-positions-ui/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-reporting-hub-bop-positions-ui
  namespace: "default"
  labels:
    app.kubernetes.io/name: reporting-hub-bop-positions-ui
    helm.sh/chart: reporting-hub-bop-positions-ui-1.0.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-positions-ui
---
# Source: finance-portal/charts/reporting-hub-bop-role-ui/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-reporting-hub-bop-role-ui
  namespace: "default"
  labels:
    app.kubernetes.io/name: reporting-hub-bop-role-ui
    helm.sh/chart: reporting-hub-bop-role-ui-1.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-role-ui
---
# Source: finance-portal/charts/reporting-hub-bop-settlements-ui/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-reporting-hub-bop-settlements-ui
  namespace: "default"
  labels:
    app.kubernetes.io/name: reporting-hub-bop-settlements-ui
    helm.sh/chart: reporting-hub-bop-settlements-ui-1.0.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-settlements-ui
---
# Source: finance-portal/charts/reporting-hub-bop-shell/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-reporting-hub-bop-shell
  namespace: "default"
  labels:
    app.kubernetes.io/name: reporting-hub-bop-shell
    helm.sh/chart: reporting-hub-bop-shell-1.0.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-shell
---
# Source: finance-portal/charts/reporting-hub-bop-trx-ui/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-reporting-hub-bop-trx-ui
  namespace: "default"
  labels:
    app.kubernetes.io/name: reporting-hub-bop-trx-ui
    helm.sh/chart: reporting-hub-bop-trx-ui-1.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-trx-ui
---
# Source: finance-portal/charts/reporting-legacy-api/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-reporting-legacy-api
  namespace: "default"
  labels:
    app.kubernetes.io/name: reporting-legacy-api
    helm.sh/chart: reporting-legacy-api-2.0.5
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-legacy-api
---
# Source: finance-portal/charts/role-assignment-service/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-role-assignment-service
  namespace: "default"
  labels:
    app.kubernetes.io/name: role-assignment-service
    helm.sh/chart: role-assignment-service-3.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: role-assignment-service
---
# Source: finance-portal/charts/reporting-events-processor-svc/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-reporting-events-processor-svc-config
  labels:
    app.kubernetes.io/name: reporting-events-processor-svc
    helm.sh/chart: reporting-events-processor-svc-2.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-events-processor-svc
data:
  default.json: |
    {
      "EVENT_STORE_DB": {
        "HOST": "reporting-events-db",
        "PORT": "27017",
        "USER": "user",
        "PASSWORD": "",
        "DATABASE": "default",
        "EVENTS_COLLECTION": "reporting"
      },
      "KAFKA": {
        "BROKER_LIST": ["kafka-headless:9092"],
        "CONSUMER_GROUP": "reporting_events_processor_consumer_group",
        "CLIENT_ID": "reporting_events_processor_consumer",
        "TOPIC_EVENT": "topic-event"
      }
    }
---
# Source: finance-portal/charts/reporting-hub-bop-api-svc/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-reporting-hub-bop-api-svc-config
  labels:
    app.kubernetes.io/name: reporting-hub-bop-api-svc
    helm.sh/chart: reporting-hub-bop-api-svc-2.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-api-svc
data:
  default.json: |
    {
      "PORT": 3000,
      "REPORTING_DB": {
        "DIALECT": "mysql",
        "HOST": "centralledger-mysql",
        "PORT": "3306",
        "USER": "user",
        "PASSWORD": "",
        "SCHEMA": "default"
      },
      "EVENT_STORE_DB": {
        "HOST": "reporting-events-db",
        "PORT": "27017",
        "USER": "user",
        "PASSWORD": "",
        "DATABASE": "default"
      },
      "ORY_KETO_READ_URL": "",
      "AUTH_CHECK_PARTICIPANTS": false,
      "USER_ID_HEADER": "x-user",
      "PRISMA_LOGGING_ENABLED": false,
      "CORS_WHITELIST": [
        "http://reporting-hub-bop-shell.local",
        "http://reporting-hub-bop-settlements-ui.local",
        "http://reporting-hub-bop-positions-ui.local"
      ],
      "ALLOW_CREDENTIALS": true
    }
---
# Source: finance-portal/charts/reporting-hub-bop-experience-api-svc/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-reporting-hub-bop-experience-api-svc-config
  labels:
    app.kubernetes.io/name: reporting-hub-bop-experience-api-svc
    helm.sh/chart: reporting-hub-bop-experience-api-svc-1.0.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-experience-api-svc
data:
  default.json: |
    {
      "CENTRAL_ADMIN_URL": "http://centralledger-service:80",
      "CENTRAL_SETTLEMENTS_URL": "http://centralsettlement-service:80",
      "CORS_WHITELIST": [
        "http://reporting-hub-bop-shell.local",
        "http://reporting-hub-bop-settlements-ui.local",
        "http://reporting-hub-bop-positions-ui.local"
      ],
      "HOST": "0.0.0.0",
      "PORT": 3001,
      "PROXY_TIMEOUT": 10000
    }
---
# Source: finance-portal/charts/reporting-hub-bop-experience-api-svc/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-reporting-hub-bop-experience-api-svc-sidecar
  labels:
    app.kubernetes.io/name: reporting-hub-bop-experience-api-svc
    helm.sh/chart: reporting-hub-bop-experience-api-svc-1.0.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-experience-api-svc
data:
  default.json: |
    {
      "PORT": 4001,
      "EVENT_LOGGER_GRPC_HOST": "localhost",
      "EVENT_LOGGER_GRPC_PORT": 50051,
      "INSTRUMENTATION": {
        "METRICS": {
          "DISABLED": false,
          "labels": {
            "eventId": "*"
          },
          "config": {
            "timeout": 5000,
            "prefix": "moja_",
            "defaultLabels": {
              "serviceName": "reporting-hub-bop-experience-api-svc-event-sidecar"
            }
          }
        }
      },
      "KAFKA": {
        "TOPIC_TEMPLATES": {
          "GENERAL_TOPIC_TEMPLATE": {
            "TEMPLATE": "topic-{{functionality}}",
            "REGEX": "topic-(.*)"
          }
        },
        "PRODUCER": {
          "EVENT": {
            "config": {
              "options": {
                "messageCharset": "utf8"
              },
              "rdkafkaConf": {
                "metadata.broker.list": "test1-kafka-headless:9092",
                "client.id": "es-prod-event",
                "event_cb": true,
                "dr_cb": true,
                "socket.keepalive.enable": true,
                "queue.buffering.max.messages": 10000000
              },
              "topicConf": {
                "request.required.acks": "all",
                "partitioner": "murmur2_random"
              }
            }
          }
        }
      }
    }
---
# Source: finance-portal/charts/reporting-hub-bop-positions-ui/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-reporting-hub-bop-positions-ui-config
  labels:
    app.kubernetes.io/name: reporting-hub-bop-positions-ui
    helm.sh/chart: reporting-hub-bop-positions-ui-1.0.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-positions-ui
data:
  default.json: |
    {}
---
# Source: finance-portal/charts/reporting-hub-bop-positions-ui/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-reporting-hub-bop-positions-ui-config-env
  labels:
    app.kubernetes.io/name: reporting-hub-bop-positions-ui
    helm.sh/chart: reporting-hub-bop-positions-ui-1.0.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-positions-ui
data:
  CENTRAL_LEDGER_ENDPOINT: "http://test1-centralledger-service:80"
---
# Source: finance-portal/charts/reporting-hub-bop-role-ui/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-reporting-hub-bop-role-ui-config
  labels:
    app.kubernetes.io/name: reporting-hub-bop-role-ui
    helm.sh/chart: reporting-hub-bop-role-ui-1.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-role-ui
data:
  default.json: |
    {}
---
# Source: finance-portal/charts/reporting-hub-bop-role-ui/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-reporting-hub-bop-role-ui-config-env
  labels:
    app.kubernetes.io/name: reporting-hub-bop-role-ui
    helm.sh/chart: reporting-hub-bop-role-ui-1.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-role-ui
data:
  REACT_APP_API_BASE_URL: "http://www-bof.local/proxy/iam"
  REACT_APP_MOCK_API: "false"
---
# Source: finance-portal/charts/reporting-hub-bop-settlements-ui/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-reporting-hub-bop-settlements-ui-config
  labels:
    app.kubernetes.io/name: reporting-hub-bop-settlements-ui
    helm.sh/chart: reporting-hub-bop-settlements-ui-1.0.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-settlements-ui
data:
  default.json: |
    {}
---
# Source: finance-portal/charts/reporting-hub-bop-settlements-ui/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-reporting-hub-bop-settlements-ui-config-env
  labels:
    app.kubernetes.io/name: reporting-hub-bop-settlements-ui
    helm.sh/chart: reporting-hub-bop-settlements-ui-1.0.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-settlements-ui
data:
  CENTRAL_LEDGER_ENDPOINT: "http://test1-centralledger-service:80"
  CENTRAL_SETTLEMENTS_ENDPOINT: "http://test1-centralsettlement-service:80"
  REPORTING_API_ENDPOINT: "http://www-bof.local/proxy/transfers"
---
# Source: finance-portal/charts/reporting-hub-bop-shell/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-reporting-hub-bop-shell-config
  labels:
    app.kubernetes.io/name: reporting-hub-bop-shell
    helm.sh/chart: reporting-hub-bop-shell-1.0.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-shell
data:
  default.json: |
    {}
---
# Source: finance-portal/charts/reporting-hub-bop-shell/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-reporting-hub-bop-shell-config-env
  labels:
    app.kubernetes.io/name: reporting-hub-bop-shell
    helm.sh/chart: reporting-hub-bop-shell-1.0.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-shell
data:
  AUTH_ENABLED: "true"
  AUTH_MOCK_API: "false"
  AUTH_TOKEN_URL: "/kratos/sessions/whoami"
  LOGIN_PROVIDER: "keycloak"
  LOGIN_URL: "/kratos/self-service/registration/browser"
  LOGOUT_URL: "/kratos/self-service/browser/flows/logout"
  REMOTE_1_URL: "http://reporting-hub-bop-role-ui.local"
  REMOTE_2_URL: "http://reporting-hub-bop-trx-ui.local"
  REMOTE_3_URL: "http://reporting-hub-bop-settlements-ui.local"
  REMOTE_4_URL: "http://reporting-hub-bop-positions-ui.local"
  REMOTE_API_BASE_URL: "/"
  REMOTE_MOCK_API: "false"
---
# Source: finance-portal/charts/reporting-hub-bop-trx-ui/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-reporting-hub-bop-trx-ui-config
  labels:
    app.kubernetes.io/name: reporting-hub-bop-trx-ui
    helm.sh/chart: reporting-hub-bop-trx-ui-1.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-trx-ui
data:
  default.json: |
    {}
---
# Source: finance-portal/charts/reporting-hub-bop-trx-ui/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-reporting-hub-bop-trx-ui-config-env
  labels:
    app.kubernetes.io/name: reporting-hub-bop-trx-ui
    helm.sh/chart: reporting-hub-bop-trx-ui-1.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-trx-ui
data:
  REACT_APP_API_BASE_URL: "http://www-bof.local/proxy/transfers"
  REACT_APP_MOCK_API: "false"
---
# Source: finance-portal/charts/reporting-legacy-api/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-reporting-legacy-api-config
  labels:
    app.kubernetes.io/name: reporting-legacy-api
    helm.sh/chart: reporting-legacy-api-2.0.5
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-legacy-api
data:
---
# Source: finance-portal/charts/role-assignment-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-role-assignment-service-config
  labels:
    app.kubernetes.io/name: role-assignment-service
    helm.sh/chart: role-assignment-service-3.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: role-assignment-service
data:
  default.json: |
    {
      "AUTO_GRANT_PORTAL_ADMIN_ROLES": [
        "manager"
      ],
      "CENTRAL_SERVICE_ADMIN_URL": "http://centralledger-service:80",
      "CORS_WHITELIST": [
        "http://reporting-hub-bop-shell.local",
        "http://reporting-hub-bop-role-ui.local"
      ],
      "ENDPOINT_CACHE_CONFIG": {
        "expiresIn": 180000,
        "generateTimeout": 30000
      },
      "ERROR_HANDLING": {
        "includeCauseExtension": true,
        "truncateExtensions": true
      },
      "HOST": "0.0.0.0",
      "INSPECT": {
        "COLOR": true,
        "DEPTH": 4,
        "SHOW_HIDDEN": false
      },
      "INSTRUMENTATION": {
        "METRICS": {
          "DISABLED": false,
          "config": {
            "defaultLabels": {
              "serviceName": "role-assignment-service"
            },
            "prefix": "moja_ra_api",
            "timeout": 5000
          },
          "labels": {
            "eventId": "*"
          }
        }
      },
      "KEYCLOAK_CLIENT_ID": "admin-cli",
      "KEYCLOAK_PASSWORD": "admin",
      "KEYCLOAK_REALM": "master",
      "KEYCLOAK_REFRESH_INTERVAL": "58000",
      "KEYCLOAK_URL": "http://keycloak:8080",
      "KEYCLOAK_USER": "admin",
      "ORY_KETO_READ_SERVICE_URL": "http://keto-read:80",
      "ORY_KETO_WRITE_SERVICE_URL": "http://keto-write:80",
      "PORT": 3008,
      "ROLES_LIST": [
        "USER_ROLE_abc7a2fd-4acf-4547-a194-1673f63eb37c",
        "ADMIN_ROLE_6c1ec084-86d4-4915-ba81-6c59b87a65a6"
      ],
      "ROLE_OPERATOR_SERVICE_URL": "http://release-name-security-role-perm-operator-svc:80"
    }
---
# Source: finance-portal/charts/reporting-legacy-api/templates/role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-reporting-legacy-api
  namespace: "default"
  labels:
    app.kubernetes.io/name: reporting-legacy-api
    helm.sh/chart: reporting-legacy-api-2.0.5
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-legacy-api
rules:
  - apiGroups:
      - mojaloop.io
    resources:
      - mojaloopreports
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - mojaloop.io
    resources:
      - mojaloopreports/status
    verbs:
      - get
      - list
      - watch
      - create
      - update
---
# Source: finance-portal/charts/reporting-legacy-api/templates/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-reporting-legacy-api
  namespace: "default"
  labels:
    app.kubernetes.io/name: reporting-legacy-api
    helm.sh/chart: reporting-legacy-api-2.0.5
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-legacy-api
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-reporting-legacy-api
subjects:
  - kind: ServiceAccount
    name: release-name-reporting-legacy-api
    namespace: default
---
# Source: finance-portal/charts/reporting-hub-bop-api-svc/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-reporting-hub-bop-api-svc
  namespace: "default"
  labels:
    app.kubernetes.io/name: reporting-hub-bop-api-svc
    helm.sh/chart: reporting-hub-bop-api-svc-2.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-api-svc
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 3000
      protocol: TCP
  selector:
    app.kubernetes.io/name: reporting-hub-bop-api-svc
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: reporting-hub-bop-api-svc
---
# Source: finance-portal/charts/reporting-hub-bop-experience-api-svc/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-reporting-hub-bop-experience-api-svc
  namespace: "default"
  labels:
    app.kubernetes.io/name: reporting-hub-bop-experience-api-svc
    helm.sh/chart: reporting-hub-bop-experience-api-svc-1.0.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-experience-api-svc
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 3001
      protocol: TCP
  selector:
    app.kubernetes.io/name: reporting-hub-bop-experience-api-svc
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: reporting-hub-bop-experience-api-svc
---
# Source: finance-portal/charts/reporting-hub-bop-positions-ui/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-reporting-hub-bop-positions-ui
  namespace: "default"
  labels:
    app.kubernetes.io/name: reporting-hub-bop-positions-ui
    helm.sh/chart: reporting-hub-bop-positions-ui-1.0.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-positions-ui
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 8084
      protocol: TCP
  selector:
    app.kubernetes.io/name: reporting-hub-bop-positions-ui
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: reporting-hub-bop-positions-ui
---
# Source: finance-portal/charts/reporting-hub-bop-role-ui/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-reporting-hub-bop-role-ui
  namespace: "default"
  labels:
    app.kubernetes.io/name: reporting-hub-bop-role-ui
    helm.sh/chart: reporting-hub-bop-role-ui-1.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-role-ui
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 8081
      protocol: TCP
  selector:
    app.kubernetes.io/name: reporting-hub-bop-role-ui
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: reporting-hub-bop-role-ui
---
# Source: finance-portal/charts/reporting-hub-bop-settlements-ui/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-reporting-hub-bop-settlements-ui
  namespace: "default"
  labels:
    app.kubernetes.io/name: reporting-hub-bop-settlements-ui
    helm.sh/chart: reporting-hub-bop-settlements-ui-1.0.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-settlements-ui
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 8083
      protocol: TCP
  selector:
    app.kubernetes.io/name: reporting-hub-bop-settlements-ui
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: reporting-hub-bop-settlements-ui
---
# Source: finance-portal/charts/reporting-hub-bop-shell/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-reporting-hub-bop-shell
  namespace: "default"
  labels:
    app.kubernetes.io/name: reporting-hub-bop-shell
    helm.sh/chart: reporting-hub-bop-shell-1.0.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-shell
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/name: reporting-hub-bop-shell
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: reporting-hub-bop-shell
---
# Source: finance-portal/charts/reporting-hub-bop-trx-ui/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-reporting-hub-bop-trx-ui
  namespace: "default"
  labels:
    app.kubernetes.io/name: reporting-hub-bop-trx-ui
    helm.sh/chart: reporting-hub-bop-trx-ui-1.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-trx-ui
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 8082
      protocol: TCP
  selector:
    app.kubernetes.io/name: reporting-hub-bop-trx-ui
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: reporting-hub-bop-trx-ui
---
# Source: finance-portal/charts/reporting-legacy-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-reporting-legacy-api
  namespace: "default"
  labels:
    app.kubernetes.io/name: reporting-legacy-api
    helm.sh/chart: reporting-legacy-api-2.0.5
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-legacy-api
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 3000
      protocol: TCP
  selector:
    app.kubernetes.io/name: reporting-legacy-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: reporting-legacy-api
---
# Source: finance-portal/charts/role-assignment-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-role-assignment-service
  namespace: "default"
  labels:
    app.kubernetes.io/name: role-assignment-service
    helm.sh/chart: role-assignment-service-3.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: role-assignment-service
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 3008
      protocol: TCP
  selector:
    app.kubernetes.io/name: role-assignment-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: role-assignment-service
---
# Source: finance-portal/charts/reporting-events-processor-svc/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-reporting-events-processor-svc
  namespace: "default"
  labels:
    app.kubernetes.io/name: reporting-events-processor-svc
    helm.sh/chart: reporting-events-processor-svc-2.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-events-processor-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: reporting-events-processor-svc
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: reporting-events-processor-svc
  template:
    metadata:
      annotations:
        checksum/config: 77d82e8a4ef48bcdbdd332cff76c9c823fb5bfc139897024fc948637267fa483
      labels:
        app.kubernetes.io/name: reporting-events-processor-svc
        helm.sh/chart: reporting-events-processor-svc-2.0.0
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: reporting-events-processor-svc
        app.kubernetes.io/version: 2.0.0
    spec:
      serviceAccountName: default
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: reporting-events-processor-svc
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: reporting-events-processor-svc
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      initContainers:
      containers:
        - name: reporting-events-processor-svc
          image: docker.io/mojaloop/reporting-events-processor-svc:v2.0.0
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1001
          command:
            - npm
            - start
          volumeMounts:
            - name: release-name-reporting-events-processor-svc-config-volume
              mountPath: /opt/reporting-events-processor-svc/config
          env:
            - name: KAFKA_BROKER_LIST
              value: 'kafka-headless:9092'
            - name: KAFKA_TOPIC_EVENT
              value: topic-event
            - name: KAFKA_CONSUMER_GROUP
              value: reporting_events_processor_consumer_group
            - name: KAFKA_CLIENT_ID
              value: reporting_events_processor_consumer
            # Event Store
            - name: EVENT_STORE_DB_HOST
              value: 'reporting-events-db'
            - name: EVENT_STORE_DB_PORT
              value: '27017'
            - name: EVENT_STORE_DB_DATABASE
              value: 'default'
            - name: EVENT_STORE_DB_USER
              value: 'user'
            - name: EVENT_STORE_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: 'reporting-events-db'
                  key: 'mongodb-password'
      volumes:
        - name: release-name-reporting-events-processor-svc-config-volume
          configMap:
            name: release-name-reporting-events-processor-svc-config
            items:
            - key: default.json
              path: default.json
---
# Source: finance-portal/charts/reporting-hub-bop-api-svc/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-reporting-hub-bop-api-svc
  namespace: "default"
  labels:
    app.kubernetes.io/name: reporting-hub-bop-api-svc
    helm.sh/chart: reporting-hub-bop-api-svc-2.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-api-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: reporting-hub-bop-api-svc
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: reporting-hub-bop-api-svc
  template:
    metadata:
      annotations:
        checksum/config: ffeba775aa08e1e4149409cc1b4c59b0cdb26de53597e05ba843ed26d50831b1
        prometheus.io/port: "3000"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: reporting-hub-bop-api-svc
        helm.sh/chart: reporting-hub-bop-api-svc-2.0.0
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: reporting-hub-bop-api-svc
        app.kubernetes.io/version: 2.0.0
    spec:
      serviceAccountName: default
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: reporting-hub-bop-api-svc
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: reporting-hub-bop-api-svc
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      initContainers:
      containers:
        - name: reporting-hub-bop-api-svc
          image: docker.io/mojaloop/reporting-hub-bop-api-svc:v2.0.3
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1001
          command:
            - npm
            - start
          ports:
            - name: http
              containerPort: 3000
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 15
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 15
            periodSeconds: 15
          volumeMounts:
            - name: release-name-reporting-hub-bop-api-svc-config-volume
              mountPath: /opt/reporting/config
          env:
            # Reporting DB
            - name: REPORTING_DB_HOST
              value: 'centralledger-mysql'
            - name: REPORTING_DB_PORT
              value: '3306'
            - name: REPORTING_DB_SCHEMA
              value: 'default'
            - name: REPORTING_DB_USER
              value: 'user'
            - name: REPORTING_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: 'mysql'
                  key: 'mysql-password'
            # Event Store
            - name: EVENT_STORE_DB_HOST
              value: 'reporting-events-db'
            - name: EVENT_STORE_DB_PORT
              value: '27017'
            - name: EVENT_STORE_DB_DATABASE
              value: 'default'
            - name: EVENT_STORE_DB_USER
              value: 'user'
            - name: EVENT_STORE_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: 'reporting-events-db'
                  key: 'mongodb-password'
      volumes:
        - name: release-name-reporting-hub-bop-api-svc-config-volume
          configMap:
            name: release-name-reporting-hub-bop-api-svc-config
            items:
            - key: default.json
              path: default.json
---
# Source: finance-portal/charts/reporting-hub-bop-experience-api-svc/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-reporting-hub-bop-experience-api-svc
  namespace: "default"
  labels:
    app.kubernetes.io/name: reporting-hub-bop-experience-api-svc
    helm.sh/chart: reporting-hub-bop-experience-api-svc-1.0.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-experience-api-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: reporting-hub-bop-experience-api-svc
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: reporting-hub-bop-experience-api-svc
  template:
    metadata:
      annotations: 
        checksum/config: d1eb4867de26073fccec6a098171d39e77fdeeaa8ad4af186aca18a92771401c
        prometheus.io/port: "3001"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: reporting-hub-bop-experience-api-svc
        helm.sh/chart: reporting-hub-bop-experience-api-svc-1.0.1
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: reporting-hub-bop-experience-api-svc
        app.kubernetes.io/version: 1.0.1
    spec:
      serviceAccountName: release-name-reporting-hub-bop-experience-api-svc
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: reporting-hub-bop-experience-api-svc
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: reporting-hub-bop-experience-api-svc
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      initContainers:
      containers:
        - name: reporting-hub-bop-experience-api-svc
          image: docker.io/mojaloop/reporting-hub-bop-experience-api-svc:v2.0.2
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1001
          command:
            - npm
            - start
          ports:
            - name: http
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 15
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 15
            periodSeconds: 15
          volumeMounts:
            - name: release-name-reporting-hub-bop-experience-api-svc-config-volume
              mountPath: /opt/reporting-hub-bop-experience-api-svc/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
        - name: reporting-hub-bop-experience-api-svc-sidecar
          image: "mojaloop/event-sidecar:v11.0.1"
          imagePullPolicy: IfNotPresent
          command:
            - npm
            - run
            - start
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: release-name-reporting-hub-bop-experience-api-svc-sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: release-name-reporting-hub-bop-experience-api-svc-config-volume
          configMap:
            name: release-name-reporting-hub-bop-experience-api-svc-config
            items:
            - key: default.json
              path: default.json
        - name: release-name-reporting-hub-bop-experience-api-svc-sidecar-volume
          configMap:
            name: release-name-reporting-hub-bop-experience-api-svc-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: finance-portal/charts/reporting-hub-bop-positions-ui/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-reporting-hub-bop-positions-ui
  namespace: "default"
  labels:
    app.kubernetes.io/name: reporting-hub-bop-positions-ui
    helm.sh/chart: reporting-hub-bop-positions-ui-1.0.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-positions-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: reporting-hub-bop-positions-ui
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: reporting-hub-bop-positions-ui
  template:
    metadata:
      annotations:
        checksum/config: 325f73706cdb7e93e117c39dfd126e4d3b2966c4f201ffb58d1afad47c32350d
      labels:
        app.kubernetes.io/name: reporting-hub-bop-positions-ui
        helm.sh/chart: reporting-hub-bop-positions-ui-1.0.3
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: reporting-hub-bop-positions-ui
        app.kubernetes.io/version: 1.0.3
    spec:
      serviceAccountName: release-name-reporting-hub-bop-positions-ui
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: reporting-hub-bop-positions-ui
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: reporting-hub-bop-positions-ui
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      initContainers:
      containers:
        - name: reporting-hub-bop-positions-ui
          image: docker.io/mojaloop/reporting-hub-bop-positions-ui:v0.0.6
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1001
          ports:
            - name: http
              containerPort: 8084
          readinessProbe:
            httpGet:
              path: /
              port: 8084
            initialDelaySeconds: 15
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /
              port: 8084
            initialDelaySeconds: 15
            periodSeconds: 15
          volumeMounts:
            - name: release-name-reporting-hub-bop-positions-ui-config-volume
              mountPath: /opt/ml-api-adapter/config
          # env: {}
          envFrom:
          - configMapRef:
              name: release-name-reporting-hub-bop-positions-ui-config-env

      volumes:
        - name: release-name-reporting-hub-bop-positions-ui-config-volume
          configMap:
            name: release-name-reporting-hub-bop-positions-ui-config
            items:
            - key: default.json
              path: default.json
---
# Source: finance-portal/charts/reporting-hub-bop-role-ui/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-reporting-hub-bop-role-ui
  namespace: "default"
  labels:
    app.kubernetes.io/name: reporting-hub-bop-role-ui
    helm.sh/chart: reporting-hub-bop-role-ui-1.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-role-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: reporting-hub-bop-role-ui
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: reporting-hub-bop-role-ui
  template:
    metadata:
      annotations:
        checksum/config: 6e1ee85c434ca37875a8e4ff3d06db67f66e555695e507c9a7a361c628a1f0f5
      labels:
        app.kubernetes.io/name: reporting-hub-bop-role-ui
        helm.sh/chart: reporting-hub-bop-role-ui-1.0.2
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: reporting-hub-bop-role-ui
        app.kubernetes.io/version: 1.0.2
    spec:
      serviceAccountName: release-name-reporting-hub-bop-role-ui
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: reporting-hub-bop-role-ui
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: reporting-hub-bop-role-ui
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      initContainers:
      containers:
        - name: reporting-hub-bop-role-ui
          image: docker.io/mojaloop/reporting-hub-bop-role-ui:v1.5.3
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1001
          ports:
            - name: http
              containerPort: 8081
          readinessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 15
          volumeMounts:
            - name: release-name-reporting-hub-bop-role-ui-config-volume
              mountPath: /opt/ml-api-adapter/config
          # env: {}
          envFrom:
          - configMapRef:
              name: release-name-reporting-hub-bop-role-ui-config-env

      volumes:
        - name: release-name-reporting-hub-bop-role-ui-config-volume
          configMap:
            name: release-name-reporting-hub-bop-role-ui-config
            items:
            - key: default.json
              path: default.json
---
# Source: finance-portal/charts/reporting-hub-bop-settlements-ui/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-reporting-hub-bop-settlements-ui
  namespace: "default"
  labels:
    app.kubernetes.io/name: reporting-hub-bop-settlements-ui
    helm.sh/chart: reporting-hub-bop-settlements-ui-1.0.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-settlements-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: reporting-hub-bop-settlements-ui
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: reporting-hub-bop-settlements-ui
  template:
    metadata:
      annotations:
        checksum/config: 0e1ed1c73bfdacedd549dab9ff69d518e56d9af132b83662de4636b5ed535b79
      labels:
        app.kubernetes.io/name: reporting-hub-bop-settlements-ui
        helm.sh/chart: reporting-hub-bop-settlements-ui-1.0.3
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: reporting-hub-bop-settlements-ui
        app.kubernetes.io/version: 1.0.3
    spec:
      serviceAccountName: release-name-reporting-hub-bop-settlements-ui
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: reporting-hub-bop-settlements-ui
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: reporting-hub-bop-settlements-ui
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      initContainers:
      containers:
        - name: reporting-hub-bop-settlements-ui
          image: docker.io/mojaloop/reporting-hub-bop-settlements-ui:v0.0.12
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1001
          ports:
            - name: http
              containerPort: 8083
          readinessProbe:
            httpGet:
              path: /
              port: 8083
            initialDelaySeconds: 15
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /
              port: 8083
            initialDelaySeconds: 15
            periodSeconds: 15
          volumeMounts:
            - name: release-name-reporting-hub-bop-settlements-ui-config-volume
              mountPath: /opt/ml-api-adapter/config
          # env: {}
          envFrom:
          - configMapRef:
              name: release-name-reporting-hub-bop-settlements-ui-config-env

      volumes:
        - name: release-name-reporting-hub-bop-settlements-ui-config-volume
          configMap:
            name: release-name-reporting-hub-bop-settlements-ui-config
            items:
            - key: default.json
              path: default.json
---
# Source: finance-portal/charts/reporting-hub-bop-shell/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-reporting-hub-bop-shell
  namespace: "default"
  labels:
    app.kubernetes.io/name: reporting-hub-bop-shell
    helm.sh/chart: reporting-hub-bop-shell-1.0.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-shell
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: reporting-hub-bop-shell
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: reporting-hub-bop-shell
  template:
    metadata:
      annotations: 
        checksum/config: 505a6d369e150e3ca82fed43041a1f27d5d3dfce3237af730b0e99170bc69a8e
      labels:
        app.kubernetes.io/name: reporting-hub-bop-shell
        helm.sh/chart: reporting-hub-bop-shell-1.0.3
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: reporting-hub-bop-shell
        app.kubernetes.io/version: 1.0.3
    spec:
      serviceAccountName: release-name-reporting-hub-bop-shell
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: reporting-hub-bop-shell
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: reporting-hub-bop-shell
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      initContainers:
      containers:
        - name: reporting-hub-bop-shell
          image: docker.io/mojaloop/reporting-hub-bop-shell:v2.2.3
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1001
          ports:
            - name: http
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 15
          volumeMounts:
            - name: release-name-reporting-hub-bop-shell-config-volume
              mountPath: /opt/ml-api-adapter/config
          # env: {}
          envFrom:
          - configMapRef:
              name: release-name-reporting-hub-bop-shell-config-env

      volumes:
        - name: release-name-reporting-hub-bop-shell-config-volume
          configMap:
            name: release-name-reporting-hub-bop-shell-config
            items:
            - key: default.json
              path: default.json
---
# Source: finance-portal/charts/reporting-hub-bop-trx-ui/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-reporting-hub-bop-trx-ui
  namespace: "default"
  labels:
    app.kubernetes.io/name: reporting-hub-bop-trx-ui
    helm.sh/chart: reporting-hub-bop-trx-ui-1.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-trx-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: reporting-hub-bop-trx-ui
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: reporting-hub-bop-trx-ui
  template:
    metadata:
      annotations:
        checksum/config: 0726c5f44b18c8c7e77b69a13bab7b47f000eaa1ed92370a5cf7c38a6668847b
      labels:
        app.kubernetes.io/name: reporting-hub-bop-trx-ui
        helm.sh/chart: reporting-hub-bop-trx-ui-1.0.0
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: reporting-hub-bop-trx-ui
        app.kubernetes.io/version: 1.0.0
    spec:
      serviceAccountName: release-name-reporting-hub-bop-trx-ui
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: reporting-hub-bop-trx-ui
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: reporting-hub-bop-trx-ui
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      initContainers:
      containers:
        - name: reporting-hub-bop-trx-ui
          image: docker.io/mojaloop/reporting-hub-bop-trx-ui:v1.7.2
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1001
          ports:
            - name: http
              containerPort: 8082
          readinessProbe:
            httpGet:
              path: /
              port: 8082
            initialDelaySeconds: 15
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /
              port: 8082
            initialDelaySeconds: 15
            periodSeconds: 15
          volumeMounts:
            - name: release-name-reporting-hub-bop-trx-ui-config-volume
              mountPath: /opt/ml-api-adapter/config
          # env: {}
          envFrom:
          - configMapRef:
              name: release-name-reporting-hub-bop-trx-ui-config-env

      volumes:
        - name: release-name-reporting-hub-bop-trx-ui-config-volume
          configMap:
            name: release-name-reporting-hub-bop-trx-ui-config
            items:
            - key: default.json
              path: default.json
---
# Source: finance-portal/charts/reporting-legacy-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-reporting-legacy-api
  namespace: "default"
  labels:
    app.kubernetes.io/name: reporting-legacy-api
    helm.sh/chart: reporting-legacy-api-2.0.5
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-legacy-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: reporting-legacy-api
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: reporting-legacy-api
  template:
    metadata:
      annotations:
        checksum/config: a699f223df9a67c334a70cc73c270a1bbac703e94af91ae902c49cfcf27d0b04
        prometheus.io/port: "3000"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: reporting-legacy-api
        helm.sh/chart: reporting-legacy-api-2.0.5
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: reporting-legacy-api
        app.kubernetes.io/version: 2.0.5
    spec:
      serviceAccountName: release-name-reporting-legacy-api
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: reporting-legacy-api
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: reporting-legacy-api
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      initContainers:
      containers:
        - name: reporting-legacy-api
          image: docker.io/mojaloop/reporting:v11.0.0
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1001
          command:
            - npm
            - start
          ports:
            - name: http
              containerPort: 3000
          env:
            # Central Ledger DB
            - name: DB_HOST
              value: 'centralledger-mysql'
            - name: DB_PORT
              value: '3306'
            - name: DB_DATABASE
              value: 'default'
            - name: DB_USER
              value: 'user'
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: 'mysql'
                  key: 'mysql-password'
            - name: WATCH_RESOURCE_GROUP
              value: 'mojaloop.io'
            - name: WATCH_RESOURCE_VERSION
              value: 'v1'
            - name: WATCH_RESOURCE_PLURAL
              value: 'mojaloopreports'
            - name: WATCH_NAMESPACE
              value: 'default'
            - name: VALIDATION_RETRY_COUNT
              value: '10'
            - name: VALIDATION_RETRY_INTERVAL_MS
              value: '5000'
---
# Source: finance-portal/charts/role-assignment-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-role-assignment-service
  namespace: "default"
  labels:
    app.kubernetes.io/name: role-assignment-service
    helm.sh/chart: role-assignment-service-3.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: role-assignment-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: role-assignment-service
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: role-assignment-service
  template:
    metadata:
      annotations: 
        checksum/config: a6f2b44927bef84a058b1bc4a31902c306eb9df9f809f3b04b67d55487af7693
        prometheus.io/port: "3008"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: role-assignment-service
        helm.sh/chart: role-assignment-service-3.1.0
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: role-assignment-service
        app.kubernetes.io/version: 3.1.0
    spec:
      serviceAccountName: release-name-role-assignment-service
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: role-assignment-service
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: role-assignment-service
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      initContainers:
      containers:
        - name: role-assignment-service
          image: docker.io/mojaloop/role-assignment-service:v2.1.0
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1001
          command:
            - npm
            - start
          ports:
            - name: http
              containerPort: 3008
          readinessProbe:
            httpGet:
              path: /health
              port: 3008
            initialDelaySeconds: 15
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3008
            initialDelaySeconds: 15
            periodSeconds: 15
          volumeMounts:
            - name: release-name-role-assignment-service-config-volume
              mountPath: /opt/app/config
      volumes:
        - name: release-name-role-assignment-service-config-volume
          configMap:
            name: release-name-role-assignment-service-config
            items:
            - key: default.json
              path: default.json
---
# Source: finance-portal/charts/reporting-hub-bop-shell/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-reporting-hub-bop-shell
  namespace: "default"
  labels:
    app.kubernetes.io/name: reporting-hub-bop-shell
    helm.sh/chart: reporting-hub-bop-shell-1.0.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reporting-hub-bop-shell
spec:
  ## TODO: add this as an option, and it depends on stable API ingress version
  # ingressClassName: "external-lb"
  rules:
    - host: www-bof.local
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: release-name-reporting-hub-bop-shell
                port:
                  name: http
---
# Source: finance-portal/charts/reporting-legacy-api/charts/reporting-k8s-templates/templates/dfspSettlement.yaml
apiVersion: mojaloop.io/v1
kind: MojaloopReport
metadata:
  name: release-name-dfsp-settlement
spec:
  permission: report-dfsp-settlement
  endpoint:
    path: /dfspSettlement
    params:
      - name: settlementId
        required: true
      - name: dfspId
        required: true
  queries:
    - name: dfspInfo
      query: |
        SELECT participantId, name FROM participant WHERE name = :dfspId AND name != 'Hub'
    - name: report
      query: |
        SELECT settlementId,
               settlementWindowId,
               p.participantId,
               p.name,
               currencyId,
               currencyScale,
               sentAmount,
               sentVolume,
               receivedAmount,
               receivedVolume,
               (sentAmount + receivedAmount) as totalAmount,
               (sentVolume + receivedVolume) as totalVolume,
               receivedAmount - sentAmount as netAmount,
               s3.createdDate,
                lastActionDate
        FROM participant p INNER JOIN
             (
                 SELECT settlementId,
                        settlementWindowId,
                        MAX(currencyId) as currencyId,
                        MAX(currencyScale) as currencyScale,
                        participantId,
                        SUM(sentAmount)     as sentAmount,
                        SUM(sentVolume)     as sentVolume,
                        SUM(receivedAmount) as receivedAmount,
                        SUM(receivedVolume) as receivedVolume,
                        MAX(createdDate) as createdDate,
                        MAX(lastActionDate) as lastActionDate
                 FROM (
                          SELECT settlementId,
                                 settlementWindowId,
                                 MAX(createdDate) as createdDate,
                                 MAX(lastActionDate) as lastActionDate,
                                 MAX(currencyId) as currencyId,
                                 MAX(currencyScale) as currencyScale,
                                 IF(senderName != :dfspId, senderId, receiverId) as participantId,
                                 SUM(IF(senderName = :dfspId, amount, 0))       as sentAmount,
                                 SUM(IF(senderName = :dfspId, volume, 0))       as sentVolume,
                                 SUM(IF(receiverName = :dfspId, amount, 0))     as receivedAmount,
                                 SUM(IF(receiverName = :dfspId, volume, 0))     as receivedVolume
                          FROM (
                                   SELECT MAX(CASE WHEN tP.amount > 0 THEN p.participantId END) as senderId,
                                          MAX(CASE WHEN tP.amount < 0 THEN p.participantId END) as receiverId,
                                          MAX(CASE WHEN tP.amount > 0 THEN p.name END)          as senderName,
                                          MAX(CASE WHEN tP.amount < 0 THEN p.name END)          as receiverName,
                                          MAX(tP.amount)                                        as amount,
                                          MAX(c.currencyId)                                     as currencyId,
                                          MAX(c.scale)                                          as currencyScale,
                                          COUNT(DISTINCT (tF.transferId))                       as volume,
                                          s.settlementId,
                                          sSW.settlementWindowId,
                                          MAX(s.createdDate) as createdDate,
                                          MAX(tF.completedDate)                        as lastActionDate
                                   FROM transferParticipant tP
                                            INNER JOIN transferFulfilment tF on tP.transferId = tF.transferId
                                            INNER JOIN settlementSettlementWindow sSW
                                                       on tF.settlementWindowId = sSW.settlementWindowId
                                            INNER JOIN settlementWindowStateChange sWSC
                                                       on sSW.settlementWindowId = sWSC.settlementWindowId
                                            INNER JOIN settlement s on sSW.settlementId = s.settlementId
                                            INNER JOIN participantCurrency pC
                                                       on tP.participantCurrencyId = pC.participantCurrencyId
                                            INNER JOIN currency c on c.currencyId = pC.currencyId
                                            INNER JOIN participant p on pC.participantId = p.participantId
                                   WHERE tF.isValid
                                     AND sWSC.settlementWindowStateId = 'CLOSED'
                                     AND s.settlementId = :settlementId
                                   GROUP BY tF.transferId, s.settlementId
                               ) s
                          WHERE s.senderName = :dfspId
                             OR s.receiverName = :dfspId
                          GROUP BY settlementId, settlementWindowId, senderId, receiverId, senderName, receiverName
                      ) s2

                 GROUP BY settlementId, settlementWindowId, participantId
             ) s3 ON p.participantId = s3.participantId
        WHERE p.name != 'Hub'
        ORDER BY p.name, settlementWindowId
  template: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <style>
            table {
                font-family: Calibri;
                font-size: 11pt;
                border-collapse: collapse;
                width: 100%;
                display: block;
                overflow-x: auto;
                white-space: nowrap;
            }

            th {
                border: 1px solid black;
                text-align: left;
                padding: 8px;
            }

            td {
                border: 1px solid black;
                padding: 8px;
            }

            tr:nth-child(even) {
    //            background-color: #efefef;
            }

            td > span {
                font-weight: bold;
            }
            tr.noborder td {
                border: none;
            }
        </style>
        <title>FSP Settlement Report</title>
    </head>
    <body>

    <%
    const formatAmount = (amount, currency, scale) => {
      const v = parseFloat(amount).toLocaleString('en-US', { minimumFractionDigits: scale });
      return `${v} ${currency}`;
    }
    const formatNetPosition = (amount, currency, scale) => {
        const v = parseFloat(amount);
        const vf = Math.abs(v).toLocaleString('en-US', { minimumFractionDigits: scale });
        return v >= 0 ? `${vf} ${currency}` : `(${vf}) ${currency}`;
    }
    %>

    <table data-json="<%= JSON.stringify(report) %>" data-sheet-name="DFSPSettlement">
        <tr>
            <td><span>Report for:</span></td>
            <td><span>FSP ID</span></td>
            <td><%= dfspInfo[0]?.name %></td>
            <td><span>Settlement ID</span></td>
            <td style="text-align: right"><%= report[0]?.settlementId %></td>
            <td></td>
            <td></td>
            <td><span>Created Date</span></td>
            <td colspan="2" style="text-align: right"><%= report[0] && (d = report[0].createdDate, `${d.toLocaleDateString('en-ZA')} ${d.toLocaleTimeString('en-US')}`)%></td>
        </tr>
        <tr class = "noborder">
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td style="border: 1px solid black"><span>Last Action Date</span></td>
            <td colspan="2" style="text-align: right;border: 1px solid black"><%=
                report[0] &&
                (d = report
                        .filter(a => a.lastActionDate)
                        .reduce((a,b) => a.lastActionDate.getTime() > b.lastActionDate.getTime() ? a : b).lastActionDate,
                        `${d.toLocaleDateString('en-ZA')} ${d.toLocaleTimeString('en-US')}`)
                %></td>
        </tr>
        <tr class = "noborder">
            <td colspan="100%" style="padding-top: 20px"></td>
        </tr>
        <tr>
            <th>Window ID</th>
            <th>FSP ID</th>
            <th>Sent to FSP</th>
            <th></th>
            <th>Received from FSP</th>
            <th></th>
            <th>Total</th>
            <th>Total Value of All Transactions</th>
            <th>Net Position vs. Each DFSP</th>
        </tr>
        <tr>
            <th></th>
            <th></th>
            <th>Volume</th>
            <th>Value</th>
            <th>Volume</th>
            <th>Value</th>
            <th>Volume</th>
            <th></th>
            <th></th>
        </tr>
        <% for(let entry of report) { %>
            <tr style="text-align: right">
                <td><%= entry.settlementWindowId %></td>
                <td style="text-align: left"><%= entry.name %></td>
                <td><%= entry.sentVolume %></td>
                <td><%= formatAmount(entry.sentAmount, entry.currencyId, entry.currencyScale) %></td>
                <td><%= entry.receivedVolume %></td>
                <td><%= formatAmount(entry.receivedAmount, entry.currencyId, entry.currencyScale) %></td>
                <td><%= entry.totalVolume %></td>
                <td><%= formatAmount(entry.totalAmount, entry.currencyId, entry.currencyScale) %></td>
                <td><%= formatNetPosition(entry.netAmount, entry.currencyId, entry.currencyScale) %></td>
            </tr>
        <% } %>

        <tr>
            <td colspan="8" style="padding-top: 15px"><span>Aggregated Net Positions</span></td>
            <td style="text-align: right"><%= report[0] && formatNetPosition(report.reduce((a, b) => a + (parseFloat(b.netAmount) || 0), 0), report[0]?.currencyId, report[0]?.currencyScale) %></td>
        </tr>
    </table>
    </body>
    </html>
---
# Source: finance-portal/charts/reporting-legacy-api/charts/reporting-k8s-templates/templates/dfspSettlementDetail.yaml
apiVersion: mojaloop.io/v1
kind: MojaloopReport
metadata:
  name: release-name-dfsp-settlement-detail
spec:
  permission: report-dfsp-settlement-detail
  endpoint:
    path: /dfspSettlementDetail
    params:
      - name: settlementId
        required: true
      - name: fspid
        required: true
  queries:
    - name: dfspInfo
      query: |
        SELECT participantId, name FROM participant WHERE name = :fspid AND name != 'Hub'
    - name: report
      query: |
        SELECT
                pCPayer.participantId as payerFspid,
                pPayer.name as payerFspName,
                pCPayee.participantId as payeeFspid,
                pPayee.name as payeeFspName,
                tF.transferId,
                tS.name as transactionType,
                tSS.name as transactionNature,
                tF.completedDate as lastModifiedDate,
                pITPayer.name as payerIdentifierType,
                qpPayer.partyIdentifierValue as payerIdentifierValue,
                pITPayee.name as payeeIdentifierType,
                qpPayee.partyIdentifierValue as payeeIdentifierValue,
                IF(pPayee.name = :fspid, t.amount, 0) as receivedAmount,
                IF(pPayer.name = :fspid, t.amount, 0) as sentAmount,
                c.currencyId,
                s.settlementId,
                s.createdDate as settlementCreatedDate,
                sSW.settlementWindowId
            FROM
                transferFulfilment tF
                INNER JOIN transfer t ON t.transferId = tF.transferId
                INNER JOIN transferParticipant tPPayer ON tPPayer.transferId = tF.transferId
                    AND tPPayer.transferParticipantRoleTypeId = (SELECT transferParticipantRoleTypeId from transferParticipantRoleType WHERE name = 'PAYER_DFSP')
                    INNER JOIN participantCurrency pCPayer ON pCPayer.participantCurrencyId = tPPayer.participantCurrencyId
                    INNER JOIN participant pPayer ON pPayer.participantId = pCPayer.participantId
                INNER JOIN transferParticipant tPPayee ON tPPayee.transferId = tF.transferId
                    AND tPPayee.transferParticipantRoleTypeId = (SELECT transferParticipantRoleTypeId from transferParticipantRoleType WHERE name = 'PAYEE_DFSP')
                    INNER JOIN participantCurrency pCPayee ON pCPayee.participantCurrencyId = tPPayee.participantCurrencyId
                    INNER JOIN participant pPayee ON pPayee.participantId = pCPayee.participantId
                INNER JOIN settlementWindow sW on sW.settlementWindowId = tF.settlementWindowId
                INNER JOIN settlementSettlementWindow sSW on tF.settlementWindowId = sSW.settlementWindowId
                INNER JOIN settlementWindowStateChange sWSC on sW.currentStateChangeId = sWSC.settlementWindowStateChangeId
                INNER JOIN settlement s on sSW.settlementId = s.settlementId
                INNER JOIN settlementModel sM ON sM.settlementModelId = s.settlementModelId
                INNER JOIN currency c ON c.currencyId = sM.currencyId
                INNER JOIN quote q on q.transactionReferenceId = tF.transferId
                INNER JOIN quoteParty qpPayer on qpPayer.quoteId = q.quoteId AND qpPayer.partyTypeId = (SELECT partyTypeId FROM partyType WHERE name = 'PAYER')
                    INNER JOIN partyIdentifierType pITPayer ON pITPayer.partyIdentifierTypeId = qpPayer.partyIdentifierTypeId
                INNER JOIN quoteParty qpPayee on qpPayee.quoteId = q.quoteId AND qpPayee.partyTypeId = (SELECT partyTypeId FROM partyType WHERE name = 'PAYEE')
                    INNER JOIN partyIdentifierType pITPayee ON pITPayee.partyIdentifierTypeId = qpPayee.partyIdentifierTypeId
                INNER JOIN transactionScenario tS on tS.transactionScenarioId = q.transactionScenarioId
                LEFT JOIN transactionSubScenario tSS on tSS.transactionSubScenarioId = q.transactionSubScenarioId
            WHERE
                tF.isValid
                AND s.settlementId = :settlementId
                AND (pPayee.name = :fspid OR pPayer.name = :fspid)
  template: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <style>
            table {
                font-family: Calibri;
                font-size: 11pt;
                border-collapse: collapse;
                width: 100%;
                display: block;
                overflow-x: auto;
                white-space: nowrap;
            }
            th {
            //            border: 1px solid #efefef;
                text-align: left;
                padding: 0 8px;
            }

            td {
                border: 1px solid black;
                padding: 8px;
            }

            tr:nth-child(even) {
    //            background-color: #efefef;
            }

            td > span {
                font-weight: bold;
            }
            tr.noborder td {
                border: none;
            }            
        </style>
        <title>FSP Settlement Report</title>
    </head>
    <body>

    <%
        const formatAmount = (amount) => parseFloat(amount).toLocaleString('en-US');
    %>

    <table data-json="<%= JSON.stringify(report) %>" data-sheet-name="DFSPSettlementDetailReport">
         <tr>
            <td>Participant ID</td>
            <td style="text-align: right"><%= dfspInfo[0]?.participantId %></td>
            <td>FSP ID</td>
            <td style="text-align: right"><%= dfspInfo[0]?.name %></td>
            <td>Settlement ID</td>
            <td style="text-align: right"><%= report[0]?.settlementId %></td>
            <td style="width: 20px"></td>
            <td>Created Date</td>
            <td colspan="2" style="text-align: right"><%= report[0]?.settlementCreatedDate.toISOString() %></td>
            <td style="wisth: 20px"></td>
            <td>Currency</td>
            <td><%= report[0]?.currencyId %></td>
        </tr>
        <tr class = "noborder">
            <td colspan="14" style="padding-top: 20px"></td>
        </tr>
        <tr>
            <td>Sender Participant ID</td>
            <td>Sender FSP ID</td>
            <td>Receiver Participant ID</td>
            <td>Receiver FSP ID</td>
            <td>Transfer ID</td>
            <td>Tx Type</td>
            <td>Tx Nature</td>
            <td>Last Modified</td>
            <td>Sender ID Type</td>
            <td>Sender ID</td>
            <td>Receiver ID Type</td>
            <td>Receiver ID</td>
            <td>Received Amount</td>
            <td>Sent Amount</td>
            <td>Fee</td>
        </tr>
        <% for(let e of report) { %>
            <tr>
                <td><%= e.payerFspid %></td>
                <td><%= e.payerFspName %></td>
                <td><%= e.payeeFspid %></td>
                <td><%= e.payeeFspName %></td>
                <td><%= e.transferId %></td>
                <td><%= e.transactionType %></td>
                <td><%= e.transactionNature %></td>
                <td><%= e.lastModifiedDate.toISOString() %></td>
                <td><%= e.payerIdentifierType %></td>
                <td><%= e.payerIdentifierValue %></td>
                <td><%= e.payeeIdentifierType %></td>
                <td><%= e.payeeIdentifierValue %></td>
                <td><%= formatAmount(e.receivedAmount) %></td>
                <td><%= formatAmount(e.sentAmount) %></td>
                <td>-</td>
            </tr>
        <% } %>
    </table>
    </body>
    </html>
---
# Source: finance-portal/charts/reporting-legacy-api/charts/reporting-k8s-templates/templates/dfspSettlementStatement.yaml
apiVersion: mojaloop.io/v1
kind: MojaloopReport
metadata:
  name: release-name-dfsp-settlement-statement
spec:
  permission: report-dfsp-settlement-statement
  endpoint:
    path: /dfspSettlementStatement
    params:
      - name: dfspId
        required: true
      - name: startDate
        required: true
      - name: endDate
        required: true
  queries:
    - name: dfspInfo
      query: |
        SELECT 
            p.participantId, 
            p.name, 
            :startDate AS startDate, 
            :endDate AS endDate,
            pc.currencyId,
            pc.participantCurrencyId,
            lat.name AS accountType
        FROM participant p
        INNER JOIN participantCurrency pc on pc.participantId = p.participantId
        INNER JOIN ledgerAccountType lat on lat.ledgerAccountTypeId = pc.ledgerAccountTypeId
        WHERE p.name = :dfspId AND p.name != 'Hub' AND lat.name = 'SETTLEMENT'
    - name: report
      query: |
        SELECT participantId, name, currencyId, participantCurrencyId, transferId, createdDate, status, description, fundsIn, fundsOut, balance, currencyScale, accountType FROM (
          SELECT
            p.participantId AS participantId,
            p.name AS name,
            pc.currencyId AS currencyId,
            pc.participantCurrencyId AS participantCurrencyId,
            tp.transferId AS transferId, 
            tp.createdDate AS createdDate, 
            (CASE WHEN COALESCE(tsIn.enumeration, tsOut.enumeration) != 'ABORTED' THEN 'SUCCESS' ELSE tsOut.enumeration END) AS status,
            COALESCE(tscIn.reason, tscOut.reason) AS description,
            (CASE WHEN tp.amount < 0 THEN -tp.amount ELSE NULL END) AS fundsIn,
            (CASE WHEN tp.amount > 0 THEN tp.amount ELSE NULL END) AS fundsOut,
            ppc.value AS balance,
            c.scale AS  currencyScale,
            lat.name AS accountType
          FROM participant p 
          INNER JOIN participantCurrency pc ON p.participantId = pc.participantId 
          INNER JOIN ledgerAccountType lat ON lat.ledgerAccountTypeId = pc.ledgerAccountTypeId
          INNER JOIN transferParticipant tp ON tp.participantCurrencyId = pc.participantCurrencyId
          INNER JOIN transferParticipantRoleType tpr ON tpr.transferParticipantRoleTypeId = tp.transferParticipantRoleTypeId  
          LEFT JOIN transferStateChange tscOut ON tp.transferId = tscOut.transferId AND tscOut.transferStateChangeId = (SELECT MAX(transferStateChangeId) FROM transferStateChange tscOut1 WHERE tscOut1.transferId = tp.transferId
            AND tscOut1.transferStateId in ('RESERVED', 'ABORTED_REJECTED'))
          LEFT JOIN transferState tsOut ON tscOut.transferStateId = tsOut.transferStateId
          LEFT JOIN transferStateChange tscIn ON tp.transferId = tscIn.transferId AND tscIn.transferStateChangeId = (SELECT MAX(transferStateChangeId) FROM transferStateChange tscIn1 WHERE tscIn1.transferId = tp.transferId
            AND tscIn1.transferStateId in ('COMMITTED', 'ABORTED_REJECTED'))
          LEFT JOIN transferState tsIn ON tscIn.transferStateId = tsIn.transferStateId
          INNER JOIN participantPosition pp ON pp.participantCurrencyId = pc.participantCurrencyId
          INNER JOIN participantPositionChange ppc ON ppc.participantPositionId = pp.participantPositionId
          INNER JOIN currency c ON c.currencyId = pc.currencyId
          WHERE tpr.name = 'DFSP_SETTLEMENT' 
          AND p.name = :dfspId
          AND (tscIn.transferStateChangeId = ppc.transferStateChangeId OR tscOut.transferStateChangeId = ppc.transferStateChangeId)
          AND ( tp.createdDate BETWEEN STR_TO_DATE(:startDate, '%Y-%m-%dT%T') AND STR_TO_DATE(:endDate, '%Y-%m-%dT%T'))
          ORDER BY p.name, pc.currencyId, pc.participantCurrencyId, tp.createdDate) AS result
        WHERE result.status != 'ABORTED'
  template: |
    <!DOCTYPE html>

    <html lang="en">

    <head>
        <style>
        table {
                font-family: Calibri;
                font-size: 11pt;
                border-collapse: collapse;
                width: 100%;
                display: block;
                overflow-x: auto;
                white-space: nowrap;
            }
            td, th {
                border: 1px solid black;
                text-align: left;
                padding: 8px;
            }

            tr:nth-child(even) {
    //            background-color: #efefef;
            }

            td > span {
                font-weight: bold;
            }
            tr.noborder td {
                border: none;
            }
        </style>
        <title> DFSP Settlement Statement</title>
    </head>

    <body>


    <%


    const formatAmount = (amount) => {
      if(amount){
        return parseFloat(amount).toLocaleString('en-US',
          { minimumFractionDigits: report[0]?.currencyScale });
      } else {
        return '';
      }
    }

    %>

    
    <% dfspInfo.forEach(element => { // Loop Through all the currency accounts
        const reportData = report.filter( record => record.participantId === element.participantId && record.currencyId === element.currencyId && record.participantCurrencyId === element.participantCurrencyId);
    %>


       <table  name=<%= `${element?.name}-${element?.currencyId}` %> data-sheet-name="<%= `${element?.name}-${element?.currencyId}` %>">
            <tr>
                <th><span>DFSP </span></th>
                <td style="text-align: left"><%= element?.name %></td>
            </tr>
            <tr>
                <th><span>Account Type</span></th>
                <td style="text-align: left"><%= element?.accountType %></td>
            </tr>
            <tr>
                <th><span>Date From</span></th>
                <td style="text-align: left"><%= element?.startDate %></td>
            </tr>
            <tr>
                <th><span>Date To</span></th>
                <td style="text-align: left"><%= element?.endDate %></td>
            </tr>
            <tr>
                <th><span>Currency</span></th>
                <td style="text-align: left"><%= element?.currencyId %></td>
            </tr>

                   <tr class = "noborder">
            <td colspan="100%" style="padding-top: 20px"></td>
        </tr>

            <tr>
                <th>Transfer Id</th>
                <th>Date Time</th>
                <th>Process Description</th>
                <th>Funds In</th>
                <th>Funds Out</th>
                <th>Balance</th>
            </tr>
            <% for (const { name, currencyId, transferId, createdDate, description, fundsIn, fundsOut, balance } of reportData) { %>
                <tr>
                    <td><%= `${transferId}` %></td>
                    <td style="text-align: right"><%= createdDate && (d = createdDate, `${d.toLocaleDateString('en-ZA')} ${d.toLocaleTimeString('en-US')}`)%></td>
                    <td><%= `${description}` %></td>
                    <td style="text-align: right"><%= formatAmount(fundsIn) %></td>
                    <td style="text-align: right"><%= formatAmount(fundsOut) %></td>
                    <td style="text-align: right"><%= formatAmount(balance) %></td>
                </tr>
            <% } %>
        </table>

        <br /><br />

    <% }) %>
    </body>

    </html>
---
# Source: finance-portal/charts/reporting-legacy-api/charts/reporting-k8s-templates/templates/reconciliationAmount.yaml
apiVersion: mojaloop.io/v1
kind: MojaloopReport
metadata:
  name: release-name-reconciliation-amount
spec:
  permission: report-reconciliation-amount
  endpoint:
    path: /reconciliationAmount
    params:
      - name: settlementWindowId
        required: true
      - name: dfspId
        required: true
  queries:
    - name: report
      query: |
        SELECT
          fromName,
          fromId,
          toName,
          toId,
          currency,
          numTransactions,
          TRIM(TRAILING '.' FROM TRIM(TRAILING '0' FROM sent)) AS sent,
          TRIM(TRAILING '.' FROM TRIM(TRAILING '0' FROM received)) AS received,
          TRIM(TRAILING '.' FROM TRIM(TRAILING '0' FROM net)) AS net,
          settlementWindowOpen,
          settlementWindowClose
        FROM (
          SELECT
            payer.name AS fromName,
            payer.participantId AS fromId,
            payee.name AS toName,
            payee.participantId AS toId,
            pcPayer.currencyId AS currency,
            COUNT(txpPayer.transferId) AS numTransactions,
            CASE WHEN payer.participantId = :dfspId THEN sum(txpPayer.amount) ELSE 0 END AS sent,
            CASE WHEN payer.participantId = :dfspId THEN 0 ELSE sum(txpPayer.amount) END AS received,
            CASE WHEN payer.participantId = :dfspId THEN -sum(txpPayer.amount) ELSE sum(txpPayer.amount) END AS net,
            swOpen.createdDate AS settlementWindowOpen,
            swClose.createdDate AS settlementWindowClose
          FROM
            transferParticipant txpPayer
          INNER JOIN
            transferParticipant txpPayee
            ON txpPayer.transferId = txpPayee.transferId
            AND txpPayer.transferParticipantId != txpPayee.transferParticipantId
          INNER JOIN
            transferFulfilment txf
            ON txf.transferId = txpPayer.transferId
          INNER JOIN
            transferParticipantRoleType txprt
            ON txprt.transferParticipantRoleTypeId = txpPayer.transferParticipantRoleTypeId
            AND txprt.name = 'PAYER_DFSP'
          INNER JOIN
            participantCurrency pcPayer
            ON pcPayer.participantCurrencyId = txpPayer.participantCurrencyId
          INNER JOIN
            participantCurrency pcPayee
            ON pcPayee.participantCurrencyId = txpPayee.participantCurrencyId
          INNER JOIN
            participant payer
            ON pcPayer.participantId = payer.participantId
          INNER JOIN
            participant payee
            ON pcPayee.participantId = payee.participantId
          INNER JOIN
            settlementWindow sw
            ON sw.settlementWindowId = txf.settlementWindowId
          INNER JOIN
            settlementWindowStateChange swOpen
            ON swOpen.settlementWindowId = sw.settlementWindowId
          INNER JOIN
            settlementWindowStateChange swClose
            ON swClose.settlementWindowId = sw.settlementWindowId
          WHERE
            sw.settlementWindowId = :settlementWindowId
            AND swOpen.settlementWindowStateId = 'OPEN'
            AND swClose.settlementWindowStateId = 'CLOSED'
            AND (payer.participantId = :dfspId OR payee.participantId = :dfspId)
          GROUP BY
            payer.participantId,
            payee.participantId,
            currency,
            swOpen.createdDate,
            swClose.createdDate
        ) AS result
  template: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <style>
            table {
                font-family: arial, sans-serif;
                border-collapse: collapse;
                width: 100%;
                display: block;
                overflow-x: auto;
                white-space: nowrap;
            }

            th {
            //            border: 1px solid #efefef;
                text-align: left;
                padding: 0 8px;
            }

            td {
    //            border: 1px solid #efefef;
                padding: 8px;
            }

            tr:nth-child(even) {
    //            background-color: #efefef;
            }

            td > span {
                font-weight: bold;
            }
        </style>
        <title>FSP Settlement Report</title>
    </head>
    <body>

    <%
        const formatAmount = (amount) => parseFloat(amount).toLocaleString('en-US');
    %>

    <table>
        <tr>
            <td>fromName</td>
            <td>fromId</td>
            <td>toName</td>
            <td>toId</td>
            <td>currency</td>
            <td>numTransactions</td>
            <td>sent</td>
            <td>received</td>
            <td>net</td>
            <td>settlementWindowOpen</td>
            <td>settlementWindowClose</td>
        </tr>
        <% for(let e of report) { %>
            <tr>
                <td><%= e.fromName %></td>
                <td><%= e.fromId %></td>
                <td><%= e.toName %></td>
                <td><%= e.toId %></td>
                <td><%= e.currency %></td>
                <td><%= e.numTransactions %></td>
                <td><%= e.sent %></td>
                <td><%= e.received %></td>
                <td><%= e.net %></td>
                <td><%= e.settlementWindowOpen.toISOString() %></td>
                <td><%= e.settlementWindowClose.toISOString() %></td>
            </tr>
        <% } %>
    </table>
    </body>
    </html>
---
# Source: finance-portal/charts/reporting-legacy-api/charts/reporting-k8s-templates/templates/settlement.yaml
apiVersion: mojaloop.io/v1
kind: MojaloopReport
metadata:
  name: release-name-settlement
spec:
  permission: report-settlement
  endpoint:
    path: /settlement
    params:
      - name: settlementId
        required: true
      - name: currency
  queries:
    - name: settlementId
      query: SELECT :settlementId
    - name: transfers
      query: |
        SELECT
            p2.name as sender,
            p2.participantId as senderId,
            receiverId,
            SUM(amount) as amount,
            settlementId,
            ss.createdDate,
            MAX(lastActionDate) as lastActionDate,
            currencyId,
            MAX(currencyScale) as currencyScale
          FROM
              participant p2 LEFT JOIN
              (
                  SELECT settlementId,
                         createdDate,
                         MAX(lastActionDate) as lastActionDate,
                         senderId,
                         receiverId,
                         SUM(amount)         as amount,
                         currencyId,
                         MAX(currencyScale) as currencyScale
                  FROM (
                           SELECT MAX(CASE WHEN tP.amount > 0 THEN p.participantId END) as senderId,
                                  MAX(CASE WHEN tP.amount < 0 THEN p.participantId END) as receiverId,
                                  MAX(tP.amount)                               as amount,
                                  MAX(tF.completedDate)                        as lastActionDate,
                                  s.settlementId,
                                  s.createdDate,
                                  c.currencyId as currencyId,
                                  MAX(c.scale) as currencyScale
                           FROM transferParticipant tP
                                    INNER JOIN transferFulfilment tF on tP.transferId = tF.transferId
                                    INNER JOIN settlementSettlementWindow sSW
                                               on tF.settlementWindowId = sSW.settlementWindowId
                                    INNER JOIN settlementWindowStateChange sWSC
                                               on sSW.settlementWindowId = sWSC.settlementWindowId
                                    INNER JOIN settlement s on sSW.settlementId = s.settlementId
                                    INNER JOIN participantCurrency pC
                                               on tP.participantCurrencyId = pC.participantCurrencyId
                                    INNER JOIN currency c on c.currencyId = pC.currencyId
                                    INNER JOIN participant p on pC.participantId = p.participantId
                           WHERE tF.isValid
                             AND sWSC.settlementWindowStateId = 'CLOSED'
                             AND s.settlementId = :settlementId
                             AND CASE WHEN :currency IS NOT NULL THEN c.currencyId = :currency ELSE TRUE END
                           GROUP BY tF.transferId, s.settlementId, c.currencyId
                       ) s
                  GROUP BY senderId, receiverId, settlementId, currencyId
              ) ss ON p2.participantId = ss.senderId

          WHERE p2.name != 'Hub'
          GROUP BY settlementId, p2.participantId, receiverId, currencyId
          ORDER BY settlementId DESC, p2.name
  template: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <style>
            table {
                font-family: arial, sans-serif;
                border-collapse: collapse;
                width: 100%;
                display: block;
                overflow-x: auto;
                white-space: nowrap;
            }

            td, th {
    //            border: 1px solid #efefef;
                text-align: left;
                padding: 8px;
            }

            tr:nth-child(even) {
    //            background-color: #efefef;
            }

            td > span {
                font-weight: bold;
            }
        </style>
        <title>Settlement Bank Report</title>
    </head>
    <body>

    <%
    const senders = [];
    const receivers = [];
    const amounts = {};
    const totalSent = {};
    const totalReceived = {};
    const participants = {};
    let netTotal = 0;
    const netPositionsPretty = {};
    const defaultCurrency = transfers[0]?.currencyId;
    for (let t of transfers) {
        participants[t.senderId] = t.sender;
        if (!senders.includes(t.senderId)) {
            senders.push(t.senderId);
        }
        if (t.receiverId && t.currencyId === defaultCurrency) {
            amounts[`${t.senderId}:${t.receiverId}`] = parseFloat(t.amount);
            totalSent[t.senderId] = (totalSent[t.senderId] || 0) + parseFloat(t.amount);
            totalReceived[t.receiverId] = (totalReceived[t.receiverId] || 0) + parseFloat(t.amount);
            if (!receivers.includes(t.receiverId)) {
                receivers.push(t.receiverId);
            }
        }
    }
    const participantEntries = Object.entries(participants).sort((a, b) => a[1].localeCompare(b[1]));

    const formatAmount = (amount) => {
          const v = parseFloat(amount).toLocaleString('en-US', { minimumFractionDigits: transfers[0]?.currencyScale });
          return `${v} ${transfers[0]?.currencyId}`;
    }

    for(let [id] of participantEntries) {
        let v = ((totalSent[id] || 0) - (totalReceived[id] || 0));
        netTotal += v;
        let vf = Math.abs(v).toLocaleString('en-US', { minimumFractionDigits: transfers[0]?.currencyScale });
        netPositionsPretty[id] = v >= 0 ? `${vf} ${transfers[0]?.currencyId}` : `(${vf}) ${transfers[0]?.currencyId}`;
    }

    const lastActionDate = transfers.reduce((a,b) => a.lastActionDate?.getTime() > b.lastActionDate?.getTime() ? a : b, 0)?.lastActionDate;

    const jsonOutput = {
      settlementId: transfers[0]?.settlementId,
      currency: transfers[0]?.currencyId,
      createdDate:transfers[0]?.createdDate,
      lastActionDate,
      totalSent: participantEntries
                  .reduce((acc, [id, name]) => Object.assign(acc, { [name]: totalSent[id] || 0 }), {}),
      totalReceived,
      netPositions: netPositionsPretty,
      participants: participantEntries,
    };
    %>

    <table data-json="<%= JSON.stringify(transfers) %>" >
        <tr>
            <td><span>Settlement ID</span></td>
            <td style="text-align: right"><%= transfers[0]?.settlementId %></td>
            <td></td>
            <td><span>Created Date</span></td>
            <td colspan="2" style="text-align: right"><%= transfers[0]?.createdDate && (d = transfers[0].createdDate, `${d.toLocaleDateString('en-ZA')} ${d.toLocaleTimeString('en-US')}`)%></td>
        </tr>
        <tr>
            <td><span>Currency</span></td>
            <td style="text-align: right"><%= transfers[0]?.currencyId %></td>
            <td></td>
            <td><span>Last Action Date</span></td>
            <td colspan="2" style="text-align: right"><%=
                `${lastActionDate?.toLocaleDateString('en-ZA')} ${lastActionDate?.toLocaleTimeString('en-US')}`
                %></td>
        </tr>
        <tr>
            <td colspan="100%" style="padding-top: 20px"><div style="font-weight: bold">Multilateral Net Positions</div></td>
        </tr>
        <tr>
            <th></th>
            <th></th>
            <% for(let i = 0; i < participantEntries.length; i++) { %>
            <th><span>Received by</span></th>
            <% } %>
            <th>TOTAL SENT</th>
        </tr>
        <tr>
            <td></td>
            <td></td>
            <% for(let [id, name] of participantEntries) { %>
                <td><%= `${id} ${name}` %></td>
            <% } %>
            <td></td>
        </tr>
        <% for(let [senderId, senderName] of participantEntries) { %>
            <tr>
                <td><span>Sent by</span></td>
                <td><%= `${senderId} ${senderName}` %></td>
                <% for(let [receiverId] of participantEntries) { %>
                    <% if (senderId === receiverId) { %>
                        <td style="background-color: #cccccc"></td>
                    <% } else if (amounts[`${senderId}:${receiverId}`]) { %>
                        <td style="text-align: right"><%= formatAmount(amounts[`${senderId}:${receiverId}`]) %></td>
                    <% } else { %>
                        <td style="text-align: right">-</td>
                    <% } %>
                <% } %>
                <td style="text-align: right"><%= totalSent[senderId] ? formatAmount(totalSent[senderId]) : '-' %></td>
            </tr>
        <% } %>
        <tr>
            <td colspan="100%" style="padding-top: 10px"></td>
        </tr>
        <tr>
            <td></td>
            <td><span>Total Received</span></td>
            <% for(let [id] of participantEntries) { %>
                <td style="text-align: right"><%= totalReceived[id] ? totalReceived[id].toLocaleString('en-US') : '-' %></td>
            <% } %>
        </tr>
        <tr>
            <td colspan="100%" style="padding-top: 30px"><div style="font-weight: bold">Aggregated Net Positions</div></td>
        </tr>
        <% for(let [id, name] of participantEntries) { %>
            <tr>
                <td><%= `${id} ${name}` %></td>
                <td style="text-align: right"><%= netPositionsPretty[id] %></td>
                <td></td>
            </tr>
        <% } %>
        <tr>
            <td style="padding-top: 30px">Check value</td>
            <td style="text-align: right"><%= netTotal %></td>
            <td>(should be zero)</td>
        </tr>
    </table>
    </body>
    </html>
---
# Source: finance-portal/charts/reporting-legacy-api/charts/reporting-k8s-templates/templates/settlementAudit.yaml
apiVersion: mojaloop.io/v1
kind: MojaloopReport
metadata:
  name: release-name-settlement-audit  
spec:
  permission: report-settlement-audit
  endpoint:
    path: /settlementAudit
    params:
      - name: startDate
        required: true
      - name: endDate
        required: true
  queries:
    - name: dfspInfo
      query: |
        SELECT 
            p.participantId, 
            p.name, 
            :startDate AS startDate, 
            :endDate AS endDate,
            pc.currencyId,
            pc.participantCurrencyId,
            lat.name AS accountType
        FROM participant p
        INNER JOIN participantCurrency pc on pc.participantId = p.participantId
        INNER JOIN ledgerAccountType lat on lat.ledgerAccountTypeId = pc.ledgerAccountTypeId
        WHERE p.name != 'Hub' AND lat.name = 'SETTLEMENT'
    - name: report
      query: |
        SELECT
            p.participantId AS participantId,
            p.name AS name,
            pc.currencyId AS currencyId,
            pc.participantCurrencyId AS participantCurrencyId,
            tp.transferId AS transferId, 
            tp.createdDate AS createdDate,
            COALESCE(tscIn.transferStateChangeId, tscOut.transferStateChangeId) as transferStateChangeId,
            (CASE WHEN COALESCE(tsIn.enumeration, tsOut.enumeration) != 'ABORTED' THEN 'SUCCESS' ELSE tsOut.enumeration END) AS status,
            COALESCE(tscIn.reason, tscOut.reason) AS description,
            COALESCE(tex1.value, '') AS user,
            COALESCE(tex2.value, '') AS reference,
            (CASE WHEN tp.amount < 0 THEN -tp.amount ELSE NULL END) AS fundsIn,
            (CASE WHEN tp.amount > 0 THEN tp.amount ELSE NULL END) AS fundsOut,
            ppc.value AS balance,
            c.scale AS  currencyScale,
            lat.name AS accountType
        FROM participant p 
        INNER JOIN participantCurrency pc ON p.participantId = pc.participantId 
        INNER JOIN ledgerAccountType lat ON lat.ledgerAccountTypeId = pc.ledgerAccountTypeId
        INNER JOIN transferParticipant tp ON tp.participantCurrencyId = pc.participantCurrencyId
        INNER JOIN transferParticipantRoleType tpr ON tpr.transferParticipantRoleTypeId = tp.transferParticipantRoleTypeId
        LEFT JOIN transferStateChange tscOut ON tp.transferId = tscOut.transferId AND tscOut.transferStateChangeId = (SELECT MAX(transferStateChangeId) FROM transferStateChange tscOut1 WHERE tscOut1.transferId = tp.transferId
        AND tscOut1.transferStateId in ('RESERVED', 'ABORTED_REJECTED'))
        LEFT JOIN transferState tsOut ON tscOut.transferStateId = tsOut.transferStateId       
        LEFT JOIN transferStateChange tscIn ON tp.transferId = tscIn.transferId AND tscIn.transferStateChangeId = (SELECT MAX(transferStateChangeId) FROM transferStateChange tscIn1 WHERE tscIn1.transferId = tp.transferId
        AND tscIn1.transferStateId in ('COMMITTED', 'ABORTED_REJECTED'))
        LEFT JOIN transferState tsIn ON tscIn.transferStateId = tsIn.transferStateId   
        INNER JOIN participantPosition pp ON pp.participantCurrencyId = pc.participantCurrencyId
        INNER JOIN participantPositionChange ppc ON ppc.participantPositionId = pp.participantPositionId
        INNER JOIN currency c ON c.currencyId = pc.currencyId
        LEFT JOIN transferExtension tex1 ON tex1.transferId = tp.transferId AND tex1.key = 'user'
        LEFT JOIN transferExtension tex2 ON tex2.transferId = tp.transferId AND tex2.key = 'externalReference'

        WHERE tpr.name = 'DFSP_SETTLEMENT'
        AND (tscIn.transferStateChangeId = ppc.transferStateChangeId OR tscOut.transferStateChangeId = ppc.transferStateChangeId)
        AND tex1.transferExtensionId = (SELECT MAX(transferExtensionId) FROM transferExtension tex1u WHERE tex1u.transferId = tp.transferId AND tex1u.key = 'user')
        AND tex2.transferExtensionId = (SELECT MAX(transferExtensionId) FROM transferExtension tex2u WHERE tex2u.transferId = tp.transferId AND tex2u.key = 'externalReference')
        AND ( tp.createdDate BETWEEN STR_TO_DATE(:startDate, '%Y-%m-%dT%T') AND STR_TO_DATE(:endDate, '%Y-%m-%dT%T'))
        ORDER BY p.name, pc.currencyId, pc.participantCurrencyId,  tp.createdDate
  template: |
    <!DOCTYPE html>

    <html lang="en">

    <head>
        <style>
           table {
                font-family: Calibri;
                font-size: 11pt;
                border-collapse: collapse;
                width: 100%;
                display: block;
                overflow-x: auto;
                white-space: nowrap;
            }
            td, th {
                border: 1px solid black;
                text-align: left;
                padding: 8px;
            }

            tr:nth-child(even) {
    //            background-color: #efefef;
            }

            td > span {
                font-weight: bold;
            }
            tr.noborder td {
                border: none;
            }
        </style>
        <title> DFSP Settlement Statement</title>
    </head>

    <body>


    <%


    const formatAmount = (amount) => {
      if(amount){
        return parseFloat(amount).toLocaleString('en-US',
          { minimumFractionDigits: report[0]?.currencyScale });
      } else {
        return '';
      }
    }

    %>

    
    <% dfspInfo.forEach(element => { // Loop Through all the currency accounts
        const reportData = report.filter( record => record.participantId === element.participantId && record.currencyId === element.currencyId && record.participantCurrencyId === element.participantCurrencyId);
    %>


        <table name=<%= `${element?.name}-${element?.currencyId}` %>>
            <tr>
                <th><span>DFSP </span></th>
                <td style="text-align: left"><%= element?.name %></td>
            </tr>
            <tr>
                <th><span>Account Type</span></th>
                <td style="text-align: left"><%= element?.accountType %></td>
            </tr>
            <tr>
                <th><span>Date From</span></th>
                <td style="text-align: left"><%= element?.startDate %></td>
            </tr>
            <tr>
                <th><span>Date To</span></th>
                <td style="text-align: left"><%= element?.endDate %></td>
            </tr>
            <tr>
                <th><span>Currency</span></th>
                <td style="text-align: left"><%= element?.currencyId %></td>
            </tr>

                   <tr class = "noborder"> <td colspan="100%" style="padding-top: 20px"></td></tr>

            <tr>
                <th>Transfer Id</th>
                <th>Date Time</th>
                <th>Transfer Status</th>
                <th>Process Description</th>
                <th>User</th>
                <th>Reference</th>
                <th>Funds In</th>
                <th>Funds Out</th>
                <th>Balance</th>
            </tr>
            <% for (const { name, currencyId, transferId, createdDate, status, description, user, reference, fundsIn, fundsOut, balance } of reportData) { %>
                <tr>
                    <td><%= `${transferId}` %></td>
                    <td style="text-align: right"><%= createdDate && (d = createdDate, `${d.toLocaleDateString('en-ZA')} ${d.toLocaleTimeString('en-US')}`)%></td>
                    <td><%= `${status}` %></td>
                    <td><%= `${description}` %></td>
                    <td><%= `${user}` %></td>
                    <td><%= `${reference}` %></td>
                    <td style="text-align: right"><%= formatAmount(fundsIn) %></td>
                    <td style="text-align: right"><%= formatAmount(fundsOut) %></td>
                    <td style="text-align: right"><%= formatAmount(balance) %></td>
                </tr>
            <% } %>
        </table>

        <br /><br />

    <% }) %>
    </body>

    </html>
---
# Source: finance-portal/charts/reporting-legacy-api/charts/reporting-k8s-templates/templates/settlementInitiation.yaml
apiVersion: mojaloop.io/v1
kind: MojaloopReport
metadata:
  name: release-name-settlement-initiation
spec:
  permission: report-settlement-initiation
  endpoint:
    path: /settlementInitiation
    params:
      - name: settlementId
        required: true
  queries:
    - name: settlementId
      query: SELECT :settlementId AS settlementId
    - name: adjustments
      query: |
        SELECT
            SUM(tp.amount)            AS  amount,
            p.name                    AS  name,
            p.participantId           AS  participantId,
            pc.participantCurrencyId  AS  accountId,
            pc.currencyId             AS  currencyId,
            MAX(c.scale)              AS  currencyScale
        FROM settlement s
        INNER JOIN settlementSettlementWindow ssw  ON  ssw.settlementId = s.settlementId
        INNER JOIN transferFulfilment tf           ON  tf.settlementWindowId = ssw.settlementWindowId
        INNER JOIN transferParticipant tp          ON  tp.transferId = tf.transferId
        INNER JOIN participantCurrency pc          ON  tp.participantCurrencyId = pc.participantCurrencyId
        INNER JOIN currency c                      ON  c.currencyId = pc.currencyId
        INNER JOIN participant p                   ON  p.participantId = pc.participantId
        INNER JOIN ledgerAccountType lat           ON  lat.ledgerAccountTypeId = pc.ledgerAccountTypeId
        WHERE s.settlementId = :settlementId AND lat.name = 'POSITION'
        GROUP BY p.name, pc.participantCurrencyId

  template: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <style>
            table {
                font-family: Calibri;
                font-size: 11pt;
                border-collapse: collapse;
                width: 100%;
                display: block;
                overflow-x: auto;
                white-space: nowrap;
            }
            td, th {
                border: 1px solid black;
                text-align: left;
                padding: 8px;
            }

            tr:nth-child(even) {
    //            background-color: #efefef;
            }

            td > span {
                font-weight: bold;
            }
            tr.noborder td {
                border: none;
            }
        </style>
        <title>Settlement Bank Report</title>
    </head>
    <body>

    <%
    const bankId = {
        demomfi: 'demomfi placeholder\n0000 0000 0000 0000',
        demowallet: 'demowallet placeholder\n0000 0000 0000 0000',
        noresponsepayeefsp: 'noresponsepayeefsp placeholder\n0000 0000 0000 0000',
        payeefsp: 'payeefsp placeholder\n0000 0000 0000 0000',
        payerfsp: 'payerfsp placeholder\n0000 0000 0000 0000',
        pm4mlreceiverfsp: 'pm4mlreceiverfsp placeholder\n0000 0000 0000 0000',
        pm4mlsenderfsp: 'pm4mlsenderfsp placeholder\n0000 0000 0000 0000',
        testfsp1: 'testfsp1 placeholder\n0000 0000 0000 0000',
        testfsp2: 'testfsp2 placeholder\n0000 0000 0000 0000',
    };

    const formatAmount = (amount) => parseFloat(amount).toLocaleString('en-US', { minimumFractionDigits: adjustments[0]?.currencyScale });

    // Because no currency has more than four decimal places, we can have quite a large epsilon value
    const EPSILON = 1e-5;
    // We use parseFloat because it returns NaN for parseFloat(null)
    const transfersSum = adjustments.reduce((sum, adj) => sum + parseFloat(adj.amount), 0);
    if (Number.isNaN(transfersSum) || (transfersSum > EPSILON)) {
      throw new Error(`Expected settlement initiation report transfers to sum to zero. Sum: ${transfersSum}. Report data: ${JSON.stringify(adjustments)}.`);
    }
    %>

    <table data-sheet-name="SettlementBankReport">
        <tr> 
            <td><span>Settlement ID</span></td>
            <td style="text-align: right"><%= settlementId[0].settlementId %></td>
        </tr>
        <tr>
            <td><span>Settlement Completed Date</span></td>
            <td style="text-align: right"></td>
        </tr>
        <tr>
            <td><span>Settlement Completed Time</span></td>
            <td style="text-align: right"></td>
        </tr>
        <tr>
            <td><span>Timezone</span></td>
            <td style="text-align: right">MMT</td>
        </tr>
        <tr class = "noborder">
            <td colspan="100%" style="padding-top: 20px"></td>
        </tr>
        <tr>
            <td>Participant (PayerFSP Identifier)</td>
            <td>Participant (Bank Identifier)</td>
            <td>Balance</td>
            <td>Settlement Transfer</td>
            <td>Currency</td>
        </tr>
        <% for (const { name, participantId, accountId, currencyId, amount } of adjustments) { %>
            <tr>
                <td><%= `${participantId} ${accountId} ${name}` %></td>
                <td><%= `${bankId[name]}` %></td>
                <td></td>
                <td style="text-align: right"><%= formatAmount(amount) %></td>
                <td><%= `${currencyId}` %></td>
            </tr>
        <% } %>
    </table>
    </body>
    </html>
---
# Source: finance-portal/charts/reporting-legacy-api/charts/reporting-k8s-templates/templates/settlementWindow.yaml
apiVersion: mojaloop.io/v1
kind: MojaloopReport
metadata:
  name: release-name-settlement-window
spec:
  permission: report-settlement-window
  endpoint:
    path: /settlementWindow
  queries:
    - name: report
      query: |
        SELECT sq.*, swOpen.createdDate AS windowOpen, swClose.createdDate as windowClose
        FROM
          (
              SELECT
                  qp.fspId,
                  sw.settlementWindowId,
                  swsc.settlementWindowStateId AS state,
                  COUNT(qp.amount) AS numTransactions,
                  SUM(qp.amount) AS netPosition
              FROM
                  central_ledger.settlementWindow AS sw
              LEFT JOIN
                   central_ledger.transferFulfilment AS tf
                   ON tf.settlementWindowId = sw.settlementWindowId
              LEFT JOIN
                   central_ledger.transactionReference AS tr
                   ON tf.transferId = tr.transactionReferenceId
              INNER JOIN
                   central_ledger.transferParticipant AS tp
                   ON tp.transferId = tf.transferId
              INNER JOIN
                   central_ledger.transferParticipantRoleType AS trpt
                   ON trpt.transferParticipantRoleTypeId = tp.transferParticipantRoleTypeId
              INNER JOIN
                   central_ledger.settlementWindowStateChange AS swsc
                   ON swsc.settlementWindowStateChangeId = sw.currentStateChangeId
              LEFT JOIN
                   central_ledger.quoteParty AS qp
                   ON qp.quoteId = tr.quoteId AND qp.transferParticipantRoleTypeId = tp.transferParticipantRoleTypeId
              GROUP BY qp.fspId, sw.settlementWindowId
          ) AS sq
        INNER JOIN
          central_ledger.settlementWindowStateChange AS swOpen
          ON swOpen.settlementWindowId = sq.settlementWindowId
        LEFT OUTER JOIN
          central_ledger.settlementWindowStateChange AS swClose
          ON swClose.settlementWindowId = sq.settlementWindowId AND swClose.settlementWindowStateId = 'CLOSED'
        WHERE
        swOpen.settlementWindowStateId = 'OPEN'
  template: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <style>
            table {
                font-family: arial, sans-serif;
                border-collapse: collapse;
                width: 100%;
                display: block;
                overflow-x: auto;
                white-space: nowrap;
            }

            th {
            //            border: 1px solid #efefef;
                text-align: left;
                padding: 0 8px;
            }

            td {
    //            border: 1px solid #efefef;
                padding: 8px;
            }

            tr:nth-child(even) {
    //            background-color: #efefef;
            }

            td > span {
                font-weight: bold;
            }
        </style>
        <title>FSP Settlement Report</title>
    </head>
    <body>

    <%
        const formatAmount = (amount) => parseFloat(amount).toLocaleString('en-US');
    %>

    <table>
            <tr>
                <td>fspId</td>
                <td>settlementWindowId</td>
                <td>state</td>
                <td>numTransactions</td>
                <td>netPosition</td>
                <td>windowOpen</td>
            </tr>
            <% for(let e of report) { %>
                <tr>
                    <td><%= e.fspId %></td>
                    <td><%= e.settlementWindowId %></td>
                    <td><%= e.state %></td>
                    <td><%= e.numTransactions %></td>
                    <td><%= e.netPosition %></td>
                    <td><%= e.windowOpen.toISOString() %></td>
                </tr>
            <% } %>
        </table>
    </body>
    </html>
---
# Source: finance-portal/charts/reporting-legacy-api/charts/reporting-k8s-templates/templates/transactionReconciliation.yaml
apiVersion: mojaloop.io/v1
kind: MojaloopReport
metadata:
  name: release-name-tx-reconciliation
spec:
  permission: report-tx-reconciliation
  endpoint:
    path: /transactionReconciliation
    params:
      - name: settlementWindowId
      - name: dfspId
        required: true
      - name: startDate
        required: true
      - name: endDate
        required: true
  queries:
    - name: report
      query: |
        SELECT DISTINCT
          qt.quoteId AS quoteId,
          payerPart.name AS senderDFSPId,
          payerPart.name AS senderDFSPName,
          payeeQp.fspId AS receiverDFSPId,
          payeePart.name AS receiverDFSPName,
          tfr.transferId AS hubTxnID,
          IF(txnSce.name = 'TRANSFER', 'P2P', (IF(txnSce.name = 'TRANSFER', 'MP', NULL))) AS transactionType,
          IF(qt.transactionRequestId IS NULL, 'Original', 'Reversal') AS natureOfTxnType,
          qt.createdDate AS requestDate,
          tfr.createdDate AS createdDate,
          IF(ssc.settlementStateId = 'SETTLED', ssc.createdDate, Cast(NULL as datetime)) AS settlementDate,
          payerQp.currencyId AS senderCountryCurrencyCode,
          payeeQp.currencyId AS receiverCountryCurrencyCode,
          payerQp.partyIdentifierValue AS senderId,
          payeeQp.partyIdentifierValue AS receiverId,
          tfr.amount AS reconciliationAmount,
          IF((payeeParty.firstName <> NULL && payeeParty.lastName <> NULL), 'RNR', 'RNND') AS receiverNameStatus,
          '' AS pricingOption,
          '' AS receiverKYCLevelStatus,
          ts.transferStateId AS status,
          ts.createdDate as modificationDate, '' AS errorCode,
          tfr.transferId AS senderDFSPTxnID,
          tfr.transferId AS receiverDFSPTxnID,
          IF(xfrFul.settlementWindowId IS NULL, '', Cast(xfrFul.settlementWindowId as char)) AS settlementWindowId,
          ssc.settlementStateId AS settlementState,
          ssc.createdDate AS settlementStateChangeDate
        FROM
          quote qt
        INNER JOIN
          transactionReference txnref
          ON qt.quoteId = txnref.quoteId
        INNER JOIN
          transactionScenario txnSce
          ON qt.transactionScenarioId = txnSce.transactionScenarioId
        INNER JOIN
          quoteParty payerQp
          ON qt.quoteId = payerQp.quoteId AND payerQp.partyTypeId = '1'
        INNER JOIN
          quoteParty payeeQp
          ON qt.quoteId = payeeQp.quoteId AND payeeQp.partyTypeId = '2'
        INNER JOIN
          participant payerPart
          ON payerQp.participantId = payerPart.participantId
        INNER JOIN
          participant payeePart
          ON payeeQp.participantId = payeePart.participantId
        INNER JOIN
          quoteResponse qr
          ON qr.quoteId = qt.quoteId
        INNER JOIN
          transfer tfr
          ON tfr.transferId = txnref.transactionReferenceId
        LEFT JOIN
          transferFulfilment xfrFul
          ON xfrFul.transferId = tfr.transferId
        LEFT JOIN
          party payerParty
          ON payerQp.partyTypeId = payerParty.partyId
        LEFT JOIN
          party payeeParty
          ON payerQp.partyTypeId = payeeParty.partyId
        LEFT JOIN
          settlementSettlementWindow ssw
          ON ssw.settlementWindowId = xfrFul.settlementWindowId
        LEFT JOIN
          settlement sett
          ON sett.settlementId = ssw.settlementId
        LEFT JOIN
          settlementStateChange ssc
          ON ssc.settlementStateChangeId = sett.currentStateChangeId
        LEFT JOIN
          (
              SELECT tsc.transferId, tsc.transferStateId, tsc.createdDate
              FROM
                  transferStateChange tsc
              INNER JOIN
                  (
                      SELECT
                          MAX(tsc.transferStateChangeId) AS transferStateChangeId,
                          tsc.transferId
                      FROM
                          transferStateChange tsc
                      GROUP BY transferId
                  ) mtsc
                  ON mtsc.transferId = tsc.transferId AND tsc.transferStateChangeId = mtsc.transferStateChangeID
          ) ts
          ON ts.transferId = tfr.transferId
        WHERE
          (payerPart.name = :dfspId OR payeePart.name = :dfspId)
        AND
          (xfrFul.settlementWindowId = :settlementWindowId OR :settlementWindowId IS NULL)
        AND
          qt.createdDate BETWEEN STR_TO_DATE(:startDate, '%Y-%m-%dT%T') AND STR_TO_DATE(:endDate, '%Y-%m-%dT%T')
  template: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <style>
            table {
                font-family: arial, sans-serif;
                border-collapse: collapse;
                width: 100%;
                display: block;
                overflow-x: auto;
                white-space: nowrap;
            }

            th {
            //            border: 1px solid #efefef;
                text-align: left;
                padding: 0 8px;
            }

            td {
    //            border: 1px solid #efefef;
                padding: 8px;
            }

            tr:nth-child(even) {
    //            background-color: #efefef;
            }

            td > span {
                font-weight: bold;
            }
        </style>
        <title>FSP Settlement Report</title>
    </head>
    <body>

    <%
        const formatAmount = (amount) => parseFloat(amount).toLocaleString('en-US');
    %>

    <table>
            <tr>
                <% for(let k of Object.keys(report[0] || {})) { %>
                  <td><%= k %></td>
                <% } %>
            </tr>

            <% for(let r of report) { %>
            <tr>
              <% for(let k of Object.keys(r)) { %>

                    <td><%= r[k] %></td>
              <% } %>
            </tr>
            <% } %>

        </table>
    </body>
    </html>
