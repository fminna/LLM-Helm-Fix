---
# Source: gitana/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-gitana
  labels:
    helm.sh/chart: gitana-1.4.0
    app.kubernetes.io/name: gitana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: gitana/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-gitana
rules:
  - apiGroups: [""]
    resources:
      - configmaps
    verbs:
      - create
      - delete
      - get
      - list
      - update
  - apiGroups: [""]
    resources:
      - secrets
    verbs:
      - get
---
# Source: gitana/templates/rolebind.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-gitana
subjects:
- kind: ServiceAccount
  name: release-name-gitana
roleRef:
  kind: Role
  name: release-name-gitana
  apiGroup: rbac.authorization.k8s.io
---
# Source: gitana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-gitana
  labels:
    helm.sh/chart: gitana-1.4.0
    app.kubernetes.io/name: gitana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: gitana
    app.kubernetes.io/instance: release-name
---
# Source: gitana/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-gitana
  labels:
    helm.sh/chart: gitana-1.4.0
    app.kubernetes.io/name: gitana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1 
  selector:
    matchLabels:
      app.kubernetes.io/name: gitana
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gitana
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-gitana
      securityContext:
        {}
      containers:
        - name: gitana
          args:
            - sync
            - --log.level=info
            - --sync-timer=5m
            - --dashboard.folder-annotation=dashboard-folder
            - --dashboard.labels=grafana-dashboard=nil 
            - --namespace=gitana
            - --repository.proxy=cenas
            - --repository.branch=main
            - --repository.path=/tmp/gitana/repository
            - --repository.url=
          securityContext:
            readOnlyRootFilesystem: true
          image: "ntakashi/gitana:1.4.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 9754
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /-/health
              port: http
          readinessProbe:
            httpGet:
              path: /-/ready
              port: http
          resources:
            {}
          volumeMounts:
            - mountPath: /tmp/gitana
              name: gitana
      volumes:
        - name: gitana
          emptyDir: {}
---
# Source: gitana/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-gitana-test-connection"
  labels:
    helm.sh/chart: gitana-1.4.0
    app.kubernetes.io/name: gitana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-gitana:80']
  restartPolicy: Never
