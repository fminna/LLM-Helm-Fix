---
# Source: cluster-secrets/templates/dex-prometheus-alertmanager.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: prom-stack-oidc-secrets-reader
  namespace: monitoring
  annotations:
    kubernetes.io/description: >
      Allows reading the OIDC OAuth secrets which are ultimately needed by the
      load balancers which serve the Prometheus and Alert Manager ingresses.
rules:
- apiGroups:
  - ""
  resourceNames:
  - govuk-dex-prometheus
  - govuk-dex-alertmanager
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
# Source: cluster-secrets/templates/dex-prometheus-alertmanager.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: aws-lb-controller-reads-prom-stack-oidc-secrets
  namespace: monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: prom-stack-oidc-secrets-reader
subjects:
- kind: ServiceAccount
  name: aws-load-balancer-controller
  namespace: cluster-services
---
# Source: cluster-secrets/templates/dex-argo-workflows.yaml
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: govuk-dex-argo-workflows
  namespace: "cluster-services"
  annotations:
    kubernetes.io/description: >
      This secret contains the OAUTH secret which allows Argo-Workflows to
      authenticate with Dex (https://dexidp.io/), a federated
      OpenID connect provider
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-secretsmanager
    kind: ClusterSecretStore
  target:
    name: govuk-dex-argo-workflows
    creationPolicy: Owner
  dataFrom:
    - extract:
        key: govuk/dex/argo-workflows
---
# Source: cluster-secrets/templates/dex-argocd.yaml
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: govuk-dex-argocd
  namespace: cluster-services
  labels:
    app.kubernetes.io/part-of: argocd
  annotations:
    kubernetes.io/description: >
      This secret contains the OAUTH secret which allows ArgoCD to
      authenticate with Dex (https://dexidp.io/), a federated
      OpenID connect provider
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-secretsmanager
    kind: ClusterSecretStore
  target:
    name: govuk-dex-argocd
    creationPolicy: Owner
  dataFrom:
  - extract:
      key: govuk/dex/argocd
---
# Source: cluster-secrets/templates/dex-github.yaml
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: govuk-dex-github
  namespace: cluster-services
  annotations:
    kubernetes.io/description: >
      This secret is used to allow Dex (https://dexidp.io/), a federated
      OpenID connect provider, to use GitHub as an identity provider
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-secretsmanager
    kind: ClusterSecretStore
  target:
    name: govuk-dex-github
    creationPolicy: Owner
  dataFrom:
    - extract:
        key: govuk/dex/github
---
# Source: cluster-secrets/templates/dex-grafana.yaml
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: govuk-dex-grafana
  namespace: "cluster-services"
  annotations:
    kubernetes.io/description: >
      This secret contains the OAUTH secret which allows Grafana to
      authenticate with Dex (https://dexidp.io/), a federated
      OpenID connect provider
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-secretsmanager
    kind: ClusterSecretStore
  target:
    name: govuk-dex-grafana
    creationPolicy: Owner
  dataFrom:
    - extract:
        key: govuk/dex/grafana
---
# Source: cluster-secrets/templates/dex-grafana.yaml
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: govuk-dex-grafana
  namespace: "monitoring"
  annotations:
    kubernetes.io/description: >
      This secret contains the OAUTH secret which allows Grafana to
      authenticate with Dex (https://dexidp.io/), a federated
      OpenID connect provider
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-secretsmanager
    kind: ClusterSecretStore
  target:
    name: govuk-dex-grafana
    creationPolicy: Owner
  dataFrom:
    - extract:
        key: govuk/dex/grafana
---
# Source: cluster-secrets/templates/dex-prometheus-alertmanager.yaml
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: govuk-dex-alertmanager
  namespace: "cluster-services"
  annotations:
    kubernetes.io/description: >
      Contains the OAuth secret which allows the Alert Manager ingress to
      require user authentication with Dex (https://dexidp.io/), a federated
      OpenID Connect provider. The requirement that users be authenticated is
      specified via the alb.ingress.kubernetes.io/auth-type annotation on the
      Ingress spec, which makes aws-load-balancer-controller configure an
      authenticate-oidc action on the ALB that it creates.
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-secretsmanager
    kind: ClusterSecretStore
  target:
    name: govuk-dex-alertmanager
    creationPolicy: Owner
  dataFrom:
  - extract:
      key: govuk/dex/alert-manager
---
# Source: cluster-secrets/templates/dex-prometheus-alertmanager.yaml
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: govuk-dex-alertmanager
  namespace: "monitoring"
  annotations:
    kubernetes.io/description: >
      Contains the OAuth secret which allows the Alert Manager ingress to
      require user authentication with Dex (https://dexidp.io/), a federated
      OpenID Connect provider. The requirement that users be authenticated is
      specified via the alb.ingress.kubernetes.io/auth-type annotation on the
      Ingress spec, which makes aws-load-balancer-controller configure an
      authenticate-oidc action on the ALB that it creates.
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-secretsmanager
    kind: ClusterSecretStore
  target:
    name: govuk-dex-alertmanager
    creationPolicy: Owner
  dataFrom:
  - extract:
      key: govuk/dex/alert-manager
---
# Source: cluster-secrets/templates/dex-prometheus-alertmanager.yaml
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: govuk-dex-prometheus
  namespace: "cluster-services"
  annotations:
    kubernetes.io/description: >
      Contains the OAuth secret which allows the Prometheus ingress to
      require user authentication with Dex (https://dexidp.io/), a federated
      OpenID Connect provider. The requirement that users be authenticated is
      specified via the alb.ingress.kubernetes.io/auth-type annotation on the
      Ingress spec, which makes aws-load-balancer-controller configure an
      authenticate-oidc action on the ALB that it creates.
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-secretsmanager
    kind: ClusterSecretStore
  target:
    name: govuk-dex-prometheus
    creationPolicy: Owner
  dataFrom:
    - extract:
        key: govuk/dex/prometheus
---
# Source: cluster-secrets/templates/dex-prometheus-alertmanager.yaml
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: govuk-dex-prometheus
  namespace: "monitoring"
  annotations:
    kubernetes.io/description: >
      Contains the OAuth secret which allows the Prometheus ingress to
      require user authentication with Dex (https://dexidp.io/), a federated
      OpenID Connect provider. The requirement that users be authenticated is
      specified via the alb.ingress.kubernetes.io/auth-type annotation on the
      Ingress spec, which makes aws-load-balancer-controller configure an
      authenticate-oidc action on the ALB that it creates.
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-secretsmanager
    kind: ClusterSecretStore
  target:
    name: govuk-dex-prometheus
    creationPolicy: Owner
  dataFrom:
    - extract:
        key: govuk/dex/prometheus
---
# Source: cluster-secrets/templates/fastly-api.yaml
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: govuk-fastly-api
  namespace: monitoring
  annotations:
    kubernetes.io/description: >
      This secret contains the Fastly API token which fastly-exporter to expose
      Fastly metrics to Prometheus
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-secretsmanager
    kind: ClusterSecretStore
  target:
    name: govuk-fastly-api
    creationPolicy: Owner
  dataFrom:
    - extract:
        key: govuk/fastly/api
---
# Source: cluster-secrets/templates/grafana-database.yaml
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: govuk-grafana-database
  namespace: monitoring
  annotations:
    kubernetes.io/description: >
      This secret contains credentials for Grafana to connect to its database
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-secretsmanager
    kind: ClusterSecretStore
  target:
    name: govuk-grafana-database
    creationPolicy: Owner
  dataFrom:
    - extract:
        key: govuk/grafana/database
---
# Source: cluster-secrets/templates/logit-host.yaml
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: logit-host
  namespace: cluster-services
  annotations:
    kubernetes.io/description: >
      Logstash endpoint where Filebeat (which runs as a daemonset) will send
      logs to. The `host` field is the "Logstash endpoint" under "Logstash
      Inputs" for the relevant stack (e.g. "GOV.UK Staging EKS") in the LogIt
      UI. The hostname consists of a UUID followed by "-ls.logit.io". The
      `port` field is the "Beats-SSL" port number from the same page. The port
      can be different for each LogIt stack.
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-secretsmanager
    kind: ClusterSecretStore
  target:
    name: logit-host
    creationPolicy: Owner
  dataFrom:
    - extract:
        key: govuk/logit-host
