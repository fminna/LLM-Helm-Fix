---
# Source: bisc-taalhuizen/templates/configmap-env.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-bisc-taalhuizen-env
  labels:
    helm.sh/chart: bisc-taalhuizen-0.1.2
    app.kubernetes.io/name: bisc-taalhuizen
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
data:
  env.js: |
    // This file is automatically generated

    window.ENVIRONMENT = {
      API_URL: 'https://backend-bisc-dev.commonground.nu/',
    }
---
# Source: bisc-taalhuizen/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-bisc-taalhuizen
  labels:
    helm.sh/chart: bisc-taalhuizen-0.1.2
    app.kubernetes.io/name: bisc-taalhuizen
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
data:
  env: develop
  server-url: "https://taalhuizen-bisc.commonground.nu"
  client-url: "https://gateway.local"
  graphql-url: "https://backend-bisc-dev.commonground.nu/"
  version: "latest"

  mail: "smtp"
  mail-from-name: "test"
  mail-from-email: "test@test.nl"
  mail-host: "bisc-staging.lifely.nl"
  mail-port: "80"
---
# Source: bisc-taalhuizen/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-bisc-taalhuizen
  labels:
    helm.sh/chart: bisc-taalhuizen-0.1.2
    app.kubernetes.io/name: bisc-taalhuizen
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: bisc-taalhuizen
    app.kubernetes.io/instance: release-name
---
# Source: bisc-taalhuizen/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-bisc-taalhuizen
  labels:
    helm.sh/chart: bisc-taalhuizen-0.1.2
    app.kubernetes.io/name: bisc-taalhuizen
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: bisc-taalhuizen
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bisc-taalhuizen
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: default
      securityContext:
        {}
      volumes:
        - name: environment
          configMap:
            name: release-name-bisc-taalhuizen-env
            defaultMode: 420
      containers:
        - name: release-name-bisc-taalhuizen-nginx
          securityContext:
            {}
          image: "ghcr.io/conductionnl/bisc-frontend:latest"
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /usr/share/nginx/html/env.js
              subPath: env.js
              name: environment
              readOnly: true
          env:
            #General configmap values
            - name: NGINX_PROXY_PASS
              valueFrom:
                configMapKeyRef:
                  name: release-name-bisc-taalhuizen
                  key: server-url
            - name: NGINX_ENVJS_ENV
              valueFrom:
                configMapKeyRef:
                  name: release-name-bisc-taalhuizen
                  key: env
            - name: NGINX_ENVJS_VERSION
              valueFrom:
                configMapKeyRef:
                  name: release-name-bisc-taalhuizen
                  key: version
            - name: NGINX_ENVJS_GRAPHQL_URI
              valueFrom:
                configMapKeyRef:
                  name: release-name-bisc-taalhuizen
                  key: graphql-url
            - name: REACT_APP_API_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: release-name-bisc-taalhuizen
                  key: graphql-url
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
          resources:
            {}
