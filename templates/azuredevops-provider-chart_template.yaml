---
# Source: azuredevops-provider-chart/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-azuredevops-provider-chart
  labels:
    helm.sh/chart: azuredevops-provider-chart-0.16.1
    app.kubernetes.io/name: azuredevops-provider-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.16.1"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: azuredevops-provider-chart/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-azuredevops-provider-chart
  labels:
    helm.sh/chart: azuredevops-provider-chart-0.16.1
    app.kubernetes.io/name: azuredevops-provider-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.16.1"
    app.kubernetes.io/managed-by: Helm
data:
  AZURE_DEVOPS_PROVIDER_DEBUG: "true"
  AZURE_DEVOPS_PROVIDER_POLL_INTERVAL: 3m
---
# Source: azuredevops-provider-chart/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-azuredevops-provider-chart
  labels:
    helm.sh/chart: azuredevops-provider-chart-0.16.1
    app.kubernetes.io/name: azuredevops-provider-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.16.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: ["azuredevops.krateo.io"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
  resources:
  - checkconfigurations
  - connectorconfigs
  - endpoints
  - environments
  - feedpermissions
  - feeds
  - gitrepositories
  - groups
  - pipelinepermissions
  - pipelines
  - queues
  - repositorypermissions
  - runs
  - teamprojects
  - teams
  - users
- apiGroups: ["azuredevops.krateo.io"]
  verbs: ["get", "patch", "update"]
  resources:
  - checkconfigurations/status
  - endpoints/status
  - environments/status
  - feedpermissions/status
  - feeds/status
  - gitrepositories/status
  - groups/status
  - pipelinepermissions/status
  - pipelines/status
  - queues/status
  - repositorypermissions/status
  - runs/status
  - teamprojects/status
  - teams/status
  - users/status
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]

- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch", "update"]
---
# Source: azuredevops-provider-chart/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-azuredevops-provider-chart
  labels:
    helm.sh/chart: azuredevops-provider-chart-0.16.1
    app.kubernetes.io/name: azuredevops-provider-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.16.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name:  release-name-azuredevops-provider-chart
subjects:
- kind: ServiceAccount
  name: release-name-azuredevops-provider-chart
  namespace: default
---
# Source: azuredevops-provider-chart/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-azuredevops-provider-chart
  labels:
    helm.sh/chart: azuredevops-provider-chart-0.16.1
    app.kubernetes.io/name: azuredevops-provider-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.16.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: azuredevops-provider-chart
    app.kubernetes.io/instance: release-name
---
# Source: azuredevops-provider-chart/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-azuredevops-provider-chart
  labels:
    helm.sh/chart: azuredevops-provider-chart-0.16.1
    app.kubernetes.io/name: azuredevops-provider-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.16.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: azuredevops-provider-chart
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: azuredevops-provider-chart-0.16.1
        app.kubernetes.io/name: azuredevops-provider-chart
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "0.16.1"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: release-name-azuredevops-provider-chart
      securityContext:
        {}
      containers:
        - name: azuredevops-provider-chart
          securityContext:
            {}
          image: "ghcr.io/krateoplatformops/azuredevops-provider:0.16.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 443
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: azuredevops-provider-certs
---
# Source: azuredevops-provider-chart/templates/job-role.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-azuredevops-provider-chart-job-sa
  labels:
    helm.sh/chart: azuredevops-provider-chart-0.16.1
    app.kubernetes.io/name: azuredevops-provider-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.16.1"
    app.kubernetes.io/managed-by: Helm
  namespace: default
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded
---
# Source: azuredevops-provider-chart/templates/genCertsScript-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-azuredevops-provider-chart-script-configmap
  labels:
    helm.sh/chart: azuredevops-provider-chart-0.16.1
    app.kubernetes.io/name: azuredevops-provider-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.16.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded
data:
  create-certs.sh: |-
    #!/bin/bash

    WEBHOOK_NS=${1:-"default"}
    WEBHOOK_NAME=${2:-"webhook-service"}

    # Create certs for our webhook
    openssl genrsa -out /tmp/tls.key 2048
    openssl req -new -key /tmp/tls.key \
        -subj "/CN=${WEBHOOK_NAME}.${WEBHOOK_NS}.svc" \
        -addext "subjectAltName=DNS:${WEBHOOK_NAME}.${WEBHOOK_NS}.svc,DNS:${WEBHOOK_NAME}.${WEBHOOK_NS}.svc" \
        -out /tmp/tls.csr

    openssl x509 -req -extfile <(printf "subjectAltName=DNS:${WEBHOOK_NAME}.${WEBHOOK_NS}.svc,DNS:${WEBHOOK_NAME}.${WEBHOOK_NS}.svc\nbasicConstraints=CA:TRUE") -days 365 -in /tmp/tls.csr -signkey /tmp/tls.key -out /tmp/tls.crt

    # Create certs secrets for k8s
    kubectl create secret generic \
        ${WEBHOOK_NAME}-certs \
        --from-file=tls.key=/tmp/tls.key \
        --from-file=tls.crt=/tmp/tls.crt

    # Set the CABundle on the webhook registration
    CA_BUNDLE=$(base64 -w 0 /tmp/tls.crt)
    kubectl create configmap ${WEBHOOK_NAME}-configmap --from-literal=${WEBHOOK_NAME}-crd.yaml="spec:
      conversion:
        strategy: Webhook
        webhook:
          clientConfig:
            service:
              namespace: ${WEBHOOK_NS}
              name: ${WEBHOOK_NAME}
              path: /convert
            caBundle: ${CA_BUNDLE}
          conversionReviewVersions:
          - v1
          - v1alpha2
          - v1alpha1"

    rm /tmp/tls.*
---
# Source: azuredevops-provider-chart/templates/job-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-azuredevops-provider-chart-job-clusterrolebinding
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: release-name-azuredevops-provider-chart-job-sa
    namespace: default
---
# Source: azuredevops-provider-chart/templates/genCerts-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-azuredevops-provider-chart
  labels:
    helm.sh/chart: azuredevops-provider-chart-0.16.1
    app.kubernetes.io/name: azuredevops-provider-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.16.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    spec:
      restartPolicy: OnFailure
      serviceAccount: release-name-azuredevops-provider-chart-job-sa
      containers:
        - name: release-name-azuredevops-provider-chart-patcher
          image: bitnami/kubectl
          command: ['/bin/bash','/tmp/mount/create-certs.sh', default,  release-name-azuredevops-provider-chart]
          volumeMounts:
            - name: script-volume
              mountPath: /tmp/mount
      volumes:
        - name: script-volume
          configMap:
            name: release-name-azuredevops-provider-chart-script-configmap
---
# Source: azuredevops-provider-chart/templates/patchCRD-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-azuredevops-provider-chart-apply-job
  labels:
    helm.sh/chart: azuredevops-provider-chart-0.16.1
    app.kubernetes.io/name: azuredevops-provider-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.16.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    spec:
      restartPolicy: OnFailure
      serviceAccount: release-name-azuredevops-provider-chart-job-sa
      containers:
        - name: release-name-azuredevops-provider-chart-kubectl
          image: bitnami/kubectl
          command:
            - kubectl
            - patch
            - crd
            - pipelinepermissions.azuredevops.krateo.io
            - --patch-file
            - /tmp/release-name-azuredevops-provider-chart-crd.yaml
          volumeMounts:
            - name: crd-volume
              mountPath: /tmp
      volumes:
        - name: crd-volume
          configMap:
            name: release-name-azuredevops-provider-chart-configmap
