---
# Source: prometheus-json-exporter/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-prometheus-json-exporter
  namespace: default
  labels:
    helm.sh/chart: prometheus-json-exporter-0.11.0
    app.kubernetes.io/name: prometheus-json-exporter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.6.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: prometheus-json-exporter/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-prometheus-json-exporter
  namespace: default
  labels:
    helm.sh/chart: prometheus-json-exporter-0.11.0
    app.kubernetes.io/name: prometheus-json-exporter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.6.0"
    app.kubernetes.io/managed-by: Helm
data:
  allow-snippet-annotations: "false"
  config.yml: |
    ---
    modules:
      default:
        metrics:
          - name: example_global_value
            path: "{ .counter }"
            help: Example of a top-level global value scrape in the json
            labels:
              environment: beta # static label
              location: "planet-{.location}"          # dynamic label
    
          - name: example_value
            type: object
            help: Example of sub-level value scrapes from a json
            path: '{.values[?(@.state == "ACTIVE")]}'
            labels:
              environment: beta # static label
              id: '{.id}'          # dynamic label
            values:
              active: 1      # static value
              count: '{.count}' # dynamic value
              boolean: '{.some_boolean}'
    
        headers:
          X-Dummy: my-test-header
    
        # If 'body' is set, it will be sent by the exporter as the body content in the scrape request. The HTTP method will also be set as 'POST' in this case.
        # body:
        #   content: |
        #     {"time_diff": "1m25s", "anotherVar": "some value"}
    
        # The body content can also be a Go Template (https://golang.org/pkg/text/template), with all the functions from the Sprig library (https://masterminds.github.io/sprig/) available. All the query parameters sent by prometheus in the scrape query to the exporter, are available in the template.
        # body:
        #   content: |
        #     {"time_diff": "{{ duration `95` }}","anotherVar": "{{ .myVal | first }}"}
        #   templatize: true
    
        # For full http client config parameters, ref: https://pkg.go.dev/github.com/prometheus/common/config?tab=doc#HTTPClientConfig
        #
        # http_client_config:
        #   tls_config:
        #     insecure_skip_verify: true
        #   basic_auth:
        #     username: myuser
        #     #password: veryverysecret
        #     password_file: /tmp/mysecret.txt
---
# Source: prometheus-json-exporter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-prometheus-json-exporter
  namespace: default
  labels:
    helm.sh/chart: prometheus-json-exporter-0.11.0
    app.kubernetes.io/name: prometheus-json-exporter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.6.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 7979
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: prometheus-json-exporter
    app.kubernetes.io/instance: release-name
---
# Source: prometheus-json-exporter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-prometheus-json-exporter
  namespace: default
  labels:
    helm.sh/chart: prometheus-json-exporter-0.11.0
    app.kubernetes.io/name: prometheus-json-exporter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.6.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus-json-exporter
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/config: 334594f84ca13aefb0143123afe0113a1039e082a29f51e9c092e9a487d9a80b
      labels:
        app.kubernetes.io/name: prometheus-json-exporter
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-prometheus-json-exporter
      securityContext:
        {}
      containers:
        - name: prometheus-json-exporter
          image: "quay.io/prometheuscommunity/json-exporter:v0.6.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 7979
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: http
          readinessProbe:
            httpGet:
              path: /metrics
              port: http
          resources:
            {}
          volumeMounts:
            - name: config-configmap-volume
              mountPath: /config.yml
              subPath: config.yml
          securityContext:
            {}
      volumes:
      - name: config-configmap-volume
        configMap:
          name: release-name-prometheus-json-exporter
          items:
            - key: config.yml
              path: config.yml
