---
# Source: galaxy/templates/priorityclass-job.yaml
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: release-name-galaxy-job-priority
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
value: -1000 
preemptionPolicy: Never
globalDefault: false
description: "By default, Galaxy jobs will not preempt existing workloads but will run when cluster resources are available. Depending on the cluster setup, the preemption value can be modified to prompt scaling of the cluster for the computation."
---
# Source: galaxy/charts/cvmfs/charts/cvmfscsi/templates/controllerplugin-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-cvmfscsi-controllerplugin
  labels:
    chart: cvmfscsi-2.3.2
    heritage: Helm
    app: cvmfscsi
    component: controllerplugin
    release: release-name
---
# Source: galaxy/charts/postgresql/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-postgres
  namespace: default
  labels:
    app.kubernetes.io/name: postgres
    helm.sh/chart: postgresql-1.9.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
---
# Source: galaxy/charts/rabbitmq/templates/cluster-operator/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-2.6.12
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: rabbitmq-operator
    app.kubernetes.io/part-of: rabbitmq
  name: release-name-rabbitmq
  namespace: "default"
automountServiceAccountToken: true
---
# Source: galaxy/charts/rabbitmq/templates/messaging-topology-operator/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-2.6.12
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: messaging-topology-operator
    app.kubernetes.io/part-of: rabbitmq
  name: release-name-rabbitmq-messaging-topology-operator
  namespace: "default"
automountServiceAccountToken: true
---
# Source: galaxy/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-galaxy
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: galaxy/charts/rabbitmq/templates/messaging-topology-operator/validating-webhook-configuration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-rabbitmq-messaging-topology-operator-webhook
  namespace: "default"
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-2.6.12
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  tls.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ4akNDQXRxZ0F3SUJBZ0lRYUpqcXNham5HblNQQmhDRWFZbExHVEFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOeWJYRXRiWE5uTFhSdmNHOXNiMmQ1TFdOaE1CNFhEVEkwTURVeE5UQTVNREF5TUZvWApEVEkxTURVeE5UQTVNREF5TUZvd1BERTZNRGdHQTFVRUF4TXhjbVZzWldGelpTMXVZVzFsTFhKaFltSnBkRzF4CkxXMWxjM05oWjJsdVp5MTBiM0J2Ykc5bmVTMXZjR1Z5WVhSdmNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFOYm1sbTRhM2paSGpKOGtKTGFEZGhzdXlMcG96cmlqcjQyK0xaWWxQdXVkTkxYcwowOTd1OEpWdkxTMVVsTXZYQ2RmTGJWNnJoVEQwT2ZLNXZOYWE4M04rcXFxcVdiOVVYSy9VNmxnanNTRTFITnhqCkVoYmVXRng1VDhoZ1FyWTM1UFRqSit2RTJkVGJUTEZsSDgwSnpDMG8wT0JRbytrdkpFVXM0V2tkRzZJckF2d1YKdFhPSFE2eWlmc0ttcW5BOEJZSUxEOWpLTVJXaXZ1VUFyREF1SEdtUDdObWt4RHJxY1E5RTRHK2lHeWJOTGN0ZQovUFdIZU95SWF4Q0xYaytoWmZTQ0JIbWkwSUdDVDRFblBscEhFcDlkREd0cG5CekxhZmkxWTZ3ZWUxeEVsNmNxCkc4WENPSGpteFpmRDhkQjNkSTNTbS9pTTFMcERWZ3g2cERsYlZnY0NBd0VBQWFPQ0FRd3dnZ0VJTUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlRRRjJoRWpRTTB5cUt3dDEyV1VXelJIQ2VSOWpDQnB3WURWUjBSCkJJR2ZNSUdjZ2tWeVpXeGxZWE5sTFc1aGJXVXRjbUZpWW1sMGJYRXRiV1Z6YzJGbmFXNW5MWFJ2Y0c5c2IyZDUKTFc5d1pYSmhkRzl5TFhkbFltaHZiMnN1WkdWbVlYVnNkQzV6ZG1PQ1UzSmxiR1ZoYzJVdGJtRnRaUzF5WVdKaQphWFJ0Y1MxdFpYTnpZV2RwYm1jdGRHOXdiMnh2WjNrdGIzQmxjbUYwYjNJdGQyVmlhRzl2YXk1a1pXWmhkV3gwCkxuTjJZeTVqYkhWemRHVnlMbXh2WTJGc01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2YxeXJscHVSV0N0VlEKdzlhbkpPMlAyUGlGd1hYZU1HUGNDU09OWWs3L2dPUFdzWmw3WnhlVXM3NmdDTUVZOTVrOHFxeUlBS0ZUaEgrcwpHdlRqYlNKdWh2L3ZLVEZRWUthTi9hUmtLMEcxbkhjek1BUHVBWGkxOW5lSmo0aURTbnpib3ljU0VMN2dCMmd5ClNOQkZaeUxSdjBsbDY1Uml6Y3ZoeG8yNmFXSnRWQWYvd2FObU9wK20yTU0yTU90dkJwZTdiRWMzOURZS2N0OXIKVE1kWEp5NTQ0SkNjTmZiczNEaWI5YitmeTh5SUpMbXpqc2g2aTVCeFVCVlVmdk53OUUrU2YxbXQwQzZEZ1k3Ygp3TXhXNFIzVlQyeXFTU3hYZmd2ZjZhVkJLdjBhMWlXYzUxZ25QTjJWbG1XMGd1RWpuS3Vlc1NCRDlOdmNoYW1QCjZ6Y3BQUlF4Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
  tls.key: "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMXVhV2JocmVOa2VNbnlRa3RvTjJHeTdJdW1qT3VLT3ZqYjR0bGlVKzY1MDB0ZXpUCjN1N3dsVzh0TFZTVXk5Y0oxOHR0WHF1Rk1QUTU4cm04MXByemMzNnFxcXBadjFSY3I5VHFXQ094SVRVYzNHTVMKRnQ1WVhIbFB5R0JDdGpmazlPTW42OFRaMU50TXNXVWZ6UW5NTFNqUTRGQ2o2UzhrUlN6aGFSMGJvaXNDL0JXMQpjNGREcktKK3dxYXFjRHdGZ2dzUDJNb3hGYUsrNVFDc01DNGNhWS9zMmFURU91cHhEMFRnYjZJYkpzMHR5MTc4CjlZZDQ3SWhyRUl0ZVQ2Rmw5SUlFZWFMUWdZSlBnU2MrV2tjU24xME1hMm1jSE10cCtMVmpyQjU3WEVTWHB5b2IKeGNJNGVPYkZsOFB4MEhkMGpkS2IrSXpVdWtOV0RIcWtPVnRXQndJREFRQUJBb0lCQVFESjJacVFYdkk3ZjZjSQp6NVVnVFlpQTdjZWl0OUQ3d3R1aFFuRmxKeVRiZ0RURGNHaHRiSGRUbFRLVThtNDBySTNWUUlGQk85QUY5RS85CnVoSXliU2FnWStpQUZ6UG5MNkZEa3JSdkIwOVh4cUNPTFF3UHFOYk1QVElBSHRKcWYwT3g5UzlKR0FRWEY4a0kKa3RoMDZXLzdOdXhDMWR1dnFoVGlXTTU4d2RkejBFT1VKL0IwRDcvS1dYaDE2WU1wbzRmbXBxYzJMUVpkUlBIdQpncldMekZ4UkhqbWVwbkJ0RFlISGtBbmd5QnJhdGZEbVcyU1Nha2xUUTBMY1h6THFZS3lzRXF0QnQxWUVXdks1CjE0REY4UFNCSEpJNis3ZWZPV1JheExNZ04yR0hPMjJmMzRSeDlNZjF0cmZDakhJOWFZVUdwWEJnTno3SXZDNGMKZGs1c0RuY3hBb0dCQU9CSllGT2hYL2NGc2VGd01EQ3B4V2x0NnE2a1hSeVl4SzFUaTFoRlB2M3RhTk40eUlaYwp0ZDVGSllHV2RDTTRNLzFtRTMvREtmMlB3RzRrdTExZXNSSThMNklqN1BMeUgrU2pJN2pkNGo5TytnUk9IdlBOClhoU2J4UzVNL2ZydkRvdG9yUkU5dzRzdVhYckgvYllpbUlpc1FWWmtCc2lrRXY1bTkvc1dTd1dQQW9HQkFQVkoKZHhHdWpjV0Znc1FrZG9lSk1ac0NVaEdwUUt6Q1VrZWlXVFhVeXhReXlra0p3bCs3Q2c0WW1sODNEeWRYcnJaUgpqbVpBOUdNanZNVjFHL0R5eVhhYzZneFFUVFFSUmxWRmtNdXhLVUlDNGxWc1dIRHg4bHRkQ3NSRlNWdTIvTXVCCi9oMW0wdCtJK3pHMlpJVWp6MGhlOStqYW9STXRhM1NYeDllSTI1d0pBb0dBR0ZHY2NqVHpOTk9YUC94c0hUcXIKUHcwOS93V3ZXdVJ0bnVXS0hGNFZ3RzYzaVFaMXA2dnh4RkgzQ1NBSkk3QjZZcVZvdzllamUrelVUcDBJKzh6QwpvbG1JU0twZ2pNOFlDakJ1TlNOSjN0ZHZZSHdmK3d0dmdnaUp6c1ZtWElrREtMYUczWEcyL0NaZzJHbEs1eTdGCkh6eWVNUUhUZ25uWDNXSEl6WjdUTDUwQ2dZQkZ6RTcybUI0OW03MVhSU3o1YW4vVUpUZm5VS3RYdmNBZUpFT1EKZnVuKzZHa0ptWjVYRVdsT0U1QXlFZi9jNlNXTk9lMzBpUDFDRE5SVnQvcG9lUjM5QTYvU0t6T2M0bUdLT0U1NAp1QVFPaGJXVUswMkxiajNSNDhzQmlOblVJR0VWSS91RXNGTEhTenAzcmZneXJycjRWQlhsaS9rVDlQUEQ3TUR3ClEwQ0N5UUtCZ0hpZnlPczI5eUdHbHJGUW9EWm8rMHlnOTlmNmdnZ0xrbkpGTGdJN2hlRWo0YVA4bW1JeXF5TXIKdzREZnVoakJrek45SjRad3dpc1JyQ09RSlpPMGg4ajF5TU51RktrSC9saEhIN0pwUjJSelJDOTZWQmNwYnlUNApsL2oyblpnc0NIaVhxNVhocFdXeC8wU0dqSUYrTU5penZFbXVxSldoR2pJc3ZKcHlFaHg0Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
  ca.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRR2R1bjVQVUQ3ZENyZUo2MGxKblpJREFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOeWJYRXRiWE5uTFhSdmNHOXNiMmQ1TFdOaE1CNFhEVEkwTURVeE5UQTVNREF5TUZvWApEVEkxTURVeE5UQTVNREF5TUZvd0hqRWNNQm9HQTFVRUF4TVRjbTF4TFcxelp5MTBiM0J2Ykc5bmVTMWpZVENDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDA0OU9WTmc3c2hFOUZwbWl4WnhYTXgKSUZjMWFQOEdXQ2lqankweUplb1hCSG9IQWNodUdYM2x4cjdCL1REYzE1L040NjFBNGduVFVIREdrNjdOWnhoQwpXUVRQa0ZmZnZHY2grTnBaUDY4eXJDcTVEUUUrZmxpdy93T211R1pFVTc0cXdFTVV2Mng1U0lsSG00WnI1VGh1CktpRE1lL1d3U0ZJTlh6UnV6WmRGZUpoNlNTR3BkT2V1dDU1SFVhTklIeERyOXdLM1hoTUEwMkhkS0hUbFc3RUMKYzZZek16Wkc3Y3l2L01aSUQ2aVJ0QVdRTi8yazd3NlF2K2p6Z1hyTUNSRkFVeUlLS3UxNXlqTE9FN1BQdURtawp4U0h1eTN3UUV3d1hSZDhtUWV0Wk5xdFVoTERxOEJMeEZXemxIRUx6eUhZL0JDS0JKc0ZCSnVLcVpSOUpJeFVDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRRRjJoRWpRTTB5cUt3dDEyVwpVV3pSSENlUjlqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFXVnhaNlNtR2liVW1Jai9PZVAvMjg1QWFmODRyCnpJQjNBdDlRWkhJNDNYeHNKR2tzZTF4WWI5YXF2elAvVFBta2lnandXN2ZESlpXUUt2aXNHVklnTm1JQXlPQngKZDRydUtsQXYzb3RYV3FmbGxCb2NJcEVKdXMrZ1BVd2pjdnRDWVdvYnJXK3NTSGJTWDhMdWtQQVJoSkRHUitRNwpUQUd2VG9LWDQwNWlTaTZDNU9uM3QzcFF5OHMwd1dqUlEwS2I2WjVnQXpOVnZwMlpwcjNxamQxVUFCNmJ4WUlICkVLVWw1Ym9XTW14YzlVWlZmaExWb1dLOFI5TVpvOGxNRU53YmVPZEYyNFNPNVpPcWRsRzExZ09FNnJSYUtsLzgKT1lBeGpXVVRmUUVUV2Z2RGY4UzZzUDFwazlMcXltZDlNNmtvWmlXcGFpZkorVk91QnhITGMxKzlTQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
---
# Source: galaxy/templates/hapostgres/secret-pgcluster-galaxy-user.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: galaxydbuser.galaxy-release-name-postgres.credentials.postgresql.acid.zalan.do
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
data:
  username: "Z2FsYXh5ZGJ1c2Vy"
  password: "SXNuRmpWbU8xcXBvcVBKNnZZZVlIMk1FUXlnNW9obkg="
---
# Source: galaxy/templates/hapostgres/secret-pgcluster-postgres.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: postgres.galaxy-release-name-postgres.credentials.postgresql.acid.zalan.do
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
data:
  username: "cG9zdGdyZXM="
  password: "MzJNS0p2Um5KTGRWVDh2NGx6QzBVcGdacWc3QWdFVTg="
---
# Source: galaxy/templates/secret-galaxy.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: release-name-galaxy-secrets
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
data:
  galaxy-config-id-secret: "NE1aTDVib0FCOFlxdkh0QW50cVp6TnhaSmFMTWRoQ3Y="
---
# Source: galaxy/charts/cvmfs/charts/cvmfscsi/templates/extra-configmaps.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cvmfs-csi-config-d
  labels:
    chart: cvmfscsi-2.3.2
    heritage: Helm
    app: cvmfscsi
data:
  data.galaxyproject.org.conf:   |
    CVMFS_SERVER_URL="http://cvmfs1-iu0.galaxyproject.org/cvmfs/@fqrn@;http://cvmfs1-tacc0.galaxyproject.org/cvmfs/@fqrn@;http://cvmfs1-psu0.galaxyproject.org/cvmfs/@fqrn@;http://cvmfs1-mel0.gvl.org.au/cvmfs/@fqrn@;http://cvmfs1-ufr0.galaxyproject.eu/cvmfs/@fqrn@"
    CVMFS_PUBLIC_KEY="/etc/cvmfs/config.d/data.galaxyproject.org.pub"
    CVMFS_HTTP_PROXY=DIRECT
  data.galaxyproject.org.pub:   |
    -----BEGIN PUBLIC KEY-----
    MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA5LHQuKWzcX5iBbCGsXGt
    6CRi9+a9cKZG4UlX/lJukEJ+3dSxVDWJs88PSdLk+E25494oU56hB8YeVq+W8AQE
    3LWx2K2ruRjEAI2o8sRgs/IbafjZ7cBuERzqj3Tn5qUIBFoKUMWMSIiWTQe2Sfnj
    GzfDoswr5TTk7aH/FIXUjLnLGGCOzPtUC244IhHARzu86bWYxQJUw0/kZl5wVGcH
    maSgr39h1xPst0Vx1keJ95AH0wqxPbCcyBGtF1L6HQlLidmoIDqcCQpLsGJJEoOs
    NVNhhcb66OJHah5ppI1N3cZehdaKyr1XcF9eedwLFTvuiwTn6qMmttT/tHX7rcxT
    owIDAQAB
    -----END PUBLIC KEY-----
---
# Source: galaxy/charts/cvmfs/charts/cvmfscsi/templates/extra-configmaps.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cvmfs-csi-default-local
  labels:
    chart: cvmfscsi-2.3.2
    heritage: Helm
    app: cvmfscsi
data:
  default.local:   |
    CVMFS_USE_GEOAPI=yes
    CVMFS_HTTP_PROXY="http://ca-proxy.cern.ch:3128"
  
    # It is advised to change these configs in the cache section of the helm values
    # and leave them unchanged here, so they auto-generate.
    CVMFS_QUOTA_LIMIT=1000
    CVMFS_CACHE_BASE=/cvmfs-localcache
    CVMFS_ALIEN_CACHE=/cvmfs-aliencache
    # When alien cache is used, CVMFS does not control the size of the cache.
    CVMFS_QUOTA_LIMIT=-1
    # Whether repositories should share a cache directory or each have their own.
    CVMFS_SHARED_CACHE=no
---
# Source: galaxy/templates/configmap-cvmfs-fix.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-configmap-cvmfs-fix
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
data:
  cvmfs-fix.sh: |
    sleep 10;
    status=`kubectl get pods -n default -l 'app=cvmfscsi' -l 'component=nodeplugin' -o custom-columns=STATUS:.status.phase --no-headers | sort | uniq | tr -d '\n'`
    while [ "$status" != "Running" ]; do
      echo "Waiting on nodeplugin pod to enter 'Running' status. Currently '$status'.";
      sleep 1;
      status=`kubectl get pods -n default -l 'app=cvmfscsi' -l 'component=nodeplugin' -o custom-columns=STATUS:.status.phase --no-headers | sort | uniq | tr -d '\n'`
    done && \
    echo "Deleting nodeplugin pods..."
    kubectl get pods -n default -l 'app=cvmfscsi' -l 'component=nodeplugin' -o name | xargs kubectl -n default delete && \
    echo "Deleted nodeplugin pods."
---
# Source: galaxy/templates/configmap-extra-files.yaml
apiVersion: v1
metadata:
  # Extract the filename portion only
  name: release-name-galaxy-extra-welcomehtml-ee3410714399628f55d8b0fbdbcc0b1ab19c965ad38e8
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
kind: ConfigMap
data:
  welcome.html: |
    <!DOCTYPE html>
    <html lang="en">
        <head>
            <meta charset="utf-8">
            <link rel="stylesheet" href="dist/base.css" type="text/css" />
        </head>
        <body class="m-0">
            <div class="py-4">
                <div class="container">
                    <h2>Welcome to <strong>Galaxy v24.0.2</strong></h2>
                    <br>
                    <a target="_blank" href="https://docs.galaxyproject.org/en/master/" class="btn btn-primary">Documentation »</a>
                    <a target="_blank" href="https://galaxyproject.org" class="btn btn-primary">Community Hub »</a>
                </div>
                <br>
            </div>
            <div class="container">
                <footer class="text-center">
                    <p>Galaxy v24.0.2, Helm Chart v5.14.0</p>
                </footer>
            </div>
        </body>
    </html>
---
# Source: galaxy/templates/configmap-extra-files.yaml
apiVersion: v1
metadata:
  name: release-name-galaxy-probedb-py
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
kind: ConfigMap
data:
  probedb.py: |
    import argparse
    import logging
    import psycopg2
    import socket
    import sys
    
    
    from datetime import datetime
    
    log = logging.getLogger()
    log.setLevel(logging.INFO)
    log.addHandler(logging.StreamHandler(sys.stdout))
    
    
    def check_rows(connection_string, query_string, interval=60):
    
        def less_than_interval(a, b, interval=60):
            if (b-a).seconds > interval:
                log.debug("time delta {} > {}s".format((b-a).seconds, interval))
                return False
            log.debug("time delta {} <= {}s".format((b-a).seconds, interval))
            return True
    
        conn = psycopg2.connect(connection_string)
        cur = conn.cursor()
        cur.execute(query_string)
        rows = cur.fetchall()
        log.debug(f"matching rows {str(rows)}")
        # At least one matching handler must be alive
        matches = any(less_than_interval(row[0], datetime.now(), interval) for row in rows)
        log.debug(f"health check {'succeeded' if matches else 'failed'}.")
        return 0 if matches else 1
    
    
    def main():
        # allowable seconds since db timestamp
        default_interval = 60
    
        parser = argparse.ArgumentParser()
    
        parser.add_argument("-c", "--connection", required=True,
                            help="connection string to galaxy database")
        parser.add_argument("-s", "--server_name", required=True,
                            help="handler's server_name to be checked in postgres db")
        parser.add_argument("-o", "--hostname",
                            help="handler host name to be checked in postgres db",
                            default=socket.gethostname())
        parser.add_argument("-i", "--interval",
                            type=int,
                            help="how long (in seconds) since heartbeat to determine probe failure")
        parser.add_argument("-v", "--verbose",
                            help="enable verbose output", action="store_true")
    
        args = parser.parse_args()
    
        if args.verbose:
            log.setLevel(logging.DEBUG)
    
        db_query = f"SELECT update_time FROM worker_process WHERE hostname='{args.hostname}'" \
                   f" AND server_name='{args.server_name}';"
    
        log.debug(f"provided arguments: {str(args)}")
        log.debug(f"db connection string: {args.connection}")
        log.debug(f"db query: {db_query}")
    
        return check_rows(args.connection, db_query, args.interval if args.interval else default_interval)
    
    
    if __name__ == '__main__':
        sys.exit(main())
---
# Source: galaxy/templates/configmap-galaxy-rules.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-galaxy-job-rules
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
data:
  tpv_rules_local.yml: |
    destinations:
      k8s:
        params:
          docker_enabled: "true"
          limits_cpu: '{cores}'
          limits_memory: '{mem}Gi'
          requests_cpu: '{cores}'
          requests_memory: '{mem}Gi'
        runner: k8s
        scheduling:
          accept:
          - docker
      local:
        runner: local
        scheduling:
          require:
          - local
    global:
      default_inherits: default
    tools:
      Grouping1:
        params:
          docker_container_id_override: 'quay.io/galaxyproject/galaxy-min:24.0.2'
      Summary_Statistics1:
        params:
          docker_container_id_override: cloudve/gsummary:latest
      default:
        params:
          container_monitor: false
          docker_default_container_id: 'quay.io/galaxyproject/galaxy-min:24.0.2'
          tmp_dir: "true"
        rules:
        - id: force_default_container_for_built_in_tools
          if: |
            from galaxy.tools import GALAXY_LIB_TOOLS_UNVERSIONED
            tool.id in GALAXY_LIB_TOOLS_UNVERSIONED or "CONVERTER_" == tool.id[:10] or tool.is_datatype_converter
          params:
            docker_container_id_override: 'quay.io/galaxyproject/galaxy-min:24.0.2'
        scheduling:
          reject:
          - local
          - offline
      sort1:
        params:
          docker_container_id_override: 'quay.io/galaxyproject/galaxy-min:24.0.2'
      toolshed.g2.bx.psu.edu/repos/crs4/prokka/prokka/1.14.5:
        params:
          docker_container_id_override: cloudve/prokka:1.14.5
      toolshed.g2.bx.psu.edu/repos/devteam/data_manager_bwa_mem_index_builder/bwa_mem_index_builder_data_manager/.*:
        params:
          docker_container_id_override: cloudve/bwa-dm:latest
      toolshed.g2.bx.psu.edu/repos/devteam/data_manager_sam_fasta_index_builder/sam_fasta_index_builder/.*:
        params:
          docker_container_id_override: cloudve/sam-fasta-dm:latest
      toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse/1.16.5+galaxy6:
        params:
          docker_container_id_override: cloudve/jbrowse:1.16.5
---
# Source: galaxy/templates/configmap-nginx.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-galaxy-nginx-conf
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
data:
  nginx.conf: |
    worker_processes  4;

    events {
        worker_connections  1024;
    }

    http {
        default_type  application/octet-stream;
        include /etc/nginx/mime.types;
        sendfile        on;
        keepalive_timeout  65;
        index   index.html index.php index.htm;

        gzip  on;
        gzip_http_version 1.1;
        gzip_vary on;
        gzip_comp_level 6;
        gzip_proxied any;
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;
        gzip_buffers 16 8k;
        proxy_read_timeout 600;
        client_max_body_size 100g;

        map $http_x_forwarded_proto $proxy_x_forwarded_proto {
          default $http_x_forwarded_proto;
          '' $scheme;
        }

        server {
            listen 7080;
            server_name galaxy;

            location /galaxy/static {
                alias /galaxy/server/static;
                expires 24h;
            }

            location /galaxy/ {
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
                proxy_set_header X-Url-Scheme $proxy_x_forwarded_proto;
                proxy_set_header Upgrade $http_upgrade;
                proxy_pass http://release-name-galaxy-galaxy:8080;
            }

            location ^~ /galaxy/admin_toolshed/static {
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
                proxy_set_header X-Url-Scheme $proxy_x_forwarded_proto;
                proxy_set_header Upgrade $http_upgrade;
                proxy_pass http://release-name-galaxy-galaxy:8080;
                expires 24h;
            }

            location ~ ^/galaxy/api/dataset_collections/([^/]+)/download/?$ {
                proxy_buffering off;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
                proxy_set_header X-Url-Scheme $proxy_x_forwarded_proto;
                proxy_set_header Upgrade $http_upgrade;
                proxy_pass http://release-name-galaxy-galaxy:8080;
            }

            location /galaxy/_x_accel_redirect/ {
                internal;
                alias /;
                add_header X-Frame-Options SAMEORIGIN;
                add_header X-Content-Type-Options nosniff;
            }

        # end server
        }
    # end http
    }
---
# Source: galaxy/templates/configs-galaxy.yaml
apiVersion: v1
metadata:
  name: release-name-galaxy-configs
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
kind: ConfigMap
data:
  build_sites.yml: |
    - display:
      - main
      - archaea
      - ucla
      file: '/cvmfs/data.galaxyproject.org/managed/location/ucsc_build_sites.txt'
      type: ucsc
    - display:
      - wormbase
      - tair
      - modencode_worm
      - modencode_fly
      file: /galaxy/server/tool-data/shared/gbrowse/gbrowse_build_sites.txt
      type: gbrowse
    - file: /galaxy/server/tool-data/shared/ensembl/ensembl_sites.txt
      type: ensembl
    - file: /galaxy/server/tool-data/shared/ensembl/ensembl_sites_data_URL.txt
      type: ensembl_data_url
    - file: /galaxy/server/tool-data/shared/igv/igv_build_sites.txt.sample
      type: igv
    - file: /galaxy/server/tool-data/shared/rviewer/rviewer_build_sites.txt.sample
      type: rviewer
  container_resolvers_conf.xml: |
    <containers_resolvers>
      <explicit />
      <mulled />
    </containers_resolvers>
    
  galaxy.yml: |
    galaxy:
      build_sites_config_file: /galaxy/server/config/build_sites.yml
      builds_file_path: |-
        
        /cvmfs/data.galaxyproject.org/managed/location/builds.txt
      conda_auto_init: false
      containers_resolvers_config_file: /galaxy/server/config/container_resolvers_conf.xml
      database_connection: 'postgresql://galaxydbuser:IsnFjVmO1qpoqPJ6vYeYH2MEQyg5ohnH@galaxy-release-name-postgres/galaxy?sslmode=require'
      enable_data_manager_user_view: true
      enable_tool_document_cache: false
      galaxy_url_prefix: '/galaxy'
      id_secret: null
      integrated_tool_panel_config: /galaxy/server/config/mutable/integrated_tool_panel.xml
      interactivetools_base_path: '/galaxy'
      interactivetools_enable: true
      interactivetools_map: database/interactivetools_map.sqlite
      interactivetools_prefix: its
      interactivetools_proxy_host: 'localhost'
      interactivetools_shorten_url: true
      job_config_file: /galaxy/server/config/job_conf.yml
      len_file_path: |-
        /cvmfs/data.galaxyproject.org/managed/len/ucsc
      mulled_resolution_cache_lock_dir: /galaxy/server/local/mulled_cache_lock
      nginx_x_accel_redirect_base: '/galaxy/_x_accel_redirect'
      sanitize_allowlist_file: /galaxy/server/config/mutable/sanitize_allowlist.txt
      shed_data_manager_config_file: /galaxy/server/config/mutable/shed_data_manager_conf.xml
      shed_tool_config_file: /galaxy/server/config/mutable/editable_shed_tool_conf.xml
      shed_tool_data_table_config: /galaxy/server/config/mutable/shed_tool_data_table_conf.xml
      tool_config_file: /galaxy/server/config/tool_conf.xml,/cvmfs/cloud.galaxyproject.org/config/shed_tool_conf.xml
      tool_data_path: '/galaxy/server/database/tool-data'
      tool_data_table_config_path: |-
        /cvmfs/cloud.galaxyproject.org/config/shed_tool_data_table_conf.xml,/cvmfs/data.galaxyproject.org/managed/location/tool_data_table_conf.xml,/cvmfs/data.galaxyproject.org/byhand/location/tool_data_table_conf.xml
      tool_dependency_dir: '/galaxy/server/database/deps'
      tool_path: '/galaxy/server/database/tools'
      workflow_schedulers_config_file: /galaxy/server/config/workflow_schedulers_conf.xml
  integrated_tool_panel.xml: |
    <?xml version="1.0"?>
    <toolbox>
        <!--
        This is Galaxy's integrated tool panel and should be modified directly only for
        reordering tools inside a section. Each time Galaxy starts up, this file is
        synchronized with the various tool config files: tools, sections and labels
        added to one of these files, will be added also here in the appropriate place,
        while elements removed from the tool config files will be correspondingly
        deleted from this file.
        To modify locally managed tools (e.g. from tool_conf.xml) modify that file
        directly and restart Galaxy. Whenever possible Tool Shed managed tools (e.g.
        from shed_tool_conf.xml) should be managed from within the Galaxy interface or
        via its API - but if changes are necessary (such as to hide a tool or re-assign
        its section) modify that file and restart Galaxy.
        For the Galaxy Helm chart deployment, the config/integrated_tool_panel.xml
        is used as a template for organizing sections while the rendered file can
        be found as config/mutable/integrated_tool_panel.xml.
        -->
        <section id="get_data" name="Get Data" version="">
        </section>
        <section id="send_data" name="Send Data" version="">
        </section>
        <section id="collection_operations" name="Collection Operations" version="">
        </section>
        <label id="general_text_label" text="General Text Tools" version="" />
        <section id="text_manipulation" name="Text Manipulation" version="">
        </section>
        <section id="filter_and_sort" name="Filter and Sort" version="">
            <label id="gff" text="GFF" version="" />
        </section>
        <section id="join_subtract_and_group" name="Join, Subtract and Group" version="">
        </section>
        <section id="datamash" name="Datamash" version="">
        </section>
        <label id="genomic_file_manipulation_label" text="Genomic File Manipulation" version="" />
        <section id="fasta_fastq" name="FASTA/FASTQ" version="">
        </section>
        <section id="fastq_quality_control" name="FASTQ Quality Control" version="">
        </section>
        <section id="sam_bam" name="SAM/BAM" version="">
            <label id="samtools_label" text="SAMTools" version="" />
            <label id="bamtools_label" text="BAMTools" version="" />
        </section>
        <section id="bed" name="BED" version="">
            <label id="bedtools_label" text="BEDTools" version="" />
        </section>
        <section id="vcf_bcf" name="VCF/BCF" version="">
            <label id="vcflib_label" text="vcflib" version="" />
            <label id="vcftools_label" text="VCFTools" version="" />
            <label id="bcftools_label" text="BCFTools" version="" />
        </section>
        <section id="nanopore" name="Nanopore" version="">
            <label id="poretools_label" text="poretools" version="" />
        </section>
        <section id="convert_formats" name="Convert Formats" version="">
        </section>
        <section id="liftOver" name="Lift-Over" version="">
        </section>
        <label id="common_genomics_tools_label" text="Common Genomics Tools" version="" />
        <section id="operate_on_genomic_intervals" name="Operate on Genomic Intervals" version="">
        </section>
        <section id="fetch_sequences_alignments" name="Fetch Sequences/Alignments" version="">
        </section>
        <label id="genomics_analysis_label" text="Genomics Analysis" version="" />
        <section id="assembly" name="Assembly" version="">
        </section>
        <section id="annotation" name="Annotation" version="">
        </section>
        <section id="mapping" name="Mapping" version="">
        </section>
        <section id="variant_calling" name="Variant Calling" version="">
        </section>
        <section id="chip_seq" name="ChIP-seq" version="">
        </section>
        <section id="rna_seq" name="RNA-seq" version="">
            <label id="structurefold_label" text="RNA Structure Prediction" version="" />
        </section>
        <section id="multiple_alignments" name="Multiple Alignments" version="">
        </section>
        <section id="phenotype_association" name="Phenotype Association" version="">
        </section>
        <section id="regional_variation" name="Regional Variation" version="">
        </section>
        <section id="str_fm_microsatellite_analysis" name="STR-FM: Microsatellite Analysis" version="">
        </section>
        <section id="motifs" name="Motif" version="">
        </section>
        <section id="chromosome_conformation" name="Chromosome Conformation" version="">
            <label id="hifive" text="HiFive" version="" />
        </section>
        <label id="metagenomics_label" text="Metagenomics" version="" />
        <section id="metagenomic_analysis" name="Metagenomic Analysis" version="">
        </section>
        <section id="mothur" name="Mothur" version="">
        </section>
        <label id="genomics_toolkits_label" text="Genomics Toolkits" version="" />
        <section id="picard" name="Picard" version="">
        </section>
        <section id="deeptools" name="deepTools" version="">
        </section>
        <section id="emboss" name="EMBOSS" version="">
        </section>
        <section id="gatk" name="GATK" version="">
        </section>
        <section id="ncbi_blast" name="NCBI BLAST+" version="">
        </section>
        <section id="rseqc" name="RSeQC" version="">
        </section>
        <section id="mimodd" name="MiModD" version="">
        </section>
        <section id="du_novo" name="Du Novo" version="">
        </section>
        <section id="seqtk" name="Seqtk" version="">
        </section>
        <section id="transit" name="TRANSIT" version="">
        </section>
        <label id="statistics_and_visualization_label" text="Statistics and Visualization" version="" />
        <section id="statistics" name="Statistics" version="">
            <label id="multiple_regression_label" text="Multiple Regression" version="" />
            <label id="multivariate_analysis_label" text="Multivariate Analysis" version="" />
        </section>
        <section id="graph_display_data" name="Graph/Display Data" version="">
        </section>
        <label id="deprecated_tools_label" text="Deprecated Tools" version="" />
        <section id="rna_analysis_deprecated" name="RNA Analysis (deprecated)" version="">
        </section>
        <section id="cloudmap_deprecated" name="CloudMap (deprecated)" version="">
        </section>
        <section id="metagenomic_analysis_deprecated" name="Metagenomic Analysis (deprecated)" version="">
        </section>
        <section id="textutil" name="Text Manipulation" version="">
        </section>
    </toolbox>
    
    
  job_conf.yml: |
    execution:
      default: tpv_dispatcher
      environments:
        tpv_dispatcher:
          container_monitor: false
          docker_default_container_id: 'quay.io/galaxyproject/galaxy-min:24.0.2'
          function: map_tool_to_destination
          rules_module: tpv.rules
          runner: dynamic
          tpv_config_files:
          - https://gxy.io/tpv/db.yml
          - lib/galaxy/jobs/rules/tpv_rules_local.yml
          type: python
    handling:
      assign:
      - db-skip-locked
    runners:
      k8s:
        k8s_cleanup_job: onsuccess
        k8s_data_volume_claim: 'release-name-galaxy-pvc:/galaxy/server/database:r'
        k8s_fs_group_id: "101"
        k8s_galaxy_instance_id: 'release-name'
        k8s_interactivetools_ingress_annotations: |
          
          nginx.ingress.kubernetes.io/proxy-body-size: 10G
          nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
        k8s_interactivetools_use_ssl: true
        k8s_job_ttl_secs_after_finished: 90
        k8s_namespace: 'default'
        k8s_persistent_volume_claims: |-
          release-name-galaxy-pvc/config:/galaxy/server/database/config:r,release-name-galaxy-pvc/tmp:/galaxy/server/database/tmp:rw,release-name-galaxy-pvc/tool-data:/galaxy/server/database/tool-data:r,release-name-galaxy-pvc/tools:/galaxy/server/database/tools:r,release-name-galaxy-refdata-gxy-pvc/data.galaxyproject.org:/cvmfs/data.galaxyproject.org:r,release-name-galaxy-pvc/cvmfsclone:/cvmfs/cloud.galaxyproject.org:r
        k8s_pod_priority_class: |-
          release-name-galaxy-job-priority
        k8s_pull_policy: IfNotPresent
        k8s_supplemental_group_id: "101"
        k8s_use_service_account: true
        k8s_working_volume_claim: 'release-name-galaxy-pvc:/galaxy/server/database'
        load: galaxy.jobs.runners.kubernetes:KubernetesJobRunner
      local:
        load: galaxy.jobs.runners.local:LocalJobRunner
        workers: 4
  sanitize_allowlist.txt: |
    toolshed.g2.bx.psu.edu/repos/bgruening/diff/diff/3.7+galaxy0
    toolshed.g2.bx.psu.edu/repos/bgruening/pharmcat/pharmcat/1.3.1+galaxy0
    toolshed.g2.bx.psu.edu/repos/crs4/taxonomy_krona_chart/taxonomy_krona_chart/2.7.1+galaxy0
    toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy0
    toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.73+galaxy0
    toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.72+galaxy1
    toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.72
    toolshed.g2.bx.psu.edu/repos/iuc/dexseq/dexseq/1.44+galaxy0
    toolshed.g2.bx.psu.edu/repos/iuc/dexseq/dexseq/1.28.1+galaxy2
    toolshed.g2.bx.psu.edu/repos/iuc/fastp/fastp/0.23.2+galaxy0
    toolshed.g2.bx.psu.edu/repos/iuc/fastp/fastp/0.20.1+galaxy0
    toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse_to_standalone/1.16.11+galaxy0
    toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse_to_standalone/1.16.11+galaxy1
    toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse/1.16.11+galaxy1
    toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse/1.16.11+galaxy0
    toolshed.g2.bx.psu.edu/repos/iuc/macs2/macs2_callpeak/2.1.1.20160309.6
    toolshed.g2.bx.psu.edu/repos/iuc/meme_meme/meme_meme/5.0.5.0
    toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc/1.11+galaxy1
    toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc/1.11+galaxy0
    toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc/1.9+galaxy1
    toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc/1.8+galaxy1
    toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc/1.6
    toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc/1.5.0
    toolshed.g2.bx.psu.edu/repos/iuc/prestor_abseq3/prestor_abseq3/0.6.2+galaxy0
    toolshed.g2.bx.psu.edu/repos/iuc/quast/quast/5.0.2+galaxy3
    toolshed.g2.bx.psu.edu/repos/iuc/seurat/seurat/4.1.0+galaxy0
    toolshed.g2.bx.psu.edu/repos/iuc/snpeff/snpEff/4.3r.1
    toolshed.g2.bx.psu.edu/repos/iuc/snpeff/snpEff/4.3+T.galaxy2
    toolshed.g2.bx.psu.edu/repos/iuc/snpeff/snpEff/4.3+T.galaxy1
    toolshed.g2.bx.psu.edu/repos/bgruening/plotly_regression_performance_plots/plotly_regression_performance_plots/0.1
    toolshed.g2.bx.psu.edu/repos/bgruening/plotly_parallel_coordinates_plot/plotly_parallel_coordinates_plot/0.2
    toolshed.g2.bx.psu.edu/repos/bgruening/plotly_parallel_coordinates_plot/plotly_parallel_coordinates_plot/0.1
    
  tool_conf.xml: |
    <?xml version='1.0' encoding='utf-8'?>
    <toolbox monitor="true">
      <section id="get_data" name="Get Data">
        <tool file="data_source/upload.xml" />
        <tool file="data_source/ucsc_tablebrowser.xml" />
        <tool file="data_source/ucsc_tablebrowser_archaea.xml" />
        <tool file="data_source/ebi_sra.xml" />
        <tool file="data_source/fly_modencode.xml" />
        <tool file="data_source/intermine.xml" />
        <tool file="data_source/flymine.xml" />
        <tool file="data_source/modmine.xml" />
        <tool file="data_source/mousemine.xml" />
        <tool file="data_source/ratmine.xml" />
        <tool file="data_source/yeastmine.xml" />
        <tool file="data_source/worm_modencode.xml" />
        <tool file="data_source/wormbase.xml" />
        <tool file="data_source/zebrafishmine.xml" />
        <tool file="data_source/eupathdb.xml" />
        <tool file="data_source/hbvar.xml" />
        <tool file="genomespace/genomespace_importer.xml" />
        <tool file="genomespace/genomespace_push.xml" />
      </section>
      <section id="send" name="Send Data">
        <tool file="data_export/export_remote.xml" />
      </section>
      <section id="collection_operations" name="Collection Operations">
        <tool file="${model_tools_path}/unzip_collection.xml" />
        <tool file="${model_tools_path}/zip_collection.xml" />
        <tool file="${model_tools_path}/filter_failed_collection.xml" />
        <tool file="${model_tools_path}/filter_empty_collection.xml" />
        <tool file="${model_tools_path}/flatten_collection.xml" />
        <tool file="${model_tools_path}/merge_collection.xml" />
        <tool file="${model_tools_path}/relabel_from_file.xml" />
        <tool file="${model_tools_path}/filter_from_file.xml" />
        <tool file="${model_tools_path}/sort_collection_list.xml" />
        <tool file="${model_tools_path}/tag_collection_from_file.xml" />
        <tool file="${model_tools_path}/apply_rules.xml" />
        <tool file="${model_tools_path}/build_list.xml" />
        <tool file="${model_tools_path}/extract_dataset.xml" />
      </section>
      <label id="general_text_label" text="General Text Tools" />
      <section id="text_manipulation" name="Text Manipulation">
        <tool file="filters/fixedValueColumn.xml" />
        <tool file="filters/catWrapper.xml" />
        <tool file="filters/condense_characters.xml" />
        <tool file="filters/convert_characters.xml" />
        <tool file="filters/mergeCols.xml" />
        <tool file="filters/CreateInterval.xml" />
        <tool file="filters/cutWrapper.xml" />
        <tool file="filters/changeCase.xml" />
        <tool file="filters/pasteWrapper.xml" />
        <tool file="filters/remove_beginning.xml" />
        <tool file="filters/randomlines.xml" />
        <tool file="filters/headWrapper.xml" />
        <tool file="filters/tailWrapper.xml" />
        <tool file="filters/trimmer.xml" />
        <tool file="filters/wc_gnu.xml" />
        <tool file="filters/secure_hash_message_digest.xml" />
      </section>
      <section id="filter_and_sort" name="Filter and Sort">
        <tool file="stats/filtering.xml" />
        <tool file="filters/sorter.xml" />
        <tool file="filters/grep.xml" />
        <label id="gff" text="GFF" />
        <tool file="filters/gff/extract_GFF_Features.xml" />
        <tool file="filters/gff/gff_filter_by_attribute.xml" />
        <tool file="filters/gff/gff_filter_by_feature_count.xml" />
        <tool file="filters/gff/gtf_filter_by_attribute_values_list.xml" />
      </section>
      <section id="join_subtract_and_group" name="Join, Subtract and Group">
        <tool file="filters/joiner.xml" />
        <tool file="filters/compare.xml" />
        <tool file="stats/grouping.xml" />
      </section>
      <label id="genomic_file_manipulation_label" text="Genomic File Manipulation" />
      <section id="convert_formats" name="Convert Formats">
        <tool file="filters/bed2gff.xml" />
        <tool file="filters/gff2bed.xml" />
        <tool file="maf/maf_to_bed.xml" />
        <tool file="maf/maf_to_interval.xml" />
        <tool file="maf/maf_to_fasta.xml" />
        <tool file="filters/sff_extractor.xml" />
        <tool file="filters/wig_to_bigwig.xml" />
        <tool file="filters/bed_to_bigbed.xml" />
      </section>
      <section id="liftOver" name="Lift-Over">
        <tool file="extract/liftOver_wrapper.xml" />
      </section>
      <label id="common_genomics_tools_label" text="Common Genomics Tools" />
      <section id="operate_on_genomic_intervals" name="Operate on Genomic Intervals">
        <tool file="filters/wiggle_to_simple.xml" />
        <tool file="stats/aggregate_binned_scores_in_intervals.xml" />
        <tool file="filters/ucsc_gene_bed_to_exon_bed.xml" />
      </section>
      <section id="fetch_sequences_alignments" name="Fetch Sequences/Alignments">
        <tool file="extract/extract_genomic_dna.xml" />
        <tool file="maf/interval2maf_pairwise.xml" />
        <tool file="maf/interval2maf.xml" />
        <tool file="maf/interval_maf_to_merged_fasta.xml" />
        <tool file="maf/genebed_maf_to_fasta.xml" />
        <tool file="maf/maf_stats.xml" />
        <tool file="maf/maf_thread_for_species.xml" />
        <tool file="maf/maf_limit_to_species.xml" />
        <tool file="maf/maf_limit_size.xml" />
        <tool file="maf/maf_by_block_number.xml" />
        <tool file="maf/maf_reverse_complement.xml" />
        <tool file="maf/maf_filter.xml" />
      </section>
      <label id="genomics_analysis_label" text="Genomics Analysis" />
      <section id="phenotype_association" name="Phenotype Association">
        <tool file="evolution/codingSnps.xml" />
        <tool file="evolution/add_scores.xml" />
        <tool file="phenotype_association/sift.xml" />
        <tool file="phenotype_association/linkToGProfile.xml" />
        <tool file="phenotype_association/linkToDavid.xml" />
        <tool file="phenotype_association/ldtools.xml" />
        <tool file="phenotype_association/pass.xml" />
        <tool file="phenotype_association/gpass.xml" />
        <tool file="phenotype_association/beam.xml" />
        <tool file="phenotype_association/lps.xml" />
        <tool file="phenotype_association/master2pg.xml" />
      </section>
      <label id="statistics_and_visualization_label" text="Statistics and Visualization" />
      <section id="statistics" name="Statistics">
        <tool file="stats/gsummary.xml" />
        <tool file="filters/uniq.xml" />
      </section>
      <section id="graph_display_data" name="Graph/Display Data">
        <tool file="plotting/boxplot.xml" hidden="true"/>
        <tool file="maf/vcf_to_maf_customtrack.xml" />
      </section>
      <label id="miscellaneous_tools_label" text="Miscellaneous Tools"/>
      <section id="interactivetools" name="Interactive tools">
        <tool file="interactive/codingSnps.xml" />
        <tool file="interactive/interactivetool_askomics.xml" />
        <tool file="interactive/interactivetool_bam_iobio.xml" />
        <tool file="interactive/interactivetool_cellxgene.xml" />
        <tool file="interactive/interactivetool_ethercalc.xml" />
        <tool file="interactive/interactivetool_hicbrowser.xml" />
        <tool file="interactive/interactivetool_jupyter_notebook.xml" />
        <tool file="interactive/interactivetool_neo4j.xml" />
        <tool file="interactive/interactivetool_phinch.xml" />
        <tool file="interactive/interactivetool_isee.xml" />
      </section>
    </toolbox>
    
    
  workflow_schedulers_conf.xml: |
    <?xml version="1.0"?>
    <workflow_schedulers default="core">
      <core id="core" />
      <handlers default="schedulers">
          <handler id="workflow_scheduler0" tags="schedulers"/>
      </handlers>
    </workflow_schedulers>
---
# Source: galaxy/charts/cvmfs/templates/storageclass.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: release-name-cvmfs
  labels:
    helm.sh/chart: cvmfs-2.4.0
    app.kubernetes.io/name: cvmfs
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.3.2"
    app.kubernetes.io/managed-by: Helm
provisioner: cvmfs.csi.cern.ch
---
# Source: galaxy/charts/cvmfs/templates/cache-pvcs.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-cvmfs-alien-cache-pvc
  labels:
    helm.sh/chart: cvmfs-2.4.0
    app.kubernetes.io/name: cvmfs
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10000Mi
---
# Source: galaxy/templates/pvc-galaxy.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-galaxy-pvc
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - "ReadWriteMany"
  resources:
    requests:
      storage: "5Gi"
---
# Source: galaxy/templates/pvc-refdata.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-galaxy-refdata-gxy-pvc
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
  - ReadOnlyMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: release-name-cvmfs
---
# Source: galaxy/charts/cvmfs/charts/cvmfscsi/templates/controllerplugin-rbac.yaml
# CSI external-provisioner RBACs

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-cvmfscsi-controllerplugin-provisioner
  labels:
    chart: cvmfscsi-2.3.2
    heritage: Helm
    app: cvmfscsi
    component: controllerplugin
    release: release-name
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]
---
# Source: galaxy/charts/postgresql/templates/clusterrole-postgres-pod.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: postgres-pod
  labels:
    app.kubernetes.io/name: postgres
    helm.sh/chart: postgresql-1.9.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
rules:
# Patroni needs to watch and manage config maps or endpoints
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
# Patroni needs to watch pods
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - patch
  - update
  - watch
# to let Patroni create a headless service
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
---
# Source: galaxy/charts/postgresql/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-postgres
  labels:
    app.kubernetes.io/name: postgres
    helm.sh/chart: postgresql-1.9.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
rules:
# all verbs allowed for custom operator resources
- apiGroups:
  - acid.zalan.do
  resources:
  - postgresqls
  - postgresqls/status
  - operatorconfigurations
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
# operator only reads PostgresTeams
- apiGroups:
  - acid.zalan.do
  resources:
  - postgresteams
  verbs:
  - get
  - list
  - watch
# all verbs allowed for event streams
# to create or get/update CRDs when starting up
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - create
  - patch
  - update
# to send events to the CRs
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
# to manage endpoints/configmaps which are also used by Patroni
# to read configuration from ConfigMaps
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
# to CRUD secrets for database access
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - update
# to check nodes for node readiness label
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
# to read or delete existing PVCs. Creation via StatefulSet
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - patch
  - update
 # to read existing PVs. Creation should be done via dynamic provisioning
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
# to watch Spilo pods and do rolling updates. Creation via StatefulSet
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
# to resize the filesystem in Spilo pods when increasing volume size
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
# to CRUD services to point to Postgres cluster instances
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - patch
  - update
# to CRUD the StatefulSet which controls the Postgres cluster instances
- apiGroups:
  - apps
  resources:
  - statefulsets
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
# to CRUD cron jobs for logical backups
- apiGroups:
  - batch
  resources:
  - cronjobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
# to get namespaces operator resources can run in
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
# to define PDBs. Update happens via delete/create
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
# to create ServiceAccounts in each namespace the operator watches
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - create
# to create role bindings to the postgres-pod service account
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - get
  - create
---
# Source: galaxy/charts/rabbitmq/templates/cluster-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-2.6.12
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: rabbitmq-operator
    app.kubernetes.io/part-of: rabbitmq
  name: release-name-rabbitmq
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - get
      - list
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - get
      - patch
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - create
      - get
      - list
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - pods/exec
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - get
      - list
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs:
      - create
      - get
      - list
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - create
      - get
      - list
      - update
      - watch
  - apiGroups:
      - apps
    resources:
      - statefulsets
    verbs:
      - create
      - delete
      - get
      - list
      - update
      - watch
  - apiGroups:
      - rabbitmq.com
    resources:
      - rabbitmqclusters
    verbs:
      - create
      - get
      - list
      - update
      - watch
  - apiGroups:
      - rabbitmq.com
    resources:
      - rabbitmqclusters/finalizers
    verbs:
      - update
  - apiGroups:
      - rabbitmq.com
    resources:
      - rabbitmqclusters/status
    verbs:
      - get
      - update
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - rolebindings
    verbs:
      - create
      - get
      - list
      - update
      - watch
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - roles
    verbs:
      - create
      - get
      - list
      - update
      - watch
---
# Source: galaxy/charts/rabbitmq/templates/messaging-topology-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-2.6.12
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: messaging-topology-operator
    app.kubernetes.io/part-of: rabbitmq
  name: release-name-rabbitmq-messaging-topology-operator
rules:
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - get
      - patch
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - rabbitmq.com
    resources:
      - bindings
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - rabbitmq.com
    resources:
      - bindings/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - rabbitmq.com
    resources:
      - exchanges
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - rabbitmq.com
    resources:
      - exchanges/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - rabbitmq.com
    resources:
      - federations
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - rabbitmq.com
    resources:
      - federations/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - rabbitmq.com
    resources:
      - permissions
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - rabbitmq.com
    resources:
      - permissions/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - rabbitmq.com
    resources:
      - policies
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - rabbitmq.com
    resources:
      - policies/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - rabbitmq.com
    resources:
      - queues
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - rabbitmq.com
    resources:
      - queues/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - rabbitmq.com
    resources:
      - rabbitmqclusters
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - rabbitmq.com
    resources:
      - rabbitmqclusters/status
    verbs:
      - get
  - apiGroups:
      - rabbitmq.com
    resources:
      - schemareplications
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - rabbitmq.com
    resources:
      - schemareplications/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - rabbitmq.com
    resources:
      - shovels
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - rabbitmq.com
    resources:
      - shovels/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - rabbitmq.com
    resources:
      - superstreams
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - rabbitmq.com
    resources:
      - superstreams/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - rabbitmq.com
    resources:
      - users
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - rabbitmq.com
    resources:
      - users/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - rabbitmq.com
    resources:
      - vhosts
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - rabbitmq.com
    resources:
      - vhosts/status
    verbs:
      - get
      - patch
      - update
---
# Source: galaxy/charts/cvmfs/charts/cvmfscsi/templates/controllerplugin-rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-cvmfscsi-controllerplugin-provisioner
  labels:
    chart: cvmfscsi-2.3.2
    heritage: Helm
    app: cvmfscsi
    component: controllerplugin
    release: release-name
subjects:
  - kind: ServiceAccount
    name: release-name-cvmfscsi-controllerplugin
    namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-cvmfscsi-controllerplugin-provisioner
  apiGroup: rbac.authorization.k8s.io
---
# Source: galaxy/charts/postgresql/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-postgres
  labels:
    app.kubernetes.io/name: postgres
    helm.sh/chart: postgresql-1.9.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-postgres
subjects:
- kind: ServiceAccount
  name: release-name-postgres
  namespace: default
---
# Source: galaxy/charts/rabbitmq/templates/cluster-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-2.6.12
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: rabbitmq-operator
    app.kubernetes.io/part-of: rabbitmq
  name: release-name-rabbitmq
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-rabbitmq
subjects:
  - kind: ServiceAccount
    name: release-name-rabbitmq
    namespace: "default"
---
# Source: galaxy/charts/rabbitmq/templates/messaging-topology-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-2.6.12
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: messaging-topology-operator
    app.kubernetes.io/part-of: rabbitmq
  name: release-name-rabbitmq-messaging-topology-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-rabbitmq-messaging-topology-operator
subjects:
  - kind: ServiceAccount
    name: release-name-rabbitmq-messaging-topology-operator
    namespace: "default"
---
# Source: galaxy/charts/rabbitmq/templates/cluster-operator/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-2.6.12
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: rabbitmq-operator
    app.kubernetes.io/part-of: rabbitmq
  name: release-name-rabbitmq
  namespace: "default"
rules:
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
---
# Source: galaxy/charts/rabbitmq/templates/messaging-topology-operator/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-2.6.12
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: messaging-topology-operator
    app.kubernetes.io/part-of: rabbitmq
  name: release-name-rabbitmq-messaging-topology-operator
  namespace: "default"
rules:
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
---
# Source: galaxy/templates/rbac-job.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: release-name-galaxy-role-pod-jobs
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log"]
  verbs: ["get", "list", "watch", "delete"]
- apiGroups: ["batch", "extensions"]
  resources: ["jobs"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["", "networking.k8s.io", "extensions"]
  resources: ["services", "ingresses"]
  verbs: ["get", "list", "watch", "create", "delete"]
---
# Source: galaxy/charts/rabbitmq/templates/cluster-operator/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-2.6.12
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: rabbitmq-operator
    app.kubernetes.io/part-of: rabbitmq
  name: release-name-rabbitmq
  namespace: "default"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-rabbitmq
subjects:
  - kind: ServiceAccount
    name: release-name-rabbitmq
    namespace: "default"
---
# Source: galaxy/charts/rabbitmq/templates/messaging-topology-operator/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-2.6.12
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: messaging-topology-operator
    app.kubernetes.io/part-of: rabbitmq
  name: release-name-rabbitmq-messaging-topology-operator
  namespace: "default"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-rabbitmq-messaging-topology-operator
subjects:
  - kind: ServiceAccount
    name: release-name-rabbitmq-messaging-topology-operator
    namespace: "default"
---
# Source: galaxy/templates/rbac-job.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-galaxy-batch-ops
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: release-name-galaxy
  namespace: default
roleRef:
  kind: Role
  name: release-name-galaxy-role-pod-jobs
  apiGroup: rbac.authorization.k8s.io
---
# Source: galaxy/charts/postgresql/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: postgres
    helm.sh/chart: postgresql-1.9.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
  name: release-name-postgres
  namespace: default
spec:
  type: ClusterIP
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: postgres
---
# Source: galaxy/charts/rabbitmq/templates/messaging-topology-operator/webhook-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-2.6.12
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: messaging-topology-operator
    app.kubernetes.io/part-of: rabbitmq
  name: release-name-rabbitmq-messaging-topology-operator-webhook
  namespace: "default"
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: http
      port: 443
      targetPort: http-webhook
      protocol: TCP
      nodePort: null
  selector:
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: messaging-topology-operator
---
# Source: galaxy/templates/service-galaxy.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-galaxy-galaxy
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: galaxy-http
    protocol: TCP
    name: gunicorn
  selector:
    app.kubernetes.io/component: galaxy-web-handler
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
---
# Source: galaxy/templates/service-nginx.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-galaxy-nginx
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: galaxy-nginx
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/component: galaxy-nginx
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
---
# Source: galaxy/templates/service-tusd.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-galaxy-tusd
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
  - port: 1080
    targetPort: tusd-http
    protocol: TCP
    name: tusd
  selector:
    app.kubernetes.io/component: galaxy-tusd-handler
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
---
# Source: galaxy/charts/cvmfs/charts/cvmfscsi/templates/nodeplugin-daemonset.yaml
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: release-name-cvmfscsi-nodeplugin
  labels:
    chart: cvmfscsi-2.3.2
    heritage: Helm
    app: cvmfscsi
    component: nodeplugin
    release: release-name
spec:
  updateStrategy: 
    type: OnDelete
  selector:
    matchLabels:
      component: nodeplugin
      app: cvmfscsi
      release: release-name
  template:
    metadata:
      labels:
        chart: cvmfscsi-2.3.2
        heritage: Helm
        app: cvmfscsi
        component: nodeplugin
        release: release-name
    spec:
      # hostPID is required for autofs to work.
      hostPID: true
      containers:
        - name: registrar
          image: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.8.0
          imagePullPolicy: IfNotPresent
          args:
            - -v=4
            - --csi-address=$(CSI_ADDRESS)
            - --kubelet-registration-path=$(KUBELET_CSI_REGISTRATION_PATH)
          env:
            - name: CSI_ADDRESS
              value: /csi/csi.sock
            - name: KUBELET_CSI_REGISTRATION_PATH
              value: /var/lib/kubelet/plugins/cvmfs.csi.cern.ch/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
        - name: nodeplugin
          image: registry.cern.ch/kubernetes/cvmfs-csi:v2.3.2
          command: [/csi-cvmfsplugin]
          args:
            - -v=4
            - --nodeid=$(NODE_ID)
            - --endpoint=$(CSI_ENDPOINT)
            - --drivername=$(CSI_DRIVERNAME)
            - --role=identity,node
            - --automount-startup-timeout=10
            - --singlemount-runner-endpoint=unix:///var/lib/cvmfs.csi.cern.ch/singlemount-runner.sock
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix:///var/lib/kubelet/plugins/cvmfs.csi.cern.ch/csi.sock
            - name: CSI_DRIVERNAME
              value: cvmfs.csi.cern.ch
          volumeMounts:
            - name: plugins-dir
              mountPath: /var/lib/kubelet/plugins
              mountPropagation: Bidirectional
            - name: pods-mount-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: Bidirectional
            - name: runtime-metadata
              mountPath: /var/lib/cvmfs.csi.cern.ch
            - name: host-sys
              mountPath: /sys
            - name: lib-modules
              mountPath: /lib/modules
              readOnly: true
            - name: host-dev
              mountPath: /dev
            - name: autofs-root
              mountPath: /cvmfs
              mountPropagation: Bidirectional
        - name: automount
          image: registry.cern.ch/kubernetes/cvmfs-csi:v2.3.2
          command: [/automount-runner]
          args:
            - -v=4
            - --unmount-timeout=300
            - --has-alien-cache=true
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          volumeMounts:
            - mountPath: /sys
              name: host-sys
            - name: lib-modules
              mountPath: /lib/modules
              readOnly: true
            - name: host-dev
              mountPath: /dev
            - name: autofs-root
              mountPath: /cvmfs
              mountPropagation: Bidirectional
            - name: cvmfs-localcache
              mountPath: /cvmfs-localcache
            - name: cvmfs-aliencache
              mountPath: /cvmfs-aliencache
            - mountPath: /etc/cvmfs/default.local
              name: etc-cvmfs-default-conf
              subPath: default.local
            - mountPath: /etc/cvmfs/config.d
              name: etc-cvmfs-config-d
        - name: automount-reconciler
          image: registry.cern.ch/kubernetes/cvmfs-csi:v2.3.2
          command: [/automount-reconciler]
          args:
            - -v=4
            - --period=30s
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          volumeMounts:
            - name: autofs-root
              mountPath: /cvmfs
              mountPropagation: Bidirectional
            - name: cvmfs-localcache
              mountPath: /cvmfs-localcache
            - mountPath: /etc/cvmfs/default.local
              name: etc-cvmfs-default-conf
              subPath: default.local
            - mountPath: /etc/cvmfs/config.d
              name: etc-cvmfs-config-d
        - name: singlemount
          image: registry.cern.ch/kubernetes/cvmfs-csi:v2.3.2
          command: [/singlemount-runner]
          args:
            - -v=4
            - --endpoint=unix:///var/lib/cvmfs.csi.cern.ch/singlemount-runner.sock
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          volumeMounts:
            - name: plugins-dir
              mountPath: /var/lib/kubelet/plugins
              mountPropagation: Bidirectional
            - name: pods-mount-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: Bidirectional
            - mountPath: /sys
              name: host-sys
            - name: lib-modules
              mountPath: /lib/modules
              readOnly: true
            - name: host-dev
              mountPath: /dev
            - name: runtime-metadata
              mountPath: /var/lib/cvmfs.csi.cern.ch
      volumes:
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/cvmfs.csi.cern.ch
            type: DirectoryOrCreate
        - name: plugins-dir
          hostPath:
            path: /var/lib/kubelet/plugins
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: DirectoryOrCreate
        - name: pods-mount-dir
          hostPath:
            path: /var/lib/kubelet/pods
            type: Directory
        - name: host-sys
          hostPath:
            path: /sys
        - name: lib-modules
          hostPath:
            path: /lib/modules
        - name: host-dev
          hostPath:
            path: /dev
        - name: runtime-metadata
          emptyDir: {}
        - name: autofs-root
          hostPath:
            path: /var/cvmfs
            type: DirectoryOrCreate
        - name: cvmfs-localcache
          hostPath:
            path: /var/lib/cvmfs.csi.cern.ch/cache
            type: DirectoryOrCreate
        - name: cvmfs-aliencache
          persistentVolumeClaim:
            claimName: cvmfs-alien-cache
        - configMap:
            name: cvmfs-csi-default-local
          name: etc-cvmfs-default-conf
        - configMap:
            name: cvmfs-csi-config-d
          name: etc-cvmfs-config-d
      priorityClassName: system-node-critical
---
# Source: galaxy/charts/cvmfs/charts/cvmfscsi/templates/controllerplugin-deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: release-name-cvmfscsi-controllerplugin
  labels:
    chart: cvmfscsi-2.3.2
    heritage: Helm
    app: cvmfscsi
    component: controllerplugin
    release: release-name
spec:
  replicas: 1
  strategy: 
    type: RollingUpdate
  selector:
    matchLabels:
      component: controllerplugin
      app: cvmfscsi
      release: release-name
  template:
    metadata:
      labels:
        chart: cvmfscsi-2.3.2
        heritage: Helm
        app: cvmfscsi
        component: controllerplugin
        release: release-name
    spec:
      serviceAccount: release-name-cvmfscsi-controllerplugin
      containers:
        - name: provisioner
          image: registry.k8s.io/sig-storage/csi-provisioner:v3.5.0
          imagePullPolicy: IfNotPresent
          args:
            - -v=4
            - --csi-address=$(CSI_ADDRESS)
            - --leader-election=true
          env:
            - name: CSI_ADDRESS
              value: unix:///csi/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: controllerplugin
          image: registry.cern.ch/kubernetes/cvmfs-csi:v2.3.2
          imagePullPolicy: IfNotPresent
          command: [/csi-cvmfsplugin]
          args:
            - -v=4
            - --nodeid=$(NODE_ID)
            - --endpoint=$(CSI_ENDPOINT)
            - --drivername=$(CSI_DRIVERNAME)
            - --role=identity,controller
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: CSI_DRIVERNAME
              value: cvmfs.csi.cern.ch
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
      volumes:
        - name: socket-dir
          emptyDir: {}
---
# Source: galaxy/charts/postgresql/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: postgres
    helm.sh/chart: postgresql-1.9.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
  name: release-name-postgres
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/config: 6e3ea86b99713e72fb52edb5b109f5228c8a24b2c3f8c310848ed1b4711edbc6
      labels:
        app.kubernetes.io/name: postgres
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-postgres
      containers:
      - name: postgresql
        image: "registry.opensource.zalan.do/acid/postgres-operator:v1.9.0"
        imagePullPolicy: IfNotPresent
        env:
        - name: POSTGRES_OPERATOR_CONFIGURATION_OBJECT
          value: release-name-postgres
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 250Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
      affinity:
        {}
      nodeSelector:
        {}
      tolerations:
        []
---
# Source: galaxy/charts/rabbitmq/templates/cluster-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-rabbitmq
  namespace: "default"
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-2.6.12
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: rabbitmq-operator
    app.kubernetes.io/part-of: rabbitmq
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: rabbitmq
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: rabbitmq-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rabbitmq
        helm.sh/chart: rabbitmq-2.6.12
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: rabbitmq-operator
        app.kubernetes.io/part-of: rabbitmq
    spec:
      serviceAccountName: release-name-rabbitmq
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: rabbitmq
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: rabbitmq-operator
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      initContainers:
      containers:
        - name: rabbitmq-cluster-operator
          image: docker.io/bitnami/rabbitmq-cluster-operator:1.14.0-scratch-r5
          imagePullPolicy: IfNotPresent
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
          command:
            - /manager
          args:
            - --metrics-bind-address=:9782
          env:
            - name: OPERATOR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: DEFAULT_RABBITMQ_IMAGE
              value: docker.io/bitnami/rabbitmq:3.10.7-debian-11-r3
            - name: DEFAULT_USER_UPDATER_IMAGE
              value: docker.io/bitnami/rmq-default-credential-updater:1.0.2-scratch-r6
          envFrom:
          resources:
            limits: {}
            requests: {}
          livenessProbe:
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
            httpGet:
              path: /metrics
              port: http
          readinessProbe:
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
            httpGet:
              path: /metrics
              port: http
          ports:
            - name: http
              containerPort: 9782
              protocol: TCP
---
# Source: galaxy/charts/rabbitmq/templates/messaging-topology-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-rabbitmq-messaging-topology-operator
  namespace: "default"
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-2.6.12
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: messaging-topology-operator
    app.kubernetes.io/part-of: rabbitmq
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: rabbitmq
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: messaging-topology-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rabbitmq
        helm.sh/chart: rabbitmq-2.6.12
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: messaging-topology-operator
        app.kubernetes.io/part-of: rabbitmq
    spec:
      serviceAccountName: release-name-rabbitmq-messaging-topology-operator
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: rabbitmq
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: messaging-topology-operator
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      initContainers:
      containers:
        - name: rabbitmq-cluster-operator
          image: docker.io/bitnami/rmq-messaging-topology-operator:1.7.1-scratch-r3
          imagePullPolicy: IfNotPresent
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
          command:
            - /manager
          args:
            - --metrics-bind-address=:8080
          env:
            - name: OPERATOR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
          resources:
            limits: {}
            requests: {}
          ports:
            - name: http-webhook
              containerPort: 9443
              protocol: TCP
            - name: http-metrics
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
            httpGet:
              path: /metrics
              port: http-metrics
          readinessProbe:
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
            httpGet:
              path: /metrics
              port: http-metrics
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: release-name-rabbitmq-messaging-topology-operator-webhook
---
# Source: galaxy/templates/deployment-celery-beat.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-galaxy-celery-beat
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: galaxy
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: galaxy-celery-beat
  template:
    metadata:
      labels:
        app.kubernetes.io/name: galaxy
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: galaxy-celery-beat
      annotations:
        checksum/galaxy_conf: 9a935e1640fd8a8ff7efe3ae62f080f8c1ba4b2722bc23de2e634b7b6066e658
        checksum/galaxy_rules: 3d41202cc2e345e0c4b76aa969c18b50d1f5ede9ec783385f7e288e546e265ee
        checksum/galaxy_extras: bfefa8c26169d1ed04e0799f65a689636c5dadf9a3ee8e5086a4faa32651fac4
    spec:
      serviceAccountName: release-name-galaxy
      securityContext:
        fsGroup: 101
      initContainers:
        - name: galaxy-wait-db
          image: "quay.io/galaxyproject/galaxy-min:24.0.2"
          imagePullPolicy: IfNotPresent
          args: ['sh', '-c', 'until [ -f /galaxy/server/config/mutable/db_init_done_1 ]; do echo "waiting for DB initialization"; sleep 1; done;
until timeout 1 bash -c "echo > /dev/tcp/release-name-rabbitmq-server/5672"; do echo "waiting for rabbitmq service"; sleep 1; done;
until [ -f /galaxy/server/config/mutable/init_mounts_done_1 ]; do echo "waiting for copying onto NFS"; sleep 1; done;
until [ -f /galaxy/server/config/mutable/init_clone_done_1 ]; do echo "waiting for refdata copying"; sleep 1; done;
echo "Initialization waits complete"; sleep 0;']
          volumeMounts:
            - name: galaxy-data
              mountPath: /galaxy/server/config/mutable/
              subPath: config
      containers:
        - name: galaxy-celery-beat
          image: "quay.io/galaxyproject/galaxy-min:24.0.2"
          imagePullPolicy: IfNotPresent
          env:
          
            - name: GALAXY_DB_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: 'galaxydbuser.galaxy-release-name-postgres.credentials.postgresql.acid.zalan.do'
                  key: 'password'
            - name: GALAXY_CONFIG_OVERRIDE_DATABASE_CONNECTION
              value: postgresql://galaxydbuser:$(GALAXY_DB_USER_PASSWORD)@galaxy-release-name-postgres/galaxy?sslmode=require
            - name: GALAXY_CONFIG_OVERRIDE_ID_SECRET
              valueFrom:
                secretKeyRef:
                  name: "release-name-galaxy-secrets"
                  key: "galaxy-config-id-secret"
            - name: PYTHONPATH
              value: /galaxy/server/lib
            - name: GALAXY_CONFIG_FILE
              value: /galaxy/server/config/galaxy.yml
            - name: GALAXY_RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: release-name-rabbitmq-server-default-user
                  key: username
            - name: GALAXY_RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-rabbitmq-server-default-user
                  key: password
            - name: GALAXY_CONFIG_OVERRIDE_AMQP_INTERNAL_CONNECTION
              value: amqp://$(GALAXY_RABBITMQ_USERNAME):$(GALAXY_RABBITMQ_PASSWORD)@release-name-rabbitmq-server:5672
          args: [
            'sh', '-c',
            '/galaxy/server/.venv/bin/celery --app galaxy.celery beat --loglevel INFO --schedule /galaxy/server/database/celery-beat-schedule ']
          volumeMounts:
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/build_sites.yml
              subPath: build_sites.yml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/container_resolvers_conf.xml
              subPath: container_resolvers_conf.xml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/galaxy.yml
              subPath: galaxy.yml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/integrated_tool_panel.xml
              subPath: integrated_tool_panel.xml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/job_conf.yml
              subPath: job_conf.yml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/sanitize_allowlist.txt
              subPath: sanitize_allowlist.txt
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/tool_conf.xml
              subPath: tool_conf.xml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/workflow_schedulers_conf.xml
              subPath: workflow_schedulers_conf.xml
            - name: galaxy-job-rules
              mountPath: /galaxy/server/lib/galaxy/jobs/rules/tpv_rules_local.yml
              subPath: tpv_rules_local.yml
            - name: galaxy-data
              mountPath: /galaxy/server/database
            - name: galaxy-data
              mountPath: /galaxy/server/config/mutable/
              subPath: config
            - name: galaxy-data
              mountPath: /cvmfs/cloud.galaxyproject.org
              subPath: cvmfsclone
            - name: refdata-gxy
              mountPath: /cvmfs/data.galaxyproject.org
              subPath: data.galaxyproject.org
              # CVMFS automount volumes must be mounted with HostToContainer mount propagation.
              mountPropagation: HostToContainer
          resources:
            limits:
              cpu: 3
              ephemeral-storage: 10Gi
              memory: 7G
            requests:
              cpu: 100m
              ephemeral-storage: 1Gi
              memory: 1G
      volumes:
        - name: galaxy-conf-files
          configMap:
            name: release-name-galaxy-configs
        - name: extra-welcomehtml-ee3410714399628f55d8b0fbdbcc0b1ab19c965ad38e8
          configMap:
            name: release-name-galaxy-extra-welcomehtml-ee3410714399628f55d8b0fbdbcc0b1ab19c965ad38e8
        - name: galaxy-job-rules
          configMap:
            name: release-name-galaxy-job-rules
        - name: galaxy-data
          persistentVolumeClaim:
            claimName: release-name-galaxy-pvc
        - name: refdata-gxy
          persistentVolumeClaim:
            claimName: release-name-galaxy-refdata-gxy-pvc
---
# Source: galaxy/templates/deployment-celery.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-galaxy-celery
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: galaxy
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: galaxy-celery-worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: galaxy
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: galaxy-celery-worker
      annotations:
        checksum/galaxy_conf: 9a935e1640fd8a8ff7efe3ae62f080f8c1ba4b2722bc23de2e634b7b6066e658
        checksum/galaxy_rules: 3d41202cc2e345e0c4b76aa969c18b50d1f5ede9ec783385f7e288e546e265ee
        checksum/galaxy_extras: bfefa8c26169d1ed04e0799f65a689636c5dadf9a3ee8e5086a4faa32651fac4
    spec:
      serviceAccountName: release-name-galaxy
      securityContext:
        fsGroup: 101
      initContainers:
        - name: galaxy-wait-db
          image: "quay.io/galaxyproject/galaxy-min:24.0.2"
          imagePullPolicy: IfNotPresent
          args: ['sh', '-c', 'until [ -f /galaxy/server/config/mutable/db_init_done_1 ]; do echo "waiting for DB initialization"; sleep 1; done;
until timeout 1 bash -c "echo > /dev/tcp/release-name-rabbitmq-server/5672"; do echo "waiting for rabbitmq service"; sleep 1; done;
until [ -f /galaxy/server/config/mutable/init_mounts_done_1 ]; do echo "waiting for copying onto NFS"; sleep 1; done;
until [ -f /galaxy/server/config/mutable/init_clone_done_1 ]; do echo "waiting for refdata copying"; sleep 1; done;
echo "Initialization waits complete"; sleep 0;']
          volumeMounts:
            - name: galaxy-data
              mountPath: /galaxy/server/config/mutable/
              subPath: config
      containers:
        - name: galaxy-celery
          image: "quay.io/galaxyproject/galaxy-min:24.0.2"
          imagePullPolicy: IfNotPresent
          env:
          
            - name: GALAXY_DB_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: 'galaxydbuser.galaxy-release-name-postgres.credentials.postgresql.acid.zalan.do'
                  key: 'password'
            - name: GALAXY_CONFIG_OVERRIDE_DATABASE_CONNECTION
              value: postgresql://galaxydbuser:$(GALAXY_DB_USER_PASSWORD)@galaxy-release-name-postgres/galaxy?sslmode=require
            - name: GALAXY_CONFIG_OVERRIDE_ID_SECRET
              valueFrom:
                secretKeyRef:
                  name: "release-name-galaxy-secrets"
                  key: "galaxy-config-id-secret"
            - name: PYTHONPATH
              value: /galaxy/server/lib
            - name: GALAXY_CONFIG_FILE
              value: /galaxy/server/config/galaxy.yml
            - name: GALAXY_RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: release-name-rabbitmq-server-default-user
                  key: username
            - name: GALAXY_RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-rabbitmq-server-default-user
                  key: password
            - name: GALAXY_CONFIG_OVERRIDE_AMQP_INTERNAL_CONNECTION
              value: amqp://$(GALAXY_RABBITMQ_USERNAME):$(GALAXY_RABBITMQ_PASSWORD)@release-name-rabbitmq-server:5672
          args: [
            'sh', '-c',
            '/galaxy/server/.venv/bin/celery --app galaxy.celery worker --concurrency 2 --loglevel INFO --pool threads --queues celery,galaxy.internal,galaxy.external ']
          volumeMounts:
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/build_sites.yml
              subPath: build_sites.yml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/container_resolvers_conf.xml
              subPath: container_resolvers_conf.xml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/galaxy.yml
              subPath: galaxy.yml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/integrated_tool_panel.xml
              subPath: integrated_tool_panel.xml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/job_conf.yml
              subPath: job_conf.yml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/sanitize_allowlist.txt
              subPath: sanitize_allowlist.txt
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/tool_conf.xml
              subPath: tool_conf.xml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/workflow_schedulers_conf.xml
              subPath: workflow_schedulers_conf.xml
            - name: galaxy-job-rules
              mountPath: /galaxy/server/lib/galaxy/jobs/rules/tpv_rules_local.yml
              subPath: tpv_rules_local.yml
            - name: galaxy-data
              mountPath: /galaxy/server/database
            - name: galaxy-data
              mountPath: /galaxy/server/config/mutable/
              subPath: config
            - name: galaxy-data
              mountPath: /cvmfs/cloud.galaxyproject.org
              subPath: cvmfsclone
            - name: refdata-gxy
              mountPath: /cvmfs/data.galaxyproject.org
              subPath: data.galaxyproject.org
              # CVMFS automount volumes must be mounted with HostToContainer mount propagation.
              mountPropagation: HostToContainer
          resources:
            limits:
              cpu: 3
              ephemeral-storage: 10Gi
              memory: 7G
            requests:
              cpu: 100m
              ephemeral-storage: 1Gi
              memory: 1G
      volumes:
        - name: galaxy-conf-files
          configMap:
            name: release-name-galaxy-configs
        - name: extra-welcomehtml-ee3410714399628f55d8b0fbdbcc0b1ab19c965ad38e8
          configMap:
            name: release-name-galaxy-extra-welcomehtml-ee3410714399628f55d8b0fbdbcc0b1ab19c965ad38e8
        - name: galaxy-job-rules
          configMap:
            name: release-name-galaxy-job-rules
        - name: galaxy-data
          persistentVolumeClaim:
            claimName: release-name-galaxy-pvc
        - name: refdata-gxy
          persistentVolumeClaim:
            claimName: release-name-galaxy-refdata-gxy-pvc
---
# Source: galaxy/templates/deployment-job.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-galaxy-job-0
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: galaxy
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: galaxy-job-handler
  template:
    metadata:
      labels:
        app.kubernetes.io/name: galaxy
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: galaxy-job-handler
      annotations:
        checksum/galaxy_conf: 9a935e1640fd8a8ff7efe3ae62f080f8c1ba4b2722bc23de2e634b7b6066e658
        checksum/galaxy_rules: 3d41202cc2e345e0c4b76aa969c18b50d1f5ede9ec783385f7e288e546e265ee
        checksum/galaxy_extras: bfefa8c26169d1ed04e0799f65a689636c5dadf9a3ee8e5086a4faa32651fac4
    spec:
      serviceAccountName: release-name-galaxy
      securityContext:
        fsGroup: 101
      initContainers:
        - name: galaxy-wait-db
          image: "quay.io/galaxyproject/galaxy-min:24.0.2"
          imagePullPolicy: IfNotPresent
          args: ['sh', '-c', 'until [ -f /galaxy/server/config/mutable/db_init_done_1 ]; do echo "waiting for DB initialization"; sleep 1; done;
until timeout 1 bash -c "echo > /dev/tcp/release-name-rabbitmq-server/5672"; do echo "waiting for rabbitmq service"; sleep 1; done;
until [ -f /galaxy/server/config/mutable/init_mounts_done_1 ]; do echo "waiting for copying onto NFS"; sleep 1; done;
until [ -f /galaxy/server/config/mutable/init_clone_done_1 ]; do echo "waiting for refdata copying"; sleep 1; done;
echo "Initialization waits complete"; sleep 5;']
          volumeMounts:
            - name: galaxy-data
              mountPath: /galaxy/server/config/mutable/
              subPath: config
      containers:
        - name: galaxy-job-0
          image: "quay.io/galaxyproject/galaxy-min:24.0.2"
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          
            - name: GALAXY_DB_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: 'galaxydbuser.galaxy-release-name-postgres.credentials.postgresql.acid.zalan.do'
                  key: 'password'
            - name: GALAXY_CONFIG_OVERRIDE_DATABASE_CONNECTION
              value: postgresql://galaxydbuser:$(GALAXY_DB_USER_PASSWORD)@galaxy-release-name-postgres/galaxy?sslmode=require
            - name: GALAXY_CONFIG_OVERRIDE_ID_SECRET
              valueFrom:
                secretKeyRef:
                  name: "release-name-galaxy-secrets"
                  key: "galaxy-config-id-secret"
            - name: PYTHONPATH
              value: /galaxy/server/lib
            - name: GALAXY_CONFIG_FILE
              value: /galaxy/server/config/galaxy.yml
            - name: GALAXY_RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: release-name-rabbitmq-server-default-user
                  key: username
            - name: GALAXY_RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-rabbitmq-server-default-user
                  key: password
            - name: GALAXY_CONFIG_OVERRIDE_AMQP_INTERNAL_CONNECTION
              value: amqp://$(GALAXY_RABBITMQ_USERNAME):$(GALAXY_RABBITMQ_PASSWORD)@release-name-rabbitmq-server:5672
          args: [
            'sh', '-c',
            'python /galaxy/server/scripts/galaxy-main -c $GALAXY_CONFIG_FILE --server-name job_handler_0 --attach-to-pool job-handlers']
          startupProbe:
            exec:
              command: [
                'sh', '-c',
                'python /tmp/probedb.py -c $GALAXY_CONFIG_OVERRIDE_DATABASE_CONNECTION -s job_handler_0 -o $HOSTNAME'
              ]
            initialDelaySeconds: 30
            periodSeconds: 5
            failureThreshold: 80
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command: [
                'sh', '-c',
                'python /tmp/probedb.py -c $GALAXY_CONFIG_OVERRIDE_DATABASE_CONNECTION -s job_handler_0 -o $HOSTNAME'
              ]
            initialDelaySeconds: 
            periodSeconds: 10
            failureThreshold: 12
            timeoutSeconds: 5
          livenessProbe:
            exec:
              command: [
                'sh', '-c',
                'python /tmp/probedb.py -c $GALAXY_CONFIG_OVERRIDE_DATABASE_CONNECTION -s job_handler_0 -o $HOSTNAME'
              ]
            initialDelaySeconds: 
            periodSeconds: 10
            failureThreshold: 30
            timeoutSeconds: 5
          volumeMounts:
            - name: extra-files-probe-script
              mountPath: /tmp/probedb.py
              subPath: probedb.py
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/build_sites.yml
              subPath: build_sites.yml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/container_resolvers_conf.xml
              subPath: container_resolvers_conf.xml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/galaxy.yml
              subPath: galaxy.yml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/integrated_tool_panel.xml
              subPath: integrated_tool_panel.xml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/job_conf.yml
              subPath: job_conf.yml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/sanitize_allowlist.txt
              subPath: sanitize_allowlist.txt
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/tool_conf.xml
              subPath: tool_conf.xml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/workflow_schedulers_conf.xml
              subPath: workflow_schedulers_conf.xml
            - name: galaxy-job-rules
              mountPath: /galaxy/server/lib/galaxy/jobs/rules/tpv_rules_local.yml
              subPath: tpv_rules_local.yml
            - name: galaxy-data
              mountPath: /galaxy/server/config/mutable/
              subPath: config
            - name: galaxy-data
              mountPath: /galaxy/server/database
            - name: galaxy-data
              mountPath: /cvmfs/cloud.galaxyproject.org
              subPath: cvmfsclone
            - name: refdata-gxy
              mountPath: /cvmfs/data.galaxyproject.org
              subPath: data.galaxyproject.org
              # CVMFS automount volumes must be mounted with HostToContainer mount propagation.
              mountPropagation: HostToContainer
          resources:
            limits:
              cpu: 3
              ephemeral-storage: 10Gi
              memory: 7G
            requests:
              cpu: 100m
              ephemeral-storage: 1Gi
              memory: 1G
      volumes:
        - name: extra-files-probe-script
          configMap:
            name: release-name-galaxy-probedb-py
        - name: galaxy-conf-files
          configMap:
            name: release-name-galaxy-configs
        - name: galaxy-job-rules
          configMap:
            name: release-name-galaxy-job-rules
        - name: galaxy-data
          persistentVolumeClaim:
            claimName: release-name-galaxy-pvc
        - name: refdata-gxy
          persistentVolumeClaim:
            claimName: release-name-galaxy-refdata-gxy-pvc
---
# Source: galaxy/templates/deployment-nginx.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-galaxy-nginx
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: galaxy
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: galaxy-nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/name: galaxy
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: galaxy-nginx
      annotations:
        checksum/nginx_conf: c643c25ae9de7e587279287971a74d271a09f3daa5d9fbf44a45949a31982b1e
    spec:
      serviceAccountName: release-name-galaxy
      securityContext:
        fsGroup: 101
      initContainers:
        - name: galaxy-init-static
          image: "quay.io/galaxyproject/galaxy-min:24.0.2"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: extra-welcomehtml-ee3410714399628f55d8b0fbdbcc0b1ab19c965ad38e8
              mountPath: /galaxy/server/static/welcome.html
              subPath: welcome.html
            - name: static-dir
              mountPath: /tmp/galaxy
          command: ['/bin/sh', '-c', 'cp -r /galaxy/server/static /tmp/galaxy/static;']
      containers:
        - name: galaxy-nginx
          image: "nginx:1.22.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: galaxy-nginx
              containerPort: 7080
              protocol: TCP
          volumeMounts:
            - name: extra-welcomehtml-ee3410714399628f55d8b0fbdbcc0b1ab19c965ad38e8
              mountPath: /galaxy/server/static/welcome.html
              subPath: welcome.html
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: static-dir
              mountPath: /galaxy/server/static
              subPath: static
            - name: galaxy-data
              mountPath: /galaxy/server/database
            - name: galaxy-data
              mountPath: /galaxy/server/config/mutable/
              subPath: config
            - name: galaxy-data
              mountPath: /cvmfs/cloud.galaxyproject.org
              subPath: cvmfsclone
          resources:
            limits:
              cpu: 2
              ephemeral-storage: 100Gi
              memory: 3G
            requests:
              cpu: 100m
              ephemeral-storage: 10Gi
              memory: 500M
          lifecycle:
            preStop:
              exec:
                command: ["/usr/sbin/nginx","-s","quit"]
      volumes:
        - name: extra-welcomehtml-ee3410714399628f55d8b0fbdbcc0b1ab19c965ad38e8
          configMap:
            name: release-name-galaxy-extra-welcomehtml-ee3410714399628f55d8b0fbdbcc0b1ab19c965ad38e8
        - name: nginx-conf
          configMap:
            name: release-name-galaxy-nginx-conf
        - name: static-dir
          emptyDir: {}
        - name: galaxy-data
          persistentVolumeClaim:
            claimName: release-name-galaxy-pvc
---
# Source: galaxy/templates/deployment-tusd.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-galaxy-tusd
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: galaxy
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: galaxy-tusd-handler
  template:
    metadata:
      labels:
        app.kubernetes.io/name: galaxy
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: galaxy-tusd-handler
      annotations:
    spec:
      serviceAccountName: release-name-galaxy
      securityContext:
        fsGroup: 101
        runAsGroup: 101
        runAsUser: 101
      containers:
        - name: galaxy-tusd
          image: "tusproject/tusd:v1.13.0"
          imagePullPolicy: IfNotPresent
          args:
            - "-host"
            - "0.0.0.0"
            - "-port"
            - "1080"
            - "-upload-dir=/galaxy/server/database/tmp"
            - '-hooks-http=http://release-name-galaxy-nginx:8000/galaxy/api/upload/hooks'
            - "-hooks-http-forward-headers=X-Api-Key,Cookie"
            - "-hooks-enabled-events=pre-create"
            - "-behind-proxy"
            - '-base-path=/galaxy/api/upload/resumable_upload'
          env:
          
            - name: GALAXY_DB_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: 'galaxydbuser.galaxy-release-name-postgres.credentials.postgresql.acid.zalan.do'
                  key: 'password'
            - name: GALAXY_CONFIG_OVERRIDE_DATABASE_CONNECTION
              value: postgresql://galaxydbuser:$(GALAXY_DB_USER_PASSWORD)@galaxy-release-name-postgres/galaxy?sslmode=require
            - name: GALAXY_CONFIG_OVERRIDE_ID_SECRET
              valueFrom:
                secretKeyRef:
                  name: "release-name-galaxy-secrets"
                  key: "galaxy-config-id-secret"
            - name: PYTHONPATH
              value: /galaxy/server/lib
            - name: GALAXY_CONFIG_FILE
              value: /galaxy/server/config/galaxy.yml
            - name: GALAXY_RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: release-name-rabbitmq-server-default-user
                  key: username
            - name: GALAXY_RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-rabbitmq-server-default-user
                  key: password
            - name: GALAXY_CONFIG_OVERRIDE_AMQP_INTERNAL_CONNECTION
              value: amqp://$(GALAXY_RABBITMQ_USERNAME):$(GALAXY_RABBITMQ_PASSWORD)@release-name-rabbitmq-server:5672
          ports:
            - name: tusd-http
              containerPort: 1080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: tusd-http
          livenessProbe:
            httpGet:
              path: /
              port: tusd-http
          volumeMounts:
            - name: galaxy-data
              mountPath: /galaxy/server/database
          resources:
            limits:
              cpu: 3
              ephemeral-storage: 10Gi
              memory: 7G
            requests:
              cpu: 100m
              ephemeral-storage: 1Gi
              memory: 1G
      volumes:
        - name: galaxy-data
          persistentVolumeClaim:
            claimName: release-name-galaxy-pvc
---
# Source: galaxy/templates/deployment-web.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-galaxy-web
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: galaxy
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: galaxy-web-handler
  template:
    metadata:
      labels:
        app.kubernetes.io/name: galaxy
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: galaxy-web-handler
      annotations:
        checksum/galaxy_conf: 9a935e1640fd8a8ff7efe3ae62f080f8c1ba4b2722bc23de2e634b7b6066e658
        checksum/galaxy_rules: 3d41202cc2e345e0c4b76aa969c18b50d1f5ede9ec783385f7e288e546e265ee
        checksum/galaxy_extras: bfefa8c26169d1ed04e0799f65a689636c5dadf9a3ee8e5086a4faa32651fac4
    spec:
      serviceAccountName: release-name-galaxy
      securityContext:
        fsGroup: 101
      initContainers:
        - name: galaxy-wait-db
          image: "quay.io/galaxyproject/galaxy-min:24.0.2"
          imagePullPolicy: IfNotPresent
          args: ['sh', '-c', 'until [ -f /galaxy/server/config/mutable/db_init_done_1 ]; do echo "waiting for DB initialization"; sleep 1; done;
until timeout 1 bash -c "echo > /dev/tcp/release-name-rabbitmq-server/5672"; do echo "waiting for rabbitmq service"; sleep 1; done;
until [ -f /galaxy/server/config/mutable/init_mounts_done_1 ]; do echo "waiting for copying onto NFS"; sleep 1; done;
until [ -f /galaxy/server/config/mutable/init_clone_done_1 ]; do echo "waiting for refdata copying"; sleep 1; done;
echo "Initialization waits complete"; sleep 0;']
          volumeMounts:
            - name: galaxy-data
              mountPath: /galaxy/server/config/mutable/
              subPath: config
      containers:
        - name: galaxy-web
          image: "quay.io/galaxyproject/galaxy-min:24.0.2"
          imagePullPolicy: IfNotPresent
          ports:
            - name: galaxy-http
              containerPort: 8080
              protocol: TCP
          env:
          
            - name: GALAXY_DB_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: 'galaxydbuser.galaxy-release-name-postgres.credentials.postgresql.acid.zalan.do'
                  key: 'password'
            - name: GALAXY_CONFIG_OVERRIDE_DATABASE_CONNECTION
              value: postgresql://galaxydbuser:$(GALAXY_DB_USER_PASSWORD)@galaxy-release-name-postgres/galaxy?sslmode=require
            - name: GALAXY_CONFIG_OVERRIDE_ID_SECRET
              valueFrom:
                secretKeyRef:
                  name: "release-name-galaxy-secrets"
                  key: "galaxy-config-id-secret"
            - name: PYTHONPATH
              value: /galaxy/server/lib
            - name: GALAXY_CONFIG_FILE
              value: /galaxy/server/config/galaxy.yml
            - name: GALAXY_RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: release-name-rabbitmq-server-default-user
                  key: username
            - name: GALAXY_RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-rabbitmq-server-default-user
                  key: password
            - name: GALAXY_CONFIG_OVERRIDE_AMQP_INTERNAL_CONNECTION
              value: amqp://$(GALAXY_RABBITMQ_USERNAME):$(GALAXY_RABBITMQ_PASSWORD)@release-name-rabbitmq-server:5672
          args: [
            'sh', '-c',
            '/galaxy/server/.venv/bin/gunicorn "galaxy.webapps.galaxy.fast_factory:factory()" --timeout 300 --pythonpath /galaxy/server/lib -k galaxy.webapps.galaxy.workers.Worker -b 0.0.0.0:8080 --workers=1 --config python:galaxy.web_stack.gunicorn_config --preload ']
          startupProbe:
            httpGet:
              path: /galaxy/api/version
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 5
            failureThreshold: 80
            timeoutSeconds: 80
          readinessProbe:
            httpGet:
              path: /galaxy/api/version
              port: 8080
            initialDelaySeconds: 
            periodSeconds: 10
            failureThreshold: 12
            timeoutSeconds: 12
          livenessProbe:
            httpGet:
              path: /galaxy/api/version
              port: 8080
            initialDelaySeconds: 
            periodSeconds: 10
            failureThreshold: 30
            timeoutSeconds: 30
          volumeMounts:
            - name: extra-welcomehtml-ee3410714399628f55d8b0fbdbcc0b1ab19c965ad38e8
              mountPath: /galaxy/server/static/welcome.html
              subPath: welcome.html
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/build_sites.yml
              subPath: build_sites.yml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/container_resolvers_conf.xml
              subPath: container_resolvers_conf.xml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/galaxy.yml
              subPath: galaxy.yml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/integrated_tool_panel.xml
              subPath: integrated_tool_panel.xml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/job_conf.yml
              subPath: job_conf.yml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/sanitize_allowlist.txt
              subPath: sanitize_allowlist.txt
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/tool_conf.xml
              subPath: tool_conf.xml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/workflow_schedulers_conf.xml
              subPath: workflow_schedulers_conf.xml
            - name: galaxy-job-rules
              mountPath: /galaxy/server/lib/galaxy/jobs/rules/tpv_rules_local.yml
              subPath: tpv_rules_local.yml
            - name: galaxy-data
              mountPath: /galaxy/server/database
            - name: galaxy-data
              mountPath: /galaxy/server/config/mutable/
              subPath: config
            - name: galaxy-data
              mountPath: /cvmfs/cloud.galaxyproject.org
              subPath: cvmfsclone
            - name: refdata-gxy
              mountPath: /cvmfs/data.galaxyproject.org
              subPath: data.galaxyproject.org
              # CVMFS automount volumes must be mounted with HostToContainer mount propagation.
              mountPropagation: HostToContainer
          resources:
            limits:
              cpu: 3
              ephemeral-storage: 10Gi
              memory: 7G
            requests:
              cpu: 100m
              ephemeral-storage: 1Gi
              memory: 1G
      volumes:
        - name: galaxy-conf-files
          configMap:
            name: release-name-galaxy-configs
        - name: extra-welcomehtml-ee3410714399628f55d8b0fbdbcc0b1ab19c965ad38e8
          configMap:
            name: release-name-galaxy-extra-welcomehtml-ee3410714399628f55d8b0fbdbcc0b1ab19c965ad38e8
        - name: galaxy-job-rules
          configMap:
            name: release-name-galaxy-job-rules
        - name: galaxy-data
          persistentVolumeClaim:
            claimName: release-name-galaxy-pvc
        - name: refdata-gxy
          persistentVolumeClaim:
            claimName: release-name-galaxy-refdata-gxy-pvc
---
# Source: galaxy/templates/deployment-workflow.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-galaxy-workflow
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: galaxy
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: galaxy-workflow-handler
  template:
    metadata:
      labels:
        app.kubernetes.io/name: galaxy
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: galaxy-workflow-handler
      annotations:
        checksum/galaxy_conf: 9a935e1640fd8a8ff7efe3ae62f080f8c1ba4b2722bc23de2e634b7b6066e658
        checksum/galaxy_rules: 3d41202cc2e345e0c4b76aa969c18b50d1f5ede9ec783385f7e288e546e265ee
        checksum/galaxy_extras: bfefa8c26169d1ed04e0799f65a689636c5dadf9a3ee8e5086a4faa32651fac4
    spec:
      serviceAccountName: release-name-galaxy
      securityContext:
        fsGroup: 101
      initContainers:
        - name: galaxy-wait-db
          image: "quay.io/galaxyproject/galaxy-min:24.0.2"
          imagePullPolicy: IfNotPresent
          args: ['sh', '-c', 'until [ -f /galaxy/server/config/mutable/db_init_done_1 ]; do echo "waiting for DB initialization"; sleep 1; done;
until timeout 1 bash -c "echo > /dev/tcp/release-name-rabbitmq-server/5672"; do echo "waiting for rabbitmq service"; sleep 1; done;
until [ -f /galaxy/server/config/mutable/init_mounts_done_1 ]; do echo "waiting for copying onto NFS"; sleep 1; done;
until [ -f /galaxy/server/config/mutable/init_clone_done_1 ]; do echo "waiting for refdata copying"; sleep 1; done;
echo "Initialization waits complete"; sleep 10;']
          volumeMounts:
            - name: galaxy-data
              mountPath: /galaxy/server/config/mutable/
              subPath: config
      containers:
        - name: galaxy-workflow
          image: "quay.io/galaxyproject/galaxy-min:24.0.2"
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          
            - name: GALAXY_DB_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: 'galaxydbuser.galaxy-release-name-postgres.credentials.postgresql.acid.zalan.do'
                  key: 'password'
            - name: GALAXY_CONFIG_OVERRIDE_DATABASE_CONNECTION
              value: postgresql://galaxydbuser:$(GALAXY_DB_USER_PASSWORD)@galaxy-release-name-postgres/galaxy?sslmode=require
            - name: GALAXY_CONFIG_OVERRIDE_ID_SECRET
              valueFrom:
                secretKeyRef:
                  name: "release-name-galaxy-secrets"
                  key: "galaxy-config-id-secret"
            - name: PYTHONPATH
              value: /galaxy/server/lib
            - name: GALAXY_CONFIG_FILE
              value: /galaxy/server/config/galaxy.yml
            - name: GALAXY_RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: release-name-rabbitmq-server-default-user
                  key: username
            - name: GALAXY_RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-rabbitmq-server-default-user
                  key: password
            - name: GALAXY_CONFIG_OVERRIDE_AMQP_INTERNAL_CONNECTION
              value: amqp://$(GALAXY_RABBITMQ_USERNAME):$(GALAXY_RABBITMQ_PASSWORD)@release-name-rabbitmq-server:5672
          args: [
            'sh', '-c',
            'python /galaxy/server/scripts/galaxy-main -c $GALAXY_CONFIG_FILE --server-name workflow_scheduler0']
          startupProbe:
            exec:
              command: [
                'sh', '-c',
                'python /tmp/probedb.py -c $GALAXY_CONFIG_OVERRIDE_DATABASE_CONNECTION -s workflow_scheduler0 -o $HOSTNAME'
              ]
            initialDelaySeconds: 30
            periodSeconds: 5
            failureThreshold: 80
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command: [
                'sh', '-c',
                'python /tmp/probedb.py -c $GALAXY_CONFIG_OVERRIDE_DATABASE_CONNECTION -s workflow_scheduler0 -o $HOSTNAME'
              ]
            initialDelaySeconds: 
            periodSeconds: 10
            failureThreshold: 12
            timeoutSeconds: 5
          livenessProbe:
            exec:
              command: [
                'sh', '-c',
                'python /tmp/probedb.py -c $GALAXY_CONFIG_OVERRIDE_DATABASE_CONNECTION -s workflow_scheduler0 -o $HOSTNAME'
              ]
            initialDelaySeconds: 
            periodSeconds: 10
            failureThreshold: 30
            timeoutSeconds: 5
          volumeMounts:
            - name: extra-files-probe-script
              mountPath: /tmp/probedb.py
              subPath: probedb.py
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/build_sites.yml
              subPath: build_sites.yml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/container_resolvers_conf.xml
              subPath: container_resolvers_conf.xml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/galaxy.yml
              subPath: galaxy.yml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/integrated_tool_panel.xml
              subPath: integrated_tool_panel.xml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/job_conf.yml
              subPath: job_conf.yml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/sanitize_allowlist.txt
              subPath: sanitize_allowlist.txt
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/tool_conf.xml
              subPath: tool_conf.xml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/workflow_schedulers_conf.xml
              subPath: workflow_schedulers_conf.xml
            - name: galaxy-job-rules
              mountPath: /galaxy/server/lib/galaxy/jobs/rules/tpv_rules_local.yml
              subPath: tpv_rules_local.yml
            - name: galaxy-data
              mountPath: /galaxy/server/config/mutable/
              subPath: config
            - name: galaxy-data
              mountPath: /galaxy/server/database
            - name: galaxy-data
              mountPath: /cvmfs/cloud.galaxyproject.org
              subPath: cvmfsclone
            - name: refdata-gxy
              mountPath: /cvmfs/data.galaxyproject.org
              subPath: data.galaxyproject.org
              # CVMFS automount volumes must be mounted with HostToContainer mount propagation.
              mountPropagation: HostToContainer
          resources:
            limits:
              cpu: 3
              ephemeral-storage: 10Gi
              memory: 7G
            requests:
              cpu: 100m
              ephemeral-storage: 1Gi
              memory: 1G
      volumes:
        - name: extra-files-probe-script
          configMap:
            name: release-name-galaxy-probedb-py
        - name: galaxy-conf-files
          configMap:
            name: release-name-galaxy-configs
        - name: galaxy-job-rules
          configMap:
            name: release-name-galaxy-job-rules
        - name: galaxy-data
          persistentVolumeClaim:
            claimName: release-name-galaxy-pvc
        - name: refdata-gxy
          persistentVolumeClaim:
            claimName: release-name-galaxy-refdata-gxy-pvc
---
# Source: galaxy/templates/jobs-init.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-galaxy-init-db-wbrho
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  ttlSecondsAfterFinished: 300
  template:
    metadata:
      labels:
        helm.sh/chart: galaxy-5.14.0
        app.kubernetes.io/name: galaxy
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "24.0.2"
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/galaxy_conf: 9a935e1640fd8a8ff7efe3ae62f080f8c1ba4b2722bc23de2e634b7b6066e658
        checksum/galaxy_rules: 3d41202cc2e345e0c4b76aa969c18b50d1f5ede9ec783385f7e288e546e265ee
        checksum/galaxy_extras: bfefa8c26169d1ed04e0799f65a689636c5dadf9a3ee8e5086a4faa32651fac4
    spec:
      securityContext:
        fsGroup: 101
        runAsGroup: 101
        runAsUser: 101
      restartPolicy: OnFailure
      initContainers:
        - name: galaxy-wait-postgres
          image: alpine:3.16
          command: ['sh', '-c', 'echo Chown mount path; chown 101:101 /galaxy/server/database; echo Begin waiting for postgres; until nc -z -w3 galaxy-release-name-postgres 5432; do echo waiting for galaxy-postgres service; sleep 1; done; echo done;']
          volumeMounts:
            - name: galaxy-data
              mountPath: /galaxy/server/database
      containers:
        - name: galaxy-db-init
          image: "quay.io/galaxyproject/galaxy-min:24.0.2"
          imagePullPolicy: IfNotPresent
          args:
            - 'sh'
            - '-c'
            - >
              if (ls /galaxy/server/config/mutable/ | grep -q "db_init_done*");
                then /galaxy/server/manage_db.sh upgrade && echo "Done" > /galaxy/server/config/mutable/db_init_done_1;
                else (/galaxy/server/manage_db.sh init && echo "Done" > /galaxy/server/config/mutable/db_init_done_1;);
              fi;
          env:
          
            - name: GALAXY_DB_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: 'galaxydbuser.galaxy-release-name-postgres.credentials.postgresql.acid.zalan.do'
                  key: 'password'
            - name: GALAXY_CONFIG_OVERRIDE_DATABASE_CONNECTION
              value: postgresql://galaxydbuser:$(GALAXY_DB_USER_PASSWORD)@galaxy-release-name-postgres/galaxy?sslmode=require
            - name: GALAXY_CONFIG_OVERRIDE_ID_SECRET
              valueFrom:
                secretKeyRef:
                  name: "release-name-galaxy-secrets"
                  key: "galaxy-config-id-secret"
            - name: PYTHONPATH
              value: /galaxy/server/lib
            - name: GALAXY_CONFIG_FILE
              value: /galaxy/server/config/galaxy.yml
            - name: GALAXY_RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: release-name-rabbitmq-server-default-user
                  key: username
            - name: GALAXY_RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-rabbitmq-server-default-user
                  key: password
            - name: GALAXY_CONFIG_OVERRIDE_AMQP_INTERNAL_CONNECTION
              value: amqp://$(GALAXY_RABBITMQ_USERNAME):$(GALAXY_RABBITMQ_PASSWORD)@release-name-rabbitmq-server:5672
          volumeMounts:
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/build_sites.yml
              subPath: build_sites.yml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/container_resolvers_conf.xml
              subPath: container_resolvers_conf.xml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/galaxy.yml
              subPath: galaxy.yml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/integrated_tool_panel.xml
              subPath: integrated_tool_panel.xml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/job_conf.yml
              subPath: job_conf.yml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/sanitize_allowlist.txt
              subPath: sanitize_allowlist.txt
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/tool_conf.xml
              subPath: tool_conf.xml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/workflow_schedulers_conf.xml
              subPath: workflow_schedulers_conf.xml
            - name: galaxy-job-rules
              mountPath: /galaxy/server/lib/galaxy/jobs/rules/tpv_rules_local.yml
              subPath: tpv_rules_local.yml
            - name: galaxy-data
              mountPath: /galaxy/server/config/mutable/
              subPath: config
            - name: refdata-gxy
              mountPath: /cvmfs/data.galaxyproject.org
              subPath: data.galaxyproject.org
              # CVMFS automount volumes must be mounted with HostToContainer mount propagation.
              mountPropagation: HostToContainer
      volumes:
        - name: galaxy-conf-files
          configMap:
            name: release-name-galaxy-configs
        - name: galaxy-job-rules
          configMap:
            name: release-name-galaxy-job-rules
        - name: galaxy-data
          persistentVolumeClaim:
            claimName: release-name-galaxy-pvc
        - name: refdata-gxy
          persistentVolumeClaim:
            claimName: release-name-galaxy-refdata-gxy-pvc
---
# Source: galaxy/templates/jobs-init.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-galaxy-init-mounts-jplin
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  ttlSecondsAfterFinished: 300
  template:
    metadata:
      labels:
        helm.sh/chart: galaxy-5.14.0
        app.kubernetes.io/name: galaxy
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "24.0.2"
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/galaxy_conf: 9a935e1640fd8a8ff7efe3ae62f080f8c1ba4b2722bc23de2e634b7b6066e658
        checksum/galaxy_rules: 3d41202cc2e345e0c4b76aa969c18b50d1f5ede9ec783385f7e288e546e265ee
        checksum/galaxy_extras: bfefa8c26169d1ed04e0799f65a689636c5dadf9a3ee8e5086a4faa32651fac4
    spec:
      securityContext:
        fsGroup: 101
        runAsGroup: 101
        runAsUser: 101
      restartPolicy: OnFailure
      containers:
        - name: galaxy-init-mounts
          image: "quay.io/galaxyproject/galaxy-min:24.0.2"
          imagePullPolicy: IfNotPresent
          args: ['sh', '-c', 'cp -anL /galaxy/server/config/integrated_tool_panel.xml /galaxy/server/config/mutable/integrated_tool_panel.xml;
cp -anL /galaxy/server/config/sanitize_allowlist.txt /galaxy/server/config/mutable/sanitize_allowlist.txt;
cp -anL /galaxy/server/config/data_manager_conf.xml.sample /galaxy/server/config/mutable/shed_data_manager_conf.xml;
cp -anL /galaxy/server/config/tool_data_table_conf.xml.sample /galaxy/server/config/mutable/shed_tool_data_table_conf.xml;
cp -aruL /galaxy/server/tool-data /galaxy/server/database/;
cp -aruL /galaxy/server/tools /galaxy/server/database/;
echo "Done" > /galaxy/server/config/mutable/init_mounts_done_1;']
          volumeMounts:
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/build_sites.yml
              subPath: build_sites.yml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/container_resolvers_conf.xml
              subPath: container_resolvers_conf.xml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/galaxy.yml
              subPath: galaxy.yml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/integrated_tool_panel.xml
              subPath: integrated_tool_panel.xml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/job_conf.yml
              subPath: job_conf.yml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/sanitize_allowlist.txt
              subPath: sanitize_allowlist.txt
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/tool_conf.xml
              subPath: tool_conf.xml
            - name: galaxy-conf-files
              mountPath: /galaxy/server/config/workflow_schedulers_conf.xml
              subPath: workflow_schedulers_conf.xml
            - name: galaxy-job-rules
              mountPath: /galaxy/server/lib/galaxy/jobs/rules/tpv_rules_local.yml
              subPath: tpv_rules_local.yml
            - name: galaxy-data
              mountPath: /galaxy/server/database
            - name: galaxy-data
              mountPath: /galaxy/server/config/mutable/
              subPath: config
            - name: refdata-gxy
              mountPath: /cvmfs/data.galaxyproject.org
              subPath: data.galaxyproject.org
              # CVMFS automount volumes must be mounted with HostToContainer mount propagation.
              mountPropagation: HostToContainer

        - name: galaxy-init-cloud-repo
          image: alpine:3.16
          command: ['sh', '-c', 'if [ -f /cvmfs/cloud.galaxyproject.org/startup.tar.gz_timestamp ]; then
  echo "File https://storage.googleapis.com/cloud-cvmfs/startup.tar.gz previously downloaded. Only downloading if changed, to /cvmfs/cloud.galaxyproject.org...";
  wget -qO- --header="If-Modified-Since: `cat /cvmfs/cloud.galaxyproject.org/startup.tar.gz_timestamp`" https://storage.googleapis.com/cloud-cvmfs/startup.tar.gz | tar -xvz || echo File not changed, ignoring....;
else
  echo "File not previously downloaded. Downloading and extracting https://storage.googleapis.com/cloud-cvmfs/startup.tar.gz to /cvmfs/cloud.galaxyproject.org...";
  wget -qO- https://storage.googleapis.com/cloud-cvmfs/startup.tar.gz | tar -xvz || exit 1;
fi;
wget --server-response --spider https://storage.googleapis.com/cloud-cvmfs/startup.tar.gz 2>&1 | grep -i "Last-Modified: " | cut -c18- > /cvmfs/cloud.galaxyproject.org/startup.tar.gz_timestamp;
echo "Completed download and extraction of: https://storage.googleapis.com/cloud-cvmfs/startup.tar.gz"&& echo "Done" > /galaxy/server/config/mutable/init_clone_done_1']
          volumeMounts:
            - name: galaxy-data
              mountPath: /cvmfs/cloud.galaxyproject.org
              subPath: cvmfsclone
            - name: galaxy-data
              mountPath: /galaxy/server/config/mutable/
              subPath: config
        - name: galaxy-init-cloud-repo-partial
          image: alpine:3.16
          command: ['sh', '-c', 'if [ -f /cvmfs/cloud.galaxyproject.org/partial.tar.gz_timestamp ]; then
  echo "File https://storage.googleapis.com/cloud-cvmfs/partial.tar.gz previously downloaded. Only downloading if changed, to /cvmfs/cloud.galaxyproject.org...";
  wget -qO- --header="If-Modified-Since: `cat /cvmfs/cloud.galaxyproject.org/partial.tar.gz_timestamp`" https://storage.googleapis.com/cloud-cvmfs/partial.tar.gz | tar -xvz || echo File not changed, ignoring....;
else
  echo "File not previously downloaded. Downloading and extracting https://storage.googleapis.com/cloud-cvmfs/partial.tar.gz to /cvmfs/cloud.galaxyproject.org...";
  wget -qO- https://storage.googleapis.com/cloud-cvmfs/partial.tar.gz | tar -xvz || exit 1;
fi;
wget --server-response --spider https://storage.googleapis.com/cloud-cvmfs/partial.tar.gz 2>&1 | grep -i "Last-Modified: " | cut -c18- > /cvmfs/cloud.galaxyproject.org/partial.tar.gz_timestamp;
echo "Completed download and extraction of: https://storage.googleapis.com/cloud-cvmfs/partial.tar.gz"']
          volumeMounts:
            - name: galaxy-data
              mountPath: /cvmfs/cloud.galaxyproject.org
              subPath: cvmfsclone
        - name: galaxy-init-cloud-repo-full
          image: alpine:3.16
          command: ['sh', '-c', 'if [ -f /cvmfs/cloud.galaxyproject.org/contents.tar.gz_timestamp ]; then
  echo "File https://storage.googleapis.com/cloud-cvmfs/contents.tar.gz previously downloaded. Only downloading if changed, to /cvmfs/cloud.galaxyproject.org...";
  wget -qO- --header="If-Modified-Since: `cat /cvmfs/cloud.galaxyproject.org/contents.tar.gz_timestamp`" https://storage.googleapis.com/cloud-cvmfs/contents.tar.gz | tar -xvz || echo File not changed, ignoring....;
else
  echo "File not previously downloaded. Downloading and extracting https://storage.googleapis.com/cloud-cvmfs/contents.tar.gz to /cvmfs/cloud.galaxyproject.org...";
  wget -qO- https://storage.googleapis.com/cloud-cvmfs/contents.tar.gz | tar -xvz || exit 1;
fi;
wget --server-response --spider https://storage.googleapis.com/cloud-cvmfs/contents.tar.gz 2>&1 | grep -i "Last-Modified: " | cut -c18- > /cvmfs/cloud.galaxyproject.org/contents.tar.gz_timestamp;
echo "Completed download and extraction of: https://storage.googleapis.com/cloud-cvmfs/contents.tar.gz"']
          volumeMounts:
            - name: galaxy-data
              mountPath: /cvmfs/cloud.galaxyproject.org
              subPath: cvmfsclone

      volumes:
        - name: galaxy-conf-files
          configMap:
            name: release-name-galaxy-configs
        - name: galaxy-job-rules
          configMap:
            name: release-name-galaxy-job-rules
        - name: galaxy-data
          persistentVolumeClaim:
            claimName: release-name-galaxy-pvc
        - name: refdata-gxy
          persistentVolumeClaim:
            claimName: release-name-galaxy-refdata-gxy-pvc
---
# Source: galaxy/templates/cronjob-maintenance.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: release-name-galaxy-cron-maintenance
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  schedule: "5 2 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          securityContext:
            runAsUser: 0
          containers:
          - name: galaxy-cron-maintenance
            image: "quay.io/galaxyproject/galaxy-min:24.0.2"
            imagePullPolicy: IfNotPresent
            env:
            - name: GALAXY_DB_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: 'galaxydbuser.galaxy-release-name-postgres.credentials.postgresql.acid.zalan.do'
                  key: 'password'
            - name: GALAXY_CONFIG_OVERRIDE_DATABASE_CONNECTION
              value: postgresql://galaxydbuser:$(GALAXY_DB_USER_PASSWORD)@galaxy-release-name-postgres/galaxy?sslmode=require
            - name: GALAXY_CONFIG_OVERRIDE_ID_SECRET
              valueFrom:
                secretKeyRef:
                  name: "release-name-galaxy-secrets"
                  key: "galaxy-config-id-secret"
            - name: PYTHONPATH
              value: /galaxy/server/lib
            - name: GALAXY_CONFIG_FILE
              value: /galaxy/server/config/galaxy.yml
            - name: GALAXY_RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: release-name-rabbitmq-server-default-user
                  key: username
            - name: GALAXY_RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-rabbitmq-server-default-user
                  key: password
            - name: GALAXY_CONFIG_OVERRIDE_AMQP_INTERNAL_CONNECTION
              value: amqp://$(GALAXY_RABBITMQ_USERNAME):$(GALAXY_RABBITMQ_PASSWORD)@release-name-rabbitmq-server:5672
            command:
              - "/galaxy/server/scripts/maintenance.sh"
            args:
              - "--no-dry-run"
              - "--days"
              - "7"
            volumeMounts:
            - name: galaxy-data
              mountPath: /galaxy/server/database
          volumes:
          - name: galaxy-data
            persistentVolumeClaim:
              claimName: release-name-galaxy-pvc
          restartPolicy: OnFailure
---
# Source: galaxy/templates/cronjob-maintenance.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: release-name-galaxy-cron-tmpdir
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  schedule: "15 2 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          securityContext:
            runAsUser: 0
          containers:
          - name: galaxy-cron-tmpdir
            image: "quay.io/galaxyproject/galaxy-min:24.0.2"
            imagePullPolicy: IfNotPresent
            command:
              - "/usr/bin/find"
            args:
              - "/galaxy/server/database/tmp"
              - "!"
              - "-newermt"
              - "604800 seconds ago"
              - "-type"
              - "f"
              - "-exec"
              - "rm"
              - "{}"
              - ";"
            volumeMounts:
            - name: galaxy-data
              mountPath: /galaxy/server/database
          volumes:
          - name: galaxy-data
            persistentVolumeClaim:
              claimName: release-name-galaxy-pvc
          restartPolicy: OnFailure
---
# Source: galaxy/templates/ingress-activity-canary.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-galaxy-activity-canary
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 10G
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
spec:
  ingressClassName: nginx
  rules:
    - host: 
      http:
        paths:
          - path: /galaxy/api/users
            pathType: Prefix
            backend:
              service:
                name: release-name-galaxy-nginx
                port:
                  number: 8000
---
# Source: galaxy/templates/ingress-tusd.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-galaxy-tusd
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    nginx.ingress.kubernetes.io/connection-proxy-header: Upgrade
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
spec:
  ingressClassName: nginx
  rules:
    - host: 
      http:
        paths:
          - path: /galaxy/api/upload/resumable_upload
            pathType: ImplementationSpecific
            backend:
              service:
                name: release-name-galaxy-tusd
                port:
                  number: 1080
---
# Source: galaxy/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-galaxy
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 10G
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
spec:
  ingressClassName: nginx
  rules:
    - host: 
      http:
        paths:
          - path: /galaxy
            pathType: ImplementationSpecific
            backend:
              service:
                name: release-name-galaxy-nginx
                port:
                  number: 8000
          - path: /training-material
            pathType: ImplementationSpecific
            backend:
              service:
                name: release-name-galaxy-nginx
                port:
                  number: 8000
---
# Source: galaxy/templates/ingress-activity-canary.yaml
# This canary ingress is used for cloudman autoscaling support
# on activity. A 200 on this endpoint indicates that a user
# is active on the system, and the cluster can be autoscaled
# in anticipation of jobs
---
# Source: galaxy/charts/cvmfs/charts/cvmfscsi/templates/csidriver.yaml
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: cvmfs.csi.cern.ch
  labels:
    chart: cvmfscsi-2.3.2
    heritage: Helm
    app: cvmfscsi
spec:
  attachRequired: false
  podInfoOnMount: false
---
# Source: galaxy/charts/postgresql/templates/operatorconfiguration.yaml
apiVersion: "acid.zalan.do/v1"
kind: OperatorConfiguration
metadata:
  name: release-name-postgres
  namespace: default
  labels:
    app.kubernetes.io/name: postgres
    helm.sh/chart: postgresql-1.9.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
configuration:
  crd_categories:
  - all
  docker_image: ghcr.io/zalando/spilo-15:2.1-p9
  enable_crd_registration: true
  enable_lazy_spilo_upgrade: false
  enable_pgversion_env_var: true
  enable_shm_volume: true
  enable_spilo_wal_path_compat: false
  enable_team_id_clustername_prefix: false
  etcd_host: ""
  max_instances: -1
  min_instances: -1
  repair_period: 5m
  resync_period: 30m
  workers: 8
  users:
    enable_password_rotation: false
    password_rotation_interval: 90
    password_rotation_user_retention: 180
    replication_username: standby
    super_username: postgres
  major_version_upgrade:
    major_version_upgrade_mode: "off"
    minimal_major_version: "11"
    target_major_version: "15"
  kubernetes:
    pod_service_account_name: postgres-pod
    oauth_token_secret_name: release-name-postgres
    cluster_domain: cluster.local
    cluster_labels:
      application: spilo
    cluster_name_label: cluster-name
    enable_cross_namespace_secret: false
    enable_init_containers: true
    enable_pod_antiaffinity: false
    enable_pod_disruption_budget: true
    enable_readiness_probe: false
    enable_sidecars: true
    pdb_name_format: postgres-{cluster}-pdb
    pod_antiaffinity_preferred_during_scheduling: false
    pod_antiaffinity_topology_key: kubernetes.io/hostname
    pod_management_policy: ordered_ready
    pod_role_label: spilo-role
    pod_terminate_grace_period: 5m
    secret_name_template: '{username}.{cluster}.credentials.{tprkind}.{tprgroup}'
    share_pgsocket_with_sidecars: false
    spilo_allow_privilege_escalation: true
    spilo_privileged: false
    storage_resize_mode: pvc
    watched_namespace: '*'
  postgres_pod_resources:
    default_cpu_limit: "1"
    default_cpu_request: 100m
    default_memory_limit: 500Mi
    default_memory_request: 100Mi
    min_cpu_limit: 250m
    min_memory_limit: 250Mi
  timeouts:
    patroni_api_check_interval: 1s
    patroni_api_check_timeout: 5s
    pod_deletion_wait_timeout: 10m
    pod_label_wait_timeout: 10m
    ready_wait_interval: 3s
    ready_wait_timeout: 30s
    resource_check_interval: 3s
    resource_check_timeout: 10m
  load_balancer:
    db_hosted_zone: db.example.com
    enable_master_load_balancer: false
    enable_master_pooler_load_balancer: false
    enable_replica_load_balancer: false
    enable_replica_pooler_load_balancer: false
    external_traffic_policy: Cluster
    master_dns_name_format: '{cluster}.{namespace}.{hostedzone}'
    master_legacy_dns_name_format: '{cluster}.{team}.{hostedzone}'
    replica_dns_name_format: '{cluster}-repl.{namespace}.{hostedzone}'
    replica_legacy_dns_name_format: '{cluster}-repl.{team}.{hostedzone}'
  aws_or_gcp:
    aws_region: eu-central-1
    enable_ebs_gp3_migration: false
  logical_backup:
    logical_backup_docker_image: registry.opensource.zalan.do/acid/logical-backup:v1.8.0
    logical_backup_job_prefix: logical-backup-
    logical_backup_provider: s3
    logical_backup_s3_access_key_id: ""
    logical_backup_s3_bucket: my-bucket-url
    logical_backup_s3_endpoint: ""
    logical_backup_s3_region: ""
    logical_backup_s3_retention_time: ""
    logical_backup_s3_secret_access_key: ""
    logical_backup_s3_sse: AES256
    logical_backup_schedule: 30 00 * * *
  debug:
    debug_logging: true
    enable_database_access: true
  teams_api:
    enable_admin_role_for_users: true
    enable_postgres_team_crd: false
    enable_postgres_team_crd_superusers: false
    enable_team_member_deprecation: false
    enable_team_superuser: false
    enable_teams_api: false
    pam_role_name: zalandos
    postgres_superuser_teams:
    - postgres_superusers
    protected_role_names:
    - admin
    - cron_admin
    role_deletion_suffix: _deleted
    team_admin_role: admin
    team_api_role_configuration:
      log_statement: all
  logging_rest_api:
    api_port: 8080
    cluster_history_entries: 1000
    ring_log_lines: 100
  connection_pooler:
    connection_pooler_default_cpu_limit: "1"
    connection_pooler_default_cpu_request: 500m
    connection_pooler_default_memory_limit: 100Mi
    connection_pooler_default_memory_request: 100Mi
    connection_pooler_image: registry.opensource.zalan.do/acid/pgbouncer:master-26
    connection_pooler_max_db_connections: 60
    connection_pooler_mode: transaction
    connection_pooler_number_of_instances: 2
    connection_pooler_schema: pooler
    connection_pooler_user: pooler
---
# Source: galaxy/templates/rabbitmqcluster.yaml
apiVersion: rabbitmq.com/v1beta1
kind: RabbitmqCluster
metadata:
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
    team: galaxy
  name: release-name-rabbitmq-server
  namespace: default
spec:
  terminationGracePeriodSeconds: 90
  persistence:
    storageClassName: 
    storage:
---
# Source: galaxy/charts/rabbitmq/templates/messaging-topology-operator/validating-webhook-configuration.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-2.6.12
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: messaging-topology-operator
    app.kubernetes.io/part-of: rabbitmq
  annotations:
  name: release-name-rabbitmq-messaging-topology-operator-webhook
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRR2R1bjVQVUQ3ZENyZUo2MGxKblpJREFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOeWJYRXRiWE5uTFhSdmNHOXNiMmQ1TFdOaE1CNFhEVEkwTURVeE5UQTVNREF5TUZvWApEVEkxTURVeE5UQTVNREF5TUZvd0hqRWNNQm9HQTFVRUF4TVRjbTF4TFcxelp5MTBiM0J2Ykc5bmVTMWpZVENDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDA0OU9WTmc3c2hFOUZwbWl4WnhYTXgKSUZjMWFQOEdXQ2lqankweUplb1hCSG9IQWNodUdYM2x4cjdCL1REYzE1L040NjFBNGduVFVIREdrNjdOWnhoQwpXUVRQa0ZmZnZHY2grTnBaUDY4eXJDcTVEUUUrZmxpdy93T211R1pFVTc0cXdFTVV2Mng1U0lsSG00WnI1VGh1CktpRE1lL1d3U0ZJTlh6UnV6WmRGZUpoNlNTR3BkT2V1dDU1SFVhTklIeERyOXdLM1hoTUEwMkhkS0hUbFc3RUMKYzZZek16Wkc3Y3l2L01aSUQ2aVJ0QVdRTi8yazd3NlF2K2p6Z1hyTUNSRkFVeUlLS3UxNXlqTE9FN1BQdURtawp4U0h1eTN3UUV3d1hSZDhtUWV0Wk5xdFVoTERxOEJMeEZXemxIRUx6eUhZL0JDS0JKc0ZCSnVLcVpSOUpJeFVDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRRRjJoRWpRTTB5cUt3dDEyVwpVV3pSSENlUjlqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFXVnhaNlNtR2liVW1Jai9PZVAvMjg1QWFmODRyCnpJQjNBdDlRWkhJNDNYeHNKR2tzZTF4WWI5YXF2elAvVFBta2lnandXN2ZESlpXUUt2aXNHVklnTm1JQXlPQngKZDRydUtsQXYzb3RYV3FmbGxCb2NJcEVKdXMrZ1BVd2pjdnRDWVdvYnJXK3NTSGJTWDhMdWtQQVJoSkRHUitRNwpUQUd2VG9LWDQwNWlTaTZDNU9uM3QzcFF5OHMwd1dqUlEwS2I2WjVnQXpOVnZwMlpwcjNxamQxVUFCNmJ4WUlICkVLVWw1Ym9XTW14YzlVWlZmaExWb1dLOFI5TVpvOGxNRU53YmVPZEYyNFNPNVpPcWRsRzExZ09FNnJSYUtsLzgKT1lBeGpXVVRmUUVUV2Z2RGY4UzZzUDFwazlMcXltZDlNNmtvWmlXcGFpZkorVk91QnhITGMxKzlTQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
      service:
        name: release-name-rabbitmq-messaging-topology-operator-webhook
        namespace: "default"
        path: /validate-rabbitmq-com-v1beta1-binding
    failurePolicy: Fail
    name: vbinding.kb.io
    rules:
      - apiGroups:
          - rabbitmq.com
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - bindings
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRR2R1bjVQVUQ3ZENyZUo2MGxKblpJREFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOeWJYRXRiWE5uTFhSdmNHOXNiMmQ1TFdOaE1CNFhEVEkwTURVeE5UQTVNREF5TUZvWApEVEkxTURVeE5UQTVNREF5TUZvd0hqRWNNQm9HQTFVRUF4TVRjbTF4TFcxelp5MTBiM0J2Ykc5bmVTMWpZVENDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDA0OU9WTmc3c2hFOUZwbWl4WnhYTXgKSUZjMWFQOEdXQ2lqankweUplb1hCSG9IQWNodUdYM2x4cjdCL1REYzE1L040NjFBNGduVFVIREdrNjdOWnhoQwpXUVRQa0ZmZnZHY2grTnBaUDY4eXJDcTVEUUUrZmxpdy93T211R1pFVTc0cXdFTVV2Mng1U0lsSG00WnI1VGh1CktpRE1lL1d3U0ZJTlh6UnV6WmRGZUpoNlNTR3BkT2V1dDU1SFVhTklIeERyOXdLM1hoTUEwMkhkS0hUbFc3RUMKYzZZek16Wkc3Y3l2L01aSUQ2aVJ0QVdRTi8yazd3NlF2K2p6Z1hyTUNSRkFVeUlLS3UxNXlqTE9FN1BQdURtawp4U0h1eTN3UUV3d1hSZDhtUWV0Wk5xdFVoTERxOEJMeEZXemxIRUx6eUhZL0JDS0JKc0ZCSnVLcVpSOUpJeFVDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRRRjJoRWpRTTB5cUt3dDEyVwpVV3pSSENlUjlqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFXVnhaNlNtR2liVW1Jai9PZVAvMjg1QWFmODRyCnpJQjNBdDlRWkhJNDNYeHNKR2tzZTF4WWI5YXF2elAvVFBta2lnandXN2ZESlpXUUt2aXNHVklnTm1JQXlPQngKZDRydUtsQXYzb3RYV3FmbGxCb2NJcEVKdXMrZ1BVd2pjdnRDWVdvYnJXK3NTSGJTWDhMdWtQQVJoSkRHUitRNwpUQUd2VG9LWDQwNWlTaTZDNU9uM3QzcFF5OHMwd1dqUlEwS2I2WjVnQXpOVnZwMlpwcjNxamQxVUFCNmJ4WUlICkVLVWw1Ym9XTW14YzlVWlZmaExWb1dLOFI5TVpvOGxNRU53YmVPZEYyNFNPNVpPcWRsRzExZ09FNnJSYUtsLzgKT1lBeGpXVVRmUUVUV2Z2RGY4UzZzUDFwazlMcXltZDlNNmtvWmlXcGFpZkorVk91QnhITGMxKzlTQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
      service:
        name: release-name-rabbitmq-messaging-topology-operator-webhook
        namespace: "default"
        path: /validate-rabbitmq-com-v1beta1-exchange
    failurePolicy: Fail
    name: vexchange.kb.io
    rules:
      - apiGroups:
          - rabbitmq.com
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - exchanges
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRR2R1bjVQVUQ3ZENyZUo2MGxKblpJREFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOeWJYRXRiWE5uTFhSdmNHOXNiMmQ1TFdOaE1CNFhEVEkwTURVeE5UQTVNREF5TUZvWApEVEkxTURVeE5UQTVNREF5TUZvd0hqRWNNQm9HQTFVRUF4TVRjbTF4TFcxelp5MTBiM0J2Ykc5bmVTMWpZVENDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDA0OU9WTmc3c2hFOUZwbWl4WnhYTXgKSUZjMWFQOEdXQ2lqankweUplb1hCSG9IQWNodUdYM2x4cjdCL1REYzE1L040NjFBNGduVFVIREdrNjdOWnhoQwpXUVRQa0ZmZnZHY2grTnBaUDY4eXJDcTVEUUUrZmxpdy93T211R1pFVTc0cXdFTVV2Mng1U0lsSG00WnI1VGh1CktpRE1lL1d3U0ZJTlh6UnV6WmRGZUpoNlNTR3BkT2V1dDU1SFVhTklIeERyOXdLM1hoTUEwMkhkS0hUbFc3RUMKYzZZek16Wkc3Y3l2L01aSUQ2aVJ0QVdRTi8yazd3NlF2K2p6Z1hyTUNSRkFVeUlLS3UxNXlqTE9FN1BQdURtawp4U0h1eTN3UUV3d1hSZDhtUWV0Wk5xdFVoTERxOEJMeEZXemxIRUx6eUhZL0JDS0JKc0ZCSnVLcVpSOUpJeFVDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRRRjJoRWpRTTB5cUt3dDEyVwpVV3pSSENlUjlqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFXVnhaNlNtR2liVW1Jai9PZVAvMjg1QWFmODRyCnpJQjNBdDlRWkhJNDNYeHNKR2tzZTF4WWI5YXF2elAvVFBta2lnandXN2ZESlpXUUt2aXNHVklnTm1JQXlPQngKZDRydUtsQXYzb3RYV3FmbGxCb2NJcEVKdXMrZ1BVd2pjdnRDWVdvYnJXK3NTSGJTWDhMdWtQQVJoSkRHUitRNwpUQUd2VG9LWDQwNWlTaTZDNU9uM3QzcFF5OHMwd1dqUlEwS2I2WjVnQXpOVnZwMlpwcjNxamQxVUFCNmJ4WUlICkVLVWw1Ym9XTW14YzlVWlZmaExWb1dLOFI5TVpvOGxNRU53YmVPZEYyNFNPNVpPcWRsRzExZ09FNnJSYUtsLzgKT1lBeGpXVVRmUUVUV2Z2RGY4UzZzUDFwazlMcXltZDlNNmtvWmlXcGFpZkorVk91QnhITGMxKzlTQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
      service:
        name: release-name-rabbitmq-messaging-topology-operator-webhook
        namespace: "default"
        path: /validate-rabbitmq-com-v1beta1-federation
    failurePolicy: Fail
    name: vfederation.kb.io
    rules:
      - apiGroups:
          - rabbitmq.com
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - federations
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRR2R1bjVQVUQ3ZENyZUo2MGxKblpJREFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOeWJYRXRiWE5uTFhSdmNHOXNiMmQ1TFdOaE1CNFhEVEkwTURVeE5UQTVNREF5TUZvWApEVEkxTURVeE5UQTVNREF5TUZvd0hqRWNNQm9HQTFVRUF4TVRjbTF4TFcxelp5MTBiM0J2Ykc5bmVTMWpZVENDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDA0OU9WTmc3c2hFOUZwbWl4WnhYTXgKSUZjMWFQOEdXQ2lqankweUplb1hCSG9IQWNodUdYM2x4cjdCL1REYzE1L040NjFBNGduVFVIREdrNjdOWnhoQwpXUVRQa0ZmZnZHY2grTnBaUDY4eXJDcTVEUUUrZmxpdy93T211R1pFVTc0cXdFTVV2Mng1U0lsSG00WnI1VGh1CktpRE1lL1d3U0ZJTlh6UnV6WmRGZUpoNlNTR3BkT2V1dDU1SFVhTklIeERyOXdLM1hoTUEwMkhkS0hUbFc3RUMKYzZZek16Wkc3Y3l2L01aSUQ2aVJ0QVdRTi8yazd3NlF2K2p6Z1hyTUNSRkFVeUlLS3UxNXlqTE9FN1BQdURtawp4U0h1eTN3UUV3d1hSZDhtUWV0Wk5xdFVoTERxOEJMeEZXemxIRUx6eUhZL0JDS0JKc0ZCSnVLcVpSOUpJeFVDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRRRjJoRWpRTTB5cUt3dDEyVwpVV3pSSENlUjlqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFXVnhaNlNtR2liVW1Jai9PZVAvMjg1QWFmODRyCnpJQjNBdDlRWkhJNDNYeHNKR2tzZTF4WWI5YXF2elAvVFBta2lnandXN2ZESlpXUUt2aXNHVklnTm1JQXlPQngKZDRydUtsQXYzb3RYV3FmbGxCb2NJcEVKdXMrZ1BVd2pjdnRDWVdvYnJXK3NTSGJTWDhMdWtQQVJoSkRHUitRNwpUQUd2VG9LWDQwNWlTaTZDNU9uM3QzcFF5OHMwd1dqUlEwS2I2WjVnQXpOVnZwMlpwcjNxamQxVUFCNmJ4WUlICkVLVWw1Ym9XTW14YzlVWlZmaExWb1dLOFI5TVpvOGxNRU53YmVPZEYyNFNPNVpPcWRsRzExZ09FNnJSYUtsLzgKT1lBeGpXVVRmUUVUV2Z2RGY4UzZzUDFwazlMcXltZDlNNmtvWmlXcGFpZkorVk91QnhITGMxKzlTQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
      service:
        name: release-name-rabbitmq-messaging-topology-operator-webhook
        namespace: "default"
        path: /validate-rabbitmq-com-v1alpha1-superstream
    failurePolicy: Fail
    name: vsuperstream.kb.io
    rules:
      - apiGroups:
          - rabbitmq.com
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - superstreams
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRR2R1bjVQVUQ3ZENyZUo2MGxKblpJREFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOeWJYRXRiWE5uTFhSdmNHOXNiMmQ1TFdOaE1CNFhEVEkwTURVeE5UQTVNREF5TUZvWApEVEkxTURVeE5UQTVNREF5TUZvd0hqRWNNQm9HQTFVRUF4TVRjbTF4TFcxelp5MTBiM0J2Ykc5bmVTMWpZVENDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDA0OU9WTmc3c2hFOUZwbWl4WnhYTXgKSUZjMWFQOEdXQ2lqankweUplb1hCSG9IQWNodUdYM2x4cjdCL1REYzE1L040NjFBNGduVFVIREdrNjdOWnhoQwpXUVRQa0ZmZnZHY2grTnBaUDY4eXJDcTVEUUUrZmxpdy93T211R1pFVTc0cXdFTVV2Mng1U0lsSG00WnI1VGh1CktpRE1lL1d3U0ZJTlh6UnV6WmRGZUpoNlNTR3BkT2V1dDU1SFVhTklIeERyOXdLM1hoTUEwMkhkS0hUbFc3RUMKYzZZek16Wkc3Y3l2L01aSUQ2aVJ0QVdRTi8yazd3NlF2K2p6Z1hyTUNSRkFVeUlLS3UxNXlqTE9FN1BQdURtawp4U0h1eTN3UUV3d1hSZDhtUWV0Wk5xdFVoTERxOEJMeEZXemxIRUx6eUhZL0JDS0JKc0ZCSnVLcVpSOUpJeFVDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRRRjJoRWpRTTB5cUt3dDEyVwpVV3pSSENlUjlqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFXVnhaNlNtR2liVW1Jai9PZVAvMjg1QWFmODRyCnpJQjNBdDlRWkhJNDNYeHNKR2tzZTF4WWI5YXF2elAvVFBta2lnandXN2ZESlpXUUt2aXNHVklnTm1JQXlPQngKZDRydUtsQXYzb3RYV3FmbGxCb2NJcEVKdXMrZ1BVd2pjdnRDWVdvYnJXK3NTSGJTWDhMdWtQQVJoSkRHUitRNwpUQUd2VG9LWDQwNWlTaTZDNU9uM3QzcFF5OHMwd1dqUlEwS2I2WjVnQXpOVnZwMlpwcjNxamQxVUFCNmJ4WUlICkVLVWw1Ym9XTW14YzlVWlZmaExWb1dLOFI5TVpvOGxNRU53YmVPZEYyNFNPNVpPcWRsRzExZ09FNnJSYUtsLzgKT1lBeGpXVVRmUUVUV2Z2RGY4UzZzUDFwazlMcXltZDlNNmtvWmlXcGFpZkorVk91QnhITGMxKzlTQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
      service:
        name: release-name-rabbitmq-messaging-topology-operator-webhook
        namespace: "default"
        path: /validate-rabbitmq-com-v1beta1-permission
    failurePolicy: Fail
    name: vpermission.kb.io
    rules:
      - apiGroups:
          - rabbitmq.com
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - permissions
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRR2R1bjVQVUQ3ZENyZUo2MGxKblpJREFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOeWJYRXRiWE5uTFhSdmNHOXNiMmQ1TFdOaE1CNFhEVEkwTURVeE5UQTVNREF5TUZvWApEVEkxTURVeE5UQTVNREF5TUZvd0hqRWNNQm9HQTFVRUF4TVRjbTF4TFcxelp5MTBiM0J2Ykc5bmVTMWpZVENDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDA0OU9WTmc3c2hFOUZwbWl4WnhYTXgKSUZjMWFQOEdXQ2lqankweUplb1hCSG9IQWNodUdYM2x4cjdCL1REYzE1L040NjFBNGduVFVIREdrNjdOWnhoQwpXUVRQa0ZmZnZHY2grTnBaUDY4eXJDcTVEUUUrZmxpdy93T211R1pFVTc0cXdFTVV2Mng1U0lsSG00WnI1VGh1CktpRE1lL1d3U0ZJTlh6UnV6WmRGZUpoNlNTR3BkT2V1dDU1SFVhTklIeERyOXdLM1hoTUEwMkhkS0hUbFc3RUMKYzZZek16Wkc3Y3l2L01aSUQ2aVJ0QVdRTi8yazd3NlF2K2p6Z1hyTUNSRkFVeUlLS3UxNXlqTE9FN1BQdURtawp4U0h1eTN3UUV3d1hSZDhtUWV0Wk5xdFVoTERxOEJMeEZXemxIRUx6eUhZL0JDS0JKc0ZCSnVLcVpSOUpJeFVDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRRRjJoRWpRTTB5cUt3dDEyVwpVV3pSSENlUjlqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFXVnhaNlNtR2liVW1Jai9PZVAvMjg1QWFmODRyCnpJQjNBdDlRWkhJNDNYeHNKR2tzZTF4WWI5YXF2elAvVFBta2lnandXN2ZESlpXUUt2aXNHVklnTm1JQXlPQngKZDRydUtsQXYzb3RYV3FmbGxCb2NJcEVKdXMrZ1BVd2pjdnRDWVdvYnJXK3NTSGJTWDhMdWtQQVJoSkRHUitRNwpUQUd2VG9LWDQwNWlTaTZDNU9uM3QzcFF5OHMwd1dqUlEwS2I2WjVnQXpOVnZwMlpwcjNxamQxVUFCNmJ4WUlICkVLVWw1Ym9XTW14YzlVWlZmaExWb1dLOFI5TVpvOGxNRU53YmVPZEYyNFNPNVpPcWRsRzExZ09FNnJSYUtsLzgKT1lBeGpXVVRmUUVUV2Z2RGY4UzZzUDFwazlMcXltZDlNNmtvWmlXcGFpZkorVk91QnhITGMxKzlTQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
      service:
        name: release-name-rabbitmq-messaging-topology-operator-webhook
        namespace: "default"
        path: /validate-rabbitmq-com-v1beta1-policy
    failurePolicy: Fail
    name: vpolicy.kb.io
    rules:
      - apiGroups:
          - rabbitmq.com
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - policies
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRR2R1bjVQVUQ3ZENyZUo2MGxKblpJREFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOeWJYRXRiWE5uTFhSdmNHOXNiMmQ1TFdOaE1CNFhEVEkwTURVeE5UQTVNREF5TUZvWApEVEkxTURVeE5UQTVNREF5TUZvd0hqRWNNQm9HQTFVRUF4TVRjbTF4TFcxelp5MTBiM0J2Ykc5bmVTMWpZVENDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDA0OU9WTmc3c2hFOUZwbWl4WnhYTXgKSUZjMWFQOEdXQ2lqankweUplb1hCSG9IQWNodUdYM2x4cjdCL1REYzE1L040NjFBNGduVFVIREdrNjdOWnhoQwpXUVRQa0ZmZnZHY2grTnBaUDY4eXJDcTVEUUUrZmxpdy93T211R1pFVTc0cXdFTVV2Mng1U0lsSG00WnI1VGh1CktpRE1lL1d3U0ZJTlh6UnV6WmRGZUpoNlNTR3BkT2V1dDU1SFVhTklIeERyOXdLM1hoTUEwMkhkS0hUbFc3RUMKYzZZek16Wkc3Y3l2L01aSUQ2aVJ0QVdRTi8yazd3NlF2K2p6Z1hyTUNSRkFVeUlLS3UxNXlqTE9FN1BQdURtawp4U0h1eTN3UUV3d1hSZDhtUWV0Wk5xdFVoTERxOEJMeEZXemxIRUx6eUhZL0JDS0JKc0ZCSnVLcVpSOUpJeFVDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRRRjJoRWpRTTB5cUt3dDEyVwpVV3pSSENlUjlqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFXVnhaNlNtR2liVW1Jai9PZVAvMjg1QWFmODRyCnpJQjNBdDlRWkhJNDNYeHNKR2tzZTF4WWI5YXF2elAvVFBta2lnandXN2ZESlpXUUt2aXNHVklnTm1JQXlPQngKZDRydUtsQXYzb3RYV3FmbGxCb2NJcEVKdXMrZ1BVd2pjdnRDWVdvYnJXK3NTSGJTWDhMdWtQQVJoSkRHUitRNwpUQUd2VG9LWDQwNWlTaTZDNU9uM3QzcFF5OHMwd1dqUlEwS2I2WjVnQXpOVnZwMlpwcjNxamQxVUFCNmJ4WUlICkVLVWw1Ym9XTW14YzlVWlZmaExWb1dLOFI5TVpvOGxNRU53YmVPZEYyNFNPNVpPcWRsRzExZ09FNnJSYUtsLzgKT1lBeGpXVVRmUUVUV2Z2RGY4UzZzUDFwazlMcXltZDlNNmtvWmlXcGFpZkorVk91QnhITGMxKzlTQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
      service:
        name: release-name-rabbitmq-messaging-topology-operator-webhook
        namespace: "default"
        path: /validate-rabbitmq-com-v1beta1-queue
    failurePolicy: Fail
    name: vqueue.kb.io
    rules:
      - apiGroups:
          - rabbitmq.com
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - queues
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRR2R1bjVQVUQ3ZENyZUo2MGxKblpJREFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOeWJYRXRiWE5uTFhSdmNHOXNiMmQ1TFdOaE1CNFhEVEkwTURVeE5UQTVNREF5TUZvWApEVEkxTURVeE5UQTVNREF5TUZvd0hqRWNNQm9HQTFVRUF4TVRjbTF4TFcxelp5MTBiM0J2Ykc5bmVTMWpZVENDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDA0OU9WTmc3c2hFOUZwbWl4WnhYTXgKSUZjMWFQOEdXQ2lqankweUplb1hCSG9IQWNodUdYM2x4cjdCL1REYzE1L040NjFBNGduVFVIREdrNjdOWnhoQwpXUVRQa0ZmZnZHY2grTnBaUDY4eXJDcTVEUUUrZmxpdy93T211R1pFVTc0cXdFTVV2Mng1U0lsSG00WnI1VGh1CktpRE1lL1d3U0ZJTlh6UnV6WmRGZUpoNlNTR3BkT2V1dDU1SFVhTklIeERyOXdLM1hoTUEwMkhkS0hUbFc3RUMKYzZZek16Wkc3Y3l2L01aSUQ2aVJ0QVdRTi8yazd3NlF2K2p6Z1hyTUNSRkFVeUlLS3UxNXlqTE9FN1BQdURtawp4U0h1eTN3UUV3d1hSZDhtUWV0Wk5xdFVoTERxOEJMeEZXemxIRUx6eUhZL0JDS0JKc0ZCSnVLcVpSOUpJeFVDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRRRjJoRWpRTTB5cUt3dDEyVwpVV3pSSENlUjlqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFXVnhaNlNtR2liVW1Jai9PZVAvMjg1QWFmODRyCnpJQjNBdDlRWkhJNDNYeHNKR2tzZTF4WWI5YXF2elAvVFBta2lnandXN2ZESlpXUUt2aXNHVklnTm1JQXlPQngKZDRydUtsQXYzb3RYV3FmbGxCb2NJcEVKdXMrZ1BVd2pjdnRDWVdvYnJXK3NTSGJTWDhMdWtQQVJoSkRHUitRNwpUQUd2VG9LWDQwNWlTaTZDNU9uM3QzcFF5OHMwd1dqUlEwS2I2WjVnQXpOVnZwMlpwcjNxamQxVUFCNmJ4WUlICkVLVWw1Ym9XTW14YzlVWlZmaExWb1dLOFI5TVpvOGxNRU53YmVPZEYyNFNPNVpPcWRsRzExZ09FNnJSYUtsLzgKT1lBeGpXVVRmUUVUV2Z2RGY4UzZzUDFwazlMcXltZDlNNmtvWmlXcGFpZkorVk91QnhITGMxKzlTQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
      service:
        name: release-name-rabbitmq-messaging-topology-operator-webhook
        namespace: "default"
        path: /validate-rabbitmq-com-v1beta1-schemareplication
    failurePolicy: Fail
    name: vschemareplication.kb.io
    rules:
      - apiGroups:
          - rabbitmq.com
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - schemareplications
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRR2R1bjVQVUQ3ZENyZUo2MGxKblpJREFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOeWJYRXRiWE5uTFhSdmNHOXNiMmQ1TFdOaE1CNFhEVEkwTURVeE5UQTVNREF5TUZvWApEVEkxTURVeE5UQTVNREF5TUZvd0hqRWNNQm9HQTFVRUF4TVRjbTF4TFcxelp5MTBiM0J2Ykc5bmVTMWpZVENDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDA0OU9WTmc3c2hFOUZwbWl4WnhYTXgKSUZjMWFQOEdXQ2lqankweUplb1hCSG9IQWNodUdYM2x4cjdCL1REYzE1L040NjFBNGduVFVIREdrNjdOWnhoQwpXUVRQa0ZmZnZHY2grTnBaUDY4eXJDcTVEUUUrZmxpdy93T211R1pFVTc0cXdFTVV2Mng1U0lsSG00WnI1VGh1CktpRE1lL1d3U0ZJTlh6UnV6WmRGZUpoNlNTR3BkT2V1dDU1SFVhTklIeERyOXdLM1hoTUEwMkhkS0hUbFc3RUMKYzZZek16Wkc3Y3l2L01aSUQ2aVJ0QVdRTi8yazd3NlF2K2p6Z1hyTUNSRkFVeUlLS3UxNXlqTE9FN1BQdURtawp4U0h1eTN3UUV3d1hSZDhtUWV0Wk5xdFVoTERxOEJMeEZXemxIRUx6eUhZL0JDS0JKc0ZCSnVLcVpSOUpJeFVDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRRRjJoRWpRTTB5cUt3dDEyVwpVV3pSSENlUjlqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFXVnhaNlNtR2liVW1Jai9PZVAvMjg1QWFmODRyCnpJQjNBdDlRWkhJNDNYeHNKR2tzZTF4WWI5YXF2elAvVFBta2lnandXN2ZESlpXUUt2aXNHVklnTm1JQXlPQngKZDRydUtsQXYzb3RYV3FmbGxCb2NJcEVKdXMrZ1BVd2pjdnRDWVdvYnJXK3NTSGJTWDhMdWtQQVJoSkRHUitRNwpUQUd2VG9LWDQwNWlTaTZDNU9uM3QzcFF5OHMwd1dqUlEwS2I2WjVnQXpOVnZwMlpwcjNxamQxVUFCNmJ4WUlICkVLVWw1Ym9XTW14YzlVWlZmaExWb1dLOFI5TVpvOGxNRU53YmVPZEYyNFNPNVpPcWRsRzExZ09FNnJSYUtsLzgKT1lBeGpXVVRmUUVUV2Z2RGY4UzZzUDFwazlMcXltZDlNNmtvWmlXcGFpZkorVk91QnhITGMxKzlTQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
      service:
        name: release-name-rabbitmq-messaging-topology-operator-webhook
        namespace: "default"
        path: /validate-rabbitmq-com-v1beta1-shovel
    failurePolicy: Fail
    name: vshovel.kb.io
    rules:
      - apiGroups:
          - rabbitmq.com
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - shovels
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRR2R1bjVQVUQ3ZENyZUo2MGxKblpJREFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOeWJYRXRiWE5uTFhSdmNHOXNiMmQ1TFdOaE1CNFhEVEkwTURVeE5UQTVNREF5TUZvWApEVEkxTURVeE5UQTVNREF5TUZvd0hqRWNNQm9HQTFVRUF4TVRjbTF4TFcxelp5MTBiM0J2Ykc5bmVTMWpZVENDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDA0OU9WTmc3c2hFOUZwbWl4WnhYTXgKSUZjMWFQOEdXQ2lqankweUplb1hCSG9IQWNodUdYM2x4cjdCL1REYzE1L040NjFBNGduVFVIREdrNjdOWnhoQwpXUVRQa0ZmZnZHY2grTnBaUDY4eXJDcTVEUUUrZmxpdy93T211R1pFVTc0cXdFTVV2Mng1U0lsSG00WnI1VGh1CktpRE1lL1d3U0ZJTlh6UnV6WmRGZUpoNlNTR3BkT2V1dDU1SFVhTklIeERyOXdLM1hoTUEwMkhkS0hUbFc3RUMKYzZZek16Wkc3Y3l2L01aSUQ2aVJ0QVdRTi8yazd3NlF2K2p6Z1hyTUNSRkFVeUlLS3UxNXlqTE9FN1BQdURtawp4U0h1eTN3UUV3d1hSZDhtUWV0Wk5xdFVoTERxOEJMeEZXemxIRUx6eUhZL0JDS0JKc0ZCSnVLcVpSOUpJeFVDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRRRjJoRWpRTTB5cUt3dDEyVwpVV3pSSENlUjlqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFXVnhaNlNtR2liVW1Jai9PZVAvMjg1QWFmODRyCnpJQjNBdDlRWkhJNDNYeHNKR2tzZTF4WWI5YXF2elAvVFBta2lnandXN2ZESlpXUUt2aXNHVklnTm1JQXlPQngKZDRydUtsQXYzb3RYV3FmbGxCb2NJcEVKdXMrZ1BVd2pjdnRDWVdvYnJXK3NTSGJTWDhMdWtQQVJoSkRHUitRNwpUQUd2VG9LWDQwNWlTaTZDNU9uM3QzcFF5OHMwd1dqUlEwS2I2WjVnQXpOVnZwMlpwcjNxamQxVUFCNmJ4WUlICkVLVWw1Ym9XTW14YzlVWlZmaExWb1dLOFI5TVpvOGxNRU53YmVPZEYyNFNPNVpPcWRsRzExZ09FNnJSYUtsLzgKT1lBeGpXVVRmUUVUV2Z2RGY4UzZzUDFwazlMcXltZDlNNmtvWmlXcGFpZkorVk91QnhITGMxKzlTQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
      service:
        name: release-name-rabbitmq-messaging-topology-operator-webhook
        namespace: "default"
        path: /validate-rabbitmq-com-v1beta1-user
    failurePolicy: Fail
    name: vuser.kb.io
    rules:
      - apiGroups:
          - rabbitmq.com
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - users
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRR2R1bjVQVUQ3ZENyZUo2MGxKblpJREFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOeWJYRXRiWE5uTFhSdmNHOXNiMmQ1TFdOaE1CNFhEVEkwTURVeE5UQTVNREF5TUZvWApEVEkxTURVeE5UQTVNREF5TUZvd0hqRWNNQm9HQTFVRUF4TVRjbTF4TFcxelp5MTBiM0J2Ykc5bmVTMWpZVENDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDA0OU9WTmc3c2hFOUZwbWl4WnhYTXgKSUZjMWFQOEdXQ2lqankweUplb1hCSG9IQWNodUdYM2x4cjdCL1REYzE1L040NjFBNGduVFVIREdrNjdOWnhoQwpXUVRQa0ZmZnZHY2grTnBaUDY4eXJDcTVEUUUrZmxpdy93T211R1pFVTc0cXdFTVV2Mng1U0lsSG00WnI1VGh1CktpRE1lL1d3U0ZJTlh6UnV6WmRGZUpoNlNTR3BkT2V1dDU1SFVhTklIeERyOXdLM1hoTUEwMkhkS0hUbFc3RUMKYzZZek16Wkc3Y3l2L01aSUQ2aVJ0QVdRTi8yazd3NlF2K2p6Z1hyTUNSRkFVeUlLS3UxNXlqTE9FN1BQdURtawp4U0h1eTN3UUV3d1hSZDhtUWV0Wk5xdFVoTERxOEJMeEZXemxIRUx6eUhZL0JDS0JKc0ZCSnVLcVpSOUpJeFVDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRRRjJoRWpRTTB5cUt3dDEyVwpVV3pSSENlUjlqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFXVnhaNlNtR2liVW1Jai9PZVAvMjg1QWFmODRyCnpJQjNBdDlRWkhJNDNYeHNKR2tzZTF4WWI5YXF2elAvVFBta2lnandXN2ZESlpXUUt2aXNHVklnTm1JQXlPQngKZDRydUtsQXYzb3RYV3FmbGxCb2NJcEVKdXMrZ1BVd2pjdnRDWVdvYnJXK3NTSGJTWDhMdWtQQVJoSkRHUitRNwpUQUd2VG9LWDQwNWlTaTZDNU9uM3QzcFF5OHMwd1dqUlEwS2I2WjVnQXpOVnZwMlpwcjNxamQxVUFCNmJ4WUlICkVLVWw1Ym9XTW14YzlVWlZmaExWb1dLOFI5TVpvOGxNRU53YmVPZEYyNFNPNVpPcWRsRzExZ09FNnJSYUtsLzgKT1lBeGpXVVRmUUVUV2Z2RGY4UzZzUDFwazlMcXltZDlNNmtvWmlXcGFpZkorVk91QnhITGMxKzlTQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
      service:
        name: release-name-rabbitmq-messaging-topology-operator-webhook
        namespace: "default"
        path: /validate-rabbitmq-com-v1beta1-vhost
    failurePolicy: Fail
    name: vvhost.kb.io
    rules:
      - apiGroups:
          - rabbitmq.com
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - vhosts
    sideEffects: None
---
# Source: galaxy/templates/hapostgres/pgcluster.yaml
apiVersion: acid.zalan.do/v1
kind: postgresql
metadata:
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
    team: galaxy
  name: galaxy-release-name-postgres
  namespace: default
spec:
  allowedSourceRanges: []
  databases:
    galaxy: galaxydbuser
  numberOfInstances: 1
  teamId: galaxy
  users:
    galaxydbuser: [ ]
  postgresql:
    version: '13'
  volume:
    size: 10Gi
---
# Source: galaxy/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-galaxy-test-connection"
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['release-name-galaxy:8000']
  restartPolicy: Never
---
# Source: galaxy/templates/hook-cvmfs-fix.yaml
# Include the code you want to run when both conditions are met
apiVersion: batch/v1
kind: Job
metadata:
  name: "release-name-post-install-cvmfs-fix-job"
  labels:
    helm.sh/chart: galaxy-5.14.0
    app.kubernetes.io/name: galaxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "24.0.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "10"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  ttlSecondsAfterFinished: 120
  template:
    metadata:
      name: "release-name-post-install-cvmfs-fix-job"
      labels:
        helm.sh/chart: galaxy-5.14.0
        app.kubernetes.io/name: galaxy
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "24.0.2"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: release-name-galaxy
      securityContext:
        fsGroup: 101
      restartPolicy: Never
      containers:
      - name: post-install-kubectl
        image: bitnami/kubectl
        command:
          - "sh"
          - "/script/cvmfs-fix.sh"
        volumeMounts:
            - name: kubectl-script
              mountPath: "/script"
      volumes:
      - name: kubectl-script
        configMap:
          name: "release-name-configmap-cvmfs-fix"
