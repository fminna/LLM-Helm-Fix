---
# Source: cgrc/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-cgrc
  labels:
    app.kubernetes.io/name: cgrc
    app.kubernetes.io/part-of: cgrc
    helm.sh/chart: cgrc-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  
  database-url: "cGdzcWw6Ly9leGFtcGxlOiFDaGFuZ2VNZSFAcmVsZWFzZS1uYW1lLXBvc3RncmVzcWwvYXBpP3NlcnZlclZlcnNpb249MTA="
  
  secret: "Wkt4VDhES1V1WTlqS0pYZ2YyTjh2WjMxa2JGSmJuRWltbmxSSmxxag=="
  mercure-jwt-secret: ""
  app_commonground_id: "OTMyOWQ4ZDAtMWQ1ZS00MzNjLWJiNDctNjk5MTA1M2M3ZmNi"
  app_commonground_key: "OTMyOWQ4ZDAtMWQ1ZS00MzNjLWJiNDctNjk5MTA1M2M3ZmNi"
  app_application_key: "NDVjMWE0YjYtNTlkMy00YTZlLTg2YmYtODhhODcyZjM1ODQ1"
  app_user_key: "NzlkNWIxNGMtNzBhYi00MWZiLWFjMDItOTE3ZTMyODg4NzBi"
  auth_provider_user: "aHR0cHM6Ly91Yy5sYXJwaW5nLmV1"
  auth_provider_application: "aHR0cHM6Ly9hYy5sYXJwaW5nLmV1"
---
# Source: cgrc/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-cgrc
  #namespace: dev
  labels:
    app.kubernetes.io/name: cgrc
    app.kubernetes.io/part-of: cgrc
    helm.sh/chart: cgrc-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  project_name: "cgrc"
  app-name: "cgrc"
  app-title: "Common Ground Registratie Component"
  app-version: "V.0.1"
  
  app-repro: "https://github.com/ConductionNL/Commongroundregistratiecomponent"
  app-demo: "cgrc.zaakonline.nl"
  app-container: "https://hub.docker.com/repository/docker/conduction/cgrc-php"
  app-domain: "dev" 
  app-domains-json: "null"
  app-description: "&#039;Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.&#039;"
  app-type: "component"
  app-web: "false"
  
  app-auth: "false"
  app-audittrail: "false"
  app-notification: "false"
  app-health: "false"
  app-archive: "false"
  
  organization-name: "Conduction"
  organization-email: "info@conduction.nl"
  organization-country: "Netherlands"
  organization-state: "Noord-Holland"
  organization-locality: "Amsterdam"
  organization-unit: "Common-Ground"
  
  cache: "1"
  env: "dev"
  debug: "1"
  cors-allow-origin: "[*]"
  trusted-proxies: 10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
  trusted-hosts: "^.+$"
  php-service: cgrc-dev-php  
  varnish-url: http://varnish
  mercure-publish-url: "http://mercure/hub"
  mercure-subscribe-url: "https://mercure.example.com/hub"
---
# Source: cgrc/templates/api-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cgrc
  labels:
    app.kubernetes.io/name: cgrc
    app.kubernetes.io/part-of: cgrc
    helm.sh/chart: cgrc-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
    - port: 443
      targetPort: 80
      protocol: TCP
      name: https
  selector:
    app.kubernetes.io/name: cgrc-nginx
    app.kubernetes.io/instance: release-name
---
# Source: cgrc/templates/php-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cgrc-php
  labels:
    app.kubernetes.io/name: cgrc-php
    app.kubernetes.io/part-of: cgrc
    helm.sh/chart: cgrc-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9000
  selector:
    app.kubernetes.io/name: cgrc-php
    app.kubernetes.io/instance: release-name
---
# Source: cgrc/templates/varnish-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cgrc-varnish
  labels:
    app.kubernetes.io/name: cgrc-varnish
    app.kubernetes.io/part-of: cgrc
    helm.sh/chart: cgrc-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app.kubernetes.io/name: cgrc-varnish
    app.kubernetes.io/instance: release-name
---
# Source: cgrc/templates/api-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cgrc-nginx
  labels:
    app.kubernetes.io/name: cgrc-nginx
    app.kubernetes.io/part-of: cgrc
    helm.sh/chart: cgrc-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
      matchLabels:
          app.kubernetes.io/name: cgrc-nginx
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cgrc-nginx
        app.kubernetes.io/part-of: cgrc
        helm.sh/chart: cgrc-0.1.0
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
    spec:
      containers:
        - name: cgrc-nginx
          image: "docker.io/conduction/cgrc-nginx:dev"
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          env:
            - name: PHP_SERVICE
              value: cgrc-php
            - name: NGINX_HOST
              value: cgrc-php
            - name: BACKENDS
              value: cgrc-php
          resources:
            {}
---
# Source: cgrc/templates/php-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cgrc-php
  labels:
    app.kubernetes.io/name: cgrc-php
    app.kubernetes.io/part-of: cgrc
    helm.sh/chart: cgrc-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: cgrc-php
  replicas: 2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cgrc-php
        app.kubernetes.io/part-of: cgrc
        helm.sh/chart: cgrc-0.1.0
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
    spec:
      containers:
        - name: cgrc-php
          image: "docker.io/conduction/cgrc-php:dev"
          imagePullPolicy: Always
          ports:
            - containerPort: 9000
          env:
            - name: JWT_SECRET_KEY
              value: '%kernel.project_dir%/config/jwt/private.pem'
            - name: JWT_PUBLIC_KEY
              value: '%kernel.project_dir%/config/jwt/public.pem'
            - name: JWT_PASSPHRASE
              value: 'bafe1dc254b45471754c221081f874aa' #@todo this should be a variable
            - name: TRUSTED_HOSTS
              valueFrom:
                configMapKeyRef:
                  name: release-name-cgrc
                  key: trusted-hosts
            - name: TRUSTED_PROXIES
              valueFrom:
                configMapKeyRef:
                  name: release-name-cgrc
                  key: trusted-proxies
            - name: APP_NAME
              valueFrom:
                configMapKeyRef:
                  name: release-name-cgrc
                  key: app-name
            - name: APP_TITLE
              valueFrom:
                configMapKeyRef:
                  name: release-name-cgrc
                  key: app-title
            - name: APP_DESCRIPTION
              valueFrom:
                configMapKeyRef:
                  name: release-name-cgrc
                  key: app-description
            - name: APP_VERSION
              valueFrom:
                configMapKeyRef:
                  name: release-name-cgrc
                  key: app-version
            - name: APP_ENV
              valueFrom:
                configMapKeyRef:
                  name: release-name-cgrc
                  key: env
            - name: APP_DEBUG
              valueFrom:
                configMapKeyRef:
                  name: release-name-cgrc
                  key: debug
            - name: APP_TYPE
              valueFrom:
                  configMapKeyRef:
                      name: release-name-cgrc
                      key: app-type
            - name: APP_WEB
              valueFrom:
                  configMapKeyRef:
                      name: release-name-cgrc
                      key: app-web
            
            - name: APP_DEMO
              valueFrom:
                configMapKeyRef:
                  name: release-name-cgrc
                  key: app-demo
            - name: APP_DOMAINS
              valueFrom:
                configMapKeyRef:
                  name: release-name-cgrc
                  key: app-domains-json

            - name: APP_REPRO
              valueFrom:
                  configMapKeyRef:
                      name: release-name-cgrc
                      key: app-repro
            - name: APP_CONTAINER
              valueFrom:
                  configMapKeyRef:
                      name: release-name-cgrc
                      key: app-container
            - name: APP_DOMAIN
              valueFrom:
                  configMapKeyRef:
                      name: release-name-cgrc
                      key: app-domain
            - name: APP_CASH
              valueFrom:
                  configMapKeyRef:
                      name: release-name-cgrc
                      key: cache      
            # organization
            - name: ORGANIZATION_NAME
              valueFrom:
                configMapKeyRef:
                  name: release-name-cgrc
                  key: organization-name
            - name: ORGANIZATION_EMAIL_ADDRESS
              valueFrom:
                configMapKeyRef:
                  name: release-name-cgrc
                  key: organization-email
            - name: ORGANIZATION_COUNTRY_NAME
              valueFrom:
                configMapKeyRef:
                  name: release-name-cgrc
                  key: organization-country
            - name: ORGANIZATION_STATE
              valueFrom:
                configMapKeyRef:
                  name: release-name-cgrc
                  key: organization-state
            - name: ORGANIZATION_LOCALITY
              valueFrom:
                configMapKeyRef:
                  name: release-name-cgrc
                  key: organization-locality
            - name: ORGANIZATION_UNIT_NAME
              valueFrom:
                configMapKeyRef:
                  name: release-name-cgrc
                  key: organization-unit
            # config
            - name: AUTH_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: release-name-cgrc
                  key: app-auth
            - name: AUDITTRAIL_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: release-name-cgrc
                  key: app-audittrail
            - name: NOTIFICATION_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: release-name-cgrc
                  key: app-notification
            - name: HEALTH_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: release-name-cgrc
                  key: app-health
            - name: ARCHIVE_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: release-name-cgrc
                  key: app-archive
            
            # bla bla      
            - name: CORS_ALLOW_ORIGIN
              valueFrom:
                configMapKeyRef:
                  name: release-name-cgrc
                  key: cors-allow-origin
            - name: VARNISH_URL
              value: cgrc-varnish
            - name: APP_SECRET
              valueFrom:
                secretKeyRef:
                  name: release-name-cgrc
                  key: secret
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: release-name-cgrc
                  key: database-url
            - name: MERCURE_PUBLISH_URL
              valueFrom:
                configMapKeyRef:
                  name: release-name-cgrc
                  key: mercure-publish-url
            - name: MERCURE_SUBSCRIBE_URL
              valueFrom:
                configMapKeyRef:
                  name: release-name-cgrc
                  key: mercure-subscribe-url
            - name: MERCURE_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: release-name-cgrc
                  key: mercure-jwt-secret
            - name: APP_COMMONGROUND_ID
              valueFrom:
                secretKeyRef:
                  name: release-name-cgrc
                  key: app_commonground_id
            - name: APP_COMMONGROUND_KEY
              valueFrom:
                secretKeyRef:
                  name: release-name-cgrc
                  key: app_commonground_key
            - name: APP_APPLICATION_KEY
              valueFrom:
                secretKeyRef:
                  name: release-name-cgrc
                  key: app_application_key
            - name: APP_USER_KEY
              valueFrom:
                secretKeyRef:
                  name: release-name-cgrc
                  key: app_user_key
          resources:
            {}
---
# Source: cgrc/templates/varnish-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cgrc-varnish
  labels:
    app.kubernetes.io/name: cgrc-varnish
    app.kubernetes.io/part-of: cgrc
    helm.sh/chart: cgrc-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: cgrc-varnish
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cgrc-varnish
        helm.sh/chart: cgrc-0.1.0
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
    spec:
      containers:
        - name: cgrc-varnish
          image: "docker.io/conduction/cgrc-varnish:dev"
          imagePullPolicy: Always
          env:
            - name: BACKENDS
              value: cgrc-php
          #command: ["varnishd"]
          #args: ["-F", "-f", "/usr/local/etc/varnish/default.vcl", "-p", "http_resp_hdr_len=65536", "-p", "http_resp_size=98304"]
          ports:
            - containerPort: 80
          resources:
            {}
