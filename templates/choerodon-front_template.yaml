---
# Source: choerodon-front/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-choerodon-front
  namespace: default
  labels:
    app.kubernetes.io/name: choerodon-front
    helm.sh/chart: choerodon-front-2.0.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  
  ports:
    - name: server
      port: 8080
      targetPort: server
      nodePort: null
  selector:
    app.kubernetes.io/name: choerodon-front
    app.kubernetes.io/instance: release-name
---
# Source: choerodon-front/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-choerodon-front
  namespace: default
  labels:
    app.kubernetes.io/name: choerodon-front
    helm.sh/chart: choerodon-front-2.0.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: choerodon-front
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: choerodon-front
        helm.sh/chart: choerodon-front-2.0.1
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
    spec:
      
      enableServiceLinks: false
      automountServiceAccountToken: false
      serviceAccountName: default
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: choerodon-front
                    app.kubernetes.io/instance: release-name
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 101
      initContainers:
        - name: server-volume
          image:  registry.cn-shanghai.aliyuncs.com/c7n/choerodon-front:2.0.1
          imagePullPolicy: "IfNotPresent"
          command:
            - /bin/sh
            - -ecx
            - |
              cp -rfp /usr/share/nginx/html /opt/choerodon
              cp -rfp /etc/nginx/conf.d/default.conf /opt/choerodon
          securityContext:
            runAsUser: 101
          volumeMounts:
            - name: volume
              mountPath: /opt/choerodon
      containers:
        - name: "choerodon-front"
          image: registry.cn-shanghai.aliyuncs.com/c7n/frontbase:0.10.0
          imagePullPolicy: "IfNotPresent"
          workingDir: /usr/share/nginx/html
          securityContext:
            runAsUser: 101
          command: 
          - /bin/sh
          - -ecx
          - |
            /usr/share/nginx/html/env.sh
            nginx -g "daemon off;"
          env:
            
            - name: "API_HOST"
              value: "http://gateway.example.com"
            - name: "BUSINESS"
              value: "true"
            - name: "CLIENT_ID"
              value: "choerodon"
            - name: "COOKIE_SERVER"
              value: "http://choerodon.example.com"
            - name: "DEVOPS_HOST"
              value: "ws://devops.choerodon.example.com"
            - name: "DEVOPS_WEBSOCKET_SECRET_KEY"
              value: "example"
            - name: "EMAIL_BLACK_LIST"
              value: "qq.com,gmail.com,sina.com,163.com,sina.cn,126.com,yeah.net,189.cn,foxmail.com,msn.cn,hotmail.com,outlook.com,yahoo.com,139.com"
            - name: "FILE_SERVER"
              value: "http://minio.example.com"
            - name: "HEADER_TITLE_NAME"
              value: "Choerodon | 多云应用技术集成平台"
            - name: "HZERO_FRONT"
              value: "http://hzero-front.example.com"
            - name: "LOCAL"
              value: "false"
            - name: "NON_INSTALL_MARKET"
              value: "true"
            - name: "OPEN_SOURCE"
              value: "true"
            - name: "TITLE_NAME"
              value: "Choerodon | 多云应用技术集成平台"
            - name: "WEBSOCKET_SERVER"
              value: "ws://ws.example.com"
            - name: "onlyofficeApi"
              value: "http://onlyoffice.example.com"
            - name: "outward"
              value: "/knowledge/share,/iam/register-organization,/iam/invite-user,/saas/register-saas"
          envFrom:
          ports:
            - name: server
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: server
            initialDelaySeconds: 60
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 2
          readinessProbe:
            tcpSocket:
              port: server
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 5
          startupProbe:
            tcpSocket:
              port: server
            initialDelaySeconds: 0
            periodSeconds: 3
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 60
          resources:
            limits:
              memory: 128Mi
            requests:
              memory: 128Mi
          volumeMounts:
            - name: volume
              mountPath: /usr/share/nginx/html
              subPath: html
            - name: volume
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
      volumes:
        - name: volume
          emptyDir: {}
