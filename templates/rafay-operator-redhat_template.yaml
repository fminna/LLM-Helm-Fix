---
# Source: rafay-operator-redhat/templates/priorityclass.yaml
apiVersion: scheduling.k8s.io/v1
description: This priority class should be used for rafay service pods only.
kind: PriorityClass
metadata:
  name: rafay-cluster-critical
value: 1000000000
---
# Source: rafay-operator-redhat/templates/priorityclass.yaml
apiVersion: scheduling.k8s.io/v1
description: This priority class should be used for rafay service pods only.
kind: PriorityClass
metadata:
  annotations:
    meta.helm.sh/release-name: v2-infra
    meta.helm.sh/release-namespace: rafay-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: rafay-cluster-critical-v3
value: 1000000000
---
# Source: rafay-operator-redhat/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: system-sa
  namespace: rafay-system
---
# Source: rafay-operator-redhat/templates/configmap.yaml
apiVersion: v1
data:
  apiAddr: api.rafay.dev 
  controlAddr: control.rafay.dev
  token: ced2s9c0fga0i1d6sruf0
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: v2-infra
    meta.helm.sh/release-namespace: rafay-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: connector-config-v3
  namespace: rafay-system
---
# Source: rafay-operator-redhat/templates/configmap.yaml
apiVersion: v1
data:
  allowInsecureBootstrap:   "" 
  bootstrapCA:   "" 
  httpProxy:   "" 
  httpsProxy:   "" 
  noProxy:   "" 
  proxyAuth:   "" 
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: v2-infra
    meta.helm.sh/release-namespace: rafay-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: proxy-config-v3
  namespace: rafay-system
---
# Source: rafay-operator-redhat/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: v2-infra
    meta.helm.sh/release-namespace: rafay-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: v2-relay-agent-config
  namespace: rafay-system
data:
  clusterID: 
  maxDials: "2"
  relays: ""
---
# Source: rafay-operator-redhat/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
        name: rafay:proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: rafay-operator-redhat/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
        name: rafay:manager
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- nonResourceURLs:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - cluster.rafay.dev
  resources:
  - namespaces
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.rafay.dev
  resources:
  - namespaces/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.rafay.dev
  resources:
  - tasklets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.rafay.dev
  resources:
  - tasklets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.rafay.dev
  resources:
  - tasks
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.rafay.dev
  resources:
  - tasks/status
  verbs:
  - get
  - patch
  - update
---
# Source: rafay-operator-redhat/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: rafay:rafay-system:proxy-rolebinding
  namespace: rafay-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: rafay:proxy-role
subjects:
- kind: ServiceAccount
  name: system-sa
  namespace: rafay-system
- kind: ServiceAccount
  name: default
  namespace: rafay-system
---
# Source: rafay-operator-redhat/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: rafay:rafay-system:manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: rafay:manager
subjects:
- kind: ServiceAccount
  name: system-sa
  namespace: rafay-system
- kind: ServiceAccount
  name: default
  namespace: rafay-system
---
# Source: rafay-operator-redhat/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: rafay:leader-election-role
  namespace: rafay-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
# Source: rafay-operator-redhat/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: rafay:leader-election-rolebinding
  namespace: rafay-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: rafay:leader-election-role
subjects:
- kind: ServiceAccount
  name: system-sa
  namespace: rafay-system
- kind: ServiceAccount
  name: default
  namespace: rafay-system
---
# Source: rafay-operator-redhat/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8443"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
  labels:
    control-plane: controller-manager-v3
  name: controller-manager-metrics-service-v3
  namespace: rafay-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager-v3
---
# Source: rafay-operator-redhat/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: v2-infra
    meta.helm.sh/release-namespace: rafay-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: rafay-drift-v3
  namespace: rafay-system
spec:
  ports:
  - port: 8081
    protocol: TCP
    targetPort: 22281
  selector:
    app: rafay-connector-v3
---
# Source: rafay-operator-redhat/templates/connector-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: v2-infra
    meta.helm.sh/release-namespace: rafay-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: rafay-connector-v3
  namespace: rafay-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rafay-connector-v3
  template:
    metadata:
      labels:
        app: rafay-connector-v3
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
      containers:
      - env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: DRIFT_SVC_ENDPOINT
          value: :22281
        - name: HEALTH_ENDPOINT
          value: :22280
        - name: HTTP_PROXY
          valueFrom:
            configMapKeyRef:
              key: httpProxy
              name: proxy-config-v3
              optional: true
        - name: HTTPS_PROXY
          valueFrom:
            configMapKeyRef:
              key: httpsProxy
              name: proxy-config-v3
              optional: true
        - name: NO_PROXY
          valueFrom:
            configMapKeyRef:
              key: noProxy
              name: proxy-config-v3
              optional: true
        - name: BOOTSTRAP_CA_CERT
          valueFrom:
            configMapKeyRef:
              key: bootstrapCA
              name: proxy-config-v3
              optional: true
        - name: ALLOW_INSECURE_BOOTSTRAP
          valueFrom:
            configMapKeyRef:
              key: allowInsecureBootstrap
              name: proxy-config-v3
              optional: true
        - name: Proxy-Authorization
          valueFrom:
            configMapKeyRef:
              key: proxyAuth
              name: proxy-config-v3
              optional: true
        image: "registry.rafay-edge.net/rafay/rafay-connector-redhat:r1.26.0-1"
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 22280
            scheme: HTTP
          initialDelaySeconds: 90
          periodSeconds: 30
          timeoutSeconds: 10
        name: connector
        volumeMounts:
        - mountPath: /etc/config
          name: connector-config-v3
      priorityClassName: rafay-cluster-critical
      serviceAccountName: system-sa
      terminationGracePeriodSeconds: 10
      volumes:
      - configMap:
          name: connector-config-v3
        name: connector-config-v3
---
# Source: rafay-operator-redhat/templates/controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: v2-infra
    meta.helm.sh/release-namespace: rafay-system
  labels:
    app.kubernetes.io/managed-by: Helm
    control-plane: controller-manager-v3
  name: controller-manager-v3
  namespace: rafay-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager-v3
  template:
    metadata:
      labels:
        control-plane: controller-manager-v3
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
      containers:
      - args:
        - --enable-leader-election
        command:
        - /manager
        image: "registry.rafay-edge.net/rafay/cluster-controller-redhat:r1.26.0-1"
        name: manager
        resources:
          limits:
            cpu: 250m
            memory: 128Mi
          requests:
            cpu: 250m
            memory: 128Mi
      priorityClassName: rafay-cluster-critical
      serviceAccountName: system-sa
      terminationGracePeriodSeconds: 10
---
# Source: rafay-operator-redhat/templates/v2-relay-agent.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: v2-relay-agent
  namespace: rafay-system
  labels:
    app: v2-relay-agent
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: v2-infra
    meta.helm.sh/release-namespace: rafay-system
spec:
  selector:
    matchLabels:
      app: v2-relay-agent
  replicas: 1
  progressDeadlineSeconds: 1800
  template:
    metadata:
      labels:
        app: v2-relay-agent
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - arm64
      priorityClassName: rafay-cluster-critical-v3
      serviceAccountName: system-sa
      terminationGracePeriodSeconds: 200
      initContainers:
        - name: set-limits
          image: "registry.access.redhat.com/ubi8-init:8.8-8"
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c", "ulimit -n 65536"]
          securityContext:
            privileged: true
      containers:
        - name: relay-agent
          image: "registry.rafay-edge.net/rafay/rafay-relay-agent-redhat:r1.26.0-1"
          imagePullPolicy: IfNotPresent
          args: ["--mode=client", "--log-level=3"]
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MAX_DIALS
              valueFrom:
                configMapKeyRef:
                  name: v2-relay-agent-config
                  key: maxDials
                  optional: true
            - name: DIALOUT_PROXY
              valueFrom:
                configMapKeyRef:
                  name: proxy-config-v3
                  key: httpsProxy
                  optional: true
            - name: DIALOUT_PROXY_AUTHENTICATION
              valueFrom:
                configMapKeyRef:
                  name: proxy-config-v3
                  key: proxyAuth
                  optional: true
            - name: HTTP_PROXY
              valueFrom:
                configMapKeyRef:
                  name: proxy-config-v3
                  key: httpProxy
                  optional: true
            - name: HTTPS_PROXY
              valueFrom:
                configMapKeyRef:
                  name: proxy-config-v3
                  key: httpsProxy
                  optional: true
            - name: NO_PROXY
              valueFrom:
                configMapKeyRef:
                  name: proxy-config-v3
                  key: noProxy
                  optional: true
            - name: BOOTSTRAP_CA_CERT
              valueFrom:
                configMapKeyRef:
                  name: proxy-config-v3
                  key: bootstrapCA
                  optional: true
            - name: ALLOW_INSECURE_BOOTSTRAP
              valueFrom:
                configMapKeyRef:
                  name: proxy-config-v3
                  key: allowInsecureBootstrap
                  optional: true
          volumeMounts:
            - name: v2-relay-agent-config
              mountPath: /etc/config
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
      volumes:
        - name: v2-relay-agent-config
          configMap:
            name: v2-relay-agent-config
---
# Source: rafay-operator-redhat/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    meta.helm.sh/release-name: v2-infra
    meta.helm.sh/release-namespace: rafay-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: rafay-drift-validate-v3
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNCVENDQWF5Z0F3SUJBZ0lVZHA0OFF6TVVLQWFDc3lJM0hZL0ZUbXB4ekZrd0NnWUlLb1pJemowRUF3SXcKWVRFTE1Ba0dBMVVFQmhNQ1ZWTXhDekFKQmdOVkJBZ1RBa05CTVJJd0VBWURWUVFIRXdsVGRXNXVlWFpoYkdVeApGakFVQmdOVkJBb1REVkpoWm1GNUlGTjVjM1JsYlhNeEdUQVhCZ05WQkFNTUVGSmhabUY1WDFkbFltaHZiMnRmClEwRXdIaGNOTWpBeE1URTVNREl4TlRBd1doY05NalV4TVRFNE1ESXhOVEF3V2pCaE1Rc3dDUVlEVlFRR0V3SlYKVXpFTE1Ba0dBMVVFQ0JNQ1EwRXhFakFRQmdOVkJBY1RDVk4xYm01NWRtRnNaVEVXTUJRR0ExVUVDaE1OVW1GbQpZWGtnVTNsemRHVnRjekVaTUJjR0ExVUVBd3dRVW1GbVlYbGZWMlZpYUc5dmExOURRVEJaTUJNR0J5cUdTTTQ5CkFnRUdDQ3FHU000OUF3RUhBMElBQkJKZFBxK0ZhWTB6K1BMU1hsbmc5cEFXWXUyaDZYeGlsUnhjaGZIVHpHU1QKZjR5NkZTdkZNMGd4ZlAvV080bmJwOUJzS3ViTnBMYkllUHpPYkluOVRmMmpRakJBTUE0R0ExVWREd0VCL3dRRQpBd0lCQmpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSd25qck1SYVRjTHpUNWoxaE51VUJjCnBoQTIzakFLQmdncWhrak9QUVFEQWdOSEFEQkVBaUFsMVlobXhsQlM5cmZBOWhwdFhUMGUyb2hUajFrOHVjbXQKaHFjVzBsUDgzUUlnUVhlUUU1RUJQWUkwU05ETzZsUk5PS20wQjBUbFFUbEtwR1RpMmhXdmNZbz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: rafay-drift-v3
      namespace: rafay-system
      path: /drifthandler
      port: 8081
  failurePolicy: Ignore
  name: rafay.drift.validate
  rules:
  - apiGroups:
    - '*'
    apiVersions:
    - '*'
    operations:
    - '*'
    resources:
    - '*/*'
    scope: '*'
  sideEffects: None
  timeoutSeconds: 1
---
# Source: rafay-operator-redhat/templates/tests/test-chart.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-test"
  namespace: rafay-system 
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  containers:
    - name: kubectl
      image: registry.rafay-edge.net/rafay/rafay-kubectl:1.2
      command:
        - /bin/sh
        - -c
        - |
          echo "Checking for rafay pods"
          pods=`/kubectl get po -n rafay-system|grep connector`
          [ $? -ne 1 ] && echo -e " !! rafay pods are running !! Exiting  " && exit 0
          echo "Rafay pods are not running" && exit 1
  restartPolicy: Never
