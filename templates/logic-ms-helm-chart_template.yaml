---
# Source: logic-ms-helm-chart/templates/logic-ms-config-map.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: logic-ms-config-map
  namespace: notes-project
data:
  CONFIG_SERVER_URL: config-server-service
  CONFIG_SERVER_PORT: "80"
  VAULT_HOST: vault-service
  VAULT_PORT: "80"
  VAULT_URL: http://vault-service:80
  OAUTH_HOST: registration-ms-service
  OAUTH_PORT: "80"
  RABBIT_HOST: rabbitmq-service
  RABBIT_PORT: "80"
  DB_HOST: logic-ms-postgres-service
  DB_PORT: "80"
  DB_NAME: logic_ms
  DB_USER: logic_ms_user
  KAFKA_HOST: kafka-broker-host
  KAFKA_PORT: "9092"
  RABBIT_EXCHANGE: filesystem.notifications.exchange
  KAFKA_TOPIC: additional.info.topic
  KAFKA_GROUP: logic.ms.group
  FILE_SYSTEM_HOST: file-system-ms-service
  FILE_SYSTEM_PORT: "80"
  USER_DATA_SYSTEM_HOST: user-data-ms-service
  USER_DATA_SYSTEM_PORT: "80"
  KEYCLOAK_HOST: keycloak-service
  KEYCLOAK_PORT: "80"
  KEYCLOAK_REALM: file-system-realm
  ALLOW_ORIGIN: "*"
  VAULT_TOKEN: hvs.ARRLQzfDs19E29KPABXcn39b
---
# Source: logic-ms-helm-chart/templates/logic-ms-postgres-config-map.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: logic-ms-postgres-config-map
  namespace: notes-project
data:
  POSTGRES_USER: logic_ms_user
  POSTGRES_DB: logic_ms
  POSTGRES_PASSWORD: 1q2w3e
---
# Source: logic-ms-helm-chart/templates/logic-ms-postgres-persistent-volume.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: logic-ms-postgres-persistent-volume
  namespace: notes-project
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /data/logic-ms-postgres
  storageClassName: standard
---
# Source: logic-ms-helm-chart/templates/logic-ms-postgres-persistent-volume-claim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: logic-ms-postgres-persistent-volume-claim
  namespace: notes-project
spec:
  volumeName: logic-ms-postgres-persistent-volume
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# Source: logic-ms-helm-chart/templates/logic-ms-postgres-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: logic-ms-postgres-service
  namespace: notes-project
spec:
  selector:
    app: logic-ms-postgres-deployment
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5432
---
# Source: logic-ms-helm-chart/templates/logic-ms-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: logic-ms-service
  namespace: notes-project
  labels:
    app: logic-ms-service
spec:
  selector:
    app: logic-ms-deployment
  ports:
    - port: 80
      targetPort: 8070
      protocol: TCP
      name: logic-ms-service-port
---
# Source: logic-ms-helm-chart/templates/logic-ms-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logic-ms-deployment
  namespace: notes-project
  labels:
    app: logic-ms-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logic-ms-deployment
  template:
    metadata:
      labels:
        app: logic-ms-deployment
    spec:
      containers:
        - name: logic-ms-deployment
          image: vlebediantsev/logic-ms
          ports:
            - containerPort: 8080
            - containerPort: 5005
          envFrom:
            - configMapRef:
                name: logic-ms-config-map
---
# Source: logic-ms-helm-chart/templates/logic-ms-postgres-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logic-ms-postgres-deployment
  namespace: notes-project
  labels:
    app: logic-ms-postgres-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logic-ms-postgres-deployment
  template:
    metadata:
      labels:
        app: logic-ms-postgres-deployment
    spec:
      containers:
        - name: logic-ms-postgres-deployment
          image: library/postgres
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: logic-ms-postgres-config-map
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: logic-ms-postgres-persistent-volume-claim
---
# Source: logic-ms-helm-chart/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-logic-ms-helm-chart-test-connection"
  labels:
    helm.sh/chart: logic-ms-helm-chart-0.1.0
    app.kubernetes.io/name: logic-ms-helm-chart
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-logic-ms-helm-chart:80']
  restartPolicy: Never
