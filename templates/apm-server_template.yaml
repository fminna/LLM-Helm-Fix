---
# Source: apm-server/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-apm-server
  labels:
    app.kubernetes.io/name: apm-server
    helm.sh/chart: apm-server-2.1.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
# Source: apm-server/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-apm-server
  labels:
    app.kubernetes.io/name: apm-server
    helm.sh/chart: apm-server-2.1.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  apm-server.yml: ICAgIGFwbS1zZXJ2ZXI6CiAgICAgIGhvc3Q6IDAuMC4wLjA6ODIwMAogICAgb3V0cHV0LmZpbGU6CiAgICAgIGZpbGVuYW1lOiBhcG0tc2VydmVyCiAgICAgIG51bWJlcl9vZl9maWxlczogNQogICAgICBwYXRoOiAvdXNyL3NoYXJlL2FwbS1zZXJ2ZXIvZGF0YQogICAgICByb3RhdGVfZXZlcnlfa2I6IDEwMDAwCiAgICBxdWV1ZToge30=
---
# Source: apm-server/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-apm-server
  labels:
    app.kubernetes.io/name: apm-server
    helm.sh/chart: apm-server-2.1.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: [""]
  resources:
  - namespaces
  - pods
  verbs: ["get", "list", "watch"]
---
# Source: apm-server/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-apm-server
  labels:
    app.kubernetes.io/name: apm-server
    helm.sh/chart: apm-server-2.1.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-apm-server
subjects:
- kind: ServiceAccount
  name: release-name-apm-server
  namespace: default
---
# Source: apm-server/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: release-name-apm-server
  labels:
    app.kubernetes.io/name: apm-server
    helm.sh/chart: apm-server-2.1.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: apm-server
      app.kubernetes.io/instance: release-name
  minReadySeconds: 10
  updateStrategy:
    {}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: apm-server
        app.kubernetes.io/instance: release-name
      annotations:
        checksum/secret: ec8606fe0c8fc8ef50b8293e589ced3488cc3a1f6ab8d0aa16e080731abd4b9d
    spec:
      containers:
      - name: apm-server
        image: "docker.elastic.co/apm/apm-server:7.0.0"
        imagePullPolicy: IfNotPresent
        args:
        - "-e"
        env:
        ports:
          - name: http
            containerPort: 8200
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 60
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 60
        securityContext:
          runAsUser: 0
        resources:
          {}
        volumeMounts:
        - name: apm-server-config
          mountPath: /usr/share/apm-server/apm-server.yml
          readOnly: true
          subPath: apm-server.yml
        - name: data
          mountPath: /usr/share/apm-server/data
      volumes:
      - name: apm-server-config
        secret:
          secretName: release-name-apm-server
      - name: data
        hostPath:
          path: /var/lib/apm-server
          type: DirectoryOrCreate
      terminationGracePeriodSeconds: 60
      serviceAccountName: release-name-apm-server
