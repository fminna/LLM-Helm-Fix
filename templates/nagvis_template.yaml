---
# Source: nagvis/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: nagvis
  labels:
    app.kubernetes.io/name: nagvis
    helm.sh/chart: nagvis-1.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: nagvis
      port: 80
      targetPort: nagvis
      nodePort: null

  selector:
      app.kubernetes.io/name: nagvis
      app.kubernetes.io/instance: release-name
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 7200
---
# Source: nagvis/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-nagvis
  labels:
    app.kubernetes.io/name: nagvis
    helm.sh/chart: nagvis-1.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: nagvis
  annotations:
    helm.sh/hook-weight: "0"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: nagvis
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: nagvis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nagvis
        helm.sh/chart: nagvis-1.0.0
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: nagvis
    spec:
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: nagvis
                    app.kubernetes.io/instance: release-name
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      imagePullSecrets:
      - name: ghcr-pull-secret
      containers:
        - name: nagvis
          image: svtechnmaa/svtech_nagvis:v1.2.1
          imagePullPolicy: "IfNotPresent"
          command:
            - /bin/bash
            - -c
            - |
              cp -f /tmp/auth.db /usr/share/nagvis/etc/auth.db
              /entrypoint.sh
          env:
            - name: TZ
              value: Asia/Ho_Chi_Minh
            - name: BACKEND_NAME
              value: "NMS"
            - name: BACKEND_ID
              value: "NMS"
            - name: BACKEND_TYPE
              value: "mklivestatus"
            - name: BACKEND_IP
              value: "icinga2"
            - name: BACKEND_PORT
              value: "6558"
          ports:
            - name: nagvis
              containerPort: 80
---
# Source: nagvis/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nagvis-ingress
  annotations:
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  ingressClassName: default
  rules:
  - http:
      paths:
      - path: /nagvis
        pathType: Prefix
        backend:
          service:
            name: nagvis
            port:
              number: 80
