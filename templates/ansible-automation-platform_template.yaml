---
# Source: ansible-automation-platform/templates/privileged-scc.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ansible-automation-platform-privileged-scc
  namespace: ansible-automation-platform
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:openshift:scc:privileged
subjects:
  - kind: ServiceAccount
    name: ansible-automation-platform
    namespace: ansible-automation-platform
---
# Source: ansible-automation-platform/charts/operatorhub/templates/operatorgroup.yaml
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  name: "ansible-automation-platform-operator" 
  namespace: "ansible-automation-platform"
spec:
  targetNamespaces:
  - ansible-automation-platform
---
# Source: ansible-automation-platform/charts/operatorhub/templates/subscription.yaml
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: "ansible-automation-platform-operator"
  namespace: "ansible-automation-platform"
spec:
  channel: "stable-2.3-cluster-scoped" 
  installPlanApproval: "Automatic"
  name: "ansible-automation-platform-operator"
  source: "redhat-operators"
  sourceNamespace: "openshift-marketplace"
---
# Source: ansible-automation-platform/templates/crd-reader.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: crd-reader
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - 'customresourcedefinitions'
  verbs:
  - get
  - list
---
# Source: ansible-automation-platform/templates/crd-reader.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: crd-reader-binding
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: crd-reader
subjects:
- kind: ServiceAccount
  name: default
  namespace: ansible-automation-platform
---
# Source: ansible-automation-platform/templates/wait-for-crd.yaml
apiVersion: v1
kind: Pod
metadata:
  name: cluster-check 
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  namespace: ansible-automation-platform
spec:
  containers:
    - name: crd-check 
      image: quay.io/openshift/origin-cli:4.7
      imagePullPolicy: IfNotPresent
      command: ['sh', '-c', 'while [ true ]; do oc get crd automationcontrollers.automationcontroller.ansible.com; if [ $? -eq 0 ]; then break; fi ; sleep 5s; done']
  restartPolicy: Never
  terminationGracePeriodSeconds: 0
  serviceAccount: default
  serviceAccountName: default
---
# Source: ansible-automation-platform/templates/AnsibleAutomationController.yaml
apiVersion: automationcontroller.ansible.com/v1beta1
kind: AutomationController
metadata:
  name: ansible-automation-platform
  labels:
    app: ansible-automation-platform
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "25"
  namespace: ansible-automation-platform
spec:
  create_preload_data: true
  route_tls_termination_mechanism: Edge
  garbage_collect_secrets: false
  ingress_type: Route
  projects_use_existing_claim: _No_
  image_pull_policy:  IfNotPresent
  admin_email: admin@example.com
  task_privileged: true
  projects_persistence: true
  replicas:  1
  admin_user: admin
