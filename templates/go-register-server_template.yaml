---
# Source: go-register-server/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name
  labels:
    choerodon.io/release: "release-name"
---
# Source: go-register-server/templates/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: release-name
  labels:
      choerodon.io/release: "release-name"
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - update
      - patch
---
# Source: go-register-server/templates/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: release-name
  labels:
      choerodon.io/release: "release-name"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name
subjects:
  - kind: ServiceAccount
    name: release-name
    namespace: default
---
# Source: go-register-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: register-server
  labels:
    choerodon.io/release: "release-name"
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    choerodon.io/release: "release-name"
---
# Source: go-register-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name
  labels:
    choerodon.io/release: "release-name"
    choerodon.io/logs-parser: "docker"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
  replicas: 1
  selector:
    matchLabels:
      choerodon.io/release: "release-name"
  template:
    metadata:
      annotations:
        choerodon.io/metrics-group: "go-register-server"
        choerodon.io/metrics-path: "/metrics"
      labels:
        choerodon.io/version: 0.21.0
        choerodon.io/service: "go-register-server"
        choerodon.io/metrics-port: "8000"
        choerodon.io/release: "release-name"
    spec:
      containers:
      - name: release-name
        image: registry.cn-shanghai.aliyuncs.com/c7n/go-register-server:0.21.0
        imagePullPolicy: IfNotPresent
        env:
        - name: REGISTER_SERVER_NAMESPACE
          value: default
        - name: "REGISTER_SERVICE_NAMESPACE"
          value: "c7n-system"
        resources:
            limits:
              memory: 512Mi
            requests:
              memory: 256Mi
        ports:
          - name: http
            containerPort: 8000
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /eureka/apps/delta
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 180
          periodSeconds: 30
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /eureka/apps/delta
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 15
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
      serviceAccountName: "release-name"
---
# Source: go-register-server/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: release-name
  labels:
    choerodon.io/release: "release-name"
spec:
  rules:
  - host: register.example.com
    http:
      paths:
      - backend:
          serviceName: register-server
          servicePort: 8000
        path: /
