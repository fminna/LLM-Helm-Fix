---
# Source: ibm-storage-enabler-for-containers/templates/ubiquity-helm-hook-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ubiquity-helm-hook
  labels:
    app.kubernetes.io/name: ibm-storage-enabler-for-containers
    helm.sh/chart: ibm-storage-enabler-for-containers-1.0.1
    release: release-name
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
imagePullSecrets:
  - name: sa-default
---
# Source: ibm-storage-enabler-for-containers/templates/ubiquity-k8s-flex-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ubiquity-k8s-flex
  labels:
    app.kubernetes.io/name: ibm-storage-enabler-for-containers
    helm.sh/chart: ibm-storage-enabler-for-containers-1.0.1
    release: release-name
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
imagePullSecrets:
  - name: sa-default
---
# Source: ibm-storage-enabler-for-containers/templates/ubiquity-k8s-provisioner-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ubiquity-k8s-provisioner
  labels:
    product: ibm-storage-enabler-for-containers
    app.kubernetes.io/name: ibm-storage-enabler-for-containers
    helm.sh/chart: ibm-storage-enabler-for-containers-1.0.1
    release: release-name
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
imagePullSecrets:
  - name: sa-default
---
# Source: ibm-storage-enabler-for-containers/templates/ubiquity-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ubiquity
  labels:
    app.kubernetes.io/name: ibm-storage-enabler-for-containers
    helm.sh/chart: ibm-storage-enabler-for-containers-1.0.1
    release: release-name
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
imagePullSecrets:
  - name: sa-default
---
# Source: ibm-storage-enabler-for-containers/templates/ubiquity-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
# IBM Storage Enabler for Containers Kubernetes daemonset and deployments settings.
  name: ubiquity-configmap
  labels:
    product: ibm-storage-enabler-for-containers
    app.kubernetes.io/name: ibm-storage-enabler-for-containers
    helm.sh/chart: ibm-storage-enabler-for-containers-1.0.1
    release: release-name
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
   # The keys below are used by ubiquity deployment
   # -----------------------------------------------
   # IP or FQDN of Spectrum Connect(previously known as SCBE) server.
   # Communication port of Spectrum Connect server. Optional parameter with default value set at 8440.
   SCBE-MANAGEMENT-PORT: "8440"

   # Default Spectrum Connect storage service to be used, if not specified by the plugin.
   # The size for a new volume if not specified by the user when creating a new volume. Optional parameter with default value set at 1GB.
   DEFAULT-VOLUME-SIZE: "1"

   # A prefix for any new volume created on the storage system. Default value is None.
   # File system type. Optional parameter with two allowed values: ext4 or xfs. Default value is ext4.
   DEFAULT-FSTYPE: "ext4"

   # Default Ubiquity Backend
   DEFAULT-BACKEND: scbe

   # DB pv name.
   IBM-UBIQUITY-DB-PV-NAME: "ibm-ubiquity-db"



   # The following keys are used by ubiquity, ubiquity-k8s-provisioner deployments, And ubiquity-k8s-flex daemon-set
   # ----------------------------------------------------------------------------------------------------------------------------
   # Flex log path. Allow to configure it, just make sure the the new path exist on all the minons and update the hostpath in the Flex daemonset
   FLEX-LOG-DIR: "/var/log"

   # Maxlog size(MB) for rotate
   FLEX-LOG-ROTATE-MAXSIZE: "50"

   # Log level. Allowed values: debug, info, error.
   LOG-LEVEL: "info"

   # The following keys are used by the ubiquity-k8s-flex daemonset
   # ----------------------------------------------------------------------------------------------------------------
   # SSL verification mode. Allowed values: require (no validation is required) and verify-full (user-provided certificates).
   SSL-MODE: "require"
---
# Source: ibm-storage-enabler-for-containers/templates/ubiquity-db-pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: "ibm-ubiquity-db"
  labels:
    # Ubiquity provisioner will create a PV with dedicated name (by default its ibm-ubiquity-db)
    pv-name: "ibm-ubiquity-db"
    product: ibm-storage-enabler-for-containers
    app.kubernetes.io/name: ibm-storage-enabler-for-containers
    helm.sh/chart: ibm-storage-enabler-for-containers-1.0.1
    release: release-name
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm

spec:
  storageClassName: 
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "20Gi"
---
# Source: ibm-storage-enabler-for-containers/templates/ubiquity-helm-hook-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ubiquity-helm-hook
  labels:
    app.kubernetes.io/name: ibm-storage-enabler-for-containers
    helm.sh/chart: ibm-storage-enabler-for-containers-1.0.1
    release: release-name
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - watch
---
# Source: ibm-storage-enabler-for-containers/templates/ubiquity-k8s-provisioner-clusterroles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ubiquity-k8s-provisioner
  labels:
    product: ibm-storage-enabler-for-containers
    app.kubernetes.io/name: ibm-storage-enabler-for-containers
    helm.sh/chart: ibm-storage-enabler-for-containers-1.0.1
    release: release-name
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
    # Needed for ubiquity provisioner in order to manage PVs.

  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
    # Needed for ubiquity provisioner in order to manage PVCs.

  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
    # Needed for ubiquity provisioner as part of the provisioning of PVCs.

  - apiGroups: [""]
    resources: ["events"]
    verbs: ["watch", "create", "list", "update", "patch"]
    # Needed for ubiquity provisioner in order to manage PVC events.
---
# Source: ibm-storage-enabler-for-containers/templates/ubiquity-helm-hook-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ubiquity-helm-hook
  labels:
    app.kubernetes.io/name: ibm-storage-enabler-for-containers
    helm.sh/chart: ibm-storage-enabler-for-containers-1.0.1
    release: release-name
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ubiquity-helm-hook
subjects:
- kind: ServiceAccount
  name: ubiquity-helm-hook
  namespace: default
---
# Source: ibm-storage-enabler-for-containers/templates/ubiquity-k8s-provisioner-clusterrolebindings.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ubiquity-k8s-provisioner
  labels:
    product: ibm-storage-enabler-for-containers
    app.kubernetes.io/name: ibm-storage-enabler-for-containers
    helm.sh/chart: ibm-storage-enabler-for-containers-1.0.1
    release: release-name
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: ubiquity-k8s-provisioner
    namespace: default
roleRef:
  kind: ClusterRole
  name: ubiquity-k8s-provisioner
  apiGroup: rbac.authorization.k8s.io
---
# Source: ibm-storage-enabler-for-containers/templates/ubiquity-helm-hook-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ubiquity-helm-hook
  labels:
    app.kubernetes.io/name: ibm-storage-enabler-for-containers
    helm.sh/chart: ibm-storage-enabler-for-containers-1.0.1
    release: release-name
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - create
  - delete
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - get
  - delete
  - create
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - get
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - update
---
# Source: ibm-storage-enabler-for-containers/templates/ubiquity-k8s-flex-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ubiquity-k8s-flex
  labels:
    app.kubernetes.io/name: ibm-storage-enabler-for-containers
    helm.sh/chart: ibm-storage-enabler-for-containers-1.0.1
    release: release-name
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - watch
---
# Source: ibm-storage-enabler-for-containers/templates/ubiquity-helm-hook-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ubiquity-helm-hook
  labels:
    app.kubernetes.io/name: ibm-storage-enabler-for-containers
    helm.sh/chart: ibm-storage-enabler-for-containers-1.0.1
    release: release-name
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ubiquity-helm-hook
subjects:
- kind: ServiceAccount
  name: ubiquity-helm-hook
  namespace: default
---
# Source: ibm-storage-enabler-for-containers/templates/ubiquity-k8s-flex-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ubiquity-k8s-flex
  labels:
    app.kubernetes.io/name: ibm-storage-enabler-for-containers
    helm.sh/chart: ibm-storage-enabler-for-containers-1.0.1
    release: release-name
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ubiquity-k8s-flex
subjects:
- kind: ServiceAccount
  name: ubiquity-k8s-flex
  namespace: default
---
# Source: ibm-storage-enabler-for-containers/templates/ubiquity-db-service.yaml
# if sslMode=verify-full, don't create this serivce, it will be created in advance

apiVersion: v1
kind: Service
metadata:
  name: ubiquity-db
  labels:
    product: ibm-storage-enabler-for-containers
    app.kubernetes.io/name: ibm-storage-enabler-for-containers
    helm.sh/chart: ibm-storage-enabler-for-containers-1.0.1
    release: release-name
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    app.kubernetes.io/name: ubiquity-db
---
# Source: ibm-storage-enabler-for-containers/templates/ubiquity-service.yaml
# if sslMode=verify-full, don't create this serivce, it will be created in advance

apiVersion: v1
kind: Service
metadata:
  name: ubiquity
  labels:
    product: ibm-storage-enabler-for-containers
    app.kubernetes.io/name: ibm-storage-enabler-for-containers
    helm.sh/chart: ibm-storage-enabler-for-containers-1.0.1
    release: release-name
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - port: 9999
      protocol: TCP
      targetPort: 9999
  selector:
    app.kubernetes.io/name: ubiquity
---
# Source: ibm-storage-enabler-for-containers/templates/ubiquity-k8s-flex-daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ubiquity-k8s-flex
  labels:
    product: ibm-storage-enabler-for-containers
    app.kubernetes.io/name: ibm-storage-enabler-for-containers
    helm.sh/chart: ibm-storage-enabler-for-containers-1.0.1
    release: release-name
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ubiquity-k8s-flex
      product: ibm-storage-enabler-for-containers
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ubiquity-k8s-flex
        product: ibm-storage-enabler-for-containers
        helm.sh/chart: ibm-storage-enabler-for-containers-1.0.1
        release: release-name
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/config: 054e19dffab5cc8d1b2b29b27816cb5ba9d83161458673d622c5dd8949cfa674
        productName: "IBM Storage Enabler for Containers"
        productID: ibm-storage-enabler-for-containers
        productVersion: 2.1.0
        app.kubernetes.io/version: 2.1.0
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - ppc64le
                      - s390x
      tolerations:   # Create flex Pods also on master nodes (even if there are NoScheduled nodes)
      # Some k8s versions use dedicated key for toleration of the master and some use node-role.kubernetes.io/master key.
      - key: dedicated
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        effect: NoSchedule

      serviceAccountName: ubiquity-k8s-flex
      initContainers:
      - name: ubiquity-k8s-flex-init-container
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
          runAsUser: 0
          capabilities:
            drop:
            - ALL
            add:
            - CHOWN
            - FSETID
            - FOWNER
            - SETGID
            - SETUID
            - DAC_OVERRIDE
        image: "ibmcom/ibm-storage-flex-volume-for-kubernetes:2.1.0"
        imagePullPolicy: IfNotPresent

        env:
          - name: UBIQUITY_PORT     # Ubiquity port, should point to the ubiquity service port
            value: "9999"

          - name: UBIQUITY_BACKEND         # "IBM Storage Enabler for Containers" supports "scbe" (IBM Spectrum Connect) as its backend.
            value: "scbe"

          - name: FLEX_LOG_DIR    # /var/log default
            valueFrom:
              configMapKeyRef:
                name: ubiquity-configmap
                key: FLEX-LOG-DIR

          - name: FLEX_LOG_ROTATE_MAXSIZE # 50MB default
            valueFrom:
              configMapKeyRef:
                name: ubiquity-configmap
                key: FLEX-LOG-ROTATE-MAXSIZE

          - name: LOG_LEVEL       # debug / info / error
            valueFrom:
              configMapKeyRef:
                name: ubiquity-configmap
                key: LOG-LEVEL
          - name: UBIQUITY_USERNAME
            valueFrom:
              secretKeyRef:
                name: release-name-ibm-storage-enabler-for-containers-scbe
                key: username

          - name: UBIQUITY_PASSWORD
            valueFrom:
              secretKeyRef:
                name: release-name-ibm-storage-enabler-for-containers-scbe
                key: password
          - name: UBIQUITY_PLUGIN_SSL_MODE   # require / verify-full
            valueFrom:
              configMapKeyRef:
                name: ubiquity-configmap
                key: SSL-MODE

        command:
          - ./setup_flex.sh
        args:
          - --generate_flex_conf

        volumeMounts:
        - name: host-k8splugindir
          mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
      containers:
      - name: ubiquity-k8s-flex-sidecar
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
          runAsUser: 0
          capabilities:
            drop:
            - ALL
            add:
            - CHOWN
            - FSETID
            - FOWNER
            - SETGID
            - SETUID
            - DAC_OVERRIDE
        image: "ibmcom/ibm-storage-flex-volume-sidecar-for-kubernetes:2.1.0"
        imagePullPolicy: IfNotPresent
        readinessProbe:
          exec:
            command: ["./health_check.sh"]
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          exec:
            command: ["./health_check.sh"]
          initialDelaySeconds: 10
          periodSeconds: 30
        env:
          - name: NAMESPACE
            value: default

        command: ["./flex-sidecar"]
        volumeMounts:
        - name: host-k8splugindir
          mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec

      - name: ubiquity-k8s-flex
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
          runAsUser: 0
          capabilities:
            drop:
            - ALL
            add:
            - CHOWN
            - FSETID
            - FOWNER
            - SETGID
            - SETUID
            - DAC_OVERRIDE
        image: "ibmcom/ibm-storage-flex-volume-for-kubernetes:2.1.0"
        imagePullPolicy: IfNotPresent
        readinessProbe:
          exec:
            command: ["./health_check.sh"]
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          exec:
            command: ["./health_check.sh"]
          initialDelaySeconds: 10
          periodSeconds: 30
        env:
          - name: FLEX_LOG_DIR    # /var/log default
            valueFrom:
              configMapKeyRef:
                name: ubiquity-configmap
                key: FLEX-LOG-DIR

        command: ["./setup_flex.sh"]
        volumeMounts:
        - name: host-k8splugindir
          mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec

        - name: flex-log-dir
          mountPath: "/var/log"
      volumes:
      - name: host-k8splugindir
        hostPath:
          path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec  # This directory must exist on the host

      - name: flex-log-dir
        hostPath:
          path: "/var/log"  # This directory must exist on the host
---
# Source: ibm-storage-enabler-for-containers/templates/ubiquity-db-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ubiquity-db
  labels:
    product: ibm-storage-enabler-for-containers
    app.kubernetes.io/name: ibm-storage-enabler-for-containers
    helm.sh/chart: ibm-storage-enabler-for-containers-1.0.1
    release: release-name
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ubiquity-db
      product: ibm-storage-enabler-for-containers
  template:
    metadata:
      annotations:
        productName: "IBM Storage Enabler for Containers"
        productID: ibm-storage-enabler-for-containers
        productVersion: 2.1.0
        app.kubernetes.io/version: 2.1.0
      labels:
        app.kubernetes.io/name: ubiquity-db
        product: ibm-storage-enabler-for-containers
        helm.sh/chart: ibm-storage-enabler-for-containers-1.0.1
        release: release-name
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - ppc64le
                      - s390x
      serviceAccountName: ubiquity
      containers:
      - name: ubiquity-db
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
          runAsUser: 0
          capabilities:
            drop:
            - ALL
            add:
            - CHOWN
            - FSETID
            - FOWNER
            - SETGID
            - SETUID
            - DAC_OVERRIDE
        image: "ibmcom/ibm-storage-enabler-for-containers-db:2.1.0"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
          name: ubiq-db-port  # no more then 15 chars
        readinessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 2
          periodSeconds: 2
        livenessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 60
          periodSeconds: 30
        env:
          - name: UBIQUITY_DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: release-name-ibm-storage-enabler-for-containers-ubiquitydb
                key: username

          - name: UBIQUITY_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: release-name-ibm-storage-enabler-for-containers-ubiquitydb
                key: password

          - name: UBIQUITY_DB_NAME
            valueFrom:
              secretKeyRef:
                name: release-name-ibm-storage-enabler-for-containers-ubiquitydb
                key: dbname

        volumeMounts:
          - name: ibm-ubiquity-db
            mountPath: "/var/lib/postgresql/data"
            subPath: "ibm-ubiquity"

      volumes:
      - name: ibm-ubiquity-db
        persistentVolumeClaim:
          claimName: ibm-ubiquity-db
---
# Source: ibm-storage-enabler-for-containers/templates/ubiquity-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ubiquity
  labels:
    product: ibm-storage-enabler-for-containers
    app.kubernetes.io/name: ibm-storage-enabler-for-containers
    helm.sh/chart: ibm-storage-enabler-for-containers-1.0.1
    release: release-name
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ubiquity
      product: ibm-storage-enabler-for-containers
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ubiquity
        product: ibm-storage-enabler-for-containers
        helm.sh/chart: ibm-storage-enabler-for-containers-1.0.1
        release: release-name
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/config: 054e19dffab5cc8d1b2b29b27816cb5ba9d83161458673d622c5dd8949cfa674
        productName: "IBM Storage Enabler for Containers"
        productID: ibm-storage-enabler-for-containers
        productVersion: 2.1.0
        app.kubernetes.io/version: 2.1.0
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - ppc64le
                      - s390x
      serviceAccountName: ubiquity
      containers:
      - name: ubiquity
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
          runAsUser: 0
          capabilities:
            drop:
            - ALL
            add:
            - CHOWN
            - FSETID
            - FOWNER
            - SETGID
            - SETUID
            - DAC_OVERRIDE
        image: "ibmcom/ibm-storage-enabler-for-containers:2.1.0"
        imagePullPolicy: IfNotPresent
        readinessProbe:
          tcpSocket:
            port: 9999
          initialDelaySeconds: 3
          periodSeconds: 5
        livenessProbe:
          tcpSocket:
            port: 9999
          initialDelaySeconds: 15
          periodSeconds: 20
        ports:
        - containerPort: 9999
          name: ubiquity-port
        env:
          ### Spectrum Connect(previously known as SCBE) connectivity parameters:
          #############################################
          - name: SCBE_USERNAME
            valueFrom:
              secretKeyRef:
                name: release-name-ibm-storage-enabler-for-containers-scbe
                key: username

          - name: SCBE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: release-name-ibm-storage-enabler-for-containers-scbe
                key: password

          - name: SCBE_SSL_MODE            # Values : require/verify-full
            valueFrom:
              configMapKeyRef:
                name: ubiquity-configmap
                key: SSL-MODE

          - name: SCBE_MANAGEMENT_IP
            valueFrom:
              configMapKeyRef:
                name: ubiquity-configmap
                key: SCBE-MANAGEMENT-IP

          - name: SCBE_MANAGEMENT_PORT
            valueFrom:
              configMapKeyRef:
                name: ubiquity-configmap
                key: SCBE-MANAGEMENT-PORT



          ### Ubiquity Spectrum Connect(previously known as SCBE) backend parameters:
          #####################################
          - name: SCBE_DEFAULT_SERVICE
            valueFrom:
              configMapKeyRef:
                name: ubiquity-configmap
                key: SCBE-DEFAULT-SERVICE

          - name: DEFAULT_VOLUME_SIZE
            valueFrom:
              configMapKeyRef:
                name: ubiquity-configmap
                key: DEFAULT-VOLUME-SIZE

          - name: UBIQUITY_INSTANCE_NAME
            valueFrom:
              configMapKeyRef:
                name: ubiquity-configmap
                key: UBIQUITY-INSTANCE-NAME

          - name: DEFAULT_FSTYPE    # ext4 or xfs
            valueFrom:
              configMapKeyRef:
                name: ubiquity-configmap
                key: DEFAULT-FSTYPE

          ### Ubiquity generic parameters:
          ################################
          - name: IBM_UBIQUITY_DB_PV_NAME
            valueFrom:
              configMapKeyRef:
                name: ubiquity-configmap
                key: IBM-UBIQUITY-DB-PV-NAME

          - name: LOG_LEVEL         # debug / info / error
            valueFrom:
              configMapKeyRef:
                name: ubiquity-configmap
                key: LOG-LEVEL

          - name: PORT              # Ubiquity port
            value: "9999"
          - name: LOG_PATH          # Ubiquity log file directory
            value: "/tmp"
          - name: DEFAULT_BACKEND   # "IBM Storage Enabler for Containers" supports "scbe" (Spectrum Connect) as its backend.
            valueFrom:
              configMapKeyRef:
                name: ubiquity-configmap
                key: DEFAULT-BACKEND


          ### Ubiquity DB parameters:
          ###########################
          - name: UBIQUITY_DB_PSQL_HOST   # Ubiquity DB hostname, should point to the ubiquity-db service name
            value: "ubiquity-db"
          - name: UBIQUITY_DB_PSQL_PORT   # Ubiquity DB port, should point to the ubiquity-db port
            value: "5432"
          - name: UBIQUITY_DB_CONNECT_TIMEOUT
            value: "3"

          - name: UBIQUITY_DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: release-name-ibm-storage-enabler-for-containers-ubiquitydb
                key: username

          - name: UBIQUITY_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: release-name-ibm-storage-enabler-for-containers-ubiquitydb
                key: password

          - name: UBIQUITY_DB_NAME
            valueFrom:
              secretKeyRef:
                name: release-name-ibm-storage-enabler-for-containers-ubiquitydb
                key: dbname

          - name: UBIQUITY_DB_SSL_MODE         # Values : require/verify-full. The default is disable
            valueFrom:
              configMapKeyRef:
                name: ubiquity-configmap
                key: SSL-MODE
---
# Source: ibm-storage-enabler-for-containers/templates/ubiquity-k8s-provisioner-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ubiquity-k8s-provisioner
  labels:
    product: ibm-storage-enabler-for-containers
    app.kubernetes.io/name: ibm-storage-enabler-for-containers
    helm.sh/chart: ibm-storage-enabler-for-containers-1.0.1
    release: release-name
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ubiquity-k8s-provisioner
      product: ibm-storage-enabler-for-containers
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ubiquity-k8s-provisioner
        product: ibm-storage-enabler-for-containers
        helm.sh/chart: ibm-storage-enabler-for-containers-1.0.1
        release: release-name
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/config: 054e19dffab5cc8d1b2b29b27816cb5ba9d83161458673d622c5dd8949cfa674
        productName: "IBM Storage Enabler for Containers"
        productID: ibm-storage-enabler-for-containers
        productVersion: 2.1.0
        app.kubernetes.io/version: 2.1.0
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - ppc64le
                      - s390x
      serviceAccountName: ubiquity-k8s-provisioner      # In order to get the server API token from the service account.
      containers:
      - name: ubiquity-k8s-provisioner
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
          runAsUser: 0
          capabilities:
            drop:
            - ALL
            add:
            - CHOWN
            - FSETID
            - FOWNER
            - SETGID
            - SETUID
            - DAC_OVERRIDE
        image: "ibmcom/ibm-storage-dynamic-provisioner-for-kubernetes:2.1.0"
        imagePullPolicy: IfNotPresent
        readinessProbe:
          exec:
            command: ["./health_check.sh"]
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          exec:
            command: ["./health_check.sh"]
          initialDelaySeconds: 10
          periodSeconds: 30
        env:
          - name: UBIQUITY_ADDRESS  # Ubiquity hostname, should point to the ubiquity service name
            value: "ubiquity"
          - name: UBIQUITY_PORT     # Ubiquity port, should point to the ubiquity service port
            value: "9999"
          - name: RETRIES          # number of retries on failure
            value: "1"
          - name: LOG_PATH         # provisioner log file directory
            value: "/tmp"
          - name: BACKENDS         # "IBM Storage Enabler for Containers" supports "scbe" (IBM Spectrum Connect) as its backend.
            value: "scbe"
          - name: LOG_LEVEL       # debug / info / error
            valueFrom:
              configMapKeyRef:
                name: ubiquity-configmap
                key: LOG-LEVEL # TODO consider to check if the secret exist instead
          - name: UBIQUITY_USERNAME
            valueFrom:
              secretKeyRef:
                name: release-name-ibm-storage-enabler-for-containers-scbe
                key: username

          - name: UBIQUITY_PASSWORD
            valueFrom:
              secretKeyRef:
                name: release-name-ibm-storage-enabler-for-containers-scbe
                key: password

          - name: UBIQUITY_PLUGIN_SSL_MODE   # require / verify-full
            valueFrom:
              configMapKeyRef:
                name: ubiquity-configmap
                key: SSL-MODE
---
# Source: ibm-storage-enabler-for-containers/templates/tests/sanity-test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: release-name-sanity-test
  annotations:
    "helm.sh/hook": test-success
  labels:
    app.kubernetes.io/name: ibm-storage-enabler-for-containers
    helm.sh/chart: ibm-storage-enabler-for-containers-1.0.1
    release: release-name
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  hostNetwork: false
  hostPID: false
  hostIPC: false
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                  - amd64
                  - ppc64le
                  - s390x
  containers:
    - name: sanity-test
      securityContext:
        privileged: false
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: false
        runAsNonRoot: false
        runAsUser: 0
        capabilities:
          drop:
          - ALL
          add:
          - CHOWN
          - FSETID
          - FOWNER
          - SETGID
          - SETUID
          - DAC_OVERRIDE
      image: "ibmcom/ibm-storage-enabler-for-containers-helm-utils:2.1.0"
      imagePullPolicy: IfNotPresent
      command: ['/usr/bin/hook-executor', 'sanity']
      env:
        - name: NAMESPACE
          value: default
        - name: STORAGE_CLASS
          value: 
  restartPolicy: Never
  serviceAccountName: ubiquity-helm-hook
---
# Source: ibm-storage-enabler-for-containers/templates/pre-delete-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: pre-delete
  annotations:
    "helm.sh/hook": "pre-delete"
    "helm.sh/hook-delete-policy": "hook-succeeded"
  labels:
    app.kubernetes.io/name: ibm-storage-enabler-for-containers
    helm.sh/chart: ibm-storage-enabler-for-containers-1.0.1
    release: release-name
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  template:
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - ppc64le
                      - s390x
      containers:
        - name: pre-delete-hook
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
            runAsUser: 0
            capabilities:
              drop:
              - ALL
              add:
              - CHOWN
              - FSETID
              - FOWNER
              - SETGID
              - SETUID
              - DAC_OVERRIDE
          image: "ibmcom/ibm-storage-enabler-for-containers-helm-utils:2.1.0"
          imagePullPolicy: IfNotPresent
          command: ["/usr/bin/hook-executor"]
          args: ["predelete"]
          env:
            - name: NAMESPACE
              value: default
            - name: UBIQUITY_DB_PV_NAME
              value: "ibm-ubiquity-db"
            - name: UBIQUITY_DB_STORAGECLASS
              value: 
      restartPolicy: Never
      serviceAccountName: ubiquity-helm-hook
  backoffLimit: 1
