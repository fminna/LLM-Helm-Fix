---
# Source: okteto/charts/ingress-nginx/templates/controller-poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.9.1
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.9.6"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-ingress-nginx-controller
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: controller
  minAvailable: 1
---
# Source: okteto/charts/okteto-nginx/templates/controller-poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    helm.sh/chart: okteto-nginx-4.9.1
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.9.6"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-okteto-nginx-controller
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: okteto-nginx
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: controller
  minAvailable: 1
---
# Source: okteto/charts/ingress-nginx/templates/controller-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.9.1
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.9.6"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-ingress-nginx
  namespace: default
automountServiceAccountToken: true
---
# Source: okteto/charts/okteto-nginx/templates/controller-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: okteto-nginx-4.9.1
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.9.6"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-okteto-nginx
  namespace: default
automountServiceAccountToken: true
---
# Source: okteto/charts/reloader/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-namespace: "default"
    meta.helm.sh/release-name: "release-name"
  labels:
    app: release-name-reloader
    chart: "reloader-1.0.65"
    release: "release-name"
    heritage: "Helm"
    app.kubernetes.io/managed-by: "Helm"
  name: reloader
  namespace: default
---
# Source: okteto/templates/buildkit-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "okteto-buildkit"
  labels:
    app.kubernetes.io/component: "buildkit"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-buildkit"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
# Source: okteto/templates/okteto-bot-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: okteto-bot
  labels:
    app: release-name-okteto
    chart: "okteto-1.19.2"
    release: "release-name"
    heritage: "Helm"
    dev.okteto.com: "true"
    dev.okteto.com/id: "okteto-bot"
    dev.okteto.com/external-id: "okteto-bot"
    app.kubernetes.io/managed-by: Helm
    dev.okteto.com/super: "true"
    dev.okteto.com/token: "exvqjvqy"
  annotations:
    meta.helm.sh/release-name: release-name
    meta.helm.sh/release-namespace: default
---
# Source: okteto/templates/registry-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "release-name-okteto-registry"
  labels:
    app.kubernetes.io/component: "registry"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-registry"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
# Source: okteto/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-okteto
  labels:
    app: release-name-okteto
    chart: "okteto-1.19.2"
    release: "release-name"
    heritage: "Helm"
---
# Source: okteto/templates/super-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: okteto-admin
  labels:
    app: release-name-okteto
    chart: "okteto-1.19.2"
    release: "release-name"
    heritage: "Helm"
    dev.okteto.com: "true"
    dev.okteto.com/token: "tgftcvjv"
    dev.okteto.com/id: "okteto-admin"
    dev.okteto.com/external-id: "okteto-admin"
    app.kubernetes.io/managed-by: Helm
    dev.okteto.com/super: "true"
  annotations:
    "helm.sh/resource-policy": keep
    meta.helm.sh/release-name: release-name
    meta.helm.sh/release-namespace: default
    dev.okteto.com/email: "welcome@okteto.com"
---
# Source: okteto/templates/regcreds-webhook.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: "release-name-okteto-regcreds"
  namespace: "default"
  labels:
    app.kubernetes.io/component: "regcreds"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-regcreds"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm

stringData: 
  ca.crt: |- 
    -----BEGIN CERTIFICATE-----
    MIIDQDCCAiigAwIBAgIRAPK4We6UDFwm1eq141vxCzYwDQYJKoZIhvcNAQELBQAw
    KjEoMCYGA1UEAxMfcmVsZWFzZS1uYW1lLW9rdGV0by1yZWdjcmVkcy1jYTAeFw0y
    NDA1MTUwOTE3MzhaFw0zNDA1MTMwOTE3MzhaMCoxKDAmBgNVBAMTH3JlbGVhc2Ut
    bmFtZS1va3RldG8tcmVnY3JlZHMtY2EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw
    ggEKAoIBAQCx9uqTbUN9cjiIIo7sG6OlS0fnHAhgqo69FtbjDa/m8iIz+olwzx/C
    Wogi7LMk8kG5YBSt3Ul36+rMalrkRR+OHThJMjnA9FqgLvj70ZqSfPhjXEUL0wDy
    uuMWv4xkMlNFU2LDjOSR+2pVJxiki6OmjBImwzEwz+hZUeWa0pqcLTUT2hepF8Kv
    F2050hXpJ3hR23yU2d1tjHkIOCF+uYnWHdR4PewZGscbyMivDQ8LS3CUGPI6zfsd
    9IP1D3ctNbzEMwLl0c4Y4xdwRSrOY3lA4l6YDvegmLSLvEVYyeuB/RCoKVcE7EmS
    2Vg52U9WrjFJ+JRg+uRJbWC1O2dKtWdJAgMBAAGjYTBfMA4GA1UdDwEB/wQEAwIC
    pDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDwYDVR0TAQH/BAUwAwEB
    /zAdBgNVHQ4EFgQUk99Pi5xm/yIhg164uS+PPyobGYwwDQYJKoZIhvcNAQELBQAD
    ggEBAFXXZuLmXdLWP6EO9pp/kg9Ca6hJAEJuVYOfAtIftwuELFPXoPHO9ExXGj5s
    DhZHH/MGhjxNI5np1VjZgBvjGpdbAx5dIpeBuWB4sd+MTVhFJ9tX7DZ8cVaEynob
    bHFgemc2ecEiZfTwcUaGOFG/oWvJt8R1aGTJtiBc2aHLdXUt47bwNgJ3yC4sS9Kd
    uRRoIFFirzZC0SgY3CmLY0xaQ06/Q4yIxGhW+MS9n+2tXlkqFEjDVA0nKBBbIEMU
    HnQm1gkWAL/MgsM4h1janfFtsIeE/4aNcxCotGGcWCCJ9bepLP5AeplAQhbBjKqI
    cs05AnNo/c0YGcFgRn9l+gb9RFs=
    -----END CERTIFICATE-----
    
  tls.crt: |- 
    -----BEGIN CERTIFICATE-----
    MIIDtzCCAp+gAwIBAgIRAM8asTRwNswblIxsLOq9JSUwDQYJKoZIhvcNAQELBQAw
    KjEoMCYGA1UEAxMfcmVsZWFzZS1uYW1lLW9rdGV0by1yZWdjcmVkcy1jYTAeFw0y
    NDA1MTUwOTE3MzhaFw0zNDA1MTMwOTE3MzhaMCcxJTAjBgNVBAMTHHJlbGVhc2Ut
    bmFtZS1va3RldG8tcmVnY3JlZHMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
    AoIBAQDQwT4otmh8CDOjSYx639/vtQMGRazQfC7W5aOEu66O3PHrRxsO4vKOvYNt
    mW2ZJq8EIGoC0wZR6MrVenfj+RyA/7VATu397WJy0VaodqsgsazEjhSHAv7+RvQ5
    TVtRXT18U6mkBtAedzSXJaBsbZGa4Wvhc4QfoOpq2sMhZzhmUhs+i3vgZS7MQlpp
    OedsNPb8TivfNsxFTw7rfgjxSmWIwkRSr23FKrZ2/YUtJWg9FlzTZXZXuPFD/+qt
    tiXIRvMNIZaR+kAABDU2bKHtS62dnD0VV1OhF++0pi4FKcfm65CVn/DWdN+7+hRA
    v67QNCMXr9qR/2KPptFvGlNmZDX7AgMBAAGjgdowgdcwDgYDVR0PAQH/BAQDAgWg
    MB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB8G
    A1UdIwQYMBaAFJPfT4ucZv8iIYNeuLkvjz8qGxmMMHcGA1UdEQRwMG6CHHJlbGVh
    c2UtbmFtZS1va3RldG8tcmVnY3JlZHOCJHJlbGVhc2UtbmFtZS1va3RldG8tcmVn
    Y3JlZHMuZGVmYXVsdIIocmVsZWFzZS1uYW1lLW9rdGV0by1yZWdjcmVkcy5kZWZh
    dWx0LnN2YzANBgkqhkiG9w0BAQsFAAOCAQEAN4y9iuWcuVz3NSdfzMAnVH34Not9
    3VOCaJVmQep/S1uBW0PevPntm5U/1CEEv3IB+lIsGFNoVu+BCPQxBmjCX2HBg3Ss
    4BJlXKnHM9P4v6Sw83bQefOB66iP58yH6EAJCpu/l7Ozi4D6eLT8URdYilVHR5te
    9M+LDVUFd+NBYTgX/lNqNuhTUphF8v19vRmc633lMmf4WQRRUy66EMJm1s/n6g47
    UIL1XBcs7inSQ/Z9hvxmVgDASlyDwv61D4k44h6rV396UBNaduVxL3uZUb/lQQE2
    +uLA6g/wqCUhV+asCuavMtOwjsS1Co9i71Tx9EAvibCfb80/coetNHCLOQ==
    -----END CERTIFICATE-----
    
  tls.key: |- 
    -----BEGIN RSA PRIVATE KEY-----
    MIIEpQIBAAKCAQEA0ME+KLZofAgzo0mMet/f77UDBkWs0Hwu1uWjhLuujtzx60cb
    DuLyjr2DbZltmSavBCBqAtMGUejK1Xp34/kcgP+1QE7t/e1ictFWqHarILGsxI4U
    hwL+/kb0OU1bUV09fFOppAbQHnc0lyWgbG2RmuFr4XOEH6DqatrDIWc4ZlIbPot7
    4GUuzEJaaTnnbDT2/E4r3zbMRU8O634I8UpliMJEUq9txSq2dv2FLSVoPRZc02V2
    V7jxQ//qrbYlyEbzDSGWkfpAAAQ1Nmyh7UutnZw9FVdToRfvtKYuBSnH5uuQlZ/w
    1nTfu/oUQL+u0DQjF6/akf9ij6bRbxpTZmQ1+wIDAQABAoIBAQCcp/fam5BrS8hc
    iEwoxaqKe19KrKzUQ+zujaQZbrK/OSU+t7yhfkQiRCvF6rapkLMUOLL1baE3hKf6
    bg5cgUwXrk05dkH5JdSUb25Fu9AOF+ecFTdoXiI3dc2+1sNpmrwSecI7enVh93j6
    2Fy8Ibl77iCELqj/B0YDbCm0/n3/oc+MXkm5HzEGN80eG159eIjIHYCG8B2xIIlh
    geV2WMDOeyPqYrjIakQ/L3zw74HRXyjKDTXTyCKebASMexf9d8fUB0mw6WGOy/CS
    rcdE0XqtHDBRR3fjpYmNCFjRKf30ILhiH+CtGrHEKStYomk53KVjnw76V1ih6AFD
    2naMYZ4JAoGBANIVOVHT++qZ8543PYZs3zUkimev6pPupz0pTCJTG8fG5erb3U0i
    9f3Huj6wrwPG6li2671sbqisJs7EXhxvcgfCifgELZU68djOENFpUdqhWp0FD5lK
    1ABoivf9C7KgunSPw59I3DJeABlpnXrB6rlYOSPlD3G9N7qmw9bslzJ9AoGBAP5h
    td2IwUQLHjhoriKvoG46MdqzT2xZJHjrjfNr7JYxW5RijawU9f1G92HHxmten5pw
    J8Ag4Of5stBmwDz682egETiPmvb7/WcUlqpc8WOZoLPMrOQqdft5gdK7xIlPLDAV
    tD6J02tVegQop4wZ9Sd5HhNDwLqnnLT/S+GKvjvXAoGBALnQR+iWZOT10kKIfYSe
    WzZ34Wsgb4z0szsngc2CULn8tHNskGqfl5AlzheQ0tu2XqSk9hGPDLlnutN7X/oq
    oGM4sCuMFn09q5ele76dNub3fFwRk+B0DNtnnDMHwAb4nrJmThJesVRjTBcuETn4
    tpHE9JVJDsX9JIOU6Pb6QClJAoGBAMR7PDnMs1qXK9RuJnJsLQJ2uKMv9Jy/jchI
    SPBH4AlyPkYyiTLtTcM/2TwRTlUIVUa4cjuYKZ+D4nXNp5ZyTycvH54MbalvoZ7I
    7EbSWzCPLO0znibuFQsUIw5eMcPM/1h0qy/SzRYOg5xKun8gXZcLmgtPPcHuTMAQ
    oM+olp8pAoGAYgZXoxb9UzpS5TvGMqOUaHNuiDteKQt8bbiMYdnBT34sjkO2RXSN
    xXlP3sFtsYSW1PJTIK27d8BxIf0VPXm0M1U9P5VZrmwkK/p0c2AYX6vX67N3esbQ
    0YYUCbA6B3vzwIQRJo1ODXn70OUCbBCS2LP6b2LsUlzXM/BnWtJ+yN4=
    -----END RSA PRIVATE KEY-----
---
# Source: okteto/templates/registry-http-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-okteto-registry-http-secret
  labels:
    app.kubernetes.io/component: "registry"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-registry-http-secret"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm

type: Opaque
data:
  haShared: "b2t0ZXRv"
---
# Source: okteto/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-okteto
  labels:
    app.kubernetes.io/name: "release-name-okteto"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "api"
    app.kubernetes.io/part-of: "okteto"
type: Opaque
data:
  "OKTETO_LICENSE": ""
  "OKTETO_COOKIE_SECRET": ""
---
# Source: okteto/templates/webhook.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: release-name-okteto-mutation-webhook
  namespace: "default"
  labels:
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/name: "release-name-okteto-mutation-webhook"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm

stringData: 
  ca.crt: |- 
    -----BEGIN CERTIFICATE-----
    MIIDJjCCAg6gAwIBAgIRAI9kH90Nzkx4FPh2wMuqXDIwDQYJKoZIhvcNAQELBQAw
    HTEbMBkGA1UEAxMSb2t0ZXRvLWludGVybmFsLWNhMB4XDTI0MDUxNTA5MTczN1oX
    DTM0MDUxMzA5MTczN1owHTEbMBkGA1UEAxMSb2t0ZXRvLWludGVybmFsLWNhMIIB
    IjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmujKR8KPPQlxgU2HuP+ox/GB
    yI3ZBlVcaod3jUUzKTFIHMUgUqdc4iCr4aiXvpp24soJE7qIthpBOq+FzeZUt94/
    YYYHyYASuzTXTK+pqAPDQD/pcGHdP49uhq7J2LMBNRvl5ssgw267fWXpA5791l71
    QE2uNko7mWBtIlJxMDAgk+Zxh1+sndeow4YBSPpcd6LOwQoYHDkB665lZc/igBq7
    Dc58V/hLvGTHH2CuVxSTxwdFmM/pScp4K1R0F0+2vVYNPhE+1OaLqmexB9LDvsS7
    UqYmjFzT+lVigJ3Y9MSVkzwMzbVGNbHK+0V5X43IHbMKoeF9rPx+pduwBkFGBQID
    AQABo2EwXzAOBgNVHQ8BAf8EBAMCAqQwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsG
    AQUFBwMCMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFJ6ITviJQlirIPtVf27Z
    NHPnU6e8MA0GCSqGSIb3DQEBCwUAA4IBAQBVZ9epeVz5mtFS9i9C1Ipej5aJMono
    ajx608P3inD1TRaWs9pKoQgB2F6w5Gy60yQ8o0Yqurt99JUx6qLUhXNCJyFpVQoW
    JC8AhlVj5eNBN67sryGVOn/akGyB+KxOmIT3VIp8NqBeshD440ilIZJMuFZp9V3X
    C7jh6jLhHbfyvUJnwJSxbzt8B/XAo/DpngulzvX8r0EH5jzO1fIgtwO973GOJlSy
    udnxDBhCKdNJjfy6bnxLEcJnxp2xk2LH0IiDtdT/pvY3WKwqOzvDHEREGc2R8OCs
    l3mv89TpykqCSp8g76HnsbizErk/hdnNKDJIMFvmMPERQJB2fN9Eccpv
    -----END CERTIFICATE-----
    
  tls.crt: |- 
    -----BEGIN CERTIFICATE-----
    MIIDyzCCArOgAwIBAgIPBwBhIQ5jhsjulaDZw9TJMA0GCSqGSIb3DQEBCwUAMB0x
    GzAZBgNVBAMTEm9rdGV0by1pbnRlcm5hbC1jYTAeFw0yNDA1MTUwOTE3MzdaFw0z
    NDA1MTMwOTE3MzdaMC8xLTArBgNVBAMTJHJlbGVhc2UtbmFtZS1va3RldG8tbXV0
    YXRpb24td2ViaG9vazCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALN1
    kbo0GlfiO51dYt+BROVMNJ3mSHhawyEg/Q2FZ0UZ7Eh0XkucxsZRwrqXNW67FHN8
    vkVm3Wic3aMEACkduFcKd6to5odTxBbf/CNY2Y8RAUikHvfq54AWtO4oihsd4F7i
    tguPIt6zmnWr1btal3iOwQr3h6fHANA3ymJen20Rsw2lpD42DmPJTRw/dERkAX3X
    6D5YaW0IdG26ksRvQ0htshFlhqY84/tNzuyC4JY/eFcUTj83TNF142ZhE++M5/ZU
    Tuv6hMV1v6W+Z3De2eS7X9rO8JJXHsrv2wr4ppTT/K4v2pSkYtrfmJo/lCY3mUE4
    iHJfNWTfzz7BaRFg+O0CAwEAAaOB9TCB8jAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0l
    BBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgw
    FoAUnohO+IlCWKsg+1V/btk0c+dTp7wwgZEGA1UdEQSBiTCBhoIkcmVsZWFzZS1u
    YW1lLW9rdGV0by1tdXRhdGlvbi13ZWJob29rgixyZWxlYXNlLW5hbWUtb2t0ZXRv
    LW11dGF0aW9uLXdlYmhvb2suZGVmYXVsdIIwcmVsZWFzZS1uYW1lLW9rdGV0by1t
    dXRhdGlvbi13ZWJob29rLmRlZmF1bHQuc3ZjMA0GCSqGSIb3DQEBCwUAA4IBAQAd
    dBKo2mF+Qc+gt00LI8RMCWrYNDvCTG0yWRDSeQOUcOQ9mpZ42NdDa98dITXhQB1o
    4bKI7PofNY82ILudFJc5NLm1ZfGBchL8cghR/LgvmLRwaocP01lAUUaOQOia5dfj
    1h/jkFEI6aPDNmUfvBfz7vgayQRAf/cfJJdgqL7kIxiP8u3WKe54seWcQRhXO9VZ
    MupTJru46DaS6ZkgQR6KNneE/OXRFuROj9TnuQbGPwYTaRQLVrtPocC0HweUnvwt
    Dun+dI5P2k7tt/FXcK4cnc6NpCJxmfW4R8J6bXcF/4K7vRIUOeBalHqK2srTXHGg
    RHLt4Gkq5vpwiyMdnraM
    -----END CERTIFICATE-----
    
  tls.key: |- 
    -----BEGIN RSA PRIVATE KEY-----
    MIIEowIBAAKCAQEAs3WRujQaV+I7nV1i34FE5Uw0neZIeFrDISD9DYVnRRnsSHRe
    S5zGxlHCupc1brsUc3y+RWbdaJzdowQAKR24Vwp3q2jmh1PEFt/8I1jZjxEBSKQe
    9+rngBa07iiKGx3gXuK2C48i3rOadavVu1qXeI7BCveHp8cA0DfKYl6fbRGzDaWk
    PjYOY8lNHD90RGQBfdfoPlhpbQh0bbqSxG9DSG2yEWWGpjzj+03O7ILglj94VxRO
    PzdM0XXjZmET74zn9lRO6/qExXW/pb5ncN7Z5Ltf2s7wklceyu/bCvimlNP8ri/a
    lKRi2t+Ymj+UJjeZQTiIcl81ZN/PPsFpEWD47QIDAQABAoIBAGn9r2MtcL2lNZZ8
    2G+vVrSi7JSxtO24lXTUmgDJYLP0WpR0fljkMJZjJcK0me9bePm4nFw7I9usgk7M
    hxfBoOVvnjxTyYv10mO8SJvL1zrjTUHNBSlhyPbi8luS//aCD8ma1vA+ytaDd1+2
    bJaqK7odfjBu/+T86SMRQGwW/MwaYPdrGxLz7E9w0qD64imzwm2Gcig+qNaf751U
    5LFJ0OAvsh2eTmjHaLGB/64GeX/IQewbdpHbwNsOrseJ4hrOUiSpbxXA6fVoCrNr
    BtJjfDam3iek3TZP+JfMcuYGrZQ8uR8AvFmiBnA3Kyg7Qvkvy6DHmtgXiLa69qWZ
    g7BnoTUCgYEAxS0zLKifo56bn9lCDKNpwnXxV1juULu9QESW7e7bQuGUAR+BJm9/
    OY2LA19OGll/32P0S35ggYvhthqoXGADoycUk6jbAfHwGTHJNNPps82XroDyVXZy
    DeCXzwUiU2PFfFBOanbveVu4wtfrv/ksRVNj1fzRlNuBvBQuHUVkeMsCgYEA6P9C
    o7lw4c83n5yz2hVNJ+TZMDskw3ciMljEtZlbMCIrQc+we92TMFhoMruxht5uRrfR
    DrV5cumtN8OSgUHEuHH4iSRDXcYQIQlaFulsmmSbMSi9sakrtxhUT+q10h/CdCVw
    gVDqL4qwUex7Ihpw8X+wmf175ZUzobWpjmKPdicCgYAtTpSKt3hvLVvPICnoI4iC
    sX0yN/ISxQDYiqovpAnn1VOf6nBPt6EBRX/i13xn25bhauNQkYp1WgIUSQ3UpA9R
    5wH4Z/1i9gfYkjMMm4EA2sX2yBRnBN9yRuA7Jo/bn3padU1/czLVrPjIdLrsEsJU
    b7PqELzLuqCV6gEqoq5SfwKBgFq8XYVJCE7H1c+QxPGe7gclNfd0cOK2GFkm/KQD
    7uEVzWa5rO7v4QwowZtQQNhW8vcTSpTB02QO4Ggg/4Lay/NQXwt5VcrFAS78Z1sY
    2DRgDZfdV9JCIUYScXMV4mzL9XwpwGB71FdjWTruLx2e0nEZ2vp9HqzPp+XHyxoq
    A9htAoGBAJ4D0/VSEQMtLs1BKLFVsVNSGTUZhC4fIKTKEpSecHlujfhM6WQMzZ+P
    xyZTCkjHURUSUDuB/3xUUsnK5gMAm/TLeCIXUFlLyDbej5TyyMs+xOKVjPKlBGEB
    DWvcSZV/sZbfuP8TNtZwlehu1spitjw3nPNeRQwcs01AtgqA5J78
    -----END RSA PRIVATE KEY-----
---
# Source: okteto/templates/wildcard-certificate.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: default-ssl-certificate-selfsigned
  namespace: "default"
  labels:
    app.kubernetes.io/part-of: "okteto"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    dev.okteto.com/fqdns: "[\"localtest.me\"]"

stringData: 
  ca.crt: |- 
    -----BEGIN CERTIFICATE-----
    MIIDJTCCAg2gAwIBAgIQe6R/d0fjrbbp6qCC7rarNDANBgkqhkiG9w0BAQsFADAd
    MRswGQYDVQQDExJva3RldG8td2lsZGNhcmQtY2EwHhcNMjQwNTE1MDkxNzM2WhcN
    MzQwNTEzMDkxNzM2WjAdMRswGQYDVQQDExJva3RldG8td2lsZGNhcmQtY2EwggEi
    MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDe1Xun5pWbFJQ3xNOQXoh0QLew
    GBqVDtMPuReSY4RrDHOX8BUHbypYW7OF+g/WK6ICn289o3LmFPK5+zrIe3o43660
    lQBhzND20OvF2qZV556tW4/srGDfPq09478Qxuq7xFOT/Am+iqheoOISyCjHbC3M
    26/uqEsz87Kphbw7zSskrAKdrpso3PVYbozXQNInB19wqF8DKyQCAmuOeFGHTNCT
    3j/gOWPbtCfBUXVIraEPcbyfAdQARvccJ0DGfwXaSMxyK75tUDaX/xupCZivzLzm
    fZS4EXABLQuLLfg7K1+2XIwT47VlKZ+zu5WrJ416D8X8F6NJKrPHechTiGhrAgMB
    AAGjYTBfMA4GA1UdDwEB/wQEAwICpDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYB
    BQUHAwIwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUfyY4ysiXxYEyxXkz7+gQ
    WQhBkXEwDQYJKoZIhvcNAQELBQADggEBAFZujdKQxLcZGF4OwsmZrqPQurNqiOdv
    aDHDtnqmSFJnrIC85Rg0Bxkdl4bJ4qh9zsDWN/esYiMWH2glHTecskDkhb/fvw0L
    SpJ7dDHUH4o1boOYJsAKCSyvd/+0Y5pDpN/o8HjUk4GwNKJ8/zMY5nK5b0RK9Huj
    sVcZ2/R/tjtPyOnU1IypIu1Vco4NLj60pZjZ+zT2xIO0PJNxl/RP0cukVdojMmyf
    VWPiZhI5WDNgTF9hUXljy9bQ3KVLMeYGY4LQWenO8lYUSQ5IfZeyPCR6oMwTYVkT
    +DBt3XEeegCOFqKjlKU29k9RimYJ1888eOZrI8xv6yivto5xIHRrmO8=
    -----END CERTIFICATE-----
    
  tls.crt: |- 
    -----BEGIN CERTIFICATE-----
    MIIDPDCCAiSgAwIBAgIRAPlWm6yQy1rJkbpfGE3dh9owDQYJKoZIhvcNAQELBQAw
    HTEbMBkGA1UEAxMSb2t0ZXRvLXdpbGRjYXJkLWNhMB4XDTI0MDUxNTA5MTczN1oX
    DTM0MDUxMzA5MTczN1owGTEXMBUGA1UEAwwOKi5sb2NhbHRlc3QubWUwggEiMA0G
    CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCwOZFnbiwRghVxSbn3/laz5eQcXDj
    vkfkCgXSWm/oEmmbW/YqrzAelQadbVNAXwNBjWiw003dfuGW8rifzuQ+QeyeeJvn
    6jlsu74iPIsIQkokyEI7fCwrVfrJ2T/gIm9VLrRzJ0MfQUD3w+ZQWYP67z9BA6uU
    NNwQ/zXprqvZkZz5k68U2YxZEyViGd9k2hSMY4o0WYQ1owvIvsPOHd+i5+TK/kC5
    Gq8fBG8mLONzEaq5KzZgDKlRdXY0mYIM6D187T9M7VF4QbN7eqDAQzj8oaCi0TIz
    EQXjy/8w2RFXVEqT4uRqyVc6C+u25jLpAUdQZFVoycI6sO8bQT4NGQDDAgMBAAGj
    ezB5MA4GA1UdDwEB/wQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUH
    AwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBR/JjjKyJfFgTLFeTPv6BBZCEGR
    cTAZBgNVHREEEjAQgg4qLmxvY2FsdGVzdC5tZTANBgkqhkiG9w0BAQsFAAOCAQEA
    03jtfzU8PgDtR5CrXZR/Hs6+Cw35UXDwGkVcE9tOG4zduv+a3PK5GKABWOLbDLPr
    VQV7qu6u0uq11SXLm98BfyKEcwhq63nTUs4yj4JvK5AE2/A1js8+3mkwdkwETBXu
    TRm6R/9Ruu4ryDBFsQDasBGDTIu2G43SkfmHEGoONiaBhT2bUNyAvJRrXNkD1nxl
    yAYNVdOE9QL4KkN9/L8o6fTAwCfZrlsNghURggggQV+g5FmaBRH+2nxt51leP/5p
    NnENy1mQslXcBrOjZS0lxTZuORjwqw4e5uUopWF4S061wCzyfcSxXecact9+/x25
    5Ybvafa7B1B3mb7LPC36/w==
    -----END CERTIFICATE-----
    
  tls.key: |- 
    -----BEGIN RSA PRIVATE KEY-----
    MIIEpAIBAAKCAQEAwsDmRZ24sEYIVcUm59/5Ws+XkHFw475H5AoF0lpv6BJpm1v2
    Kq8wHpUGnW1TQF8DQY1osNNN3X7hlvK4n87kPkHsnnib5+o5bLu+IjyLCEJKJMhC
    O3wsK1X6ydk/4CJvVS60cydDH0FA98PmUFmD+u8/QQOrlDTcEP816a6r2ZGc+ZOv
    FNmMWRMlYhnfZNoUjGOKNFmENaMLyL7Dzh3foufkyv5AuRqvHwRvJizjcxGquSs2
    YAypUXV2NJmCDOg9fO0/TO1ReEGze3qgwEM4/KGgotEyMxEF48v/MNkRV1RKk+Lk
    aslXOgvrtuYy6QFHUGRVaMnCOrDvG0E+DRkAwwIDAQABAoIBAQCAIQMeuAajSl//
    decD1LIsEbnImSnJXA3WNNXhsAhB6aM7SERrjric1jT069FC33+35/4Bn/NxjyGB
    +wyGb0pwv1SaagVAjjPbmqUbxzM9asd27Z3NnwM8O6P0mo7Qujb/Fuw3epRJgtfo
    aiUjpdEUDcVS08RVjHVgZVel93oud9wc7WWnDCOIlZM4iEYmmOlWvi//OqCZTrlt
    AgxYwt5FCW3WLu/4+Mj2x8R9occfTCzyBDIZbpMMhqvuCQqAaztagPsWVQfNtFdx
    KtcXcD5yVDQR+kRGBU6fWG+javm1q+u5wLhRhkWJSGdFtKreWwpXNQTeVX2k5k0n
    HvoVQl1BAoGBAMj+sNKxN4HcdsgIxnz1XrYCJU+7hOmm2PdeLaJZe47N4bK8xBlm
    TpXZugTSVU5h10DYApqMo3oxf49Y7ZreMib3Sn+WPZIhMGbI3o5D5ZMa2EBGgkj7
    +wfBACHZzJael/3wBjlRkzumUmvtWP8nHLSf8B3g3x15LEwWDQXBwL8hAoGBAPgM
    81DUXESV0GscbG4Y36g8eowdIW8RM3OBFyDVVAOWhhAMgDCAyg6Av60SmFzvb+I+
    9jM2VCtD1eiilY7EU+XQTr51f/T/UyZSWhhTlI0aIk2sujiKzIIqnY83rBeKYo3h
    pi/cmwGjtVDkw0IYjgIsUQUb5winugZlm5HhnzdjAoGBAK2cUN+sc2WYKIFgExKc
    XtKXx+K29ndbxszkbEZvRGp1Kx5YLopB9F87UZIYm9a4bFV2P8l+8TX6y1PmXFYI
    1wkRUSgjfctbH5OorZP00bfe2Cusu5yPCqYH7zVOC4mOM3sEeFvKOoKrh0XyHY1H
    G2RpQd6M/itXHwwZf+YZFYQBAoGAZo40Kz8hxtmKCj7+NabjEdOvdy60HA+ojiDZ
    RyHsUm9xjkEc3vDgmY5xsUT26bW1NH2DnTjhI+IwFrbhzt0tMt8lL2m1Nb46yqVR
    yq0DxjL/6812UNpSI58q9YO3CySUCsU4yKEVFWByHrf2YuV0EUHxXYNjyhhOuUZZ
    Q79c7LECgYAHbfWJZqS2kD4DcbkYGWA1hgcJKs4WGlC/2aLkcz7+uvGIWY25Ha+H
    KJR5ceP5hScKDdboc7LoPo/AtHXofJ3TJN54ErtSKZujwm9hwghlbXN34978JH1Z
    NbBtlpDj2H8A/YZi2carFBelE7Tjzzq6RC6xV2ZERq3+b7iroNYaqA==
    -----END RSA PRIVATE KEY-----
---
# Source: okteto/charts/ingress-nginx/templates/controller-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.9.1
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.9.6"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-ingress-nginx-controller
  namespace: default
data:
  allow-snippet-annotations: "true"
  annotation-value-word-blocklist: "load_module,lua_package,_by_lua,root,serviceaccount"
  annotations-risk-level: "Critical"
  enable-underscores-in-headers: "true"
  ignore-invalid-headers: "false"
  log-format-escape-json: "true"
  log-format-upstream: "{\"time\": \"$time_iso8601\", \"remote_addr\": \"$remote_addr\", \"x_forward_for\": \"$proxy_add_x_forwarded_for\", \"request_id\": \"$req_id\", \"remote_user\": \"$remote_user\", \"bytes_sent\": $bytes_sent, \"request_time\": $request_time, \"status\": $status, \"vhost\": \"$host\", \"request_proto\": \"$server_protocol\", \"path\": \"$uri\", \"request_query\": \"$args\", \"request_length\": $request_length, \"duration\": $request_time,\"method\": \"$request_method\", \"http_referrer\": \"$http_referer\", \"http_user_agent\": \"$http_user_agent\" }"
  proxy-buffer-size: "64K"
  ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:AES128-GCM-SHA256:AES128-GCM-SHA384"
---
# Source: okteto/charts/okteto-nginx/templates/controller-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    helm.sh/chart: okteto-nginx-4.9.1
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.9.6"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-okteto-nginx-controller
  namespace: default
data:
  allow-snippet-annotations: "true"
  annotation-value-word-blocklist: "load_module,lua_package,_by_lua,root,serviceaccount"
  annotations-risk-level: "Critical"
  enable-underscores-in-headers: "true"
  ignore-invalid-headers: "false"
  log-format-escape-json: "true"
  log-format-upstream: "{\"time\": \"$time_iso8601\", \"remote_addr\": \"$remote_addr\", \"x_forward_for\": \"$proxy_add_x_forwarded_for\", \"request_id\": \"$req_id\", \"remote_user\": \"$remote_user\", \"bytes_sent\": $bytes_sent, \"request_time\": $request_time, \"status\": $status, \"vhost\": \"$host\", \"request_proto\": \"$server_protocol\", \"path\": \"$uri\", \"request_query\": \"$args\", \"request_length\": $request_length, \"duration\": $request_time,\"method\": \"$request_method\", \"http_referrer\": \"$http_referer\", \"http_user_agent\": \"$http_user_agent\" }"
  proxy-buffer-size: "64K"
---
# Source: okteto/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: "release-name-okteto"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "api"
    app.kubernetes.io/part-of: "okteto"
  name: "release-name-okteto"
  namespace: default
data:
  
  OKTETO_APP_VERSION: a5f84810e
  OKTETO_CLI_VERSION: 2.26.1
  OKTETO_VERSION: 1.19.2
  "OKTETO_LOG_LEVEL": ""
  "OKTETO_CONFIGMAP_NAME": "release-name-okteto"
  "OKTETO_SERVICE_ACCOUNT_NAME": "release-name-okteto"
  "OKTETO_CLOUD_PROVIDER": "ephemeral"
  "OKTETO_AUTH_PROVIDER": "token"
  "OKTETO_LICENSE_HARD_LIMITS_ENABLED": "false"
  "OKTETO_ADMIN_CAN_DEPLOY": "false"
  "OKTETO_RELEASE_NAME": "release-name"
  "OKTETO_MAINTENANCE": "false"
  "CLUSTER_PUBLIC_ENDPOINT": "https://kubernetes.localtest.me"
  "SKIP_CA_IN_CREDENTIALS_QUERY": "true"
  "OKTETO_QUICKSTARTS": "[{\"name\":\"Github\",\"url\":\"https://github.com/\"},{\"name\":\"Gitlab\",\"url\":\"https://gitlab.com/\"},{\"name\":\"Bitbucket\",\"url\":\"https://bitbucket.org/\"}]"
  "OKTETO_SSH_SECRET_NAME": "okteto-ssh"
  "OKTETO_PULL_POLICY": "IfNotPresent"
  "OKTETO_BASE_DOMAIN": "localtest.me"
  "OKTETO_BASE_DOMAIN_PORT": "443"
  "OKTETO_GLOBAL_DEV_CLUSTER_ROLE": ""
  "OKTETO_DEV_CLUSTER_ROLE": "cluster-admin"
  "OKTETO_SHOW_VOLUMES_ENABLED": "true"
  "OKTETO_FORCE_PODS_IN_VOLUME_ZONE": "true"
  "OKTETO_FORCE_NODE_TO_PODS_WITH_SAME_PVCS": "true"
  "OKTETO_PUBLIC_URL": "okteto.localtest.me"
  "OKTETO_PUBLIC_OVERRIDE": ""
  "OKTETO_USER_DEFINED_NAMESPACES": "true"
  "OKTETO_INGRESS_RELOAD_DELAY": "0"
  "OKTETO_VIRTUAL_SERVICE_ENDPOINTS": ""
  "OKTETO_INGRESS_CLASS": "okteto-nginx"
  "OKTETO_CONTROL_PLANE_INGRESS_CLASS": "okteto-controlplane-nginx"
  "OKTETO_INGRESS_MODE": "dual"
  "OKTETO_INGRESS_FORCE_CLASS": "false"
  "OKTETO_INGRESS_FORCE_SUBDOMAIN": "false"
  "OKTETO_INGRESS_IP": ""
  "OKTETO_NAMESPACE_ANNOTATIONS": "{}"
  "OKTETO_NAMESPACE_LABELS": "{}"
  "OKTETO_NAMESPACE_INGRESS_ANNOTATIONS": "{}"
  "OKTETO_NAMESPACE_INGRESS_LABELS": "{}"
  "OKTETO_NAMESPACE_AUTO_ROLE_BINDING_ENABLED": "true"
  "OKTETO_LOADBALANCER_CONVERSION_ENABLED": "true"
  "OKTETO_COOKIE_HASH": ""
  "OKTETO_DEFAULT_BACKEND": "release-name-ingress-nginx-defaultbackend.default"
  "OKTETO_BIN_IMAGE": ""
  "OKTETO_PIPELINE_INSTALLER_IMAGE": "okteto/installer:a5f84810e"
  "OKTETO_PIPELINE_RUNNER_IMAGE": "okteto/pipeline-runner:1.0.4"
  "INSTALLER_PRIORITY_CLASS_NAME": ""
  "NAMESPACE_DESTROY_ALL_PRIORITY_CLASS_NAME": ""
  "OKTETO_PIPELINE_RUNNER_ANNOTATIONS": "{}"
  "OKTETO_PIPELINE_RUNNER_LABELS": "{}"
  "OKTETO_PIPELINE_RUNNER_ENV": "[]"
  "OKTETO_PIPELINE_RUNNER_RESOURCES": "{\"requests\":{\"cpu\":\"10m\",\"memory\":\"50Mi\"}}"
  "OKTETO_PRIVATECA_SECRET_NAME": "default-ssl-certificate-selfsigned"
  "OKTETO_PRIVATECA_SECRET_KEY": "ca.crt"
  "OKTETO_TELEMETRY_ENABLED": "true"
  "OKTETO_PRIVATEREGISTRY_SECRET_NAME": "release-name-okteto-dockerconfig-static"
  "OKTETO_DEFAULT_PLAN": "enterprise"
  "OKTETO_POOL": ""
  "OKTETO_BUILD_POOL": ""
  "OKTETO_DEV_POOL": ""
  "OKTETO_PROTECT_PERSONAL_NAMESPACE_ENABLED":  "true"
  "OKTETO_PULLALWAYS_ENABLED":  "true"
  "OKTETO_SERVICE_EXTERNAL_NAMES_ENABLED":  "true"
  "OKTETO_NETWORK_POLICIES_ENABLED":  "false"
  "OKTETO_INGRESS_LIMITS_ENABLED":  "false"
  "OKTETO_INGRESS_PROXY_BODY_SIZE": "60M"
  "OKTETO_GC_ENABLED":  "true"
  "OKTETO_DEBUG_SERVER":  "false"
  "OKTETO_GC_SCALE_TO_ZERO_PERIOD": "24"
  "OKTETO_GC_DELETE_NAMESPACE_PERIOD": "15"
  "OKTETO_AUTOSCALER_ENABLED":  "false"
  "OKTETO_VOLUME_SNAPSHOTS_ENABLED":  "false"
  "OKTETO_QUOTAS_RESOURCES_ENABLED":  "false"
  "OKTETO_QUOTAS_BANDWIDTH_ENABLED":  "false"
  "OKTETO_QUOTAS_BANDWIDTH_UP_ENABLED":  "false"
  "OKTETO_QUOTAS_REQUESTS_ENABLED":  "false"
  "OKTETO_AUTOSET_DEFAULT_LIMITS":  "false"
  "OKTETO_QUOTAS_LIMITS_ENABLED":  "false"
  "OKTETO_QUOTAS_LIMITRANGES_MAX_ENABLED":  "false"
  "OKTETO_QUOTAS_LIMITRANGES_REQUESTS_ENABLED":  "true"
  "OKTETO_QUOTAS_LIMITRANGES_LIMIT_REQUEST_RATIO":  "0"
  "OKTETO_QUOTAS_LIMITRANGES_REQUESTS_CPU": "10m"
  "OKTETO_QUOTAS_LIMITRANGES_REQUESTS_MEMORY": "50Mi"
  "OKTETO_QUOTAS_LIMITRANGES_LIMITS_ENABLED":  "true"
  "OKTETO_QUOTAS_LIMITRANGES_LIMITS_CPU": "2"
  "OKTETO_QUOTAS_LIMITRANGES_LIMITS_MEMORY": "8Gi"
  "OKTETO_REGISTRY_ENABLED": "true"
  "OKTETO_REGISTRY_URL": "registry.localtest.me"
  "OKTETO_REGISTRY_PULLPOLICY": "cluster"
  "OKTETO_BUILDKIT_ENABLED": "true"
  "OKTETO_BUILDKIT_PERSISTENCE_ENABLED": "false"
  "OKTETO_BUILDKIT_URL": "tcp://buildkit.localtest.me:443"
  "OKTETO_BUILDKIT_INSTANCE_NAME": "release-name-okteto-buildkit-1133156121"
  "OKTETO_BUILDKIT_SERVICE_ACCOUNT_NAME": "okteto-buildkit"
  "OKTETO_GITHUB_INTEGRATION_ENABLED": "false"
  "OKTETO_NODE_READINESS_CHECKER_ENABLED":  "false"
  "OKTETO_MAX_PERSONAL_ACCESS_TOKEN": "5"
  "OKTETO_GCP_STORE_ENABLED": "false"
  "OKTETO_GIT_SSH_USER": "git"
  "OKTETO_DEV_STORAGE_CLASS_ENABLED": "false"
  "OKTETO_NODE_STATIC_IP_ENABLED": "false"
  "OKTETO_VALIDATE_PVC_ENABLED": "false"
  "OKTETO_GIT_INSTALLER_ACTIVE_DEADLINE_SECONDS": "1800"
  "OKTETO_AUTO_ADMIN_ENABLED": "true"
  "OKTETO_SCALE_DOWN_PERSISTENT_RESOURCES": "false"
  "OKTETO_NAMESPACE_DESTROY_ALL_JOB_IMAGE": "okteto/backend:a5f84810e"
  "OKTETO_NAMESPACE_WAKE_ALL_JOB_IMAGE": "okteto/backend:a5f84810e"
  "OKTETO_NAMESPACE_SLEEP_JOB_IMAGE": "okteto/backend:a5f84810e"
  "OKTETO_PROMETHEUS_ENABLED": "false"
  "OKTETO_INSIGHTS_ENABLED": "false"
  "OKTETO_INSIGHTS_BEARER_SECRET_NAME": "okteto-insights"
  "OKTETO_INSIGHTS_BEARER_SECRET_KEY": "bearer"
  "MAX_TERMINATION_GRACE_PERIOD_SECONDS_ENABLED":  "false"
  "OKTETO_USER_POD_AFFINITY": "true"
  "OKTETO_USER_POD_ANTI_AFFINITY": "false"
  "OKTETO_ALLOW_DAEMONSETS_FOR_USERS": "false"
  "OKTETO_DISABLE_SYSTEM_EVENTS": "false"
  "OKTETO_ALLOW_MEMBERS_SHARE_NAMESPACE": "false"

  "OKTETO_KUBECLIENT_HOST": ""
  "OKTETO_KUBECLIENT_INSECURE": ""
  "OKTETO_SERVICEACCOUNT_ANNOTATIONS": "{}"
  "OKTETO_SERVICEACCOUNT_LABELS": "{}"
  "OKTETO_NAMESPACE_DEV_LABEL_VALUE": "true"
  "OKTETO_NAMESPACES_PREFIX": ""
  "OKTETO_ALLOW_DEV_PUSH_TO_GLOBAL_REGISTRY": "true"
  "OKTETO_INSTALLATION_BOARD_ENABLED": "true"
  "OKTETO_WILDCARD_CERTIFICATE_CREATED": "true"
  "OKTETO_WILDCARD_CERTIFICATE_PRIVATE_CA_ENABLED": "false"
  "OKTETO_EXTERNAL_ID_MAPPING_ENABLED": "false"
  "OKTETO_EMULATE_POD_SECURITY_POLICIES": "false"
  "OKTETO_ALLOW_CAPABILITIES": "null"
  "OKTETO_SLEEPING_INGRESS_CLASS_ENABLED": "false"
  "OKTETO_SLEEPING_INGRESS_CLASS_NAME": "okteto-sleeping"
  "OKTETO_INGRESS_TLS_SECRET_NAME": "default-ssl-certificate-selfsigned"
  "OKTETO_KUBETOKEN_LIFETIME_SECONDS": "86400"
  "OKTETO_BUILDKIT_INGRESS_ENABLED": "true"
  "OKTETO_DAEMONSET_INSTALLED": "true"
  "GC_UP_SESSION_BY_LAST_SYNCED_FILE": "false"
  "OKTETO_BOT_USER": "okteto-bot"
  "OKTETO_RESTRICT_GROUP_USER_ROLE_BINDINGS": "false"
  "PULLSECRETS_ENABLED": "false"
  "OKTETO_INSIGHTS_BUILDKIT_METRICS_ENABLED": "false"
  "OKTETO_EXTERNAL_ENDPOINTS": "[]"
  "OKTETO_INSIGHTS_EVENTS_EXPORTER_METRICS_ENABLED": "false"
---
# Source: okteto/templates/diagnostics-preflight.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: okteto-preflight
  namespace: default
  labels:
    troubleshoot.sh/kind: preflight
    app.kubernetes.io/component: "diagnostics"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-preflight"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  preflight-spec: 
    |-
      apiVersion: troubleshoot.sh/v1beta2
      kind: Preflight
      metadata:
        name: release-name-okteto-preflight
      spec:
        analyzers:
          - clusterVersion:
              outcomes:
                - fail:
                    when: "< 1.25.0"
                    message: Okteto requires at least Kubernetes 1.25.0
                    uri: https://www.okteto.com/docs/release-notes/
                - fail:
                    when: ">= 1.30.0"
                    message: Okteto requires a Kubernetes version between 1.25 and 1.29
                    uri: https://www.okteto.com/docs/release-notes/
                - pass:
                    message: Your cluster version meets the Okteto requirements
---
# Source: okteto/templates/diagnostics-redactor.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: okteto-redactor
  namespace: default
  labels:
    troubleshoot.sh/kind: support-bundle
    app.kubernetes.io/component: "diagnostics"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-redactor"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  redactor-spec: 
    |-
      apiVersion: troubleshoot.sh/v1beta2
      kind: Redactor
      metadata:
        name: release-name-okteto-redactor
      spec:
        redactors:
          - name: "redact helm values output"
            fileSelector:
              file: "**/helm-values-*/**"
            removals:
              yamlPath:
              - "license"
              - "auth.*.clientSecret"
              - "auth.*.clientId"
              - "auth.token.adminToken"
              - "cookie.secret"
              - "cookie.hash"
              - "github.appId"
              - "github.appPrivateKey"
              - "github.clientId"
              - "github.clientSecret"
              - "privateEndpoints.clientSecret"
              - "privateEndpoints.clientID"
---
# Source: okteto/templates/diagnostics-support-bundle.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: okteto-support-bundle
  namespace: default
  labels:
    troubleshoot.sh/kind: support-bundle
    app.kubernetes.io/component: "diagnostics"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-support-bundle"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  support-bundle-spec: 
    "apiVersion: troubleshoot.sh/v1beta2\nkind: SupportBundle\nmetadata:\n  name: release-name-okteto-support-bundle\n
      \ namespace: \nspec:\n  collectors:\n    - clusterResources:\n        namespaces:\n
      \       - default\n    - certificates: \n        secrets:\n          - name: default-ssl-certificate-selfsigned\n
      \           collectorName: \"wildcard-certificate\"\n            namespaces:\n              -
      default\n          - name: default-ssl-certificate-selfsigned\n            collectorName:
      \"ingress-certificate\"\n            namespaces:\n              - default\n          -
      name: default-ssl-certificate-selfsigned\n            collectorName: \"registry-certificate\"\n
      \           namespaces:\n              - default\n          - name: default-ssl-certificate-selfsigned\n
      \           collectorName: \"buildkit-certificate\"\n            namespaces:\n              -
      default\n          - name: release-name-okteto-mutation-webhook\n            collectorName:
      \"webhook-certificate\"\n            namespaces:\n              - default\n          -
      name: release-name-okteto-regcreds\n            collectorName: \"regcreds-certificate\"\n
      \           namespaces:\n              - default\n    - logs:\n        name: api-logs\n
      \       selector:\n          - app.kubernetes.io/component=api\n    - logs:\n        name:
      daemon-logs\n        selector:\n          - app.kubernetes.io/component=daemon\n
      \   - logs:\n        name: installer-logs\n        selector:\n          - app.kubernetes.io/component=installer\n
      \         - app.kubernetes.io/part-of=okteto\n    - logs:\n        name: buildkit-logs\n
      \       selector:\n          - app.kubernetes.io/component=buildkit\n          -
      app.kubernetes.io/part-of=okteto\n    - logs:\n        name: frontend-logs\n        selector:\n
      \         - app.kubernetes.io/component=frontend\n          - app.kubernetes.io/part-of=okteto\n
      \   - logs:\n        name: ingress-nginx-logs\n        selector:\n          - app.kubernetes.io/component=controller\n
      \         - app.kubernetes.io/part-of=ingress-nginx\n    - logs:\n        name:
      okteto-nginx-logs\n        selector:\n          - app.kubernetes.io/component=controller\n
      \         - app.kubernetes.io/part-of=okteto-nginx\n    - logs:\n        name: defaultbackend-logs\n
      \       selector:\n          - app.kubernetes.io/component=defaultbackend\n          -
      app.kubernetes.io/part-of=okteto\n    - logs:\n        name: webhook-logs\n        selector:\n
      \         - app.kubernetes.io/component=webhook\n          - app.kubernetes.io/part-of=okteto\n
      \   - logs:\n        name: migration-logs\n        selector:\n          - app.kubernetes.io/component=migration\n
      \         - app.kubernetes.io/part-of=okteto\n    - logs:\n        name: private-endpoints-logs\n
      \       selector:\n          - app.kubernetes.io/component=private-endpoints\n          -
      app.kubernetes.io/part-of=okteto\n    - logs:\n        name: regcreds-logs\n        selector:\n
      \         - app.kubernetes.io/component=regcreds\n          - app.kubernetes.io/part-of=okteto\n
      \   - logs:\n        name: eventsexporter-logs\n        selector:\n          - app.kubernetes.io/component=eventsexporter\n
      \         - app.kubernetes.io/part-of=okteto\n    - secret:\n        collectorName:
      cloud-secret\n        namespace: default\n        name: okteto-cloud-secret\n    -
      helm:\n        collectorName: helm-info\n        namespace: default\n    - runPod:\n
      \       name: helm-values-computed\n        collectorName: helm-values-computed\n
      \       namespace: default\n        podSpec:\n          serviceAccountName: release-name-okteto\n
      \         containers:\n          - name: helm-values-computed\n            image:
      alpine/helm:3.8.0\n            args: [\"get\", \"values\", \"release-name\", \"--all\",
      \"-o\", \"yaml\"]\n    - runPod:\n        name: helm-values-user\n        collectorName:
      helm-values-user\n        namespace: default\n        podSpec:\n          serviceAccountName:
      release-name-okteto\n          containers:\n          - name: helm-values-user\n
      \           image: alpine/helm:3.8.0\n            args: [\"get\", \"values\", \"release-name\",
      \"-o\", \"yaml\"]"
---
# Source: okteto/templates/helm-release-meta-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: "release-name-okteto"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "helm-release-meta"
    app.kubernetes.io/part-of: "okteto"
  name: "okteto-helm-release-meta"
  namespace: default
data:
  IsInstall: "true"
  IsUpgrade: "false"
  Name: "release-name"
  Namespace: "default"
  Revision: "1"
  Service: "Helm"
---
# Source: okteto/templates/registry-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-okteto-registry-config
  labels:
    app.kubernetes.io/component: "registry"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-registry-config"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  config.yml: |-
    version: 0.1
    log:
      accesslog:
        disabled: true
      fields:
        service: registry
      formatter: json
      level: info
    storage:
      cache:
        blobdescriptor: inmemory
    http:
      addr: :5000
      headers:
        X-Content-Type-Options: [nosniff]
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3
---
# Source: okteto/templates/crds/actions-crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
  labels:
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: actions.git.okteto.com
  name: actions.git.okteto.com
spec:
  group: git.okteto.com
  names:
    kind: Action
    listKind: ActionList
    plural: actions
    singular: action
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Action represents a pending execution of a gitDeploy operation
        type: object
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            required:
              - pipelineName
              - operation
              - status
              - repository
            properties:
              pipelineName:
                type: string
              operation:
                type: string
              status:
                type: string
              installationID:
                type: integer
              repository:
                type: string
              fallbackRepository:
                type: string
              branch:
                type: string
              githubCommentId:
                type: string
              commitSha:
                type: string
              source:
                type: string
              belongsToPreview:
                type: boolean
              filename:
                type: string
              variables:
                type: array
                items:
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      type: string
                    value:
                      type: string
              destroyVolumes:
                type: boolean
              forceDestroy:
                type: boolean
              catalogItemId:
                type: string
              labels:
                type: array
                items:
                  type: string
    served: true
    storage: true
---
# Source: okteto/templates/crds/external-resource-crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/resource-policy": keep
  labels:
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name:  externals.dev.okteto.com
  name: externals.dev.okteto.com
spec:
  group: dev.okteto.com
  names:
    kind: External
    listKind: ExternalList
    plural: externals
    singular: external
    shortNames:
    - er
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: External is the schema for the external resources which stores the needed information for each element
        type: object
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            required:
              - name
              - endpoints
            properties:
              name:
                type: string
              icon:
                type: string
                default: default
                enum:
                - container
                - dashboard
                - database
                - default
                - function
                - graph
                - storage
                - launchdarkly
                - mongodb
                - gcp
                - aws
                - okteto
              notes:
                type: object
                required:
                - path
                - markdown
                properties:
                  path:
                    type: string
                  markdown:
                    type: string
              endpoints:
                type: array
                items:
                  type: object
                  required:
                  - name
                  - url
                  properties:
                    name:
                      type: string
                    url:
                      type: string
    served: true
    storage: true
---
# Source: okteto/templates/crds/git-catalog-item-crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/resource-policy": keep
  labels:
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: catalogitems.git.okteto.com
  name: catalogitems.git.okteto.com
spec:
  group: git.okteto.com
  names:
    kind: CatalogItem
    listKind: CatalogItemList
    plural: catalogitems
    singular: catalogitem
    shortNames:
    - ci
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: CatalogItem is the schema for the git based catalog items which stores the needed information for each element
        type: object
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            required:
              - name
              - repositoryUrl
            properties:
              name:
                type: string
              repositoryUrl:
                type: string
              branch:
                type: string
              manifestPath:
                type: string
              variables:
                type: array
                items:
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      type: string
                    value:
                      type: string
    served: true
    storage: true
---
# Source: okteto/templates/crds/registry-crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/resource-policy": keep
  labels:
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: registries.admin.okteto.com
  name: registries.admin.okteto.com
spec:
  group: admin.okteto.com
  scope: Namespaced
  names:
    kind: Registry
    listKind: RegistryList
    plural: registries
    singular: registry
    shortNames:
    - r
    - reg
  versions:
    - name: v1
      served: true
      storage: true
      additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          description: CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
          name: Age
          type: date
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              oneOf:
                - properties:
                  required:
                    - static
                - properties:
                  required:
                    - awsIamUser
              properties:
                static:
                  type: object
                  oneOf:
                    - properties:
                      required:
                        - user
                        - passwordSecretRef
                    - properties:
                      required:
                        - userSecretRef
                        - passwordSecretRef
                  properties:
                    port:
                      type: integer
                      description: "port to be used for the registry (optional)"
                    user:
                      description: "the user used to authenticate against the registry"
                      type: string
                    userSecretRef:
                      description: "the opaque secret that holds the user used to authenticate against the registry"
                      type: object
                      required:
                      - name
                      - key
                      properties:
                        name:
                          description: "the name of the secret"
                          type: string
                        key:
                          description: "the key in the secret data from where to read the password"
                          type: string
                    passwordSecretRef:
                      description: "the opaque secret that holds the password"
                      type: object
                      required:
                      - name
                      - key
                      properties:
                        name:
                          description: "the name of the secret"
                          type: string
                        key:
                          description: "the key in the secret data from where to read the password"
                          type: string


                awsIamUser:
                  type: object
                  oneOf:
                    - properties:
                      required:
                        - accessKeyID
                        - secretAccessKeySecretRef
                    - properties:
                      required:
                        - accessKeyIDSecretRef
                        - secretAccessKeySecretRef
                  properties:
                    accessKeyID:
                      description: "the IAM user access key ID"
                      type: string
                    accessKeyIDSecretRef:
                      description: "the opaque secret that holds the access key ID"
                      type: object
                      required:
                      - name
                      - key
                      properties:
                        name:
                          description: "the name of the secret"
                          type: string
                        key:
                          description: "the key in the secret data from where to read the access key id"
                          type: string
                    secretAccessKeySecretRef:
                      description: "the opaque secret that holds the secret access key"
                      type: object
                      required:
                      - name
                      - key
                      properties:
                        name:
                          description: "the name of the secret"
                          type: string
                        key:
                          description: "the key in the secret data from where to read the secret access key"
                          type: string
status:
  acceptedNames:
    kind: Registry
    listKind: RegistryList
    plural: registries
    singular: registry
  conditions: []
  storedVersions: []
---
# Source: okteto/charts/ingress-nginx/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.9.1
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.9.6"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
  name: release-name-ingress-nginx
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - nodes
      - pods
      - secrets
      - namespaces
    verbs:
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - list
      - watch
      - get
---
# Source: okteto/charts/okteto-nginx/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: okteto-nginx-4.9.1
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.9.6"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
  name: release-name-okteto-nginx
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - nodes
      - pods
      - secrets
      - namespaces
    verbs:
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - list
      - watch
      - get
---
# Source: okteto/templates/dev-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-okteto-psp
  labels:
    app.kubernetes.io/name: release-name-okteto-psp
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - "weaver.okteto.com"
  resources:
  - "diverts"
  verbs:
  - '*'
- apiGroups:
  - "dev.okteto.com"
  resources:
  - "externals"
  verbs:
  - '*'
- apiGroups:
  - "git.okteto.com"
  resources:
  - "actions"
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  - pods/exec
  - pods/attach
  - pods/portforward
  - pods/status
  - pods/eviction
  - configmaps
  - secrets
  - services
  - serviceaccounts
  - persistentvolumeclaims
  - replicationcontrollers
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - endpoints
  - events
  - limitranges
  - namespaces
  - namespaces/status
  - resourcequotas
  - resourcequotas/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  verbs:
  - get
  - list
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  - deployments/scale
  - replicasets/scale
  - statefulsets/scale
  verbs:
  - '*'
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  - jobs/status
  verbs:
  - '*'
- apiGroups:
  - extensions
  resources:
  - daemonsets
  - deployments
  - ingresses
  - replicasets
  - statefulsets
  - deployments/scale
  - replicasets/scale
  - statefulsets/scale
  verbs:
  - '*'
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshots
  verbs:
  - '*'
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - '*'
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  - rolebindings
  verbs:
  - '*'
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - '*'
- apiGroups:
    - apiextensions.k8s.io
  resources:
    - customresourcedefinitions
  verbs:
    - list
    - watch
- apiGroups:
    - helm.fluxcd.io
  resources:
    - helmreleases
    - helmreleases/status
  verbs:
  - '*'
- apiGroups:
    - helm.integrations.flux.weave.works
  resources:
    - fluxhelmreleases
  verbs:
  - '*'
- apiGroups:
    - configuration.konghq.com
  resources:
    - kongplugins
    - kongconsumers
    - kongcredentials
    - kongingresses
    - tcpingresses
  verbs:
  - '*'
- apiGroups:
    - openfaas.com
  resources:
    - functions
  verbs:
  - '*'
- apiGroups:
    - litmuschaos.io
  resources:
    - chaosengines
    - chaosschedules
    - chaosexperiments
    - chaosresults
  verbs:
  - '*'
- apiGroups:
    - eventtracker.litmuschaos.io
  resources:
    - eventtrackerpolicies
    - eventtrackerpolicies/status
  verbs:
  - '*'
- apiGroups:
    - argoproj.io
  resources:
    - cronworkflows
    - cronworkflows/finalizers
    - rollouts
    - workflows
    - workflows/finalizers
    - workflowtemplates
    - workflowtemplates/finalizers
    - workflowtasksets
    - workfloweventbinding
  verbs:
  - '*'
- apiGroups:
    - cert-manager.io
  resources:
    - certificates
  verbs:
  - list
  - watch
  - get
- apiGroups:
    - apps.openshift.io
  resources:
    - deploymentconfigs
  verbs:
  - '*'
---
# Source: okteto/charts/ingress-nginx/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.9.1
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.9.6"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
  name: release-name-ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-ingress-nginx
subjects:
  - kind: ServiceAccount
    name: release-name-ingress-nginx
    namespace: default
---
# Source: okteto/charts/okteto-nginx/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    helm.sh/chart: okteto-nginx-4.9.1
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.9.6"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
  name: release-name-okteto-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-okteto-nginx
subjects:
  - kind: ServiceAccount
    name: release-name-okteto-nginx
    namespace: default
---
# Source: okteto/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-okteto-role-binding
  labels:
    app: release-name-okteto
    chart: "okteto-1.19.2"
    release: "release-name"
    heritage: "Helm"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: release-name-okteto
  namespace: default
---
# Source: okteto/charts/ingress-nginx/templates/controller-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.9.1
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.9.6"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-ingress-nginx
  namespace: default
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  # Omit Ingress status permissions if `--update-status` is disabled.
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    resourceNames:
      - release-name-ingress-nginx-leader
    verbs:
      - get
      - update
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - list
      - watch
      - get
---
# Source: okteto/charts/okteto-nginx/templates/controller-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    helm.sh/chart: okteto-nginx-4.9.1
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.9.6"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-okteto-nginx
  namespace: default
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  # Omit Ingress status permissions if `--update-status` is disabled.
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    resourceNames:
      - release-name-okteto-nginx-leader
    verbs:
      - get
      - update
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - list
      - watch
      - get
---
# Source: okteto/charts/reloader/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1

kind: Role
metadata:
  annotations:
    meta.helm.sh/release-namespace: "default"
    meta.helm.sh/release-name: "release-name"
  labels:
    app: release-name-reloader
    chart: "reloader-1.0.65"
    release: "release-name"
    heritage: "Helm"
    app.kubernetes.io/managed-by: "Helm"
  name: release-name-reloader-role
  namespace: default
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - list
      - get
      - watch
  - apiGroups:
      - "apps"
    resources:
      - deployments
      - daemonsets
      - statefulsets
    verbs:
      - list
      - get
      - update
      - patch
  - apiGroups:
      - "extensions"
    resources:
      - deployments
      - daemonsets
    verbs:
      - list
      - get
      - update
      - patch
  - apiGroups:
      - "batch"
    resources:
      - cronjobs
    verbs:
      - list
      - get
  - apiGroups:
      - "batch"
    resources:
      - jobs
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
# Source: okteto/charts/ingress-nginx/templates/controller-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.9.1
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.9.6"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-ingress-nginx
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-ingress-nginx
subjects:
  - kind: ServiceAccount
    name: release-name-ingress-nginx
    namespace: default
---
# Source: okteto/charts/okteto-nginx/templates/controller-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    helm.sh/chart: okteto-nginx-4.9.1
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.9.6"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-okteto-nginx
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-okteto-nginx
subjects:
  - kind: ServiceAccount
    name: release-name-okteto-nginx
    namespace: default
---
# Source: okteto/charts/reloader/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1

kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-namespace: "default"
    meta.helm.sh/release-name: "release-name"
  labels:
    app: release-name-reloader
    chart: "reloader-1.0.65"
    release: "release-name"
    heritage: "Helm"
    app.kubernetes.io/managed-by: "Helm"
  name: release-name-reloader-role-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-reloader-role
subjects:
  - kind: ServiceAccount
    name: reloader
    namespace: default
---
# Source: okteto/charts/ingress-nginx/templates/controller-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
  labels:
    helm.sh/chart: ingress-nginx-4.9.1
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.9.6"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-ingress-nginx-controller
  namespace: default
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ipFamilyPolicy: SingleStack
  ipFamilies: 
    - IPv4
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
      appProtocol: http
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
      appProtocol: https
  selector:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
---
# Source: okteto/charts/okteto-nginx/templates/controller-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
  labels:
    helm.sh/chart: okteto-nginx-4.9.1
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.9.6"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-okteto-nginx-controller
  namespace: default
spec:
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  ipFamilies: 
    - IPv4
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
      appProtocol: http
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
      appProtocol: https
  selector:
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
---
# Source: okteto/templates/api-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "release-name-okteto-api"
  labels:
    app.kubernetes.io/component: "api"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-api"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      name: api
  selector:
    app.kubernetes.io/name: "release-name-okteto-api"
    app.kubernetes.io/instance: release-name
---
# Source: okteto/templates/buildkit-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "release-name-okteto-buildkit"
  labels:
    app.kubernetes.io/component: "buildkit"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-buildkit"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  sessionAffinity: ClientIP
  
  ports:
    - port: 443
      targetPort: 1234
      name: buildkit
  selector:
    app.kubernetes.io/name: "release-name-okteto-buildkit-1133156121"
    app.kubernetes.io/instance: release-name
---
# Source: okteto/templates/defaultbackend-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "release-name-ingress-nginx-defaultbackend"
  labels:
    app.kubernetes.io/component: default-backend
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-defaultbackend"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      name: http
      targetPort: 8080
  selector:
    app.kubernetes.io/name: "release-name-okteto-defaultbackend"
    app.kubernetes.io/instance: release-name
---
# Source: okteto/templates/frontend-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "release-name-okteto-frontend"
  labels:
    app.kubernetes.io/component: "frontend"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-frontend"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      name: frontend
  selector:
    app.kubernetes.io/name: "release-name-okteto-frontend"
    app.kubernetes.io/instance: release-name
---
# Source: okteto/templates/kubernetes-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "release-name-okteto-cluster-endpoint"
  labels:
    app.kubernetes.io/component: "cluster-endpoint"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-cluster-endpoint"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ExternalName
  externalName: kubernetes.default.svc.cluster.local
  ports:
    - protocol: TCP
      port: 443
---
# Source: okteto/templates/regcreds-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "release-name-okteto-regcreds"
  labels:
    app.kubernetes.io/component: "regcreds"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-regcreds"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - targetPort: 9443
      port: 443
      name: controller
  selector:
    app.kubernetes.io/name: "release-name-okteto-regcreds"
    app.kubernetes.io/instance: release-name
---
# Source: okteto/templates/registry-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "release-name-okteto-registry"
  labels:
    app.kubernetes.io/component: "registry"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-registry"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 5000
      name: registry
  selector:
    app.kubernetes.io/name: "release-name-okteto-registry"
    app.kubernetes.io/instance: release-name
---
# Source: okteto/templates/webhook-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "release-name-okteto-mutation-webhook"
  labels:
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-mutation-webhook"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 443
      name: webhook
      targetPort: 443
  selector:
    app.kubernetes.io/name: "release-name-okteto-mutation-webhook"
    app.kubernetes.io/instance: release-name
---
# Source: okteto/templates/daemon.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: "release-name-okteto-daemon"
  labels:
    app.kubernetes.io/name: "release-name-okteto-daemon"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/component: "daemon"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: "release-name-okteto-daemon"
      app.kubernetes.io/instance: release-name
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 100%
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "release-name-okteto-daemon"
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: "daemon"
        app.kubernetes.io/part-of: "okteto"
      annotations:
        app.kubernetes.io/version: "release-name-okteto-1.19.2"
        checksum/certs: 1fa162842595b93e3c584348be58e9b14a89b5802892ea941b7f4bb60d913f72
    spec:
      hostPID: true
      terminationGracePeriodSeconds: 0
      serviceAccountName: release-name-okteto
      priorityClassName: 
      containers:
      - name: daemon
        image: okteto/daemon:0.10.0
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        env:
          - name: UPDATE_HOSTS_DISABLED
            value: "false"
          - name: UPDATE_HOSTS_INGRESS_INTERNAL_IP
            value: "$(RELEASE_NAME_INGRESS_NGINX_CONTROLLER_SERVICE_HOST)"
          - name: UPDATE_HOSTS_REGISTRY_URL
            value: "registry.localtest.me"
          - name: UPDATE_HOSTS_OKTETO_URL
            value: "okteto.localtest.me"
          - name: PRIVATE_REGISTRY_CREDENTIALS_DISABLED
            value: "false"
          - name: PRIVATE_REGISTRY_CREDENTIALS_ROOT_SECRET_NAME
            value: "release-name-okteto-dockerconfig-static"
          - name: PRIVATE_REGISTRY_CREDENTIALS_DESTINATION_PATH
            value: "/var/lib/kubelet/config.json"
          - name: PRIVATE_REGISTRY_CREDENTIALS_SECRET_NAME
            value: "release-name-okteto-dockerconfig"
          - name: SYSCTL_CONFIG_DISABLED
            value: "false"
          - name: SYSCTL_CONFIG_MAX_USER_WATCHES
            value: "10048576"
          - name: SYSCTL_CONFIG_MAX_MAP_COUNT
            value: "262144"
          - name: SYSCTL_CONFIG_AIO_MAX_NR
            value: "1000000"
          - name: COPY_BIN_DISABLED
            value: "true"
          - name: COPY_CLOUDBIN_DISABLED
            value: "true"
          - name: CHECK_CNI_PLUGIN_DISABLED
            value: "true"
          - name: CHECK_CNI_PLUGIN_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: PRIVATE_CA_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: PRIVATE_CA_REGISTRY_URL
            value: "registry.localtest.me"
          - name: PRIVATE_CA_DISABLED
            value: "false"
        volumeMounts:
          - name: hostalias
            mountPath: /etc/hosts
          - name: kubelet-conf
            mountPath: /var/lib/kubelet
          - name: proc-volume
            mountPath: /proc-aux
          - name: host-etc
            mountPath: /host/etc
          - name: ca-pemstore
            mountPath: /etc/ssl/certs/okteto-private-ca.crt
            subPath: ca.crt
            readOnly: true
        resources:
            requests:
              cpu: 10m
              memory: 10Mi
      volumes:
      - name: kubelet-conf
        hostPath:
          path: /var/lib/kubelet
      - name: hostalias
        hostPath:
          path: /etc/hosts
      - name: proc-volume
        hostPath:
          path: /proc
      - name: host-etc
        hostPath:
          path: /etc
      - name: ca-pemstore
        secret:
          defaultMode: 420
          secretName: default-ssl-certificate-selfsigned
---
# Source: okteto/charts/ingress-nginx/templates/controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.9.1
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.9.6"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-ingress-nginx-controller
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: controller
  replicas: 2
  revisionHistoryLimit: 10
  minReadySeconds: 0
  template:
    metadata:
      labels:
        helm.sh/chart: ingress-nginx-4.9.1
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.9.6"
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: controller
    spec:
      dnsPolicy: ClusterFirst
      containers:
        - name: controller
          image: registry.k8s.io/ingress-nginx/controller-chroot:v1.9.6@sha256:7eb46ff733429e0e46892903c7394aff149ac6d284d92b3946f3baf7ff26a096
          imagePullPolicy: IfNotPresent
          lifecycle: 
            preStop:
              exec:
                command:
                - /wait-shutdown
          args: 
            - /nginx-ingress-controller
            - --publish-service=$(POD_NAMESPACE)/release-name-ingress-nginx-controller
            - --election-id=release-name-ingress-nginx-leader
            - --controller-class=k8s.io/okteto-controlplane-nginx
            - --ingress-class=okteto-controlplane-nginx
            - --configmap=$(POD_NAMESPACE)/release-name-ingress-nginx-controller
            - --default-backend-service=$(POD_NAMESPACE)/$(OKTETO_NAME)-ingress-nginx-defaultbackend
            - --default-ssl-certificate=$(POD_NAMESPACE)/default-ssl-certificate-selfsigned
          securityContext: 
            runAsNonRoot: true
            runAsUser: 101
            allowPrivilegeEscalation: true
            seccompProfile: 
              type: RuntimeDefault
            capabilities:
              drop:
              - ALL
              add:
              - NET_BIND_SERVICE
              - SYS_ADMIN
              - SYS_CHROOT
            readOnlyRootFilesystem: false
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LD_PRELOAD
              value: /usr/local/lib/libmimalloc.so
            - name: OKTETO_NAME
              valueFrom:
                configMapKeyRef:
                  key: Name
                  name: okteto-helm-release-meta
          livenessProbe: 
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe: 
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          resources: 
            requests:
              cpu: 100m
              memory: 90Mi
      nodeSelector: 
        kubernetes.io/os: linux
      affinity: 
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - controller
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - ingress-nginx
              topologyKey: kubernetes.io/hostname
            weight: 100
      serviceAccountName: release-name-ingress-nginx
      terminationGracePeriodSeconds: 300
---
# Source: okteto/charts/okteto-nginx/templates/controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    helm.sh/chart: okteto-nginx-4.9.1
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.9.6"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-okteto-nginx-controller
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: okteto-nginx
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: controller
  replicas: 2
  revisionHistoryLimit: 10
  minReadySeconds: 0
  template:
    metadata:
      labels:
        helm.sh/chart: okteto-nginx-4.9.1
        app.kubernetes.io/name: okteto-nginx
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.9.6"
        app.kubernetes.io/part-of: okteto-nginx
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: controller
    spec:
      dnsPolicy: ClusterFirst
      containers:
        - name: controller
          image: registry.k8s.io/ingress-nginx/controller-chroot:v1.9.6@sha256:7eb46ff733429e0e46892903c7394aff149ac6d284d92b3946f3baf7ff26a096
          imagePullPolicy: IfNotPresent
          lifecycle: 
            preStop:
              exec:
                command:
                - /wait-shutdown
          args: 
            - /nginx-ingress-controller
            - --publish-service=$(POD_NAMESPACE)/release-name-okteto-nginx-controller
            - --election-id=release-name-okteto-nginx-leader
            - --controller-class=k8s.io/okteto-ingress-nginx
            - --ingress-class=okteto-nginx
            - --configmap=$(POD_NAMESPACE)/release-name-okteto-nginx-controller
            - --default-backend-service=$(POD_NAMESPACE)/$(OKTETO_NAME)-ingress-nginx-defaultbackend
          securityContext: 
            runAsNonRoot: true
            runAsUser: 101
            allowPrivilegeEscalation: true
            seccompProfile: 
              type: RuntimeDefault
            capabilities:
              drop:
              - ALL
              add:
              - NET_BIND_SERVICE
              - SYS_ADMIN
              - SYS_CHROOT
            readOnlyRootFilesystem: false
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LD_PRELOAD
              value: /usr/local/lib/libmimalloc.so
            - name: OKTETO_NAME
              valueFrom:
                configMapKeyRef:
                  key: Name
                  name: okteto-helm-release-meta
          livenessProbe: 
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe: 
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          resources: 
            requests:
              cpu: 100m
              memory: 90Mi
      nodeSelector: 
        kubernetes.io/os: linux
      affinity: 
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - controller
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - okteto-nginx
              topologyKey: kubernetes.io/hostname
            weight: 100
      serviceAccountName: release-name-okteto-nginx
      terminationGracePeriodSeconds: 300
---
# Source: okteto/charts/reloader/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-namespace: "default"
    meta.helm.sh/release-name: "release-name"
  labels:
    app: release-name-reloader
    chart: "reloader-1.0.65"
    release: "release-name"
    heritage: "Helm"
    app.kubernetes.io/managed-by: "Helm"
    group: com.stakater.platform
    provider: stakater
    version: v1.0.65
  name: release-name-reloader
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: release-name-reloader
      release: "release-name"
  template:
    metadata:
      labels:
        app: release-name-reloader
        chart: "reloader-1.0.65"
        release: "release-name"
        heritage: "Helm"
        app.kubernetes.io/managed-by: "Helm"
        group: com.stakater.platform
        provider: stakater
        version: v1.0.65
    spec:
      containers:
      - image: "ghcr.io/stakater/reloader:v1.0.65"
        imagePullPolicy: IfNotPresent
        name: release-name-reloader
        env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace

        ports:
        - name: http
          containerPort: 9090
        livenessProbe:
          httpGet:
            path: /live
            port: http
          timeoutSeconds: 5
          failureThreshold: 5
          periodSeconds: 10
          successThreshold: 1
          initialDelaySeconds: 10
        readinessProbe:
          httpGet:
            path: /metrics
            port: http
          timeoutSeconds: 5
          failureThreshold: 5
          periodSeconds: 10
          successThreshold: 1
          initialDelaySeconds: 10

        securityContext:
          {}
        args:
          - "--resources-to-ignore=configMaps"
      securityContext: 
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: reloader
---
# Source: okteto/templates/api-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "release-name-okteto-api"
  labels:
    app.kubernetes.io/component: "api"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-api"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    secret.reloader.stakater.com/reload: "default-ssl-certificate-selfsigned,okteto-cloud-secret"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: "release-name-okteto-api"
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "release-name-okteto-api"
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: "api"
        app.kubernetes.io/part-of: "okteto"
      annotations:
        checksum/configmap: 02dd87b4e8207f47793a4d069f2a958c93ca9e243cf4c04851da0b3b8403ef67
        checksum/secrets: 2d90b27ea4ee44ab6cd376349d7ed0ca3c0c2d4efddd3afbe55c5e955a9a4914
    spec:
      terminationGracePeriodSeconds: 300
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                      - "release-name-okteto-api"
                topologyKey: kubernetes.io/hostname
      serviceAccountName: release-name-okteto
      volumes:
        - name: tls-certs
          secret:
            defaultMode: 420
            secretName: default-ssl-certificate-selfsigned
        - name: ca-pemstore
          secret:
            defaultMode: 420
            secretName: default-ssl-certificate-selfsigned
      priorityClassName: 
      containers:
        - name: api
          image: okteto/backend:a5f84810e
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          args: [ "api" ]
          env:
            - name: OKTETO_INGRESS_INTERNAL_IP
              value: "$(RELEASE_NAME_INGRESS_NGINX_CONTROLLER_SERVICE_HOST)"
            - name: OKTETO_BUILDKIT_INTERNAL_IP
              value: "$(RELEASE_NAME_OKTETO_BUILDKIT_SERVICE_HOST)"
          envFrom:
          - configMapRef:
              name: "release-name-okteto"
          - secretRef:
              name: release-name-okteto
          - secretRef:
              name: "okteto-cloud-secret"
              optional: true
          volumeMounts:
            - name: tls-certs
              mountPath: /run/secrets/tls
              readOnly: true
            - name: ca-pemstore
              mountPath: /etc/ssl/certs/okteto-private-ca.crt
              subPath: ca.crt
              readOnly: true
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 3
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 3
            timeoutSeconds: 10
          lifecycle:
            preStop:
              exec:
                command: ["/app/bin/backend", "sleep", "--seconds", "45"]
          resources:
            limits:
              memory: 800Mi
            requests:
              cpu: 50m
              memory: 100Mi
---
# Source: okteto/templates/defaultbackend-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "release-name-okteto-defaultbackend"
  labels:
    app.kubernetes.io/component: default-backend
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-defaultbackend"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    secret.reloader.stakater.com/reload: "default-ssl-certificate-selfsigned,okteto-cloud-secret"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: "release-name-okteto-defaultbackend"
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "release-name-okteto-defaultbackend"
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: "defaultbackend"
        app.kubernetes.io/part-of: "okteto"
      annotations:
        checksum/configmap: 02dd87b4e8207f47793a4d069f2a958c93ca9e243cf4c04851da0b3b8403ef67
        checksum/secrets: 2d90b27ea4ee44ab6cd376349d7ed0ca3c0c2d4efddd3afbe55c5e955a9a4914
    spec:
      affinity:
        nodeAffinity:
          
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                      - "release-name-okteto-defaultbackend"
                topologyKey: kubernetes.io/hostname
      serviceAccountName: release-name-okteto
      volumes:
        - name: tls-certs
          secret:
            defaultMode: 420
            secretName: default-ssl-certificate-selfsigned
        - name: ca-pemstore
          secret:
            defaultMode: 420
            secretName: default-ssl-certificate-selfsigned
      priorityClassName: 
      containers:
        - name: default-backend
          image: "okteto/backend:a5f84810e"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
          envFrom:
          - configMapRef:
              name: "release-name-okteto"
          - secretRef:
              name: release-name-okteto
          - secretRef:
              name: "okteto-cloud-secret"
              optional: true
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 3
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 3
            timeoutSeconds: 10
          resources:
            {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65534
---
# Source: okteto/templates/frontend-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "release-name-okteto-frontend"
  labels:
    app.kubernetes.io/component: "frontend"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-frontend"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: "release-name-okteto-frontend"
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "release-name-okteto-frontend"
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: "frontend"
        app.kubernetes.io/part-of: "okteto"
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - "release-name-okteto-frontend"
                topologyKey: kubernetes.io/hostname
      serviceAccountName: default
      priorityClassName: 
      containers:
        - name: frontend
          image: okteto/frontend:a5f84810e
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: THEME_PRIMARY
              value: 
            - name: THEME_SECONDARY
              value: 
            - name: THEME_LOGO
              value: 
            - name: OKTETO_CHART_VERSION
              value: 1.19.2
            - name: OKTETO_AUTH_TOKEN
              value: "true"
            - name: MIXPANEL_TOKEN
              value: 
          readinessProbe:
            httpGet:
              path: /index.html
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 1
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sleep", "45"]
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
---
# Source: okteto/templates/regcreds.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "release-name-okteto-regcreds"
  labels:
    app.kubernetes.io/component: "regcreds"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-regcreds"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    secret.reloader.stakater.com/reload: "release-name-okteto-regcreds,okteto-cloud-secret"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: "release-name-okteto-regcreds"
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "release-name-okteto-regcreds"
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: "regcreds"
        app.kubernetes.io/part-of: "okteto"
      annotations:
        checksum/configmap: 02dd87b4e8207f47793a4d069f2a958c93ca9e243cf4c04851da0b3b8403ef67
        checksum/secrets: 2d90b27ea4ee44ab6cd376349d7ed0ca3c0c2d4efddd3afbe55c5e955a9a4914
    spec:
      terminationGracePeriodSeconds: 300
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                      - "release-name-okteto-regcreds"
                topologyKey: kubernetes.io/hostname
      serviceAccountName: release-name-okteto
      volumes:
        - name: tls-certs
          secret:
            defaultMode: 420
            secretName: release-name-okteto-regcreds
      priorityClassName: 
      containers:
        - name: controller
          image: okteto/backend:a5f84810e
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
          args: [ "regcreds" ]
          volumeMounts:
            - name: tls-certs
              mountPath: /run/secrets/tls
              readOnly: true
          env:
            - name: PORT
              value: "8081"
          envFrom:
          - configMapRef:
              name: "release-name-okteto"
          - secretRef:
              name: release-name-okteto
          - secretRef:
              name: "okteto-cloud-secret"
              optional: true
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 3
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 3
            timeoutSeconds: 10
          resources:
            
            limits:
              memory: 800Mi
            requests:
              cpu: 50m
              memory: 100Mi
---
# Source: okteto/templates/registry-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "release-name-okteto-registry"
  labels:
    app.kubernetes.io/component: "registry"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-registry"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    secret.reloader.stakater.com/reload: "default-ssl-certificate-selfsigned,okteto-cloud-secret"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "release-name-okteto-registry"
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "release-name-okteto-registry"
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: "registry"
        app.kubernetes.io/part-of: "okteto"
      annotations:
        checksum/config: c003ca0661cfafea9712f1ce9e49d30d1242b9be74c2f9c0e48831980b7e4356
        checksum/secret: 184828ed91b402721ce3c0ac791df2d39fb732eddb9b3ef58eb1620cf2ec8662
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - "release-name-okteto-registry"
                topologyKey: kubernetes.io/hostname
      serviceAccountName: "release-name-okteto-registry"
      volumes:
        - name: data
          emptyDir: {}
        - name: config
          configMap:
            name: release-name-okteto-registry-config
        - name: tls-certs
          secret:
            defaultMode: 420
            secretName: default-ssl-certificate-selfsigned
      priorityClassName: 
      containers:
        - name: registry
          image: okteto/registry:22bfa87
          imagePullPolicy: IfNotPresent
          command:
          - sh
          - -c
          - "echo $OKTETO_INGRESS_INTERNAL_IP okteto.localtest.me > /etc/hosts && \
          /bin/registry serve /etc/docker/registry/config.yml"
          ports:
            - name: registry
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 5000
          readinessProbe:
            httpGet:
              path: /
              port: 5000
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sleep", "45"]
          env:
            - name: OKTETO_INGRESS_INTERNAL_IP
              value: "$(RELEASE_NAME_INGRESS_NGINX_CONTROLLER_SERVICE_HOST)"
            - name: REGISTRY_HTTP_SECRET
              valueFrom:
                secretKeyRef:
                  name: release-name-okteto-registry-http-secret
                  key: haShared
            - name: REGISTRY_STORAGE_DELETE_ENABLED
              value: "true"
            - name: REGISTRY_AUTH_TOKEN_REALM
              value: "https://okteto.localtest.me/auth/registry"
            - name: REGISTRY_AUTH_TOKEN_SERVICE
              value: "okteto-registry"
            - name: REGISTRY_AUTH_TOKEN_ISSUER
              value: "okteto-registry"
            - name: REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE
              value: "/run/secrets/tls/tls.crt"
            - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
              value: "/var/lib/registry"
          volumeMounts:
            - name: config
              mountPath: "/etc/docker/registry"
              readOnly: true
            - name: tls-certs
              mountPath: /run/secrets/tls
              readOnly: true
            - name: data
              mountPath: /var/lib/registry/
          resources:
            requests:
              cpu: 10m
              memory: 100Mi
---
# Source: okteto/templates/webhook-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "release-name-okteto-mutation-webhook"
  labels:
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-mutation-webhook"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    secret.reloader.stakater.com/reload: "release-name-okteto-mutation-webhook,okteto-cloud-secret"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: "release-name-okteto-mutation-webhook"
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "release-name-okteto-mutation-webhook"
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: "webhook"
        app.kubernetes.io/part-of: "okteto"
      annotations:
        checksum/configmap: 02dd87b4e8207f47793a4d069f2a958c93ca9e243cf4c04851da0b3b8403ef67
        checksum/secrets: 6ca904f1416c41c9561b1d6c43d60df17a3075d05eb235fbfd826bde0f4e998c
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - "release-name-okteto-mutation-webhook"
                topologyKey: kubernetes.io/hostname
      serviceAccountName: release-name-okteto
      volumes:
        - name: webhook-tls-certs
          secret:
            defaultMode: 420
            secretName: release-name-okteto-mutation-webhook
      hostNetwork: false
      priorityClassName: 
      containers:
        - name: server
          image: okteto/backend:a5f84810e
          imagePullPolicy: IfNotPresent
          ports:
            - name: https
              containerPort: 443
            - name: http
              containerPort: 8080
          args: [ "webhook" ]
          env:
            - name: OKTETO_INGRESS_INTERNAL_IP
              value: "$(RELEASE_NAME_INGRESS_NGINX_CONTROLLER_SERVICE_HOST)"
            - name: OKTETO_BUILDKIT_INTERNAL_IP
              value: "$(RELEASE_NAME_OKTETO_BUILDKIT_SERVICE_HOST)"
            - name: PORT
              value: "443"
          envFrom:
          - configMapRef:
              name: "release-name-okteto"
          - secretRef:
              name: release-name-okteto
          - secretRef:
              name: "okteto-cloud-secret"
              optional: true
          volumeMounts:
            - name: webhook-tls-certs
              mountPath: /run/secrets/tls
              readOnly: true
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /readiness
              port: 443
            initialDelaySeconds: 3
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /healthz
              port: http
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 3
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
---
# Source: okteto/templates/buildkit-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "release-name-okteto-buildkit-1133156121"
  labels:
    app.kubernetes.io/component: "buildkit"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-buildkit-1133156121"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    secret.reloader.stakater.com/reload: "default-ssl-certificate-selfsigned"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "release-name-okteto-buildkit-1133156121"
      app.kubernetes.io/instance: release-name
  serviceName: release-name-okteto-buildkit
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "release-name-okteto-buildkit-1133156121"
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: "buildkit"
        app.kubernetes.io/part-of: "okteto"
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - "release-name-okteto-buildkit-1133156121"
                topologyKey: kubernetes.io/hostname
      serviceAccountName: "okteto-buildkit"
      volumes:
        - name: tls-certs
          secret:
            defaultMode: 420
            secretName: default-ssl-certificate-selfsigned
        - name: ca-pemstore
          secret:
            defaultMode: 420
            secretName: default-ssl-certificate-selfsigned
        - name: storage
          emptyDir:
            sizeLimit: 12Gi
        - name: host-volume
          emptyDir: {}
      priorityClassName: 
      initContainers:
      - name: etc-hosts
        image: okteto/buildkit:v0.12.5-okteto1
        imagePullPolicy: IfNotPresent
        command: [sh, -c, touch /data/hosts]
        volumeMounts:
        - name: host-volume
          mountPath: /data
      containers:
      - name: buildkitd
        image: okteto/buildkit:v0.12.5-okteto1
        imagePullPolicy: IfNotPresent
        command:
          - /usr/bin/start.sh
        env:
          - name: OKTETO_BUILDKITD_LOCAL_URL
            value: local-buildkitd.localtest.me
          - name: OKTETO_INGRESS_INTERNAL_IP
            value: "$(RELEASE_NAME_INGRESS_NGINX_CONTROLLER_SERVICE_HOST)"
          - name: PUBLIC_URL
            value: "okteto.localtest.me"
          - name: REGISTRY_URL
            value: "registry.localtest.me"
          - name: STORAGE
            value: "10000"
        ports:
        - containerPort: 1234
          protocol: TCP
        securityContext:
          privileged: true
        volumeMounts:
          - name: "storage"
            subPath: data
            mountPath: /var/lib/buildkit
          - name: tls-certs
            mountPath: /run/secrets/tls
            readOnly: true
          - name: ca-pemstore
            mountPath: /etc/ssl/certs/okteto-private-ca.crt
            subPath: ca.crt
            readOnly: true
          - name: host-volume
            mountPath: /etc/hosts
            subPath: hosts
        resources:
          
          limits:
            memory: 12Gi
          requests:
            cpu: 1
            memory: 4Gi
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
# Source: okteto/templates/gc-cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: "release-name-okteto-gc"
  labels:
    app.kubernetes.io/component: "gc"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-gc"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 120
  schedule: "@hourly"
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/component: "gc"
        app.kubernetes.io/part-of: "okteto"
    spec:
      activeDeadlineSeconds: 3300
      template:
        metadata:
          labels:
            app.kubernetes.io/component: "gc"
            app.kubernetes.io/part-of: "okteto"
        spec:
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - preference:
                  matchExpressions:
                  - key: dev.okteto.com/overloaded
                    operator: DoesNotExist
                weight: 50
          serviceAccountName: release-name-okteto
          volumes:
          - name: tls-certs
            secret:
              defaultMode: 420
              secretName: default-ssl-certificate-selfsigned
          restartPolicy: Never
          containers:
            - name: gc
              image: okteto/backend:a5f84810e
              imagePullPolicy: IfNotPresent
              args: [ "gc" ]
              env:
                - name: OKTETO_INGRESS_INTERNAL_IP
                  value: "$(RELEASE_NAME_INGRESS_NGINX_CONTROLLER_SERVICE_HOST)"
                - name: OKTETO_BUILDKIT_INTERNAL_IP
                  value: "$(RELEASE_NAME_OKTETO_BUILDKIT_SERVICE_HOST)"
              envFrom:
                - configMapRef:
                    name: "release-name-okteto"
                - secretRef:
                    name: release-name-okteto
                - secretRef:
                    name: "okteto-cloud-secret"
                    optional: true
              volumeMounts:
                - name: tls-certs
                  mountPath: /run/secrets/tls
                  readOnly: true
          priorityClassName:
---
# Source: okteto/templates/installer-checker.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: "release-name-okteto-installer-checker"
  labels:
    app.kubernetes.io/component: "installer-checker"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-installer-checker"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  schedule: "*/5 * * * *"
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/component: "installer-checker"
        app.kubernetes.io/part-of: "okteto"
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/component: "installer-checker"
            app.kubernetes.io/part-of: "okteto"
        spec:
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - preference:
                  matchExpressions:
                  - key: dev.okteto.com/overloaded
                    operator: DoesNotExist
                weight: 50
          serviceAccountName: release-name-okteto
          priorityClassName: 
          restartPolicy: Never
          containers:
            - name: installer-checker
              image: okteto/backend:a5f84810e
              imagePullPolicy: IfNotPresent
              args: [ "installer-checker" ]
              envFrom:
              - configMapRef:
                  name: "release-name-okteto"
              - secretRef:
                  name: release-name-okteto
              - secretRef:
                  name: "okteto-cloud-secret"
                  optional: true
---
# Source: okteto/templates/namespace-destroy-all-checker-cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: "release-name-okteto-destroy-all-checker"
  labels:
    app.kubernetes.io/component: "namespace-destroy-all"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-destroy-all-checker"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 120
  schedule: "*/3 * * * *"
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/component: "namespace-destroy-all"
        app.kubernetes.io/part-of: "okteto"
    spec:
      activeDeadlineSeconds: 120
      template:
        metadata:
          labels:
            app.kubernetes.io/component: "namespace-destroy-all"
            app.kubernetes.io/part-of: "okteto"
        spec:
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - preference:
                  matchExpressions:
                  - key: dev.okteto.com/overloaded
                    operator: DoesNotExist
                weight: 50
          serviceAccountName: release-name-okteto
          restartPolicy: Never
          priorityClassName: 
          containers:
            - name: checker
              image: "okteto/backend:a5f84810e"
              imagePullPolicy: IfNotPresent
              args: [ "check-namespace-destroy-all"]
              envFrom:
                - configMapRef:
                    name: "release-name-okteto"
---
# Source: okteto/templates/telemetry-cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: "release-name-okteto-telemetry"
  labels:
    app.kubernetes.io/component: "telemetry"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-telemetry"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  schedule: "@daily"
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/component: "telemetry"
        app.kubernetes.io/part-of: "okteto"
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/component: "telemetry"
            app.kubernetes.io/part-of: "okteto"
            app.kubernetes.io/instance: release-name
            app.kubernetes.io/managed-by: Helm
        spec:
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - preference:
                  matchExpressions:
                  - key: dev.okteto.com/overloaded
                    operator: DoesNotExist
                weight: 50
          serviceAccountName: release-name-okteto
          priorityClassName: 
          restartPolicy: Never
          containers:
            - name: telemetry
              image: okteto/backend:a5f84810e
              imagePullPolicy: IfNotPresent
              args: [ "telemetry" ]
              envFrom:
                - configMapRef:
                    name: "release-name-okteto"
                - secretRef:
                    name: release-name-okteto
                - secretRef:
                    name: "okteto-cloud-secret"
                    optional: true
              resources:
                requests:
                  cpu: 10m
                  memory: 100Mi
---
# Source: okteto/charts/ingress-nginx/templates/controller-ingressclass.yaml
# We don't support namespaced ingressClass yet
# So a ClusterRole and a ClusterRoleBinding is required
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.9.1
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.9.6"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: okteto-controlplane-nginx
spec:
  controller: k8s.io/okteto-controlplane-nginx
---
# Source: okteto/charts/okteto-nginx/templates/controller-ingressclass.yaml
# We don't support namespaced ingressClass yet
# So a ClusterRole and a ClusterRoleBinding is required
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    helm.sh/chart: okteto-nginx-4.9.1
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.9.6"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: okteto-nginx
spec:
  controller: k8s.io/okteto-ingress-nginx
---
# Source: okteto/templates/buildkit-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-okteto-buildkit
  labels:
    app.kubernetes.io/name: release-name-okteto-buildkit
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/component: "buildkit"
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "GRPCS"
    nginx.ingress.kubernetes.io/configuration-snippet: "grpc_read_timeout 1800s;\ngrpc_intercept_errors off;\ngrpc_buffer_size 64k;\n"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/service-upstream: "true"
spec:
  ingressClassName: okteto-controlplane-nginx
  tls:
  - hosts:
    - buildkit.localtest.me
    secretName: default-ssl-certificate-selfsigned
  rules:
    - host: buildkit.localtest.me
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: release-name-okteto-buildkit
                port:
                  number: 443
---
# Source: okteto/templates/ingress-wildcard.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-okteto-wildcard
  labels:
    app.kubernetes.io/name: okteto
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/component: "api"
  annotations:
    nginx.ingress.kubernetes.io/proxy-ssl-server-name: "on"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/proxy-body-size: "60M"
spec:
  ingressClassName: okteto-controlplane-nginx
  tls:
  - hosts:
    - "*.localtest.me"
    secretName: default-ssl-certificate-selfsigned
  rules:
    - host: "*.localtest.me"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: release-name-okteto-nginx-controller
                port:
                  number: 443
---
# Source: okteto/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-okteto
  labels:
    app.kubernetes.io/name: okteto
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/component: "api"
  annotations:
spec:
  ingressClassName: okteto-controlplane-nginx
  tls:
  - hosts:
    - okteto.localtest.me
    secretName: default-ssl-certificate-selfsigned
  rules:
    - host: okteto.localtest.me
      http:
        paths:
          - path: "/auth"
            pathType: Prefix
            backend:
              service:
                name: release-name-okteto-api
                port:
                  number: 8080
          - path: /healthz
            pathType: Prefix
            backend:
              service:
                name: release-name-okteto-api
                port:
                  number: 8080
          - path: /graphql
            pathType: Prefix
            backend:
              service:
                name: release-name-okteto-api
                port:
                  number: 8080
          - path: /deploy
            pathType: Prefix
            backend:
              service:
                name: release-name-okteto-api
                port:
                  number: 8080
          - path: /sse
            pathType: Prefix
            backend:
              service:
                name: release-name-okteto-api
                port:
                  number: 8080
          - path: /auth/kubetoken
            pathType: Prefix
            backend:
              service:
                name: release-name-okteto-api
                port:
                  number: 8080
          - path: /clusterinfo
            pathType: Prefix
            backend:
              service:
                name: release-name-okteto-api
                port:
                  number: 8080
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: release-name-okteto-frontend
                port:
                  number: 8080
---
# Source: okteto/templates/kubernetes-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-okteto-cluster-endpoint
  labels:
    app.kubernetes.io/name: release-name-okteto-cluster-endpoint
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/component: "cluster-endpoint"
  annotations:
    nginx.ingress.kubernetes.io/proxy-ssl-server-name: "on"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
spec:
  ingressClassName: okteto-controlplane-nginx
  tls:
  - hosts:
    - "kubernetes.localtest.me"
    secretName: default-ssl-certificate-selfsigned
  rules:
    - host: "kubernetes.localtest.me"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: release-name-okteto-cluster-endpoint
                port:
                  number: 443
---
# Source: okteto/templates/registry-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-okteto-registry
  labels:
    app.kubernetes.io/name: release-name-okteto-registry
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/component: "registry"
  annotations:
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
spec:
  ingressClassName: okteto-controlplane-nginx
  tls:
  - hosts:
    - registry.localtest.me
    secretName: default-ssl-certificate-selfsigned
  rules:
    - host: registry.localtest.me
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: release-name-okteto-registry
                port:
                  number: 5000
---
# Source: okteto/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: "release-name-okteto-mutation-webhook"
  labels:
    app.kubernetes.io/name: "release-name-okteto-mutation-webhook"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
webhooks:
  - name: ingress.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "release-name-okteto-mutation-webhook"
        path: "/mutate/ingress"
        namespace: "default"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUk5a0g5ME56a3g0RlBoMndNdXFYREl3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURVeE5UQTVNVGN6TjFvWApEVE0wTURVeE16QTVNVGN6TjFvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFtdWpLUjhLUFBRbHhnVTJIdVArb3gvR0IKeUkzWkJsVmNhb2QzalVVektURklITVVnVXFkYzRpQ3I0YWlYdnBwMjRzb0pFN3FJdGhwQk9xK0Z6ZVpVdDk0LwpZWVlIeVlBU3V6VFhUSytwcUFQRFFEL3BjR0hkUDQ5dWhxN0oyTE1CTlJ2bDVzc2d3MjY3ZldYcEE1NzkxbDcxClFFMnVOa283bVdCdElsSnhNREFnaytaeGgxK3NuZGVvdzRZQlNQcGNkNkxPd1FvWUhEa0I2NjVsWmMvaWdCcTcKRGM1OFYvaEx2R1RISDJDdVZ4U1R4d2RGbU0vcFNjcDRLMVIwRjArMnZWWU5QaEUrMU9hTHFtZXhCOUxEdnNTNwpVcVltakZ6VCtsVmlnSjNZOU1TVmt6d016YlZHTmJISyswVjVYNDNJSGJNS29lRjlyUHgrcGR1d0JrRkdCUUlECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSjZJVHZpSlFsaXJJUHRWZjI3WgpOSFBuVTZlOE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQlZaOWVwZVZ6NW10RlM5aTlDMUlwZWo1YUpNb25vCmFqeDYwOFAzaW5EMVRSYVdzOXBLb1FnQjJGNnc1R3k2MHlROG8wWXF1cnQ5OUpVeDZxTFVoWE5DSnlGcFZRb1cKSkM4QWhsVmo1ZU5CTjY3c3J5R1ZPbi9ha0d5QitLeE9tSVQzVklwOE5xQmVzaEQ0NDBpbElaSk11RlpwOVYzWApDN2poNmpMaEhiZnl2VUpud0pTeGJ6dDhCL1hBby9EcG5ndWx6dlg4cjBFSDVqek8xZklndHdPOTczR09KbFN5CnVkbnhEQmhDS2ROSmpmeTZibnhMRWNKbnhwMnhrMkxIMElpRHRkVC9wdlkzV0t3cU96dkRIRVJFR2MyUjhPQ3MKbDNtdjg5VHB5a3FDU3A4Zzc2SG5zYml6RXJrL2hkbk5LREpJTUZ2bU1QRVJRSkIyZk45RWNjcHYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: ["extensions"]
        apiVersions: ["v1beta1"]
        resources: ["ingresses"]
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: ["networking.k8s.io"]
        apiVersions: ["v1beta1", "v1"]
        resources: ["ingresses"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: service.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    failurePolicy: Fail
    clientConfig:
      service:
        name: "release-name-okteto-mutation-webhook"
        path: "/mutate/service"
        namespace: "default"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUk5a0g5ME56a3g0RlBoMndNdXFYREl3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURVeE5UQTVNVGN6TjFvWApEVE0wTURVeE16QTVNVGN6TjFvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFtdWpLUjhLUFBRbHhnVTJIdVArb3gvR0IKeUkzWkJsVmNhb2QzalVVektURklITVVnVXFkYzRpQ3I0YWlYdnBwMjRzb0pFN3FJdGhwQk9xK0Z6ZVpVdDk0LwpZWVlIeVlBU3V6VFhUSytwcUFQRFFEL3BjR0hkUDQ5dWhxN0oyTE1CTlJ2bDVzc2d3MjY3ZldYcEE1NzkxbDcxClFFMnVOa283bVdCdElsSnhNREFnaytaeGgxK3NuZGVvdzRZQlNQcGNkNkxPd1FvWUhEa0I2NjVsWmMvaWdCcTcKRGM1OFYvaEx2R1RISDJDdVZ4U1R4d2RGbU0vcFNjcDRLMVIwRjArMnZWWU5QaEUrMU9hTHFtZXhCOUxEdnNTNwpVcVltakZ6VCtsVmlnSjNZOU1TVmt6d016YlZHTmJISyswVjVYNDNJSGJNS29lRjlyUHgrcGR1d0JrRkdCUUlECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSjZJVHZpSlFsaXJJUHRWZjI3WgpOSFBuVTZlOE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQlZaOWVwZVZ6NW10RlM5aTlDMUlwZWo1YUpNb25vCmFqeDYwOFAzaW5EMVRSYVdzOXBLb1FnQjJGNnc1R3k2MHlROG8wWXF1cnQ5OUpVeDZxTFVoWE5DSnlGcFZRb1cKSkM4QWhsVmo1ZU5CTjY3c3J5R1ZPbi9ha0d5QitLeE9tSVQzVklwOE5xQmVzaEQ0NDBpbElaSk11RlpwOVYzWApDN2poNmpMaEhiZnl2VUpud0pTeGJ6dDhCL1hBby9EcG5ndWx6dlg4cjBFSDVqek8xZklndHdPOTczR09KbFN5CnVkbnhEQmhDS2ROSmpmeTZibnhMRWNKbnhwMnhrMkxIMElpRHRkVC9wdlkzV0t3cU96dkRIRVJFR2MyUjhPQ3MKbDNtdjg5VHB5a3FDU3A4Zzc2SG5zYml6RXJrL2hkbk5LREpJTUZ2bU1QRVJRSkIyZk45RWNjcHYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: [ "CREATE", "UPDATE", "DELETE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["services"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: deployment.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "release-name-okteto-mutation-webhook"
        path: "/mutate/deployment"
        namespace: "default"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUk5a0g5ME56a3g0RlBoMndNdXFYREl3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURVeE5UQTVNVGN6TjFvWApEVE0wTURVeE16QTVNVGN6TjFvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFtdWpLUjhLUFBRbHhnVTJIdVArb3gvR0IKeUkzWkJsVmNhb2QzalVVektURklITVVnVXFkYzRpQ3I0YWlYdnBwMjRzb0pFN3FJdGhwQk9xK0Z6ZVpVdDk0LwpZWVlIeVlBU3V6VFhUSytwcUFQRFFEL3BjR0hkUDQ5dWhxN0oyTE1CTlJ2bDVzc2d3MjY3ZldYcEE1NzkxbDcxClFFMnVOa283bVdCdElsSnhNREFnaytaeGgxK3NuZGVvdzRZQlNQcGNkNkxPd1FvWUhEa0I2NjVsWmMvaWdCcTcKRGM1OFYvaEx2R1RISDJDdVZ4U1R4d2RGbU0vcFNjcDRLMVIwRjArMnZWWU5QaEUrMU9hTHFtZXhCOUxEdnNTNwpVcVltakZ6VCtsVmlnSjNZOU1TVmt6d016YlZHTmJISyswVjVYNDNJSGJNS29lRjlyUHgrcGR1d0JrRkdCUUlECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSjZJVHZpSlFsaXJJUHRWZjI3WgpOSFBuVTZlOE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQlZaOWVwZVZ6NW10RlM5aTlDMUlwZWo1YUpNb25vCmFqeDYwOFAzaW5EMVRSYVdzOXBLb1FnQjJGNnc1R3k2MHlROG8wWXF1cnQ5OUpVeDZxTFVoWE5DSnlGcFZRb1cKSkM4QWhsVmo1ZU5CTjY3c3J5R1ZPbi9ha0d5QitLeE9tSVQzVklwOE5xQmVzaEQ0NDBpbElaSk11RlpwOVYzWApDN2poNmpMaEhiZnl2VUpud0pTeGJ6dDhCL1hBby9EcG5ndWx6dlg4cjBFSDVqek8xZklndHdPOTczR09KbFN5CnVkbnhEQmhDS2ROSmpmeTZibnhMRWNKbnhwMnhrMkxIMElpRHRkVC9wdlkzV0t3cU96dkRIRVJFR2MyUjhPQ3MKbDNtdjg5VHB5a3FDU3A4Zzc2SG5zYml6RXJrL2hkbk5LREpJTUZ2bU1QRVJRSkIyZk45RWNjcHYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: [ "CREATE", "UPDATE"]
        apiGroups: ["apps"]
        apiVersions: ["v1"]
        resources: ["deployments"]
      - operations: [ "CREATE", "UPDATE"]
        apiGroups: ["extensions"]
        apiVersions: ["v1beta1"]
        resources: ["deployments"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: statefulset.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "release-name-okteto-mutation-webhook"
        path: "/mutate/statefulset"
        namespace: "default"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUk5a0g5ME56a3g0RlBoMndNdXFYREl3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURVeE5UQTVNVGN6TjFvWApEVE0wTURVeE16QTVNVGN6TjFvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFtdWpLUjhLUFBRbHhnVTJIdVArb3gvR0IKeUkzWkJsVmNhb2QzalVVektURklITVVnVXFkYzRpQ3I0YWlYdnBwMjRzb0pFN3FJdGhwQk9xK0Z6ZVpVdDk0LwpZWVlIeVlBU3V6VFhUSytwcUFQRFFEL3BjR0hkUDQ5dWhxN0oyTE1CTlJ2bDVzc2d3MjY3ZldYcEE1NzkxbDcxClFFMnVOa283bVdCdElsSnhNREFnaytaeGgxK3NuZGVvdzRZQlNQcGNkNkxPd1FvWUhEa0I2NjVsWmMvaWdCcTcKRGM1OFYvaEx2R1RISDJDdVZ4U1R4d2RGbU0vcFNjcDRLMVIwRjArMnZWWU5QaEUrMU9hTHFtZXhCOUxEdnNTNwpVcVltakZ6VCtsVmlnSjNZOU1TVmt6d016YlZHTmJISyswVjVYNDNJSGJNS29lRjlyUHgrcGR1d0JrRkdCUUlECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSjZJVHZpSlFsaXJJUHRWZjI3WgpOSFBuVTZlOE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQlZaOWVwZVZ6NW10RlM5aTlDMUlwZWo1YUpNb25vCmFqeDYwOFAzaW5EMVRSYVdzOXBLb1FnQjJGNnc1R3k2MHlROG8wWXF1cnQ5OUpVeDZxTFVoWE5DSnlGcFZRb1cKSkM4QWhsVmo1ZU5CTjY3c3J5R1ZPbi9ha0d5QitLeE9tSVQzVklwOE5xQmVzaEQ0NDBpbElaSk11RlpwOVYzWApDN2poNmpMaEhiZnl2VUpud0pTeGJ6dDhCL1hBby9EcG5ndWx6dlg4cjBFSDVqek8xZklndHdPOTczR09KbFN5CnVkbnhEQmhDS2ROSmpmeTZibnhMRWNKbnhwMnhrMkxIMElpRHRkVC9wdlkzV0t3cU96dkRIRVJFR2MyUjhPQ3MKbDNtdjg5VHB5a3FDU3A4Zzc2SG5zYml6RXJrL2hkbk5LREpJTUZ2bU1QRVJRSkIyZk45RWNjcHYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: [ "CREATE", "UPDATE"]
        apiGroups: ["apps"]
        apiVersions: ["v1"]
        resources: ["statefulsets"]
      - operations: [ "CREATE", "UPDATE"]
        apiGroups: ["extensions"]
        apiVersions: ["v1beta1"]
        resources: ["statefulsets"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: pod.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "release-name-okteto-mutation-webhook"
        path: "/mutate/pod"
        namespace: "default"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUk5a0g5ME56a3g0RlBoMndNdXFYREl3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURVeE5UQTVNVGN6TjFvWApEVE0wTURVeE16QTVNVGN6TjFvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFtdWpLUjhLUFBRbHhnVTJIdVArb3gvR0IKeUkzWkJsVmNhb2QzalVVektURklITVVnVXFkYzRpQ3I0YWlYdnBwMjRzb0pFN3FJdGhwQk9xK0Z6ZVpVdDk0LwpZWVlIeVlBU3V6VFhUSytwcUFQRFFEL3BjR0hkUDQ5dWhxN0oyTE1CTlJ2bDVzc2d3MjY3ZldYcEE1NzkxbDcxClFFMnVOa283bVdCdElsSnhNREFnaytaeGgxK3NuZGVvdzRZQlNQcGNkNkxPd1FvWUhEa0I2NjVsWmMvaWdCcTcKRGM1OFYvaEx2R1RISDJDdVZ4U1R4d2RGbU0vcFNjcDRLMVIwRjArMnZWWU5QaEUrMU9hTHFtZXhCOUxEdnNTNwpVcVltakZ6VCtsVmlnSjNZOU1TVmt6d016YlZHTmJISyswVjVYNDNJSGJNS29lRjlyUHgrcGR1d0JrRkdCUUlECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSjZJVHZpSlFsaXJJUHRWZjI3WgpOSFBuVTZlOE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQlZaOWVwZVZ6NW10RlM5aTlDMUlwZWo1YUpNb25vCmFqeDYwOFAzaW5EMVRSYVdzOXBLb1FnQjJGNnc1R3k2MHlROG8wWXF1cnQ5OUpVeDZxTFVoWE5DSnlGcFZRb1cKSkM4QWhsVmo1ZU5CTjY3c3J5R1ZPbi9ha0d5QitLeE9tSVQzVklwOE5xQmVzaEQ0NDBpbElaSk11RlpwOVYzWApDN2poNmpMaEhiZnl2VUpud0pTeGJ6dDhCL1hBby9EcG5ndWx6dlg4cjBFSDVqek8xZklndHdPOTczR09KbFN5CnVkbnhEQmhDS2ROSmpmeTZibnhMRWNKbnhwMnhrMkxIMElpRHRkVC9wdlkzV0t3cU96dkRIRVJFR2MyUjhPQ3MKbDNtdjg5VHB5a3FDU3A4Zzc2SG5zYml6RXJrL2hkbk5LREpJTUZ2bU1QRVJRSkIyZk45RWNjcHYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: [ "CREATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: pvc.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "release-name-okteto-mutation-webhook"
        path: "/mutate/pvc"
        namespace: "default"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUk5a0g5ME56a3g0RlBoMndNdXFYREl3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURVeE5UQTVNVGN6TjFvWApEVE0wTURVeE16QTVNVGN6TjFvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFtdWpLUjhLUFBRbHhnVTJIdVArb3gvR0IKeUkzWkJsVmNhb2QzalVVektURklITVVnVXFkYzRpQ3I0YWlYdnBwMjRzb0pFN3FJdGhwQk9xK0Z6ZVpVdDk0LwpZWVlIeVlBU3V6VFhUSytwcUFQRFFEL3BjR0hkUDQ5dWhxN0oyTE1CTlJ2bDVzc2d3MjY3ZldYcEE1NzkxbDcxClFFMnVOa283bVdCdElsSnhNREFnaytaeGgxK3NuZGVvdzRZQlNQcGNkNkxPd1FvWUhEa0I2NjVsWmMvaWdCcTcKRGM1OFYvaEx2R1RISDJDdVZ4U1R4d2RGbU0vcFNjcDRLMVIwRjArMnZWWU5QaEUrMU9hTHFtZXhCOUxEdnNTNwpVcVltakZ6VCtsVmlnSjNZOU1TVmt6d016YlZHTmJISyswVjVYNDNJSGJNS29lRjlyUHgrcGR1d0JrRkdCUUlECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSjZJVHZpSlFsaXJJUHRWZjI3WgpOSFBuVTZlOE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQlZaOWVwZVZ6NW10RlM5aTlDMUlwZWo1YUpNb25vCmFqeDYwOFAzaW5EMVRSYVdzOXBLb1FnQjJGNnc1R3k2MHlROG8wWXF1cnQ5OUpVeDZxTFVoWE5DSnlGcFZRb1cKSkM4QWhsVmo1ZU5CTjY3c3J5R1ZPbi9ha0d5QitLeE9tSVQzVklwOE5xQmVzaEQ0NDBpbElaSk11RlpwOVYzWApDN2poNmpMaEhiZnl2VUpud0pTeGJ6dDhCL1hBby9EcG5ndWx6dlg4cjBFSDVqek8xZklndHdPOTczR09KbFN5CnVkbnhEQmhDS2ROSmpmeTZibnhMRWNKbnhwMnhrMkxIMElpRHRkVC9wdlkzV0t3cU96dkRIRVJFR2MyUjhPQ3MKbDNtdjg5VHB5a3FDU3A4Zzc2SG5zYml6RXJrL2hkbk5LREpJTUZ2bU1QRVJRSkIyZk45RWNjcHYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: [ "CREATE", "DELETE", "UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["persistentvolumeclaims"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: serviceaccount.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "release-name-okteto-mutation-webhook"
        path: "/mutate/serviceaccount"
        namespace: "default"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUk5a0g5ME56a3g0RlBoMndNdXFYREl3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURVeE5UQTVNVGN6TjFvWApEVE0wTURVeE16QTVNVGN6TjFvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFtdWpLUjhLUFBRbHhnVTJIdVArb3gvR0IKeUkzWkJsVmNhb2QzalVVektURklITVVnVXFkYzRpQ3I0YWlYdnBwMjRzb0pFN3FJdGhwQk9xK0Z6ZVpVdDk0LwpZWVlIeVlBU3V6VFhUSytwcUFQRFFEL3BjR0hkUDQ5dWhxN0oyTE1CTlJ2bDVzc2d3MjY3ZldYcEE1NzkxbDcxClFFMnVOa283bVdCdElsSnhNREFnaytaeGgxK3NuZGVvdzRZQlNQcGNkNkxPd1FvWUhEa0I2NjVsWmMvaWdCcTcKRGM1OFYvaEx2R1RISDJDdVZ4U1R4d2RGbU0vcFNjcDRLMVIwRjArMnZWWU5QaEUrMU9hTHFtZXhCOUxEdnNTNwpVcVltakZ6VCtsVmlnSjNZOU1TVmt6d016YlZHTmJISyswVjVYNDNJSGJNS29lRjlyUHgrcGR1d0JrRkdCUUlECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSjZJVHZpSlFsaXJJUHRWZjI3WgpOSFBuVTZlOE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQlZaOWVwZVZ6NW10RlM5aTlDMUlwZWo1YUpNb25vCmFqeDYwOFAzaW5EMVRSYVdzOXBLb1FnQjJGNnc1R3k2MHlROG8wWXF1cnQ5OUpVeDZxTFVoWE5DSnlGcFZRb1cKSkM4QWhsVmo1ZU5CTjY3c3J5R1ZPbi9ha0d5QitLeE9tSVQzVklwOE5xQmVzaEQ0NDBpbElaSk11RlpwOVYzWApDN2poNmpMaEhiZnl2VUpud0pTeGJ6dDhCL1hBby9EcG5ndWx6dlg4cjBFSDVqek8xZklndHdPOTczR09KbFN5CnVkbnhEQmhDS2ROSmpmeTZibnhMRWNKbnhwMnhrMkxIMElpRHRkVC9wdlkzV0t3cU96dkRIRVJFR2MyUjhPQ3MKbDNtdjg5VHB5a3FDU3A4Zzc2SG5zYml6RXJrL2hkbk5LREpJTUZ2bU1QRVJRSkIyZk45RWNjcHYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: [ "CREATE", "UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["serviceaccounts"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: cronjob.webhook.okteto.com
    admissionReviewVersions: ["v1", "v1beta1"]
    failurePolicy: Ignore
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "release-name-okteto-mutation-webhook"
        path: "/mutate/cronjob"
        namespace: "default"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUk5a0g5ME56a3g0RlBoMndNdXFYREl3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURVeE5UQTVNVGN6TjFvWApEVE0wTURVeE16QTVNVGN6TjFvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFtdWpLUjhLUFBRbHhnVTJIdVArb3gvR0IKeUkzWkJsVmNhb2QzalVVektURklITVVnVXFkYzRpQ3I0YWlYdnBwMjRzb0pFN3FJdGhwQk9xK0Z6ZVpVdDk0LwpZWVlIeVlBU3V6VFhUSytwcUFQRFFEL3BjR0hkUDQ5dWhxN0oyTE1CTlJ2bDVzc2d3MjY3ZldYcEE1NzkxbDcxClFFMnVOa283bVdCdElsSnhNREFnaytaeGgxK3NuZGVvdzRZQlNQcGNkNkxPd1FvWUhEa0I2NjVsWmMvaWdCcTcKRGM1OFYvaEx2R1RISDJDdVZ4U1R4d2RGbU0vcFNjcDRLMVIwRjArMnZWWU5QaEUrMU9hTHFtZXhCOUxEdnNTNwpVcVltakZ6VCtsVmlnSjNZOU1TVmt6d016YlZHTmJISyswVjVYNDNJSGJNS29lRjlyUHgrcGR1d0JrRkdCUUlECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSjZJVHZpSlFsaXJJUHRWZjI3WgpOSFBuVTZlOE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQlZaOWVwZVZ6NW10RlM5aTlDMUlwZWo1YUpNb25vCmFqeDYwOFAzaW5EMVRSYVdzOXBLb1FnQjJGNnc1R3k2MHlROG8wWXF1cnQ5OUpVeDZxTFVoWE5DSnlGcFZRb1cKSkM4QWhsVmo1ZU5CTjY3c3J5R1ZPbi9ha0d5QitLeE9tSVQzVklwOE5xQmVzaEQ0NDBpbElaSk11RlpwOVYzWApDN2poNmpMaEhiZnl2VUpud0pTeGJ6dDhCL1hBby9EcG5ndWx6dlg4cjBFSDVqek8xZklndHdPOTczR09KbFN5CnVkbnhEQmhDS2ROSmpmeTZibnhMRWNKbnhwMnhrMkxIMElpRHRkVC9wdlkzV0t3cU96dkRIRVJFR2MyUjhPQ3MKbDNtdjg5VHB5a3FDU3A4Zzc2SG5zYml6RXJrL2hkbk5LREpJTUZ2bU1QRVJRSkIyZk45RWNjcHYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: ["UPDATE"]
        apiGroups: ["batch"]
        apiVersions: ["v1", "v1beta1"]
        resources: ["cronjobs"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: config-map.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Ignore
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "release-name-okteto-mutation-webhook"
        path: "/mutate/config-map"
        namespace: "default"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUk5a0g5ME56a3g0RlBoMndNdXFYREl3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURVeE5UQTVNVGN6TjFvWApEVE0wTURVeE16QTVNVGN6TjFvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFtdWpLUjhLUFBRbHhnVTJIdVArb3gvR0IKeUkzWkJsVmNhb2QzalVVektURklITVVnVXFkYzRpQ3I0YWlYdnBwMjRzb0pFN3FJdGhwQk9xK0Z6ZVpVdDk0LwpZWVlIeVlBU3V6VFhUSytwcUFQRFFEL3BjR0hkUDQ5dWhxN0oyTE1CTlJ2bDVzc2d3MjY3ZldYcEE1NzkxbDcxClFFMnVOa283bVdCdElsSnhNREFnaytaeGgxK3NuZGVvdzRZQlNQcGNkNkxPd1FvWUhEa0I2NjVsWmMvaWdCcTcKRGM1OFYvaEx2R1RISDJDdVZ4U1R4d2RGbU0vcFNjcDRLMVIwRjArMnZWWU5QaEUrMU9hTHFtZXhCOUxEdnNTNwpVcVltakZ6VCtsVmlnSjNZOU1TVmt6d016YlZHTmJISyswVjVYNDNJSGJNS29lRjlyUHgrcGR1d0JrRkdCUUlECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSjZJVHZpSlFsaXJJUHRWZjI3WgpOSFBuVTZlOE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQlZaOWVwZVZ6NW10RlM5aTlDMUlwZWo1YUpNb25vCmFqeDYwOFAzaW5EMVRSYVdzOXBLb1FnQjJGNnc1R3k2MHlROG8wWXF1cnQ5OUpVeDZxTFVoWE5DSnlGcFZRb1cKSkM4QWhsVmo1ZU5CTjY3c3J5R1ZPbi9ha0d5QitLeE9tSVQzVklwOE5xQmVzaEQ0NDBpbElaSk11RlpwOVYzWApDN2poNmpMaEhiZnl2VUpud0pTeGJ6dDhCL1hBby9EcG5ndWx6dlg4cjBFSDVqek8xZklndHdPOTczR09KbFN5CnVkbnhEQmhDS2ROSmpmeTZibnhMRWNKbnhwMnhrMkxIMElpRHRkVC9wdlkzV0t3cU96dkRIRVJFR2MyUjhPQ3MKbDNtdjg5VHB5a3FDU3A4Zzc2SG5zYml6RXJrL2hkbk5LREpJTUZ2bU1QRVJRSkIyZk45RWNjcHYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["configmaps"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: namespace.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Ignore
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "release-name-okteto-mutation-webhook"
        path: "/mutate/namespace"
        namespace: "default"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUk5a0g5ME56a3g0RlBoMndNdXFYREl3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURVeE5UQTVNVGN6TjFvWApEVE0wTURVeE16QTVNVGN6TjFvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFtdWpLUjhLUFBRbHhnVTJIdVArb3gvR0IKeUkzWkJsVmNhb2QzalVVektURklITVVnVXFkYzRpQ3I0YWlYdnBwMjRzb0pFN3FJdGhwQk9xK0Z6ZVpVdDk0LwpZWVlIeVlBU3V6VFhUSytwcUFQRFFEL3BjR0hkUDQ5dWhxN0oyTE1CTlJ2bDVzc2d3MjY3ZldYcEE1NzkxbDcxClFFMnVOa283bVdCdElsSnhNREFnaytaeGgxK3NuZGVvdzRZQlNQcGNkNkxPd1FvWUhEa0I2NjVsWmMvaWdCcTcKRGM1OFYvaEx2R1RISDJDdVZ4U1R4d2RGbU0vcFNjcDRLMVIwRjArMnZWWU5QaEUrMU9hTHFtZXhCOUxEdnNTNwpVcVltakZ6VCtsVmlnSjNZOU1TVmt6d016YlZHTmJISyswVjVYNDNJSGJNS29lRjlyUHgrcGR1d0JrRkdCUUlECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSjZJVHZpSlFsaXJJUHRWZjI3WgpOSFBuVTZlOE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQlZaOWVwZVZ6NW10RlM5aTlDMUlwZWo1YUpNb25vCmFqeDYwOFAzaW5EMVRSYVdzOXBLb1FnQjJGNnc1R3k2MHlROG8wWXF1cnQ5OUpVeDZxTFVoWE5DSnlGcFZRb1cKSkM4QWhsVmo1ZU5CTjY3c3J5R1ZPbi9ha0d5QitLeE9tSVQzVklwOE5xQmVzaEQ0NDBpbElaSk11RlpwOVYzWApDN2poNmpMaEhiZnl2VUpud0pTeGJ6dDhCL1hBby9EcG5ndWx6dlg4cjBFSDVqek8xZklndHdPOTczR09KbFN5CnVkbnhEQmhDS2ROSmpmeTZibnhMRWNKbnhwMnhrMkxIMElpRHRkVC9wdlkzV0t3cU96dkRIRVJFR2MyUjhPQ3MKbDNtdjg5VHB5a3FDU3A4Zzc2SG5zYml6RXJrL2hkbk5LREpJTUZ2bU1QRVJRSkIyZk45RWNjcHYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: ["UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["namespaces"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: daemonset.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Ignore
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "release-name-okteto-mutation-webhook"
        path: "/mutate/daemonset"
        namespace: "default"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUk5a0g5ME56a3g0RlBoMndNdXFYREl3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURVeE5UQTVNVGN6TjFvWApEVE0wTURVeE16QTVNVGN6TjFvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFtdWpLUjhLUFBRbHhnVTJIdVArb3gvR0IKeUkzWkJsVmNhb2QzalVVektURklITVVnVXFkYzRpQ3I0YWlYdnBwMjRzb0pFN3FJdGhwQk9xK0Z6ZVpVdDk0LwpZWVlIeVlBU3V6VFhUSytwcUFQRFFEL3BjR0hkUDQ5dWhxN0oyTE1CTlJ2bDVzc2d3MjY3ZldYcEE1NzkxbDcxClFFMnVOa283bVdCdElsSnhNREFnaytaeGgxK3NuZGVvdzRZQlNQcGNkNkxPd1FvWUhEa0I2NjVsWmMvaWdCcTcKRGM1OFYvaEx2R1RISDJDdVZ4U1R4d2RGbU0vcFNjcDRLMVIwRjArMnZWWU5QaEUrMU9hTHFtZXhCOUxEdnNTNwpVcVltakZ6VCtsVmlnSjNZOU1TVmt6d016YlZHTmJISyswVjVYNDNJSGJNS29lRjlyUHgrcGR1d0JrRkdCUUlECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSjZJVHZpSlFsaXJJUHRWZjI3WgpOSFBuVTZlOE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQlZaOWVwZVZ6NW10RlM5aTlDMUlwZWo1YUpNb25vCmFqeDYwOFAzaW5EMVRSYVdzOXBLb1FnQjJGNnc1R3k2MHlROG8wWXF1cnQ5OUpVeDZxTFVoWE5DSnlGcFZRb1cKSkM4QWhsVmo1ZU5CTjY3c3J5R1ZPbi9ha0d5QitLeE9tSVQzVklwOE5xQmVzaEQ0NDBpbElaSk11RlpwOVYzWApDN2poNmpMaEhiZnl2VUpud0pTeGJ6dDhCL1hBby9EcG5ndWx6dlg4cjBFSDVqek8xZklndHdPOTczR09KbFN5CnVkbnhEQmhDS2ROSmpmeTZibnhMRWNKbnhwMnhrMkxIMElpRHRkVC9wdlkzV0t3cU96dkRIRVJFR2MyUjhPQ3MKbDNtdjg5VHB5a3FDU3A4Zzc2SG5zYml6RXJrL2hkbk5LREpJTUZ2bU1QRVJRSkIyZk45RWNjcHYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["apps"]
        apiVersions: ["v1"]
        resources: ["daemonsets"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: externalresources.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Ignore
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "release-name-okteto-mutation-webhook"
        path: "/mutate/externalresources"
        namespace: "default"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUk5a0g5ME56a3g0RlBoMndNdXFYREl3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURVeE5UQTVNVGN6TjFvWApEVE0wTURVeE16QTVNVGN6TjFvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFtdWpLUjhLUFBRbHhnVTJIdVArb3gvR0IKeUkzWkJsVmNhb2QzalVVektURklITVVnVXFkYzRpQ3I0YWlYdnBwMjRzb0pFN3FJdGhwQk9xK0Z6ZVpVdDk0LwpZWVlIeVlBU3V6VFhUSytwcUFQRFFEL3BjR0hkUDQ5dWhxN0oyTE1CTlJ2bDVzc2d3MjY3ZldYcEE1NzkxbDcxClFFMnVOa283bVdCdElsSnhNREFnaytaeGgxK3NuZGVvdzRZQlNQcGNkNkxPd1FvWUhEa0I2NjVsWmMvaWdCcTcKRGM1OFYvaEx2R1RISDJDdVZ4U1R4d2RGbU0vcFNjcDRLMVIwRjArMnZWWU5QaEUrMU9hTHFtZXhCOUxEdnNTNwpVcVltakZ6VCtsVmlnSjNZOU1TVmt6d016YlZHTmJISyswVjVYNDNJSGJNS29lRjlyUHgrcGR1d0JrRkdCUUlECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSjZJVHZpSlFsaXJJUHRWZjI3WgpOSFBuVTZlOE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQlZaOWVwZVZ6NW10RlM5aTlDMUlwZWo1YUpNb25vCmFqeDYwOFAzaW5EMVRSYVdzOXBLb1FnQjJGNnc1R3k2MHlROG8wWXF1cnQ5OUpVeDZxTFVoWE5DSnlGcFZRb1cKSkM4QWhsVmo1ZU5CTjY3c3J5R1ZPbi9ha0d5QitLeE9tSVQzVklwOE5xQmVzaEQ0NDBpbElaSk11RlpwOVYzWApDN2poNmpMaEhiZnl2VUpud0pTeGJ6dDhCL1hBby9EcG5ndWx6dlg4cjBFSDVqek8xZklndHdPOTczR09KbFN5CnVkbnhEQmhDS2ROSmpmeTZibnhMRWNKbnhwMnhrMkxIMElpRHRkVC9wdlkzV0t3cU96dkRIRVJFR2MyUjhPQ3MKbDNtdjg5VHB5a3FDU3A4Zzc2SG5zYml6RXJrL2hkbk5LREpJTUZ2bU1QRVJRSkIyZk45RWNjcHYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["dev.okteto.com"]
        apiVersions: ["v1"]
        resources: ["externals"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
---
# Source: okteto/templates/regcreds-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: release-name-okteto-regcreds
  namespace: "default"
  labels:
    app.kubernetes.io/component: "regcreds"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-regcreds"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
webhooks:
  - name: pullsecret.regcreds.okteto.com
    failurePolicy: Ignore
    admissionReviewVersions: ["v1"]
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "release-name-okteto-regcreds"
        path: "/validate/pullsecret"
        namespace: "default"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lSQVBLNFdlNlVERndtMWVxMTQxdnhDell3RFFZSktvWklodmNOQVFFTEJRQXcKS2pFb01DWUdBMVVFQXhNZmNtVnNaV0Z6WlMxdVlXMWxMVzlyZEdWMGJ5MXlaV2RqY21Wa2N5MWpZVEFlRncweQpOREExTVRVd09URTNNemhhRncwek5EQTFNVE13T1RFM016aGFNQ294S0RBbUJnTlZCQU1USDNKbGJHVmhjMlV0CmJtRnRaUzF2YTNSbGRHOHRjbVZuWTNKbFpITXRZMkV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUUN4OXVxVGJVTjljamlJSW83c0c2T2xTMGZuSEFoZ3FvNjlGdGJqRGEvbThpSXorb2x3engvQwpXb2dpN0xNazhrRzVZQlN0M1VsMzYrck1hbHJrUlIrT0hUaEpNam5BOUZxZ0x2ajcwWnFTZlBoalhFVUwwd0R5CnV1TVd2NHhrTWxORlUyTERqT1NSKzJwVkp4aWtpNk9takJJbXd6RXd6K2haVWVXYTBwcWNMVFVUMmhlcEY4S3YKRjIwNTBoWHBKM2hSMjN5VTJkMXRqSGtJT0NGK3VZbldIZFI0UGV3WkdzY2J5TWl2RFE4TFMzQ1VHUEk2emZzZAo5SVAxRDNjdE5iekVNd0xsMGM0WTR4ZHdSU3JPWTNsQTRsNllEdmVnbUxTTHZFVll5ZXVCL1JDb0tWY0U3RW1TCjJWZzUyVTlXcmpGSitKUmcrdVJKYldDMU8yZEt0V2RKQWdNQkFBR2pZVEJmTUE0R0ExVWREd0VCL3dRRUF3SUMKcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVazk5UGk1eG0veUloZzE2NHVTK1BQeW9iR1l3d0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBRlhYWnVMbVhkTFdQNkVPOXBwL2tnOUNhNmhKQUVKdVZZT2ZBdElmdHd1RUxGUFhvUEhPOUV4WEdqNXMKRGhaSEgvTUdoanhOSTVucDFWalpnQnZqR3BkYkF4NWRJcGVCdVdCNHNkK01UVmhGSjl0WDdEWjhjVmFFeW5vYgpiSEZnZW1jMmVjRWlaZlR3Y1VhR09GRy9vV3ZKdDhSMWFHVEp0aUJjMmFITGRYVXQ0N2J3TmdKM3lDNHNTOUtkCnVSUm9JRkZpcnpaQzBTZ1kzQ21MWTB4YVEwNi9RNHlJeEdoVytNUzluKzJ0WGxrcUZFakRWQTBuS0JCYklFTVUKSG5RbTFna1dBTC9NZ3NNNGgxamFuZkZ0c0llRS80YU5jeENvdEdHY1dDQ0o5YmVwTFA1QWVwbEFRaGJCaktxSQpjczA1QW5Oby9jMFlHY0ZnUm45bCtnYjlSRnM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["secrets"]
    objectSelector:
      matchLabels:
        space.okteto.com/managed: "true"
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
---
# Source: okteto/templates/clustermetrics-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "release-name-okteto-clustermetrics"
  labels:
    app.kubernetes.io/component: "clustermetrics"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-clustermetrics"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  activeDeadlineSeconds: 1800
  completions: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "release-name-okteto-clustermetrics"
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: "clustermetrics"
        app.kubernetes.io/part-of: "okteto"
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
      restartPolicy: Never
      priorityClassName: 
      serviceAccountName: release-name-okteto
      volumes:
        - name: tls-certs
          secret:
            defaultMode: 420
            secretName: default-ssl-certificate-selfsigned
      containers:
        - name: api
          image: okteto/backend:a5f84810e
          imagePullPolicy: IfNotPresent
          args: [ "collect-cluster-metrics"]
          envFrom:
          - configMapRef:
              name: "release-name-okteto"
          - secretRef:
              name: release-name-okteto
          - secretRef:
              name: "okteto-cloud-secret"
              optional: true
          volumeMounts:
            - name: tls-certs
              mountPath: /run/secrets/tls
              readOnly: true
          resources:
            requests:
              cpu: 10m
              memory: 100Mi
---
# Source: okteto/templates/migration-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "release-name-okteto-migration"
  labels:
    app.kubernetes.io/component: "migration"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-migration"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "release-name-okteto-migration"
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: "migration"
        app.kubernetes.io/part-of: "okteto"
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
      restartPolicy: Never
      priorityClassName: 
      serviceAccountName: release-name-okteto
      volumes:
        - name: tls-certs
          secret:
            defaultMode: 420
            secretName: default-ssl-certificate-selfsigned
      containers:
        - name: api
          image: okteto/backend:a5f84810e
          imagePullPolicy: IfNotPresent
          args: [ "migrate" ]
          envFrom:
          - configMapRef:
              name: "release-name-okteto"
          - secretRef:
              name: release-name-okteto
          - secretRef:
              name: "okteto-cloud-secret"
              optional: true
          volumeMounts:
            - name: tls-certs
              mountPath: /run/secrets/tls
              readOnly: true
          resources:
            requests:
              cpu: 10m
              memory: 100Mi
---
# Source: okteto/templates/telemetry-post-install-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "release-name-okteto-telemetry-post-install"
  labels:
    app.kubernetes.io/component: "telemetry"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "release-name-okteto-telemetry-post-install"
    helm.sh/chart: okteto-1.19.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: "telemetry"
        app.kubernetes.io/part-of: "okteto"
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
      serviceAccountName: release-name-okteto
      priorityClassName: 
      restartPolicy: Never
      containers:
        - name: telemetry
          image: okteto/backend:a5f84810e
          imagePullPolicy: IfNotPresent
          args: [ "telemetry" ]
          envFrom:
            - configMapRef:
                name: "release-name-okteto"
            - secretRef:
                name: release-name-okteto
            - secretRef:
                name: "okteto-cloud-secret"
                optional: true
          resources:
            requests:
              cpu: 10m
              memory: 100Mi
