---
# Source: cluster-registry/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-cluster-registry-controller
  namespace: default
  labels:
    
    app: release-name-cluster-registry-controller
    app.kubernetes.io/name: cluster-registry-controller
    helm.sh/chart: cluster-registry-0.2.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.2.12
    app.kubernetes.io/component: cluster-registry-controller
    app.kubernetes.io/part-of: cluster-registry
---
# Source: cluster-registry/templates/reader-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-cluster-registry-controller-reader
  namespace: default
---
# Source: cluster-registry/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cluster-registry-controller-aggregated
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      cluster-registry.k8s.cisco.com/controller-aggregated: "true"
rules: []
---
# Source: cluster-registry/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cluster-registry-controller
  labels:
    
    app: release-name-cluster-registry-controller
    app.kubernetes.io/name: cluster-registry-controller
    helm.sh/chart: cluster-registry-0.2.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.2.12
    app.kubernetes.io/component: cluster-registry-controller
    app.kubernetes.io/part-of: cluster-registry
    cluster-registry.k8s.cisco.com/controller-aggregated: "true"
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - '*'
- apiGroups: ["clusterregistry.k8s.cisco.com"]
  resources: ["*"]
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - patch
- apiGroups: [""]
  resources:
  - events
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - patch
- apiGroups: [""]
  resources:
  - namespaces
  - nodes
  - secrets
  - serviceaccounts
  verbs:
  - get
  - list
  - watch
- apiGroups: [""]
  resources:
  - secrets
  verbs:
  - create
  - update
  - delete
  - patch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - patch
---
# Source: cluster-registry/templates/reader-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cluster-registry-controller-reader-aggregated
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      cluster-registry.k8s.cisco.com/reader-aggregated: "true"
rules: []
---
# Source: cluster-registry/templates/reader-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-cluster-registry-controller-reader
  labels:
    
    app: release-name-cluster-registry-controller
    app.kubernetes.io/name: cluster-registry-controller
    helm.sh/chart: cluster-registry-0.2.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.2.12
    app.kubernetes.io/component: cluster-registry-controller
    app.kubernetes.io/part-of: cluster-registry
    cluster-registry.k8s.cisco.com/reader-aggregated: "true"
rules:
- apiGroups: ["clusterregistry.k8s.cisco.com"]
  resources: ["*"]
  verbs:
  - get
  - list
  - watch
- apiGroups: [""]
  resources:
  - namespaces
  - nodes
  - secrets
  verbs:
  - get
  - list
  - watch
---
# Source: cluster-registry/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-cluster-registry-controller
  labels:
    
    app: release-name-cluster-registry-controller
    app.kubernetes.io/name: cluster-registry-controller
    helm.sh/chart: cluster-registry-0.2.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.2.12
    app.kubernetes.io/component: cluster-registry-controller
    app.kubernetes.io/part-of: cluster-registry
roleRef:
  kind: ClusterRole
  name: release-name-cluster-registry-controller-aggregated
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: release-name-cluster-registry-controller
  namespace: default
---
# Source: cluster-registry/templates/reader-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-cluster-registry-controller-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-cluster-registry-controller-reader-aggregated
subjects:
- kind: ServiceAccount
  name: release-name-cluster-registry-controller-reader
  namespace: default
---
# Source: cluster-registry/templates/rbac-leader-election.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-cluster-registry-controller-leader-election
  namespace: default
  labels:
    
    app: release-name-cluster-registry-controller
    app.kubernetes.io/name: cluster-registry-controller
    helm.sh/chart: cluster-registry-0.2.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.2.12
    app.kubernetes.io/component: cluster-registry-controller
    app.kubernetes.io/part-of: cluster-registry
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
# Source: cluster-registry/templates/rbac-leader-election.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-cluster-registry-controller-leader-election
  namespace: default
  labels:
    
    app: release-name-cluster-registry-controller
    app.kubernetes.io/name: cluster-registry-controller
    helm.sh/chart: cluster-registry-0.2.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.2.12
    app.kubernetes.io/component: cluster-registry-controller
    app.kubernetes.io/part-of: cluster-registry
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-cluster-registry-controller-leader-election
subjects:
- kind: ServiceAccount
  name: release-name-cluster-registry-controller
  namespace: default
---
# Source: cluster-registry/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-cluster-registry-controller
  namespace: default
  labels:
    
    app: release-name-cluster-registry-controller
    app.kubernetes.io/name: cluster-registry-controller
    helm.sh/chart: cluster-registry-0.2.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.2.12
    app.kubernetes.io/component: cluster-registry-controller
    app.kubernetes.io/part-of: cluster-registry
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: metrics
      protocol: TCP
      name: http-metrics
    - port: 443
      targetPort: http-cl-val-wh
      protocol: TCP
      name: http-cl-val-wh
  selector:
    app.kubernetes.io/name: cluster-registry-controller
    app.kubernetes.io/instance: release-name
---
# Source: cluster-registry/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-cluster-registry-controller
  namespace: default
  labels:
    
    app: release-name-cluster-registry-controller
    app.kubernetes.io/name: cluster-registry-controller
    helm.sh/chart: cluster-registry-0.2.12
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: v0.2.12
    app.kubernetes.io/component: cluster-registry-controller
    app.kubernetes.io/part-of: cluster-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cluster-registry-controller
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
      labels:
        
        app: release-name-cluster-registry-controller
        app.kubernetes.io/name: cluster-registry-controller
        helm.sh/chart: cluster-registry-0.2.12
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: v0.2.12
        app.kubernetes.io/component: cluster-registry-controller
        app.kubernetes.io/part-of: cluster-registry
    spec:
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: release-name-cluster-registry-controller
      containers:
        - name: manager
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          image: "ghcr.io/cisco-open/cluster-registry-controller:v0.2.12"
          imagePullPolicy: IfNotPresent
          command:
            - /manager
          args:
            - "--cluster-validator-webhook-enabled=true"
            - "--cluster-validator-webhook-name=release-name-cluster-registry-controller-cluster-validator-webhook"
            - "--cluster-validator-webhook-port=9443"
            - "--cluster-validator-webhook-certificate-directory=/tmp/webhooks/clusterValidator/certificates"
          ports:
            - name: metrics
              containerPort: 8080
              protocol: TCP
            - name: health
              containerPort: 8090
              protocol: TCP
            - containerPort: 9443
              name: http-cl-val-wh
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics
          readinessProbe:
            httpGet:
              path: /readyz
              port: health
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 150Mi
          env:
            - name: METRICS_ADDR
              value: ":8080"
            - name: LEADER_ELECTION_ENABLED
              value: "true"
            - name: LEADER_ELECTION_NAME
              value: "cluster-registry-leader-election"
            - name: LEADER_ELECTION_NAMESPACE
              value: "default"
            - name: LOG_FORMAT
              value: "json"
            - name: LOG_VERBOSITY
              value: "0"
            
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: READER_SERVICE_ACCOUNT_NAME
              value: "release-name-cluster-registry-controller-reader"
            - name: NETWORK_NAME
              value: "default"
            - name: MANAGE_LOCAL_CLUSTER_SECRET
              value: "true"
            - name: APISERVER_ENDPOINT_ADDRESS
              value: ""
            - name: CORE_RESOURCES_SOURCE_ENABLED
              value: "true"
---
# Source: cluster-registry/templates/cluster-validator-vwhc.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: "release-name-cluster-registry-controller-cluster-validator-webhook"
  namespace: default
webhooks:
- name: cluster-validator.clusterregistry.k8s.cisco.com
  clientConfig:
    service:
      name: "release-name-cluster-registry-controller"
      namespace: default
      path: /validate-cluster
      port: 443
  failurePolicy: Ignore
  matchPolicy: Equivalent
  rules:
  - apiGroups:
      - clusterregistry.k8s.cisco.com
    apiVersions:
      - v1alpha1
    operations:
      - CREATE
      - UPDATE
    resources:
      - clusters
    scope: '*'
  sideEffects: None
  timeoutSeconds: 30
  admissionReviewVersions:
    - v1
