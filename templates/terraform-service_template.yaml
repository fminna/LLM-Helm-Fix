---
# Source: terraform-service/templates/base.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-terraform-service
  labels:
    helm.sh/chart: terraform-service-0.1.10
    app.kubernetes.io/name: terraform-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.10"
    app.kubernetes.io/managed-by: Helm
---
# Source: terraform-service/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-terraform-service
  labels:
        helm.sh/chart: terraform-service-0.1.10
        app.kubernetes.io/name: terraform-service
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "0.1.10"
        app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: ["terraform.krateo.io"]
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list"]
---
# Source: terraform-service/templates/clusterrolebindings.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-terraform-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-terraform-service
subjects:
- kind: ServiceAccount
  name: release-name-terraform-service
  namespace: default
---
# Source: terraform-service/templates/base.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-service
  labels:
    helm.sh/chart: terraform-service-0.1.10
    app.kubernetes.io/name: terraform-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.10"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app.kubernetes.io/name: terraform-service
    app.kubernetes.io/instance: release-name
---
# Source: terraform-service/templates/base.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  terraform-service
  namespace: default
  labels:
    helm.sh/chart: terraform-service-0.1.10
    app.kubernetes.io/name: terraform-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.10"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: terraform-service
      app.kubernetes.io/instance: release-name
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        helm.sh/chart: terraform-service-0.1.10
        app.kubernetes.io/name: terraform-service
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "0.1.10"
        app.kubernetes.io/managed-by: Helm
    spec:
      volumes:
        - name: terraform-workdir
          persistentVolumeClaim:
            claimName: terraform-pv-claim
      terminationGracePeriodSeconds: 60
      serviceAccountName: release-name-terraform-service
      securityContext:
        {}
      containers:
        - name: terraform-service
          securityContext:
            {}
          image: "ghcr.io/krateoplatformops/terraform-service:0.1.10"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: terraform-workdir
              mountPath: /tf/bin
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            null
          env:
            - name: TERRAFORM_SERVICE_DEBUG
              value: "true"
            - name: TERRAFORM_SERVICE_PORT
              value: "8080"
            - name: TERRAFORM_PATH
              value: /tf/bin
---
# Source: terraform-service/templates/base.yaml
---
