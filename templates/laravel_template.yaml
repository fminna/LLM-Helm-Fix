---
# Source: laravel/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-laravel
  labels:
    helm.sh/chart: laravel-0.10.3
    app.kubernetes.io/name: laravel
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: laravel/templates/laravel/laravel.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-laravel-web-key
  annotations:
    secret-generator.v1.mittwald.de/type: string
    secret-generator.v1.mittwald.de/secure: "yes"
    secret-generator.v1.mittwald.de/encoding: "base64"
    secret-generator.v1.mittwald.de/length: 32B
    secret-generator.v1.mittwald.de/autogenerate: key
    argocd.argoproj.io/sync-wave: "1"
---
# Source: laravel/templates/mariadb.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-laravel-mariadb-secret
  annotations:
    secret-generator.v1.mittwald.de/autogenerate: password
    argocd.argoproj.io/sync-wave: "10"
---
# Source: laravel/templates/laravel/service.yaml
# Service
apiVersion: v1
kind: Service
metadata:
  name: release-name-laravel-web
  labels:
    app: release-name-laravel-web
    helm.sh/chart: laravel-0.10.3
    app.kubernetes.io/name: laravel
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    argocd.argoproj.io/sync-wave: "20"
spec:
  type: ClusterIP
  selector:
    app: release-name-laravel-web
  ports:
    - port: 80
      name: http
    - port: 3128
      name: squid
    - port: 5173
      name: vite
    - port: 6001
      name: laravel-echo-server
---
# Source: laravel/templates/mariadb.yaml
# Service
apiVersion: v1
kind: Service
metadata:
  name: release-name-laravel-mariadb
  annotations:
    argocd.argoproj.io/sync-wave: "10"
  labels:
    app: release-name-laravel-mariadb
    helm.sh/chart: laravel-0.10.3
    app.kubernetes.io/name: laravel
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    app: release-name-laravel-mariadb
  ports:
    - port: 3306
      name: sql
---
# Source: laravel/templates/phpmyadmin.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-laravel-phpmyadmin
  annotations:
    argocd.argoproj.io/sync-wave: "30"
  labels:
    app: release-name-laravel-phpmyadmin
    helm.sh/chart: laravel-0.10.3
    app.kubernetes.io/name: laravel
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    app: release-name-laravel-phpmyadmin
  ports:
    - port: 80
      name: http
---
# Source: laravel/templates/phpmyadmin.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-laravel-phpmyadmin
  annotations:
    argocd.argoproj.io/sync-wave: "35"
  labels:
    helm.sh/chart: laravel-0.10.3
    app.kubernetes.io/name: laravel
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: release-name-laravel-phpmyadmin
      app.kubernetes.io/name: laravel
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app: release-name-laravel-phpmyadmin
        app.kubernetes.io/name: laravel
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-laravel
      securityContext:
        {}
      containers:
        - name: "phpmyadmin"
          securityContext:
            {}
          image: "phpmyadmin/phpmyadmin:5.2.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: "PMA_HOST"
              value: release-name-laravel-mariadb
            - name: "PMA_USER"
              value: root
            - name: "PMA_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: release-name-laravel-mariadb-secret
                  key: password
                  optional: false
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          startupProbe:
            httpGet:
              port: 80
              path: /
---
# Source: laravel/templates/laravel/laravel.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-laravel-web
  labels:
    helm.sh/chart: laravel-0.10.3
    app.kubernetes.io/name: laravel
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    argocd.argoproj.io/sync-wave: "30"
spec:
  selector:
    matchLabels:
      app: release-name-laravel-web # has to match .spec.template.metadata.labels
      app.kubernetes.io/name: laravel
      app.kubernetes.io/instance: release-name
  serviceName: release-name-laravel-web
  replicas: 1 # by default is 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: release-name-laravel-web # has to match .spec.selector.matchLabels
        app.kubernetes.io/name: laravel
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-laravel
      securityContext:
        {}
      terminationGracePeriodSeconds: 10
      containers:
        - name: web
          securityContext:
            runAsUser: 0
          image: "ghcr.io/codingducksrl/laravel:8.1"
          imagePullPolicy: "Always"
          ports:
            - containerPort: 80
              name: http
          env:
            - name: LARAVEL_APP_KEY
              valueFrom:
                secretKeyRef:
                  name: release-name-laravel-web-key
                  key: key
                  optional: false
            - name: APP_KEY
              value: "base64:$(LARAVEL_APP_KEY)"
            - name: "DB_HOST"
              value: release-name-laravel-mariadb
            - name: "DB_DATABASE"
              value: laravel
            - name: "DB_USERNAME"
              value: root
            - name: "DB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: release-name-laravel-mariadb-secret
                  key: password
                  optional: false
            - name: "ENVS"
              value: "DB_HOST;DB_DATABASE;DB_USERNAME;DB_PASSWORD;APP_KEY"
          volumeMounts:
            - name: persistence
              mountPath: /var/www/html/
  volumeClaimTemplates:
    - metadata:
        name: persistence
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: ceph-block
        resources:
          requests:
            storage: 1Gi
---
# Source: laravel/templates/mariadb.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-laravel-mariadb
  annotations:
    argocd.argoproj.io/sync-wave: "20"
  labels:
    helm.sh/chart: laravel-0.10.3
    app.kubernetes.io/name: laravel
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: release-name-laravel-mariadb # has to match .spec.template.metadata.labels
      app.kubernetes.io/name: laravel
      app.kubernetes.io/instance: release-name
  serviceName: release-name-laravel-mariadb
  replicas: 1 # by default is 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: release-name-laravel-mariadb # has to match .spec.selector.matchLabels
        app.kubernetes.io/name: laravel
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-laravel
      securityContext:
        runAsUser: 0
      terminationGracePeriodSeconds: 10
      initContainers:
        - name: take-data-dir-ownership
          securityContext:
            runAsUser: 0
          image: alpine:3
          # Give `mysql` user permissions a mounted volume
          # https://stackoverflow.com/a/51195446/4360433
          command:
            - chown
            - -R
            - 999:999
            - /var/lib/mysql
          volumeMounts:
            - name: database
              mountPath: /var/lib/mysql
      containers:
        - name: mariadb
          securityContext:
            runAsUser: 0
          image: "mariadb:10.9.4"
          ports:
            - containerPort: 3306
              name: sql
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-laravel-mariadb-secret
                  key: password
                  optional: false
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-laravel-mariadb-secret
                  key: password
                  optional: false
            - name: MYSQL_ROOT_HOST
              value: '%'
            - name: MARIADB_ROOT_HOST
              value: '%'
            - name: MYSQL_DATABASE
              value: laravel
            - name: MARIADB_DATABASE
              value: laravel
          startupProbe:
            exec:
              command:
                - bash
                - -c
                - mysqladmin status -p$MYSQL_ROOT_PASSWORD
            failureThreshold: 3
            successThreshold: 1
            periodSeconds: 10
          volumeMounts:
            - name: database
              mountPath: /var/lib/mysql
  volumeClaimTemplates:
    - metadata:
        name: database
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: ceph-block
        resources:
          requests:
            storage: 1Gi
---
# Source: laravel/templates/laravel/ingress.yaml
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: release-name-laravel-web-route
  annotations:
    kubernetes.io/ingress.class: private-ingress
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host("repo-di-prova.dev.codingduck.cloud")
      kind: Rule
      services:
        - name: release-name-laravel-web
          port: 80
          kind: Service

  tls:
    secretName: private-cert-secret
---
# Source: laravel/templates/phpmyadmin.yaml
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: release-name-laravel-phpmyadmin-route
  annotations:
    kubernetes.io/ingress.class: private-ingress
    argocd.argoproj.io/sync-wave: "40"
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host("repo-di-prova.db.codingduck.cloud")
      kind: Rule
      services:
        - name: release-name-laravel-phpmyadmin
          port: 80
          kind: Service
  tls:
    secretName: db-cert-secret
