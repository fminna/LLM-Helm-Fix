---
# Source: akash-hostname-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: operator-hostname
  labels:
    app.kubernetes.io/name: hostname
    app.kubernetes.io/instance: hostname-service
    app.kubernetes.io/component: operator
    app.kubernetes.io/part-of: provider
---
# Source: akash-hostname-operator/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: operator-hostname
  namespace: akash-services
data:
  k8s-manifest-ns: "lease"
  prune-interval: "600s"
  ignore-list-entry-limit: "131072"
  web-refresh-interval: "5s"
  retry-delay: "3s"
  ignore-list-age-limit: "2613600s"
  event-failure-limit: "3"
---
# Source: akash-hostname-operator/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: akash-operator-hostname
  labels:
    app.kubernetes.io/name: hostname
    app.kubernetes.io/instance: hostname-service
    app.kubernetes.io/component: operator
    app.kubernetes.io/part-of: provider
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - deletecollection
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
      - services
    verbs:
      - get
  - apiGroups:
      - akash.network
    resources:
      - providerhosts
      - manifests
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
---
# Source: akash-hostname-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: akash-operator-hostname
  labels:
    app.kubernetes.io/name: hostname
    app.kubernetes.io/instance: hostname-service
    app.kubernetes.io/component: operator
    app.kubernetes.io/part-of: provider
subjects:
  - kind: ServiceAccount
    name: operator-hostname
    namespace: akash-services
roleRef:
  kind: ClusterRole
  name: akash-operator-hostname
  apiGroup: rbac.authorization.k8s.io
---
# Source: akash-hostname-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: operator-hostname
  labels:
    app.kubernetes.io/name: hostname
    app.kubernetes.io/instance: hostname-service
    app.kubernetes.io/component: operator
    app.kubernetes.io/part-of: provider
spec:
  selector:
    app.kubernetes.io/name: hostname
    app.kubernetes.io/instance: hostname-service
    app.kubernetes.io/component: operator
    app.kubernetes.io/part-of: provider
  ports:
    - name: rest
      port: 8080
      targetPort: rest
---
# Source: akash-hostname-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: operator-hostname
  labels:
    app.kubernetes.io/name: hostname
    app.kubernetes.io/instance: hostname-service
    app.kubernetes.io/component: operator
    app.kubernetes.io/part-of: provider
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: hostname
      app.kubernetes.io/instance: hostname-service
      app.kubernetes.io/component: operator
      app.kubernetes.io/part-of: provider
  replicas: 1
  revisionHistoryLimit: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hostname
        app.kubernetes.io/instance: hostname-service
        app.kubernetes.io/component: operator
        app.kubernetes.io/part-of: provider
    spec:
      serviceAccountName: operator-hostname
      containers:
        - name: operator-hostname
          image: "ghcr.io/akash-network/provider:0.6.1"
          imagePullPolicy: IfNotPresent
          args: ["provider-services", "operator", "hostname"]
          ports:
            - name: rest
              containerPort: 8080
          env:
            - name: AP_K8S_MANIFEST_NS
              valueFrom:
                configMapKeyRef:
                  name: operator-hostname
                  key: k8s-manifest-ns
            - name: AP_PRUNE_INTERVAL
              valueFrom:
                configMapKeyRef:
                  name: operator-hostname
                  key: prune-interval
            - name: AP_IGNORE_LIST_ENTRY_LIMIT
              valueFrom:
                configMapKeyRef:
                  name: operator-hostname
                  key: ignore-list-entry-limit
            - name: AP_WEB_REFRESH_INTERVAL
              valueFrom:
                configMapKeyRef:
                  name: operator-hostname
                  key: web-refresh-interval
            - name: AP_RETRY_DELAY
              valueFrom:
                configMapKeyRef:
                  name: operator-hostname
                  key: retry-delay
            - name: AP_IGNORE_LIST_AGE_LIMIT
              valueFrom:
                configMapKeyRef:
                  name: operator-hostname
                  key: ignore-list-age-limit
            - name: AP_EVENT_FAILURE_LIMIT
              valueFrom:
                configMapKeyRef:
                  name: operator-hostname
                  key: event-failure-limit
            - name: AP_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: AP_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
---
# Source: akash-hostname-operator/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: akash-hostname-operator
  annotations:
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"

spec:
  ingressClassName: "akash-ingress-class"
  rules:
    - host: akash-hostname-operator.localhost
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: akash-hostname-operator
                port:
                  name: status
