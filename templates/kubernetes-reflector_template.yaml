---
# Source: kubernetes-reflector/templates/common.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kubernetes-reflector
  namespace: default
  labels:
    app: "kubernetes-reflector-4.8.10"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "kubernetes-reflector"
    app.kubernetes.io/version: "7.1.217"
    helm-revision: "1"
    helm.sh/chart: "kubernetes-reflector-4.8.10"
    release: "release-name"
automountServiceAccountToken: false
---
# Source: kubernetes-reflector/templates/common.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-kubernetes-reflector
  labels:
    app: "kubernetes-reflector-4.8.10"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "kubernetes-reflector"
    app.kubernetes.io/version: "7.1.217"
    helm-revision: "1"
    helm.sh/chart: "kubernetes-reflector-4.8.10"
    release: "release-name"
rules:
  - apiGroups:
    - ""
    resources:
    - "configmaps"
    - "secrets"
    verbs:
    - "get"
    - "list"
    - "watch"
    - "create"
    - "update"
    - "patch"
    - "delete"
  - apiGroups:
    - ""
    resources:
    - "namespaces"
    verbs:
    - "watch"
    - "list"
---
# Source: kubernetes-reflector/templates/common.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kubernetes-reflector
  labels:
    app: "kubernetes-reflector-4.8.10"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "kubernetes-reflector"
    app.kubernetes.io/version: "7.1.217"
    helm-revision: "1"
    helm.sh/chart: "kubernetes-reflector-4.8.10"
    release: "release-name"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-kubernetes-reflector
subjects:
  - kind: ServiceAccount
    name: release-name-kubernetes-reflector
    namespace: default
---
# Source: kubernetes-reflector/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kubernetes-reflector
  namespace: default
  labels:
    app: "kubernetes-reflector-4.8.10"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "kubernetes-reflector"
    app.kubernetes.io/version: "7.1.217"
    helm-revision: "1"
    helm.sh/chart: "kubernetes-reflector-4.8.10"
    release: "release-name"
spec:  
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      pod.name: main
      app.kubernetes.io/name: kubernetes-reflector
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app: "kubernetes-reflector-4.8.10"
        app.kubernetes.io/instance: "release-name"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/name: "kubernetes-reflector"
        app.kubernetes.io/version: "7.1.217"
        helm-revision: "1"
        helm.sh/chart: "kubernetes-reflector-4.8.10"
        pod.lifecycle: "permanent"
        pod.name: "main"
        release: "release-name"
      annotations:
        checksum/cnpg: "a75efb1ae0b12e0e9dc5b46ff4b7f091cc6a50e8a9f6d73734f01a0fd0d050e3"
        checksum/configmaps: "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a"
        checksum/mariadb: "09c85576cb45b1eecd1467732b11ea8fa3363b0105c465f02a6ad64991521d52"
        checksum/mongodb: "09c85576cb45b1eecd1467732b11ea8fa3363b0105c465f02a6ad64991521d52"
        checksum/persistence: "3bfd952c7ba47be068eb53a9c5f79383e4c5e0ec36432a0d18464fff2c423172"
        checksum/redis: "013343a028cbb3f7e08f4ba7522702dd98e52632c688641074b0b1db3df29894"
        checksum/secrets: "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a"
        checksum/services: "0160f93534f11b6613e3722d41a134c9b28d8674d1a6328a48aafe95c87a781d"
        checksum/solr: "29c14feeaddbf7762052db593898d274941f539cee681ddc613957587686f347"
    spec:
      serviceAccountName: release-name-kubernetes-reflector
      automountServiceAccountToken: true
      runtimeClassName: 
      hostNetwork: false
      hostPID: false
      hostIPC: false
      shareProcessNamespace: false
      enableServiceLinks: false
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/arch: amd64
      topologySpreadConstraints:
        - maxSkew: 1
          whenUnsatisfiable: ScheduleAnyway
          topologyKey: "kubernetes.io/hostname"
          labelSelector:
            matchLabels:      
              pod.name: main
              app.kubernetes.io/name: kubernetes-reflector
              app.kubernetes.io/instance: release-name
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      terminationGracePeriodSeconds: 60
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 568
        sysctls: []
      hostUsers: false
      containers:
        - name: release-name-kubernetes-reflector
          image: docker.io/emberstack/kubernetes-reflector:build-7.1.217@sha256:982b8fc714349abe480a6864f3c3fce8e8801fd5068fac6add5b22ed32efc033
          imagePullPolicy: IfNotPresent
          tty: false
          stdin: false
          volumeMounts:
            - name: devshm
              mountPath: /dev/shm
              readOnly: false
            - name: shared
              mountPath: /shared
              readOnly: false
            - name: tmp
              mountPath: /tmp
              readOnly: false
            - name: varlogs
              mountPath: /var/logs
              readOnly: false
            - name: varrun
              mountPath: /var/run
              readOnly: false
          livenessProbe:
            httpGet:
              port: 25080
              path: /healthz
              scheme: HTTP
            initialDelaySeconds: 12
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
            periodSeconds: 15
          readinessProbe:
            httpGet:
              port: 25080
              path: /healthz
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 4
            successThreshold: 2
            timeoutSeconds: 5
            periodSeconds: 12
          startupProbe:
            httpGet:
              port: 25080
              path: /healthz
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 60
            successThreshold: 1
            timeoutSeconds: 3
            periodSeconds: 5
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits: 
              cpu: 4000m 
              memory: 8Gi
          securityContext:
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            privileged: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add: []
              drop:
                - ALL
          env:
            - name: "TZ"
              value: "UTC"
            - name: "UMASK"
              value: "0022"
            - name: "UMASK_SET"
              value: "0022"
            - name: "NVIDIA_VISIBLE_DEVICES"
              value: "void"
            - name: "S6_READ_ONLY_ROOT"
              value: "1"
            - name: "ES_Reflector__Kubernetes__SkipTlsVerify"
              value: "false"
            - name: "ES_Reflector__Watcher__Timeout"
              value: ""
            - name: "ES_Serilog__MinimumLevel__Default"
              value: "Information"
      volumes:
        - name: devshm
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: shared
          emptyDir: {}
        - name: tmp
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: varlogs
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: varrun
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
