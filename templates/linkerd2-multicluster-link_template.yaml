---
# Source: linkerd2-multicluster-link/templates/service-mirror.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-service-mirror-
  namespace: linkerd-multicluster
  labels:
    linkerd.io/control-plane-component: service-mirror
    mirror.linkerd.io/cluster-name:
---
# Source: linkerd2-multicluster-link/templates/service-mirror.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-service-mirror-access-local-resources-
  labels:
    linkerd.io/control-plane-component: service-mirror
    mirror.linkerd.io/cluster-name: 
rules:
- apiGroups: [""]
  resources: ["endpoints", "services"]
  verbs: ["list", "get", "watch", "create", "delete", "update"]
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["create","list", "get", "watch"]
---
# Source: linkerd2-multicluster-link/templates/service-mirror.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-service-mirror-access-local-resources-
  labels:
    linkerd.io/control-plane-component: service-mirror
    mirror.linkerd.io/cluster-name: 
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-service-mirror-access-local-resources-
subjects:
- kind: ServiceAccount
  name: linkerd-service-mirror-
  namespace: linkerd-multicluster
---
# Source: linkerd2-multicluster-link/templates/service-mirror.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-service-mirror-read-remote-creds-
  namespace: linkerd-multicluster
  labels:
      linkerd.io/control-plane-component: service-mirror
      mirror.linkerd.io/cluster-name: 
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["cluster-credentials-"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["multicluster.linkerd.io"]
    resources: ["links"]
    verbs: ["list", "get", "watch"]
---
# Source: linkerd2-multicluster-link/templates/service-mirror.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-service-mirror-read-remote-creds-
  namespace: linkerd-multicluster
  labels:
      linkerd.io/control-plane-component: service-mirror
      mirror.linkerd.io/cluster-name: 
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: linkerd-service-mirror-read-remote-creds-
subjects:
  - kind: ServiceAccount
    name: linkerd-service-mirror-
    namespace: linkerd-multicluster
---
# Source: linkerd2-multicluster-link/templates/gateway-mirror.yaml
apiVersion: v1
kind: Service
metadata:
  name: probe-gateway-
  namespace: linkerd-multicluster
  labels:
    mirror.linkerd.io/mirrored-gateway: "true"
    mirror.linkerd.io/cluster-name: 
spec:
  ports:
  - name: mc-probe
    port: 4181
    protocol: TCP
---
# Source: linkerd2-multicluster-link/templates/service-mirror.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    linkerd.io/control-plane-component: service-mirror
    mirror.linkerd.io/cluster-name: 
  name: linkerd-service-mirror-
  namespace: linkerd-multicluster
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: linkerd-service-mirror
      mirror.linkerd.io/cluster-name: 
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
      labels:
        linkerd.io/control-plane-component: linkerd-service-mirror
        mirror.linkerd.io/cluster-name: 
    spec:
      containers:
      - args:
        - service-mirror
        - -log-level=info
        - -event-requeue-limit=3
        - -namespace=linkerd-multicluster
        - 
        image: cr.l5d.io/linkerd/controller:stable-2.9.5
        name: service-mirror
        securityContext:
          runAsUser: 2103
        ports:
        - containerPort: 9999
          name: admin-http
      serviceAccountName: linkerd-service-mirror-
