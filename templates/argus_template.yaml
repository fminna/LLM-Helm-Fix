---
# Source: argus/templates/common.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-argus-config
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argus
    app.kubernetes.io/version: 0.11.0
    helm.sh/chart: argus-1.1.2
data:
  config.yml: |
    service:
      release-argus/argus:
        latest_version:
          type: github
          url: release-argus/argus
        dashboard:
          icon: https://github.com/release-argus/Argus/raw/master/web/ui/static/favicon.svg
          icon_link-to: https://release-argus.io
          web_url: https://github.com/release-argus/Argus/blob/master/CHANGELOG.md
---
# Source: argus/templates/common.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-argus-data
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argus
    app.kubernetes.io/version: 0.11.0
    helm.sh/chart: argus-1.1.2
  annotations:
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "1Gi"
---
# Source: argus/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-argus
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argus
    app.kubernetes.io/version: 0.11.0
    helm.sh/chart: argus-1.1.2
  annotations:
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: argus
    app.kubernetes.io/instance: release-name
---
# Source: argus/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-argus
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argus
    app.kubernetes.io/version: 0.11.0
    helm.sh/chart: argus-1.1.2
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: argus
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        
        checksum/config: aa904cc2ba5037d4a237b559b934566abbc0be06afce66dfb0d8b2604360ce4a
      labels:
        app.kubernetes.io/name: argus
        app.kubernetes.io/instance: release-name
    spec:
      
      serviceAccountName: default
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: release-name-argus
          image: "releaseargus/argus:0.11.0"
          imagePullPolicy: 
          command:
              
            - /bin/sh
            - -c
            - cp /config/config.yml /config.yml && argus -config.file=/config.yml
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /config
            - name: data
              mountPath: /app/data
          
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
      volumes:
        - name: config
          configMap:
            name: argus-config
        - name: data
          persistentVolumeClaim:
            claimName: release-name-argus-data
