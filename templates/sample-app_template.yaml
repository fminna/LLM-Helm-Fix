---
# Source: sample-app/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-sample-app
  labels:
    helm.sh/chart: sample-app-0.1.0
    app.kubernetes.io/name: sample-app
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: sample-app/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-sample-app-frontend
  labels:
    helm.sh/chart: sample-app-0.1.0
    app.kubernetes.io/name: sample-app
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
    app: release-name-sample-app-frontend
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: sample-app
    app.kubernetes.io/instance: release-name
    app: release-name-sample-app-frontend
---
# Source: sample-app/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-sample-app-backend
  labels:
    helm.sh/chart: sample-app-0.1.0
    app.kubernetes.io/name: sample-app
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
    app: release-name-sample-app-backend
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: sample-app
    app.kubernetes.io/instance: release-name
    app: release-name-sample-app-backend
---
# Source: sample-app/templates/deployment-backend.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-sample-app-backend
  labels:
    helm.sh/chart: sample-app-0.1.0
    app.kubernetes.io/name: sample-app
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm

spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sample-app
      app.kubernetes.io/instance: release-name
      app: release-name-sample-app-backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sample-app
        app.kubernetes.io/instance: release-name
        app: release-name-sample-app-backend
    spec:
      serviceAccountName: release-name-sample-app
      securityContext:
        {}
      containers:
        - name: sample-app
          securityContext:
            {}
          image: "quay.io/mongodb/farm-intro-backend:0.1"
          imagePullPolicy: Always
          command:
            - python3
            - main.py
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          env:
            - name: DB_URL
              valueFrom:
                secretKeyRef:
                  name: <resource-name>-<database>-<user>
                  key: connectionString.standard
            - name: DB_NAME
              value: 'admin'
          resources:
            {}
---
# Source: sample-app/templates/deployment-frontend.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-sample-app-frontend
  labels:
    helm.sh/chart: sample-app-0.1.0
    app.kubernetes.io/name: sample-app
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
    app: release-name-sample-app-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sample-app
      app.kubernetes.io/instance: release-name
      app: release-name-sample-app-frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sample-app
        app.kubernetes.io/instance: release-name
        app: release-name-sample-app-frontend
    spec:
      serviceAccountName: release-name-sample-app
      securityContext:
        {}
      containers:
        - name: sample-app
          securityContext:
            {}
          image: "quay.io/mongodb/farm-intro-frontend:0.1"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
          - name: DANGEROUSLY_DISABLE_HOST_CHECK
            value: 'true'
          - name: SVC_BACKEND
            value: release-name-sample-app-backend:8000

          resources:
            {}
