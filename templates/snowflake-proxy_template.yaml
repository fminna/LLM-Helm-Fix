---
# Source: snowflake-proxy/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-snowflake-proxy
  namespace: default
  labels:
    app: "snowflake-proxy-1.0.14"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "snowflake-proxy"
    app.kubernetes.io/version: "2.6.0"
    helm-revision: "1"
    helm.sh/chart: "snowflake-proxy-1.0.14"
    release: "release-name"
spec:  
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      pod.name: main
      app.kubernetes.io/name: snowflake-proxy
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app: "snowflake-proxy-1.0.14"
        app.kubernetes.io/instance: "release-name"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/name: "snowflake-proxy"
        app.kubernetes.io/version: "2.6.0"
        helm-revision: "1"
        helm.sh/chart: "snowflake-proxy-1.0.14"
        pod.lifecycle: "permanent"
        pod.name: "main"
        release: "release-name"
      annotations:
        rollme: "dUYni"
    spec:
      serviceAccountName: default
      automountServiceAccountToken: false
      runtimeClassName: 
      hostNetwork: false
      hostPID: false
      hostIPC: false
      shareProcessNamespace: false
      enableServiceLinks: false
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/arch: amd64
      topologySpreadConstraints:
        - maxSkew: 1
          whenUnsatisfiable: ScheduleAnyway
          topologyKey: "truecharts.org/rack"
          labelSelector:
            matchLabels:      
              pod.name: main
              app.kubernetes.io/name: snowflake-proxy
              app.kubernetes.io/instance: release-name
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
        - maxSkew: 1
          whenUnsatisfiable: ScheduleAnyway
          topologyKey: "kubernetes.io/hostname"
          labelSelector:
            matchLabels:      
              pod.name: main
              app.kubernetes.io/name: snowflake-proxy
              app.kubernetes.io/instance: release-name
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      terminationGracePeriodSeconds: 60
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 568
        sysctls: []
      hostUsers: false
      containers:
        - name: release-name-snowflake-proxy
          image: thetorproject/snowflake-proxy:v2.6.0@sha256:96a1e45e7b9fcc2bb2c0680990f42508b67d5e4f163d3c688d9db63761375d32
          imagePullPolicy: IfNotPresent
          tty: false
          stdin: false
          args:
            - "-ephemeral-ports-range"
            - "59999:60000"
            - "-broker"
            - "https://snowflake-broker.torproject.net/"
            - "-nat-retest-interval"
            - "24h0m0s"
            - "-relay"
            - "wss://snowflake.bamsoftware.com/"
            - "-stun"
            - "stun:stun.stunprotocol.org:3478"
            - "-summary-interval"
            - "1h0m0s"
          volumeMounts:
            - name: devshm
              mountPath: /dev/shm
              readOnly: false
            - name: shared
              mountPath: /shared
              readOnly: false
            - name: tmp
              mountPath: /tmp
              readOnly: false
            - name: varlogs
              mountPath: /var/logs
              readOnly: false
            - name: varrun
              mountPath: /var/run
              readOnly: false
          livenessProbe:
            httpGet:
              port: 
              path: /
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              port: 
              path: /
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 5
            successThreshold: 2
            timeoutSeconds: 5
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port:
            initialDelaySeconds: 10
            failureThreshold: 60
            successThreshold: 1
            timeoutSeconds: 2
            periodSeconds: 5
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits: 
              cpu: 4000m 
              memory: 8Gi
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            privileged: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add: []
              drop:
                - ALL
          env:
            - name: "TZ"
              value: "UTC"
            - name: "UMASK"
              value: "0022"
            - name: "UMASK_SET"
              value: "0022"
            - name: "S6_READ_ONLY_ROOT"
              value: "1"
      volumes:
        - name: devshm
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: shared
          emptyDir: {}
        - name: tmp
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: varlogs
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: varrun
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
