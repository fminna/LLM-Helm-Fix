---
# Source: docker-registry/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-docker-registry-secret
  labels:
    app: docker-registry
    chart: docker-registry-1.9.9
    heritage: Helm
    release: release-name
type: Opaque
data:
  haSharedSecret: "Wm14OVNPSGlkd3FmaHhHOA=="
---
# Source: docker-registry/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-docker-registry-config
  labels:
    app: docker-registry
    chart: docker-registry-1.9.9
    heritage: Helm
    release: release-name
data:
  config.yml: |-
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3
    http:
      addr: :5000
      headers:
        X-Content-Type-Options:
        - nosniff
    log:
      fields:
        service: registry
    storage:
      cache:
        blobdescriptor: inmemory
    version: 0.1
---
# Source: docker-registry/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-docker-registry
  labels:
    app: docker-registry
    chart: docker-registry-1.9.9
    release: release-name
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - port: 5000
      protocol: TCP
      name: registry
      targetPort: 5000
  selector:
    app: docker-registry
    release: release-name
---
# Source: docker-registry/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-docker-registry
  labels:
    app: docker-registry
    chart: docker-registry-1.9.9
    release: release-name
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: docker-registry
      release: release-name
  replicas: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: docker-registry
        release: release-name
      annotations:
        checksum/config: 58461374d160ce11bec1f38487bd4ce61aad486085d95c1fb6a42eb890ee505e
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      containers:
        - name: docker-registry
          image: "registry:2.8.1"
          imagePullPolicy: IfNotPresent
          command:
          - /bin/registry
          - serve
          - /etc/docker/registry/config.yml
          ports:
            - containerPort: 5000
          livenessProbe:
            httpGet:
              path: /
              port: 5000
          readinessProbe:
            httpGet:
              path: /
              port: 5000
          resources:
            {}
          env:
            - name: REGISTRY_HTTP_SECRET
              valueFrom:
                secretKeyRef:
                  name: release-name-docker-registry-secret
                  key: haSharedSecret
            - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
              value: "/var/lib/registry"
          volumeMounts:
            - name: data
              mountPath: /var/lib/registry/
            - name: "release-name-docker-registry-config"
              mountPath: "/etc/docker/registry"
      volumes:
        - name: data
          emptyDir: {}
        - name: release-name-docker-registry-config
          configMap:
            name: release-name-docker-registry-config
