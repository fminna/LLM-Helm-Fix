---
# Source: careers/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: careers
  labels:
    helm.sh/chart: careers-0.0.3
    app.kubernetes.io/name: careers
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
# Source: careers/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: careers
data:
  PG_NAME: Y2FyZWVycw==
  PG_USER: Y2FyZWVycw==
  PG_PASSWORD: ZGVmYXVsdHBhc3N3b3Jk
  PG_HOST: Y2FyZWVycy1wc3Fs
  PG_PORT: NTQzMg==
  SECRET_KEY: dGhpcy1pcy1ub3QtdGhlLXByb2R1Y3Rpb24tdmFsdWU=
  DMS: aHR0cHM6Ly93ZWJob29rLnNpdGUvMTUzY2U3MmMtOGI1Zi00YTNhLTg5ZGUtNzY2YzlmMTY1Y2Q1
---
# Source: careers/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: careers
data:
  ALLOWED_HOSTS: "*"
  DEBUG: "True"
---
# Source: careers/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: careers
  labels:
    helm.sh/chart: careers-0.0.3
    app.kubernetes.io/name: careers
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/component: web
    app.kubernetes.io/name: careers
    app.kubernetes.io/instance: release-name
---
# Source: careers/templates/web_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: careers-web
  labels:
    app.kubernetes.io/component: web
    helm.sh/chart: careers-0.0.3
    app.kubernetes.io/name: careers
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: web
      app.kubernetes.io/name: careers
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "false"
      labels:
        app.kubernetes.io/component: web
        app.kubernetes.io/name: careers
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: careers
      securityContext:
        null
      containers:
        - name: careers
          securityContext:
            {}
          image: "783633885093.dkr.ecr.us-west-2.amazonaws.com/careers:stg-23f503cb"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: __lbheartbeat__/
              port: http
          readinessProbe:
            httpGet:
              path: __lbheartbeat__/
              port: http
          resources:
            limits:
              cpu: 1000m
              memory: 2048Mi
            requests:
              cpu: 100m
              memory: 128Mi
          envFrom:
          - configMapRef:
              name: careers
          - secretRef:
              name: careers
---
# Source: careers/templates/hpa.yaml
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: careers
  labels:
    helm.sh/chart: careers-0.0.3
    app.kubernetes.io/name: careers
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: careers-web
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 80
    - type: Resource
      resource:
        name: memory
        targetAverageUtilization: 70
---
# Source: careers/templates/periodic_job.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: careers
  labels:
    helm.sh/chart: careers-0.0.3
    app.kubernetes.io/name: careers
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  schedule: "*/15 * * * *"
  jobTemplate:
    spec:
      backoffLimit: 1
      template:
        spec:
          restartPolicy: Never
          containers:
          - name: "careers-periodic"
            image: "783633885093.dkr.ecr.us-west-2.amazonaws.com/careers:stg-23f503cb"
            imagePullPolicy: IfNotPresent
            envFrom:
            - configMapRef:
                name: careers
            - secretRef:
                name: careers
            command: ["/app/scripts/sync.sh"]
---
# Source: careers/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: careers
  labels:
    helm.sh/chart: careers-0.0.3
    app.kubernetes.io/name: careers
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/issuer: letsencrypt
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
    - host: "careers.mozilla.org"
      http:
        paths:
          - path: /
            backend:
              serviceName: careers
              servicePort: 80
---
# Source: careers/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: careers-hook
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-10"
    "helm.sh/hook-delete-policy": hook-succeeded
data:
  PG_NAME: Y2FyZWVycw==
  PG_USER: Y2FyZWVycw==
  PG_PASSWORD: ZGVmYXVsdHBhc3N3b3Jk
  PG_HOST: Y2FyZWVycy1wc3Fs
  PG_PORT: NTQzMg==
  SECRET_KEY: dGhpcy1pcy1ub3QtdGhlLXByb2R1Y3Rpb24tdmFsdWU=
  DEBUG: RmFsc2U=
  ALLOWED_HOSTS: Kg==
---
# Source: careers/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "careers-test-connection"
  labels:
    helm.sh/chart: careers-0.0.3
    app.kubernetes.io/name: careers
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args: ['-L', 'careers:80']
  restartPolicy: Never
---
# Source: careers/templates/db-migration.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: careers
  labels:
    helm.sh/chart: careers-0.0.3
    app.kubernetes.io/name: careers
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: "release-name"
    spec:
      restartPolicy: Never
      containers:
      - name: careers-db-migration
        image: "783633885093.dkr.ecr.us-west-2.amazonaws.com/careers:stg-23f503cb"
        command: ["python", "manage.py", "migrate", "--noinput"]
        envFrom:
          - secretRef:
              name: careers-hook
