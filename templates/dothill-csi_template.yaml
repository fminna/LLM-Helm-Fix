---
# Source: dothill-csi/templates/rbac.yaml
# This YAML file contains all RBAC objects that are necessary to run external
# CSI provisioner.
#
# In production, each CSI driver deployment has to be customized:
# - to avoid conflicts, use non-default namespace and different names
#   for non-namespaced entities like the ClusterRole
# - decide whether the deployment replicates the external CSI
#   provisioner, in which case leadership election must be enabled;
#   this influences the RBAC setup, see below

apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-provisioner
  labels:
    app.kubernetes.io/name: dothill-csi
    app.kubernetes.io/instance: release-name
---
# Source: dothill-csi/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: init-node
data:
  init-node.sh: |- 
    #!/bin/sh
    
    set -ex
    
    # enable required kernel modules
    modprobe -a iscsi_tcp dm_multipath
    
    # generate a unique IQN for the node
    if [ ! -f /host/iscsi/initiatorname.iscsi ]; then
    	cp /etc/iscsi/* /host/iscsi &&
    	sed -re "s/(InitiatorName=).*/\1$(iscsi-iname -p iqn.2013-10.io.enix)/" /etc/iscsi/initiatorname.iscsi > /host/iscsi/initiatorname.iscsi
    fi
  multipath.conf: |- 
    defaults {
      polling_interval 2
      find_multipaths "yes"
      retain_attached_hw_handler "no"
      disable_changed_wwids "yes"
    }
---
# Source: dothill-csi/templates/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: external-provisioner-runner-dothill
  labels:
    app.kubernetes.io/name: dothill-csi
    app.kubernetes.io/instance: release-name
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims/status"]
    verbs: ["update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["create", "get", "list", "watch", "update", "delete"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents/status"]
    verbs: ["update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
---
# Source: dothill-csi/templates/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-provisioner-role-dothill
  labels:
    app.kubernetes.io/name: dothill-csi
    app.kubernetes.io/instance: release-name
subjects:
  - kind: ServiceAccount
    name: csi-provisioner
    namespace: default
roleRef:
  kind: ClusterRole
  name: external-provisioner-runner-dothill
  apiGroup: rbac.authorization.k8s.io
---
# Source: dothill-csi/templates/rbac.yaml
# Provisioner must be able to work with endpoints in current namespace
# if (and only if) leadership election is enabled
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: external-provisioner-cfg-dothill
  labels:
    app.kubernetes.io/name: dothill-csi
    app.kubernetes.io/instance: release-name
rules:
# Only one of the following rules for endpoints or leases is required based on
# what is set for `--leader-election-type`. Endpoints are deprecated in favor of Leases.
- apiGroups: [""]
  resources: ["endpoints"]
  verbs: ["get", "watch", "list", "delete", "update", "create"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "watch", "list", "delete", "update", "create"]
---
# Source: dothill-csi/templates/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-provisioner-role-cfg-dothill
  labels:
    app.kubernetes.io/name: dothill-csi
    app.kubernetes.io/instance: release-name
subjects:
  - kind: ServiceAccount
    name: csi-provisioner
roleRef:
  kind: Role
  name: external-provisioner-cfg-dothill
  apiGroup: rbac.authorization.k8s.io
---
# Source: dothill-csi/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: dothill-node-server
  labels:
    app.kubernetes.io/version: 3.1.7
    app.kubernetes.io/component: dynamic-provisionning-node
    app.kubernetes.io/name: dothill-csi
    app.kubernetes.io/instance: release-name

spec:
  selector:
    matchLabels:
      name: dothill-node-server
      app.kubernetes.io/name: dothill-csi
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        name: dothill-node-server
        app.kubernetes.io/name: dothill-csi
        app.kubernetes.io/instance: release-name
    spec:
      
      hostNetwork: true
      hostIPC: true
      initContainers:
        - name: init-iscsi
          image: docker.io/enix/dothill-csi:v3.1.6
          command:
            - /usr/local/bin/init-node.sh
          securityContext:
            capabilities:
              add:
                - SYS_MODULE
          volumeMounts:
            - name: iscsi-dir
              mountPath: /host/iscsi
            - name: kernel-modules
              mountPath: /lib/modules
            - name: init-node
              mountPath: /usr/local/bin/init-node.sh
              subPath: init-node.sh
      containers:
        - name: dothill-node
          image: docker.io/enix/dothill-csi:v3.1.6
          command:
            - dothill-node
            - -kubeletpath=/var/lib/kubelet
            - -bind=unix:///var/lib/kubelet/plugins/dothill.csi.enix.io/csi.sock          
          securityContext:
            privileged: true
          volumeMounts:
            - name: device-dir
              mountPath: /dev
            - name: iscsi-dir
              mountPath: /etc/iscsi
            - name: udev-dir
              mountPath: /run/udev
            - name: plugin-dir
              mountPath: /var/lib/kubelet/plugins/dothill.csi.enix.io
            - name: mountpoint-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: Bidirectional
          ports:
          - containerPort: 9808
            name: healthz
            protocol: TCP
          - containerPort: 9842
            name: metrics
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            periodSeconds: 60
        - name: iscsid
          image: docker.io/enix/dothill-csi:v3.1.6
          command:
            - iscsid
            - --foreground
          securityContext:
            privileged: true
          volumeMounts:
            - name: device-dir
              mountPath: /dev
            - name: iscsi-dir
              mountPath: /etc/iscsi
            - name: plugin-dir
              mountPath: /var/lib/kubelet/plugins/dothill.csi.enix.io
            - name: mountpoint-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: Bidirectional
        - name: multipathd
          image: docker.io/enix/dothill-csi:v3.1.6
          command:
            - multipathd
            - -d
            - -s          
          securityContext:
            privileged: true
          volumeMounts:
            - name: device-dir
              mountPath: /dev
            - name: init-node
              mountPath: /etc/multipath.conf
              subPath: multipath.conf
            - name: multipath-dir
              mountPath: /etc/multipath
            - name: udev-dir
              mountPath: /run/udev
        - name: liveness-probe
          image: quay.io/k8scsi/livenessprobe:v2.2.0
          args:
            - --csi-address=/csi/csi.sock          
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
        - name: driver-registrar
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0
          args:
            - --csi-address=/csi/csi.sock
            - --kubelet-registration-path=/var/lib/kubelet/plugins/dothill.csi.enix.io/csi.sock          
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
      volumes:
        - name: device-dir
          hostPath:
            path: /dev
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
        - name: iscsi-dir
          hostPath:
            path: /etc/iscsi
        - name: multipath-dir
          hostPath:
            path: /etc/multipath
        - name: mountpoint-dir
          hostPath:
            path: /var/lib/kubelet/pods
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/dothill.csi.enix.io
            type: DirectoryOrCreate
        - name: kernel-modules
          hostPath:
            path: /lib/modules
        - name: udev-dir
          hostPath:
            path: /run/udev
        - name: init-node
          configMap:
            name: init-node
            defaultMode: 0700
---
# Source: dothill-csi/templates/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: dothill-controller-server
  labels:
    app.kubernetes.io/version: 3.1.7
    app.kubernetes.io/component: dynamic-provisionning-controller
    app.kubernetes.io/name: dothill-csi
    app.kubernetes.io/instance: release-name

spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: dothill-controller-server
      app.kubernetes.io/name: dothill-csi
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app: dothill-controller-server
        app.kubernetes.io/name: dothill-csi
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccount: csi-provisioner
      containers:
        - name: dothill-controller
          image: docker.io/enix/dothill-csi:v3.1.6
          command:
            - dothill-controller
            - -bind=unix:///csi/csi.sock          
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
          ports:
            - containerPort: 9842
              name: metrics
              protocol: TCP
        - name: csi-provisioner
          image: k8s.gcr.io/sig-storage/csi-provisioner:v2.1.0
          args:
            - --csi-address=/csi/csi.sock
            - --worker-threads=1
            - --timeout=30s          
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: csi-attacher
          image: k8s.gcr.io/sig-storage/csi-attacher:v2.2.1
          args:
            - --csi-address=/csi/csi.sock
            - --worker-threads=1
            - --timeout=30s          
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: csi-resizer
          image: k8s.gcr.io/sig-storage/csi-resizer:v1.1.0
          args:
            - --csi-address=/csi/csi.sock          
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: csi-snapshotter
          image: k8s.gcr.io/sig-storage/csi-snapshotter:v4.0.0
          args:
            - --csi-address=/csi/csi.sock          
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
      volumes:
        - name: socket-dir
          emptyDir:
            medium: Memory
