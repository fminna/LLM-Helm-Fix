---
# Source: prometheus-exporter/templates/nginx-config.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: release-name-prometheus-exporter-nginx-config
  labels:
    helm.sh/chart: prometheus-exporter-1.2.2
    app.kubernetes.io/name: prometheus-exporter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
data:
  nginx.conf: |-
    server {
      listen 80 default_server;
      listen [::]:80 default_server;

      # Set nginx to serve files from the shared volume!
      server_tokens off;
      server_name _;

      client_max_body_size 100M;

      location /status {
        access_log off;
        return 200;
      }

      location / {
        include fastcgi_params;

        fastcgi_read_timeout 600s;
        fastcgi_pass 127.0.0.1:9000;
      }
    }
  fastcgi_params: |-
    fastcgi_param   QUERY_STRING            $query_string;
    fastcgi_param   REQUEST_METHOD          $request_method;
    fastcgi_param   CONTENT_TYPE            $content_type;
    fastcgi_param   CONTENT_LENGTH          $content_length;

    fastcgi_param   SCRIPT_FILENAME         /app/public/index.php;
    fastcgi_param   SCRIPT_NAME             /index.php;
    fastcgi_param   PATH_INFO               $fastcgi_path_info;
    fastcgi_param   PATH_TRANSLATED         /app/public$fastcgi_path_info;
    fastcgi_param   REQUEST_URI             $request_uri;
    fastcgi_param   DOCUMENT_URI            $document_uri;
    fastcgi_param   DOCUMENT_ROOT           /app/public;
    fastcgi_param   SERVER_PROTOCOL         $server_protocol;

    fastcgi_param   GATEWAY_INTERFACE       CGI/1.1;
    fastcgi_param   SERVER_SOFTWARE         nginx/$nginx_version;

    fastcgi_param   REMOTE_ADDR             $remote_addr;
    fastcgi_param   REMOTE_PORT             $remote_port;
    fastcgi_param   SERVER_ADDR             $server_addr;
    fastcgi_param   SERVER_PORT             $server_port;
    fastcgi_param   SERVER_NAME             $server_name;

    fastcgi_param   HTTPS                   $https;

    # PHP only, required if PHP was built with --enable-force-cgi-redirect
    fastcgi_param   REDIRECT_STATUS         200;
---
# Source: prometheus-exporter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-prometheus-exporter-metrics
  labels:
    helm.sh/chart: prometheus-exporter-1.2.2
    app.kubernetes.io/name: prometheus-exporter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: metrics
      port: 80
      targetPort: http
      protocol: TCP

  selector:
    app.kubernetes.io/name: prometheus-exporter
    app.kubernetes.io/instance: release-name
---
# Source: prometheus-exporter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-prometheus-exporter
  labels:
    helm.sh/chart: prometheus-exporter-1.2.2
    app.kubernetes.io/name: prometheus-exporter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus-exporter
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: prometheus-exporter-1.2.2
        app.kubernetes.io/name: prometheus-exporter
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.16.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: php-fpm
          securityContext:
            {}
          image: "ghcr.io/makairaio/simple-prometheus-exporter:1"
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
                command:
                    - php-fpm-healthcheck
            initialDelaySeconds: 0
            periodSeconds: 10
          readinessProbe:
            exec:
                command:
                    - php-fpm-healthcheck # a simple ping since this means it's ready to handle traffic
            initialDelaySeconds: 1
            periodSeconds: 5
          resources:
            {}
          volumeMounts:
            - name: release-name-prometheus-exporter-metrics-volume
              mountPath: /app/var/metrics/
        - name: nginx
          securityContext:
            {}
          image: "nginx:1.24-alpine"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /status
              port: http
          readinessProbe:
            httpGet:
              path: /status
              port: http
          resources:
            {}
          volumeMounts:
            - name: release-name-prometheus-exporter-nginx-config-volume
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
            - name: release-name-prometheus-exporter-nginx-config-volume
              mountPath: /etc/nginx/fastcgi_params
              subPath: fastcgi_params
      volumes:
        - name: release-name-prometheus-exporter-nginx-config-volume
          configMap:
            name: release-name-prometheus-exporter-nginx-config
        - name: release-name-prometheus-exporter-metrics-volume
          emptyDir: {}
---
# Source: prometheus-exporter/templates/service-monitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: release-name-prometheus-exporter
  labels:
    helm.sh/chart: prometheus-exporter-1.2.2
    app.kubernetes.io/name: prometheus-exporter
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  endpoints:
    - port: metrics
      path: /metrics
      interval: 15s
      scrapeTimeout: 10s
  namespaceSelector:
    matchNames:
      - release-name
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus-exporter
      app.kubernetes.io/instance: release-name
