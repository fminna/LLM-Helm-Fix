---
# Source: umbrella/charts/dashboard/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-dashboard
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-dashboard
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: dashboard-0.6.3
---
# Source: umbrella/charts/pipelines/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-pipelines
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: pipelines-0.11.5
---
# Source: umbrella/charts/triggers/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-triggers
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
---
# Source: umbrella/charts/pipelines/templates/webhook_secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: webhook-certs
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: pipelines-0.11.5
    app.kubernetes.io/component: webhook
---
# Source: umbrella/charts/triggers/templates/webhook_secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: triggers-webhook-certs
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
    app.kubernetes.io/component: webhook
---
# Source: umbrella/charts/pipelines/templates/configmaps.yaml
apiVersion: v1
data: null
kind: ConfigMap
metadata:
  name: release-name-pipelines-artifact-bucket
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: pipelines-0.11.5
data:
  {}
---
# Source: umbrella/charts/pipelines/templates/configmaps.yaml
apiVersion: v1
data: null
kind: ConfigMap
metadata:
  name: release-name-pipelines-artifact-pvc
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: pipelines-0.11.5
data:
  {}
---
# Source: umbrella/charts/pipelines/templates/configmaps.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  # name: release-name-pipelines-defaults
  name: config-defaults
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: pipelines-0.11.5
data:
  _example: |-
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################
  
    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.
  
    # default-timeout-minutes contains the default number of
    # minutes to use for TaskRun and PipelineRun, if none is specified.
    default-timeout-minutes: "60"  # 60 minutes
  
    # default-service-account contains the default service account name
    # to use for TaskRun and PipelineRun, if none is specified.
    default-service-account: "default"
  
    # default-managed-by-label-value contains the default value given to the
    # "app.kubernetes.io/managed-by" label applied to all Pods created for
    # TaskRuns. If a user's requested TaskRun specifies another value for this
    # label, the user's request supercedes.
    default-managed-by-label-value: "tekton-pipelines"
  
    # default-pod-template contains the default pod template to use
    # TaskRun and PipelineRun, if none is specified. If a pod template
    # is specified, the default pod template is ignored.
    # default-pod-template:
---
# Source: umbrella/charts/pipelines/templates/configmaps.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-pipelines-feature-flags
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: pipelines-0.11.5
data:
  disable-home-env-overwrite: "false"
  disable-working-directory-overwrite: "false"
---
# Source: umbrella/charts/pipelines/templates/configmaps.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-pipelines-leader-election
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: pipelines-0.11.5
data:
  leaseDuration: 15s
  renewDeadline: 10s
  resourceLock: leases
  retryPeriod: 2s
---
# Source: umbrella/charts/pipelines/templates/configmaps.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-pipelines-logging
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: pipelines-0.11.5
data:
  loglevel.controller: info
  loglevel.webhook: info
  zap-logger-config: |
    {
      "level": "info",
      "development": false,
      "sampling": {
        "initial": 100,
        "thereafter": 100
      },
      "outputPaths": ["stdout"],
      "errorOutputPaths": ["stderr"],
      "encoding": "json",
      "encoderConfig": {
        "timeKey": "",
        "levelKey": "level",
        "nameKey": "logger",
        "callerKey": "caller",
        "messageKey": "msg",
        "stacktraceKey": "stacktrace",
        "lineEnding": "",
        "levelEncoder": "",
        "timeEncoder": "",
        "durationEncoder": "",
        "callerEncoder": ""
      }
    }
---
# Source: umbrella/charts/pipelines/templates/configmaps.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-pipelines-observability
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: pipelines-0.11.5
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################
  
    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.
  
    # metrics.backend-destination field specifies the system metrics destination.
    # It supports either prometheus (the default) or stackdriver.
    # Note: Using Stackdriver will incur additional charges.
    metrics.backend-destination: prometheus
  
    # metrics.stackdriver-project-id field specifies the Stackdriver project ID. This
    # field is optional. When running on GCE, application default credentials will be
    # used and metrics will be sent to the cluster's project if this field is
    # not provided.
    metrics.stackdriver-project-id: "<your stackdriver project id>"
  
    # metrics.allow-stackdriver-custom-metrics indicates whether it is allowed
    # to send metrics to Stackdriver using "global" resource type and custom
    # metric type. Setting this flag to "true" could cause extra Stackdriver
    # charge.  If metrics.backend-destination is not Stackdriver, this is
    # ignored.
    metrics.allow-stackdriver-custom-metrics: "false"
---
# Source: umbrella/charts/triggers/templates/configmaps.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-triggers-logging
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
data:
  loglevel.controller: info
  loglevel.eventlistener: info
  loglevel.webhook: info
  zap-logger-config: |
    {
      "level": "info",
      "development": false,
      "sampling": {
        "initial": 100,
        "thereafter": 100
      },
      "outputPaths": ["stdout"],
      "errorOutputPaths": ["stderr"],
      "encoding": "json",
      "encoderConfig": {
        "timeKey": "",
        "levelKey": "level",
        "nameKey": "logger",
        "callerKey": "caller",
        "messageKey": "msg",
        "stacktraceKey": "stacktrace",
        "lineEnding": "",
        "levelEncoder": "",
        "timeEncoder": "",
        "durationEncoder": "",
        "callerEncoder": ""
      }
    }
---
# Source: umbrella/charts/triggers/templates/configmaps.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-triggers-observability
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################
  
    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.
  
    # metrics.backend-destination field specifies the system metrics destination.
    # It supports either prometheus (the default) or stackdriver.
    # Note: Using stackdriver will incur additional charges
    metrics.backend-destination: prometheus
  
    # metrics.stackdriver-project-id field specifies the stackdriver project ID. This
    # field is optional. When running on GCE, application default credentials will be
    # used if this field is not provided.
    metrics.stackdriver-project-id: "<your stackdriver project id>"
  
    # metrics.allow-stackdriver-custom-metrics indicates whether it is allowed to send metrics to
    # Stackdriver using "global" resource type and custom metric type if the
    # metrics are not supported by "knative_revision" resource type. Setting this
    # flag to "true" could cause extra Stackdriver charge.
    # If metrics.backend-destination is not Stackdriver, this is ignored.
    metrics.allow-stackdriver-custom-metrics: "false"
---
# Source: umbrella/charts/dashboard/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-dashboard
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-dashboard
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: dashboard-0.6.3
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        rbac.dashboard.tekton.dev/aggregate-to-dashboard: "true"
        app.kubernetes.io/component: dashboard
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/part-of: tekton-dashboard
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: dashboard-0.6.3
---
# Source: umbrella/charts/dashboard/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-dashboard-core
  labels:
    rbac.dashboard.tekton.dev/aggregate-to-dashboard: "true"
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-dashboard
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: dashboard-0.6.3
rules:
  - apiGroups:
      - ''
    resources:
      - serviceaccounts
    verbs:
      - update
      - patch
  - apiGroups:
      - ''
    resources:
      - pods
      - services
    verbs:
      - create
      - update
      - delete
      - patch
  - apiGroups:
      - ''
    resources:
      - secrets
      - configmaps
    verbs:
      - create
      - update
      - delete
  - apiGroups:
      - extensions
      - apps
    resources:
      - deployments
    verbs:
      - create
      - update
      - delete
      - patch
  - apiGroups:
      - tekton.dev
    resources:
      - tasks
      - clustertasks
      - taskruns
      - pipelines
      - pipelineruns
      - pipelineresources
      - conditions
    verbs:
      - create
      - update
      - delete
      - patch
  - apiGroups:
      - tekton.dev
    resources:
      - taskruns/finalizers
      - pipelineruns/finalizers
    verbs:
      - create
      - update
      - delete
      - patch
  - apiGroups:
      - tekton.dev
    resources:
      - tasks/status
      - clustertasks/status
      - taskruns/status
      - pipelines/status
      - pipelineruns/status
    verbs:
      - create
      - update
      - delete
      - patch
  - apiGroups:
      - dashboard.tekton.dev
    resources:
      - extensions
    verbs:
      - create
      - update
      - delete
      - patch
  - apiGroups:
      - triggers.tekton.dev
    resources:
      - clustertriggerbindings
      - eventlisteners
      - triggerbindings
      - triggertemplates
    verbs:
      - create
      - update
      - delete
      - patch
      - add
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
  - apiGroups:
      - security.openshift.io
    resources:
      - securitycontextconstraints
    verbs:
      - use
  - apiGroups:
      - route.openshift.io
    resources:
      - routes
    verbs:
      - get
      - list
  - apiGroups:
      - extensions
      - apps
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - serviceaccounts
    verbs:
      - get
      - list
  - apiGroups:
      - ''
    resources:
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - pods/log
      - namespaces
      - events
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - secrets
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - apps
    resources:
      - deployments
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - tekton.dev
    resources:
      - tasks
      - clustertasks
      - taskruns
      - pipelines
      - pipelineruns
      - pipelineresources
      - conditions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - tekton.dev
    resources:
      - taskruns/finalizers
      - pipelineruns/finalizers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - tekton.dev
    resources:
      - tasks/status
      - clustertasks/status
      - taskruns/status
      - pipelines/status
      - pipelineruns/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - dashboard.tekton.dev
    resources:
      - extensions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - triggers.tekton.dev
    resources:
      - clustertriggerbindings
      - eventlisteners
      - triggerbindings
      - triggertemplates
    verbs:
      - get
      - list
      - watch
---
# Source: umbrella/charts/pipelines/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-pipelines
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: pipelines-0.11.5
rules:
  - apiGroups:
      - ''
    resources:
      - pods
      - limitranges
      - pods/log
      - namespaces
      - secrets
      - events
      - serviceaccounts
      - configmaps
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups: 
      - apps
    resources: 
      - deployments
    verbs: 
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups: 
      - apps
    resources: 
      - deployments/finalizers
    verbs: 
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups: 
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
      - mutatingwebhookconfigurations
    verbs: 
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups: 
      - tekton.dev
    resources: 
      - tasks
      - clustertasks
      - taskruns
      - pipelines
      - pipelineruns
      - pipelineresources
      - conditions
    verbs: 
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups: 
      - tekton.dev
    resources: 
      - taskruns/finalizers
      - pipelineruns/finalizers
    verbs: 
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups: 
      - tekton.dev
    resources: 
      - tasks/status
      - clustertasks/status
      - taskruns/status
      - pipelines/status
      - pipelineruns/status
      - pipelineresources/status
    verbs: 
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
---
# Source: umbrella/charts/pipelines/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-pipelines-edit
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: pipelines-0.11.5
    rbac.authorization.k8s.io/aggregate-to-edit: 'true'
    rbac.authorization.k8s.io/aggregate-to-admin: 'true'
rules:
  - apiGroups:
      - tekton.dev
    resources:
      - tasks
      - taskruns
      - pipelines
      - pipelineruns
      - pipelineresources
      - conditions
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
---
# Source: umbrella/charts/pipelines/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-pipelines-view
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: pipelines-0.11.5
    rbac.authorization.k8s.io/aggregate-to-view: 'true'
rules:
  - apiGroups:
      - tekton.dev
    resources:
      - tasks
      - taskruns
      - pipelines
      - pipelineruns
      - pipelineresources
      - conditions
    verbs:
      - get
      - list
      - watch
---
# Source: umbrella/charts/triggers/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-triggers
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
rules:
  - apiGroups:
      - ''
    resources:
      - configmaps
      - secrets
      - services
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
      - deployments/finalizers
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - triggers.tekton.dev
    resources:
      - clustertriggerbindings
      - eventlisteners
      - triggerbindings
      - triggertemplates
      - eventlisteners/finalizers
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - triggers.tekton.dev
    resources:
      - clustertriggerbindings/status
      - eventlisteners/status
      - triggerbindings/status
      - triggertemplates/status
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
---
# Source: umbrella/charts/triggers/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-triggers-edit
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
    rbac.authorization.k8s.io/aggregate-to-edit: 'true'
    rbac.authorization.k8s.io/aggregate-to-admin: 'true'
rules:
  - apiGroups:
      - tekton.dev
    resources:
      - clustertriggerbindings
      - eventlisteners
      - triggerbindings
      - triggertemplates
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
---
# Source: umbrella/charts/triggers/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-triggers-view
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
    rbac.authorization.k8s.io/aggregate-to-view: 'true'
rules:
- apiGroups:
    - tekton.dev
  resources:
    - clustertriggerbindings
    - eventlisteners
    - triggerbindings
    - triggertemplates
  verbs:
    - get
    - list
    - watch
---
# Source: umbrella/charts/dashboard/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: release-name-dashboard
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-dashboard
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: dashboard-0.6.3
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-dashboard
subjects:
  - kind: ServiceAccount
    name: release-name-dashboard
    namespace: default
---
# Source: umbrella/charts/pipelines/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: release-name-pipelines
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: pipelines-0.11.5
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-pipelines
subjects:
  - kind: ServiceAccount
    name: release-name-pipelines
    namespace: default
---
# Source: umbrella/charts/triggers/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: release-name-triggers
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-triggers
subjects:
  - kind: ServiceAccount
    name: release-name-triggers
    namespace: default
---
# Source: umbrella/charts/dashboard/templates/dashboard_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-dashboard
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-dashboard
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: dashboard-0.6.3
    app.kubernetes.io/version: 0.6.1
    dashboard.tekton.dev/release: 0.6.1
    version: 0.6.1
    app.kubernetes.io/name: dashboard
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 9097
      protocol: TCP
      targetPort: 9097
  selector:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-dashboard
    app.kubernetes.io/name: dashboard
---
# Source: umbrella/charts/pipelines/templates/controller_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-pipelines-controller
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: pipelines-0.11.5
    app.kubernetes.io/version: "v0.11.3"
    pipeline.tekton.dev/release: "v0.11.3"
    version: "v0.11.3"
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: controller
spec:
  type: ClusterIP
  ports:
    - name: metrics
      port: 9090
      protocol: TCP
      targetPort: 9090
  selector:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: controller
---
# Source: umbrella/charts/pipelines/templates/webhook_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-pipelines-webhook
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: pipelines-0.11.5
    app.kubernetes.io/version: "v0.11.3"
    pipeline.tekton.dev/release: "v0.11.3"
    version: "v0.11.3"
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: webhook
spec:
  type: ClusterIP
  ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 8443
    - name: http-metrics
      port: 9090
      protocol: TCP
      targetPort: 9090
    - name: http-profiling
      port: 8008
      protocol: TCP
      targetPort: 8008
  selector:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: webhook
---
# Source: umbrella/charts/triggers/templates/controller_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-triggers-controller
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
    app.kubernetes.io/version: "v0.4.0"
    triggers.tekton.dev/release: "v0.4.0"
    version: "v0.4.0"
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: controller
spec:
  type: ClusterIP
  ports:
    - name: metrics
      port: 9090
      protocol: TCP
      targetPort: 9090
  selector:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: controller
---
# Source: umbrella/charts/triggers/templates/webhook_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-triggers-webhook
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
    app.kubernetes.io/version: "v0.4.0"
    triggers.tekton.dev/release: "v0.4.0"
    version: "v0.4.0"
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: webhook
spec:
  type: ClusterIP
  ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 8443
    - name: http-metrics
      port: 9090
      protocol: TCP
      targetPort: 9090
    - name: http-profiling
      port: 8008
      protocol: TCP
      targetPort: 8008
  selector:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: webhook
---
# Source: umbrella/charts/dashboard/templates/dashboard_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-dashboard-controller
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-dashboard
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: dashboard-0.6.3
    app.kubernetes.io/version: 0.6.1
    dashboard.tekton.dev/release: 0.6.1
    version: 0.6.1
    app.kubernetes.io/name: dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: dashboard
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/part-of: tekton-dashboard
      app.kubernetes.io/name: dashboard
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app.kubernetes.io/component: dashboard
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/part-of: tekton-dashboard
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: dashboard-0.6.3
        app.kubernetes.io/version: 0.6.1
        dashboard.tekton.dev/release: 0.6.1
        version: 0.6.1
        app.kubernetes.io/name: dashboard
    spec:
      serviceAccountName: release-name-dashboard
      containers:
        - name: dashboard
          image: "gcr.io/tekton-releases/github.com/tektoncd/dashboard/cmd/dashboard:v0.6.1"
          imagePullPolicy: "IfNotPresent"
          env:
            - name: PORT
              value: "9097"
            - name: READ_ONLY
              value: "false"
            - name: WEB_RESOURCES_DIR
              value: /var/run/ko/web
            - name: PIPELINE_RUN_SERVICE_ACCOUNT
              value: ""
            - name: INSTALLED_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - containerPort: 9097
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: 9097
          readinessProbe:
            httpGet:
              path: /readiness
              port: 9097
---
# Source: umbrella/charts/pipelines/templates/controller_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-pipelines-controller
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: pipelines-0.11.5
    app.kubernetes.io/version: "v0.11.3"
    pipeline.tekton.dev/release: "v0.11.3"
    version: "v0.11.3"
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/part-of: tekton-pipelines
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: controller
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/part-of: tekton-pipelines
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: pipelines-0.11.5
        app.kubernetes.io/version: "v0.11.3"
        pipeline.tekton.dev/release: "v0.11.3"
        version: "v0.11.3"
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: controller
    spec:
      serviceAccountName: release-name-pipelines
      containers:
        - name: controller
          image: "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/controller:v0.11.3"
          imagePullPolicy: "IfNotPresent"
          args:
            - "-kubeconfig-writer-image"
            - "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/kubeconfigwriter:v0.11.3"
            - "-creds-image"
            - "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/creds-init:v0.11.3"
            - "-git-image"
            - "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.11.3"
            - "-nop-image"
            - "tianon/true"
            - "-shell-image"
            - "busybox"
            - "-gsutil-image"
            - "google/cloud-sdk"
            - "-entrypoint-image"
            - "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/entrypoint:v0.11.3"
            - "-imagedigest-exporter-image"
            - "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/imagedigestexporter:v0.11.3"
            - "-pr-image"
            - "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/pullrequest-init:v0.11.3"
            - "-build-gcs-fetcher-image"
            - "gcr.io/tekton-releases/github.com/tektoncd/pipeline/vendor/github.com/googlecloudplatform/cloud-builders/gcs-fetcher/cmd/gcs-fetcher:v0.11.3"
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            # - name: CONFIG_DEFAULTS_NAME
            #   value: release-name-pipelines-defaults
            - name: CONFIG_LOGGING_NAME
              value: release-name-pipelines-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: release-name-pipelines-observability
            - name: CONFIG_ARTIFACT_BUCKET_NAME
              value: release-name-pipelines-artifact-bucket
            - name: CONFIG_ARTIFACT_PVC_NAME
              value: release-name-pipelines-artifact-pvc
            - name: METRICS_DOMAIN
              value: tekton.dev/pipeline
          volumeMounts:
            - mountPath: /etc/config-logging
              name: config-logging
          ports:
            - containerPort: 9090
              protocol: TCP
      volumes:
        - name: config-logging
          configMap:
            name: release-name-pipelines-logging
---
# Source: umbrella/charts/pipelines/templates/webhook_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-pipelines-webhook
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: pipelines-0.11.5
    app.kubernetes.io/version: "v0.11.3"
    pipeline.tekton.dev/release: "v0.11.3"
    version: "v0.11.3"
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: webhook
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/part-of: tekton-pipelines
      app.kubernetes.io/component: webhook
      app.kubernetes.io/name: webhook
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/part-of: tekton-pipelines
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: pipelines-0.11.5
        app.kubernetes.io/version: "v0.11.3"
        pipeline.tekton.dev/release: "v0.11.3"
        version: "v0.11.3"
        app.kubernetes.io/component: webhook
        app.kubernetes.io/name: webhook
    spec:
      serviceAccountName: release-name-pipelines
      containers:
        - name: webhook
          image: "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/webhook:v0.11.3"
          imagePullPolicy: "IfNotPresent"
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            # - name: CONFIG_DEFAULTS_NAME
            #   value: release-name-pipelines-defaults
            - name: CONFIG_LOGGING_NAME
              value: release-name-pipelines-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: release-name-pipelines-observability
            - name: WEBHOOK_SERVICE_NAME
              value: release-name-pipelines-webhook
            - name: METRICS_DOMAIN
              value: tekton.dev/pipeline
          securityContext:
            allowPrivilegeEscalation: false
          ports:
            - name: metrics
              containerPort: 9090
            - name: profiling
              containerPort: 8008
            - name: https-webhook
              containerPort: 8443
---
# Source: umbrella/charts/triggers/templates/controller_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-triggers-controller
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
    app.kubernetes.io/version: "v0.4.0"
    triggers.tekton.dev/release: "v0.4.0"
    version: "v0.4.0"
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/part-of: tekton-triggers
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: controller
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/part-of: tekton-triggers
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: triggers-0.4.0
        app.kubernetes.io/version: "v0.4.0"
        triggers.tekton.dev/release: "v0.4.0"
        version: "v0.4.0"
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: controller
    spec:
      serviceAccountName: release-name-triggers
      containers:
        - name: controller
          image: "gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/controller:v0.4.0"
          imagePullPolicy: "IfNotPresent"
          args:
            - "-logtostderr"
            - "-stderrthreshold"
            - "INFO"
            - "-el-image"
            - "gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/eventlistenersink:v0.4.0"
            - "-el-port"
            - "8080"
            - "-period-seconds"
            - "10"
            - "-failure-threshold"
            - "1"
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: release-name-triggers-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: release-name-triggers-observability
            - name: METRICS_DOMAIN
              value: tekton.dev/triggers
          ports:
            - containerPort: 9090
              protocol: TCP
---
# Source: umbrella/charts/triggers/templates/webhook_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-triggers-webhook
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
    app.kubernetes.io/version: "v0.4.0"
    triggers.tekton.dev/release: "v0.4.0"
    version: "v0.4.0"
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: webhook
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/part-of: tekton-triggers
      app.kubernetes.io/component: webhook
      app.kubernetes.io/name: webhook
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/part-of: tekton-triggers
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: triggers-0.4.0
        app.kubernetes.io/version: "v0.4.0"
        triggers.tekton.dev/release: "v0.4.0"
        version: "v0.4.0"
        app.kubernetes.io/component: webhook
        app.kubernetes.io/name: webhook
    spec:
      serviceAccountName: release-name-triggers
      containers:
        - name: webhook
          image: "gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/webhook:v0.4.0"
          imagePullPolicy: "IfNotPresent"
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: release-name-triggers-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: release-name-triggers-observability
            - name: WEBHOOK_SERVICE_NAME
              value: release-name-triggers-webhook
            - name: METRICS_DOMAIN
              value: tekton.dev/triggers
          securityContext:
            allowPrivilegeEscalation: false
          ports:
            - name: metrics
              containerPort: 9090
            - name: profiling
              containerPort: 8008
            - name: https-webhook
              containerPort: 8443
---
# Source: umbrella/charts/pipelines/templates/webhook_admission.yaml
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: webhook.pipeline.tekton.dev
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: pipelines-0.11.5
    app.kubernetes.io/component: webhook
webhooks:
  - name: webhook.pipeline.tekton.dev
    admissionReviewVersions:
      - v1beta1
    clientConfig:
      service:
        name: release-name-pipelines-webhook
        namespace: default
    failurePolicy: Fail
    sideEffects: None
---
# Source: umbrella/charts/triggers/templates/webhook_admission.yaml
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: release-name-triggers-webhook
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
    app.kubernetes.io/component: webhook
webhooks:
  - name: webhook.triggers.tekton.dev
    admissionReviewVersions:
      - v1beta1
    clientConfig:
      service:
        name: release-name-triggers-webhook
        namespace: default
    failurePolicy: Fail
    sideEffects: None
---
# Source: umbrella/charts/pipelines/templates/webhook_admission.yaml
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: validation.webhook.pipeline.tekton.dev
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/component: webhook
webhooks:
  - name: validation.webhook.pipeline.tekton.dev
    admissionReviewVersions:
      - v1beta1
    clientConfig:
      service:
        name: release-name-pipelines-webhook
        namespace: default
    failurePolicy: Fail
    sideEffects: None
---
# Source: umbrella/charts/pipelines/templates/webhook_admission.yaml
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: config.webhook.pipeline.tekton.dev
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: pipelines-0.11.5
    app.kubernetes.io/component: webhook
webhooks:
  - name: config.webhook.pipeline.tekton.dev
    admissionReviewVersions:
      - v1beta1
    clientConfig:
      service:
        name: release-name-pipelines-webhook
        namespace: default
    failurePolicy: Fail
    sideEffects: None
    objectSelector:
      matchLabels:
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/part-of: tekton-pipelines
---
# Source: umbrella/charts/triggers/templates/webhook_admission.yaml
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: release-name-triggers-validation
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
    app.kubernetes.io/component: webhook
webhooks:
  - name: validation.webhook.triggers.tekton.dev
    admissionReviewVersions:
      - v1beta1
    clientConfig:
      service:
        name: release-name-triggers-webhook
        namespace: default
    failurePolicy: Fail
    sideEffects: None
---
# Source: umbrella/charts/triggers/templates/webhook_admission.yaml
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: release-name-triggers-config
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
    app.kubernetes.io/component: webhook
webhooks:
  - name: config.webhook.triggers.tekton.dev
    admissionReviewVersions:
      - v1beta1
    clientConfig:
      service:
        name: release-name-triggers-webhook
        namespace: default
    failurePolicy: Fail
    sideEffects: None
    objectSelector:
      matchLabels:
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/part-of: tekton-triggers
