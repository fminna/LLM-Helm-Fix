---
# Source: meshcentral/templates/common.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: release-name-meshcentral-cnpg-main-urls
  namespace: default
  labels:
    app: "meshcentral-16.0.5"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "meshcentral"
    app.kubernetes.io/version: "1.1.22"
    helm-revision: "1"
    helm.sh/chart: "meshcentral-16.0.5"
    release: "release-name"
stringData:
  host: release-name-meshcentral-cnpg-main-rw
  jdbc: jdbc:postgresql://release-name-meshcentral-cnpg-main-rw:5432/meshcentral
  nossl: postgresql://app:PLACEHOLDERPASSWORD@release-name-meshcentral-cnpg-main-rw:5432/meshcentral?sslmode=disable
  porthost: release-name-meshcentral-cnpg-main-rw:5432
  std: postgresql://app:PLACEHOLDERPASSWORD@release-name-meshcentral-cnpg-main-rw:5432/meshcentral
---
# Source: meshcentral/templates/common.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/basic-auth
metadata:
  name: release-name-meshcentral-cnpg-main-user
  namespace: default
  labels:
    app: "meshcentral-16.0.5"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "meshcentral"
    app.kubernetes.io/version: "1.1.22"
    helm-revision: "1"
    helm.sh/chart: "meshcentral-16.0.5"
    release: "release-name"
stringData:
  password: PLACEHOLDERPASSWORD
  username: app
---
# Source: meshcentral/templates/common.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: release-name-meshcentral-mesh-secret
  namespace: default
  labels:
    app: "meshcentral-16.0.5"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "meshcentral"
    app.kubernetes.io/version: "1.1.22"
    helm-revision: "1"
    helm.sh/chart: "meshcentral-16.0.5"
    release: "release-name"
stringData:
  config.json: |-
    {
      "$schema": "http://info.meshcentral.com/downloads/meshcentral-config-schema.json",
      "domains": {
        "": {
          "agentConfig": [
            "webSocketMaskOverride=1"
          ],
          "certUrl": "https://mc.domain.com",
          "clipboardGet": true,
          "clipboardSet": true,
          "deviceMeshRouterLinks": {
            "rdp": true,
            "scp": true,
            "ssh": true
          },
          "geoLocation": true,
          "ipkvm": false,
          "localSessionRecording": true,
          "minify": true,
          "mobileSite": true,
          "mstsc": true,
          "myServer": {
            "Backup": true,
            "Console": true,
            "ErrorLog": true,
            "Restore": true,
            "Trace": true,
            "Upgrade": false
          },
          "newAccounts": false,
          "nightMode": 0,
          "novnc": true,
          "siteStyle": 2,
          "ssh": true,
          "title": "MeshCentral",
          "title2": "TrueCharts",
          "userNameIsEmail": false,
          "welcomeText": "Welcome to TrueCharts MeshCentral"
        }
      },
      "settings": {
        "LANonly": false,
        "WANonly": false,
        "agentCoreDump": false,
        "agentLogDump": false,
        "agentWsCompression": true,
        "aliasPort": 443,
        "allowFraming": false,
        "allowLoginToken": false,
        "autobackup": {
          "backupIntervalHours": 24,
          "backupPath": "/opt/meshcentral/meshcentral-backup",
          "keepLastDaysBackup": 10,
          "mongoDumpPath": "/usr/bin/mongodump",
          "zipPassword": ""
        },
        "cert": "mc.domain.com",
        "cleanNpmCacheOnUpdate": false,
        "compression": true,
        "dbExpire": {
          "events": 1728000,
          "powerevents": 864000,
          "statsevents": 2592000
        },
        "keepCerts": false,
        "maxInvalid2fa": {
          "coolofftime": 30,
          "count": 10,
          "time": 10
        },
        "maxInvalidLogin": {
          "coolofftime": 30,
          "count": 10,
          "time": 10
        },
        "nice404": true,
        "plugins": {
          "enabled": false
        },
        "port": 10205,
        "postgres": {
          "database": "meshcentral",
          "host": "release-name-meshcentral-cnpg-main-rw",
          "password": "PLACEHOLDERPASSWORD",
          "port": 5432,
          "user": "app"
        },
        "relayDNS": [],
        "selfUpdate": false,
        "sessionKey": "ovnbhHabnCfZYYQRevUAnIFl2MMtVKaX",
        "sessionSameSite": "lax",
        "sessionTime": 60,
        "webRTC": false,
        "wsCompression": true
      }
    }
---
# Source: meshcentral/templates/common.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: release-name-meshcentral-sec-store
  namespace: default
  labels:
    app: "meshcentral-16.0.5"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "meshcentral"
    app.kubernetes.io/version: "1.1.22"
    helm-revision: "1"
    helm.sh/chart: "meshcentral-16.0.5"
    release: "release-name"
stringData:
  session_key: ovnbhHabnCfZYYQRevUAnIFl2MMtVKaX
---
# Source: meshcentral/templates/common.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-meshcentral-backups
  namespace: default
  labels:
    app: "meshcentral-16.0.5"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "meshcentral"
    app.kubernetes.io/version: "1.1.22"
    helm-revision: "1"
    helm.sh/chart: "meshcentral-16.0.5"
    release: "release-name"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 256Gi
---
# Source: meshcentral/templates/common.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-meshcentral-data
  namespace: default
  labels:
    app: "meshcentral-16.0.5"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "meshcentral"
    app.kubernetes.io/version: "1.1.22"
    helm-revision: "1"
    helm.sh/chart: "meshcentral-16.0.5"
    release: "release-name"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 256Gi
---
# Source: meshcentral/templates/common.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-meshcentral-files
  namespace: default
  labels:
    app: "meshcentral-16.0.5"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "meshcentral"
    app.kubernetes.io/version: "1.1.22"
    helm-revision: "1"
    helm.sh/chart: "meshcentral-16.0.5"
    release: "release-name"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 256Gi
---
# Source: meshcentral/templates/common.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-meshcentral-web
  namespace: default
  labels:
    app: "meshcentral-16.0.5"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "meshcentral"
    app.kubernetes.io/version: "1.1.22"
    helm-revision: "1"
    helm.sh/chart: "meshcentral-16.0.5"
    release: "release-name"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 256Gi
---
# Source: meshcentral/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-meshcentral
  namespace: default
  labels:
    app: "meshcentral-16.0.5"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "meshcentral"
    app.kubernetes.io/version: "1.1.22"
    helm-revision: "1"
    helm.sh/chart: "meshcentral-16.0.5"
    release: "release-name"
    service.name: "main"
spec:
  type: ClusterIP
  publishNotReadyAddresses: false
  ports:
    - name: main
      port: 10205
      protocol: TCP
      targetPort: 10205
  selector:
    pod.name: main
    app.kubernetes.io/name: meshcentral
    app.kubernetes.io/instance: release-name
---
# Source: meshcentral/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-meshcentral
  namespace: default
  labels:
    app: "meshcentral-16.0.5"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "meshcentral"
    app.kubernetes.io/version: "1.1.22"
    helm-revision: "1"
    helm.sh/chart: "meshcentral-16.0.5"
    release: "release-name"
spec:  
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      pod.name: main
      app.kubernetes.io/name: meshcentral
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app: "meshcentral-16.0.5"
        app.kubernetes.io/instance: "release-name"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/name: "meshcentral"
        app.kubernetes.io/version: "1.1.22"
        helm-revision: "1"
        helm.sh/chart: "meshcentral-16.0.5"
        pod.lifecycle: "permanent"
        pod.name: "main"
        release: "release-name"
      annotations:
        checksum/cnpg: "35c0e4e9ec921290e0eb0b973836e121f73d64635f0976549f8cff430909baca"
        checksum/configmaps: "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a"
        checksum/mariadb: "09c85576cb45b1eecd1467732b11ea8fa3363b0105c465f02a6ad64991521d52"
        checksum/mongodb: "09c85576cb45b1eecd1467732b11ea8fa3363b0105c465f02a6ad64991521d52"
        checksum/persistence: "ac7b640fe24c5dc4186600df002368cd1327022b9d200711bad0198e49a8aacc"
        checksum/redis: "013343a028cbb3f7e08f4ba7522702dd98e52632c688641074b0b1db3df29894"
        checksum/secrets: "854b42880f336405143de9523a1455232ec1842af69d0b2e9b73760515db41eb"
        checksum/services: "c57abbacdbd0e9255fcc98dd600888564d58e2bdeff8fdc7cfb27c2b551ba4bc"
        checksum/solr: "29c14feeaddbf7762052db593898d274941f539cee681ddc613957587686f347"
    spec:
      serviceAccountName: default
      automountServiceAccountToken: false
      runtimeClassName: 
      hostNetwork: false
      hostPID: false
      hostIPC: false
      shareProcessNamespace: false
      enableServiceLinks: false
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/arch: amd64
      topologySpreadConstraints:
        - maxSkew: 1
          whenUnsatisfiable: ScheduleAnyway
          topologyKey: "kubernetes.io/hostname"
          labelSelector:
            matchLabels:      
              pod.name: main
              app.kubernetes.io/name: meshcentral
              app.kubernetes.io/instance: release-name
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      terminationGracePeriodSeconds: 60
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 568
        sysctls: []
      hostUsers: true
      containers:
        - name: release-name-meshcentral
          image: ghcr.io/ylianst/meshcentral:1.1.22@sha256:b543a2a1d459e3604df6f7cc4043458c1c62dc06ede7c1a84238bbfaeefab7aa
          imagePullPolicy: IfNotPresent
          tty: false
          stdin: false
          command:
            - "node"
            - "meshcentral/meshcentral"
          ports:
            - name: main
              containerPort: 10205
              protocol: TCP
              hostPort: null
          volumeMounts:
            - name: backups
              mountPath: /opt/meshcentral/meshcentral-backup
              readOnly: false
            - name: configfile
              mountPath: /opt/meshcentral/meshcentral-data/config.json
              readOnly: true
              subPath: config.json
            - name: data
              mountPath: /opt/meshcentral/meshcentral-data
              readOnly: false
            - name: devshm
              mountPath: /dev/shm
              readOnly: false
            - name: files
              mountPath: /opt/meshcentral/meshcentral-files
              readOnly: false
            - name: shared
              mountPath: /shared
              readOnly: false
            - name: tmp
              mountPath: /tmp
              readOnly: false
            - name: varlogs
              mountPath: /var/logs
              readOnly: false
            - name: varrun
              mountPath: /var/run
              readOnly: false
            - name: web
              mountPath: /opt/meshcentral/meshcentral-web
              readOnly: false
          livenessProbe:
            httpGet:
              port: 10205
              path: /health.ashx
              scheme: HTTP
            initialDelaySeconds: 12
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
            periodSeconds: 15
          readinessProbe:
            httpGet:
              port: 10205
              path: /health.ashx
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 4
            successThreshold: 2
            timeoutSeconds: 5
            periodSeconds: 12
          startupProbe:
            httpGet:
              port: 10205
              path: /health.ashx
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 60
            successThreshold: 1
            timeoutSeconds: 3
            periodSeconds: 5
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits: 
              cpu: 4000m 
              memory: 8Gi
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
            runAsGroup: 0
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            privileged: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add:
                - CHOWN
                - SETUID
                - SETGID
                - FOWNER
                - DAC_OVERRIDE
              drop:
                - ALL
          env:
            - name: "TZ"
              value: "UTC"
            - name: "UMASK"
              value: "0022"
            - name: "UMASK_SET"
              value: "0022"
            - name: "NVIDIA_VISIBLE_DEVICES"
              value: "void"
            - name: "PUID"
              value: "568"
            - name: "USER_ID"
              value: "568"
            - name: "UID"
              value: "568"
            - name: "PGID"
              value: "568"
            - name: "GROUP_ID"
              value: "568"
            - name: "GID"
              value: "568"
      initContainers:
        - name: release-name-meshcentral-system-cnpg-wait
          image: tccr.io/tccr/db-wait-postgres:v1.1.0@sha256:4e4e5b9f37a5d0c8d90d744de23d1857079095fbb55d2944ec91d83241f60376
          imagePullPolicy: IfNotPresent
          tty: false
          stdin: false
          command:
            - "/bin/sh"
            - "-c"
            - "/bin/sh <<'EOF'\necho \"Executing DB waits...\"\necho \"Testing Database availability on [CNPG RW]\"\nuntil\n  echo \"Testing database on url: [release-name-meshcentral-cnpg-main-rw]\"\n  pg_isready -U app -d meshcentral -h release-name-meshcentral-cnpg-main-rw\n  do sleep 5\ndone\necho \"Database available on url: [release-name-meshcentral-cnpg-main-rw]\"\necho \"Done executing DB waits...\"\nEOF"
          volumeMounts:
            - name: devshm
              mountPath: /dev/shm
              readOnly: false
            - name: shared
              mountPath: /shared
              readOnly: false
            - name: tmp
              mountPath: /tmp
              readOnly: false
            - name: varlogs
              mountPath: /var/logs
              readOnly: false
            - name: varrun
              mountPath: /var/run
              readOnly: false
          
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits: 
              cpu: 500m 
              memory: 512Mi
          securityContext:
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            privileged: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add: []
              drop:
                - ALL
          env:
            - name: "TZ"
              value: "UTC"
            - name: "UMASK"
              value: "0022"
            - name: "UMASK_SET"
              value: "0022"
            - name: "NVIDIA_VISIBLE_DEVICES"
              value: "void"
            - name: "S6_READ_ONLY_ROOT"
              value: "1"
      volumes:
        - name: backups
          persistentVolumeClaim:
            claimName: release-name-meshcentral-backups
        - name: configfile
          secret:
            secretName: release-name-meshcentral-mesh-secret
            defaultMode: 0600
            optional: false
        - name: data
          persistentVolumeClaim:
            claimName: release-name-meshcentral-data
        - name: devshm
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: files
          persistentVolumeClaim:
            claimName: release-name-meshcentral-files
        - name: shared
          emptyDir: {}
        - name: tmp
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: varlogs
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: varrun
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: web
          persistentVolumeClaim:
            claimName: release-name-meshcentral-web
---
# Source: meshcentral/templates/common.yaml
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: release-name-meshcentral-cnpg-main
  namespace: default
  labels:
    cnpg.io/reload: "on"
    app: "meshcentral-16.0.5"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "meshcentral"
    app.kubernetes.io/version: "1.1.22"
    helm-revision: "1"
    helm.sh/chart: "meshcentral-16.0.5"
    release: "release-name"
  annotations:
    cnpg.io/hibernation: "off"
    checksum/secrets: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
spec:
  imageName: ghcr.io/cloudnative-pg/postgresql:16.2
  enableSuperuserAccess: true
  primaryUpdateStrategy: unsupervised
  primaryUpdateMethod: switchover
  logLevel: info
  instances: 2
  nodeMaintenanceWindow:
    inProgress: false
    reusePVC: true
  resources:
    requests:
      cpu: 10m
      memory: 50Mi
    limits: 
      cpu: 4000m 
      memory: 8Gi
  storage:
    pvcTemplate:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Gi
  walStorage:
    pvcTemplate:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Gi
  bootstrap:
    initdb:
      secret:
        name: release-name-meshcentral-cnpg-main-user
      database: meshcentral
      owner: app
      dataChecksums: true
