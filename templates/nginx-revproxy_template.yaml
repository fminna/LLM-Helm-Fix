---
# Source: nginx-revproxy/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-nginx-revproxy
  labels:
    helm.sh/chart: nginx-revproxy-1.0.2
    app.kubernetes.io/name: nginx-revproxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: nginx-revproxy/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: configs
data:
  app1.html: |
    APP-1
  app2.html: |
    APP-2
  check.html: |
    OK
  default.conf: "server {\n    listen       80;\n    server_name  _;\n\n    #access_log
    \ /var/log/nginx/host.access.log  main;\n\n    #ssl_certificate     /etc/nginx/ssl/ssl.crt;\n
    \   #ssl_certificate_key /etc/nginx/ssl/ssl.key;\n    #ssl_dhparam /etc/ssl/nginx/dhparam.pem;\n\n
    \   #ssl_session_timeout 1d;\n    #ssl_session_cache shared:MozSSL:10m;\n    #ssl_session_tickets
    off;\n\n    # intermediate configuration\n    #ssl_protocols TLSv1.2 TLSv1.3;\n
    \   #ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;\n
    \   #ssl_prefer_server_ciphers off;\n\n    # HSTS (ngx_http_headers_module is required)
    (63072000 seconds)\n    add_header Strict-Transport-Security \"max-age=63072000\"
    always;\n\n    add_header Content-Security-Policy-Report-Only \"default-src https:;
    script-src https: 'unsafe-eval' 'unsafe-inline'; style-src https: 'unsafe-inline';
    img-src https: data:; font-src https: data:; report-uri /csp-report\";\n\n    location
    / {\n        root   /usr/share/nginx/html;\n        index  index.html index.htm;\n
    \   }\n\n    proxy_set_header\t\t            X-Real-IP  $remote_addr;\n    proxy_set_header
    X-Forwarded-For        $proxy_add_x_forwarded_for;\n    proxy_set_header Host                   $http_host;\n
    \   proxy_set_header X-Forwarded-Proto      https;\n    proxy_redirect                          off;\n
    \   proxy_max_temp_file_size                0;\n    proxy_next_upstream error timeout
    invalid_header http_500 http_502 http_503;\n    \n    #error_page  404              /404.html;\n\n
    \   # redirect server error pages to the static page /50x.html\n    #\n    error_page
    \  500 502 503 504  /50x.html;\n\n    location = /50x.html {\n        root   /usr/share/nginx/html;\n
    \   }\n\n    location /check/ {\n    \talias /etc/nginx/;\n\tindex check.html;\n
    \   }\n\n    location /app1/ {\n        alias /etc/nginx/;\n\tindex app1.html;\n
    \   }\n\n    location /app2/ {\n        alias /etc/nginx/;\n\tindex app2.html;\n
    \   }\n\n    # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n    #\n
    \   #location ~ \\.php$ {\n    #    proxy_pass   http://127.0.0.1;\n    #}\n\n    #
    pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n    #\n    #location
    ~ \\.php$ {\n    #    root           html;\n    #    fastcgi_pass   127.0.0.1:9000;\n
    \   #   fastcgi_index  index.php;\n    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;\n
    \   #    include        fastcgi_params;\n    #}\n\n    # deny access to .htaccess
    files, if Apache's document root\n    # concurs with nginx's one\n    #\n    #location
    ~ /\\.ht {\n    #    deny  all;\n    #}\n}\n"
  nginx.conf: "user  nginx;\nworker_processes  auto;\n\nerror_log  /var/log/nginx/error.log
    notice;\npid        /var/run/nginx.pid;\n\nevents {        \n    worker_connections
    \ 1024;\n}\n\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type
    \ application/octet-stream;\n\n    proxy_set_header X-Real-IP       $proxy_protocol_addr;\n
    \   proxy_set_header X-Forwarded-For $proxy_protocol_addr;\n\n    log_format  main
    \ '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status
    $body_bytes_sent \"$http_referer\" '\n                       #'\"$http_user_agent\"
    \"$http_x_forwarded_for\"';\n                     '\"$http_user_agent\" \"$proxy_protocol_addr\"';\n\n
    \   access_log  /var/log/nginx/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush
    \    on;\n\n    keepalive_timeout  65;\n\n    #gzip  on;\n\n    include /etc/nginx/conf.d/*.conf;\n}\n"
---
# Source: nginx-revproxy/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-nginx-revproxy
  labels:
    helm.sh/chart: nginx-revproxy-1.0.2
    app.kubernetes.io/name: nginx-revproxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: nginx-revproxy
    app.kubernetes.io/instance: release-name
---
# Source: nginx-revproxy/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-nginx-revproxy
  labels:
    helm.sh/chart: nginx-revproxy-1.0.2
    app.kubernetes.io/name: nginx-revproxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: nginx-revproxy
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nginx-revproxy
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-nginx-revproxy
      securityContext:
        {}
      containers:
        - name: nginx-revproxy
          securityContext:
            {}
          image: "nginx:1.20.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
            - name: default-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
              readOnly: true
            - name: check-html
              mountPath: /etc/nginx/check.html
              subPath: check.html
              readOnly: true
            - name: app1-html
              mountPath: /etc/nginx/app1.html
              subPath: app1.html
              readOnly: true
            - name: app2-html
              mountPath: /etc/nginx/app2.html
              subPath: app2.html
              readOnly: true              
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
      volumes:
      - configMap:
          name: configs
        name: nginx-conf
      - configMap:
          name: configs
        name: default-conf
      - configMap:
          name: configs
        name: check-html        
      - configMap:
          name: configs
        name: app1-html  
      - configMap:
          name: configs
        name: app2-html
---
# Source: nginx-revproxy/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-nginx-revproxy-test-connection"
  labels:
    helm.sh/chart: nginx-revproxy-1.0.2
    app.kubernetes.io/name: nginx-revproxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-nginx-revproxy:80']
  restartPolicy: Never
