---
# Source: jx-app-jenkins/charts/jenkins/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-jenkins
  labels:
    app: release-name-jenkins
    chart: "jenkins-0.32.9"
    release: "release-name"
    heritage: "Helm"
---
# Source: jx-app-jenkins/charts/jenkinscleanup/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: jenkinscleanup
    chart: "jenkinscleanup-2.3.95"
    release: "release-name"
    heritage: "Helm"
  name: jenkinscleanup
---
# Source: jx-app-jenkins/charts/jenkinsexpose/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: jenkinsexpose
    chart: "jenkinsexpose-2.3.95"
    release: "release-name"
    heritage: "Helm"
  name: jenkinsexpose
---
# Source: jx-app-jenkins/charts/jenkinstokenjob/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-jenkinstokenjob
  labels:
    app: jenkinstokenjob
    chart: jenkinstokenjob-1.3.965
    release: release-name
    heritage: Helm
---
# Source: jx-app-jenkins/charts/jenkins/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-jenkins
  labels:
    app: release-name-jenkins
    chart: "jenkins-0.32.9"
    release: "release-name"
    heritage: "Helm"
type: Opaque
data:
  
  jenkins-admin-password: "TzJXelFuNnkyaQ=="
  
  
  jenkins-admin-user: "YWRtaW4="
---
# Source: jx-app-jenkins/charts/jenkins/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-jenkins
data:
  config.xml: |-
    <?xml version='1.0' encoding='UTF-8'?>
    <hudson>
      <disabledAdministrativeMonitors/>
      <version>lts</version>
      <numExecutors>0</numExecutors>
      <mode>NORMAL</mode>
      <useSecurity>true</useSecurity>
      <authorizationStrategy class="hudson.security.FullControlOnceLoggedInAuthorizationStrategy">
        <denyAnonymousReadAccess>true</denyAnonymousReadAccess>
      </authorizationStrategy>
      <securityRealm class="hudson.security.LegacySecurityRealm"/>
      <disableRememberMe>false</disableRememberMe>
      <projectNamingStrategy class="jenkins.model.ProjectNamingStrategy$DefaultProjectNamingStrategy"/>
      <workspaceDir>${JENKINS_HOME}/workspace/${ITEM_FULLNAME}</workspaceDir>
      <buildsDir>${ITEM_ROOTDIR}/builds</buildsDir>
      <markupFormatter class="hudson.markup.EscapedMarkupFormatter"/>
      <jdks/>
      <viewsTabBar class="hudson.views.DefaultViewsTabBar"/>
      <myViewsTabBar class="hudson.views.DefaultMyViewsTabBar"/>
      <clouds>
        <org.csanchez.jenkins.plugins.kubernetes.KubernetesCloud plugin="kubernetes@1.14.0">
          <name>kubernetes</name>
          <templates>
            <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
              <inheritFrom></inheritFrom>
              <name>default</name>
              <instanceCap>2147483647</instanceCap>
              <idleMinutes>0</idleMinutes>
              <label>release-name-jenkins-slave </label>
              <nodeSelector></nodeSelector>
                <nodeUsageMode>NORMAL</nodeUsageMode>
              <volumes>
              </volumes>
              <containers>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>jnlp</name>
                  <image>jenkins/jnlp-slave:3.27-1</image>
                  <privileged>false</privileged>
                  <alwaysPullImage>false</alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command></command>
                  <args>${computer.jnlpmac} ${computer.name}</args>
                  <ttyEnabled>false</ttyEnabled>
                  # Resources configuration is a little hacky. This was to prevent breaking
                  # changes, and should be cleanned up in the future once everybody had
                  # enough time to migrate.
                  <resourceRequestCpu>200m</resourceRequestCpu>
                  <resourceRequestMemory>256Mi</resourceRequestMemory>
                  <resourceLimitCpu>200m</resourceLimitCpu>
                  <resourceLimitMemory>256Mi</resourceLimitMemory>
                  <envVars>
                    <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                      <key>JENKINS_URL</key>
                      <value>http://release-name-jenkins:8080</value>
                    </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  </envVars>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
              </containers>
              <envVars>
              </envVars>
              <annotations/>
              <imagePullSecrets/>
              <nodeProperties/>
              <podRetention class="org.csanchez.jenkins.plugins.kubernetes.pod.retention.Default"/>
            </org.csanchez.jenkins.plugins.kubernetes.PodTemplate></templates>
          <serverUrl>https://kubernetes.default</serverUrl>
          <skipTlsVerify>false</skipTlsVerify>
          <namespace>default</namespace>
          <jenkinsUrl>http://release-name-jenkins:8080</jenkinsUrl>
          <jenkinsTunnel>release-name-jenkins-agent:50000</jenkinsTunnel>
          <containerCap>10</containerCap>
          <retentionTimeout>5</retentionTimeout>
          <connectTimeout>0</connectTimeout>
          <readTimeout>0</readTimeout>
          <podRetention class="org.csanchez.jenkins.plugins.kubernetes.pod.retention.Never"/>
        </org.csanchez.jenkins.plugins.kubernetes.KubernetesCloud>
      </clouds>
      <quietPeriod>5</quietPeriod>
      <scmCheckoutRetryCount>0</scmCheckoutRetryCount>
      <views>
        <hudson.model.AllView>
          <owner class="hudson" reference="../../.."/>
          <name>All</name>
          <filterExecutors>false</filterExecutors>
          <filterQueue>false</filterQueue>
          <properties class="hudson.model.View$PropertyList"/>
        </hudson.model.AllView>
      </views>
      <primaryView>All</primaryView>
      <slaveAgentPort>50000</slaveAgentPort>
      <disabledAgentProtocols>
        <string>JNLP-connect</string>
        <string>JNLP2-connect</string>
      </disabledAgentProtocols>
      <label></label>
      <crumbIssuer class="hudson.security.csrf.DefaultCrumbIssuer">
        <excludeClientIPFromCrumb>true</excludeClientIPFromCrumb>
      </crumbIssuer>
      <nodeProperties/>
      <globalNodeProperties/>
      <noUsageStatistics>true</noUsageStatistics>
    </hudson>
  jenkins.model.JenkinsLocationConfiguration.xml: |-
    <?xml version='1.1' encoding='UTF-8'?>
    <jenkins.model.JenkinsLocationConfiguration>
      <adminAddress></adminAddress>
      <jenkinsUrl>http://release-name-jenkins:8080</jenkinsUrl>
    </jenkins.model.JenkinsLocationConfiguration>
  jenkins.CLI.xml: |-
    <?xml version='1.1' encoding='UTF-8'?>
    <jenkins.CLI>
      <enabled>false</enabled>
    </jenkins.CLI>
  apply_config.sh: |-
    mkdir -p /usr/share/jenkins/ref/secrets/;
    echo "false" > /usr/share/jenkins/ref/secrets/slave-to-master-security-kill-switch;
    yes n | cp -i /var/jenkins_config/config.xml /var/jenkins_home;
    yes n | cp -i /var/jenkins_config/jenkins.CLI.xml /var/jenkins_home;
    yes n | cp -i /var/jenkins_config/jenkins.model.JenkinsLocationConfiguration.xml /var/jenkins_home;
    # Install missing plugins
    cp /var/jenkins_config/plugins.txt /var/jenkins_home;
    rm -rf /usr/share/jenkins/ref/plugins/*.lock
    /usr/local/bin/install-plugins.sh `echo $(cat /var/jenkins_home/plugins.txt)`;
    # Copy plugins to shared volume
    yes n | cp -i /usr/share/jenkins/ref/plugins/* /var/jenkins_plugins/;
  plugins.txt: |-
    kubernetes:1.14.0
    workflow-job:2.31
    workflow-aggregator:2.6
    credentials-binding:1.17
    git:3.9.1
---
# Source: jx-app-jenkins/charts/jenkins/templates/tests/test-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-jenkins-tests
data:
  run.sh: |-
    @test "Testing Jenkins UI is accessible" {
      curl --retry 48 --retry-delay 10 release-name-jenkins:8080/login
    }
---
# Source: jx-app-jenkins/charts/jenkins/templates/home-pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-jenkins
  labels:
    app: release-name-jenkins
    chart: "jenkins-0.32.9"
    release: "release-name"
    heritage: "Helm"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: jx-app-jenkins/charts/jenkinstokenjob/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jenkinstokenjob-default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
---
# Source: jx-app-jenkins/charts/jenkins/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: release-name-jenkins-role-binding
  labels:
    app: release-name-jenkins
    chart: "jenkins-0.32.9"
    release: "release-name"
    heritage: "Helm"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: release-name-jenkins
  namespace: default
---
# Source: jx-app-jenkins/charts/jenkinstokenjob/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jenkinstokenjob-default
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jenkinstokenjob-default
subjects:
- kind: ServiceAccount
  name: release-name-jenkinstokenjob
  namespace: default
---
# Source: jx-app-jenkins/charts/jenkinscleanup/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: jenkinscleanup
rules:
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
  - patch
  - create
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  - services
  verbs:
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - extensions
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - ""
  - "route.openshift.io"
  resources:
  - routes
  verbs:
  - get
  - list
  - watch
  - patch
  - create
  - update
  - delete
---
# Source: jx-app-jenkins/charts/jenkinsexpose/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: jenkinsexpose
rules:
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
  - patch
  - create
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  - services
  verbs:
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - extensions
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - ""
  - "route.openshift.io"
  resources:
  - routes
  verbs:
  - get
  - list
  - watch
  - patch
  - create
  - update
  - delete
---
# Source: jx-app-jenkins/charts/jenkinstokenjob/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: jenkinstokenjob
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
- apiGroups:
  - jenkins.io
  resources:
  - environments
  verbs:
  - get
  - list
  - watch
---
# Source: jx-app-jenkins/charts/jenkinscleanup/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: jenkinscleanup
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: jenkinscleanup
subjects:
- kind: ServiceAccount
  name: jenkinscleanup
  namespace: default
---
# Source: jx-app-jenkins/charts/jenkinsexpose/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: jenkinsexpose
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: jenkinsexpose
subjects:
- kind: ServiceAccount
  name: jenkinsexpose
  namespace: default
---
# Source: jx-app-jenkins/charts/jenkinstokenjob/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: jenkinstokenjob
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: jenkinstokenjob
subjects:
- kind: ServiceAccount
  name: release-name-jenkinstokenjob
  namespace: default
---
# Source: jx-app-jenkins/charts/jenkins/templates/jenkins-agent-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jenkins-agent
  labels:
    app: release-name-jenkins
    chart: "jenkins-0.32.9"
    component: "release-name-jenkins-master"
spec:
  ports:
    - port: 50000
      targetPort: 50000
      
      name: slavelistener
  selector:
    component: "release-name-jenkins-master"
  type: ClusterIP
---
# Source: jx-app-jenkins/charts/jenkins/templates/jenkins-master-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jenkins
  labels:
    app: release-name-jenkins
    heritage: "Helm"
    release: "release-name"
    chart: "jenkins-0.32.9"
    component: "release-name-jenkins-master"
    jenkins.io/kind: jenkins
  annotations:
    fabric8.io/expose: "true"
    fabric8.io/ingress.annotations: |-
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-body-size: 500m
spec:
  ports:
    - port: 8080
      name: http
      targetPort: 8080
      
  selector:
    component: "release-name-jenkins-master"
  type: ClusterIP
---
# Source: jx-app-jenkins/charts/jenkins/templates/jenkins-master-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-jenkins
  labels:
    heritage: "Helm"
    release: "release-name"
    chart: "jenkins-0.32.9"
    component: "release-name-jenkins-master"
spec:
  replicas: 1
  strategy:
    type: Recreate
    rollingUpdate: 
  selector:
    matchLabels:
      component: "release-name-jenkins-master"
  template:
    metadata:
      labels:
        app: release-name-jenkins
        heritage: "Helm"
        release: "release-name"
        chart: "jenkins-0.32.9"
        component: "release-name-jenkins-master"
      annotations:
        checksum/config: aa2427a5189a70b9f67038445ca1e6e6fd4f064000c2dfe6d434a2ed30636a7e
    spec:
      securityContext:
        runAsUser: 0
      serviceAccountName: release-name-jenkins
      initContainers:
        - name: "copy-default-config"
          image: "jenkins/jenkins:lts"
          imagePullPolicy: "Always"
          command: [ "sh", "/var/jenkins_config/apply_config.sh" ]
          env:
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-jenkins
                  key: jenkins-admin-password
            - name: ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: release-name-jenkins
                  key: jenkins-admin-user
          resources:
            limits:
              cpu: 2000m
              memory: 4096Mi
            requests:
              cpu: 50m
              memory: 256Mi
          volumeMounts:
            -
              mountPath: /var/jenkins_home
              name: jenkins-home
            -
              mountPath: /var/jenkins_config
              name: jenkins-config
            -
              mountPath: /var/jenkins_plugins
              name: plugin-dir
            -
              mountPath: /usr/share/jenkins/ref/secrets/
              name: secrets-dir
      containers:
        - name: release-name-jenkins
          image: "jenkins/jenkins:lts"
          imagePullPolicy: "Always"
          args: [ "--argumentsRealm.passwd.$(ADMIN_USER)=$(ADMIN_PASSWORD)",  "--argumentsRealm.roles.$(ADMIN_USER)=admin"]
          env:
            - name: JAVA_OPTS
              value: ""
            - name: JENKINS_OPTS
              value: ""
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-jenkins
                  key: jenkins-admin-password
            - name: ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: release-name-jenkins
                  key: jenkins-admin-user
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 50000
              name: slavelistener
          livenessProbe:
            httpGet:
              path: "/login"
              port: http
            initialDelaySeconds: 90
            timeoutSeconds: 5
            failureThreshold: 12
          readinessProbe:
            httpGet:
              path: "/login"
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
          # Resources configuration is a little hacky. This was to prevent breaking
          # changes, and should be cleanned up in the future once everybody had
          # enough time to migrate.
          resources:

            limits:
              cpu: 2000m
              memory: 4096Mi
            requests:
              cpu: 50m
              memory: 256Mi

          volumeMounts:
            -
              mountPath: /var/jenkins_home
              name: jenkins-home
              readOnly: false
            -
              mountPath: /var/jenkins_config
              name: jenkins-config
              readOnly: true
            -
              mountPath: /usr/share/jenkins/ref/plugins/
              name: plugin-dir
              readOnly: false
            -
              mountPath: /usr/share/jenkins/ref/secrets/
              name: secrets-dir
              readOnly: false

      volumes:
      - name: jenkins-config
        configMap:
          name: release-name-jenkins
      - name: plugin-dir
        emptyDir: {}
      - name: secrets-dir
        emptyDir: {}
      - name: jenkins-home
        persistentVolumeClaim:
          claimName: release-name-jenkins
---
# Source: jx-app-jenkins/charts/jenkins/templates/tests/jenkins-test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-ui-test-ywbgz"
  annotations:
    "helm.sh/hook": test-success
spec:
  initContainers:
    - name: "test-framework"
      image: "dduportal/bats:0.4.0"
      command:
      - "bash"
      - "-c"
      - |
        set -ex
        # copy bats to tools dir
        cp -R /usr/local/libexec/ /tools/bats/
      volumeMounts:
      - mountPath: /tools
        name: tools
  containers:
    - name: release-name-ui-test
      image: jenkins/jenkins:lts
      command: ["/tools/bats/bats", "-t", "/tests/run.sh"]
      volumeMounts:
      - mountPath: /tests
        name: tests
        readOnly: true
      - mountPath: /tools
        name: tools
  volumes:
  - name: tests
    configMap:
      name: release-name-jenkins-tests
  - name: tools
    emptyDir: {}
  restartPolicy: Never
---
# Source: jx-app-jenkins/charts/jenkinscleanup/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: jenkinscleanup
  labels:
    heritage: "Helm"
    release: "release-name"
    chart: "jenkinscleanup-2.3.95"
    component: "release-name-jenkinscleanup"
  name: jenkinscleanup
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  # backoffLimit: 5
  template:
    metadata:
      name: "release-name"
      # istio-proxy prevents job pods from completing if istio is enabled
      # https://github.com/istio/istio/issues/6324
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        heritage: "Helm"
        release: "release-name"
        chart: "jenkinscleanup-2.3.95"
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: "jenkinsxio/exposecontroller:2.3.95"
        name: jenkinscleanup
        command: ["/exposecontroller"]
        args:
        - "--cleanup"
      serviceAccountName: jenkinscleanup
      restartPolicy: Never
---
# Source: jx-app-jenkins/charts/jenkinsexpose/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: jenkinsexpose
  labels:
    heritage: "Helm"
    release: "release-name"
    chart: "jenkinsexpose-2.3.95"
    component: "release-name-jenkinsexpose"
  name: jenkinsexpose
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  # backoffLimit: 5
  template:
    metadata:
      name: "release-name"
      # istio-proxy prevents job pods from completing if istio is enabled
      # https://github.com/istio/istio/issues/6324
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        heritage: "Helm"
        release: "release-name"
        chart: "jenkinsexpose-2.3.95"
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: "jenkinsxio/exposecontroller:2.3.95"
        name: jenkinsexpose
        command: ["/exposecontroller"]
        args:
      serviceAccountName: jenkinsexpose
      restartPolicy: Never
---
# Source: jx-app-jenkins/charts/jenkinstokenjob/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-jenkinstokenjob
  labels:
    app: jenkinstokenjob
    chart: jenkinstokenjob-1.3.965
    release: release-name
    heritage: Helm
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  backoffLimit: 5
  activeDeadlineSeconds: 1800
  template:
    metadata:
      labels:
        app: jenkinstokenjob
        release: release-name
    spec:
      restartPolicy: Never
      serviceAccountName: release-name-jenkinstokenjob
      containers:
        - name: jenkinstokenjob
          command: [jx]
          args:
          - create
          - jenkins
          - token
          - --batch-mode
          imagePullPolicy: IfNotPresent
          image: "jenkinsxio/jx:1.3.965"
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
          - name: cheese
            value: wine
          - name: foo
            value: bar
          resources:
            {}
