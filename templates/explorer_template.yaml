---
# Source: explorer/charts/omnirpc/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: explorer-omnirpc
  labels:
    helm.sh/chart: omnirpc-0.2.92
    app.kubernetes.io/name: omnirpc
    app.kubernetes.io/instance: release-name
    
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: explorer/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-explorer
  labels:
    helm.sh/chart: explorer-0.2.16
    app.kubernetes.io/name: explorer
    app.kubernetes.io/instance: release-name
    
    app.kubernetes.io/version: "1.17.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: explorer/charts/clickhouse/templates/configmap-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-clickhouse-config
  labels:
    app.kubernetes.io/name: clickhouse-config
    app.kubernetes.io/instance: release-name-config
    app.kubernetes.io/managed-by: Helm
data:
  config.xml: |-
    <?xml version="1.0"?>
    <yandex>
        <path>/var/lib/clickhouse/</path>
        <tmp_path>/var/lib/clickhouse/tmp/</tmp_path>
        <user_files_path>/var/lib/clickhouse/user_files/</user_files_path>
        <format_schema_path>/var/lib/clickhouse/format_schemas/</format_schema_path>

        <include_from>/etc/clickhouse-server/metrica.d/metrica.xml</include_from>

        <users_config>users.xml</users_config>

        <display_name>release-name-clickhouse</display_name>
        <listen_host>0.0.0.0</listen_host>
        <http_port>8123</http_port>
        <tcp_port>9000</tcp_port>
        <interserver_http_port>9009</interserver_http_port>
        <max_connections>4096</max_connections>
        <keep_alive_timeout>3</keep_alive_timeout>
        <max_concurrent_queries>100</max_concurrent_queries>
        <uncompressed_cache_size>8589934592</uncompressed_cache_size>
        <mark_cache_size>5368709120</mark_cache_size>
        <timezone>UTC</timezone>
        <umask>022</umask>
        <mlock_executable>false</mlock_executable>
        <remote_servers incl="clickhouse_remote_servers" optional="true" />
        <zookeeper incl="zookeeper-servers" optional="true" />
        <macros incl="macros" optional="true" />
        <builtin_dictionaries_reload_interval>3600</builtin_dictionaries_reload_interval>
        <max_session_timeout>3600</max_session_timeout>
        <default_session_timeout>60</default_session_timeout>
        <disable_internal_dns_cache>1</disable_internal_dns_cache>

        <query_log>
            <database>system</database>
            <table>query_log</table>
            <partition_by>toYYYYMM(event_date)</partition_by>
            <flush_interval_milliseconds>7500</flush_interval_milliseconds>
        </query_log>

        <query_thread_log>
            <database>system</database>
            <table>query_thread_log</table>
            <partition_by>toYYYYMM(event_date)</partition_by>
            <flush_interval_milliseconds>7500</flush_interval_milliseconds>
        </query_thread_log>

        <distributed_ddl>
            <path>/clickhouse/task_queue/ddl</path>
        </distributed_ddl>
        <logger>
            <level>trace</level>
            <log>/var/log/clickhouse-server/clickhouse-server.log</log>
            <errorlog>/var/log/clickhouse-server/clickhouse-server.err.log</errorlog>
            <size>1000M</size>
            <count>10</count>
        </logger>
    </yandex>
---
# Source: explorer/charts/clickhouse/templates/configmap-metrika.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-clickhouse-metrica
  labels:
    app.kubernetes.io/name: clickhouse-metrica
    app.kubernetes.io/instance: release-name-metrica
    app.kubernetes.io/managed-by: Helm
data:
  metrica.xml: |-
    <?xml version="1.0"?>
    <yandex>
        <clickhouse_remote_servers>
            <release-name-clickhouse>
                <shard>
                    <replica>
                        <internal_replication>true</internal_replication>
                        <host>release-name-clickhouse-0.release-name-clickhouse-headless.default.svc.cluster.local</host>
                        <port>9000</port>
                        <user>default</user>
                        <compression>true</compression>
                    </replica>
                </shard>
            </release-name-clickhouse>
        </clickhouse_remote_servers>

        <macros>
            <replica from_env="HOSTNAME"></replica>
            <shard from_env="SHARD"></shard>
        </macros>
    </yandex>
---
# Source: explorer/charts/clickhouse/templates/configmap-users.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-clickhouse-users
  labels:
    app.kubernetes.io/name: clickhouse-users
    app.kubernetes.io/instance: release-name-users
    app.kubernetes.io/managed-by: Helm
data:
  users.xml: |-
    <?xml version="1.0"?>
    <yandex>
        <users>
            <default>
                <networks incl="networks" replace="replace">
                    <ip>::/0</ip>
                </networks>
                <password>clickhouse</password>
                <profile>default</profile>
                <quota>default</quota>
            </default>
        </users>
    </yandex>
---
# Source: explorer/charts/omnirpc/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: explorer-omnirpc-release-name
  labels:
    app: explorer-omnirpc
    chart: "omnirpc"
    release: release-name
    heritage: Helm
data:
  config.yml: |-
    client_type: resty
    chains:
      1:
        rpcs:
          - https://eth.llamarpc.com
        confirmations: 1
---
# Source: explorer/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-explorer-release-name
  labels:
    app: release-name-explorer
    chart: "explorer"
    release: release-name
    heritage: Helm
data:
  config.yaml: |-
    # Production config example
    refresh_rate: 1
    scribe_url: https://scribe.interoperability.institute/graphql
    rpc_url: https://rpc.interoperability.institute/confirmations/1/rpc/
    http_port: 5080
    db_address: tcp://default:clickhouse@default-clickhouse:9000
    bridge_config_address: 0x5217c83ca75559B1f8a8803824E5b7ac233A12a1
    bridge_config_chain_id: 1
    chains:
      1:
        chain_id: 1
        avg_block_time: 13
        get_logs_range: 256
        get_logs_batch_amount: 1
        fetch_block_increment: 1000
        max_goroutines: 10
        contracts:
          bridge: 0x2796317b0fF8538F253012862c06787Adfb8cEb6
---
# Source: explorer/charts/clickhouse/templates/svc-clickhouse-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-clickhouse-headless
  labels:
    app.kubernetes.io/name: clickhouse-headless
    app.kubernetes.io/instance: release-name-headless
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: "None"
  ports:
  - port: 9000
    targetPort: tcp-port
    protocol: TCP
    name: tcp-port
  - port: 8123
    targetPort: http-port
    protocol: TCP
    name: http-port
  - port: 9009
    targetPort: inter-http-port
    protocol: TCP
    name: inter-http-port
  selector:
    app.kubernetes.io/name: clickhouse
    app.kubernetes.io/instance: release-name
---
# Source: explorer/charts/clickhouse/templates/svc-clickhouse.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-clickhouse
  labels:
    app.kubernetes.io/name: clickhouse
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - port: 9000
    targetPort: tcp-port
    protocol: TCP
    name: tcp-port
  - port: 8123
    targetPort: http-port
    protocol: TCP
    name: http-port
  - port: 9009
    targetPort: inter-http-port
    protocol: TCP
    name: inter-http-port
  selector:
    app.kubernetes.io/name: clickhouse
    app.kubernetes.io/instance: release-name
---
# Source: explorer/charts/omnirpc/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: explorer-omnirpc
  labels:
    helm.sh/chart: omnirpc-0.2.92
    app.kubernetes.io/name: omnirpc
    app.kubernetes.io/instance: release-name
    
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 5080
    - name: prometheus
      port: 8080
      targetPort: 8080
  selector:
    app.kubernetes.io/name: omnirpc
    app.kubernetes.io/instance: release-name
---
# Source: explorer/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-explorer
  labels:
    helm.sh/chart: explorer-0.2.16
    app.kubernetes.io/name: explorer
    app.kubernetes.io/instance: release-name
    
    app.kubernetes.io/version: "1.17.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 5080
  selector:
    app.kubernetes.io/name: explorer
    app.kubernetes.io/instance: release-name
    explorer-type: server
---
# Source: explorer/charts/omnirpc/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: explorer-omnirpc
  labels:
    helm.sh/chart: omnirpc-0.2.92
    app.kubernetes.io/name: omnirpc
    app.kubernetes.io/instance: release-name
    
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: omnirpc
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/config: 36aba3b6ca754ff6059024c371e79dd4e2601602791733b64b94cf117cdc496d
      labels:
        app.kubernetes.io/name: omnirpc
        app.kubernetes.io/instance: release-name
        
    spec:
      serviceAccountName: explorer-omnirpc
      securityContext:
        {}
      initContainers:
        - name: copy-release-name-config
          image: busybox
          command: ['sh', '-c', 'cp /configmap/* /config/']
          volumeMounts:
            - name: configmap
              mountPath: /configmap
            - name: release-name-config
              mountPath: /config
      containers:
        - name: omnirpc
          securityContext:
            {}
          image: "ghcr.io/synapsecns/sanguine/omnirpc:latest"
          imagePullPolicy: Always
          args:
            - server
            - --port=5080
            - --config=/config/config.yml
          env:
            - name: GOLOG_LOG_FMT
              value: json
          ports:
            - containerPort: 5080
              name: http
            - containerPort: 8080
              name: prometheus
          livenessProbe:
            httpGet:
              path: /health-check
              port: http
          readinessProbe:
            httpGet:
              path: /health-check
              port: http
          resources:
            {}
          volumeMounts:
            - name: configmap
              mountPath: /config
      volumes:
        - name: release-name-config
          emptyDir: {}
        - name: configmap
          configMap:
            name: explorer-omnirpc-release-name
---
# Source: explorer/templates/server_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-explorer-server
  labels:
    helm.sh/chart: explorer-0.2.16
    app.kubernetes.io/name: explorer
    app.kubernetes.io/instance: release-name
    
    app.kubernetes.io/version: "1.17.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: explorer
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/config: 01c065a3d7e5e25a5f168787854f292d3c87d17a7e9230ae7a50c5da548785c8
      labels:
        app.kubernetes.io/name: explorer
        app.kubernetes.io/instance: release-name
        
        explorer-type: server
    spec:
      serviceAccountName: release-name-explorer
      securityContext:
        {}
      initContainers:
        - name: copy-release-name-config
          image: busybox
          command: ['sh', '-c', 'cp -v /configmap/* /config/']
          volumeMounts:
            - name: configmap
              mountPath: /configmap
            - name: release-name-config
              mountPath: /config
        - command:
          - sh
          - -c
          - until nc -vz ${POD_NAME}.${POD_NAMESPACE} 80; do echo "Waiting for omnirpc...";
            sleep 1; done;
          env:
          - name: POD_NAME
            value: explorer-omnirpc
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: busybox:latest
          imagePullPolicy: IfNotPresent
          name: wait-for-omnirpc
        - command:
          - sh
          - -c
          - until nc -vz ${POD_NAMESPACE}-clickhouse 9000; do echo "Waiting for clickhouse...";
            sleep 1; done;
          env:
          - name: POD_NAME
            value: explorer-clickhouse
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: busybox:latest
          imagePullPolicy: IfNotPresent
          name: wait-for-clickhouse
      containers:
        - name: explorer
          securityContext:
            {}
          image: "ghcr.io/synapsecns/sanguine/explorer:latest"
          imagePullPolicy: Always
          args:
            - server
            - --config=/config/config.yaml
          ports:
            - containerPort: 5080
              name: http
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: GOLOG_LOG_FMT
              value: json
          livenessProbe:
            initialDelaySeconds: 20
            failureThreshold: 5
            timeoutSeconds: 1
            httpGet:
              path: /health-check
              port: http
          readinessProbe:
            failureThreshold: 5
            initialDelaySeconds: 20
            timeoutSeconds: 1
            httpGet:
              path: /health-check
              port: http
          volumeMounts:
            - name: configmap
              mountPath: /config
          resources:
            {}
      volumes:
        - name: release-name-config
          emptyDir: {}
        - name: configmap
          configMap:
            name: release-name-explorer-release-name
---
# Source: explorer/charts/clickhouse/templates/statefulset-clickhouse.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-clickhouse
  labels:
    app.kubernetes.io/name: clickhouse
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  serviceName: release-name-clickhouse-headless
  selector:
    matchLabels:
      app.kubernetes.io/name: clickhouse
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/config: 5e93f58a6df576358ece784457b3476168cb3a937add3ac81bfc690a16d8aae1
      labels:
        app.kubernetes.io/name: clickhouse
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
      - name: init
        image: busybox:1.31.0
        imagePullPolicy: IfNotPresent
        args:
        - /bin/sh
        - -c
        - |
          mkdir -p /etc/clickhouse-server/metrica.d
      containers:
      - name: release-name-clickhouse
        image: yandex/clickhouse-server:latest
        imagePullPolicy: IfNotPresent
        command:
          - /bin/bash
          - -c
          - export SHARD=${HOSTNAME##*-} && /entrypoint.sh
        ports:
        - name: http-port
          containerPort: 8123
        - name: tcp-port
          containerPort: 9000
        - name: inter-http-port
          containerPort: 9009
        livenessProbe:
          tcpSocket:
            port: 9000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          tcpSocket:
            port: 9000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        volumeMounts:
        - name: release-name-clickhouse-data
          mountPath: /var/lib/clickhouse
        - name: release-name-clickhouse-logs
          mountPath: /var/log/clickhouse-server
        - name: release-name-clickhouse-config
          mountPath: /etc/clickhouse-server/config.d
        - name: release-name-clickhouse-metrica
          mountPath: /etc/clickhouse-server/metrica.d
        - name: release-name-clickhouse-users
          mountPath: /etc/clickhouse-server/users.d
      volumes:
      - name: release-name-clickhouse-data
        persistentVolumeClaim:
          claimName: release-name-clickhouse-data
      - name: release-name-clickhouse-logs
        emptyDir: {}
      - name: release-name-clickhouse-config
        configMap:
          name: release-name-clickhouse-config
          items:
          - key: config.xml
            path: config.xml
      - name: release-name-clickhouse-metrica
        configMap:
          name: release-name-clickhouse-metrica
          items:
          - key: metrica.xml
            path: metrica.xml
      - name: release-name-clickhouse-users
        configMap:
          name: release-name-clickhouse-users
          items:
          - key: users.xml
            path: users.xml
  volumeClaimTemplates:
  - metadata:
      name: release-name-clickhouse-data
      labels:
        app.kubernetes.io/name: clickhouse-data
        app.kubernetes.io/instance: release-name-data
        app.kubernetes.io/managed-by: Helm
    spec:
      accessModes:
      - "ReadWriteOnce"
      resources:
        requests:
          storage: "30Gi"
---
# Source: explorer/charts/omnirpc/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "explorer-omnirpc-test-connection"
  labels:
    helm.sh/chart: omnirpc-0.2.92
    app.kubernetes.io/name: omnirpc
    app.kubernetes.io/instance: release-name
    
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['explorer-omnirpc:80/health-check']
  restartPolicy: Never
---
# Source: explorer/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-explorer-test-connection"
  labels:
    helm.sh/chart: explorer-0.2.16
    app.kubernetes.io/name: explorer
    app.kubernetes.io/instance: release-name
    
    app.kubernetes.io/version: "1.17.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-explorer:80/health-check']
  restartPolicy: Never
