---
# Source: ctlog/templates/createctconfig-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-ctlog-createctconfig
  namespace: default
  labels:
    helm.sh/chart: ctlog-0.2.52
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.6.17"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
---
# Source: ctlog/templates/createtree-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-ctlog-createtree
  namespace: default
  labels:
    helm.sh/chart: ctlog-0.2.52
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.6.17"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
---
# Source: ctlog/templates/ctlog-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-ctlog
  namespace: default
  labels:
    helm.sh/chart: ctlog-0.2.52
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.6.17"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
---
# Source: ctlog/templates/ctlog-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-ctlog-config
  namespace: default
  labels:
    helm.sh/chart: ctlog-0.2.52
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.6.17"
    app.kubernetes.io/managed-by: Helm
data:
  __placeholder: |
    ###################################################################
    # Just a placeholder so that reapplying this won't overwrite treeID
    # if it already exists. This caused grief, do not remove.
    ###################################################################
---
# Source: ctlog/templates/cm-operator-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-ctlog-cm-operator
  namespace: default
  labels:
    helm.sh/chart: ctlog-0.2.52
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.6.17"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["configmaps"]
    resourceNames: ["release-name-ctlog-config"]
    verbs: ["get", "update"]
---
# Source: ctlog/templates/secret-operator-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-ctlog-secret-operator
  namespace: default
  labels:
    helm.sh/chart: ctlog-0.2.52
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.6.17"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["configmaps"]
    resourceNames: ["release-name-ctlog-config"]
    verbs: ["get", "update"]
  - apiGroups: [""] # "" indicates the core API group
    resources: ["secrets"]
    verbs: ["create", "get", "update"]
---
# Source: ctlog/templates/cm-operator-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-ctlog-cm-operator
  namespace: default
  labels:
    helm.sh/chart: ctlog-0.2.52
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.6.17"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-ctlog-cm-operator
subjects:
  - kind: ServiceAccount
    name: release-name-ctlog-createtree
    namespace: default
---
# Source: ctlog/templates/secret-operator-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-ctlog-secret-operator
  namespace: default
  labels:
    helm.sh/chart: ctlog-0.2.52
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.6.17"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-ctlog-secret-operator
subjects:
  - kind: ServiceAccount
    name: release-name-ctlog-createctconfig
    namespace: default
---
# Source: ctlog/templates/ctlog-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
  labels:
    helm.sh/chart: ctlog-0.2.52
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.6.17"
    app.kubernetes.io/managed-by: Helm
  name: release-name-ctlog
  namespace: default
spec:
  ports:
    - name: 6962-tcp
      port: 80
      protocol: TCP
      targetPort: 6962
    - name: 6963-tcp
      port: 6963
      protocol: TCP
      targetPort: 6963
  selector:
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: release-name
  type: "ClusterIP"
---
# Source: ctlog/templates/ctlog-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-ctlog
  namespace: default
  labels:
    helm.sh/chart: ctlog-0.2.52
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.6.17"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ctlog
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/config: 63e212579d5682d41529ae5a5d994db2178880a017113b7a2c500f5dab74b2ea
        prometheus.io/path: /metrics
        prometheus.io/port: "6963"
        prometheus.io/scrape: "true"
      labels:
        helm.sh/chart: ctlog-0.2.52
        app.kubernetes.io/name: ctlog
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "0.6.17"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: release-name-ctlog
      containers:
        - name: release-name-ctlog
          image: "ghcr.io/sigstore/scaffolding/ct_server@sha256:e16f0a2be43a317a4c392cca24eec8c8fef06b0e836bc3545979ac0335fcf6f5"
          imagePullPolicy: "IfNotPresent"
          args:
            - "--http_endpoint=0.0.0.0:6962"
            - "--metrics_endpoint=0.0.0.0:6963"
            - "--log_config=/ctfe-keys/config"
            - "--alsologtostderr"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 6962
            initialDelaySeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: 6962
            initialDelaySeconds: 10
          volumeMounts:
            - name: keys
              mountPath: "/ctfe-keys"
              readOnly: true
          ports:            
            - containerPort: 6962
              protocol: TCP
            - containerPort: 6963
              protocol: TCP
      securityContext:
        runAsNonRoot: true
        runAsUser: 65533
      volumes:
        - name: keys
          secret:
            secretName: release-name-ctlog-secret
---
# Source: ctlog/templates/createctconfig-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-ctlog-createctconfig
  namespace: default
  labels:
    helm.sh/chart: ctlog-0.2.52
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.6.17"
    app.kubernetes.io/managed-by: Helm
spec:
  ttlSecondsAfterFinished: 3600
  backoffLimit: 6
  template:
    spec:
      serviceAccountName: release-name-ctlog-createctconfig
      restartPolicy: Never
      automountServiceAccountToken: true
      initContainers:
        - name: "wait-for-createtree-configmap"
          image: "docker.io/curlimages/curl@sha256:4bfa3e2c0164fb103fb9bfd4dc956facce32b6c5d47cc09fcec883ce9535d5ac"
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c", "until curl --fail --header \"Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\" --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt --max-time 10 https://kubernetes.default.svc/api/v1/namespaces/$(NAMESPACE)/configmaps/release-name-ctlog-config | grep '\"treeID\":'; do echo waiting for Configmap release-name-ctlog-config; sleep 5; done;"]
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      containers:
        - name: release-name-ctlog-createctconfig
          image: "ghcr.io/sigstore/scaffolding/createctconfig@sha256:a891233c7f54a11025a4cac6119ba4aeea4f643c2012ff30e921aeca8a32d6db"
          imagePullPolicy: "IfNotPresent"
          args: [
            "--configmap=release-name-ctlog-config",
            "--secret=release-name-ctlog-secret",
            "--pubkeysecret=ctlog-public-key",
            "--fulcio-url=http://fulcio-server.fulcio-system.svc",
            "--trillian-server=trillian-logserver.trillian-system:8091",
            "--log-prefix=sigstorescaffolding"
          ]
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      securityContext:
        runAsNonRoot: true
        runAsUser: 65533
---
# Source: ctlog/templates/createtree-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-ctlog-createtree
  namespace: default
  labels:
    helm.sh/chart: ctlog-0.2.52
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.6.17"
    app.kubernetes.io/managed-by: Helm
spec:
  ttlSecondsAfterFinished: 3600
  template:
    spec:
      serviceAccountName: release-name-ctlog-createtree
      restartPolicy: Never
      automountServiceAccountToken: true
      containers:
        - name: release-name-ctlog-createtree
          image: "ghcr.io/sigstore/scaffolding/createtree@sha256:eb1a94738f34964c7456d18d30b8a45a654af89bb5371f69b2403df373be0826"
          imagePullPolicy: "IfNotPresent"
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          args: [
            "--namespace=$(NAMESPACE)",
            "--configmap=release-name-ctlog-config",
            "--display_name=ctlog-tree",
            "--admin_server=trillian-logserver.trillian-system:8091"
          ]
      securityContext:
        runAsNonRoot: true
        runAsUser: 65533
