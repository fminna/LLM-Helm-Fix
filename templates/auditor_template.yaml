---
# Source: auditor/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-auditor
  namespace: default
  labels:
    helm.sh/chart: auditor-v2023.10.1
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: auditor/templates/apiregistration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-auditor-apiserver-cert
  namespace: default
  labels:
    helm.sh/chart: auditor-v2023.10.1
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaRENDQWt5Z0F3SUJBZ0lSQU5jd2I3b0xILzlERWd1ekdNYmg5VjR3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05URTFNRGN5T1RRd1doY05NelF3TlRFek1EY3lPVFF3V2pBZgpNUjB3R3dZRFZRUURFeFJ5Wld4bFlYTmxMVzVoYldVdFlYVmthWFJ2Y2pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCCkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU40aHhZbXV4T0d2UEs2c1lENHo3aU9YRk11dmRydHh0a1RVa2ZFdSs0VmQKcUpXV2QrSytRUCsrUVhGWDM0Z2RpRSt6amkvQzBPNDVzWHV4L3BxVUQrRU44Q29rTm03R05BdGtlRDZ5TWl0QQo0SFN0SkJ2OStKT3dndmlPbWZRd0FlaE5kc1lNbkFsVlZ6Z1dqMURpTFByYTYyR2pKczFXT2FjUHB5STUzYktGCkFHVXFYRjM4c2JwQUtUZUhvWXp2a0Z5U2dFSHlFVE5QSnFzTS8zZkIwZ0l4L2M5RjZPRWU2T0N0TSsvSE1QWUQKR3Vua0NPam1KMHF0QTBmeHR3OFpKYlRkV0V6UFhIK3BuYzBLWUdIK1d5MXpwRFdQdEwzSGRQaWFYc0pETEF6bwpDanlMZmpGbmdWa1dpMVJXdjR4NFVQQ0lZWExWbjJaUk5oUjJtSnhpU2E4Q0F3RUFBYU9CckRDQnFUQU9CZ05WCkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWQKRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVUVOQUxuVU8vUUdRanFCdS9EemZBelhmQjlTQXdTUVlEVlIwUgpCRUl3UUlJY2NtVnNaV0Z6WlMxdVlXMWxMV0YxWkdsMGIzSXVaR1ZtWVhWc2RJSWdjbVZzWldGelpTMXVZVzFsCkxXRjFaR2wwYjNJdVpHVm1ZWFZzZEM1emRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSkR5aC9FaldvT0wKMkVqQ0lDQzlhaDVncThRMDVPbFp3aGt2azdhWk9SS3NNQ2FIbmljUTZtWnZIL0tKbkxZYlNNUEhidnhROEFZbwpnbWlaaHQ4YUk3akdwS05jWi9MMmYzWk9iVE5lU2c4R2g4WE0wQlorTWZ5N3EzTzV3VkJrTHpXUTFUYnU2YXFqCkFwRHc4RGwwbEk3emZrOGpZUTZSRHQxVFF3Z3FKWGIrb3ZNYURuUlVUZ1NpQkxmNWpEKzc1SzBDb0NPbjFwV3UKMnFhTk5NczBRQmlMR3Q5bUNXSHlIdzZ6TGw2aVJOOTM2UHRtejFxckxhdXpDbkF5dnl3M3JhU2I3RndQeTlBZworYURLcjlHNzdFZ1RUc2t5cFFyOFFiVkFYdnZwQ3d5U01CVzdxM3RyS1BVbjR4NTFOU04wR3g4cVlEVGZjVXNiCjJZak1vajN0a01FPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBM2lIRmlhN0U0YTg4cnF4Z1BqUHVJNWNVeTY5MnUzRzJSTlNSOFM3N2hWMm9sWlozCjRyNUEvNzVCY1ZmZmlCMklUN09PTDhMUTdqbXhlN0grbXBRUDRRM3dLaVEyYnNZMEMyUjRQckl5SzBEZ2RLMGsKRy8zNGs3Q0MrSTZaOURBQjZFMTJ4Z3ljQ1ZWWE9CYVBVT0lzK3RycllhTW16Vlk1cHcrbklqbmRzb1VBWlNwYwpYZnl4dWtBcE40ZWhqTytRWEpLQVFmSVJNMDhtcXd6L2Q4SFNBakg5ejBYbzRSN280SzB6NzhjdzlnTWE2ZVFJCjZPWW5TcTBEUi9HM0R4a2x0TjFZVE05Y2Y2bWR6UXBnWWY1YkxYT2tOWSswdmNkMCtKcGV3a01zRE9nS1BJdCsKTVdlQldSYUxWRmEvakhoUThJaGhjdFdmWmxFMkZIYVluR0pKcndJREFRQUJBb0lCQUY0ZEl1dkZ6NGJyVHlPVwp4eVF6cm1jSDRQaTN1KytKS3plWWRNa2lKZEVJc0ovSVk3eis3TjB1UjkzMDVERndpY3R6QVFBOVkzWTduWFlTCklSUnZQUmNXWjdZREo4amhVeldzZU1IZmtDQUJXZGcxYjRJb3BjUTFXaGhqbXRqNTZpVDVoU1ErUFhJNjVUeFAKV3FOallMbGNQYlJkZ3RnbSswQk1BbjBlMVU2SC96Mm5iZklZdVRmcTh0QjF0WlNCdTIzWXBlYmQ1NDZJN0F1NApLc1VsVWlBZU42Y1hxRzZWdGxmYXpCYmtQdGNweDBzbXo5NkJsK2ErTVFHU3FVaVpSekIvNmRKVGhqSFplakRBCjZNaEdzV1JoemlKQ0IwS1pjNUluNm82WVFEckNXWnIzTUg2ZGNYak5TQWM4NXFSdXE2OUl2Y25WKzZ5VVJIaWMKalc4eU0xRUNnWUVBNVlCZWRxNE1mTS91WnY1VUJiWHExVk1FVnRmelZFMm9IN0FYSnlXd1N1dTdrYm81Vy9wOQp1UHh2TkxDUG1FTGp3aGxzSDFzZCsvZGs4TklCa0FTRUdvRldjdmZWbVQ0U1JLak1vN0FBN21QZ1FvVkJDQUpGCmpJR2lqbVh0ZjR6TUpmbGFZWW9uelh5SXJhOEU2RlNNbGEvUGVJWnk0ZkxiWjczMzVaVlV0RGNDZ1lFQTk4ZVMKemRjd2FLL0JUTEtlWEtOQnc4cGtLejUyUm1jc2d4MnludHg5aUZRT01CR3pEM0tudml3Tld1YlJHSDlwMFliaQowQ2tCOW9mcVRWYk9nSnR0QVUwdkgxdVZOK3JVSzEwK3NPUjdMdHZiTnoyK1RQUWxYcDRDS1RJaEUrZzRaUzFKCnU3RmRBR2pRV1lpZXF5VlNjaGlNZGl2VDVYeUlaR2Z5aGtKMVNra0NnWUVBMUR2WUg2eHBBK3RPTHBTM291aE8KbUtSQytRU1BrOENVMzJqNm9Fc3NNcnk1SXRTeVFxcnRKT3JjOUQ3ckxBVi9sbm5vRVQ4MEJWVU5WZDcvYnUyZQpOTnl5MDNMNVp0T09GVXg4b2tzYk1WblBnL1N5NVBNazJnRHdFUHVWbkVUYWJhdWd0MThKMis5MGZobkNVaEFPClNrYmhlRFh0ZTZJWTRHRS9KR0xxaUJVQ2dZRUFqRGVOTlIwa2tPbDg2d2xkb3JEa2c0YmlIckt2UGZJZTkyZnoKOEFCNHJaQmJvd294R1huWndUMnVwUlZmbUl4cDlwOXRkVHp2bG5LZHZmeDB5Y1NxOEFTY3VSTWJvMVFwa3d5bQpjSFlyMjMyaFZXYUViWW53SjlZbEJPa1FYUEthRDIrTWZVSEdqbmZDQ0JqUEthenFOaFQ4VDlkSGgyTnN6OTBmCkdxazdOTGtDZ1lCaXVvcG8rUUhPQkRoVGg0ZXpBem9XaXlKMElZcVJ1Y25XMXJISEtsTDZobXR2MEJJUHk1MDUKb2dzVVN2aHR5aSszRkNXZ0drcnhheTdXSUg4dG9PYXR2SVo3M2F1NW9UejFnL1ZPMEo4VDZ3Q1RuYWhDcW9LagpWT1hUeVdQU2Q2R3dWOS92bmFZNHAvaU8rRE1vTjF1VUp1c3lWcW9qM1hPeHk2Q2VROUl1V1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: auditor/templates/policy-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-auditor-policy
  namespace: default
  labels:
    helm.sh/chart: auditor-v2023.10.1
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  "default.yaml": YXBpVmVyc2lvbjogYXVkaXRvci5rdWJlb3BzLnRvb2xzL3YxYWxwaGExCmtpbmQ6IEF1ZGl0UmVnaXN0cmF0aW9uCnJlc291cmNlczoKLSBncm91cDogYXBwcwogIHJlc291cmNlczoKICAtIGRlcGxveW1lbnRzCi0gZ3JvdXA6ICIiCiAgcmVzb3VyY2VzOgogIC0gcG9kcwogIC0gbmFtZXNwYWNlcwogIC0gc2VjcmV0cwotIGdyb3VwOiBhcHBjYXRhbG9nLmFwcHNjb2RlLmNvbQogIHJlc291cmNlczoKICAtIGFwcGJpbmRpbmdzCi0gZ3JvdXA6IGNhdGFsb2cua3ViZWRiLmNvbQogIHJlc291cmNlczoKICAtIGV0Y2R2ZXJzaW9ucwogIC0gbXlzcWx2ZXJzaW9ucwogIC0gcmVkaXN2ZXJzaW9ucwogIC0gbW9uZ29kYnZlcnNpb25zCiAgLSBwb3N0Z3Jlc3ZlcnNpb25zCiAgLSBtZW1jYWNoZWR2ZXJzaW9ucwogIC0gZWxhc3RpY3NlYXJjaHZlcnNpb25zCi0gZ3JvdXA6IGNsb3VkLmJ5dGVidWlsZGVycy5kZXYKICByZXNvdXJjZXM6CiAgLSBjcmVkZW50aWFscwogIC0gbWFjaGluZXR5cGVzCiAgLSBjbG91ZHByb3ZpZGVycwogIC0gY2x1c3RlcmluZm9zCiAgLSBjbHVzdGVydXNlcmF1dGhzCiAgLSBjbHVzdGVyYXV0aGluZm90ZW1wbGF0ZXMKLSBncm91cDoga3ViZWRiLmNvbQogIHJlc291cmNlczoKICAtIGV0Y2RzCiAgLSBteXNxbHMKICAtIHJlZGlzZXMKICAtIG1vbmdvZGJzCiAgLSBzbmFwc2hvdHMKICAtIG1lbWNhY2hlZHMKICAtIHBvc3RncmVzZXMKICAtIGVsYXN0aWNzZWFyY2hlcwogIC0gZG9ybWFudGRhdGFiYXNlcwotIGdyb3VwOiBrdWJlcGFjay5jb20KICByZXNvdXJjZXM6CiAgLSBwbGFucwogIC0gcHJvZHVjdHMKLSBncm91cDogbW9uaXRvcmluZy5hcHBzY29kZS5jb20KICByZXNvdXJjZXM6CiAgLSBpbmNpZGVudHMKICAtIHBvZGFsZXJ0cwogIC0gbm9kZWFsZXJ0cwogIC0gY2x1c3RlcmFsZXJ0cwogIC0gc2VhcmNobGlnaHRwbHVnaW5zCi0gZ3JvdXA6IHN0YXNoLmFwcHNjb2RlLmNvbQogIHJlc291cmNlczoKICAtIHRhc2tzCiAgLSByZXN0aWNzCiAgLSBmdW5jdGlvbnMKICAtIHJlY292ZXJpZXMKICAtIHJlcG9zaXRvcmllcwogIC0gYmFja3VwYmF0Y2hlcwogIC0gYmFja3Vwc2Vzc2lvbnMKICAtIHJlc3RvcmVzZXNzaW9ucwogIC0gYmFja3VwYmx1ZXByaW50cwogIC0gYmFja3VwY29uZmlndXJhdGlvbnMKLSBncm91cDogdm95YWdlci5hcHBzY29kZS5jb20KICByZXNvdXJjZXM6CiAgLSBpbmdyZXNzZXMKICAtIGNlcnRpZmljYXRlcw==
---
# Source: auditor/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-auditor
  labels:
    helm.sh/chart: auditor-v2023.10.1
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - "*"
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: auditor/templates/apiregistration.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-auditor-apiserver-auth-delegator
  labels:
    helm.sh/chart: auditor-v2023.10.1
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: release-name-auditor
  namespace: default
---
# Source: auditor/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-auditor
  labels:
    helm.sh/chart: auditor-v2023.10.1
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-auditor
subjects:
- kind: ServiceAccount
  name: release-name-auditor
  namespace: default
---
# Source: auditor/templates/license-checker-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-auditor-license-checker
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-checker
subjects:
- kind: ServiceAccount
  name: release-name-auditor
  namespace: default
---
# Source: auditor/templates/license-reader-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-auditor-license-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-reader
subjects:
- kind: ServiceAccount
  name: release-name-auditor
  namespace: default
---
# Source: auditor/templates/apiregistration.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-auditor-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    helm.sh/chart: auditor-v2023.10.1
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: release-name-auditor
  namespace: default
---
# Source: auditor/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-auditor
  namespace: default
  labels:
    helm.sh/chart: auditor-v2023.10.1
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  # Port used to expose admission webhook apiserver
  - name: api
    port: 443
    targetPort: 8443
  selector:
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: release-name
---
# Source: auditor/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-auditor
  namespace: default
  labels:
    helm.sh/chart: auditor-v2023.10.1
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: auditor
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: auditor
        app.kubernetes.io/instance: release-name
      annotations:
        checksum/apiregistration.yaml: a299ed0c6614f598ba40e5038bf58edc651a0bd9d60960df45e1aa6a847e7a7d
    spec:
      
      serviceAccountName: release-name-auditor
      containers:
      - name: operator
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        image: ghcr.io/appscode/auditor:v0.0.1
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --use-kubeapiserver-fqdn-for-aks=true
        - --policy-file=/var/policy/default.yaml
        ports:
        - containerPort: 8443
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          {}
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
        - name: policy-file
          mountPath: /var/policy
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: release-name-auditor-apiserver-cert
      - name: policy-file
        secret:
          defaultMode: 420
          secretName: release-name-auditor-policy
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
---
# Source: auditor/templates/license.yaml
# if license file is provided, then create a secret for license
---
# Source: auditor/templates/license-checker-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-checker
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get"]
# Issue license
- apiGroups:
  - proxyserver.licenses.appscode.com
  resources:
  - licenserequests
  verbs: ["create"]
# Detect workload/owner of operator pod
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["get"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get"]
# Write events in case of license verification failure
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "create", "patch"]
---
# Source: auditor/templates/license-reader-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-reader
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Detect license server endpoint for kubedb addons
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get"]
- nonResourceURLs:
  - /appscode/license
  verbs: ["get"]
