---
# Source: spark-rss/templates/securitypolicy.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: release-name-spark-rss
  labels:
    app: spark-rss
    chart: spark-rss-0.0.6
    release: "release-name"
    heritage: "Helm"
spec:
  privileged: false
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  volumes:
  - "hostPath"
  - "secret"
---
# Source: spark-rss/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-spark-rss
  labels:
    app: spark-rss
    chart: spark-rss-0.0.6
    heritage: Helm
    release: release-name
---
# Source: spark-rss/templates/configmap.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  labels:
    app: spark-rss
    chart: spark-rss-0.0.6
    heritage: Helm
    release: release-name
  name: release-name-spark-rss
  namespace: "default"
data:
  resource-staging-server.properties: |-
    spark.kubernetes.resourceStagingServer.port=10000
    spark.ssl.kubernetes.resourceStagingServer.enabled=false
---
# Source: spark-rss/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-spark-rss
  labels:
    app: spark-rss
    chart: spark-rss-0.0.6
    release: "release-name"
    heritage: "Helm"
rules:
- apiGroups:
  - extensions
  resourceNames:
  - spark-shuffle-service-pod-security-policy
  resources:
  - podsecuritypolicies
  verbs:
  - use
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
---
# Source: spark-rss/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: release-name-spark-rss
  labels:
    app: spark-rss
    chart: spark-rss-0.0.6
    release: "release-name"
    heritage: "Helm"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-spark-rss
subjects:
- kind: ServiceAccount
  name: release-name-spark-rss
---
# Source: spark-rss/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: release-name-spark-rss
  labels:
    app: spark-rss
    chart: spark-rss-0.0.6
    release: release-name
    heritage: Helm
spec:
  type: ClusterIP
  ports:
  - port: 10000
    targetPort: 10000
    protocol: TCP
    name: release-name-spark-rss
  selector:
    app: spark-rss
    release: release-name
---
# Source: spark-rss/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-spark-rss
  labels:
    app: release-name-spark-rss
    chart: spark-rss-0.0.6
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spark-rss
      release: release-name
  template:
    metadata:
      labels:
        app: spark-rss
        release: release-name

    spec:
      containers:
      - name: spark-rss
        image: "banzaicloud/spark-resource-staging-server:v2.2.1-k8s-1.0.35"
        imagePullPolicy: IfNotPresent
        args:
        - /etc/spark-resource-staging-server/resource-staging-server.properties

        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File

        resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 512Mi
        volumeMounts:
        - mountPath: /etc/spark-resource-staging-server
          name: resource-staging-server-properties

      volumes:
      - configMap:
          name: release-name-spark-rss
        name: resource-staging-server-properties
