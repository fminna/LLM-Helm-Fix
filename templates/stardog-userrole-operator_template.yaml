---
# Source: stardog-userrole-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-stardog-userrole-operator
  labels:
    app.kubernetes.io/name: stardog-userrole-operator
    helm.sh/chart: stardog-userrole-operator-0.3.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "0.3.0"
---
# Source: stardog-userrole-operator/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-stardog-userrole-operator-manager
  labels:
    app.kubernetes.io/name: stardog-userrole-operator
    helm.sh/chart: stardog-userrole-operator-0.3.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "0.3.0"
rules:
  - apiGroups:
      - stardog.vshn.ch
    resources:
      - databases
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - stardog.vshn.ch
    resources:
      - databases/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - stardog.vshn.ch
    resources:
      - organizations
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - stardog.vshn.ch
    resources:
      - organizations/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - stardog.vshn.ch
    resources:
      - stardoginstances
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - stardog.vshn.ch
    resources:
      - stardoginstances/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - stardog.vshn.ch
    resources:
      - stardogroles
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - stardog.vshn.ch
    resources:
      - stardogroles/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - stardog.vshn.ch
    resources:
      - stardogusers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - stardog.vshn.ch
    resources:
      - stardogusers/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
---
# Source: stardog-userrole-operator/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-stardog-userrole-operator-metrics-reader
  labels:
    app.kubernetes.io/name: stardog-userrole-operator
    helm.sh/chart: stardog-userrole-operator-0.3.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "0.3.0"
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
# Source: stardog-userrole-operator/templates/clusterrolebinding.yaml
# enabled by default by can be disabled
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-stardog-userrole-operator-manager
  labels:
    app.kubernetes.io/name: stardog-userrole-operator
    helm.sh/chart: stardog-userrole-operator-0.3.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "0.3.0"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-stardog-userrole-operator-manager
subjects:
  - kind: ServiceAccount
    name: release-name-stardog-userrole-operator
    namespace: default
---
# Source: stardog-userrole-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-stardog-userrole-operator-metrics
  labels:
    app.kubernetes.io/name: stardog-userrole-operator
    helm.sh/chart: stardog-userrole-operator-0.3.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "0.3.0"
spec:
  type: ClusterIP
  ports:
    - name: metrics
      port: 8080
      targetPort: metrics
  selector:
    app.kubernetes.io/name: stardog-userrole-operator
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: release-name
---
# Source: stardog-userrole-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-stardog-userrole-operator
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/name: stardog-userrole-operator
    helm.sh/chart: stardog-userrole-operator-0.3.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "0.3.0"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: stardog-userrole-operator
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: release-name
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: stardog-userrole-operator
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: release-name
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: release-name-stardog-userrole-operator
      containers:
        - name: manager
          image: "ghcr.io/vshn/stardog-userrole-operator:v0.3.0"
          imagePullPolicy: Always
          args:
            - --metrics-addr=127.0.0.1:8080
          env:
            - name: "DISABLED_ENVIRONMENTS"
              value: ""
            - name: "RECONCILIATION_FREQUENCY"
              value: "30s"
            - name: "RECONCILIATION_FREQUENCY_ON_ERROR"
              value: "5m"
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 30m
              memory: 20Mi
          ports:
            - containerPort: 8080
              name: metrics
