---
# Source: redis-ui/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-redis-ui
  labels:
    helm.sh/chart: redis-ui-0.1.0
    app.kubernetes.io/name: redis-ui
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2022.10.105"
    app.kubernetes.io/managed-by: Helm
---
# Source: redis-ui/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-redis-ui-settings
  labels:
    helm.sh/chart: redis-ui-0.1.0
    app.kubernetes.io/name: redis-ui
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2022.10.105"
    app.kubernetes.io/managed-by: Helm
data:
  .p3xrs-conns.json: |
    {
      "list": [],
      "license": ""
    }
---
# Source: redis-ui/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-redis-ui
  labels:
    helm.sh/chart: redis-ui-0.1.0
    app.kubernetes.io/name: redis-ui
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2022.10.105"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: redis-ui
    app.kubernetes.io/instance: release-name
---
# Source: redis-ui/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-redis-ui
  labels:
    helm.sh/chart: redis-ui-0.1.0
    app.kubernetes.io/name: redis-ui
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2022.10.105"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis-ui
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis-ui
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-redis-ui
      securityContext:
        {}
      containers:
        - name: redis-ui
          securityContext:
            {}
          image: "patrikx3/p3x-redis-ui:2022.10.105"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 7843
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
            - mountPath: /settings/.p3xrs-conns.json
              subPath: .p3xrs-conns.json
              name: release-name-redis-ui-settings
          resources:
            {}
      volumes:
        - name: release-name-redis-ui-settings
          configMap:
            name: release-name-redis-ui-settings
