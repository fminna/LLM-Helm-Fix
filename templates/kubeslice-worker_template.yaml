---
# Source: kubeslice-worker/charts/nsm/charts/admission-webhook/templates/priorityClass.yaml
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: nsm-webhook-high-priority
value: 1000000
globalDefault: false
description: "This priority class should be used for nsm webhook pods only."
---
# Source: kubeslice-worker/charts/nsm/charts/spire/templates/spire-namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: spire
---
# Source: kubeslice-worker/charts/nsm/charts/admission-webhook/templates/sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admission-webhook-sa
  namespace: default
---
# Source: kubeslice-worker/charts/nsm/charts/config/templates/service-accounts.tpl
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nse-acc
  namespace: default
---
# Source: kubeslice-worker/charts/nsm/charts/config/templates/service-accounts.tpl
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nsc-acc
  namespace: default
---
# Source: kubeslice-worker/charts/nsm/charts/config/templates/service-accounts.tpl
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nsmgr-acc
  namespace: default
---
# Source: kubeslice-worker/charts/nsm/charts/config/templates/service-accounts.tpl
apiVersion: v1
kind: ServiceAccount
metadata:
  name: forward-plane-acc
  namespace: default
---
# Source: kubeslice-worker/charts/nsm/charts/spire/charts/spiffe-csi-driver/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: spiffe-csi-driver
  namespace: spire
  labels:
    app.kubernetes.io/name: spiffe-csi-driver
---
# Source: kubeslice-worker/charts/nsm/charts/spire/charts/spire-server/templates/server-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: spire-server
  namespace: spire
---
# Source: kubeslice-worker/charts/nsm/charts/spire/templates/agent-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: spire-agent
  namespace: spire
---
# Source: kubeslice-worker/templates/dashboard-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeslice-kubernetes-dashboard
  namespace: kubeslice-system
secrets:
  - name: kubeslice-kubernetes-dashboard-creds
---
# Source: kubeslice-worker/templates/kubeslice-dns-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeslice-dns
  namespace: default
---
# Source: kubeslice-worker/templates/kubeslice-gateway-edge-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeslice-gateway-edge
  namespace: default
---
# Source: kubeslice-worker/templates/operator-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeslice-netop
  namespace: default
---
# Source: kubeslice-worker/templates/operator-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vpn-gateway-server
  namespace: default
---
# Source: kubeslice-worker/templates/operator-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vpn-gateway-client
  namespace: default
---
# Source: kubeslice-worker/templates/operator-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: slice-router
  namespace: default
---
# Source: kubeslice-worker/templates/operator-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeslice-controller-manager
  namespace: default
---
# Source: kubeslice-worker/charts/nsm/charts/admission-webhook/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: nsm-admission-webhook-certs
  namespace: default
type: Opaque
data:
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdmxFWmtOcURjOUhScmpjOUlMbHFvUFBYQ1VvZFF2VkNwSWNweXJKZFRKL0RtQzk4CmN0SjQvd256WHltcE5tRTRiaWxSRFkyM2FVTWsrc3BYaGhncDM1RTlaZHE3cThmdkxCYm1UQS9UUmxmV3YyUGEKOHpXZGlnblllSVYvZVcydzN1ejhwdE5WT3E0VWhYaXAzSk9iYUJuRFc2anFhZUFnRGRZakdsTEcrcXY1ZHQ1SQpSQVVXczdzVVhyZGpTT1JGSTd1dlh2UERTTjkzVTZVdEQzRGw0QUVrVXNlK3N5RDFZSUk5L2hqdVF4TktGcTl3CmhmSzNrc09LYytSQUQ4bHdXKzVid0FhQmd4bm9Nc2F2WEJGbWl1OThRUGhOY2U2dnNOV1BSRlBCd2xLV21UY3MKS040aFUyekhMWEdjKzEwWUxhOEVIcXhVMzJkY2ZYK1B3bnBTV3dJREFRQUJBb0lCQUhEeGxqZUZ4azg4ckxBMApMZjIycTlYNi81bU90MURlVm45bmkyQzBlM1FXdURBZnRqNDZNLzQrL0lSMEoreVN3N2QwbzVwa2lQMWFFSjhZCjU5bzNpdG9YeXBVZ3V4RlY1TldJZllHVVByRFhQaVYwOENJM3BsZWVRaTQ4STR0L2ttQ3B5Y0tEVm1ndG1SWWcKcHNXMWY1dkc5azMyTDY5SGlCNU4vNlVHalBtRGdWdnhrRkorSVFSVndieE1mMk00b0Z2S29EY3VxYUpKNFpiLwpqQ3YzcGVKSTZHYjI2dkZwdGVpb2VhUUJZbEI5SXo0NFRXenMzN05INUtlbWhrdlNTTExWbXRlam5NSUpnbU5WCk1GWVlnbnlWWThJT0tjL1JDQ1A0QzVLSXdNaHVwRkRHUEtteEw0bmtsODI5U3RYUnN4bFk1YVZQNHhOaEJ4SEcKOStYM05Pa0NnWUVBNnJzSFZ2KzhEd21mR090NVF4SndmRHlITUgveldjYUNJMWdDak9ZTlcyWHhGeUlsdHpLZAo0M2NKeEt4MFVhUE9zWDdnS0lmb2lPdjlnTVFpb1YvT2x5c0ZyUXZ5MUlya040WFRzcUNaYjNuTkptRmZ0UjZoCjRabEFvc3BZK2Z3SzJzMXh4TmMyODU2cnhXOUNDaEJsNWpSM0VPV2g0eWNMRUZvN3g0QkcxU2NDZ1lFQXo0L1IKa2RUa2MzODZYeUZMRVlRL0szU0JJYk90dW00Ky80M3FrdmxtUkZUR3NGWVZWR0xVSjB1RnhKVXdZY1BxR1lXagpxNDhubTJHVDk3OGYzc1RoaVZ5Z0tZMGdrVWZkZzBETTZ3NnN1djljOURSU2VlTzljSFJML1dVNVVtMHh4dk16CmdkRzNjUWpUdHg1bk9wZFE1QTltaE5oZGRtUkpNV3BidzJHejRhMENnWUFsVVRTYWhTK3RxRmJ0ekVuTCt2dDkKRk5aZFJJbzRwSkY5OHZqODAzb2VKTGZPZUxSTVNyVEZPK0NHcnZBVEpwcXVwMEFWMFgyTGZ4RWZUbzgrM285bQpnd1YwL0doUG1BRXVQbzFvWVpYakhoY2FXZkt3UmIxd3N6K09ZZU1CWXl1S200elJ3WEZRQzlLOUliSDdEWjVWCm1kT3dFUUhLcmlOWkp5OUh5VUg1a3dLQmdBU1I4eGhWNnEzTVdGbXQzdnhFd0N0UnhtSWFsYkdzS2NEd3ZBQisKYzB6LzNOd1hHU01oaGZCVGpsOTB0WHNCbUU3MWpWUUNzK21NN1hnZ0FqQ2lmeURLSkZDbDVkaXREMmlMYmJlagpQQlJsK1FMN2YvRmxIVSt6ajlURmZNeWUwT0REakJmSXFWUlkwR2lReDg4WGM5V0JyVTB4Z21WUDhmaWZrZU9zCmJBeUZBb0dCQU5CKzN5NCtWWEQyRVBWdjBQTUVaQnNoaHZ3RFpYYmYwZFFGSm9SMVhUZm8yTVp5cmFVZVo5bVoKWmI1OUV3LzcwSTE1TU14bkxEa1VqNWpFSmk1YTRSTVpIZzJmeW5qTW5PUFdua3RnSitON1FCMUtFK2Z0Zi9VNQp3SUdzZWs5bG5ubEJPUW5EcjY5MnZIVjVXWUxON1pxV3lJYVY0NVZyZ3E2OTZXbEhabnJGCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURqVENDQW5XZ0F3SUJBZ0lRQU55SVFSaG9DM2JJUUFnSDljSlUzekFOQmdrcWhraUc5dzBCQVFzRkFEQWkKTVNBd0hnWURWUVFERXhkaFpHMXBjM05wYjI0dFkyOXVkSEp2Ykd4bGNpMWpZVEFlRncweU5EQTFNVFV3T1RFNApNRE5hRncwek5EQTFNVE13T1RFNE1ETmFNQ0F4SGpBY0JnTlZCQU1URldGa2JXbHpjMmx2YmkxM1pXSm9iMjlyCkxYTjJZekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMNVJHWkRhZzNQUjBhNDMKUFNDNWFxRHoxd2xLSFVMMVFxU0hLY3F5WFV5Znc1Z3ZmSExTZVA4SjgxOHBxVFpoT0c0cFVRMk50MmxESlBySwpWNFlZS2QrUlBXWGF1NnZIN3l3VzVrd1AwMFpYMXI5ajJ2TTFuWW9KMkhpRmYzbHRzTjdzL0tiVFZUcXVGSVY0CnFkeVRtMmdadzF1bzZtbmdJQTNXSXhwU3h2cXIrWGJlU0VRRkZyTzdGRjYzWTBqa1JTTzdyMTd6dzBqZmQxT2wKTFE5dzVlQUJKRkxIdnJNZzlXQ0NQZjRZN2tNVFNoYXZjSVh5dDVMRGluUGtRQS9KY0Z2dVc4QUdnWU1aNkRMRwpyMXdSWm9ydmZFRDRUWEh1cjdEVmowUlR3Y0pTbHBrM0xDamVJVk5zeHkxeG5QdGRHQzJ2QkI2c1ZOOW5YSDEvCmo4SjZVbHNDQXdFQUFhT0J3RENCdlRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUIKQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVViMWUxVHFSSAo5ckpScG81UURGbkZpZDZDek9jd1hRWURWUjBSQkZZd1ZJSWhZV1J0YVhOemFXOXVMWGRsWW1odmIyc3RjM1pqCkxtUmxabUYxYkhRdWMzWmpnaTloWkcxcGMzTnBiMjR0ZDJWaWFHOXZheTF6ZG1NdVpHVm1ZWFZzZEM1emRtTXUKWTJ4MWMzUmxjaTVzYjJOaGJEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFPNFpTVkd2R0xocWJjZG43YWQ1SgpCcW5aMTdEbXowdDJMZmlieTVjQ0NpNlkwMXA5SDY5ZDYrdWtUK3IrZW9BeE42TTJqS2ozK0MzWit4ZW9uY051CkhoWkRIUlZOdEFxaVBadWM0STRUU1g5WUxJb09rNkw1NTRIYzU1R0c3VEhBU0szZWJVUzNBdmdYbENhakdoU2oKN3VZSnZiaVpsWFcvVS9GaEdwWU9iNUFhUFY4U3M5L2pZczYrUmkxQkljb1hKVWFsTW8rSXhLOUZVQWw1V29JdApLNWROVUN6Y3cweEduZmRLMi90RTZzRWRnL05LZ2pzZ0lHaHM1cVlQQWNncXhoelVhREUxbU5KWkRCRk9rK1g5CktnNFp5UW02RitFVTZhbGx3RkFVaDJxQ29GTmNEK1hxTnBkeEVLZDVibjg2bVN0N2gxQUhBTWoxT24yVEV0N0oKeFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
---
# Source: kubeslice-worker/templates/dashboard-rbac.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: kubeslice-kubernetes-dashboard-creds
  annotations:
    kubernetes.io/service-account.name: "kubeslice-kubernetes-dashboard"
---
# Source: kubeslice-worker/templates/hub-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kubeslice-hub
  namespace: kubeslice-system
data:
  ca.crt: null
  endpoint: null
  namespace: null
  token: null
---
# Source: kubeslice-worker/templates/webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kubeslice-admission-webhook-certs
  namespace: default
type: Opaque
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtakNDQW9LZ0F3SUJBZ0lSQUwxOEg3WXlVUk5oT21TN0RnZjZoZnN3RFFZSktvWklodmNOQVFFTEJRQXcKSWpFZ01CNEdBMVVFQXhNWFlXUnRhWE56YVc5dUxXTnZiblJ5YjJ4c1pYSXRZMkV3SGhjTk1qUXdOVEUxTURreApPREEwV2hjTk16UXdOVEV6TURreE9EQTBXakFrTVNJd0lBWURWUVFERXhscmRXSmxjMnhwWTJVdGQyVmlhRzl2CmF5MXpaWEoyYVdObE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBbTBhSTU5NysKQWFoRHJCUXdJNExUeTdHaTQ1UnB6bGdwOEJ6bks4VS9PcElNRS91bmhmd3BLRWd0YUlGeVlQTWdFOWJlYy9CcQpMbHlwbnp3NUxvNU9MSXpzL1BVcEkvQW9qbmV4NUEyd1lnOS9iOEV3aHFyOFJBSTE0R1Mzd29OWDNOaUVtbUFCCkExaVFFWWlzVG5kN0hGdGNFTzhYVEF3RGsrMnN0cU40d2VpSWJmV2lzRGFCTXZ4STJKNEFpS0VsQi9sK00vUmIKU3BzLzMrMWNxOVplV1pNWkluTzlGd0Mvb3FvcHZ1RktUVmRwUFhWT2RYMVRxR3g1ZW4wV2JCeVJLSm9HcW1vUApxNFpsRFBvV3pIRmZEV01PcnhST0UwUGpUN3hoVE9lbnpIcnprQTBWMm1NUzd0SmZuTGdIcGszQ2ppS1M0Nk9oCkN2VjZwRW1VWEJzdFl3SURBUUFCbzRISU1JSEZNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVUKQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JRRQo2M0M0eDNvVnduaVRRWHhsbldLZHNwQ2l4REJsQmdOVkhSRUVYakJjZ2lWcmRXSmxjMnhwWTJVdGQyVmlhRzl2CmF5MXpaWEoyYVdObExtUmxabUYxYkhRdWMzWmpnak5yZFdKbGMyeHBZMlV0ZDJWaWFHOXZheTF6WlhKMmFXTmwKTG1SbFptRjFiSFF1YzNaakxtTnNkWE4wWlhJdWJHOWpZV3d3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUFWMwoyRmdpd1F5bDV0S01GcVg0VVlHSEx1emJNZEJQWmxRWXFhTGJZTis5bStrL2NpeHFVWTdscGJzUFF4NEJWWEJOCmV3TFJpd2xEb1o5STdLajZ0czFLSEl3NVpjRHJxV2ZmR2pRdXlGSmI3RVIwdmgxaU5PcVY3b3JBYkZxUkNtYmEKM0RRMUt6RW1PNkVsUzZxNXRVUWkvcGZ2bDYyZWNIMEtzbTEvV3B2THduUitMQkFHMSttOUFCaE9QRDJiSkFkbQpuWklYQU5CaGxOanNmWHV0MDlUTzRRais4UGJkN1lsa08zMUtYR1I5R2VhTlBaOTl2VVhtNmJ2Nk9FdlVkWm5ICk5TK2NOT2dReGhDZkd5YVVlbjliV21zN1EzSEpTdjJHakNxT0FCWEY5UzQ2emFTeFNJVHV2alAzRWF5TEQ5UjcKUVhnU0lUQmxuaUR2US9iYnhuaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbTBhSTU5NytBYWhEckJRd0k0TFR5N0dpNDVScHpsZ3A4QnpuSzhVL09wSU1FL3VuCmhmd3BLRWd0YUlGeVlQTWdFOWJlYy9CcUxseXBuenc1TG81T0xJenMvUFVwSS9Bb2puZXg1QTJ3WWc5L2I4RXcKaHFyOFJBSTE0R1Mzd29OWDNOaUVtbUFCQTFpUUVZaXNUbmQ3SEZ0Y0VPOFhUQXdEaysyc3RxTjR3ZWlJYmZXaQpzRGFCTXZ4STJKNEFpS0VsQi9sK00vUmJTcHMvMysxY3E5WmVXWk1aSW5POUZ3Qy9vcW9wdnVGS1RWZHBQWFZPCmRYMVRxR3g1ZW4wV2JCeVJLSm9HcW1vUHE0WmxEUG9XekhGZkRXTU9yeFJPRTBQalQ3eGhUT2VuekhyemtBMFYKMm1NUzd0SmZuTGdIcGszQ2ppS1M0Nk9oQ3ZWNnBFbVVYQnN0WXdJREFRQUJBb0lCQUg2bHcxak1hd1ZUQnc4OQowQjNHd1pVc3FCMVRtaEV4bTlNNjM5cTFvV0xXYUgrTURSR2RvTHc0VXNFZ2cvaExsV2haSTB3UlZhbkc3cHJ3CmRmdGhHcVgvcy9TR3lpMkQzckNGTkZVOFRSZE9hTFR3TC9KSFdFYm9QcVZ0d093b1VPdlN0aVZzRktkei90NHUKU2N3ZWJBMnUvcUxaUUhsSWUwcVcydjZFeXlQc2pzbUN1Sk9sTk11WUlrbklkMmszdmRnbGJ2R1NENHQ1L3JOaApvSWsrV1FKS1F1dUpiWHUxZ2lBb0RxRFprQ3BYejdqME5nbE9FSzE5OVc2a3o1cTY4TlZzaGhLNGlCajFtanFWClNYYTJCVFpzNnUvVnN3TjcwREs0OHlsVXdrSzlmSUpOTzBVSzBMd2thTiswNVJIOTluTzB6bzMzWGxIbmh5bFUKS081M1owRUNnWUVBeFd2MnB0czF0WkVlYXdDNTZKZWR5V2RyWmlnS0JQQXRRVmpPN2RqWkNWMWZMMlZMYmh2aApaejRVaFlJN2s0cHFLaWFBMVFscHp2R2ZKcVJueXRsRnpEcmEzL1o0RTNqV2JJUGwydEJ5TTNZa0poWXJWTkFCCjV0U2ExamdHKzhrdWZKYnRPaXM3K0JJV1J4SHZEaGp2ODN0aEVXQTM4d2lwN1hrTXk4QlE2akVDZ1lFQXlWa3IKdHM4UXlnVHd3Vzgwc0g4OGQrbWFWRzdmdGFqcXJLeWxLL0d4aHlKZHlLQ3BCdHc2UXR6SU9KQUVKRXkyQzlVVgp5dVhUYmczS0ZPalRxYzZ3K2FwTWxsS2kyRmJUN29qb3NPVy9yM3QxV0dSWFZNUzI2UktkeXo3VXdpa093OFh3CmFMNHd1UDd4YkZLK1RRTjJXSy9MejVvTitUc25IclVlNkZhcjE5TUNnWUFLbTBkUUpaellHV2paOU5zSUhRVTAKS2VOQ1JNcHRBMzVhOFd1RXFjN1hTdlh2TlBEOWhHL3l2UW9iTmlqL1AwTis2anludFc3QzJJWmxiQlhMZHlyaAoweE9wVHJPYTBEWXM5RlVvRVdUaFVPcVdSVUNrdU53eFM2RForMzZjam0xNThoM2lyeW4wcFB3ZmExNDlrcWRwCm5HcFZwYWE3M3U1S1BPT3NHclArTVFLQmdRQ3lxQXV3dHNTMzdIQlB3c1Btdzg4OHV5dTBOWGtNc0dnaWRVSk4KM3JSZUtyRTZmc3ZjQ1hjc3NzaDUzOWU4K2RBaWFaMWZubFBmZUI3U05ORHpBREpxSmFDMVZYZW5MRXY2Z01LdgppL3hzMGNnS2VXWkFFaGdXY08xUVZWemxOeGNod1RXVFN3YmliMXg2ZUdUZzR1eVV2cy9DVW5pSnArSUxUanl4CmZZNFcvd0tCZ0FpV0hHTlgwdUpZRHBZcXcwalZVSlNOd2RwdE5sKy9IRG4vazljSWNWbnhQL2lTbVg3VXllNkIKUzAwZW50T1Zoa0JSMjU1Z3M4KzJkWG5jN1pXWGJPUWROR2FkRkZPSFhSd0FkWDVQdjFXUTRZbWxuYjZkMC9QUgpKNDhWMkRlN2p3bUpZOUk0SXNWUHZSTUFYbllub2pOaHFiOHpQbXgwbVZUN0hxdTFHTW5QCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: kubeslice-worker/charts/nsm/charts/spire/charts/spire-server/templates/spire-bundle-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: spire-bundle
  namespace: spire
---
# Source: kubeslice-worker/charts/nsm/charts/spire/charts/spire-server/templates/spire-controller-manager-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: spire-controller-manager-config
  namespace: spire
data:
   spire-controller-manager-config.yaml: |
     apiVersion: spire.spiffe.io/v1alpha1
     kind: ControllerManagerConfig
     metrics:
     bindAddress: 127.0.0.1:8082
     healthProbe:
       bindAddress: 127.0.0.1:8083
     leaderElection:
       leaderElect: true
       resourceName: 98c9c988.spiffe.io
       resourceNamespace: spire
     clusterName: k8s-nsm-cluster
     trustDomain: k8s.nsm
     spireServerSocketPath: /run/spire/sockets/api.sock
     ignoreNamespaces:
       - kube-system
       - kube-public
       - spire
       - local-path-storage
---
# Source: kubeslice-worker/charts/nsm/charts/spire/charts/spire-server/templates/spire-server-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: spire-server
  namespace: spire
data:
    server.conf: |
      server {
          bind_address = "0.0.0.0"
          bind_port = "8081"
          trust_domain = "k8s.nsm"
          data_dir = "/run/spire/data"
          log_level = "DEBUG"
          #AWS requires the use of RSA.  EC cryptography is not supported
          ca_key_type = "rsa-2048"
          default_x509_svid_ttl = "1h"
          default_jwt_svid_ttl = "1h"
          ca_subject = {
              country = ["US"],
              organization = ["SPIFFE"],
              common_name = "",
          }
          # Federation config was added here for unification of Spire setups
          # This config will do nothing until Spiffe Federation bundles are configured manually
          federation {
              bundle_endpoint {
                  address = "0.0.0.0"
                  port = 8443
              }
              federates_with "docker.nsm" {
                  bundle_endpoint_url = "https://spire-server.spire.docker.nsm:8443"
                  bundle_endpoint_profile "https_spiffe" {
                      endpoint_spiffe_id = "spiffe://docker.nsm/spire/server"
                  }
              }
          }
      }

      plugins {
          DataStore "sql" {
              plugin_data {
                  database_type = "sqlite3"
                  connection_string = "/run/spire/data/datastore.sqlite3"
              }
          }

          NodeAttestor "k8s_psat" {
              plugin_data {
                  clusters = {
                  # NOTE: Change this to your cluster name
                      "k8s-nsm-cluster" = {
                          use_token_review_api_validation = true
                          service_account_allow_list = ["spire:spire-agent"]
                      }
                  }
              }
          }

          KeyManager "disk" {
              plugin_data {
                  keys_path = "/run/spire/data/keys.json"
              }
          }
          Notifier "k8sbundle" {
              plugin_data {
                  webhook_label = "spiffe.io/webhook"
              }
          }
      }
---
# Source: kubeslice-worker/charts/nsm/charts/spire/templates/agent-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: spire-agent
  namespace: spire

data:
    agent.conf: |
      agent {
          data_dir = "/run/spire"
          log_level = "DEBUG"
          server_address = "spire-server"
          server_port = "8081"
          socket_path = "/run/spire/sockets/agent.sock"
          trust_bundle_path = "/run/spire/bundle/bundle.crt"
          trust_domain = "k8s.nsm"
      }

      plugins {
          NodeAttestor "k8s_psat" {
            plugin_data {
                # NOTE: Change this to your cluster name
                cluster = "k8s-nsm-cluster"
            }
          }

          KeyManager "memory" {
            plugin_data {}
          }

          WorkloadAttestor "k8s" {
            plugin_data {
                # Defaults to the secure kubelet port by default.
                # Minikube does not have a cert in the cluster CA bundle that
                # can authenticate the kubelet cert, so skip validation.
                skip_kubelet_verification = true
            }
         }
         WorkloadAttestor "unix" {
             plugin_data {}
        }
      }
---
# Source: kubeslice-worker/charts/nsm/templates/nsmgr.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: nsmgr-cm
  namespace: kubeslice-system
data:
  create-nsmgr-svc.sh: |-
    #!/usr/bin/env bash
    #
    # Service name should be an RFC-1035 label name.
    # Get the md5 hash of the node name to use as the name of the
    # nsmgr service.
    SVC_NAME="nsm-$(echo $MY_NODE_NAME | md5sum | awk '{print $1}')"
    kubectl get svc $SVC_NAME -n kubeslice-system
    if [[ $? -eq 1 ]]; then
        echo "Creating service $SVC_NAME"
        kubectl create service clusterip $SVC_NAME --tcp=5001:5001 --save-config=true -n kubeslice-system
        if [[ $? -eq 1 ]]; then
            echo "Failed to create service"
            exit 1
        fi
    fi

    kubectl label po $MY_POD_NAME nsmgr-svc=$SVC_NAME --overwrite -n kubeslice-system
    if [[ $? -eq 1 ]]; then
        echo "Failed to label the pod"
        exit 1
    fi

    SELECTOR="nsmgr-svc=$SVC_NAME"
    kubectl get service $SVC_NAME -oyaml -n kubeslice-system | kubectl set selector --local=false -f - "$SELECTOR" -oyaml -n kubeslice-system
    if [[ $? -eq 1 ]]; then
        echo "Failed to set selector on the service"
        exit 1
    fi
---
# Source: kubeslice-worker/templates/operator-configmap.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: f7425d89.avesha.io
kind: ConfigMap
metadata:
  name: kubeslice-manager-config
  namespace: kubeslice-system
---
# Source: kubeslice-worker/templates/operator-deployment.yaml
apiVersion: v1
data:
  
  worker.yaml: |-
    disabledEvents:
    - LicenseSecretNotFound
   
kind: ConfigMap
metadata:
  labels:
    name: event-schema
  name: kubeslice-worker-event-schema-conf
  namespace: kubeslice-system
---
# Source: kubeslice-worker/charts/nsm/charts/admission-webhook/templates/role.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: admission-webhook-role
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
rules:
  - apiGroups: ["admissionregistration.k8s.io"]
    resources:
      - "mutatingwebhookconfigurations"
    verbs: ["*"]
---
# Source: kubeslice-worker/charts/nsm/charts/config/templates/cluster-role-admin.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: nsm-role
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
rules:
  - apiGroups: ["networkservicemesh.io"]
    resources:
      - "networkservices"
      - "networkserviceendpoints"
    verbs: ["*"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["configmaps", "services", "pods"]
    verbs: ["patch", "get", "list", "watch", "create", "update", "delete", "read", "write"]
  - apiGroups: [""]
    resources: ["nodes", "namespaces"]
    verbs: ["get", "list", "watch"]
---
# Source: kubeslice-worker/charts/nsm/charts/config/templates/cluster-role-view.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: aggregate-network-services-view
  labels:
    # Add these permissions to the "view" default role.
    rbac.authorization.k8s.io/aggregate-to-view: "true"
rules:
  - apiGroups: ["networkservicemesh.io"]
    resources: ["networkservices"]
    verbs: ["get", "list", "watch"]
---
# Source: kubeslice-worker/charts/nsm/charts/spire/charts/spire-server/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: manager-role
rules:
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["validatingwebhookconfigurations"]
    verbs: ["get", "list", "patch", "watch"]
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["mutatingwebhookconfigurations"]
    verbs: ["get", "list", "patch", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["spire.spiffe.io"]
    resources: ["clusterfederatedtrustdomains"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["spire.spiffe.io"]
    resources: ["clusterfederatedtrustdomains/finalizers"]
    verbs: ["update"]
  - apiGroups: ["spire.spiffe.io"]
    resources: ["clusterfederatedtrustdomains/status"]
    verbs: ["get", "patch", "update"]
  - apiGroups: ["spire.spiffe.io"]
    resources: ["clusterspiffeids"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["spire.spiffe.io"]
    resources: ["clusterspiffeids/finalizers"]
    verbs: ["update"]
  - apiGroups: ["spire.spiffe.io"]
    resources: ["clusterspiffeids/status"]
    verbs: ["get", "patch", "update"]
---
# Source: kubeslice-worker/charts/nsm/charts/spire/charts/spire-server/templates/server-cluster-role.yaml
# ClusterRole to allow spire-server node attestor to query Token Review API
# and to be able to push certificate bundles to a configmap
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: spire-server-trust-role
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["get", "create"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get"]
---
# Source: kubeslice-worker/charts/nsm/charts/spire/templates/agent-cluster-role.yaml
# Required cluster role to allow spire-agent to query k8s API server
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: spire-agent-cluster-role
rules:
- apiGroups: [""]
  resources: ["pods", "nodes", "nodes/proxy"]
  verbs: ["get"]
---
# Source: kubeslice-worker/templates/dashboard-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubeslice-kubernetes-dashboard
rules:
  - verbs:
      - get
      - list
      - watch
    resources:
      - "*"
    apiGroups:
      - "*"
---
# Source: kubeslice-worker/templates/kubeslice-dns-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubeslice-dns-role
  namespace: default
rules:
- apiGroups:
  - networking.kubeslice.io
  resources:
  - serviceexports
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.kubeslice.io
  resources:
  - serviceexports/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.kubeslice.io
  resources:
  - serviceimports
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.kubeslice.io
  resources:
  - serviceimports/status
  verbs:
  - get
  - patch
  - update
---
# Source: kubeslice-worker/templates/operator-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: kubeslice-manager-role
rules:
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  - rolebindings
  - clusterroles
  - clusterrolebindings
  verbs:
  - get
  - list
  - patch
  - update
  - create
  - delete
- apiGroups:
  - batch
  - admissionregistration.k8s.io
  - apiextensions.k8s.io
  - scheduling.k8s.io
  resources: ["*"]
  verbs:
  - get
  - list
  - delete
  - create
  - watch
- apiGroups: ["spiffeid.spiffe.io"]
  resources: ["spiffeids"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
- apiGroups: ["spiffeid.spiffe.io"]
  resources: ["spiffeids/status"]
  verbs: ["get", "patch", "update"]
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
  - deletecollection
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - networking.kubeslice.io
  resources:
  - slices
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.kubeslice.io
  resources:
  - slices/finalizers
  verbs:
  - update
- apiGroups:
  - networking.kubeslice.io
  resources:
  - slices/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.kubeslice.io
  resources:
  - slicegateways
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.kubeslice.io
  resources:
  - slicegateways/finalizers
  verbs:
  - update
- apiGroups:
  - networking.kubeslice.io
  resources:
  - slicegateways/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.kubeslice.io
  resources:
  - serviceexports
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.kubeslice.io
  resources:
  - serviceexports/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.kubeslice.io
  resources:
  - serviceimports
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.kubeslice.io
  resources:
  - serviceimports/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networkservicemesh.io
  resources:
  - networkservices
  - networkserviceendpoints
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - networking.istio.io
  resources:
  - gateways
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - networking.istio.io
  resources:
  - serviceentries
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - networking.istio.io
  resources:
  - virtualservices
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - get
  - list
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - list
- apiGroups:
  - ""
  - extensions
  - apps
  - rbac.authorization.k8s.io
  - coordination.k8s.io
  - discovery.k8s.io
  - events.k8s.io
  - networking.k8s.io
  - policy
  - batch
  - authorization.k8s.io
  - autoscaling
  resources:
  - '*'
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - get
  - list
  - update
  - watch
---
# Source: kubeslice-worker/templates/operator-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubeslice-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: kubeslice-worker/templates/operator-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubeslice-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: kubeslice-worker/charts/nsm/charts/admission-webhook/templates/binding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: admission-webhook-binding
subjects:
  - kind: ServiceAccount
    name: admission-webhook-sa
    namespace: default
roleRef:
  kind: ClusterRole
  name: admission-webhook-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: kubeslice-worker/charts/nsm/charts/config/templates/cluster-role-binding.tpl
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: nsm-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nsm-role
subjects:
  - kind: ServiceAccount
    name: nsmgr-acc
    namespace: default
---
# Source: kubeslice-worker/charts/nsm/charts/spire/charts/spire-server/templates/role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager-role
subjects:
- kind: ServiceAccount
  name: spire-server
  namespace: spire
---
# Source: kubeslice-worker/charts/nsm/charts/spire/charts/spire-server/templates/server-cluster-role.yaml
# Binds above cluster role to spire-server service account
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: spire-server-trust-role-binding
subjects:
- kind: ServiceAccount
  name: spire-server
  namespace: spire
roleRef:
  kind: ClusterRole
  name: spire-server-trust-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: kubeslice-worker/charts/nsm/charts/spire/templates/agent-cluster-role.yaml
# Binds above cluster role to spire-agent service account
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: spire-agent-cluster-role-binding
subjects:
- kind: ServiceAccount
  name: spire-agent
  namespace: spire
roleRef:
  kind: ClusterRole
  name: spire-agent-cluster-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: kubeslice-worker/templates/dashboard-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubeslice-kubernetes-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubeslice-kubernetes-dashboard
subjects:
  - kind: ServiceAccount
    name: kubeslice-kubernetes-dashboard
    namespace: kubeslice-system
---
# Source: kubeslice-worker/templates/kubeslice-dns-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubeslice-dns-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubeslice-dns-role
subjects:
- kind: ServiceAccount
  name: kubeslice-dns
  namespace: default
---
# Source: kubeslice-worker/templates/operator-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubeslice-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubeslice-manager-role
subjects:
- kind: ServiceAccount
  name: kubeslice-controller-manager
  namespace: default
---
# Source: kubeslice-worker/templates/operator-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubeslice-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubeslice-proxy-role
subjects:
- kind: ServiceAccount
  name: kubeslice-controller-manager
  namespace: default
---
# Source: kubeslice-worker/charts/nsm/charts/spire/charts/spire-server/templates/leader_election_role.yaml
# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: leader-election-role
  namespace: spire
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
# Source: kubeslice-worker/charts/nsm/charts/spire/charts/spire-server/templates/server-role.yaml
# Role for the SPIRE server
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: spire
  name: spire-server-role
rules:
# allow "get" access to pods (to resolve selectors for PSAT attestation)
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get"]
  # allow access to "get" and "patch" the spire-bundle ConfigMap (for SPIRE
  # agent bootstrapping, see the spire-bundle ConfigMap below)
- apiGroups: [""]
  resources: ["configmaps"]
  resourceNames: ["spire-bundle"]
  verbs: ["get", "patch"]
---
# Source: kubeslice-worker/templates/operator-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kubeslice-leader-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: kubeslice-worker/charts/nsm/charts/spire/charts/spire-server/templates/leader_election_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: leader-election-rolebinding
  namespace: spire
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: leader-election-role
subjects:
- kind: ServiceAccount
  name: spire-server
  namespace: spire
---
# Source: kubeslice-worker/charts/nsm/charts/spire/charts/spire-server/templates/server-role.yaml
# RoleBinding granting the spire-server-role to the SPIRE server
# service account.
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: spire-server-role-binding
  namespace: spire
subjects:
- kind: ServiceAccount
  name: spire-server
  namespace: spire
roleRef:
  kind: Role
  name: spire-server-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: kubeslice-worker/templates/operator-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubeslice-leader-election-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubeslice-leader-election-role
subjects:
- kind: ServiceAccount
  name: kubeslice-controller-manager
  namespace: default
---
# Source: kubeslice-worker/charts/nsm/charts/admission-webhook/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: admission-webhook-svc
  namespace: default
  labels:
    app: admission-webhook-k8s
spec:
  ports:
    - port: 443
      targetPort: 443
  selector:
    app: admission-webhook-k8s
---
# Source: kubeslice-worker/charts/nsm/charts/spire/charts/spire-server/templates/server-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: spire-server
  namespace: spire
spec:
  type: ClusterIP
  ports:
    - name: spire-server
      port: 8081
      targetPort: 8081
      protocol: TCP
  selector:
    app: spire-server
---
# Source: kubeslice-worker/charts/nsm/charts/spire/charts/spire-server/templates/server-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: spire-controller-manager-webhook-service
  namespace: spire
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 9443
  selector:
    app: spire-server
---
# Source: kubeslice-worker/charts/nsm/templates/nsmgr-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: nsmgr
  namespace: kubeslice-system
  labels:
    services: nsmgr
spec:
  ports:
  - port: 5001
    name: tcp
  selector:
    app: nsmgr
  internalTrafficPolicy: Local
---
# Source: kubeslice-worker/charts/nsm/templates/registry-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: registry
  namespace: default
spec:
  selector:
    app: registry
  ports:
    - name: registry
      protocol: TCP
      port: 5002
      targetPort: 5002
  type: ClusterIP
---
# Source: kubeslice-worker/templates/kubeslice-dns.yaml
apiVersion: v1
kind: Service
metadata:
  name: kubeslice-dns
  namespace: default
  labels:
    app: kubeslice-dns
spec:
  type: ClusterIP
  selector:
    app: kubeslice-dns
  ports:
  - port: 53
    protocol: UDP
    name: udp-53
    targetPort: 1053
  - port: 53
    protocol: TCP
    name: tcp-53
    targetPort: 1053
---
# Source: kubeslice-worker/templates/webhook.yaml
apiVersion: v1
kind: Service
metadata:
  name: kubeslice-webhook-service
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
# Source: kubeslice-worker/charts/nsm/charts/spire/charts/spiffe-csi-driver/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: spiffe-csi-driver
  namespace: spire 
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: spiffe-csi-driver
  template:
    metadata:
      labels:
        app.kubernetes.io/name: spiffe-csi-driver
    spec:
      serviceAccountName: spiffe-csi-driver
      containers:
        # This is the container which runs the SPIFFE CSI driver.
        - name: spiffe-csi-driver 
          image: ghcr.io/spiffe/spiffe-csi-driver:0.2.3
          imagePullPolicy: IfNotPresent
          args: [
            "-workload-api-socket-dir", "/spire-agent-socket",
            "-plugin-name", "csi.spiffe.io",
            "-csi-socket-path", "/spiffe-csi/csi.sock",
          ]
          env:
            # The CSI driver needs a unique node ID. The node name can be
            # used for this purpose.
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            # The volume containing the SPIRE agent socket. The SPIFFE CSI
            # driver will mount this directory into containers.
            - mountPath: /spire-agent-socket
              name: spire-agent-socket-dir
              readOnly: true
            # The volume that will contain the CSI driver socket shared
            # with the kubelet and the driver registrar.
            - mountPath: /spiffe-csi
              name: spiffe-csi-socket-dir
            # The volume containing mount points for containers.
            - mountPath: /var/lib/kubelet/pods
              mountPropagation: Bidirectional
              name: mountpoint-dir
          securityContext:
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - all
            privileged: true
          resources:
            {}
        # This container runs the CSI Node Driver Registrar which takes care
        # of all the little details required to register a CSI driver with
        # the kubelet.
        - name: node-driver-registrar
          image: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.8.0
          imagePullPolicy: IfNotPresent
          args: [
            "-csi-address", "/spiffe-csi/csi.sock",
            "-kubelet-registration-path", "/var/lib/kubelet/plugins/csi.spiffe.io/csi.sock",
            "-health-port", "9809"
          ]
          volumeMounts:
            # The registrar needs access to the SPIFFE CSI driver socket
            - mountPath: /spiffe-csi
              name: spiffe-csi-socket-dir
            # The registrar needs access to the Kubelet plugin registration
            # directory
            - name: kubelet-plugin-registration-dir
              mountPath: /registration
          ports:
            - containerPort: 9809
              name: healthz
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 5
            timeoutSeconds: 5
          resources:
            {}
      volumes:
        - name: spire-agent-socket-dir
          hostPath:
            path: /run/spire/sockets
            type: DirectoryOrCreate
        # This volume is where the socket for kubelet->driver communication lives
        - name: spiffe-csi-socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/csi.spiffe.io
            type: DirectoryOrCreate
        # This volume is where the SPIFFE CSI driver mounts volumes
        - name: mountpoint-dir
          hostPath:
            path: /var/lib/kubelet/pods
            type: Directory
        # This volume is where the node-driver-registrar registers the plugin
        # with kubelet
        - name: kubelet-plugin-registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
---
# Source: kubeslice-worker/charts/nsm/charts/spire/templates/agent-daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: spire-agent
  namespace: spire
  labels:
    app: spire-agent
spec:
  selector:
    matchLabels:
      app: spire-agent
  template:
    metadata:
      namespace: spire
      labels:
        app: spire-agent
    spec:
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: spire-agent
      initContainers:
        - name: init
          # This is a small image with wait-for-it, choose whatever image
          # you prefer that waits for a service to be up. This image is built
          # from https://github.com/lqhl/wait-for-it
          image: gcr.io/spiffe-io/wait-for-it
          imagePullPolicy: IfNotPresent
          args: ["-t", "30", "spire-server:8081"]
        - name: init-bundle
          # Additional init container with the same wait-for-it image to
          # provide workaround for https://github.com/spiffe/spire/issues/3032
          # It checks if the bundle is in place and ready to be parsed or not.
          image: gcr.io/spiffe-io/wait-for-it
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', "t=0; until [ -f /run/spire/bundle/bundle.crt 2>&1 ] || [ $t -eq 60 ]; do t=`expr $t + 1`; sleep 1; done"]
          volumeMounts:
            - name: spire-bundle
              mountPath: /run/spire/bundle
      containers:
        - name: spire-agent
          image: ghcr.io/spiffe/spire-agent:1.6.1
          args: ["-config", "/run/spire/config/agent.conf"]
          volumeMounts:
            - name: spire-config
              mountPath: /run/spire/config
              readOnly: true
            - name: spire-bundle
              mountPath: /run/spire/bundle
            - name: spire-agent-socket
              mountPath: /run/spire/sockets
              readOnly: false
            - name: spire-token
              mountPath: /var/run/secrets/tokens
          livenessProbe:
            exec:
              command:
                - /opt/spire/bin/spire-agent
                - healthcheck
                - -socketPath
                - /run/spire/sockets/agent.sock
            failureThreshold: 2
            initialDelaySeconds: 15
            periodSeconds: 60
            timeoutSeconds: 3
          readinessProbe:
            exec:
              command: ["/opt/spire/bin/spire-agent", "healthcheck", "-socketPath", "/run/spire/sockets/agent.sock", "--shallow"]
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: spire-config
          configMap:
            name: spire-agent
        - name: spire-bundle
          configMap:
            name: spire-bundle
        - name: spire-agent-socket
          hostPath:
            path: /run/spire/sockets
            type: DirectoryOrCreate
        - name: spire-token
          projected:
            sources:
              - serviceAccountToken:
                  path: spire-agent
                  expirationSeconds: 7200
                  audience: spire-server
---
# Source: kubeslice-worker/charts/nsm/templates/forwarder-kernel.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: forwarder-kernel
  namespace: default
  labels:
    app: forwarder-kernel
spec:
  selector:
    matchLabels:
      app: forwarder-kernel
  template:
    metadata:
      labels:
        app: forwarder-kernel
        "spiffe.io/spiffe-id": "true"
    spec:
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - image: docker.io/aveshasystems/cmd-forwarder-kernel:1.0.6
          imagePullPolicy: IfNotPresent
          name: forwarder-kernel
          securityContext:
            privileged: true
          env:
            - name: SPIFFE_ENDPOINT_SOCKET
              value: unix:///run/spire/sockets/agent.sock
            - name: NSM_LOG_LEVEL
              value: TRACE
            - name: NSM_TUNNEL_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NSM_CONNECT_TO
              value: unix:///var/lib/networkservicemesh/nsm.io.sock
            - name: NSM_LISTEN_ON
              value: unix:///listen.on.sock
            - name: NSM_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: spire-agent-socket
              mountPath: /run/spire/sockets
              readOnly: true
            - name: nsm-socket
              mountPath: /var/lib/networkservicemesh
            - name: kubelet-socket
              mountPath: /var/lib/kubelet
            - name: cgroup
              mountPath: /host/sys/fs/cgroup
          resources:
            requests:
              cpu: 150m
            limits:
              memory: 500Mi
              cpu: 525m
      volumes:
        - name: spire-agent-socket
          hostPath:
            path: /run/spire/sockets
            type: Directory
        - name: nsm-socket
          hostPath:
            path: /var/lib/networkservicemesh
            type: DirectoryOrCreate
        - name: kubelet-socket
          hostPath:
            path: /var/lib/kubelet
            type: Directory
        - name: cgroup
          hostPath:
            path: /sys/fs/cgroup
            type: Directory
---
# Source: kubeslice-worker/charts/nsm/templates/nsmgr.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nsmgr
  labels:
    app: nsmgr
  namespace: default
spec:
  selector:
    matchLabels:
      app: nsmgr
  template:
    metadata:
      labels:
        app: nsmgr
        "spiffe.io/spiffe-id": "true"
    spec:
      serviceAccountName: nsmgr-acc
      initContainers:
        - name: init
          # This is a small image with wait-for-it, choose whatever image
          # you prefer that waits for a service to be up. This image is built
          # from https://github.com/lqhl/wait-for-it
          image: docker.io/aveshasystems/wait-for-it:1.0.0
          imagePullPolicy: IfNotPresent
          args: [ "-t", "120", "spire-server.spire:8081" ]
          #command: ['sh', '-c', 'sleep 120']
          #command: ['sh', '-c', "t=0; until [ -f /run/spire/sockets/agent.sock 2>&1 ] || [ $t -eq 5 ]; do t=`expr $t + 1`; sleep 15; done;"]
        - env:
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          image: "alpine/k8s:1.22.9"
          imagePullPolicy: IfNotPresent
          name: nsmgr-init-svc-creator
          command:
            - /bin/bash
            - /tmp/create-nsmgr-svc.sh
          volumeMounts:
          - mountPath: /tmp/
            name: nsm-svc-config-volume
      containers:
        - image: docker.io/aveshasystems/cmd-nsmgr:1.5.3
          imagePullPolicy: IfNotPresent
          name: nsmgr
          ports:
            - containerPort: 5001
              hostPort: 5001
          env:
            - name: SPIFFE_ENDPOINT_SOCKET
              value: unix:///run/spire/sockets/agent.sock
            - name: NSM_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NSM_LOG_LEVEL
              value: TRACE
            - name: NSM_REGISTRY_URL
              value: "registry:5002"
            #            - name: DLV_LISTEN_NSMGR
            #              value: :40000
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NSM_LISTEN_ON
              value: unix:///var/lib/networkservicemesh/nsm.io.sock,tcp://:5001
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: INSECURE
              value: "true"
            - name: TRACER_ENABLED
              value: "true"
            - name: NSM_OPENTELEMETRYENDPOINT
              value: jaeger.default:6831
            - name: JAEGER_AGENT_HOST
              value: jaeger.default
            - name: JAEGER_AGENT_PORT
              value: "6831"
            - name: FORWARDER_NAME
              value: "kernel"
          volumeMounts:
            - name: kubelet-socket
              mountPath: /var/lib/kubelet/device-plugins
            - name: spire-agent-socket
              mountPath: /run/spire/sockets
              readOnly: true
            - name: nsm-socket
              mountPath: /var/lib/networkservicemesh
            - name: nsm-config-volume
              mountPath: /var/lib/networkservicemesh/config/
          resources:
            requests:
              cpu: 200m
              memory: 100Mi
            limits:
              memory: 200Mi
              cpu: 400m
          readinessProbe:
            exec:
              command: ["/bin/grpc-health-probe", "-spiffe", "-addr=:5001"]
            failureThreshold: 300
            initialDelaySeconds: 1
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            exec:
              command: ["/bin/grpc-health-probe", "-spiffe", "-addr=:5001"]
            failureThreshold: 25
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 2
          startupProbe:
            exec:
              command: ["/bin/grpc-health-probe", "-spiffe", "-addr=:5001"]
            failureThreshold: 25
            periodSeconds: 5
        - image: docker.io/aveshasystems/cmd-exclude-prefixes-k8s:1.5.2
          imagePullPolicy: IfNotPresent
          name: exclude-prefixes
          env:
            - name: NSM_LOG_LEVEL
              value: TRACE
            - name: NSM_CONFIG_MAP_NAMESPACE
              value: default
            - name: NSM_PREFIXES_OUTPUT_TYPE
              value: config-map
          volumeMounts:
            - name: nsm-config-volume
              mountPath: /var/lib/networkservicemesh/config/
          resources:
            limits:
              memory: 40Mi
              cpu: 75m
      volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: DirectoryOrCreate
          name: kubelet-socket
        - name: spire-agent-socket
          hostPath:
            path: /run/spire/sockets
            type: Directory
        - name: nsm-socket
          hostPath:
            path: /var/lib/networkservicemesh
            type: DirectoryOrCreate
        - name: nsm-config-volume
          configMap:
            name: nsm-config
        - configMap:
            defaultMode: 420
            name: nsmgr-cm
          name: nsm-svc-config-volume
      tolerations:
        - key: "kubeslice.io/node-type"
          operator: "Equal"
          value: "gateway"
          effect: "NoSchedule"
        - key: "kubeslice.io/node-type"
          operator: "Equal"
          value: "gateway"
          effect: "NoExecute"
---
# Source: kubeslice-worker/templates/mesh-netop.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kubeslice-netop
  namespace: default
spec:
  selector:
    matchLabels:
      app: app_net_op
  template:
    metadata:
      annotations:
        prometheus.io/port: "18080"
        prometheus.io/scrape: "true"
      labels:
        app: app_net_op
        kubeslice.io/pod-type: netop
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubeslice.io/node-type
                operator: In
                values:
                - gateway
      hostNetwork: true
      serviceAccount: kubeslice-netop
      containers:
      - env:
        - name: POD_TYPE
          value: NETOP_POD
        - name: NETWORK_INTERFACE
          value: eth0
        image: docker.io/aveshasystems/netops:0.2.0
        imagePullPolicy: IfNotPresent
        name: avesha-sidecar
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_ADMIN
          privileged: true
      tolerations:
        - key: "kubeslice.io/node-type"
          operator: "Equal"
          value: "gateway"
          effect: "NoSchedule"
        - key: "kubeslice.io/node-type"
          operator: "Equal"
          value: "gateway"
          effect: "NoExecute"
---
# Source: kubeslice-worker/charts/nsm/charts/admission-webhook/templates/admission-webhook.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nsm-admission-webhook-k8s
  namespace: default
  labels:
    app: admission-webhook-k8s
spec:
  selector:
    matchLabels:
      app: admission-webhook-k8s
  template:
    metadata:
      labels:
        app: admission-webhook-k8s
    spec:
      serviceAccountName: admission-webhook-sa
      priorityClassName: nsm-webhook-high-priority
      containers:
        - name: admission-webhook-k8s
          image: docker.io/aveshasystems/cmd-admission-webhook-k8s:1.7.0
          imagePullPolicy: IfNotPresent
          readinessProbe:
            httpGet:
              path: /ready
              port: 443
              scheme: HTTPS
          env:
            - name: SPIFFE_ENDPOINT_SOCKET
              value: unix:///run/spire/sockets/agent.sock
            - name: NSM_SERVICE_NAME
              value: admission-webhook-svc
            - name: NSM_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NSM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NSM_ANNOTATION
              value: networkservicemesh.io
            - name: NSM_CONTAINER_IMAGES
              value: "docker.io/aveshasystems/cmd-nsc:1.5.7"
            - name: NSM_INIT_CONTAINER_IMAGES
              value: "docker.io/aveshasystems/cmd-nsc-init:1.5.5"
            - name: NSM_LABELS
              value: spiffe.io/spiffe-id:true
            - name: NSM_ENVS
              value: NSM_CONNECT_TO=tcp://nsmgr.kubeslice-system.svc.cluster.local:5001,NSM_LOG_LEVEL=TRACE,NSM_LIVENESSCHECKENABLED=false
            - name: NSM_REGISTER_WEBHOOK_CLIENT
              value: "false"
            - name: NSM_CA_BUNDLE
              value: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lSQUxqTDZVS2Q4bUdHQ3lwTnA2eEx4QmN3RFFZSktvWklodmNOQVFFTEJRQXcKSWpFZ01CNEdBMVVFQXhNWFlXUnRhWE56YVc5dUxXTnZiblJ5YjJ4c1pYSXRZMkV3SGhjTk1qUXdOVEUxTURreApPREF6V2hjTk16UXdOVEV6TURreE9EQXpXakFpTVNBd0hnWURWUVFERXhkaFpHMXBjM05wYjI0dFkyOXVkSEp2CmJHeGxjaTFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTUdzMnhnQ0sxdEYKZG1KeTRqTW9pR1pwcENxM1ZsN2NRVmI5azBDM2U2SDY4RWUrNG4ydkJpN1VaVjVoV09VYVZBaklEdUQ3RzdySwpsZFVnZ05JeDdweC9PdGZvOWF2dVZPYjBJRzQ1R0xTTmVPQ2pLV1lUemlLaVJWY0p3RDlDODJmNDhRUmJBM0cvCjlIZC92NVFENUdLZ2dmc3VTUlppWFdycmVBMmI5WVJHY2dTcXZKQnpWVytncTlnWVJMc2J5bDB3WmlaVWVuK0wKVWQvR2ljVE1HWFlSR0xTL1Vnc3JpQzk5b0tJcnh6NUU2VDZLa0ZaRE1iMDRyVFA1QmpuZ2ZMQ2JrRjJFeE5uaQprbmpweElMYTNqTFlXMkhjNHJOWThQckdrWk5IV2tXN2pzWC9RaXZ5TS9kVmZEb1k0bHpnOWorVzRCc1FIb3NkCnJCSlNnUm1FeEYwQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0cKQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlJ2VjdWTwpwRWYyc2xHbWpsQU1XY1dKM29MTTV6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFjSXkrMnBCMGFqVWxMT3dvCmNJS0hPbkRnd3pxaTFkN1hta2tENmRxZkNjNTQwbm9GYW11N1F1U1RiN0FPbmpRT3FXZXZJNjR6dGtDZmgwRGYKbEkvWlZ3Z21lVE5hb2xYT3Y4OTJBNWIrOW9ibDZTaTk2Zkc2KzVUaFh3MFpGNGVkRzUva1pYU21kN1NJQlhXVwpjVjgySHI1Ny93Z3dwUnhIUXZ5L3pkeHN4RzQ3T1dQYVozNlJWcG5XSTdaQ0NEa0h3Uys0SXQweVlIRU9CSHZNCnNoT3B3OXV4cEJEWGpFR2Fzb1hCNzBWbjc5WkJ4T3NZWXN4a3EwOWZEREJzTHMzTm5LRmh5VU5UWmpjNElad0kKcC8zSXg5TFhLZEt3aWFyQ0pOYzJrNVZjN0gvdUxJMnIzYkdmbWNZaUsvVzdUMmJLWXRwdDN1T0JXUUl5VWwxVQp0K2tBOHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            - name: NSM_CERT_FILE_PATH
              value: /etc/webhook/certs/tls.crt
            - name: NSM_KEY_FILE_PATH
              value: /etc/webhook/certs/tls.key
          volumeMounts:
            - name: webhook-certs
              mountPath: /etc/webhook/certs
              readOnly: true
      volumes:
        - name: webhook-certs
          secret:
            secretName: nsm-admission-webhook-certs
---
# Source: kubeslice-worker/charts/nsm/templates/registry-k8s.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry-k8s
  namespace: default
  labels:
    app: registry
spec:
  selector:
    matchLabels:
      app: registry
  template:
    metadata:
      labels:
        app: registry
        "spiffe.io/spiffe-id": "true"
    spec:
      serviceAccountName: nsmgr-acc
      containers:
        - image: docker.io/aveshasystems/cmd-registry-k8s:1.5.4
          env:
            - name: SPIFFE_ENDPOINT_SOCKET
              value: unix:///run/spire/sockets/agent.sock
            - name: REGISTRY_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: REGISTRY_K8S_LOG_LEVEL
              value: TRACE
            - name: REGISTRY_K8S_LISTEN_ON
              value: tcp://:5002
            - name: REGISTRY_K8S_PROXY_REGISTRY_URL
              value: nsmgr-proxy:5004
          imagePullPolicy: IfNotPresent
          name: registry
          ports:
            - containerPort: 5002
              hostPort: 5002
          volumeMounts:
            - name: spire-agent-socket
              mountPath: /run/spire/sockets
          resources:
            requests:
              cpu: 100m
            limits:
              memory: 40Mi
              cpu: 200m
      volumes:
        - name: spire-agent-socket
          hostPath:
            path: /run/spire/sockets
            type: DirectoryOrCreate
        - name: nsm-socket
          hostPath:
            path: /var/lib/networkservicemesh
            type: DirectoryOrCreate
---
# Source: kubeslice-worker/templates/kubeslice-dns.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubeslice-dns
  namespace: default
  labels:
    app: kubeslice-dns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubeslice-dns
  template:
    metadata:
      labels:
        app: kubeslice-dns
        kubeslice.io/pod-type: dns
    spec:
      serviceAccount: kubeslice-dns
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubeslice.io/node-type
                operator: In
                values:
                - gateway
      terminationGracePeriodSeconds: 30
      dnsPolicy: Default
      containers:
      - name: "dns"
        image: docker.io/aveshasystems/dns:0.1.0
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 10m
            memory: 64Mi
          limits:
            cpu: 50m
            memory: 128Mi
        ports:
        - containerPort: 1053
          protocol: UDP
          name: udp-53
        - containerPort: 1053
          protocol: TCP
          name: tcp-53
      tolerations:
        - key: "kubeslice.io/node-type"
          operator: "Equal"
          value: "gateway"
          effect: "NoSchedule"
        - key: "kubeslice.io/node-type"
          operator: "Equal"
          value: "gateway"
          effect: "NoExecute"
---
# Source: kubeslice-worker/templates/operator-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: kubeslice-operator
  namespace: kubeslice-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
      spoke-cluster: 
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels:
        control-plane: controller-manager
        spoke-cluster: 
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8080
        - --leader-elect
        command:
        - /manager
        image: 'docker.io/aveshasystems/worker-operator:1.3.0'
        imagePullPolicy: 'IfNotPresent'
        env:
          - name: LOG_LEVEL
            value: INFO
          - name: HUB_HOST_ENDPOINT
            valueFrom:
              secretKeyRef:
                name: kubeslice-hub
                key: endpoint
          - name: HUB_PROJECT_NAMESPACE
            valueFrom:
              secretKeyRef:
                name: kubeslice-hub
                key: namespace
          - name: CLUSTER_NAME
            value: 
          - name: AVESHA_VL3_ROUTER_IMAGE
            value: "docker.io/aveshasystems/cmd-nse-vl3:1.0.3"
          - name: AVESHA_VL3_ROUTER_PULLPOLICY
            value: IfNotPresent
          - name: AVESHA_VL3_SIDECAR_IMAGE
            value: "docker.io/aveshasystems/kubeslice-router-sidecar:1.4.3"
          - name: AVESHA_VL3_SIDECAR_IMAGE_PULLPOLICY
            value: IfNotPresent
          - name: CLUSTER_ENDPOINT
            value: ""
          - name: AVESHA_GW_SIDECAR_IMAGE
            value: 'docker.io/aveshasystems/gw-sidecar:0.3.1'
          - name: AVESHA_GW_SIDECAR_IMAGE_PULLPOLICY
            value: 'IfNotPresent'
          - name: AVESHA_OPENVPN_SERVER_IMAGE
            value: 'docker.io/aveshasystems/openvpn-server.alpine.amd64:1.0.1'
          - name: AVESHA_OPENVPN_SERVER_PULLPOLICY
            value: 'IfNotPresent'
          - name: AVESHA_OPENVPN_CLIENT_IMAGE
            value: 'docker.io/aveshasystems/openvpn-client.alpine.amd64:1.0.0'
          - name: AVESHA_OPENVPN_CLIENT_PULLPOLICY
            value: 'IfNotPresent'
          - name: AVESHA_SLICE_GW_EDGE_IMAGE
            value: "aveshasystems/slicegw-edge:1.0.4"
          
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
          - mountPath: /var/run/secrets/kubernetes.io/hub-serviceaccount
            name: hub-secret
            readOnly: true
          - mountPath: /etc/webhook/certs
            name: webhook-certs
            readOnly: true
      serviceAccountName: kubeslice-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
        - name: kubeslice-worker-event-schema-conf
          configMap:
            name: kubeslice-worker-event-schema-conf
            defaultMode: 420
        - name: webhook-certs
          secret:
            secretName: kubeslice-admission-webhook-certs
        - name: hub-secret
          secret:
            defaultMode: 420
            secretName: kubeslice-hub
            items:
            - key: "ca.crt"
              path: "ca.crt"
            - key: "token"
              path: "token"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubeslice.io/node-type
                operator: In
                values:
                - gateway
---
# Source: kubeslice-worker/charts/nsm/charts/spire/charts/spire-server/templates/server-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: spire-server
  namespace: spire
  labels:
    app: spire-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spire-server
  serviceName: spire-server
  template:
    metadata:
      namespace: spire
      labels:
        app: spire-server
    spec:
      serviceAccountName: spire-server
      shareProcessNamespace: true
      containers:
        - name: spire-server
          image: ghcr.io/spiffe/spire-server:1.6.1
          args:
            - -config
            - /run/spire/config/server.conf
          ports:
            - containerPort: 8081
          volumeMounts:
            - name: spire-config
              mountPath: /run/spire/config
              readOnly: true
            - name: spire-server-socket
              mountPath: /tmp/spire-server/private
          livenessProbe:
            exec:
              command:
                - /opt/spire/bin/spire-server
                - healthcheck
            failureThreshold: 2
            initialDelaySeconds: 15
            periodSeconds: 60
            timeoutSeconds: 3
          readinessProbe:
            exec:
              command: ["/opt/spire/bin/spire-server", "healthcheck", "--shallow"]
        - name: spire-controller-manager
          image: ghcr.io/spiffe/spire-controller-manager:0.2.2
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9443
          args:
            - "--config=spire-controller-manager-config.yaml"
          volumeMounts:
            - mountPath: /run/spire/sockets
              name: spire-server-socket
              readOnly: true
            - name: spire-controller-manager-config
              mountPath: /spire-controller-manager-config.yaml
              subPath: spire-controller-manager-config.yaml
      volumes:
        - name: spire-config
          configMap:
            name: spire-server
        - name: spire-server-socket
          emptyDir: {}
        - name: spire-controller-manager-config
          configMap:
            name: spire-controller-manager-config
---
# Source: kubeslice-worker/charts/nsm/charts/spire/charts/spiffe-csi-driver/templates/spiffe-csi-driver.yaml
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: "csi.spiffe.io"
spec:
  # Only ephemeral, inline volumes are supported. There is no need for a
  # controller to provision and attach volumes.
  attachRequired: false

  # Request the pod information which the CSI driver uses to verify that an
  # ephemeral mount was requested.
  podInfoOnMount: true

  # Don't change ownership on the contents of the mount since the Workload API
  # Unix Domain Socket is typically open to all (i.e. 0777).
  fsGroupPolicy: None

  # Declare support for ephemeral volumes only.
  volumeLifecycleModes:
    - Ephemeral
---
# Source: kubeslice-worker/charts/nsm/charts/admission-webhook/templates/admission-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: nsm-mutating-webhook-configuration
  namespace: default
  labels:
    app: nsm-admission-webhook
webhooks:
  - name: webhook.networkservicemesh.io
    sideEffects: None
    admissionReviewVersions: 
    - "v1"
    failurePolicy: Fail
    matchPolicy: Equivalent
    clientConfig:
      service:
        name: admission-webhook-svc
        namespace: default
        path: "/mutate"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lSQUxqTDZVS2Q4bUdHQ3lwTnA2eEx4QmN3RFFZSktvWklodmNOQVFFTEJRQXcKSWpFZ01CNEdBMVVFQXhNWFlXUnRhWE56YVc5dUxXTnZiblJ5YjJ4c1pYSXRZMkV3SGhjTk1qUXdOVEUxTURreApPREF6V2hjTk16UXdOVEV6TURreE9EQXpXakFpTVNBd0hnWURWUVFERXhkaFpHMXBjM05wYjI0dFkyOXVkSEp2CmJHeGxjaTFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTUdzMnhnQ0sxdEYKZG1KeTRqTW9pR1pwcENxM1ZsN2NRVmI5azBDM2U2SDY4RWUrNG4ydkJpN1VaVjVoV09VYVZBaklEdUQ3RzdySwpsZFVnZ05JeDdweC9PdGZvOWF2dVZPYjBJRzQ1R0xTTmVPQ2pLV1lUemlLaVJWY0p3RDlDODJmNDhRUmJBM0cvCjlIZC92NVFENUdLZ2dmc3VTUlppWFdycmVBMmI5WVJHY2dTcXZKQnpWVytncTlnWVJMc2J5bDB3WmlaVWVuK0wKVWQvR2ljVE1HWFlSR0xTL1Vnc3JpQzk5b0tJcnh6NUU2VDZLa0ZaRE1iMDRyVFA1QmpuZ2ZMQ2JrRjJFeE5uaQprbmpweElMYTNqTFlXMkhjNHJOWThQckdrWk5IV2tXN2pzWC9RaXZ5TS9kVmZEb1k0bHpnOWorVzRCc1FIb3NkCnJCSlNnUm1FeEYwQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0cKQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlJ2VjdWTwpwRWYyc2xHbWpsQU1XY1dKM29MTTV6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFjSXkrMnBCMGFqVWxMT3dvCmNJS0hPbkRnd3pxaTFkN1hta2tENmRxZkNjNTQwbm9GYW11N1F1U1RiN0FPbmpRT3FXZXZJNjR6dGtDZmgwRGYKbEkvWlZ3Z21lVE5hb2xYT3Y4OTJBNWIrOW9ibDZTaTk2Zkc2KzVUaFh3MFpGNGVkRzUva1pYU21kN1NJQlhXVwpjVjgySHI1Ny93Z3dwUnhIUXZ5L3pkeHN4RzQ3T1dQYVozNlJWcG5XSTdaQ0NEa0h3Uys0SXQweVlIRU9CSHZNCnNoT3B3OXV4cEJEWGpFR2Fzb1hCNzBWbjc5WkJ4T3NZWXN4a3EwOWZEREJzTHMzTm5LRmh5VU5UWmpjNElad0kKcC8zSXg5TFhLZEt3aWFyQ0pOYzJrNVZjN0gvdUxJMnIzYkdmbWNZaUsvVzdUMmJLWXRwdDN1T0JXUUl5VWwxVQp0K2tBOHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    rules:
      - apiGroups:
        - ""
        - apps
        apiVersions:
        - v1
        operations: 
        - CREATE
        - UPDATE
        resources:
        - pods
        - deployments
        - statefulsets
        - daemonsets
        - replicasets
    namespaceSelector:
      matchExpressions:
      - key: kubeslice.io/inject
        operator: In
        values:
        - "true"
      - key: kubernetes.io/metadata.name
        operator: NotIn
        values:
        - kube-system
        - spire
        - kubeslice-controller
---
# Source: kubeslice-worker/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  creationTimestamp: null
  name: kubeslice-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURMekNDQWhlZ0F3SUJBZ0lRUzluVVMwNWFFMU1yRTFDT0w3NXNMekFOQmdrcWhraUc5dzBCQVFzRkFEQWkKTVNBd0hnWURWUVFERXhkaFpHMXBjM05wYjI0dFkyOXVkSEp2Ykd4bGNpMWpZVEFlRncweU5EQTFNVFV3T1RFNApNRE5hRncwek5EQTFNVE13T1RFNE1ETmFNQ0l4SURBZUJnTlZCQU1URjJGa2JXbHpjMmx2YmkxamIyNTBjbTlzCmJHVnlMV05oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF0UzV5TWJLOXB1YVQKMlB1ZTRWOUFQbXlTZnpKNnMyNHN6T3hKOWVwcnF4S0F0WkxOTlR0eWZCenBrbURTaWpGeWxvaHA1eFIxYm5ZTgpnM0JmUlV3cmExSDU2bEpXNjBMMjJ4c0Y4K1Z1SDM5aWJqM1NNYzlBaDA0SjlxbE9CVUdzb0gzM1ZTbFRDNU5XCmNQNjNNMzFBVW1kdzZEckdIQTNPdnpPODBTU3dYWGxkdTE4K0tvRzVLRStLYVlQOXYxT3c5QnVEUUR6ckVBS3AKOG90MWN2TGlSZjRhaTF5Rjh1WW5aUmQwOWkybXBYWUx3akYydXoyOEswdFpsK05BeTc2emRDMW9IYTNwd1pmRwpXSWs1WDZzaHM3cVBidmxkM0Z5NC9iZWNKMG1KQno5MWZaK0NMZmNrQWQva3JudVpRZXMvV0xDMFlQSGRab0tvCndVZW1xT0wvWHdJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUIKQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGQVRyY0xqSAplaFhDZUpOQmZHV2RZcDJ5a0tMRU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQTlQVE1Cb2t3amxib3Rzb1FWClgvNkZjWHRqVjZhTnJ3eWZUa216MXVMWU80VG1LeWtRc01rYXZwQVFmV2N5SFlaZGpxb1BEamF2WldORXRrdEQKdDdqUGpvM1pGQ0NObmdiUDZJOHY4SDVSS3dHbUZhZFNRV0ZNTHIvRTVlSWVXSHBXNjlleTkvSXA5OTdIY2hiVQpZL1l0U211eWgxMUNTY3E3V1hZZXdXV1dIRWpNWXV5NGY5K3Yrd3JMS3BINHpKOVV1d1N3Y29xaFhhYlhGdzJhClBXZmR5NHpvVFBDSVJrWU84MnFhK3cvbVovSVFXOVNaY2Z3Y3N2YURtQlBrczlJYjFsRXhWa3J4UGpBMmFnSkMKWGJaR2QwK090dzJvL1d5ODBkaW8xd0hnR0c3MVdyaDl6NDBmMzdtWDAzS2hnaUY5b0hoNFFrSEttTitHRlNMNQpTc05tCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    service:
      name: kubeslice-webhook-service
      namespace: default
      path: /mutate-webhook
  failurePolicy: Fail
  name: webhook.kubeslice.io
  rules:
  - apiGroups:
    - ""
    - apps
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pods
    - deployments
    - statefulsets
    - daemonsets
  sideEffects: NoneOnDryRun
  namespaceSelector:
    matchExpressions:
    - key: kubeslice.io/slice
      operator: Exists
    - key: name
      operator: NotIn
      values:
      - kube-system
      - spire
      - "default"
      - "kubeslice-controller"
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - spire
      - "default"
      - "kubeslice-controller"
---
# Source: kubeslice-worker/charts/nsm/charts/spire/charts/spire-server/templates/spire-controller-manager-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: spire-controller-manager-webhook
webhooks:
  - admissionReviewVersions: ["v1"]
    clientConfig:
      service:
        name: spire-controller-manager-webhook-service
        namespace: spire
        path: /validate-spire-spiffe-io-v1alpha1-clusterspiffeid
    failurePolicy: Fail
    name: vclusterspiffeid.kb.io
    rules:
      - apiGroups: ["spire.spiffe.io"]
        apiVersions: ["v1alpha1"]
        operations: ["CREATE", "UPDATE"]
        resources: ["clusterspiffeids"]
    sideEffects: None
---
# Source: kubeslice-worker/charts/nsm/charts/config/templates/nsm-crd-upgrade-preinstall-hook.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nsm-install-crds
  namespace: default
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/version: "1.0.1"
    helm.sh/chart: "config-1.0.1"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
---
# Source: kubeslice-worker/charts/nsm/charts/config/templates/nsm-webhook-predelete-hook.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nsm-delete-webhooks
  namespace: default
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/version: "1.0.1"
    helm.sh/chart: "config-1.0.1"
  annotations:
    "helm.sh/hook": pre-delete,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
---
# Source: kubeslice-worker/charts/nsm/charts/spire/templates/spire-crd-upgrade-preinstall-hook.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: spire-install-crds
  namespace: default
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/version: "1.16.0"
    helm.sh/chart: "spire-0.4.0"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
---
# Source: kubeslice-worker/charts/nsm/charts/spire/templates/spire-install-clusterspiffeid-template.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: spire-install-clusterid-cr
  namespace: default
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/version: "1.16.0"
    helm.sh/chart: "spire-0.4.0"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
---
# Source: kubeslice-worker/templates/cleanUp.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeslice-cleanup
  namespace: default
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/version: "1.3.0"
    helm.sh/chart: "kubeslice-worker-1.3.0"
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
---
# Source: kubeslice-worker/templates/kubeslice-apply-crd-pre-install-hook.yaml
# TODO: when you update crds for kubeslice-worker, please ensure to re-generate thid file by doing
# kubectl create configmap kubeslice-install-crds --from-file charts/kubeslice-worker/crds
# kubectl get configmap/kubeslice-install-crds -o yaml
# replace the data part of the output in here in the configmap
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeslice-install-crds
  namespace: default
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/version: "1.3.0"
    helm.sh/chart: "kubeslice-worker-1.3.0"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
---
# Source: kubeslice-worker/templates/kubeslice-postdelete-hook.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeslice-postdelete-job
  namespace: default
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/version: "1.3.0"
    helm.sh/chart: "kubeslice-worker-1.3.0"
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
---
# Source: kubeslice-worker/charts/nsm/charts/config/templates/nsm-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: nsm-config
  namespace: default
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "1"
data:
  excluded_prefixes_output.yaml: ''
---
# Source: kubeslice-worker/charts/nsm/charts/config/templates/nsm-crd-upgrade-preinstall-hook.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: nsm-crd-install
  namespace: default
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/version: "1.0.1"
    helm.sh/chart: "config-1.0.1"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
data:
  crd-ns.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      name: networkservices.networkservicemesh.io
    spec:
      conversion:
        strategy: None
      group: networkservicemesh.io
      names:
        kind: NetworkService
        listKind: NetworkServiceList
        plural: networkservices
        shortNames:
          - netsvc
          - netsvcs
        singular: networkservice
      scope: Namespaced
      versions:
        - name: v1
          served: true
          storage: true
          schema:
            openAPIV3Schema:
              type: object
              properties:
                spec:
                  x-kubernetes-preserve-unknown-fields: true
  crd-nse.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      name: networkserviceendpoints.networkservicemesh.io
    spec:
      conversion:
        strategy: None
      group: networkservicemesh.io
      names:
        kind: NetworkServiceEndpoint
        listKind: NetworkServiceEndpointList
        plural: networkserviceendpoints
        shortNames:
          - nse
          - nses
        singular: networkserviceendpoint
      scope: Namespaced
      versions:
        - name: v1
          served: true
          storage: true
          schema:
            openAPIV3Schema:
              type: object
              properties:
                spec:
                  x-kubernetes-preserve-unknown-fields: true
---
# Source: kubeslice-worker/charts/nsm/charts/config/templates/nsm-webhook-predelete-hook.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: nsm-delete-webhooks
  namespace: default
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/version: "1.0.1"
    helm.sh/chart: "config-1.0.1"
  annotations:
    "helm.sh/hook": pre-delete,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
data:
  delete-admission-webhook.sh: |-
    #!/usr/bin/env bash

    echo "finding out the admission webhook "
    WH=$(kubectl get pods -l app=admission-webhook-k8s -n default --template '{{range .items}}{{.metadata.name}}{{"\n"}}{{end}}')
    echo "deleting mutatingwebhookconfiguration ${WH}"
    kubectl delete mutatingwebhookconfiguration --ignore-not-found ${WH}
---
# Source: kubeslice-worker/charts/nsm/charts/spire/templates/spire-crd-upgrade-preinstall-hook.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: spire-crd-install
  namespace: default
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/version: "1.16.0"
    helm.sh/chart: "spire-0.4.0"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
data:
  crds.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.11.1
      creationTimestamp: null
      name: clusterspiffeids.spire.spiffe.io
    spec:
      group: spire.spiffe.io
      names:
        kind: ClusterSPIFFEID
        listKind: ClusterSPIFFEIDList
        plural: clusterspiffeids
        singular: clusterspiffeid
      scope: Cluster
      versions:
      - name: v1alpha1
        schema:
          openAPIV3Schema:
            description: ClusterSPIFFEID is the Schema for the clusterspiffeids API
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: ClusterSPIFFEIDSpec defines the desired state of ClusterSPIFFEID
                properties:
                  admin:
                    description: Admin indicates whether or not the SVID can be used to
                      access the SPIRE administrative APIs. Extra care should be taken
                      to only apply this SPIFFE ID to admin workloads.
                    type: boolean
                  dnsNameTemplates:
                    description: DNSNameTemplate represents templates for extra DNS names
                      that are applicable to SVIDs minted for this ClusterSPIFFEID. The
                      node and pod spec are made available to the template under .NodeSpec,
                      .PodSpec respectively.
                    items:
                      type: string
                    type: array
                  downstream:
                    description: Downstream indicates that the entry describes a downstream
                      SPIRE server.
                    type: boolean
                  federatesWith:
                    description: FederatesWith is a list of trust domain names that workloads
                      that obtain this SPIFFE ID will federate with.
                    items:
                      type: string
                    type: array
                  namespaceSelector:
                    description: NamespaceSelector selects the namespaces that are targeted
                      by this CRD.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements.
                          The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that
                            contains values, a key, and an operator that relates the key
                            and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies
                                to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to
                                a set of values. Valid operators are In, NotIn, Exists
                                and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the
                                operator is In or NotIn, the values array must be non-empty.
                                If the operator is Exists or DoesNotExist, the values
                                array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single
                          {key,value} in the matchLabels map is equivalent to an element
                          of matchExpressions, whose key field is "key", the operator
                          is "In", and the values array contains only "value". The requirements
                          are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  podSelector:
                    description: PodSelector selects the pods that are targeted by this
                      CRD.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements.
                          The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that
                            contains values, a key, and an operator that relates the key
                            and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies
                                to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to
                                a set of values. Valid operators are In, NotIn, Exists
                                and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the
                                operator is In or NotIn, the values array must be non-empty.
                                If the operator is Exists or DoesNotExist, the values
                                array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single
                          {key,value} in the matchLabels map is equivalent to an element
                          of matchExpressions, whose key field is "key", the operator
                          is "In", and the values array contains only "value". The requirements
                          are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  spiffeIDTemplate:
                    description: SPIFFEID is the SPIFFE ID template. The node and pod
                      spec are made available to the template under .NodeSpec, .PodSpec
                      respectively.
                    type: string
                  ttl:
                    description: TTL indicates an upper-bound time-to-live for SVIDs minted
                      for this ClusterSPIFFEID. If unset, a default will be chosen.
                    type: string
                  workloadSelectorTemplates:
                    description: WorkloadSelectorTemplates are templates to produce arbitrary
                      workload selectors that apply to a given workload before it will
                      receive this SPIFFE ID. The rendered value is interpreted by SPIRE
                      and are of the form type:value, where the value may, and often does,
                      contain semicolons, .e.g., k8s:container-image:docker/hello-world
                      The node and pod spec are made available to the template under .NodeSpec,
                      .PodSpec respectively.
                    items:
                      type: string
                    type: array
                required:
                - spiffeIDTemplate
                type: object
              status:
                description: ClusterSPIFFEIDStatus defines the observed state of ClusterSPIFFEID
                properties:
                  stats:
                    description: Stats produced by the last entry reconciliation run
                    properties:
                      entriesMasked:
                        description: How many entries were masked by entries for other
                          ClusterSPIFFEIDs. This happens when one or more ClusterSPIFFEIDs
                          produce an entry for the same pod with the same set of workload
                          selectors.
                        type: integer
                      entriesToSet:
                        description: How many entries are to be set for this ClusterSPIFFEID.
                          In nominal conditions, this should reflect the number of pods
                          selected, but not always if there were problems encountered
                          rendering an entry for the pod (RenderFailures) or entries are
                          masked (EntriesMasked).
                        type: integer
                      entryFailures:
                        description: How many entries were unable to be set due to failures
                          to create or update the entries via the SPIRE Server API.
                        type: integer
                      namespacesIgnored:
                        description: How many (selected) namespaces were ignored (based
                          on configuration).
                        type: integer
                      namespacesSelected:
                        description: How many namespaces were selected.
                        type: integer
                      podEntryRenderFailures:
                        description: How many failures were encountered rendering an entry
                          selected pods. This could be due to either a bad template in
                          the ClusterSPIFFEID or Pod metadata that when applied to the
                          template did not produce valid entry values.
                        type: integer
                      podsSelected:
                        description: How many pods were selected out of the namespaces.
                        type: integer
                    type: object
                type: object
            type: object
        served: true
        storage: true
        subresources:
          status: {}

    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.11.1
      creationTimestamp: null
      name: clusterfederatedtrustdomains.spire.spiffe.io
    spec:
      group: spire.spiffe.io
      names:
        kind: ClusterFederatedTrustDomain
        listKind: ClusterFederatedTrustDomainList
        plural: clusterfederatedtrustdomains
        singular: clusterfederatedtrustdomain
      scope: Cluster
      versions:
      - additionalPrinterColumns:
        - jsonPath: .spec.trustDomain
          name: Trust Domain
          type: string
        - jsonPath: .spec.bundleEndpointURL
          name: Endpoint URL
          type: string
        name: v1alpha1
        schema:
          openAPIV3Schema:
            description: ClusterFederatedTrustDomain is the Schema for the clusterfederatedtrustdomains
              API
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: ClusterFederatedTrustDomainSpec defines the desired state
                  of ClusterFederatedTrustDomain
                properties:
                  bundleEndpointProfile:
                    description: BundleEndpointProfile is the profile for the bundle endpoint.
                    properties:
                      endpointSPIFFEID:
                        description: EndpointSPIFFEID is the SPIFFE ID of the bundle endpoint.
                          It is required for the "https_spiffe" profile.
                        type: string
                      type:
                        description: Type is the type of the bundle endpoint profile.
                        enum:
                        - https_spiffe
                        - https_web
                        type: string
                    required:
                    - type
                    type: object
                  bundleEndpointURL:
                    description: BundleEndpointURL is the URL of the bundle endpoint.
                      It must be an HTTPS URL and cannot contain userinfo (i.e. username/password).
                    type: string
                  trustDomain:
                    description: TrustDomain is the name of the trust domain to federate
                      with (e.g. example.org)
                    pattern: '[a-z0-9._-]{1,255}'
                    type: string
                  trustDomainBundle:
                    description: TrustDomainBundle is the contents of the bundle for the
                      referenced trust domain. This field is optional when the resource
                      is created.
                    type: string
                required:
                - bundleEndpointProfile
                - bundleEndpointURL
                - trustDomain
                type: object
              status:
                description: ClusterFederatedTrustDomainStatus defines the observed state
                  of ClusterFederatedTrustDomain
                type: object
            type: object
        served: true
        storage: true
        subresources:
          status: {}
---
# Source: kubeslice-worker/charts/nsm/charts/spire/templates/spire-install-clusterspiffeid-template.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: spire-clusterid-cr-install
  namespace: default
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/version: "1.16.0"
    helm.sh/chart: "spire-0.4.0"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
data:
  cr.yaml: |
    ---
    apiVersion: spire.spiffe.io/v1alpha1
    kind: ClusterSPIFFEID
    metadata:
      name: nsm-workloads
    spec:
      spiffeIDTemplate: "spiffe://k8s.nsm/ns/{{ .PodMeta.Namespace }}/pod/{{ .PodMeta.Name }}"
      podSelector:
        matchLabels:
          "spiffe.io/spiffe-id": "true"
---
# Source: kubeslice-worker/templates/kubeslice-apply-crd-pre-install-hook.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubeslice-install-crds
  namespace: default
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/version: "1.3.0"
    helm.sh/chart: "kubeslice-worker-1.3.0"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
data:
  networking.kubeslice.io_serviceexports.yaml: |2

    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.7.0
      creationTimestamp: null
      name: serviceexports.networking.kubeslice.io
    spec:
      group: networking.kubeslice.io
      names:
        kind: ServiceExport
        listKind: ServiceExportList
        plural: serviceexports
        shortNames:
        - svcex
        singular: serviceexport
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - jsonPath: .spec.slice
          name: Slice
          type: string
        - jsonPath: .spec.ingressEnabled
          name: Ingress
          type: boolean
        - jsonPath: .status.servicePorts
          name: ServicePort(s)
          type: string
        - jsonPath: .status.exposedPorts
          name: Port(s)
          type: string
        - jsonPath: .status.availableEndpoints
          name: Endpoints
          type: integer
        - jsonPath: .status.exportStatus
          name: Status
          type: string
        - jsonPath: .spec.aliases
          name: Alias
          type: string
        name: v1beta1
        schema:
          openAPIV3Schema:
            description: ServiceExport is the Schema for the serviceexports API
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: ServiceExportSpec defines the desired state of ServiceExport
                properties:
                  aliases:
                    description: Alias names for the exported service. The service could
                      be addressed by the alias names in addition to the slice.local name.
                    items:
                      type: string
                    type: array
                  ingressEnabled:
                    description: IngressEnabled denotes whether the traffic should be
                      proxied through an ingress gateway
                    type: boolean
                  ports:
                    description: Ports which should be exposed through the service
                    items:
                      description: ServicePort is the port exposed by ServicePod
                      properties:
                        containerPort:
                          description: Port number exposed from the container
                          format: int32
                          type: integer
                        name:
                          description: Name of the port
                          type: string
                        protocol:
                          default: TCP
                          description: Protocol for port. Must be UDP, TCP, or SCTP. Defaults
                            to "TCP".
                          type: string
                        servicePort:
                          description: Port number of the exported service
                          format: int32
                          type: integer
                        serviceProtocol:
                          default: HTTP
                          description: The protocol being used by the exported service
                            (for multinet slice)
                          enum:
                          - HTTP
                          - HTTPS
                          maxLength: 255
                          minLength: 1
                          pattern: ^[a-zA-Z0-9]([-a-zSA-Z0-9]*[a-zA-Z0-9])?$|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9]+$
                          type: string
                      required:
                      - containerPort
                      type: object
                    type: array
                  selector:
                    description: Selector is a label query over pods that should be exposed
                      as a service
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements.
                          The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that
                            contains values, a key, and an operator that relates the key
                            and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies
                                to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to
                                a set of values. Valid operators are In, NotIn, Exists
                                and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the
                                operator is In or NotIn, the values array must be non-empty.
                                If the operator is Exists or DoesNotExist, the values
                                array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single
                          {key,value} in the matchLabels map is equivalent to an element
                          of matchExpressions, whose key field is "key", the operator
                          is "In", and the values array contains only "value". The requirements
                          are ANDed.
                        type: object
                    type: object
                  slice:
                    description: Slice denotes the slice which the app is part of
                    type: string
                required:
                - ports
                - selector
                - slice
                type: object
              status:
                description: ServiceExportStatus defines the observed state of ServiceExport
                properties:
                  aliases:
                    description: Alias names for the exported service. The service could
                      be addressed by the alias names in addition to the slice.local name.
                    items:
                      type: string
                    type: array
                  availableEndpoints:
                    description: AvailableEndpoints shows the number of available endpoints
                    type: integer
                  dnsName:
                    description: DNSName is the FQDN to reach the service
                    type: string
                  exportStatus:
                    description: ExportStatus denotes the export status of the service
                    type: string
                  exposedPorts:
                    description: ExposedPorts shows a one line representation of ports
                      and protocols exposed only used to show as a printercolumn
                    type: string
                  ingressGwEnabled:
                    description: IngressGwEnabled denotes ingress gw is enabled for the
                      serviceexport
                    type: boolean
                  ingressGwPod:
                    description: IngressGwPod contains ingress gateway pod info
                    properties:
                      name:
                        description: Name of the pod
                        type: string
                      nsmIp:
                        description: NsmIP of the pod which is reachable within slice
                        type: string
                    required:
                    - name
                    type: object
                  lastSync:
                    description: Last sync time with backend
                    format: int64
                    type: integer
                  pods:
                    description: Pods denotes the service endpoint pods
                    items:
                      description: ServicePod contains pod information which offers a
                        service
                      properties:
                        dnsName:
                          description: DNSName is the dns A record name for the pod
                          type: string
                        name:
                          description: Name of the pod
                          type: string
                        nsmIp:
                          description: NsmIP of the pod which is reachable within slice
                          type: string
                        podIp:
                          description: PodIp of the pod which is reachable within cluster
                          type: string
                      required:
                      - dnsName
                      - name
                      - podIp
                      type: object
                    type: array
                  servicePorts:
                    description: ServicePorts shows a one line representation of service
                      ports and protocols
                    type: string
                type: object
            type: object
        served: true
        storage: true
        subresources:
          status: {}
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []
      
  networking.kubeslice.io_serviceimports.yaml: |2

    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.7.0
      creationTimestamp: null
      name: serviceimports.networking.kubeslice.io
    spec:
      group: networking.kubeslice.io
      names:
        kind: ServiceImport
        listKind: ServiceImportList
        plural: serviceimports
        shortNames:
        - svcim
        singular: serviceimport
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - jsonPath: .spec.slice
          name: Slice
          type: string
        - jsonPath: .status.exposedPorts
          name: Port(s)
          type: string
        - jsonPath: .status.availableEndpoints
          name: Endpoints
          type: integer
        - jsonPath: .status.importStatus
          name: Status
          type: string
        - jsonPath: .spec.aliases
          name: Alias
          type: string
        name: v1beta1
        schema:
          openAPIV3Schema:
            description: ServiceImport is the Schema for the serviceimports API
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: ServiceImportSpec defines the desired state of ServiceImport
                properties:
                  aliases:
                    description: Alias names for the exported service. The service could
                      be addressed by the alias names in addition to the slice.local name.
                    items:
                      type: string
                    type: array
                  dnsName:
                    description: DNSName shows the FQDN to reach the service
                    type: string
                  ports:
                    description: Ports which should be exposed through the service
                    items:
                      description: ServicePort is the port exposed by ServicePod
                      properties:
                        containerPort:
                          description: Port number exposed from the container
                          format: int32
                          type: integer
                        name:
                          description: Name of the port
                          type: string
                        protocol:
                          default: TCP
                          description: Protocol for port. Must be UDP, TCP, or SCTP. Defaults
                            to "TCP".
                          type: string
                        servicePort:
                          description: Port number of the exported service
                          format: int32
                          type: integer
                        serviceProtocol:
                          default: HTTP
                          description: The protocol being used by the exported service
                            (for multinet slice)
                          enum:
                          - HTTP
                          - HTTPS
                          maxLength: 255
                          minLength: 1
                          pattern: ^[a-zA-Z0-9]([-a-zSA-Z0-9]*[a-zA-Z0-9])?$|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9]+$
                          type: string
                      required:
                      - containerPort
                      type: object
                    type: array
                  slice:
                    description: Slice denotes the slice which the app is part of
                    type: string
                required:
                - dnsName
                - ports
                - slice
                type: object
              status:
                description: ServiceImportStatus defines the observed state of ServiceImport
                properties:
                  availableEndpoints:
                    description: AvailableEndpoints shows the number of available endpoints
                    type: integer
                  endpoints:
                    description: Endpoints which provide the service
                    items:
                      description: ServiceEndpoint contains details of a single endpoint
                        which offers a particular service
                      properties:
                        clusterId:
                          description: ClusterID which the endpoint belongs to
                          type: string
                        dnsName:
                          description: DNSName
                          type: string
                        ip:
                          description: IP of the pod which is reachable within slice
                          type: string
                        name:
                          description: Name of the endpoint
                          type: string
                        port:
                          description: Port to reach the endpoint
                          format: int32
                          type: integer
                      required:
                      - clusterId
                      - dnsName
                      - ip
                      - port
                      type: object
                    type: array
                  exposedPorts:
                    description: ExposedPorts shows a one line representation of ports
                      and protocols exposed only used to show as a printercolumn
                    type: string
                  importStatus:
                    description: ImportStatus denotes the status of the imported service
                    type: string
                  lastSync:
                    description: Last sync time with backend
                    format: int64
                    type: integer
                  updatedOn:
                    description: Used to match if the service is updated from backend
                    format: int64
                    type: integer
                type: object
            type: object
        served: true
        storage: true
        subresources:
          status: {}
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []
      
  networking.kubeslice.io_slicegateways.yaml: |2

    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.7.0
      creationTimestamp: null
      name: slicegateways.networking.kubeslice.io
    spec:
      group: networking.kubeslice.io
      names:
        kind: SliceGateway
        listKind: SliceGatewayList
        plural: slicegateways
        shortNames:
        - gw
        - slicegw
        singular: slicegateway
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - jsonPath: .status.config.sliceGatewaySubnet
          name: Subnet
          type: string
        - jsonPath: .status.config.sliceGatewayRemoteSubnet
          name: Remote Subnet
          type: string
        - jsonPath: .status.config.sliceGatewayRemoteClusterId
          name: Remote Cluster
          type: string
        - jsonPath: .status.config.sliceGatewayStatus
          name: GW Status
          type: string
        name: v1beta1
        schema:
          openAPIV3Schema:
            description: SliceGateway is the Schema for the slicegateways API
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: SliceGatewaySpec defines the desired state of SliceGateway
                properties:
                  siteName:
                    description: SiteName is site name
                    type: string
                  sliceName:
                    description: SliceName is the Name of the slice this gateway is attached
                      into
                    type: string
                type: object
              status:
                description: SliceGatewayStatus defines the observed state of SliceGateway
                properties:
                  config:
                    description: SliceGatewayConfig defines the config received from backend
                    properties:
                      sliceGatewayConnectivityType:
                        description: SliceGateway Connectivity Type
                        type: string
                      sliceGatewayHostType:
                        description: 'Host Type : server or client'
                        type: string
                      sliceGatewayId:
                        description: UUID of the slice gateway.
                        type: string
                      sliceGatewayIntermediateDeployments:
                        description: Intermediate Slice Gw Deployments
                        items:
                          type: string
                        type: array
                      sliceGatewayLocalVpnIp:
                        description: Local VPN IP
                        type: string
                      sliceGatewayName:
                        description: Slice Gateway Name
                        type: string
                      sliceGatewayNodePorts:
                        description: Node port
                        items:
                          type: integer
                        type: array
                      sliceGatewayProtocol:
                        description: 'SliceGateway Protocol Type: UDP or TCP'
                        type: string
                      sliceGatewayRemoteClusterId:
                        description: Remote Cluster ID
                        type: string
                      sliceGatewayRemoteGatewayId:
                        description: Remote Gateway ID
                        type: string
                      sliceGatewayRemoteNodeIps:
                        description: Remote Node IPs
                        items:
                          type: string
                        type: array
                      sliceGatewayRemoteNodePorts:
                        description: Remote Node Port
                        items:
                          type: integer
                        type: array
                      sliceGatewayRemoteSubnet:
                        description: Remote Node Subnet
                        type: string
                      sliceGatewayRemoteVpnIp:
                        description: Remote VPN IP
                        type: string
                      sliceGatewayServerLBIps:
                        description: Slice gateway server LB IPs
                        items:
                          type: string
                        type: array
                      sliceGatewayStatus:
                        description: SliceGateway status
                        type: string
                      sliceGatewaySubnet:
                        description: Slice gateway subnet range.
                        type: string
                      sliceName:
                        description: Name of the slice.
                        type: string
                      sliceSiteName:
                        description: Slice gateway subnet range.
                        type: string
                    type: object
                  configUpdatedOn:
                    description: ConfigUpdatedOn is the time when Config updated from
                      backend
                    format: int64
                    type: integer
                  connectionContextUpdatedOn:
                    description: ConnectionContextUpdated is the time when context updated
                      in pod
                    format: int64
                    type: integer
                  gatewayPodStatus:
                    description: gatewayPodStatus is a list that consists of status of
                      individual gatewaypods
                    items:
                      properties:
                        localNsmIP:
                          type: string
                        originalPodCreationTS:
                          description: originalPodCreationTS indicates how old the gw
                            pod is even if is restarted
                          format: date-time
                          type: string
                        peerPodName:
                          type: string
                        podCreationTS:
                          description: podCreationTS indicates the creation TS of a pod
                          format: date-time
                          type: string
                        podIP:
                          type: string
                        podName:
                          type: string
                        routeRemoved:
                          format: int32
                          type: integer
                        tunnelStatus:
                          properties:
                            IntfName:
                              type: string
                            Latency:
                              format: int64
                              type: integer
                            LocalIP:
                              type: string
                            PacketLoss:
                              format: int64
                              type: integer
                            RemoteIP:
                              type: string
                            RxRate:
                              format: int64
                              type: integer
                            Status:
                              format: int32
                              type: integer
                            TxRate:
                              format: int64
                              type: integer
                          type: object
                      type: object
                    type: array
                  peerIp:
                    description: PeerIP is the gateway tunnel peer ip
                    type: string
                  podIps:
                    description: PodIPs is the list of Ip of the gateway pods running
                      in cluster
                    items:
                      type: string
                    type: array
                  podName:
                    description: Deprecated PodName is the name of the gateway pod running
                      in cluster
                    type: string
                  podNames:
                    description: PodNames is the list of names of the gateway pods running
                      in cluster
                    items:
                      type: string
                    type: array
                  podStatus:
                    description: PodStatus shows whether gateway pod is healthy
                    type: string
                type: object
            type: object
        served: true
        storage: true
        subresources:
          status: {}
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []


  networking.kubeslice.io_slices.yaml: |2-

    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.7.0
      creationTimestamp: null
      name: slices.networking.kubeslice.io
    spec:
      group: networking.kubeslice.io
      names:
        kind: Slice
        listKind: SliceList
        plural: slices
        singular: slice
      scope: Namespaced
      versions:
      - name: v1beta1
        schema:
          openAPIV3Schema:
            description: Slice is the Schema for the slices API
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: SliceSpec defines the desired state of Slice
                type: object
              status:
                description: SliceStatus defines the observed state of Slice
                properties:
                  allowedNamespaces:
                    description: Slice Allowed Namespace list
                    items:
                      type: string
                    type: array
                  appPods:
                    description: AppPods contains the list of app pods connected to the
                      slice
                    items:
                      description: AppPod defines the app pods connected to slice
                      properties:
                        nsmInterface:
                          description: NsmInterface is the nsm interface of App
                          type: string
                        nsmIp:
                          description: NsmIP is the nsm ip of App
                          type: string
                        nsmPeerIp:
                          description: PeerIp is the nsm peer ip of gateway
                          type: string
                        podIp:
                          description: PodIP is App Pod IP
                          type: string
                        podName:
                          description: PodName is App Pod Name
                          type: string
                        podNamespace:
                          description: PodNamespace is App Pod Namespace
                          type: string
                      type: object
                    type: array
                  appPodsUpdatedOn:
                    description: AppPodsUpdatedOn is the time when app pods list was updated
                    format: int64
                    type: integer
                  applicationNamespaces:
                    description: Slice Application Namespace list
                    items:
                      type: string
                    type: array
                  dnsIP:
                    description: DNSIP is the IP of Coredns server
                    type: string
                  networkPoliciesInstalled:
                    default: false
                    description: NetworkPoliciesInstalled defines whether the netpol are
                      installed in atleast one applicationNamespace
                    type: boolean
                  sliceConfig:
                    description: SliceConfig is the spec for slice received from hub cluster
                    properties:
                      clusterSubnetCIDR:
                        description: ClusterSubnetCIDR is the subnet to be used by the
                          current cluster
                        type: string
                      externalGatewayConfig:
                        description: ExternalGatewayConfig determines istio ingress/egress
                          configuration
                        properties:
                          egress:
                            properties:
                              enabled:
                                type: boolean
                            type: object
                          gatewayType:
                            type: string
                          ingress:
                            properties:
                              enabled:
                                type: boolean
                            type: object
                          nsIngress:
                            properties:
                              enabled:
                                type: boolean
                            type: object
                        type: object
                      namespaceIsolationProfile:
                        description: Namespace Isolation profile contains fields related
                          to namespace binding to slice
                        properties:
                          allowedNamespaces:
                            description: Allowed namespaces is a list of namespaces that
                              can send and receive traffic to app namespaces
                            items:
                              type: string
                            type: array
                          applicationNamespaces:
                            description: Application namespaces is a list of namespaces
                              that are bound to the slice
                            items:
                              type: string
                            type: array
                          isolationEnabled:
                            default: false
                            description: Enable Namespace Isolation in the slice
                            type: boolean
                        type: object
                      qosProfileDetails:
                        description: QOS profile details
                        properties:
                          bandwidthCeilingKbps:
                            description: Bandwidth Ceiling eg:5000
                            type: integer
                          bandwidthGuaranteedKbps:
                            description: Bandwidth Guaranteed eg:4000
                            type: integer
                          dscpClass:
                            description: DSCP code for inter cluster traffic
                            type: string
                          priority:
                            description: Priority 0-3
                            type: integer
                          queueType:
                            description: Queue Type
                            type: string
                          tcType:
                            description: TC type
                            type: string
                        type: object
                      sliceDisplayName:
                        description: display name of the slice.
                        type: string
                      sliceGatewayProtocol:
                        description: 'SliceGateway Protocol Type: UDP or TCP'
                        type: string
                      sliceGatewayServiceType:
                        description: SliceGateway Service Type
                        type: string
                      sliceId:
                        description: UUID of the slice.
                        type: string
                      sliceIpam:
                        description: IPAM configuration for the slice
                        properties:
                          ipamClusterOctet:
                            description: Cluster specific octet for IPAM root subnet
                            type: integer
                          sliceIpamType:
                            description: IPAM Type for slice
                            type: string
                        required:
                        - sliceIpamType
                        type: object
                      sliceOverlayNetworkDeploymentMode:
                        description: 'Slice overlay network deployment mode: single-network,
                          multi-network or no-network'
                        enum:
                        - single-network
                        - multi-network
                        - no-network
                        type: string
                      sliceSubnet:
                        description: IP subnet range of the slice.
                        type: string
                      sliceType:
                        description: Type of the slice.
                        type: string
                    required:
                    - sliceDisplayName
                    - sliceId
                    - sliceType
                    type: object
                type: object
            type: object
        served: true
        storage: true
        subresources:
          status: {}
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []
---
# Source: kubeslice-worker/templates/kubeslice-postdelete-hook.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubeslice-postdelete-job
  namespace: default
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/version: "1.3.0"
    helm.sh/chart: "kubeslice-worker-1.3.0"
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
data:
  kubeslice-cleanup.sh: |-
    #!/usr/bin/env bash
    NAMESPACES=(spire kubeslice-system)
    for ns in ${NAMESPACES[@]}
    do
      kubectl get ns $ns -o name  
      if [[ $? -eq 1 ]]; then
          echo "$ns namespace was deleted successfully"
          continue
      fi
      echo "finding and removing spiffeids in namespace $ns ..."
      for item in $(kubectl get spiffeid.spiffeid.spiffe.io -n $ns -o name); do
        echo "removing item $item"
        kubectl patch $item -p '{"metadata":{"finalizers":null}}' --type=merge -n $ns
        kubectl delete $item --ignore-not-found -n $ns
      done
    done
---
# Source: kubeslice-worker/charts/nsm/charts/config/templates/nsm-crd-upgrade-preinstall-hook.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nsm-install-crds
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
  labels:
    app.kubernetes.io/name: kubeslice
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - "apiextensions.k8s.io"
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - patch
      - update
      - create
---
# Source: kubeslice-worker/charts/nsm/charts/config/templates/nsm-webhook-predelete-hook.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nsm-delete-webhooks
  annotations:
    "helm.sh/hook": pre-delete,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-1"
  labels:
    app.kubernetes.io/name: kubeslice
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
  - apiGroups:
      - "admissionregistration.k8s.io"
    resources:
      - mutatingwebhookconfigurations
    verbs:
      - get
      - list
      - delete
---
# Source: kubeslice-worker/charts/nsm/charts/spire/templates/spire-crd-upgrade-preinstall-hook.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: spire-install-crds
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
  labels:
    app.kubernetes.io/name: kubeslice
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - "apiextensions.k8s.io"
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - patch
      - update
      - create
---
# Source: kubeslice-worker/charts/nsm/charts/spire/templates/spire-install-clusterspiffeid-template.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: spire-install-clusterid-cr
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
  labels:
    app.kubernetes.io/name: kubeslice
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - "spire.spiffe.io"
    resources:
      - "clusterspiffeids"
    verbs:
      - get
      - list
      - patch
      - update
      - create
---
# Source: kubeslice-worker/templates/cleanUp.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubeslice-cleanup
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
  labels:
    app.kubernetes.io/name: kubeslice
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - patch
      - update
      - create
      - delete
---
# Source: kubeslice-worker/templates/kubeslice-apply-crd-pre-install-hook.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubeslice-install-crds
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
  labels:
    app.kubernetes.io/name: kubeslice
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - "apiextensions.k8s.io"
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - patch
      - update
      - create
---
# Source: kubeslice-worker/templates/kubeslice-postdelete-hook.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubeslice-postdelete-job
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-1"
  labels:
    app.kubernetes.io/name: kubeslice
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - namespaces
    verbs:
      - get
      - list
  - apiGroups: ["spiffeid.spiffe.io"]
    resources: ["spiffeids"]
    verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
  - apiGroups: ["spiffeid.spiffe.io"]
    resources: ["spiffeids/status"]
    verbs: ["get", "patch", "update"]
---
# Source: kubeslice-worker/charts/nsm/charts/config/templates/nsm-crd-upgrade-preinstall-hook.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nsm-install-crds
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
  labels:
    app.kubernetes.io/name: kubeslice
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nsm-install-crds
subjects:
  - kind: ServiceAccount
    name: nsm-install-crds
    namespace: default
---
# Source: kubeslice-worker/charts/nsm/charts/config/templates/nsm-webhook-predelete-hook.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nsm-delete-webhooks
  annotations:
    "helm.sh/hook": pre-delete,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-1"
  labels:
    app.kubernetes.io/name: kubeslice
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nsm-delete-webhooks
subjects:
  - kind: ServiceAccount
    name: nsm-delete-webhooks
    namespace: default
---
# Source: kubeslice-worker/charts/nsm/charts/spire/templates/spire-crd-upgrade-preinstall-hook.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: spire-install-crds
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
  labels:
    app.kubernetes.io/name: kubeslice
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: spire-install-crds
subjects:
  - kind: ServiceAccount
    name: spire-install-crds
    namespace: default
---
# Source: kubeslice-worker/charts/nsm/charts/spire/templates/spire-install-clusterspiffeid-template.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: spire-install-clusterid-cr
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
  labels:
    app.kubernetes.io/name: kubeslice
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: spire-install-clusterid-cr
subjects:
  - kind: ServiceAccount
    name: spire-install-clusterid-cr
    namespace: default
---
# Source: kubeslice-worker/templates/cleanUp.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubeslice-cleanup
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
  labels:
    app.kubernetes.io/name: kubeslice
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubeslice-cleanup
subjects:
  - kind: ServiceAccount
    name: kubeslice-cleanup
    namespace: default
---
# Source: kubeslice-worker/templates/kubeslice-apply-crd-pre-install-hook.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubeslice-install-crds
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "1"
  labels:
    app.kubernetes.io/name: kubeslice
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nsm-install-crds
subjects:
  - kind: ServiceAccount
    name: kubeslice-install-crds
    namespace: default
---
# Source: kubeslice-worker/templates/kubeslice-postdelete-hook.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubeslice-postdelete-job
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-1"
  labels:
    app.kubernetes.io/name: kubeslice
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubeslice-postdelete-job
subjects:
  - kind: ServiceAccount
    name: kubeslice-postdelete-job
    namespace: default
---
# Source: kubeslice-worker/charts/nsm/charts/config/templates/nsm-crd-upgrade-preinstall-hook.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: nsm-install-crds
  namespace:  default
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook-weight": "2"
  labels:
    app.kubernetes.io/name: nsm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  backoffLimit: 3
  template:
    metadata:
      name: nsm-install-crds
      namespace: default
    spec:
      serviceAccountName: nsm-install-crds
      containers:
        - name: kubectl
          image: "alpine/k8s:1.22.9"
          command:
            - /bin/sh
            - -c
            - kubectl apply -f /tmp
          volumeMounts:
            - mountPath: /tmp
              name: crds
      volumes:
        - name: crds
          configMap:
            name: nsm-crd-install
      restartPolicy: OnFailure
---
# Source: kubeslice-worker/charts/nsm/charts/config/templates/nsm-webhook-predelete-hook.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: nsm-delete-webhooks
  namespace:  default
  annotations:
    "helm.sh/hook": pre-delete,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook-weight": "2"
  labels:
    app.kubernetes.io/name: nsm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  backoffLimit: 3
  template:
    metadata:
      name: nsm-delete-webhooks
      namespace: default
    spec:
      serviceAccountName: nsm-delete-webhooks
      containers:
        - name: kubectl
          image: "alpine/k8s:1.22.9"
          command:
            - /bin/bash
            - /tmp/delete-admission-webhook.sh
          volumeMounts:
            - mountPath: /tmp
              name: nsm-delete-webhooks
      volumes:
        - name: nsm-delete-webhooks
          configMap:
            name: nsm-delete-webhooks
      restartPolicy: OnFailure
---
# Source: kubeslice-worker/charts/nsm/charts/spire/templates/spire-crd-upgrade-preinstall-hook.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: spire-install-crds
  namespace:  default
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook-weight": "2"
  labels:
    app.kubernetes.io/name: spire 
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  backoffLimit: 3
  template:
    metadata:
      name: spire-install-crds
      namespace: default
    spec:
      serviceAccountName: spire-install-crds
      containers:
        - name: kubectl
          image: "alpine/k8s:1.22.9"
          command:
            - /bin/sh
            - -c
            - kubectl apply -f /tmp/crds.yaml
          volumeMounts:
            - mountPath: /tmp
              name: crds
      volumes:
        - name: crds
          configMap:
            name: spire-crd-install
            items:
            - key: "crds.yaml"
              path: "crds.yaml"
      restartPolicy: OnFailure
---
# Source: kubeslice-worker/charts/nsm/charts/spire/templates/spire-install-clusterspiffeid-template.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: spire-install-clusterid-cr
  namespace:  default
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook-weight": "999"
  labels:
    app.kubernetes.io/name: spire
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  backoffLimit: 5
  template:
    metadata:
      name: spire-install-clusterid-cr
      namespace: default
    spec:
      serviceAccountName: spire-install-clusterid-cr
      containers:
        - name: kubectl
          image: "alpine/k8s:1.22.9"
          command:
            - /bin/sh
            - -c
            - kubectl apply -f /tmp/cr.yaml
          volumeMounts:
            - mountPath: /tmp
              name: cr
      volumes:
        - name: cr
          configMap:
            name: spire-clusterid-cr-install
            items:
            - key: "cr.yaml"
              path: "cr.yaml"
      restartPolicy: OnFailure
---
# Source: kubeslice-worker/templates/cleanUp.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kubeslice-cleanup
  namespace:  default
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
    "helm.sh/hook-weight": "2"
  labels:
    app.kubernetes.io/name: nsm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  backoffLimit: 3
  template:
    metadata:
      name: kubeslice-cleanup
      namespace: default
    spec:
      serviceAccountName: kubeslice-cleanup
      containers:
        - name: kubectl
          image: "alpine/k8s:1.22.9"
          command:
            - /bin/sh
            - -c
            - kubectl delete cm nsm-config --ignore-not-found -n default
      restartPolicy: OnFailure
---
# Source: kubeslice-worker/templates/kubeslice-apply-crd-pre-install-hook.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kubeslice-install-crds
  namespace:  default
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook-weight": "2"
  labels:
    app.kubernetes.io/name: nsm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  backoffLimit: 3
  template:
    metadata:
      name: kubeslice-install-crds
      namespace: default
    spec:
      serviceAccountName: kubeslice-install-crds
      containers:
        - name: kubectl
          image: "alpine/k8s:1.22.9"
          command:
            - /bin/sh
            - -c
            - kubectl apply -f /tmp
          volumeMounts:
            - mountPath: /tmp
              name: crds
      volumes:
        - name: crds
          configMap:
            name: kubeslice-install-crds
      restartPolicy: OnFailure
---
# Source: kubeslice-worker/templates/kubeslice-postdelete-hook.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kubeslice-postdelete-job
  namespace:  default
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook-weight": "2"
  labels:
    app.kubernetes.io/name: nsm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  backoffLimit: 3
  template:
    metadata:
      name: kubeslice-postdelete-job
      namespace: default
    spec:
      serviceAccountName: kubeslice-postdelete-job
      containers:
        - name: kubectl
          image: "alpine/k8s:1.22.9"
          command:
            - /bin/bash
            - /tmp/kubeslice-cleanup.sh
          volumeMounts:
            - mountPath: /tmp
              name: kubeslice-cleanup
      volumes:
        - name: kubeslice-cleanup
          configMap:
            name: kubeslice-postdelete-job
      restartPolicy: OnFailure
