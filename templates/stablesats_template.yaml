---
# Source: stablesats/charts/postgresql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-11.9.6
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  password: "c3RhYmxlc2F0cw=="
  # We don't auto-generate LDAP password when it's not provided as we do for other passwords
---
# Source: stablesats/templates/stablesats-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-stablesats
  labels:
    app: release-name-stablesats
    chart: "stablesats-0.18.5"
    release: "release-name"
type: Opaque
data:
  pg-con: 
  okex-secret-key: 
  okex-passphrase: 
  galoy-phone-code: 
  bria-profile-api-key:
---
# Source: stablesats/templates/stablesats-dealer-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-stablesats-dealer
data:
  stablesats.yml: |-
    db:
      pool_size: 20
      migrate_on_startup: true
    exchanges:
      okex:
        weight: 1.0
        config:
          poll_frequency: 10
          client:
            api_key: 
            simulated: true
    price_server:
      enabled: false
    user_trades:
      enabled: true
      config:
        balance_publish_frequency: 5
        galoy_poll_frequency: 10
    hedging:
      enabled: true
      config:
        health:
          unhealthy_msg_interval_position: 30
          unhealthy_msg_interval_liability: 30
          unhealthy_msg_interval_price: 30
    galoy:
      api: https://api.staging.galoy.io/graphql
      phone_number: +50365055530
    tracing:
      service_name: stablesats-dealer
      host: localhost
      port: 4318
    bria:
      url: http://bria-api.default.svc.cluster.local:2742
      wallet_name: dev-wallet
      payout_queue_name: dev-queue
      onchain_address_external_id: dev-onchain-address
---
# Source: stablesats/templates/stablesats-price-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-stablesats-price
data:
  stablesats.yml: |-
    exchanges:
      okex:
        weight: 1.0
    price_server:
      enabled: true
      server:
        listen_port: 3325
      fees:
        base_fee_rate: 0.001
        immediate_fee_rate: 0.0015
        delayed_fee_rate: 0.001
      price_cache:
        stale_after: 40
      health:
        unhealthy_msg_interval_price: 30
    user_trades:
      enabled: false
    hedging:
      enabled: false
    tracing:
      service_name: stablesats-price
      host: localhost
      port: 4318
---
# Source: stablesats/charts/postgresql/templates/primary/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql-hl
  namespace: "default"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-11.9.6
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
    # Use this annotation in addition to the actual publishNotReadyAddresses
    # field below because the annotation will stop being respected soon but the
    # field is broken in some versions of Kubernetes:
    # https://github.com/kubernetes/kubernetes/issues/58662
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  clusterIP: None
  # We want all pods in the StatefulSet to have their addresses published for
  # the sake of the other Postgresql pods even before they're ready, since they
  # have to be able to talk to each other in order to become ready.
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: primary
---
# Source: stablesats/charts/postgresql/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-11.9.6
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
      nodePort: null
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: primary
---
# Source: stablesats/templates/stablesats-price-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-stablesats-price
  labels:
    app: release-name-stablesats-price
    chart: "stablesats-0.18.5"
    release: "release-name"
spec:
  type: ClusterIP
  ports:
  - port: 3325
    targetPort: 3325
    protocol: TCP
    name: http
  selector:
    app: release-name-stablesats-price
---
# Source: stablesats/templates/stablesats-dealer-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-stablesats-dealer
  labels:
    app: release-name-stablesats-dealer
    chart: "stablesats-0.18.5"
    release: "release-name"
    kube-monkey/identifier: release-name-stablesats-dealer
    kube-monkey/enabled: enabled
    kube-monkey/kill-mode: fixed
    kube-monkey/kill-value: "1"
    kube-monkey/mtbf: "3"
spec:
  selector:
    matchLabels:
      app: release-name-stablesats-dealer
      release: release-name
  replicas: 1
  template:
    metadata:
      labels:
        app: release-name-stablesats-dealer
        release: "release-name"
        kube-monkey/identifier: release-name-stablesats-dealer
        kube-monkey/enabled: enabled
      annotations:
        checksum/config: 2afbf9b36dba536c2e24e9245d080cf8496c56601e1f83c0e768acc3cb77958f
    spec:
      containers:
      - name: stablesats
        image: "us.gcr.io/galoy-org/stablesats-rs@sha256:2e1fc621f41a3e7b7df6682df82538bb78fb3b6ed36f4c06f2ce898f3b10c6a1"
        args:
        - stablesats
        - run
        volumeMounts:
        - name: "config"
          mountPath: "/stablesats.yml"
          subPath: "stablesats.yml"
        startupProbe:
          httpGet:
            path: /health/startup
            port: 8080
          periodSeconds: 2
          failureThreshold: 30
          timeoutSeconds: 1
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8080
          periodSeconds: 10
          failureThreshold: 6
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
          periodSeconds: 10
          failureThreshold: 6
          timeoutSeconds: 1
        env:
        - name: CRASH_REPORT_CONFIG
          value: 'false'
        - name: MIGRATE_TO_UNIFIED_DB
          value: ''
        - name: STABLESATS_CONFIG
          value: "/stablesats.yml"
        - name: GALOY_PHONE_CODE
          valueFrom:
            secretKeyRef:
              name: release-name-stablesats
              key: "galoy-phone-code"
        - name: PG_CON
          valueFrom:
            secretKeyRef:
              name: release-name-stablesats
              key: "pg-con"
        - name: OKEX_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: release-name-stablesats
              key: "okex-secret-key"
        - name: OKEX_PASSPHRASE
          valueFrom:
            secretKeyRef:
              name: release-name-stablesats
              key: "okex-passphrase"
        - name: BRIA_PROFILE_API_KEY
          valueFrom:
            secretKeyRef:
              name: release-name-stablesats
              key: "bria-profile-api-key"
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        resources:
          {}
      volumes:
      - name: config
        configMap:
          name: release-name-stablesats-dealer
---
# Source: stablesats/templates/stablesats-price-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-stablesats-price
  labels:
    app: release-name-stablesats-price
    chart: "stablesats-0.18.5"
    release: "release-name"
    kube-monkey/identifier: release-name-stablesats-price
    kube-monkey/enabled: enabled
    kube-monkey/kill-mode: fixed
    kube-monkey/kill-value: "1"
    kube-monkey/mtbf: "3"
spec:
  selector:
    matchLabels:
      app: release-name-stablesats-price
      release: release-name
  replicas: 2
  template:
    metadata:
      labels:
        app: release-name-stablesats-price
        release: "release-name"
        kube-monkey/identifier: release-name-stablesats-price
        kube-monkey/enabled: enabled
      annotations:
        checksum/config: 88320a74c1849c7dd18323ac24d61f7550c691f59a940c5681059d04c6df46eb
    spec:
      containers:
      - name: stablesats
        image: "us.gcr.io/galoy-org/stablesats-rs@sha256:2e1fc621f41a3e7b7df6682df82538bb78fb3b6ed36f4c06f2ce898f3b10c6a1"
        ports:
        - containerPort: 3325
        args:
        - stablesats
        - run
        volumeMounts:
        - name: "config"
          mountPath: "/stablesats.yml"
          subPath: "stablesats.yml"
        startupProbe:
          httpGet:
            path: /health/startup
            port: 8080
          periodSeconds: 2
          failureThreshold: 30
          timeoutSeconds: 1
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8080
          periodSeconds: 10
          failureThreshold: 6
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
          periodSeconds: 10
          failureThreshold: 6
          timeoutSeconds: 1
        env:
        - name: CRASH_REPORT_CONFIG
          value: 'false'
        - name: STABLESATS_CONFIG
          value: "/stablesats.yml"
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        resources:
          {}
      volumes:
      - name: config
        configMap:
          name: release-name-stablesats-price
---
# Source: stablesats/charts/postgresql/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-11.9.6
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  replicas: 1
  serviceName: release-name-postgresql-hl
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: primary
  template:
    metadata:
      name: release-name-postgresql
      labels:
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-11.9.6
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: primary
      annotations:
    spec:
      serviceAccountName: default
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: postgresql
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: primary
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      hostNetwork: false
      hostIPC: false
      initContainers:
      containers:
        - name: postgresql
          image: docker.io/bitnami/postgresql:14.5.0-debian-11-r21
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: "/bitnami/postgresql"
            - name: PGDATA
              value: "/bitnami/postgresql/data"
            # Authentication
            - name: POSTGRES_USER
              value: "stablesats"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-postgresql
                  key: password
            - name: POSTGRES_DB
              value: "stablesats"
            # Replication
            # Initdb
            # Standby
            # LDAP
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            # TLS
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            # Audit
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            # Others
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: "error"
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: "pgaudit"
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "stablesats" -d "dbname=stablesats" -h 127.0.0.1 -p 5432
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                
                - |
                  exec pg_isready -U "stablesats" -d "dbname=stablesats" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
          resources:
            limits: {}
            requests:
              cpu: 250m
              memory: 256Mi
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /bitnami/postgresql
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
