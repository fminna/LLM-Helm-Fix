---
# Source: jenkins-x-minimal/charts/tekton/templates/101-podsecuritypolicy.yaml
# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: tekton-pipelines
spec:
  privileged: false
  allowPrivilegeEscalation: false
  volumes:
  - 'emptyDir'
  - 'configMap'
  - 'secret'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'RunAsAny'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
    - min: 1
      max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
    - min: 1
      max: 65535
---
# Source: jenkins-x-minimal/charts/gcactivities/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-gcactivities
  labels:
    app: gcactivities
    chart: gcactivities-1.3.1116
    release: release-name
    heritage: Helm
---
# Source: jenkins-x-minimal/charts/gcpods/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-gcpods
  labels:
    app: gcpods
    chart: gcpods-1.3.1116
    release: release-name
    heritage: Helm
---
# Source: jenkins-x-minimal/charts/gcpreviews/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-gcpreviews
  labels:
    app: gcpreviews
    chart: gcpreviews-1.3.1116
    release: release-name
    heritage: Helm
---
# Source: jenkins-x-minimal/charts/prow/templates/build-sa.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: prow-build
---
# Source: jenkins-x-minimal/charts/prow/templates/buildnum-sa.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: buildnum
---
# Source: jenkins-x-minimal/charts/prow/templates/crier-sa.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: crier
---
# Source: jenkins-x-minimal/charts/prow/templates/deck-sa.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: deck
---
# Source: jenkins-x-minimal/charts/prow/templates/hook-sa.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: hook
---
# Source: jenkins-x-minimal/charts/prow/templates/horologium-sa.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: horologium
---
# Source: jenkins-x-minimal/charts/prow/templates/pipeline-sa.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: pipeline
---
# Source: jenkins-x-minimal/charts/prow/templates/plank-sa.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: plank
---
# Source: jenkins-x-minimal/charts/prow/templates/sinker-sa.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: sinker
---
# Source: jenkins-x-minimal/charts/prow/templates/tide-sa.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: tide
---
# Source: jenkins-x-minimal/charts/tekton/templates/250-serviceaccount.yaml
# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tekton-pipelines
---
# Source: jenkins-x-minimal/charts/tekton/templates/251-bot-serviceaccount.yaml
# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tekton-bot
secrets:
---
# Source: jenkins-x-minimal/charts/chartmuseum/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-chartmuseum
  annotations:
    jenkins.io/credentials-keybinding-password: BASIC_AUTH_PASS
    jenkins.io/credentials-keybinding-username: BASIC_AUTH_USER
  labels:
    jenkins.io/credentials-type: usernamePassword
    app: chartmuseum
    chart: chartmuseum-1.1.5
    heritage: "Helm"
    release: "release-name"
type: Opaque
data:
  BASIC_AUTH_PASS: YWRtaW4=
  BASIC_AUTH_USER: YWRtaW4=
---
# Source: jenkins-x-minimal/charts/prow/templates/hmacsecret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hmac-token
  labels:
    app: release-name-prow
    chart: "prow-0.0.679"
    release: "release-name"
    heritage: "Helm"
type: Opaque
data:  
  hmac: ""
---
# Source: jenkins-x-minimal/charts/prow/templates/oauthsecret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: oauth-token
  labels:
    app: release-name-prow
    chart: "prow-0.0.679"
    release: "release-name"
    heritage: "Helm"
type: Opaque
data:  
  oauth: ""
---
# Source: jenkins-x-minimal/charts/tekton/templates/config-artifact-bucket.yaml
# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-artifact-bucket
data:
  # location of the gcs bucket to be used for artifact storage
  # location: "gs://bucket-name"

  # name of the secret that will contain the credentials for the service account
  # with access to the bucket
  # bucket.service.account.secret.name: 

  # The key in the secret with the required service account json
  # bucket.service.account.secret.key:
---
# Source: jenkins-x-minimal/charts/tekton/templates/config-entrypoint.yaml
# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-entrypoint
data:
  # entrypoint image which will used by taskrun to capture logs
  image: "gcr.io/k8s-prow/entrypoint@sha256:7c7cd8906ce4982ffee326218e9fc75da2d4896d53cabc9833b9cc8d2d6b2b8f"
---
# Source: jenkins-x-minimal/charts/tekton/templates/config-logging.yaml
# Copyright 2018 Knative Authors LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-logging
data:
  # Common configuration for all knative codebase
  zap-logger-config: |
    {
      "level": "info",
      "development": false,
      "sampling": {
        "initial": 100,
        "thereafter": 100
      },
      "outputPaths": ["stdout"],
      "errorOutputPaths": ["stderr"],
      "encoding": "json",
      "encoderConfig": {
        "timeKey": "",
        "levelKey": "level",
        "nameKey": "logger",
        "callerKey": "caller",
        "messageKey": "msg",
        "stacktraceKey": "stacktrace",
        "lineEnding": "",
        "levelEncoder": "",
        "timeEncoder": "",
        "durationEncoder": "",
        "callerEncoder": ""
      }
    }

  # Log level overrides
  loglevel.controller: "info"
  loglevel.webhook: "info"
---
# Source: jenkins-x-minimal/templates/controller-team-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-team-controller"
data:
  myvalues.yaml: |-
    # disable stuff
    controllerteam:
      enabled: false
    pipelinecontroller:
      enabled: false
    monocular:
      enabled: false

    # service link nexus
    nexus:
      enabled: false
    nexusServiceLink:
      enabled: true
      externalName: "nexus.jx.svc.cluster.local"

    # service link chartmuseum
    chartmuseum:
      enabled: false
    chartmuseumServiceLink:
      enabled: true
      externalName: "jenkins-x-chartmuseum.jx.svc.cluster.local"
---
# Source: jenkins-x-minimal/templates/jenkins-x-devpod-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-devpod-config"
data:
  versions: |-
    theia: 0.3.14
---
# Source: jenkins-x-minimal/templates/jenkins-x-docker-registry.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: jenkins-x-docker-registry
  annotations:
    expose.config.fabric8.io/clusterip-port-if-empty-key: docker.registry
data:
  docker.registry: gcr.io
---
# Source: jenkins-x-minimal/templates/jenkins-x-extensions-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "jenkins-x-extensions"
data:  
  knownRepositories: |
    repositories:
    - chart: {}
      github: jenkins-x/jenkins-x-extensions
  repository: |
    chart: {}
    github: jenkins-x/jenkins-x-extensions
---
# Source: jenkins-x-minimal/charts/chartmuseum/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-chartmuseum
  labels:
    app: release-name-chartmuseum
    release: "release-name"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: jenkins-x-minimal/charts/prow/templates/prowjobs-crd.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: prowjobs.prow.k8s.io
spec:
  group: prow.k8s.io
  version: v1
  names:
    kind: ProwJob
    singular: prowjob
    plural: prowjobs
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            max_concurrency:
              type: integer
              minimum: 0
            type:
              type: string
              enum:
              - "presubmit"
              - "postsubmit"
              - "periodic"
              - "batch"
        status:
          properties:
            state:
              type: string
              enum:
              - "triggered"
              - "pending"
              - "success"
              - "failure"
              - "aborted"
              - "error"
          anyOf:
          - not:
              properties:
                state:
                  type: string
                  enum:
                  - "success"
                  - "failure"
                  - "error"
                  - "aborted"
          - required:
            - completionTime
---
# Source: jenkins-x-minimal/charts/tekton/templates/300-clustertask.yaml
# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: clustertasks.tekton.dev
spec:
  group: tekton.dev
  names:
    kind: ClusterTask
    plural: clustertasks
    categories:
    - all
    - tekton-pipelines
  scope: Cluster
  # Opt into the status subresource so metadata.generation
  # starts to increment
  subresources:
    status: {}
  version: v1alpha1
---
# Source: jenkins-x-minimal/charts/tekton/templates/300-pipeline.yaml
# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: pipelines.tekton.dev
spec:
  group: tekton.dev
  names:
    kind: Pipeline
    plural: pipelines
    categories:
    - all
    - tekton-pipelines
  scope: Namespaced
  # Opt into the status subresource so metadata.generation
  # starts to increment
  subresources:
    status: {}
  version: v1alpha1
---
# Source: jenkins-x-minimal/charts/tekton/templates/300-pipelinerun.yaml
# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: pipelineruns.tekton.dev
spec:
  group: tekton.dev
  names:
    kind: PipelineRun
    plural: pipelineruns
    categories:
    - all
    - tekton-pipelines
  scope: Namespaced
  # Opt into the status subresource so metadata.generation
  # starts to increment
  subresources:
    status: {}
  version: v1alpha1
---
# Source: jenkins-x-minimal/charts/tekton/templates/300-resource.yaml
# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: pipelineresources.tekton.dev
spec:
  group: tekton.dev
  names:
    kind: PipelineResource
    plural: pipelineresources
    categories:
    - all
    - tekton-pipelines
  scope: Namespaced
  # Opt into the status subresource so metadata.generation
  # starts to increment
  subresources:
    status: {}
  version: v1alpha1
---
# Source: jenkins-x-minimal/charts/tekton/templates/300-task.yaml
# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: tasks.tekton.dev
spec:
  group: tekton.dev
  names:
    kind: Task
    plural: tasks
    categories:
    - all
    - tekton-pipelines
  scope: Namespaced
  # Opt into the status subresource so metadata.generation
  # starts to increment
  subresources:
    status: {}
  version: v1alpha1
---
# Source: jenkins-x-minimal/charts/tekton/templates/300-taskrun.yaml
# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: taskruns.tekton.dev
spec:
  group: tekton.dev
  names:
    kind: TaskRun
    plural: taskruns
    categories:
    - all
    - tekton-pipelines
  scope: Namespaced
  # Opt into the status subresource so metadata.generation
  # starts to increment
  subresources:
    status: {}
  version: v1alpha1
---
# Source: jenkins-x-minimal/charts/gcactivities/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gcactivities-default
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - create
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - delete
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
---
# Source: jenkins-x-minimal/charts/gcpreviews/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gcpreviews-default
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - delete
- apiGroups:
  - ""
  resources:
  - pods
  - pods/portforward
  verbs:
  - get
  - delete
  - list
  - create
---
# Source: jenkins-x-minimal/charts/prow/templates/build-clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: prow-build
rules:
- apiGroups:
  - build.knative.dev
  resources:
  - builds
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - prow.k8s.io
  resources:
  - prowjobs
  verbs:
  - get
  - list
  - watch
  - update
---
# Source: jenkins-x-minimal/charts/prow/templates/crier-clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: crier
rules:
- apiGroups:
  - prow.k8s.io
  resources:
  - prowjobs
  verbs:
  - get
  - list
  - watch
  - update
  - patch
---
# Source: jenkins-x-minimal/charts/prow/templates/pipeline-clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pipeline
rules:
- apiGroups:
  - tekton.dev
  resources:
  - pipelineruns
  - pipelineresources
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - prow.k8s.io
  resources:
  - prowjobs
  verbs:
  - get
  - list
  - watch
  - update
  - patch
---
# Source: jenkins-x-minimal/charts/tekton/templates/200-clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: tekton-pipelines
rules:
  - apiGroups: [""]
    resources: ["pods", "namespaces", "secrets", "events", "serviceaccounts", "configmaps", "persistentvolumeclaims"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["apps"]
    resources: ["deployments/finalizers"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["mutatingwebhookconfigurations"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["tekton.dev"]
    resources: ["tasks/status", "clustertasks/status", "taskruns/status", "pipelines/status", "pipelineruns/status", "pipelineresources/status"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["tekton.dev"]
    resources: ["tasks", "clustertasks", "taskruns", "pipelines", "pipelineruns", "pipelineresources"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["tekton.dev"]
    resources: ["taskruns/finalizers", "pipelineruns/finalizers"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["policy"]
    resources: ["podsecuritypolicies"]
    resourceNames: ["tekton-pipelines"]
    verbs: ["use"]
---
# Source: jenkins-x-minimal/charts/tekton/templates/build-bot-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tekton-bot
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - create
  - get
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - create
  - get
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
---
# Source: jenkins-x-minimal/charts/gcactivities/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gcactivities-default
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gcactivities-default
subjects:
- kind: ServiceAccount
  name: release-name-gcactivities
  namespace: default
---
# Source: jenkins-x-minimal/charts/gcpreviews/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gcpreviews-default
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gcpreviews-default
subjects:
- kind: ServiceAccount
  name: release-name-gcpreviews
  namespace: default
---
# Source: jenkins-x-minimal/charts/prow/templates/build-clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: prow-build-default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prow-build
subjects:
- kind: ServiceAccount
  name: prow-build
  namespace: default
---
# Source: jenkins-x-minimal/charts/prow/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-admin-binding-default
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: james-foo
---
# Source: jenkins-x-minimal/charts/prow/templates/crier-clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: crier-default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: crier
subjects:
- kind: ServiceAccount
  name: crier
  namespace: default
---
# Source: jenkins-x-minimal/charts/prow/templates/pipeline-clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pipeline-default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pipeline
subjects:
- kind: ServiceAccount
  name: pipeline
  namespace: default
---
# Source: jenkins-x-minimal/charts/tekton/templates/200-clusterrolebinding.yaml
# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name:  tekton-pipelines-default
subjects:
  - kind: ServiceAccount
    name: tekton-pipelines
    namespace: default
roleRef:
  kind: ClusterRole
  name:  tekton-pipelines
  apiGroup: rbac.authorization.k8s.io
---
# Source: jenkins-x-minimal/charts/tekton/templates/build-bot-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tekton-bot-default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  # name: tekton-bot
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: tekton-bot
  namespace: default
---
# Source: jenkins-x-minimal/templates/controller-team-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jenkins-x-team-controller
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: jenkins-x-controllerteam
  namespace: default
---
# Source: jenkins-x-minimal/charts/gcactivities/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gcactivities
rules:
- apiGroups:
  - jenkins.io
  resources:
  - pipelineactivities
  verbs:
  - list
  - delete
- apiGroups:
  - jenkins.io
  resources:
  - environments
  - plugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  - services
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
---
# Source: jenkins-x-minimal/charts/gcpods/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gcpods
rules:
- apiGroups:
  - jenkins.io
  resources:
  - environments
  - plugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - delete
  - list
---
# Source: jenkins-x-minimal/charts/gcpreviews/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gcpreviews
rules:
- apiGroups:
  - jenkins.io
  resources:
  - environments
  verbs:
  - list
  - get
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - get
  - watch
---
# Source: jenkins-x-minimal/charts/prow/templates/buildnum-role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: buildnum
rules:
  - apiGroups:
      - jenkins.io
    resources:
      - pipelineactivities
    verbs:
      - get
      - watch
      - list
      - create
      - update
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
---
# Source: jenkins-x-minimal/charts/prow/templates/crier-role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: crier
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - create
      - delete
      - list
  - apiGroups:
      - "prow.k8s.io"
    resources:
      - prowjobs
    verbs:
      - create
      - list
      - update
      - patch
---
# Source: jenkins-x-minimal/charts/prow/templates/deck-role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: deck
rules:
  - apiGroups:
      - ""
    resources:
      - pods/log
    verbs:
      - get
  - apiGroups:
      - "prow.k8s.io"
    resources:
      - prowjobs
    verbs:
      - get
      - list
---
# Source: jenkins-x-minimal/charts/prow/templates/hook-role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: hook
rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - list
    - update
    - create
    - get
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
  - apiGroups:
    - "prow.k8s.io"
    resources:
    - prowjobs
    verbs:
    - create
    - list
  - apiGroups:
    - jenkins.io
    resources:
    - pipelineactivities
    verbs:
    - create
    - list
---
# Source: jenkins-x-minimal/charts/prow/templates/horologium-role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: horologium
rules:
  - apiGroups:
      - "prow.k8s.io"
    resources:
      - prowjobs
    verbs:
      - create
      - list
---
# Source: jenkins-x-minimal/charts/prow/templates/plank-role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: plank
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - create
      - delete
      - list
  - apiGroups:
      - "prow.k8s.io"
    resources:
      - prowjobs
    verbs:
      - create
      - list
      - update
---
# Source: jenkins-x-minimal/charts/prow/templates/sinker-role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: sinker
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - delete
      - list
  - apiGroups:
      - "prow.k8s.io"
    resources:
      - prowjobs
    verbs:
      - delete
      - list
---
# Source: jenkins-x-minimal/charts/prow/templates/tide-role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: tide
rules:
  - apiGroups:
      - "prow.k8s.io"
    resources:
      - prowjobs
    verbs:
      - create
      - list
---
# Source: jenkins-x-minimal/charts/tekton/templates/build-bot-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tekton-bot
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  - services
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - get
  - delete
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
- apiGroups:
  - jenkins.io
  resources:
  - pipelineactivities
  - sourcerepositories
  verbs:
  - get
  - create
  - update
- apiGroups:
  - jenkins.io
  resources:
  - plugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - jenkins.io
  resources:
  - users
  verbs:
  - create
  - update
  - get
  - list
  - watch
- apiGroups:
  - jenkins.io
  resources:
  - releases
  verbs:
  - get
  - create
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - jenkins.io
  resources:
  - pipelineactivities
  - pipelinestructures
  verbs:
  - get
  - create
  - update
- apiGroups:
  - jenkins.io
  resources:
  - environments
  verbs:
  - create
  - list
  - get
  - patch
  - update
- apiGroups:
  - jenkins.io
  resources:
  - extensions
  verbs:
  - get
  - list
- apiGroups:
  - vault.banzaicloud.com
  resources:
  - vaults
  verbs:
  - get
  - list
  - watch
---
# Source: jenkins-x-minimal/templates/committer-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: committer
  labels:
    jenkins.io/kind: "EnvironmentRole"
  annotations:
    title: "Committer"
    description: "A committer can write to project resources but cannot add/remove users"
rules:
  - apiGroups:
    - jenkins.io
    - rbac.authorization.k8s.io
    resources:
    - "*"
    verbs:
    - list
    - get
    - watch
  - apiGroups:
    - ""
    - extensions
    - apps
    - batch
    resources:
    - "*"
    - "pods/*"
    verbs:
    - list
    - get
    - watch
    - create
    - update
    - patch
    - delete
---
# Source: jenkins-x-minimal/templates/jx-view-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: jx-view
rules:
- apiGroups:
  - jenkins.io
  resources:
  - teams
  verbs:
  - list
  - get
- apiGroups:
  - jenkins.io
  resources:
  - environments
  verbs:
  - list
  - get
- apiGroups:
  - prow.k8s.io
  resources:
  - prowjobs
  verbs:
  - create
---
# Source: jenkins-x-minimal/templates/owner-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: owner
  labels:
    jenkins.io/kind: "EnvironmentRole"
  annotations:
     title: "Team Owner"
     description: "A team owner can add/remove users and has write access to all team resources"
rules:
  - apiGroups:
    - ""
    - extensions
    - apps
    - rbac.authorization.k8s.io
    - batch
    - jenkins.io
    resources:
    - "*"
    - "pods/*"
    verbs:
    - list
    - get
    - watch
    - create
    - update
    - patch
    - delete
---
# Source: jenkins-x-minimal/templates/viewer-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: viewer
  labels:
    jenkins.io/kind: "EnvironmentRole"
  annotations:
     title: "Viewer"
     description: "A viewer can view all project resources"
rules:
  - apiGroups:
    - ""
    - jenkins.io
    - extensions
    - apps
    - rbac.authorization.k8s.io
    - batch
    resources:
    - "*"
    verbs:
    - list
    - get
    - watch
---
# Source: jenkins-x-minimal/charts/gcactivities/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gcactivities
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gcactivities
subjects:
- kind: ServiceAccount
  name: release-name-gcactivities
  namespace: default
---
# Source: jenkins-x-minimal/charts/gcpods/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gcpods
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gcpods
subjects:
- kind: ServiceAccount
  name: release-name-gcpods
  namespace: default
---
# Source: jenkins-x-minimal/charts/gcpreviews/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gcpreviews
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gcpreviews
subjects:
- kind: ServiceAccount
  name: release-name-gcpreviews
  namespace: default
---
# Source: jenkins-x-minimal/charts/prow/templates/buildnum-rb.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: buildnum
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: buildnum
subjects:
- kind: ServiceAccount
  name: buildnum
---
# Source: jenkins-x-minimal/charts/prow/templates/crier-rb.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: crier
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: crier
subjects:
- kind: ServiceAccount
  name: crier
---
# Source: jenkins-x-minimal/charts/prow/templates/deck-rb.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: deck
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: deck
subjects:
- kind: ServiceAccount
  name: deck
---
# Source: jenkins-x-minimal/charts/prow/templates/hook-rb.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: hook
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: hook
subjects:
- kind: ServiceAccount
  name: hook
---
# Source: jenkins-x-minimal/charts/prow/templates/horologium-rb.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: horologium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: horologium
subjects:
- kind: ServiceAccount
  name: horologium
---
# Source: jenkins-x-minimal/charts/prow/templates/plank-rb.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: plank
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: plank
subjects:
- kind: ServiceAccount
  name: plank
---
# Source: jenkins-x-minimal/charts/prow/templates/sinker-rb.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: sinker
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sinker
subjects:
- kind: ServiceAccount
  name: sinker
---
# Source: jenkins-x-minimal/charts/prow/templates/tide-rb.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: tide
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tide
subjects:
- kind: ServiceAccount
  name: tide
---
# Source: jenkins-x-minimal/charts/tekton/templates/build-bot-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tekton-bot
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tekton-bot
subjects:
- kind: ServiceAccount
  name: tekton-bot
  namespace: default
---
# Source: jenkins-x-minimal/charts/chartmuseum/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-chartmuseum
  annotations:
    fabric8.io/expose: "true"
    fabric8.io/ingress.annotations: 'kubernetes.io/ingress.class: nginx'
  labels:
    app: chartmuseum
    chart: chartmuseum-1.1.5
    heritage: "Helm"
    release: "release-name"
  annotations:
    fabric8.io/expose: "true"
    fabric8.io/ingress.annotations: 'kubernetes.io/ingress.class: nginx'
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: chartmuseum
    release: "release-name"
---
# Source: jenkins-x-minimal/charts/prow/templates/buildnum-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: buildnum
spec:
  type: ClusterIP
  selector:
    app: buildnum
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
---
# Source: jenkins-x-minimal/charts/prow/templates/deck-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: deck
  annotations:
    fabric8.io/expose: "true"
    fabric8.io/ingress.annotations: |-
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/auth-type: basic
      nginx.ingress.kubernetes.io/auth-secret: jx-basic-auth
spec:
  type: ClusterIP
  selector:
    app: deck
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
---
# Source: jenkins-x-minimal/charts/prow/templates/hook-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hook
  annotations:
    fabric8.io/expose: "true"
spec:
  type: ClusterIP
  selector:
    app: hook
  ports:
  - port: 80
    targetPort: 8888
    protocol: TCP
    name: http
---
# Source: jenkins-x-minimal/charts/prow/templates/tide-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: tide
  annotations:
    fabric8.io/expose: "true"
    fabric8.io/ingress.annotations: |-
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/auth-type: basic
      nginx.ingress.kubernetes.io/auth-secret: jx-basic-auth
spec:
  type: ClusterIP
  selector:
    app: tide
  ports:
  - port: 80
    targetPort: 8888
    protocol: TCP
    name: http
---
# Source: jenkins-x-minimal/charts/tekton/templates/400-controller-service.yaml
# Copyright 2018 Knative Authors LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Service
metadata:
  labels:
    app: tekton-pipelines-controller
  name: tekton-pipelines-controller
spec:
  ports:
  - name: metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app: tekton-pipelines-controller
---
# Source: jenkins-x-minimal/charts/tekton/templates/400-webhook-service.yaml
# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Service
metadata:
  labels:
    app: tekton-pipelines-webhook
  name: tekton-pipelines-webhook
spec:
  ports:
    - port: 443
      targetPort: 8443
  selector:
    app: tekton-pipelines-webhook
---
# Source: jenkins-x-minimal/charts/chartmuseum/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-chartmuseum
  annotations:
    {}
  labels:
    app: chartmuseum
    chart: chartmuseum-1.1.5
    heritage: "Helm"
    release: "release-name"
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  revisionHistoryLimit: 10
  template:
    metadata:
      name: release-name-chartmuseum
      annotations:
        {}
      labels:
        app: chartmuseum
        release: "release-name"
    spec:
      containers:
      - name: chartmuseum
        image: chartmuseum/chartmuseum:v0.7.1
        imagePullPolicy: IfNotPresent
        env:
        - name: "AUTH_ANONYMOUS_GET"
          value: "true"
        - name: "CHART_POST_FORM_FIELD_NAME"
          value: "chart"
        - name: "DISABLE_METRICS"
          value: "true"
        - name: "LOG_JSON"
          value: "true"
        - name: "PROV_POST_FORM_FIELD_NAME"
          value: "prov"
        - name: "STORAGE"
          value: "local"
        - name: "BASIC_AUTH_PASS"
          valueFrom:
            secretKeyRef:
              name: release-name-chartmuseum
              key: "BASIC_AUTH_PASS"
        - name: "BASIC_AUTH_USER"
          valueFrom:
            secretKeyRef:
              name: release-name-chartmuseum
              key: "BASIC_AUTH_USER"
        args:
        - --port=8080
        - --storage-local-rootdir=/storage
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /health
            port: http
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /health
            port: http
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /storage
          name: storage-volume
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 160m
            memory: 128Mi
      volumes:
      - name: storage-volume
        persistentVolumeClaim:
          claimName: release-name-chartmuseum
---
# Source: jenkins-x-minimal/charts/prow/templates/build-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: prow-build
  labels:
    app: prow-build
spec:
  replicas: 
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        ad.datadoghq.com/build.logs: '[{"source":"prow","service":"build"}]'
      labels:
        app: prow-build
    spec:
      serviceAccountName: prow-build
      terminationGracePeriodSeconds: 30
      containers:
      - name: prow-build
        args:
        - --tot-url
        - http://buildnum
        - --config
        - /etc/config/config.yaml
        image: gcr.io/jenkinsxio/prow/build:v20190510-3f2c8d788
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - mountPath: /etc/config
          name: config
          readOnly: true
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
      volumes:
      - configMap:
          defaultMode: 420
          name: config
        name: config
---
# Source: jenkins-x-minimal/charts/prow/templates/buildnum-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: buildnum
  labels:
    app: buildnum
spec:
  replicas: 1 # one canonical source of build numbers
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        ad.datadoghq.com/buildnum.logs: '[{"source":"prow","service":"buildnum"}]'
      labels:
        app: buildnum
    spec:
      serviceAccountName: buildnum
      terminationGracePeriodSeconds: 180
      containers:
      - name: buildnum
        image: jenkinsxio/jx:2.0.183
        imagePullPolicy: IfNotPresent

        command:
          - jx

        args:
          - controller
          - buildnumbers
        resources:
          limits:
            cpu: 400m
            memory: 256Mi
          requests:
            cpu: 200m
            memory: 128Mi
        ports:
          - name: http
            containerPort: 8080
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /health
            port: http
        readinessProbe:
          httpGet:
            path: /ready
            port: http
---
# Source: jenkins-x-minimal/charts/prow/templates/crier-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: crier
  labels:
    app: crier
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        ad.datadoghq.com/crier.logs: '[{"source":"prow","service":"crier"}]'
      labels:
        app: crier
    spec:
      serviceAccountName: crier
      terminationGracePeriodSeconds: 180
      containers:
      - name: crier
        image: gcr.io/jenkinsxio/prow/crier:v20190510-3f2c8d788
        imagePullPolicy: IfNotPresent

        args:
          - -gerrit-workers=0
          - -github-workers=1
          - -logtostderr
          - -config-path=/etc/config/config.yaml
          - -github-token-path=/etc/github/oauth
        resources:
          limits:
            cpu: 400m
            memory: 256Mi
          requests:
            cpu: 200m
            memory: 128Mi
        volumeMounts:
        - name: oauth
          mountPath: /etc/github
          readOnly: true
        - name: config
          mountPath: /etc/config
          readOnly: true
      volumes:
      - name: oauth
        secret:
          secretName: oauth-token
      - name: config
        configMap:
          name: config
---
# Source: jenkins-x-minimal/charts/prow/templates/deck-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: deck
  labels:
    app: deck
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        ad.datadoghq.com/deck.logs: '[{"source":"prow","service":"deck"}]'
      labels:
        app: deck
    spec:
      serviceAccountName: deck
      terminationGracePeriodSeconds: 30
      containers:
      - name: deck
        image: gcr.io/jenkinsxio/prow/deck:v20190510-3f2c8d788
        imagePullPolicy: IfNotPresent

        args:
          - --hook-url=http://hook/plugin-help
          - --tide-url=http://tide
        ports:
          - name: http
            containerPort: 8080
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 3
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8081
          initialDelaySeconds: 10
          periodSeconds: 3
          timeoutSeconds: 600
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - name: config
          mountPath: /etc/config
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: config
---
# Source: jenkins-x-minimal/charts/prow/templates/hook-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: hook
  labels:
    app: hook
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        ad.datadoghq.com/hook.logs: '[{"source":"prow","service":"hook"}]'
      labels:
        app: hook
    spec:
      serviceAccountName: hook
      terminationGracePeriodSeconds: 180
      containers:
      - name: hook
        image: gcr.io/jenkinsxio/prow/hook:v20190510-3f2c8d788
        imagePullPolicy: IfNotPresent

        args:
          - --dry-run=false
        ports:
          - name: http
            containerPort: 8888
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: http
        readinessProbe:
          httpGet:
            path: /
            port: http
        resources:
          limits:
            cpu: 400m
            memory: 256Mi
          requests:
            cpu: 200m
            memory: 128Mi
        volumeMounts:
        - name: hmac
          mountPath: /etc/webhook
          readOnly: true
        - name: oauth
          mountPath: /etc/github
          readOnly: true
        - name: config
          mountPath: /etc/config
          readOnly: true
        - name: plugins
          mountPath: /etc/plugins
          readOnly: true
      volumes:
      - name: hmac
        secret:
          secretName: hmac-token
      - name: oauth
        secret:
          secretName: oauth-token
      - name: config
        configMap:
          name: config
      - name: plugins
        configMap:
          name: plugins
---
# Source: jenkins-x-minimal/charts/prow/templates/horologium-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: horologium
  labels:
    app: horologium
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        ad.datadoghq.com/horologium.logs: '[{"source":"prow","service":"horologium"}]'
      labels:
        app: horologium
    spec:
      serviceAccountName: horologium
      terminationGracePeriodSeconds: 30
      containers:
      - name: horologium
        image: gcr.io/jenkinsxio/prow/horologium:v20190510-3f2c8d788
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - name: config
          mountPath: /etc/config
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: config
---
# Source: jenkins-x-minimal/charts/prow/templates/pipeline-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: pipeline
  labels:
    app: pipeline
spec:
  replicas: 
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        ad.datadoghq.com/pipeline.logs: '[{"source":"prow","service":"pipeline"}]'
      labels:
        app: pipeline
    spec:
      serviceAccountName: pipeline
      terminationGracePeriodSeconds: 30
      containers:
      - name: pipeline
        args:
        - --tot-url
        - http://buildnum
        - --config
        - /etc/config/config.yaml
        image: gcr.io/jenkinsxio/prow/pipeline:v20190510-3f2c8d788
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - mountPath: /etc/config
          name: config
          readOnly: true
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
      volumes:
      - configMap:
          defaultMode: 420
          name: config
        name: config
---
# Source: jenkins-x-minimal/charts/prow/templates/plank-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: plank
  labels:
    app: plank
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        ad.datadoghq.com/plank.logs: '[{"source":"prow","service":"plank"}]'
      labels:
        app: plank
    spec:
      serviceAccountName: plank
      terminationGracePeriodSeconds: 30
      containers:
      - name: plank
        image: gcr.io/jenkinsxio/prow/plank:v20190510-3f2c8d788
        imagePullPolicy: IfNotPresent

        args:
          - --dry-run=false
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - name: oauth
          mountPath: /etc/github
          readOnly: true
        - name: config
          mountPath: /etc/config
          readOnly: true
      volumes:
      - name: oauth
        secret:
          secretName: oauth-token
      - name: config
        configMap:
          name: config
---
# Source: jenkins-x-minimal/charts/prow/templates/sinker-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: sinker
  labels:
    app: sinker
spec:
  replicas: 0
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        ad.datadoghq.com/sinker.logs: '[{"source":"prow","service":"sinker"}]'
      labels:
        app: sinker
    spec:
      serviceAccountName: sinker
      terminationGracePeriodSeconds: 30
      containers:
      - name: sinker
        image: gcr.io/jenkinsxio/prow/sinker:v20190510-3f2c8d788
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - name: config
          mountPath: /etc/config
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: config
---
# Source: jenkins-x-minimal/charts/prow/templates/tide-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: tide
  labels:
    app: tide
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        ad.datadoghq.com/tide.logs: '[{"source":"prow","service":"tide"}]'
      labels:
        app: tide
    spec:
      serviceAccountName: tide
      terminationGracePeriodSeconds: 30
      containers:
      - name: tide
        image: gcr.io/jenkinsxio/prow/tide:v20190510-3f2c8d788
        imagePullPolicy: IfNotPresent

        args:
          - --dry-run=false
          - --github-endpoint=https://api.github.com
        ports:
          - name: http
            containerPort: 8888
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: http
        readinessProbe:
          httpGet:
            path: /
            port: http
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - name: oauth
          mountPath: /etc/github
          readOnly: true
        - name: config
          mountPath: /etc/config
          readOnly: true
      volumes:
      - name: oauth
        secret:
          secretName: oauth-token
      - name: config
        configMap:
          name: config
---
# Source: jenkins-x-minimal/charts/tekton/templates/controller.yaml
# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: tekton-pipelines-controller
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: tekton-pipelines-controller
    spec:
      serviceAccountName: tekton-pipelines
      containers:
      - name: tekton-pipelines
        image: gcr.io/abayer-jx-experiment/controller:v20190508-91b53326
        args: [
          "-logtostderr",
          "-stderrthreshold", "INFO",
          "-kubeconfig-writer-image", "gcr.io/abayer-jx-experiment/kubeconfigwriter:v20190508-91b53326",
          "-creds-image", "gcr.io/abayer-jx-experiment/creds-init:v20190508-91b53326",
          "-git-image", "gcr.io/abayer-jx-experiment/git-init:v20190508-91b53326",
          "-nop-image", "gcr.io/abayer-jx-experiment/nop:v20190508-91b53326",
          "-bash-noop-image", "gcr.io/abayer-jx-experiment/bash:v20190508-91b53326",
          "-gsutil-image", "gcr.io/abayer-jx-experiment/gsutil:v20190508-91b53326",
          "-entrypoint-image", "gcr.io/abayer-jx-experiment/entrypoint:v20190508-91b53326",
          "-namespace", "default",
        ]
        env:
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        volumeMounts:
        - name: config-logging
          mountPath: /etc/config-logging
      volumes:
        - name: config-logging
          configMap:
            name: config-logging
---
# Source: jenkins-x-minimal/charts/tekton/templates/webhook.yaml
# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: tekton-pipelines-webhook
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: tekton-pipelines-webhook
    spec:
      serviceAccountName: tekton-pipelines
      containers:
      - name: webhook
        # This is the Go import path for the binary that is containerized
        # and substituted here.
        image: gcr.io/abayer-jx-experiment/webhook:v20190508-91b53326
        env:
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        volumeMounts:
        - name: config-logging
          mountPath: /etc/config-logging
      volumes:
        - name: config-logging
          configMap:
            name: config-logging
---
# Source: jenkins-x-minimal/charts/gcactivities/templates/cronjob.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: release-name-gcactivities
  labels:
    app: gcactivities
    chart: gcactivities-1.3.1116
    release: release-name
    heritage: Helm
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 3
  schedule: "0/30 */3 * * *"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: gcactivities
            release: release-name
        spec:
          restartPolicy: Never
          serviceAccountName: release-name-gcactivities
          containers:
            - name: gcactivities
              command: [jx]
              args:
              - gc
              - activities
              - --batch-mode
              imagePullPolicy: IfNotPresent
              image: "jenkinsxio/jx:1.3.1116"
              env:
              - name: cheese
                value: wine
              - name: foo
                value: bar
              resources:
                {}
---
# Source: jenkins-x-minimal/charts/gcpods/templates/cronjob.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: release-name-gcpods
  labels:
    app: gcpods
    chart: gcpods-1.3.1116
    release: release-name
    heritage: Helm
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 3
  schedule: "0/30 */3 * * *"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: gcpods
            release: release-name
        spec:
          restartPolicy: Never
          serviceAccountName: release-name-gcpods
          containers:
            - name: gcpods
              command: [jx]
              args:
              - gc
              - pods
              - --batch-mode
              imagePullPolicy: IfNotPresent
              image: "jenkinsxio/jx:1.3.1116"
              env:
              - name: cheese
                value: wine
              - name: foo
                value: bar
              resources:
                {}
---
# Source: jenkins-x-minimal/charts/gcpreviews/templates/cronjob.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: release-name-gcpreviews
  labels:
    app: gcpreviews
    chart: gcpreviews-1.3.1116
    release: release-name
    heritage: Helm
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 3
  schedule: "0 */3 * * *"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: gcpreviews
            release: release-name
        spec:
          restartPolicy: Never
          serviceAccountName: release-name-gcpreviews
          containers:
            - name: gcpreviews
              command: [jx]
              args:
              - gc
              - previews
              - --batch-mode
              imagePullPolicy: IfNotPresent
              image: "gcr.io/jenkinsxio/builder-go:0.1.402"
              env:
              - name: cheese
                value: wine
              - name: foo
                value: bar
              resources:
                {}
---
# Source: jenkins-x-minimal/templates/buildpacks.yaml
apiVersion: v1
kind: List
items:
- apiVersion: jenkins.io/v1
  kind: BuildPack
  metadata:
    name: "classic-workloads"
  spec:
    label: "Library Workloads: CI+Release but no CD"
    gitUrl: "https://github.com/jenkins-x-buildpacks/jenkins-x-classic.git"
    gitRef: "master"
- apiVersion: jenkins.io/v1
  kind: BuildPack
  metadata:
    name: "kubernetes-workloads"
  spec:
    label: "Kubernetes Workloads: Automated CI+CD with GitOps Promotion"
    gitUrl: "https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes.git"
    gitRef: "master"
