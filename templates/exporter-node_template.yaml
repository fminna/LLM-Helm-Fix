---
# Source: exporter-node/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: "prometheus"
    chart: exporter-node-0.1.1
    heritage: Helm
    prometheus: release-name
    release: release-name
  name: release-name-exporter-node
data:
  node.rules: |-
    # NOTE: These rules were kindly contributed by the SoundCloud engineering team.

    cluster:node_cpu_use:percent =
      100 * sum by (cluster) (
        rate(node_cpu{mode!="idle"}[5m])
      ) / sum by (cluster) (
        machine_cpu_cores
      )

    ALERT K8SKubeletNodeExporterDown
      IF up{job="release-name-exporter-node"} == 0
      FOR 15m
      LABELS {
        service = "k8s",
        severity = "warning"
      }
      ANNOTATIONS {
        summary = "Kubelet node_exporter cannot be scraped",
        description = "Prometheus could not scrape a {{ $labels.job }} for more than one hour.",
      }

    ALERT K8SConntrackTableFull
      IF 100*node_nf_conntrack_entries / node_nf_conntrack_entries_limit > 50
      FOR 10m
      LABELS {
        service = "k8s",
        severity = "warning"
      }
      ANNOTATIONS {
        summary = "Number of tracked connections is near the limit",
        description = "The nf_conntrack table is {{ $value }}% full.",
      }

    ALERT K8SConntrackTableFull
      IF 100*node_nf_conntrack_entries / node_nf_conntrack_entries_limit > 90
      LABELS {
        service = "k8s",
        severity = "critical"
      }
      ANNOTATIONS {
        summary = "Number of tracked connections is near the limit",
        description = "The nf_conntrack table is {{ $value }}% full.",
      }

    # To catch the conntrack sysctl de-tuning when it happens
    ALERT K8SConntrackTuningMissing
      IF node_nf_conntrack_udp_timeout > 10
      FOR 10m
      LABELS {
        service = "k8s",
        severity = "warning",
      }
      ANNOTATIONS {
        summary = "Node does not have the correct conntrack tunings",
        description = "Nodes keep un-setting the correct tunings, investigate when it happens.",
      }
---
# Source: exporter-node/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-exporter-node
  labels:
    app: exporter-node
    component: node-exporter
    heritage: Helm
    release: release-name
    chart: exporter-node-0.1.1
spec:
  type: ClusterIP
  ports:
  - name: metrics
    port: 9100
    protocol: TCP
  selector:
    app: release-name-exporter-node
    component: node-exporter
    release: release-name
---
# Source: exporter-node/templates/deamonset.yaml
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    app: exporter-node
    chart: exporter-node-0.1.1
    component: node-exporter
    heritage: Helm
    release: release-name
  name: release-name-exporter-node
spec:
  template:
    metadata:
      labels:
        app: release-name-exporter-node
        component: node-exporter
        release: release-name
    spec:
      containers:
        - name: node-exporter
          image: "quay.io/prometheus/node-exporter:v0.13.0"
          imagePullPolicy: "IfNotPresent"
          args:
            - --collector.procfs=/host/proc
            - --collector.sysfs=/host/sys
          ports:
            - name: metrics
              containerPort: 9100
              hostPort: 9100
          resources:
            limits:
              cpu: 200m
              memory: 50Mi
            requests:
              cpu: 100m
              memory: 30Mi
          volumeMounts:
            - name: proc
              mountPath: /host/proc
              readOnly:  true
            - name: sys
              mountPath: /host/sys
              readOnly: true
      hostNetwork: true
      hostPID: true
      volumes:
        - name: proc
          hostPath:
            path: /proc
        - name: sys
          hostPath:
            path: /sys
---
# Source: exporter-node/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1alpha1
kind: ServiceMonitor
metadata:
  labels:
    app: prometheus
    chart: "exporter-node-0.1.1"
    component: node-exporter
    heritage: "Helm"
    release: "release-name"
    prometheus: release-name
  name: release-name-exporter-node
spec:
  jobLabel: exporter-node
  selector:
    matchLabels:
      app: exporter-node
      component: node-exporter
  namespaceSelector:
    matchNames:
      - "default"
  endpoints:
  - port: metrics
    interval: 15s
