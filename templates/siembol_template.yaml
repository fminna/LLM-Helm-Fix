---
# Source: siembol/templates/topology-manager/serviceaccount-manager.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: storm-topology-controller
---
# Source: siembol/templates/topology-manager/serviceaccount-manager.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-siembol-storm-topology-manager-role
rules:
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
# Source: siembol/templates/topology-manager/serviceaccount-manager.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: role-grantor-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-siembol-storm-topology-manager-role
subjects:
- kind: ServiceAccount
  name: storm-topology-controller
---
# Source: siembol/templates/rest/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: release-name-siembol-config-editor-rest
  namespace: siembol
  labels:
    metrics: "true"
spec:
  selector:
    app: release-name-siembol-config-editor-rest
  ports:
  - protocol: TCP
    port: 8081
    name: web
---
# Source: siembol/templates/topology-manager/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: release-name-siembol-storm-topology-manager
  namespace: siembol
  labels:
    metrics: "true"
spec:
  selector:
    app: release-name-siembol-storm-topology-manager
  ports:
  - protocol: TCP
    port: 8082
    name: web
---
# Source: siembol/templates/ui/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-siembol-config-editor-ui
  namespace: siembol
spec:
  selector:
    app: release-name-siembol-config-editor-ui
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 8080
---
# Source: siembol/templates/rest/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: release-name-siembol-config-editor-rest
  name: release-name-siembol-config-editor-rest
  namespace: siembol
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: release-name-siembol-config-editor-rest
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: release-name-siembol-config-editor-rest
      name: release-name-siembol-config-editor-rest
    spec:
      containers:
      - image: gresearchdev/siembol-config-editor-rest:latest
        workingDir: /opt/config-editor-rest
        imagePullPolicy: 
        name: release-name-siembol-config-editor-rest
        ports:
          - containerPort: 8081
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "2048Mi"
            cpu: "1000m"
        securityContext:
          runAsUser: 101
        readinessProbe:
          httpGet:
            path: /health
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
        livenessProbe:
          httpGet:
            path: /health
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
        envFrom:
        - configMapRef:
            name: github-details
        
        env:
        - name: XDG_CONFIG_HOME
          value: /config/jgit/.config
        - name: JAVA_OPTS
          value: -Djavax.net.ssl.trustStore=/etc/ssl/certs/java/cacerts
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: release-name-siembol-config-editor-rest-secrets
              key: git
        volumeMounts:
        - name: cacerts
          mountPath: /etc/ssl/certs/java/cacerts
          subPath: cacerts
          readOnly: true        
        - name: rules-dir
          mountPath: /tmp/siembol-config
        - name: config-dir
          mountPath: /config
      restartPolicy: Always
      volumes:
      - name: cacerts
        secret:
          secretName: cacerts
      - name: rules-dir
        emptyDir: {}
      - name: config-dir
        emptyDir: {}
      terminationGracePeriodSeconds: 300
---
# Source: siembol/templates/topology-manager/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: release-name-siembol-storm-topology-manager
  name: release-name-siembol-storm-topology-manager
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: release-name-siembol-storm-topology-manager
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: release-name-siembol-storm-topology-manager
      name: release-name-siembol-storm-topology-manager
    spec:
      serviceAccountName: storm-topology-controller
      containers:
      - image: gresearchdev/siembol-storm-topology-manager:latest
        workingDir: /opt/storm-topology-manager
        imagePullPolicy: Always
        name: release-name-siembol-storm-topology-manager
        ports:
          - containerPort: 8082
        resources:
          requests:
            memory: "128Mi"
            cpu: "500m"
          limits:
            memory: "512Mi"
            cpu: "1000m"
        securityContext:
          runAsUser: 101
        readinessProbe:
          httpGet:
            path: /health
            port: 8082
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
        livenessProbe:
          httpGet:
            path: /health
            port: 8082
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
        env:
        - name: JAVA_OPTS
          value: -Djavax.net.ssl.trustStore=/etc/ssl/certs/java/cacerts
        volumeMounts:
        - name: cacerts
          mountPath: /etc/ssl/certs/java/cacerts
          subPath: cacerts
          readOnly: true        
      restartPolicy: Always
      volumes:
      - name: cacerts
        secret:
          secretName: cacerts
      terminationGracePeriodSeconds: 300
---
# Source: siembol/templates/ui/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: release-name-siembol-config-editor-ui
  name: release-name-siembol-config-editor-ui
  namespace: siembol
spec:
  replicas: 1
  selector:
    matchLabels:
      app: release-name-siembol-config-editor-ui
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: release-name-siembol-config-editor-ui
      name: release-name-siembol-config-editor-ui
    spec:
      containers:
      - image: "gresearchdev/siembol-config-editor-ui:latest"
        imagePullPolicy: Always
        name: release-name-siembol-config-editor-ui
        securityContext:
          runAsUser: 101
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /index.html
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 30
        livenessProbe:
          httpGet:
            path: /index.html
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 300
          periodSeconds: 30
        resources:
         limits:
          cpu: 1
          memory: "256Mi"
         requests:
          cpu: 0.1
          memory: "128Mi"
      restartPolicy: Always
---
# Source: siembol/templates/topology-manager/cronjob.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: release-name-siembol-clean-lingering-siembol-jobs
spec:
  schedule: "*/15 * * * *"
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            name: release-name-siembol-clean-lingering-siembol-jobs
        spec:
          serviceAccountName: storm-topology-controller
          containers:
          - name: release-name-siembol-clean-lingering-siembol-jobs
            image: alpine/k8s:1.18.16
            imagePullPolicy: Always
            command:
            - /bin/sh
            - -c
            - kubectl -n siembol delete jobs --field-selector status.successful=1
            securityContext:
              runAsUser: 1000
          restartPolicy: OnFailure
---
# Source: siembol/templates/rest/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-siembol-config-editor-rest
  namespace: siembol
  annotations:
    cert-manager.io/issuer: ca-issuer
  
spec:
  tls:
  - hosts: 
    - rest.siembol.local
    secretName: release-name-siembol-config-editor-rest-tls
  
  rules:
  - host: rest.siembol.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: release-name-siembol-config-editor-rest
            port: 
              number: 8081
---
# Source: siembol/templates/storm_ingress/ingress-storm.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: storm-ui
  namespace: siembol
  annotations:
    cert-manager.io/issuer: ca-issuer
  
spec:
  tls:
  - hosts: 
    - storm.local
    secretName: storm-tls
  
  rules:
  - host: storm.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name:  storm-ui
            port: 
              number:  8080
---
# Source: siembol/templates/topology-manager/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-siembol-storm-topology-manager
  namespace: siembol
  annotations:
    cert-manager.io/issuer: ca-issuer
  
spec:
  tls:
  - hosts: 
    - topology-manager.siembol.local
    secretName: release-name-siembol-storm-topology-manager-tls
  
  rules:
  - host: topology-manager.siembol.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: release-name-siembol-storm-topology-manager
            port: 
              number: 8082
---
# Source: siembol/templates/ui/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-siembol-config-editor-ui
  namespace: siembol
  annotations:
    cert-manager.io/issuer: ca-issuer
    
    ingress.kubernetes.io/ssl-passthrough: "false"
    nginx.ingress.kubernetes.io/ssl-passthrough: "false"
spec:
  tls:
  - hosts: 
    - siembol.local
    secretName: release-name-siembol-config-editor-ui-tls
  
  rules:
  - host: siembol.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: release-name-siembol-config-editor-ui
            port: 
              number: 8080
