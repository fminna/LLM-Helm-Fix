---
# Source: rstudio/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-rstudio
  labels:
    helm.sh/chart: rstudio-6.5.0
    app.kubernetes.io/name: rstudio
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
# Source: rstudio/templates/configmap-coresite.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-rstudio-configmapcoresite
  labels:
    helm.sh/chart: rstudio-6.5.0
    app.kubernetes.io/name: rstudio
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  core-site.xml: |
    <?xml version="1.0"?>
    <?xml-stylesheet type="text/xsl" href="configuration.xsl"?> 
    <configuration>     
    <property>
        <name>fs.s3a.connection.ssl.enabled</name>
        <value>true</value>
    </property>
    <property>
        <name>fs.s3a.endpoint</name>
        <value></value>
    </property>
    <property>
        <name>fs.s3a.path.style.access</name>
        <value>true</value>
    </property>
    <property>
        <name>fs.s3a.aws.credentials.provider</name>
        <value>org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider</value>
    </property>
    <property>
        <name>trino.s3.credentials-provider</name>
        <value>org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider</value>
    </property>
    <property>
        <name>fs.s3a.access.key</name>
        <value></value>
    </property>
    <property>
        <name>fs.s3a.secret.key</name>
        <value></value>
    </property>
    </configuration>
---
# Source: rstudio/templates/configmap-git.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-rstudio-configmapgit
  labels:
    helm.sh/chart: rstudio-6.5.0
    app.kubernetes.io/name: rstudio
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  GIT_USER_NAME: ""
  GIT_USER_MAIL: ""
  GIT_CREDENTIALS_CACHE_DURATION: ""
  GIT_PERSONAL_ACCESS_TOKEN: ""
  GIT_REPOSITORY: ""
  GIT_BRANCH: ""
---
# Source: rstudio/templates/configmap-hive.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-rstudio-configmaphive
  labels:
    helm.sh/chart: rstudio-6.5.0
    app.kubernetes.io/name: rstudio
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  hive-site.xml: |
    <?xml version="1.0"?>
    <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
    <configuration>
    </configuration>
---
# Source: rstudio/templates/configmap-s3.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-rstudio-configmaps3
  labels:
    helm.sh/chart: rstudio-6.5.0
    app.kubernetes.io/name: rstudio
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  AWS_ACCESS_KEY_ID: ""
  AWS_S3_ENDPOINT: ""
  S3_ENDPOINT: "https:///"
  AWS_DEFAULT_REGION: ""
  AWS_SECRET_ACCESS_KEY: ""
  AWS_SESSION_TOKEN: ""
---
# Source: rstudio/templates/configmap-sparkconf.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-rstudio-configmapsparkconf
  labels:
    helm.sh/chart: rstudio-6.5.0
    app.kubernetes.io/name: rstudio
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  spark-defaults.conf: |
    spark.dynamicAllocation.enabled true
    spark.dynamicAllocation.executorAllocationRatio 1
    spark.dynamicAllocation.initialExecutors 1
    spark.dynamicAllocation.maxExecutors 10
    spark.dynamicAllocation.minExecutors 1
    spark.dynamicAllocation.shuffleTracking.enabled true
    spark.kubernetes.authenticate.driver.serviceAccountName release-name-rstudio
    spark.kubernetes.container.image inseefrlab/rstudio:r4.2.0-spark3.2.0
    spark.kubernetes.driver.pod.name release-name-rstudio-0
    spark.kubernetes.namespace default
    spark.master k8s://https://kubernetes.default.svc:443
---
# Source: rstudio/templates/configmap-vault.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-rstudio-configmapvault
  labels:
    helm.sh/chart: rstudio-6.5.0
    app.kubernetes.io/name: rstudio
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  VAULT_ADDR: ""
  VAULT_TOKEN: ""
  VAULT_RELATIVE_PATH: ""
  VAULT_TOP_DIR: ""
  VAULT_MOUNT: ""
---
# Source: rstudio/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-rstudio
  labels:
    helm.sh/chart: rstudio-6.5.0
    app.kubernetes.io/name: rstudio
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
---
# Source: rstudio/templates/role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-rstudio
  labels:
    helm.sh/chart: rstudio-6.5.0
    app.kubernetes.io/name: rstudio
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
- kind: ServiceAccount
  name: release-name-rstudio
  namespace: default
---
# Source: rstudio/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-rstudio
  labels:
    helm.sh/chart: rstudio-6.5.0
    app.kubernetes.io/name: rstudio
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
    
  selector:
    app.kubernetes.io/name: rstudio
    app.kubernetes.io/instance: release-name
---
# Source: rstudio/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-rstudio
  labels:
    helm.sh/chart: rstudio-6.5.0
    app.kubernetes.io/name: rstudio
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  serviceName: release-name-rstudio
  selector:
    matchLabels:
      app.kubernetes.io/name: rstudio
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rstudio
        app.kubernetes.io/instance: release-name
    spec:
      volumes:
        - name: home
          persistentVolumeClaim:
            claimName: release-name-rstudio
        - name: release-name-rstudio-data
          emptyDir: {}
        - name: config-coresite
          configMap:
            name: release-name-rstudio-configmapcoresite
        - name: config-sparkconf
          configMap:
            name: release-name-rstudio-configmapsparkconf
        - name: hive-config
          configMap:
            name: release-name-rstudio-configmaphive
      serviceAccountName: release-name-rstudio
      securityContext:
        fsGroup: 1000
      subdomain: release-name-rstudio
      hostname: rstudio
      containers:
        - name: rstudio
          securityContext:
            {}
          image: "inseefrlab/rstudio:r4.2.0-spark3.2.0"
          command: ["/bin/sh","-c"]
          args: ["/data/onyxia-init.sh /init"]
          imagePullPolicy: IfNotPresent
          env:
            - name: KUBERNETES_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: IMAGE_NAME
              value: "inseefrlab/rstudio:r4.2.0-spark3.2.0"
            - name: PASSWORD
              value: changeme
            - name: ROOT
              value: "TRUE"
            - name: PROJECT_USER
              value: rstudio
            - name: PROJECT_GROUP
              value: rstudio
            - name: ROOT_PROJECT_DIRECTORY
              value: /home/rstudio
          envFrom:
            - configMapRef:
                name: release-name-rstudio-configmaps3
            - configMapRef:
                name: release-name-rstudio-configmapvault
            - configMapRef:
                name: release-name-rstudio-configmapgit
          ports:
            - name: http
              containerPort: 8787
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          startupProbe:
            failureThreshold: 60
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5        
          resources:
            {}
          volumeMounts:
            - mountPath: /data
              name: release-name-rstudio-data
            - mountPath: /home/rstudio
              name: home
            - mountPath: /opt/hadoop/etc/hadoop/core-site.xml
              subPath: core-site.xml
              name: config-coresite
            - name: config-sparkconf
              mountPath: /opt/spark/conf/spark-defaults.conf
              subPath: spark-defaults.conf
            - name: hive-config
              mountPath: /opt/hive/conf/hive-site.xml
              subPath: hive-site.xml
      initContainers:
        - name: standard-init
          image: "busybox"
          imagePullPolicy: "IfNotPresent"
          command: ["/bin/sh","-c"]
          args: ["wget -O /data/onyxia-init.sh https://git.lab.sspcloud.fr/innovation/plateforme-onyxia/services-ressources/-/raw/master/onyxia-init.sh && chmod +x /data/onyxia-init.sh"]
          volumeMounts:
          - mountPath: /data
            name: release-name-rstudio-data
---
# Source: rstudio/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-rstudio
  labels:
    helm.sh/chart: rstudio-6.5.0
    app.kubernetes.io/name: rstudio
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/whitelist-source-range: 0.0.0.0/0
spec:
  tls:
    - hosts:
        - "chart-example.local"
  rules:
    - host: "chart-example.local"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: release-name-rstudio
                port: 
                  number: 80
---
# Source: rstudio/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-rstudio-test-connection"
  labels:
    helm.sh/chart: rstudio-6.5.0
    app.kubernetes.io/name: rstudio
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-rstudio:80']
  restartPolicy: Never
