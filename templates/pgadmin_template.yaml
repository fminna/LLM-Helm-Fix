---
# Source: pgadmin/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-pgadmin-secrets
data:
  pgadmin-password: "bVkxNDlyeGtSZw=="
  client-secret:
---
# Source: pgadmin/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-pgadmin-configmap
data:
  pgadmin-username: admin
  pgadmin-email: hello@stakater.com
  pgadmin-url:
---
# Source: pgadmin/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-release-name-pgadmin-data
spec:
  accessModes: [ "ReadWriteOnce" ]
  storageClassName: "default"
  resources:
    requests:
      storage: "4Gi"
---
# Source: pgadmin/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-pgadmin
  labels:
    app: pgadmin
    group: com.stakater.platform
    provider: stakater
    version: "0.1.14"
    chart: "pgadmin-0.1.14"
    release: "release-name"
    heritage: "Helm"
    expose: null
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: pgadmin
---
# Source: pgadmin/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-pgadmin
  labels:
    app: pgadmin
    group: com.stakater.platform
    provider: stakater
    version: "0.1.14"
    chart: "pgadmin-0.1.14"
    release: "release-name"
    heritage: "Helm"
spec:
  replicas:  1
  selector:
    matchLabels:
      app: pgadmin
  template:
    metadata:
      labels:
        app: pgadmin
      annotations:
        fluentdConfiguration: |
          [
              {
                  "containers":
                  [
                      {
                          "expression": "/^\\S*\\s-\\s-\\s\\[(?<time>\\S*)[\\S\\s]*\\]\\s(?<message>[\\S\\s]*)/",
                          "expressionFirstLine": "/^\\:\\:f{4}:[0-9]+.[0-9]+\\.[0-9]+\\.[0-9]+/",
                          "timeFormat": "%d/%b/%Y:%H:%M:%S",
                          "containerName": "pgadmin"
                      },
                      {
                          "expression": "/^\\S*\\s(?<level>\\S*)\\s(?<class>\\S*)\\s(?<message>[\\S\\s]*)/",
                          "expressionFirstLine": "/^[0-9].[0-9]+e\\+[0-9]+/",
                          "timeFormat": "%Y-%m-%d %H:%M:%S,%L",
                          "containerName": "keycloak-proxy"
                      }
                  ]
              }
          ]
    spec:
      containers:
        - name: release-name-pgadmin
          image: dpage/pgadmin4:4.5
          imagePullPolicy: 
          env:
          - name: SERVER_MODE
            value: 'True'
          - name: PGADMIN_DEFAULT_USER
            valueFrom:
              configMapKeyRef:
                name: release-name-pgadmin-configmap
                key: pgadmin-username
          - name: PGADMIN_DEFAULT_EMAIL
            valueFrom:
              configMapKeyRef:
                name: release-name-pgadmin-configmap
                key: pgadmin-email
          - name: PGADMIN_DEFAULT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: release-name-pgadmin-secrets
                key: pgadmin-password
          - name: CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: release-name-pgadmin-secrets
                key: client-secret
          - name: PGADMIN_PORT
            value: "80"
          ports:
            - containerPort: 80
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 300Mi
          volumeMounts:
          - name: pv-pgadmin-data
            mountPath: /var/lib/pgadmin
      volumes:
        - name: pv-pgadmin-data
          persistentVolumeClaim:
            # This disk must already exist.
            claimName: pvc-release-name-pgadmin-data
---
# Source: pgadmin/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: release-name-pgadmin
  labels:
    app: pgadmin
spec:
  rules:
  - host: pgadmin4.mydomain.com
    http:
      paths:
      - backend:
          serviceName: release-name-pgadmin
          servicePort: 80
        path: /
# the optional one
