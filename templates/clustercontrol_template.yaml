---
# Source: clustercontrol/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: clustercontrol
  labels:
    helm.sh/chart: clustercontrol-0.6.0
    app: clustercontrol
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    monitor: "true"
---
# Source: clustercontrol/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-configmap
  labels:
    helm.sh/chart: clustercontrol-0.6.0
    app: clustercontrol
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    monitor: "true"
data:
  application.yaml: |
    logging:
      level:
        com.sqream: INFO
---
# Source: clustercontrol/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-clustercontrol
  labels:
    helm.sh/chart: clustercontrol-0.6.0
    app: clustercontrol
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    monitor: "true"
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: clustercontrol
    app.kubernetes.io/instance: release-name
---
# Source: clustercontrol/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-clustercontrol
  labels:
    helm.sh/chart: clustercontrol-0.6.0
    app: clustercontrol
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    monitor: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: clustercontrol
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app: clustercontrol
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: clustercontrol
      securityContext:
        {}
      containers:
        - name: clustercontrol
          securityContext:
            {}
          image: "nexus.sq.l:16000/repository/container-replace-repo/clustercontrol:replace_tag"
          imagePullPolicy: IfNotPresent
          ports:
          - name: http
            containerPort: 8080
            protocol: TCP
          envFrom:
            - secretRef:
                name: 'release-name-secret'
          env:
            - name: JAVA_TOOL_OPTIONS
              value: "-Xmx1524m -Xms512m"
          command:
            - sh
            - -c
            - java $JAVA_OPTS -jar app.jar --spring.config.additional-location=file:/app/application.yaml
          args:
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: actuator/health/liveness
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          startupProbe:
            failureThreshold: 10
            httpGet:
              path: actuator/health/liveness
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1.5"
              memory: 2048Mi
            requests:
              cpu: "0.5"
              memory: 512Mi
          volumeMounts:
            - name: config-volume
              mountPath: /app
              readOnly: true
      volumes:
        - name: config-volume
          configMap:
            name: release-name-configmap
---
# Source: clustercontrol/templates/secret.yaml
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: release-name-secret
  labels:
    helm.sh/chart: clustercontrol-0.6.0
    app: clustercontrol
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    monitor: "true"
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: local-secrets
    kind: ClusterSecretStore
  target:
    name: release-name-secret
    creationPolicy: Owner
    template:
      type: Opaque
      metadata:
        annotations:
          {}
        labels:
          helm.sh/chart: clustercontrol-0.6.0
          app: clustercontrol
          app.kubernetes.io/instance: release-name
          app.kubernetes.io/version: "1.16.0"
          app.kubernetes.io/managed-by: Helm
          monitor: "true"
      data:
        REDIS_HOST: '{{ .REDIS_IP_ADDRESS }}'
        REDIS_PORT: '{{ .REDIS_PORT }}'
  dataFrom:
    - extract:
        key: redis-managed-instance
---
# Source: clustercontrol/templates/servicePodMonitor.yaml
apiVersion: monitoring.googleapis.com/v1
kind: PodMonitoring
metadata:
  name: release-name-clustercontrol
  labels:
    helm.sh/chart: clustercontrol-0.6.0
    app: clustercontrol
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    monitor: "true"
spec:
  selector:
    matchLabels:
      app: clustercontrol
      app.kubernetes.io/instance: release-name
  endpoints:
  - port: http
    path: /actuator/prometheus
    interval: 30s
