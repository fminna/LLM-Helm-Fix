---
# Source: parca/templates/agent-podsecuritypolicy.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: release-name-parca
  labels:
    helm.sh/chart: parca-1.6.1
    app.kubernetes.io/name: parca
    app.kubernetes.io/instance: release-name-agent
    app.kubernetes.io/version: "v0.11.1"
    app.kubernetes.io/managed-by: Helm
spec:
  allowPrivilegeEscalation: true
  allowedCapabilities:
  - '*'
  allowedHostPaths:
  - pathPrefix: /sys
  - pathPrefix: /lib/modules
  fsGroup:
    rule: RunAsAny
  hostIPC: true
  hostNetwork: true
  hostPID: true
  hostPorts:
  - max: 7071
    min: 7071
  privileged: true
  readOnlyRootFilesystem: true
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
  - configMap
  - emptyDir
  - projected
  - secret
  - downwardAPI
  - persistentVolumeClaim
  - hostPath
---
# Source: parca/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-parca
  labels:
    helm.sh/chart: parca-1.6.1
    app.kubernetes.io/name: parca
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.11.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: parca/templates/server-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-parca-server-config
  labels:
    helm.sh/chart: parca-1.6.1
    app.kubernetes.io/name: parca
    app.kubernetes.io/instance: release-name-server
    app.kubernetes.io/version: "v0.11.1"
    app.kubernetes.io/managed-by: Helm
data:
  parca.yaml: |-
    debug_info:
      bucket:
        config:
          directory: ./tmp
        type: FILESYSTEM
      cache:
        config:
          directory: ./tmp
        type: FILESYSTEM
    scrape_configs:
    - job_name: kubernetes-pods
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_pod_annotation_parca_dev_scrape
      - action: replace
        regex: (.+)
        source_labels:
        - __meta_kubernetes_pod_annotation_parca_dev_path
        target_label: __metrics_path__
      - action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        source_labels:
        - __address__
        - __meta_kubernetes_pod_annotation_parca_dev_port
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: kubernetes_pod_name
      scrape_interval: 1m
      scrape_timeout: 10s
---
# Source: parca/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: parca-1.6.1
    app.kubernetes.io/name: parca
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.11.1"
    app.kubernetes.io/managed-by: Helm
  name: release-name-parca
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
---
# Source: parca/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-parca
  labels:
    helm.sh/chart: parca-1.6.1
    app.kubernetes.io/name: parca
    app.kubernetes.io/instance: release-name-agent
    app.kubernetes.io/version: "v0.11.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-parca
subjects:
- kind: ServiceAccount
  name: release-name-parca
  namespace: default
---
# Source: parca/templates/agent-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    helm.sh/chart: parca-1.6.1
    app.kubernetes.io/name: parca
    app.kubernetes.io/instance: release-name-agent
    app.kubernetes.io/version: "v0.11.1"
    app.kubernetes.io/managed-by: Helm
  name: release-name-parca-agent
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-parca-agent
subjects:
- kind: ServiceAccount
  name: release-name-parca-agent
---
# Source: parca/templates/agent-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-parca-agent
  labels:
    helm.sh/chart: parca-1.6.1
    app.kubernetes.io/name: parca
    app.kubernetes.io/instance: release-name-agent
    app.kubernetes.io/version: "v0.11.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 7071
      targetPort: 7071
      protocol: TCP
      name: http
  clusterIP: None
  selector:
      app.kubernetes.io/name: parca
      app.kubernetes.io/instance: release-name-agent
---
# Source: parca/templates/server-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-parca-server
  labels:
    helm.sh/chart: parca-1.6.1
    app.kubernetes.io/name: parca
    app.kubernetes.io/instance: release-name-server
    app.kubernetes.io/version: "v0.11.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 7070
      targetPort: 7070
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: parca
    app.kubernetes.io/instance: release-name-server
---
# Source: parca/templates/agent-daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: release-name-parca-agent
  labels:
    helm.sh/chart: parca-1.6.1
    app.kubernetes.io/name: parca
    app.kubernetes.io/instance: release-name-agent
    app.kubernetes.io/version: "v0.11.1"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: parca
      app.kubernetes.io/instance: release-name-agent
  template:
    metadata:
      labels:
        parca: release-name-parca-agent
        app.kubernetes.io/name: parca
        app.kubernetes.io/instance: release-name-agent
    spec:
      serviceAccountName: release-name-parca
      securityContext:
        {}
      containers:
        - name: parca-agent
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          image: "ghcr.io/parca-dev/parca-agent:v0.8.0"
          imagePullPolicy: IfNotPresent
          args:
            - /bin/parca-agent
            - --log-level=info
            - --node=$(NODE_NAME)
            - --kubernetes
            - --store-address=release-name-parca-server.default.svc.cluster.local:7070
            - --insecure
            - --insecure-skip-verify
            - --temp-dir=/tmp
            - --socket-path=/run/containerd/containerd.sock
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          ports:
          - containerPort: 7071
            hostPort: 7071
            name: http
          volumeMounts:
          - mountPath: /tmp
            name: tmp
          - mountPath: /run
            name: run
          - mountPath: /lib/modules
            name: modules
          - mountPath: /sys/kernel/debug
            name: debugfs
          - mountPath: /sys/fs/cgroup
            name: cgroup
          - mountPath: /sys/fs/bpf
            name: bpffs
          resources:
            {}
      hostPID: true
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /run
        name: run
      - hostPath:
          path: /sys/fs/cgroup
        name: cgroup
      - hostPath:
          path: /lib/modules
        name: modules
      - hostPath:
          path: /sys/fs/bpf
        name: bpffs
      - hostPath:
          path: /sys/kernel/debug
        name: debugfs
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
---
# Source: parca/templates/server-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-parca
  labels:
    helm.sh/chart: parca-1.6.1
    app.kubernetes.io/name: parca
    app.kubernetes.io/instance: release-name-server
    app.kubernetes.io/version: "v0.11.1"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: parca
      app.kubernetes.io/instance: release-name-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: parca
        app.kubernetes.io/instance: release-name-server
    spec:
      serviceAccountName: release-name-parca
      securityContext:
        {}
      containers:
        - name: parca-server
          securityContext:
            {}
          image: "ghcr.io/parca-dev/parca:v0.11.1"
          imagePullPolicy: IfNotPresent
          args:
            - /parca
            - --config-path=/var/parca/parca.yaml
            - --log-level=info
            - --cors-allowed-origins=*
            - --storage-tsdb-retention-time=6h
          livenessProbe:
            exec:
              command:
              - /grpc-health-probe
              - -v
              - -addr=:7070
            initialDelaySeconds: 5
          ports:
          - containerPort: 7070
            name: http
          readinessProbe:
            exec:
              command:
              - /grpc-health-probe
              - -v
              - -addr=:7070
            initialDelaySeconds: 10
          volumeMounts:
          - mountPath: /var/parca
            name: release-name-parca-server-config
          resources:
            {}
      volumes:
      - configMap:
          name: release-name-parca-server-config
        name: release-name-parca-server-config
---
# Source: parca/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-parca-test-connection"
  labels:
    helm.sh/chart: parca-1.6.1
    app.kubernetes.io/name: parca
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.11.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget-server
      image: busybox
      command: ['wget']
      args: ['release-name-parca-server:7070']
    - name: wget-agent
      image: busybox
      command: ['wget']
      args: ['release-name-parca-agent:7071']
  restartPolicy: Never
