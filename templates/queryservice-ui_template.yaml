---
# Source: queryservice-ui/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-queryservice-ui
  labels:
    app.kubernetes.io/name: queryservice-ui
    helm.sh/chart: queryservice-ui-0.2.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: queryservice-ui
    app.kubernetes.io/instance: release-name
---
# Source: queryservice-ui/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-queryservice-ui
  labels:
    app.kubernetes.io/name: queryservice-ui
    helm.sh/chart: queryservice-ui-0.2.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: queryservice-ui
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: queryservice-ui
        app.kubernetes.io/instance: release-name
    spec:
      containers:
        - name: queryservice-ui
          image: "ghcr.io/wbstack/queryservice-ui:1.4"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          # TODO this is just nginx so we should have some sort of liveness probe?
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            limits:
              cpu: 100m
              memory: 200Mi
            requests:
              cpu: 10m
              memory: 100Mi
---
# Source: queryservice-ui/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-queryservice-ui-test-connection"
  labels:
    app.kubernetes.io/name: queryservice-ui
    helm.sh/chart: queryservice-ui-0.2.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['release-name-queryservice-ui:80']
  restartPolicy: Never
