---
# Source: blutgang/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-blutgang
  labels:
    helm.sh/chart: blutgang-0.0.7
    app.kubernetes.io/name: blutgang
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  namespace: default
---
# Source: blutgang/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-blutgang-env
  labels:
    helm.sh/chart: blutgang-0.0.7
    app.kubernetes.io/name: blutgang
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: blutgang/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-blutgang
  labels:
    helm.sh/chart: blutgang-0.0.7
    app.kubernetes.io/name: blutgang
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  config.toml: |
    # To use the config file, use the -c/--config option pointing to the path of a config file
    
    # Config for blutgang goes here
    [blutgang]
    # Clear the cache DB on startup
    do_clear = false
    # Where to bind blutgang to
    address = "0.0.0.0:3000"
    # Moving average length for the latency
    ma_length = 100
    # Sort RPCs by latency on startup. Recommended to leave on.
    sort_on_startup = true
    # Enable health checking
    health_check = true
    # Enable content type header checking. Set this to `true` if you want
    # Blutgang to be JSON-RPC compliant.
    header_check = true
    # Acceptable time to wait for a response in ms
    ttl = 300
    # How many times to retry a request before giving up
    max_retries = 32
    # Block time in ms, used as a sanity check when not receiving subscriptions
    expected_block_time = 13000
    # Time between health checks in ms
    health_check_ttl = 2000
    # Supress the health check running info messages
    supress_rpc_check = false
    
    # Note: the admin namespace contains volatile functions and
    # should not be exposed publicly.
    [admin]
    # Enable the admin namespace
    enabled = true
    # Address for the admin RPC
    address = "0.0.0.0:5715"
    # Only allow read-only methods
    # Recommended `true` unless you 100% need write methods
    readonly = true
    # Enable the use of JWT for auth
    # Should be on if exposing to the internet
    jwt = false
    # jwt token
    key = ""
    
    # Sled config
    # Sled is the database we use for our cache, for more info check their docs
    [sled]
    # Path to db
    db_path = "/data/blutgang-cache"
    # sled mode. Can be HighThroughput/LowSpace
    mode = "HighThroughput"
    # Cache size in bytes.
    cache_capacity = 1000000000
    # Use zstd compression. Reduces size 60-70%,
    # and increases CPU and latency by around 10% for db writes and 2% for reads.
    # If storage constrained, it's fine to have it be on.
    compression = false
    # Print DB profile when dropped. Doesn't do anything for now.
    print_profile = false
    # Frequency of flushes in ms
    flush_every_ms = 240
    
    # Add seperate RPCs as TOML tables
    # DO NOT name an rpc `blutgang`, `admin`, or `sled`
---
# Source: blutgang/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-blutgang-headless
  labels:
    helm.sh/chart: blutgang-0.0.7
    app.kubernetes.io/name: blutgang
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
    - port: 5715
      targetPort: admin
      protocol: TCP
      name: admin
  selector:
    app.kubernetes.io/name: blutgang
    app.kubernetes.io/instance: release-name
---
# Source: blutgang/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-blutgang
  labels:
    helm.sh/chart: blutgang-0.0.7
    app.kubernetes.io/name: blutgang
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
    - port: 5715
      targetPort: admin
      protocol: TCP
      name: admin
  selector:
    app.kubernetes.io/name: blutgang
    app.kubernetes.io/instance: release-name
---
# Source: blutgang/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-blutgang
  labels:
    helm.sh/chart: blutgang-0.0.7
    app.kubernetes.io/name: blutgang
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: blutgang
      app.kubernetes.io/instance: release-name
  serviceName: release-name-blutgang-headless
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: blutgang
        app.kubernetes.io/instance: release-name
      annotations:
        checksum/config: 4c992d772150ad5662ec58e9adf30511a6293d8cc9a86990bee84b39ed6e6195
        checksum/secrets: ec2114b9f36f67bed23f6a45104bcabc5982e9ada253e68282a6d8435c7a99d2
    spec:
      serviceAccountName: release-name-blutgang
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      initContainers:
      containers:
        - name: blutgang
          image: "makemake1337/blutgang:latest"
          imagePullPolicy: IfNotPresent
          securityContext:
            {}
          volumeMounts:
            - name: config
              mountPath: "/app/config.toml"
              subPath: config.toml
              readOnly: true
            - name: storage
              mountPath: "/data"
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
            - name: admin
              containerPort: 5715
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: admin
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: admin
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            {}
          env:
            - name: RUST_BACKTRACE
              value: "1"
      nodeSelector:
        {}
      affinity:
        {}
      tolerations:
        []
      topologySpreadConstraints:
        []
      terminationGracePeriodSeconds: 30
      volumes:
        - name: config
          configMap:
            name: release-name-blutgang
        - name: storage
          emptyDir: {}
---
# Source: blutgang/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-blutgang-test-connection"
  labels:
    helm.sh/chart: blutgang-0.0.7
    app.kubernetes.io/name: blutgang
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
       - --location
       - --request
       - GET
       - 'release-name-blutgang:3000/'
  restartPolicy: Never
