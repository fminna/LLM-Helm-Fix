---
# Source: projectsveltos/templates/deployment.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: addon-controller
  labels:
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: projectsveltos/templates/deployment.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: access-manager
  labels:
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: projectsveltos/templates/deployment.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sc-manager
  labels:
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: projectsveltos/templates/deployment.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hc-manager
  labels:
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: projectsveltos/templates/deployment.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: event-manager
  labels:
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: projectsveltos/templates/deployment.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: classifier-manager
  labels:
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: projectsveltos/templates/deployment.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: shard-controller
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: shard-controller
    app.kubernetes.io/part-of: shard-controller
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: projectsveltos/templates/deployment.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: register-mgmt-cluster
  labels:
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: projectsveltos/templates/access-manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: access-manager-role
  labels:
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts/token
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - accessrequests
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - accessrequests/finalizers
  verbs:
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - accessrequests/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - classifierreports
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - debuggingconfigurations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - eventreports
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - healthcheckreports
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - rolerequests
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - rolerequests/finalizers
  verbs:
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - rolerequests/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
---
# Source: projectsveltos/templates/addon-controller-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: addon-controller-role
  labels:
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - get
  - impersonate
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterconfigurations
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterconfigurations/status
  verbs:
  - get
  - list
  - update
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterprofiles
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterprofiles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterprofiles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterreports
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterreports/status
  verbs:
  - get
  - list
  - update
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clustersummaries
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clustersummaries/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clustersummaries/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - config.projectsveltos.io
  resources:
  - profiles
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - profiles/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - config.projectsveltos.io
  resources:
  - profiles/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - controlplane.cluster.x-k8s.io
  resources:
  - kubeadmcontrolplanes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extension.projectsveltos.io
  resources:
  - jsonnetsources
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extension.projectsveltos.io
  resources:
  - yttsources
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - clustersets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - clustersets/finalizers
  verbs:
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - clustersets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - debuggingconfigurations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sets/finalizers
  verbs:
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - gitrepositories
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - gitrepositories/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - ocirepositories
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - ocirepositories/status
  verbs:
  - get
  - list
  - watch
---
# Source: projectsveltos/templates/addon-controller-role-extra-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: addon-controller-role-extra
  labels:
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
rules: null
---
# Source: projectsveltos/templates/classifier-manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: classifier-manager-role
  labels:
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - accessrequests
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - classifierreports
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - classifiers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - classifiers/finalizers
  verbs:
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - classifiers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - debuggingconfigurations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters/status
  verbs:
  - get
  - list
  - watch
---
# Source: projectsveltos/templates/event-manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: event-manager-role
  labels:
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clusterprofiles
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - clustersets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - clustersets/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - debuggingconfigurations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - eventreports
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - eventsources
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - eventtriggers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - eventtriggers/finalizers
  verbs:
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - eventtriggers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters/status
  verbs:
  - get
  - list
  - watch
---
# Source: projectsveltos/templates/hc-manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: hc-manager-role
  labels:
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clustersummaries
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - config.projectsveltos.io
  resources:
  - clustersummaries/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - clusterhealthchecks
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - clusterhealthchecks/finalizers
  verbs:
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - clusterhealthchecks/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - debuggingconfigurations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - healthcheckreports
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - healthchecks
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - reloaderreports
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters/status
  verbs:
  - get
  - list
  - watch
---
# Source: projectsveltos/templates/sc-manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sc-manager-role
  labels:
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - debuggingconfigurations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters/finalizers
  verbs:
  - update
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters/status
  verbs:
  - get
  - patch
  - update
---
# Source: projectsveltos/templates/shard-manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: shard-manager-role
  labels:
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters/status
  verbs:
  - get
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - debuggingconfigurations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - sveltosclusters/status
  verbs:
  - get
---
# Source: projectsveltos/templates/access-manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: access-manager-rolebinding
  labels:
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'access-manager-role'
subjects:
- kind: ServiceAccount
  name: 'access-manager'
  namespace: 'default'
---
# Source: projectsveltos/templates/addon-controller-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: addon-controller-rolebinding
  labels:
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'addon-controller-role'
subjects:
- kind: ServiceAccount
  name: 'addon-controller'
  namespace: 'default'
---
# Source: projectsveltos/templates/addon-controller-rolebinding-extra-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: addon-controller-rolebinding-extra
  labels:
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'addon-controller-role-extra'
subjects:
- kind: ServiceAccount
  name: 'addon-controller'
  namespace: 'default'
---
# Source: projectsveltos/templates/classifier-manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: classifier-manager-rolebinding
  labels:
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'classifier-manager-role'
subjects:
- kind: ServiceAccount
  name: 'classifier-manager'
  namespace: 'default'
---
# Source: projectsveltos/templates/event-manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: event-manager-rolebinding
  labels:
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'event-manager-role'
subjects:
- kind: ServiceAccount
  name: 'event-manager'
  namespace: 'default'
---
# Source: projectsveltos/templates/hc-manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hc-manager-rolebinding
  labels:
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'hc-manager-role'
subjects:
- kind: ServiceAccount
  name: 'hc-manager'
  namespace: 'default'
---
# Source: projectsveltos/templates/register-mgmt-cluster-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: register-mgmt-cluster-rolebinding
  labels:
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: 'register-mgmt-cluster'
  namespace: 'default'
---
# Source: projectsveltos/templates/sc-manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sc-manager-rolebinding
  labels:
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'sc-manager-role'
subjects:
- kind: ServiceAccount
  name: 'sc-manager'
  namespace: 'default'
---
# Source: projectsveltos/templates/shard-manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: shard-manager-rolebinding
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: shard-controller
    app.kubernetes.io/part-of: shard-controller
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'shard-manager-role'
subjects:
- kind: ServiceAccount
  name: 'shard-controller'
  namespace: 'default'
---
# Source: projectsveltos/templates/addon-controller-role-extra-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: addon-controller-role-extra
  labels:
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - create
  - update
---
# Source: projectsveltos/templates/shard-controller-role-extra-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: shard-controller-role-extra
  labels:
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - '*'
---
# Source: projectsveltos/templates/addon-controller-rolebinding-extra-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: addon-controller-rolebinding-extra
  labels:
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 'addon-controller-role-extra'
subjects:
- kind: ServiceAccount
  name: 'addon-controller'
  namespace: 'default'
---
# Source: projectsveltos/templates/shard-controller-rolebinding-extra-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: shard-controller-rolebinding-extra
  labels:
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 'shard-controller-role-extra'
subjects:
- kind: ServiceAccount
  name: 'shard-controller'
  namespace: 'default'
---
# Source: projectsveltos/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: addon-controller
  labels:
    control-plane: addon-controller
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: addon-controller
      app.kubernetes.io/name: projectsveltos
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        control-plane: addon-controller
        app.kubernetes.io/name: projectsveltos
        app.kubernetes.io/instance: release-name
      annotations:
        kubectl.kubernetes.io/default-container: controller
    spec:
      containers:

      - args:
        - --diagnostics-address=:8443
        - --report-mode=0
        - --shard-key=
        - --v=5
        - --version=v0.25.0

        command:
        - /manager
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: "cluster.local"
        image: projectsveltos/addon-controller:v0.29.1
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
        name: controller
        ports:
        - containerPort: 8443
          name: metrics
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          requests:
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      securityContext:
        runAsNonRoot: true
      serviceAccountName: addon-controller
      terminationGracePeriodSeconds: 10
      volumes:
      - emptyDir: {}
        name: tmp
---
# Source: projectsveltos/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: access-manager
  labels:
    control-plane: access-manager
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: access-manager
      app.kubernetes.io/name: projectsveltos
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        control-plane: access-manager
        app.kubernetes.io/name: projectsveltos
        app.kubernetes.io/instance: release-name
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      containers:
      - args:
        - --diagnostics-address=:8443
        - --v=5
        command:
        - /manager
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: "cluster.local"
        image: projectsveltos/access-manager:v0.29.1
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 8443
          name: metrics
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 10m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: access-manager
      terminationGracePeriodSeconds: 10
---
# Source: projectsveltos/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sc-manager
  labels:
    control-plane: sc-manager
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: sc-manager
      app.kubernetes.io/name: projectsveltos
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        control-plane: sc-manager
        app.kubernetes.io/name: projectsveltos
        app.kubernetes.io/instance: release-name
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      containers:
      - args:
        - --diagnostics-address=:8443
        - --shard-key=
        - --v=5
        command:
        - /manager
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: "cluster.local"
        image: projectsveltos/sveltoscluster-manager:v0.29.1
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 8443
          name: metrics
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 10m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: sc-manager
      terminationGracePeriodSeconds: 10
---
# Source: projectsveltos/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hc-manager
  labels:
    control-plane: hc-manager
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: hc-manager
      app.kubernetes.io/name: projectsveltos
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        control-plane: hc-manager
        app.kubernetes.io/name: projectsveltos
        app.kubernetes.io/instance: release-name
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      containers:
      - args:
        - --diagnostics-address=:8443
        - --shard-key=
        - --v=5
        command:
        - /manager
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: "cluster.local"
        image: projectsveltos/healthcheck-manager:v0.29.1
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 8443
          name: metrics
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 10m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: hc-manager
      terminationGracePeriodSeconds: 10
---
# Source: projectsveltos/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: event-manager
  labels:
    control-plane: event-manager
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: event-manager
      app.kubernetes.io/name: projectsveltos
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        control-plane: event-manager
        app.kubernetes.io/name: projectsveltos
        app.kubernetes.io/instance: release-name
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      containers:
      - args:
        - --diagnostics-address=:8443
        - --shard-key=
        - --v=5
        command:
        - /manager
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: "cluster.local"
        image: projectsveltos/event-manager:v0.29.1
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 8443
          name: metrics
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 10m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: event-manager
      terminationGracePeriodSeconds: 10
---
# Source: projectsveltos/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: classifier-manager
  labels:
    control-plane: classifier
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: classifier
      app.kubernetes.io/name: projectsveltos
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        control-plane: classifier
        app.kubernetes.io/name: projectsveltos
        app.kubernetes.io/instance: release-name
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      containers:

      - args:
        - --diagnostics-address=:8443
        - --report-mode=0
        - --shard-key=
        - --v=5
        - --version=v0.25.0

        command:
        - /manager
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: "cluster.local"
        image: projectsveltos/classifier:v0.29.1
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 8443
          name: metrics
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: classifier-manager
      terminationGracePeriodSeconds: 10
---
# Source: projectsveltos/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shard-controller
  labels:
    control-plane: shard-controller
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: shard-controller
      app.kubernetes.io/name: projectsveltos
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        control-plane: shard-controller
        app.kubernetes.io/name: projectsveltos
        app.kubernetes.io/instance: release-name
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      containers:

      - args:
        - --diagnostics-address=:8443
        - --v=5
        - --report-mode=0

        command:
        - /manager
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: "cluster.local"
        image: projectsveltos/shard-controller:v0.29.1
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 8443
          name: metrics
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: healthz
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 10m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: shard-controller
      terminationGracePeriodSeconds: 10
---
# Source: projectsveltos/templates/register-mgmt-cluster-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: register-mgmt-cluster-job
  labels:
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
spec:
  backoffLimit: 4
  template:
    spec:
      containers:
      - args:
        - --labels=
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: "cluster.local"
        image: projectsveltos/register-mgmt-cluster:v0.29.1
        imagePullPolicy: IfNotPresent
        name: register-mgmt-cluster
        resources:
          requests:
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      restartPolicy: Never
      serviceAccountName: register-mgmt-cluster
---
# Source: projectsveltos/templates/deployment.yaml
---
---
# Source: projectsveltos/templates/default-classifier.yaml
apiVersion: lib.projectsveltos.io/v1alpha1
kind: Classifier
metadata:
  name: default-classifier
  labels:
    helm.sh/chart: projectsveltos-0.29.1
    app.kubernetes.io/name: projectsveltos
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.29.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": "post-install"
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": "hook-failed"
spec:
  classifierLabels:
  - key: sveltos-agent
    value: present
