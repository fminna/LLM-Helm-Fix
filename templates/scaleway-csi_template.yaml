---
# Source: scaleway-csi/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-scaleway-csi
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
---
# Source: scaleway-csi/templates/controller/scaleway-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-scaleway-csi-secret
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  SCW_ACCESS_KEY: ABCDEFGHIJKLMNOPQRST
  SCW_DEFAULT_PROJECT_ID: 11111111-1111-1111-1111-111111111111
  SCW_DEFAULT_ZONE: fr-par-1
  SCW_SECRET_KEY: 11111111-1111-1111-1111-111111111111
---
# Source: scaleway-csi/templates/controller/validatingwebhookconfiguration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-scaleway-csi-webhook
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  tls.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURjekNDQWx1Z0F3SUJBZ0lRS0FNQ29rNlh1M1BPVjIrd3VlN1dNakFOQmdrcWhraUc5dzBCQVFzRkFEQWkKTVNBd0hnWURWUVFERXhkelkyRnNaWGRoZVMxamMya3RkMlZpYUc5dmF5MWpZVEFlRncweU5EQTFNRFF5TVRBMwpNak5hRncweU5UQTFNRFF5TVRBM01qTmFNQjh4SFRBYkJnTlZCQU1URkhOallXeGxkMkY1TFdOemFTMTNaV0pvCmIyOXJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhwQUlXYUVYU1RWMkJCVTIKK3hxM2tFMmN5K1BxbGlteFJpckZScktmSFUzR3JkTVd6bmZvYTdhL1Q4YXFrazRsdzkxMlJkNXhkVlFzVEpvQgp4NXBiTkJZUXdTQ2lwcVFYODFUUzFoMFJZRUVhSTF3Q3pIUnJ1eVY1NEpsU2hUcnRrdWxtcHljYzVXSlYwMVRhCmhYVDY1eW0wenNLdXpQcEVXWDdkM1ZldkhRTUIzcTZwVXQzNlBWSzRoZVkrYWx6S1d6ODEyMVYrMWg4c0Mxd1gKbGtMcTNTSkNpdEJoVythZ3BIcEdVQnZFL1lSYUV3ak9LZFJhN1FhTEpsQ0VTSUFzNXJnSzJCamZPbmdURVpkMwpEdmNUYm4rMzZJTU9yVGtFd2ZTYzlteEtNVGpCM2I4QjFHeFRyNVZFaE4xWFRZY21Xek5IeXFYdDdVcy94UWJaCitjMWZDd0lEQVFBQm80R25NSUdrTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUYKQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCU2VYTjJsTHFOZgp3Uk8vQmdrVm9wNThKd1VPbFRCRUJnTlZIUkVFUFRBN2dqbHlaV3hsWVhObExXNWhiV1V0YzJOaGJHVjNZWGt0ClkzTnBMWE51WVhCemFHOTBMWFpoYkdsa1lYUnBiMjR1WkdWbVlYVnNkQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUwKQlFBRGdnRUJBSXRsUmNGZ25IOWQ0Yzk4SmFOclg1Znp1OHZ0dHJjTEQ0UWo1QkpMZTVieXIxQlRyOFMxdEZjTAo0UVAzempZM2c2cFlVVW03OVY2YldJaUprMjNjZVFWUEM4UXJkRE5ibld4clh0dytTUCswTTg0eU9mN1R6TlJaCkdUcmhSL3paQjZWMUlzbGVuOCthYXhjeXdRVjVpTmNsY05wV2pta0V3VTZDak9Oa3RMcmVWMEpZOWwwa3dMRGMKTHpMd0xWYnUzYWk4bnJIR3pIY0lobGZwU0puVHBnZGpyd1o2WnA3YnArY3IrL3hwL1ZmUmlhRDZHRWZubVMrNwpNWVZyUkwraXNud010UDJRNlExWk5GSFF1Y1JsTzF2NzZDNXNYSXh6WUxqMmJSa1huOHYxaTFKYSs0UU5rM2dMCkNFMjVKVis4dUx2cEEzWENqeWZ1U1U5aGgzMmdBWEE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
  tls.key: "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBeHBBSVdhRVhTVFYyQkJVMit4cTNrRTJjeStQcWxpbXhSaXJGUnJLZkhVM0dyZE1XCnpuZm9hN2EvVDhhcWtrNGx3OTEyUmQ1eGRWUXNUSm9CeDVwYk5CWVF3U0NpcHFRWDgxVFMxaDBSWUVFYUkxd0MKekhScnV5VjU0SmxTaFRydGt1bG1weWNjNVdKVjAxVGFoWFQ2NXltMHpzS3V6UHBFV1g3ZDNWZXZIUU1CM3E2cApVdDM2UFZLNGhlWSthbHpLV3o4MTIxVisxaDhzQzF3WGxrTHEzU0pDaXRCaFcrYWdwSHBHVUJ2RS9ZUmFFd2pPCktkUmE3UWFMSmxDRVNJQXM1cmdLMkJqZk9uZ1RFWmQzRHZjVGJuKzM2SU1PclRrRXdmU2M5bXhLTVRqQjNiOEIKMUd4VHI1VkVoTjFYVFljbVd6Tkh5cVh0N1VzL3hRYlorYzFmQ3dJREFRQUJBb0lCQVFDelV0TG50MDlqWTIvQQp3alFVVlEyZ3VpYzRFQThGTElRWUhYcHFuZGlMUzNsNTlLQ3RPS2RqMS9neElQZGRDRXljOWozaFhjSlR0d0FHCjhqTlhRN1RJZG9FTkdkOHE1aGxuUFp6bmwvcmdWZ3M0RWRuSk1mODFWZVFiRGZ6enE4TnhJVzcrMkprRkpHamsKWWNhMExuQ0dJaWxUYllrV1A1Tkl6QVdzNTRxVGhGRkRqVEl4VFVOazlCV2RvcmsvMktDVkVFeE1kb2pBbHFtRwowaDhNSisxZGVVSUFvYmVhdkpjNlZ1STVoamhNaC96ZzluSXdoYnlieGFzUGJtSC9TSmQ4dW9FMjQraE9IUUJjCjFYWGU3b2h2N2FnaGJ6WlI5L2xibFg2RmtOR3luYW1ZUXlReGZhanpGL2lwMnFXTGVnRWdFdURYY1VPZ05IencKSWl4UWMxWWhBb0dCQU1yZ0JrQkFqbXRHVXRmTjJzdmUxWUlIaUNFYXhNcmdXa3VOcG9Bc0RYYWtpNFI4U3k4VAo1VmViOGFKVW9tazIrbldRU25BR2pzSGRSVlFJdWpqQmxzTFZHUDN2S2JZaWpPMFB4bDRKVWZnNXlqR093T3lvClZWYmZEK0Examl4V1ZkNUt6R1BYb2pNbG02eUpkN3cxaEd1b1hnOWc0VXdXNisvL3pBMGprclJ4QW9HQkFQcU8KNnE3eTBRVUJSUjFGQjZaOU5sclQyaGV6L1BKRDNDNVYwcnhZNGNIM1U0OW91OWRGYmo1UXk2NExvOWVVTldFYQowcndhd0Z0MWN3dWJja0ppZ3hWcTRjdENXWjg1cUorcUwvLzJ5MmFSUmh3YzR5UGVtY3crTkh0Z2FaMDl1ZFFHClpRNituMzdMNFNnc3AvWmtJaE9Hd1FhcGwyVFNzeHo0d3JHcHF0azdBb0dBR0QzU29XVFZYNzRrY2dMNERQcFEKZXR3WmlSTWd4cmt1TU83NUlVR2lUalgxTWR5RVExaldRN1N2bDkwVEZ3MXB1aGlHdklJY0Z0QXcwNHpEYTdxKwpJQVBFbTdzek9iOUJKYWFINW42b204ZVVBSDMxVVpIL3VJU282ZnFjUlhIL2lyTlhYdXJLUitCTGpMOVVYbG5xCnU4NS9oc2psd3VqT1FueEhUcDZjamhFQ2dZRUFxMDdibGhIZVp4V2ZNNHZtMXlYMDY5Uzg0RWZuUVp5MEJkb1gKNHo3QjIrUkY5VjhlVHVqaG55bU9tTWpNbExCNGJwUHdVVHZaR0s4TW9YcitlL1R1dXM0QTR2L1NWdE1OUDEwVQp4R1R3WElnbTcwR3c2dTFmS2cyOXhEeisrTXNqS3B2VXJHZ1lsSkRBdUw4UGQ1NnV6YnJzYnFtMUlQSU9GRmpnCmhLZ0ViOUVDZ1lFQWhrU1JBc0poUWdRQU5MTEFoZVk4YlgzQ2VCTk4zcG9yMmtmMjJiYXlOMFg1emM1WEx5TFEKeGxxK1MwRGNmR3A2VHZYdlh0bHVaNkdtelFnek1yOWtlMUh3b2pVQm04S1NFLzRVSVVCU2lZTDA4clZ3QmtyeQprSVl3WURNVzVjamYvbXJ2eStYL2RuMEdDTHM5bWhiOVZpcmQ2eWZDY2k4aXM1S25PcmJIWlVrPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
  ca.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lSQUp2dUhLNFdtOEF1RFNrcjlCSkJRTnd3RFFZSktvWklodmNOQVFFTEJRQXcKSWpFZ01CNEdBMVVFQXhNWGMyTmhiR1YzWVhrdFkzTnBMWGRsWW1odmIyc3RZMkV3SGhjTk1qUXdOVEEwTWpFdwpOekl6V2hjTk1qVXdOVEEwTWpFd056SXpXakFpTVNBd0hnWURWUVFERXhkelkyRnNaWGRoZVMxamMya3RkMlZpCmFHOXZheTFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTVplcFBMeW1idnMKbW1UNjF2K1QxcS96SGtmL1lBV0dOckE5SExvbTR1Z2EvamZJTVNSQnpnODFoenNmYkxVZUZOYUZFaytSMUx0MgpGbW45czZqSkZDTlNGTm5obkVwelVDdUE4SnNYZTRxTnRqdENRa044ODM2VEQ3MEV5T0dDVWZPUUpkL0YwTTdSCkhzOGtVazhIQXdZaHo2QUx0a3RmSm9WaDVzS2JaTUdvNzI0Y1NCVVUrQlo2bnFZMWRXaExNV2lOMlNZZkg3UW4KbCtBNElkZlZHL1NxY1Y0cWFBcExaZUhWa3c3WVR1SHF1aDEzRklDdmdXTzRXektBR05GVkliazFldUZNSmNraQpIem9FVGJNbGhQa1JrN3R1VkwySEMvQ2Z3MmcvTU9RcGNqZlVUVUZrQzJDZEhHbFdETHcybUtTRDRocEtObll4Ck5rN2Jzd3F6QTM4Q0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0cKQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlNlWE4ybApMcU5md1JPL0Jna1ZvcDU4SndVT2xUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFicDBDWkVqLzF0eFJlOTBVCjJ2TDdOZ2NEeCtHbVhadGYyNU5hWHVVWmFIVDVKNVBIeUNwdnQ5NHVqOVhuQWd1S0I0Ri9BZm83L2pXTlpraVcKcG83S2FOblVQd2hacWZZOEhsTjdrbE5va3dKbUxvTG05dXNHWEN5QXRiYjNhYkpBcUJvRkI3Ti8zdTZXWExESwozR0h1V3V3UklmOXJYSEhmMkRkVHpGanA0a2U3MXFQVU0zQURleUZ0Yk5sQTYydWZFNVhRUnBBbVpCTnFxYisxCi8waktzR2pCenhuRmpzZDd6Z3B2K21vQ0hrQjZ6cGJMd3lsMXAzYzZnWERXajd5eWZsWmVOd1ErdStOaVBjdW4KOWVCVmRvZlJnVys5VFM5MmNua1B3Q2FscjlzTitFKzlOQXRoYVNaL3JORmUrbHN2YmdDVDc3SFlNWUNENmRyZApIWEtnclE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
---
# Source: scaleway-csi/templates/storageclasses.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: scw-bssd
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
provisioner: csi.scaleway.com
reclaimPolicy: Delete
volumeBindingMode: Immediate
allowVolumeExpansion: true
parameters:
---
# Source: scaleway-csi/templates/storageclasses.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: scw-bssd-retain
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
provisioner: csi.scaleway.com
reclaimPolicy: Retain
volumeBindingMode: Immediate
allowVolumeExpansion: true
parameters:
---
# Source: scaleway-csi/templates/controller/rbac/attacher.yaml
# Sync from https://github.com/kubernetes-csi/external-attacher/blob/master/deploy/kubernetes/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-scaleway-csi-attacher
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments/status"]
    verbs: ["patch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
---
# Source: scaleway-csi/templates/controller/rbac/provisioner.yaml
# Sync from https://github.com/kubernetes-csi/external-provisioner/blob/master/deploy/kubernetes/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-scaleway-csi-provisioner
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["get", "list"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch"]
---
# Source: scaleway-csi/templates/controller/rbac/resizer.yaml
# Sync from https://github.com/kubernetes-csi/external-resizer/blob/master/deploy/kubernetes/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-scaleway-csi-resizer
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims/status"]
    verbs: ["patch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
---
# Source: scaleway-csi/templates/controller/rbac/snapshot-controller.yaml
# Sync from https://github.com/kubernetes-csi/external-snapshotter/blob/master/deploy/kubernetes/snapshot-controller/rbac-snapshot-controller.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-scaleway-csi-snapshot-controller
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["create", "get", "list", "watch", "update", "delete", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents/status"]
    verbs: ["patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots/status"]
    verbs: ["update", "patch"]
---
# Source: scaleway-csi/templates/controller/rbac/snapshotter.yaml
# Sync from https://github.com/kubernetes-csi/external-snapshotter/blob/master/deploy/kubernetes/csi-snapshotter/rbac-csi-snapshotter.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-scaleway-csi-snapshotter
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents/status"]
    verbs: ["update", "patch"]
---
# Source: scaleway-csi/templates/controller/rbac/webhook.yaml
# Sync from https://github.com/kubernetes-csi/external-snapshotter/blob/master/deploy/kubernetes/webhook-example/rbac-snapshot-webhook.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-scaleway-csi-webhook
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["groupsnapshot.storage.k8s.io"]
    resources: ["volumegroupsnapshotclasses"]
    verbs: ["get", "list", "watch"]
---
# Source: scaleway-csi/templates/controller/rbac/attacher.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-scaleway-csi-attacher
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: release-name-scaleway-csi
    namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-scaleway-csi-attacher
  apiGroup: rbac.authorization.k8s.io
---
# Source: scaleway-csi/templates/controller/rbac/provisioner.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-scaleway-csi-provisioner
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: release-name-scaleway-csi
    namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-scaleway-csi-provisioner
  apiGroup: rbac.authorization.k8s.io
---
# Source: scaleway-csi/templates/controller/rbac/resizer.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-scaleway-csi-resizer
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: release-name-scaleway-csi
    namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-scaleway-csi-resizer
  apiGroup: rbac.authorization.k8s.io
---
# Source: scaleway-csi/templates/controller/rbac/snapshot-controller.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-scaleway-csi-snapshot-controller
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: release-name-scaleway-csi
    namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-scaleway-csi-snapshot-controller
  apiGroup: rbac.authorization.k8s.io
---
# Source: scaleway-csi/templates/controller/rbac/snapshotter.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-scaleway-csi-snapshotter
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: release-name-scaleway-csi
    namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-scaleway-csi-snapshotter
  apiGroup: rbac.authorization.k8s.io
---
# Source: scaleway-csi/templates/controller/rbac/webhook.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-scaleway-csi-webhook
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: release-name-scaleway-csi
    namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-scaleway-csi-webhook
  apiGroup: rbac.authorization.k8s.io
---
# Source: scaleway-csi/templates/controller/rbac/attacher.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-scaleway-csi-attacher
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "watch", "list", "delete", "update", "create"]
---
# Source: scaleway-csi/templates/controller/rbac/provisioner.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-scaleway-csi-provisioner
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "watch", "list", "delete", "update", "create"]
- apiGroups: ["storage.k8s.io"]
  resources: ["csistoragecapacities"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get"]
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["get"]
---
# Source: scaleway-csi/templates/controller/rbac/resizer.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-scaleway-csi-resizer
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "watch", "list", "delete", "update", "create"]
---
# Source: scaleway-csi/templates/controller/rbac/snapshot-controller.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-scaleway-csi-snapshot-controller
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "watch", "list", "delete", "update", "create"]
---
# Source: scaleway-csi/templates/controller/rbac/snapshotter.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-scaleway-csi-snapshotter
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "watch", "list", "delete", "update", "create"]
---
# Source: scaleway-csi/templates/controller/rbac/attacher.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-scaleway-csi-attacher
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: release-name-scaleway-csi
    namespace: default
roleRef:
  kind: Role
  name: release-name-scaleway-csi-attacher
  apiGroup: rbac.authorization.k8s.io
---
# Source: scaleway-csi/templates/controller/rbac/provisioner.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-scaleway-csi-provisioner
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: release-name-scaleway-csi
roleRef:
  kind: Role
  name: release-name-scaleway-csi-provisioner
  apiGroup: rbac.authorization.k8s.io
---
# Source: scaleway-csi/templates/controller/rbac/resizer.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-scaleway-csi-resizer
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: release-name-scaleway-csi
roleRef:
  kind: Role
  name: release-name-scaleway-csi-resizer
  apiGroup: rbac.authorization.k8s.io
---
# Source: scaleway-csi/templates/controller/rbac/snapshot-controller.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-scaleway-csi-snapshot-controller
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: release-name-scaleway-csi
roleRef:
  kind: Role
  name: release-name-scaleway-csi-snapshot-controller
  apiGroup: rbac.authorization.k8s.io
---
# Source: scaleway-csi/templates/controller/rbac/snapshotter.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-scaleway-csi-snapshotter
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: release-name-scaleway-csi
roleRef:
  kind: Role
  name: release-name-scaleway-csi-snapshotter
  apiGroup: rbac.authorization.k8s.io
---
# Source: scaleway-csi/templates/controller/webhook-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-scaleway-csi-snapshot-validation
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app: release-name-scaleway-csi-controller
  ports:
    - protocol: TCP
      port: 443
      targetPort: 443
---
# Source: scaleway-csi/templates/node/daemonset.yaml
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: release-name-scaleway-csi-node
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: scaleway-csi
      app.kubernetes.io/instance: release-name
      app: release-name-scaleway-csi-node
  template:
    metadata:
      labels:
        app.kubernetes.io/name: scaleway-csi
        app.kubernetes.io/instance: release-name
        app: release-name-scaleway-csi-node
    spec:
      securityContext:
        {}
      serviceAccount: release-name-scaleway-csi
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      containers:
        - name: scaleway-csi-plugin
          image: "scaleway/scaleway-csi:v0.2.3"
          imagePullPolicy: IfNotPresent
          args :
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--v=4"
            - "--mode=node"
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
          securityContext:
            privileged: true
          resources:
            {}
          ports:
            - name: healthz
              containerPort: 9808
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 2
            failureThreshold: 5
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: kubelet-dir
              mountPath: /var/lib/kubelet
              mountPropagation: "Bidirectional"
            - name: device-dir
              mountPath: /dev
        - name: csi-node-driver-registrar
          image: "registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.8.0"
          imagePullPolicy: IfNotPresent
          args:
            - "--v=2"
            - "--csi-address=$(CSI_ADDRESS)"
            - "--kubelet-registration-path=$(KUBELET_REGISTRATION_PATH)"
          env:
            - name: CSI_ADDRESS
              value: /csi/csi.sock
            - name: KUBELET_REGISTRATION_PATH
              value: /var/lib/kubelet/plugins/csi.scaleway.com/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          resources:
            {}
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi/
            - name: registration-dir
              mountPath: /registration/
        - name: liveness-probe
          image: "registry.k8s.io/sig-storage/livenessprobe:v2.10.0"
          imagePullPolicy: IfNotPresent
          args:
            - "--csi-address=$(CSI_ADDRESS)"
          env:
            - name: CSI_ADDRESS
              value: /csi/csi.sock
          resources:
            {}
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
      volumes:
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/csi.scaleway.com
            type: DirectoryOrCreate
        - name: kubelet-dir
          hostPath:
            path: /var/lib/kubelet
            type: Directory
        - name: device-dir
          hostPath:
            path: /dev
---
# Source: scaleway-csi/templates/controller/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: release-name-scaleway-csi-controller
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: scaleway-csi
      app.kubernetes.io/instance: release-name
      app: release-name-scaleway-csi-controller
  replicas: 1
  template:
    metadata:
      annotations:
        checksum/webhook-secret: 567cf3514f09358baedd610b35a50d3b5970fc47a27858f206a220e2398994d5
      labels:
        app.kubernetes.io/name: scaleway-csi
        app.kubernetes.io/instance: release-name
        app: release-name-scaleway-csi-controller
    spec:
      securityContext:
        {}
      priorityClassName: system-cluster-critical
      serviceAccount: release-name-scaleway-csi
      containers:
        - name: scaleway-csi-plugin
          image: "scaleway/scaleway-csi:v0.2.3"
          imagePullPolicy: IfNotPresent
          args :
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--mode=controller"
            - "--v=4"
          env:
            - name: CSI_ENDPOINT
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
          envFrom:
            - secretRef:
                name: release-name-scaleway-csi-secret
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          resources:
            {}
          ports:
            - name: healthz
              containerPort: 9808
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 2
            failureThreshold: 5
        - name: csi-provisioner
          image: "registry.k8s.io/sig-storage/csi-provisioner:v3.5.0"
          imagePullPolicy: IfNotPresent
          args:
            - "--v=5"
            - "--csi-address=$(CSI_ADDRESS)"
            - "--leader-election"
            - "--feature-gates=Topology=true"
            - "--default-fstype=ext4"
          env:
            - name: CSI_ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          resources:
            {}
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: csi-attacher
          image: "registry.k8s.io/sig-storage/csi-attacher:v4.3.0"
          imagePullPolicy: IfNotPresent
          args:
            - "--v=5"
            - "--csi-address=$(CSI_ADDRESS)"
            - "--leader-election"
          env:
            - name: CSI_ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          resources:
            {}
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: csi-snapshotter
          image: "registry.k8s.io/sig-storage/csi-snapshotter:v6.2.2"
          imagePullPolicy: IfNotPresent
          args:
            - "--v=5"
            - "--csi-address=$(CSI_ADDRESS)"
            - "--leader-election"
          env:
            - name: CSI_ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          resources:
            {}
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: snapshot-controller
          image: "registry.k8s.io/sig-storage/snapshot-controller:v6.2.2"
          imagePullPolicy: IfNotPresent
          args:
            - "--v=5"
            - "--leader-election"
          resources:
            {}
        - name: csi-resizer
          image: "registry.k8s.io/sig-storage/csi-resizer:v1.8.0"
          imagePullPolicy: IfNotPresent
          args:
            - "--v=5"
            - "--csi-address=$(CSI_ADDRESS)"
            - "--leader-election"
          env:
            - name: CSI_ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          resources:
            {}
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: liveness-probe
          image: "registry.k8s.io/sig-storage/livenessprobe:v2.10.0"
          imagePullPolicy: IfNotPresent
          args:
            - "--csi-address=$(CSI_ADDRESS)"
          env:
            - name: CSI_ADDRESS
              value: /csi/csi.sock
          resources:
            {}
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: snapshot-validation
          image: "registry.k8s.io/sig-storage/snapshot-validation-webhook:v6.2.2"
          imagePullPolicy: IfNotPresent
          args: ['--tls-cert-file=/etc/snapshot-validation-webhook/certs/tls.crt', '--tls-private-key-file=/etc/snapshot-validation-webhook/certs/tls.key']
          ports:
          - containerPort: 443
          resources:
            {}
          volumeMounts:
            - name: snapshot-validation-webhook-certs
              mountPath: /etc/snapshot-validation-webhook/certs
              readOnly: true
      volumes:
        - name: socket-dir
          emptyDir: {}
        - name: snapshot-validation-webhook-certs
          secret:
            secretName: release-name-scaleway-csi-webhook
---
# Source: scaleway-csi/templates/csidriver.yaml
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: csi.scaleway.com
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
spec:
  attachRequired: true
  podInfoOnMount: true
---
# Source: scaleway-csi/templates/controller/validatingwebhookconfiguration.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: "validation-webhook.snapshot.storage.k8s.io"
webhooks:
- name: "validation-webhook.snapshot.storage.k8s.io"
  rules:
  - apiGroups:   ["snapshot.storage.k8s.io"]
    apiVersions: ["v1"]
    operations:  ["CREATE", "UPDATE"]
    resources:   ["volumesnapshots", "volumesnapshotcontents", "volumesnapshotclasses"]
    scope:       "*"
  clientConfig:
    service:
      namespace: default
      name: release-name-scaleway-csi-snapshot-validation
      path: "/volumesnapshot"
    caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lSQUp2dUhLNFdtOEF1RFNrcjlCSkJRTnd3RFFZSktvWklodmNOQVFFTEJRQXcKSWpFZ01CNEdBMVVFQXhNWGMyTmhiR1YzWVhrdFkzTnBMWGRsWW1odmIyc3RZMkV3SGhjTk1qUXdOVEEwTWpFdwpOekl6V2hjTk1qVXdOVEEwTWpFd056SXpXakFpTVNBd0hnWURWUVFERXhkelkyRnNaWGRoZVMxamMya3RkMlZpCmFHOXZheTFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTVplcFBMeW1idnMKbW1UNjF2K1QxcS96SGtmL1lBV0dOckE5SExvbTR1Z2EvamZJTVNSQnpnODFoenNmYkxVZUZOYUZFaytSMUx0MgpGbW45czZqSkZDTlNGTm5obkVwelVDdUE4SnNYZTRxTnRqdENRa044ODM2VEQ3MEV5T0dDVWZPUUpkL0YwTTdSCkhzOGtVazhIQXdZaHo2QUx0a3RmSm9WaDVzS2JaTUdvNzI0Y1NCVVUrQlo2bnFZMWRXaExNV2lOMlNZZkg3UW4KbCtBNElkZlZHL1NxY1Y0cWFBcExaZUhWa3c3WVR1SHF1aDEzRklDdmdXTzRXektBR05GVkliazFldUZNSmNraQpIem9FVGJNbGhQa1JrN3R1VkwySEMvQ2Z3MmcvTU9RcGNqZlVUVUZrQzJDZEhHbFdETHcybUtTRDRocEtObll4Ck5rN2Jzd3F6QTM4Q0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0cKQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlNlWE4ybApMcU5md1JPL0Jna1ZvcDU4SndVT2xUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFicDBDWkVqLzF0eFJlOTBVCjJ2TDdOZ2NEeCtHbVhadGYyNU5hWHVVWmFIVDVKNVBIeUNwdnQ5NHVqOVhuQWd1S0I0Ri9BZm83L2pXTlpraVcKcG83S2FOblVQd2hacWZZOEhsTjdrbE5va3dKbUxvTG05dXNHWEN5QXRiYjNhYkpBcUJvRkI3Ti8zdTZXWExESwozR0h1V3V3UklmOXJYSEhmMkRkVHpGanA0a2U3MXFQVU0zQURleUZ0Yk5sQTYydWZFNVhRUnBBbVpCTnFxYisxCi8waktzR2pCenhuRmpzZDd6Z3B2K21vQ0hrQjZ6cGJMd3lsMXAzYzZnWERXajd5eWZsWmVOd1ErdStOaVBjdW4KOWVCVmRvZlJnVys5VFM5MmNua1B3Q2FscjlzTitFKzlOQXRoYVNaL3JORmUrbHN2YmdDVDc3SFlNWUNENmRyZApIWEtnclE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
  admissionReviewVersions: ["v1"]
  sideEffects: None
  failurePolicy: Ignore
  timeoutSeconds: 2
---
# Source: scaleway-csi/templates/volumesnapshotclasses.yaml
apiVersion: snapshot.storage.k8s.io/v1
kind: VolumeSnapshotClass
metadata:
  name: scw-snapshot
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    snapshot.storage.kubernetes.io/is-default-class: "true"
driver: csi.scaleway.com
deletionPolicy: Delete
---
# Source: scaleway-csi/templates/volumesnapshotclasses.yaml
apiVersion: snapshot.storage.k8s.io/v1
kind: VolumeSnapshotClass
metadata:
  name: scw-snapshot-retain
  labels:
    helm.sh/chart: scaleway-csi-0.1.2
    app.kubernetes.io/name: scaleway-csi
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.2.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
driver: csi.scaleway.com
deletionPolicy: Retain
