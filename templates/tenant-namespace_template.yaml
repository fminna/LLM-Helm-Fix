---
# Source: tenant-namespace/charts/magicnamespace/templates/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: project
---
# Source: tenant-namespace/templates/simple-restricted-networkpolicy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default
  namespace: project
  labels:
    helm.sh/chart: tenant-namespace-0.6.14
    app.kubernetes.io/name: tenant-namespace
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.6.14"
    app.kubernetes.io/managed-by: Helm
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
# Allow non pod traffic
    - ipBlock:
        cidr: 0.0.0.0/0
        except:
        - 10.244.0.0/16
        - 10.96.0.0/12
# Allow admin namespace to access this namespace
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: default
      podSelector: {}
# Allow access to the kube-system namespace for service discovery
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
      podSelector: {}
# Allow this namespace to access itself
    - podSelector: {}
  egress:
  - to:
# Allow non pod traffic
    - ipBlock:
        cidr: 0.0.0.0/0
        except:
        - 10.244.0.0/16
        - 10.96.0.0/12
# Allow admin namespace to access this namespace
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: default
      podSelector: {}
# Allow access to the kube-system namespace for service discovery
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
      podSelector: {}
# Allow this namespace to access itself
    - podSelector: {}
---
# Source: tenant-namespace/templates/resourcequota.yaml
apiVersion: v1
kind: ResourceQuota
metadata:
  name: release-name
  namespace: project
  labels:
    helm.sh/chart: tenant-namespace-0.6.14
    app.kubernetes.io/name: tenant-namespace
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.6.14"
    app.kubernetes.io/managed-by: Helm
spec:
  hard:
    pods: 10
    requests.cpu: 5
    requests.memory: 4Gi
    limits.cpu: 10
    limits.memory: 8Gi
---
# Source: tenant-namespace/templates/limitrange.yaml
apiVersion: v1
kind: LimitRange
metadata:
  name: release-name
  namespace: project
  labels:
    helm.sh/chart: tenant-namespace-0.6.14
    app.kubernetes.io/name: tenant-namespace
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.6.14"
    app.kubernetes.io/managed-by: Helm
spec:
  limits:
    - default:
        cpu: 1000m
        memory: 2Gi
      defaultRequest:
        cpu: 100m
        memory: 256Mi
      type: Container
---
# Source: tenant-namespace/charts/ingress/templates/controller-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: ingress-4.7.3
    app.kubernetes.io/name: ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.8.4"
    app.kubernetes.io/part-of: ingress
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-ingress
  namespace: default
automountServiceAccountToken: true
---
# Source: tenant-namespace/charts/magicnamespace/templates/serviceaccounts.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ci
  namespace: project
  labels:
    chart: magicnamespace-0.5.4
    release: release-name
    heritage: Helm
---
# Source: tenant-namespace/charts/ingress/templates/controller-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    helm.sh/chart: ingress-4.7.3
    app.kubernetes.io/name: ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.8.4"
    app.kubernetes.io/part-of: ingress
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-ingress-controller
  namespace: default
data:
  allow-snippet-annotations: "true"
---
# Source: tenant-namespace/charts/ingress/templates/controller-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    helm.sh/chart: ingress-4.7.3
    app.kubernetes.io/name: ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.8.4"
    app.kubernetes.io/part-of: ingress
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-ingress
  namespace: default
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    resourceNames:
      - release-name-ingress-leader
    verbs:
      - get
      - update
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - list
      - watch
      - get
---
# Source: tenant-namespace/templates/nginx-ingress-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-tenant-namespace
  namespace: project
  labels:
    helm.sh/chart: tenant-namespace-0.6.14
    app.kubernetes.io/name: tenant-namespace
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.6.14"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - "networking.k8s.io" # k8s 1.14+
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - "networking.k8s.io" # k8s 1.14+
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - "networking.k8s.io" # k8s 1.14+
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
# Source: tenant-namespace/charts/ingress/templates/controller-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    helm.sh/chart: ingress-4.7.3
    app.kubernetes.io/name: ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.8.4"
    app.kubernetes.io/part-of: ingress
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-ingress
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-ingress
subjects:
  - kind: ServiceAccount
    name: release-name-ingress
    namespace: "default"
---
# Source: tenant-namespace/charts/magicnamespace/templates/rolebindings.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ci-admin
  namespace: project
  labels:
    chart: magicnamespace-0.5.4
    release: release-name
    heritage: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
- kind: ServiceAccount
  name: ci
---
# Source: tenant-namespace/templates/nginx-ingress-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-tenant-namespace
  namespace: project
  labels:
    helm.sh/chart: tenant-namespace-0.6.14
    app.kubernetes.io/name: tenant-namespace
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.6.14"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-tenant-namespace
subjects:
- kind: ServiceAccount
  name: release-name-ingress
  namespace: "default"
---
# Source: tenant-namespace/templates/rbac-admin-group-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: rbac-admin-group
  namespace: project
  labels:
    helm.sh/chart: tenant-namespace-0.6.14
    app.kubernetes.io/name: tenant-namespace
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.6.14"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
- kind: Group
  name: foo.project.admin
---
# Source: tenant-namespace/charts/ingress/templates/controller-service-metrics.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    helm.sh/chart: ingress-4.7.3
    app.kubernetes.io/name: ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.8.4"
    app.kubernetes.io/part-of: ingress
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-ingress-controller-metrics
  namespace: default
spec:
  type: ClusterIP
  ports:
    - name: metrics
      port: 10254
      protocol: TCP
      targetPort: metrics
  selector:
    app.kubernetes.io/name: ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
---
# Source: tenant-namespace/charts/ingress/templates/controller-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
  labels:
    helm.sh/chart: ingress-4.7.3
    app.kubernetes.io/name: ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.8.4"
    app.kubernetes.io/part-of: ingress
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-ingress-controller
  namespace: default
spec:
  type: LoadBalancer
  ipFamilyPolicy: SingleStack
  ipFamilies: 
    - IPv4
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
      appProtocol: http
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
      appProtocol: https
  selector:
    app.kubernetes.io/name: ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: controller
---
# Source: tenant-namespace/charts/ingress/templates/controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    helm.sh/chart: ingress-4.7.3
    app.kubernetes.io/name: ingress
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.8.4"
    app.kubernetes.io/part-of: ingress
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: release-name-ingress-controller
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: controller
  replicas: 1
  revisionHistoryLimit: 10
  minReadySeconds: 0
  template:
    metadata:
      labels:
        helm.sh/chart: ingress-4.7.3
        app.kubernetes.io/name: ingress
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.8.4"
        app.kubernetes.io/part-of: ingress
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: controller
    spec:
      dnsPolicy: ClusterFirst
      containers:
        - name: controller
          image: "registry.k8s.io/ingress-nginx/controller:v1.8.4@sha256:8d8ddf32b83ca3e74bd5f66369fa60d85353e18ff55fa7691b321aa4716f5ba9"
          imagePullPolicy: IfNotPresent
          lifecycle: 
            preStop:
              exec:
                command:
                - /wait-shutdown
          args:
            - /nginx-ingress-controller
            - --publish-service=$(POD_NAMESPACE)/release-name-ingress-controller
            - --election-id=release-name-ingress-leader
            - --controller-class=k8s.io/ingress-nginx
            - --ingress-class=public
            - --configmap=$(POD_NAMESPACE)/release-name-ingress-controller
            - --watch-namespace=$(POD_NAMESPACE)
          securityContext: 
            capabilities:
              drop:
              - ALL
              add:
              - NET_BIND_SERVICE
            runAsUser: 101
            allowPrivilegeEscalation: true
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LD_PRELOAD
              value: /usr/local/lib/libmimalloc.so
          livenessProbe: 
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe: 
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
            - name: metrics
              containerPort: 10254
              protocol: TCP
          resources: 
            requests:
              cpu: 100m
              memory: 90Mi
      nodeSelector: 
        kubernetes.io/os: linux
      serviceAccountName: release-name-ingress
      terminationGracePeriodSeconds: 300
