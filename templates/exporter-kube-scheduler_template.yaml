---
# Source: exporter-kube-scheduler/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: "prometheus"
    chart: exporter-kube-scheduler-0.1.1
    heritage: Helm
    prometheus: release-name
    release: release-name
  name: release-name-exporter-ku
data:
  kube-controller-manager.rules: |-
    # NOTE: These rules were kindly contributed by the SoundCloud engineering team.

    ### Scheduling latency ###

    cluster:scheduler_e2e_scheduling_latency:quantile_seconds{quantile="0.99"} =
      histogram_quantile(0.99,sum by (le,cluster) (scheduler_e2e_scheduling_latency_microseconds_bucket)) / 1e6
    cluster:scheduler_e2e_scheduling_latency:quantile_seconds{quantile="0.9"} =
      histogram_quantile(0.9,sum by (le,cluster) (scheduler_e2e_scheduling_latency_microseconds_bucket)) / 1e6
    cluster:scheduler_e2e_scheduling_latency:quantile_seconds{quantile="0.5"} =
      histogram_quantile(0.5,sum by (le,cluster) (scheduler_e2e_scheduling_latency_microseconds_bucket)) / 1e6

    cluster:scheduler_scheduling_algorithm_latency:quantile_seconds{quantile="0.99"} =
      histogram_quantile(0.99,sum by (le,cluster) (scheduler_scheduling_algorithm_latency_microseconds_bucket)) / 1e6
    cluster:scheduler_scheduling_algorithm_latency:quantile_seconds{quantile="0.9"} =
      histogram_quantile(0.9,sum by (le,cluster) (scheduler_scheduling_algorithm_latency_microseconds_bucket)) / 1e6
    cluster:scheduler_scheduling_algorithm_latency:quantile_seconds{quantile="0.5"} =
      histogram_quantile(0.5,sum by (le,cluster) (scheduler_scheduling_algorithm_latency_microseconds_bucket)) / 1e6

    cluster:scheduler_binding_latency:quantile_seconds{quantile="0.99"} =
      histogram_quantile(0.99,sum by (le,cluster) (scheduler_binding_latency_microseconds_bucket)) / 1e6
    cluster:scheduler_binding_latency:quantile_seconds{quantile="0.9"} =
      histogram_quantile(0.9,sum by (le,cluster) (scheduler_binding_latency_microseconds_bucket)) / 1e6
    cluster:scheduler_binding_latency:quantile_seconds{quantile="0.5"} =
      histogram_quantile(0.5,sum by (le,cluster) (scheduler_binding_latency_microseconds_bucket)) / 1e6

    ALERT K8SSchedulerDown
      IF absent(up{job="release-name-exporter-ku"}) or (count by(cluster) (up{job="release-name-exporter-ku"} == 1) == 0)
      FOR 5m
      LABELS {
        service = "k8s",
        severity = "critical",
      }
      ANNOTATIONS {
        summary = "Scheduler is down",
        description = "There is no running K8S scheduler. New pods are not being assigned to nodes.",
      }
---
# Source: exporter-kube-scheduler/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: exporter-kube-scheduler
    component: kube-scheduler
    heritage: Helm
    release: release-name
    chart: exporter-kube-scheduler-0.1.1
  name: release-name-exporter-ku
  namespace: kube-system
spec:
  clusterIP: None
  ports:
    - name: http-metrics
      port: 10251
      protocol: TCP
      targetPort: 10251
  selector:
    k8s-app: kube-scheduler
  type: ClusterIP
---
# Source: exporter-kube-scheduler/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1alpha1
kind: ServiceMonitor
metadata:
  labels:
    app: prometheus
    chart: "exporter-kube-scheduler-0.1.1"
    component: kube-scheduler
    heritage: "Helm"
    release: "release-name"
    prometheus: release-name
  name: release-name-exporter-ku
spec:
  jobLabel: release-name-exporter-ku
  selector:
    matchLabels:
      app: exporter-kube-scheduler
      component: kube-scheduler
  namespaceSelector:
    matchNames:
      - "kube-system"
  endpoints:
  - port: http-metrics
    interval: 15s
    bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
