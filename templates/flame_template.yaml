---
# Source: flame/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-flame
  labels:
    helm.sh/chart: flame-0.3.0
    app.kubernetes.io/name: flame
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.1.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: flame/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-secret
  labels:
    helm.sh/chart: flame-0.3.0
    app.kubernetes.io/name: flame
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.1.1"
    app.kubernetes.io/managed-by: Helm
data:
  password: "cGFzc3dvcmQ="
---
# Source: flame/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-flame
  labels:
    helm.sh/chart: flame-0.3.0
    app.kubernetes.io/name: flame
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.1.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch"]
---
# Source: flame/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-flame
  labels:
    helm.sh/chart: flame-0.3.0
    app.kubernetes.io/name: flame
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.1.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-flame
subjects:
- kind: ServiceAccount
  name: release-name-flame
  namespace: default
---
# Source: flame/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-flame
  labels:
    helm.sh/chart: flame-0.3.0
    app.kubernetes.io/name: flame
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.1.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: flame
    app.kubernetes.io/instance: release-name
---
# Source: flame/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-flame
  labels:
    helm.sh/chart: flame-0.3.0
    app.kubernetes.io/name: flame
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.1.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: flame
      app.kubernetes.io/instance: release-name
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: flame
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-flame
      securityContext:
        {}
      containers:
        - name: flame
          securityContext:
            {}
          image: "pawelmalak/flame:2.1.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 5005
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
          env:
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-secret
                  key: password
          volumeMounts:
            - name: data
              mountPath: /app/data
      volumes:
        - name: data
          emptyDir: {}
---
# Source: flame/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-flame-test-connection"
  labels:
    helm.sh/chart: flame-0.3.0
    app.kubernetes.io/name: flame
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.1.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-flame:80']
  restartPolicy: Never
