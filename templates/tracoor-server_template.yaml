---
# Source: tracoor-server/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-tracoor-server-env
  labels:
    helm.sh/chart: tracoor-server-0.0.2
    app.kubernetes.io/name: tracoor-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: tracoor-server/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-tracoor-server
  labels:
    helm.sh/chart: tracoor-server-0.0.2
    app.kubernetes.io/name: tracoor-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |-
    
    addr: :8081
    gatewayAddr: :8080
    logging: debug
    metricsAddr: :9091
    persistence:
      driver_name: postgres
      dsn: postgres://user:password@localhost:5432/tracoor?sslmode=disable
    pprofAddr: :6060
    preStopSleepSeconds: 31
    services:
      indexer:
        retention:
          beaconStates: 24h
          executionBadBlocks: 168h
          executionBlockTraces: 24h
    store:
      config:
        access_key: minioadmin
        access_secret: minioadmin
        bucket_name: tracoor
        endpoint: http://localhost:9000
        region: us-east-1
      type: s3
---
# Source: tracoor-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-tracoor-server
  labels:
    helm.sh/chart: tracoor-server-0.0.2
    app.kubernetes.io/name: tracoor-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
    - port: 8081
      targetPort: grpc
      protocol: TCP
      name: grpc
    - port: 9091
      targetPort: metrics
      protocol: TCP
      name: metrics
    - port: 6060
      targetPort: pprof
      protocol: TCP
      name: pprof
  selector:
    app.kubernetes.io/name: tracoor-server
    app.kubernetes.io/instance: release-name
---
# Source: tracoor-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-tracoor-server
  labels:
    helm.sh/chart: tracoor-server-0.0.2
    app.kubernetes.io/name: tracoor-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tracoor-server
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tracoor-server
        app.kubernetes.io/instance: release-name
      annotations:
        checksum/config: 04e0cb5a386ff248725100b986bbb0d051ee337fa4367707619159e634622fa3
        checksum/secrets: ab9fff2c1ffea97897a6bdb6718dfdd7ae8febf294e12a0b60ab58bae0b07ce0
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      initContainers:
      containers:
      - name: tracoor-server
        image: "ethpandaops/tracoor:latest"
        imagePullPolicy: IfNotPresent
        command:
          - "/tracoor"
          - "server"
          - --config=/config.yaml
        securityContext:
            {}
        volumeMounts:
          - name: config
            mountPath: "/config.yaml"
            subPath: config.yaml
            readOnly: true
        ports:
          - name: http
            containerPort: 8080
            protocol: TCP
          - name: metrics
            containerPort: 9091
            protocol: TCP
          - name: grpc
            containerPort: 8081
            protocol: TCP
          - name: pprof
            containerPort: 6060
            protocol: TCP
        livenessProbe:
            initialDelaySeconds: 60
            periodSeconds: 120
            tcpSocket:
              port: grpc
        readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            tcpSocket:
              port: grpc
        lifecycle:
            preStop:
              exec:
                command:
                - /bin/sleep
                - "30"
        resources:
            {}
        env:
      nodeSelector:
        {}
      affinity:
        {}
      tolerations:
        []
      topologySpreadConstraints:
        []
      terminationGracePeriodSeconds: 90
      volumes:
        - name: config
          configMap:
            name: release-name-tracoor-server
