---
# Source: openldap-stack-ha/templates/secret-ltb.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-ltb-passwd
  labels:
    app: release-name
    chart: release-name-4.2.2
    release: release-name
    heritage: Helm
type: Opaque
data:
  LDAP_ADMIN_PASSWORD: "Tm90QFNlY3VyZVBhc3N3MHJk"
---
# Source: openldap-stack-ha/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name
  labels:
    app: release-name
    chart: release-name-4.2.2
    release: release-name
    heritage: Helm
type: Opaque
data:
  LDAP_ADMIN_USERNAME: "YWRtaW4="
  LDAP_ADMIN_PASSWORD: "Tm90QFNlY3VyZVBhc3N3MHJk"
  LDAP_CONFIG_ADMIN_PASSWORD: "Tm90QFNlY3VyZVBhc3N3MHJk"
---
# Source: openldap-stack-ha/charts/ltb-passwd/templates/configmap-ldap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-ltb-passwd-ldap-cm
  labels:
    app: release-name-ltb
    chart: ltb-passwd-0.1.0
    release: release-name
    heritage: Helm
data:
  ldap.conf: |
    TLS_REQCERT never
---
# Source: openldap-stack-ha/charts/phpldapadmin/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-phpldapadmin
  labels:
    app: phpldapadmin
    chart: phpldapadmin-0.1.2
    release: release-name
    heritage: Helm
data:
  PHPLDAPADMIN_HTTPS: "false"
  PHPLDAPADMIN_LDAP_CLIENT_TLS_REQCERT: never
  PHPLDAPADMIN_TRUST_PROXY_SSL: "true"
  PHPLDAPADMIN_LDAP_HOSTS: "#PYTHON2BASH:[{ 'release-name.default'  : [{'server': [{'tls': True},{'port':389}]},{'login': [{'bind_id': 'cn=admin,dc=example,dc=org'  }]}]}]"
---
# Source: openldap-stack-ha/templates/configmap-env.yaml
#
# A ConfigMap spec for openldap slapd that map directly to env variables in the Pod.
# List of environment variables supported is from the docker image:
# https://hub.docker.com/r/bitnami/openldap/
# Note that passwords are defined as secrets
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-env
  labels:
    app: release-name
    chart: release-name-4.2.2
    release: release-name
    heritage: Helm
data:
  LDAP_ROOT: dc=example,dc=org
  LDAP_EXTRA_SCHEMAS: cosine,inetorgperson,nis,syncprov,serverid,csyncprov,rep,bsyncprov,brep,acls
  LDAP_TLS_CERT_FILE: /opt/bitnami/openldap/certs/tls.crt
  LDAP_TLS_KEY_FILE: /opt/bitnami/openldap/certs/tls.key
  LDAP_TLS_CA_FILE: /opt/bitnami/openldap/certs/ca.crt
  LDAP_CONFIG_ADMIN_ENABLED: "yes"
  LDAP_CONFIG_ADMIN_USERNAME: "admin"
  BITNAMI_DEBUG: "true"
  LDAP_ENABLE_TLS: "yes"
  LDAP_LOGLEVEL: "256"
  LDAP_SKIP_DEFAULT_TREE: "no"
  LDAP_TLS_ENFORCE: "false"
  LDAPTLS_REQCERT: never
---
# Source: openldap-stack-ha/templates/configmap-replication-acls.yaml
#
# A ConfigMap spec for openldap slapd that map directly to files under
# /container/service/slapd/assets/config/bootstrap/ldif/custom
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-replication-acls
  labels:
    app: release-name
    chart: release-name-4.2.2
    release: release-name
    heritage: Helm
data:
  # replication
  syncprov.ldif: |
    # Load syncprov module
    dn: cn=module,cn=config
    cn: module
    objectClass: olcModuleList
    olcModuleLoad: syncprov.so
    olcModulePath: /opt/bitnami/openldap/lib/openldap
  serverid.ldif: |
    # Set server ID
    dn: cn=config
    changeType: modify
    add: olcServerID
    olcServerID: 1 ldap://release-name-0.release-name-headless.default.svc.cluster.local:1389
    olcServerID: 2 ldap://release-name-1.release-name-headless.default.svc.cluster.local:1389
    olcServerID: 3 ldap://release-name-2.release-name-headless.default.svc.cluster.local:1389
  csyncprov.ldif: |
    # Add syncprov on config
    dn: olcOverlay=syncprov,olcDatabase={0}config,cn=config
    changetype: add
    objectClass: olcOverlayConfig
    objectClass: olcSyncProvConfig
    olcOverlay: syncprov
  rep.ldif: |
    # Add sync replication on config
    dn: olcDatabase={0}config,cn=config
    changetype: modify
    add: olcSyncRepl
    olcSyncRepl: rid=001 provider=ldap://release-name-0.release-name-headless.default.svc.cluster.local:1389 binddn="cn=admin,cn=config" bindmethod=simple credentials=Not@SecurePassw0rd searchbase="cn=config" type=refreshAndPersist retry="60 +" timeout=1 starttls=critical tls_reqcert=never
    olcSyncRepl: rid=002 provider=ldap://release-name-1.release-name-headless.default.svc.cluster.local:1389 binddn="cn=admin,cn=config" bindmethod=simple credentials=Not@SecurePassw0rd searchbase="cn=config" type=refreshAndPersist retry="60 +" timeout=1 starttls=critical tls_reqcert=never
    olcSyncRepl: rid=003 provider=ldap://release-name-2.release-name-headless.default.svc.cluster.local:1389 binddn="cn=admin,cn=config" bindmethod=simple credentials=Not@SecurePassw0rd searchbase="cn=config" type=refreshAndPersist retry="60 +" timeout=1 starttls=critical tls_reqcert=never
    -
    add: olcMirrorMode
    olcMirrorMode: TRUE
  bsyncprov.ldif: |
    dn: olcOverlay=syncprov,olcDatabase={2}mdb,cn=config
    objectClass: olcOverlayConfig
    objectClass: olcSyncProvConfig
    olcOverlay: syncprov
    olcSpSessionLog: 100
  brep.ldif: |
    dn: olcDatabase={2}mdb,cn=config
    changetype: modify
    add: olcSyncrepl
    olcSyncrepl:
      rid=101
      provider=ldap://release-name-0.release-name-headless.default.svc.cluster.local:1389
      binddn=cn=admin,dc=example,dc=org
      bindmethod=simple
      credentials=Not@SecurePassw0rd
      searchbase=dc=example,dc=org
      type=refreshAndPersist
      interval=00:00:00:10
      network-timeout=0
      retry="60 +"
      timeout=1
      starttls=critical
      tls_reqcert=never
    olcSyncrepl:
      rid=102
      provider=ldap://release-name-1.release-name-headless.default.svc.cluster.local:1389
      binddn=cn=admin,dc=example,dc=org
      bindmethod=simple
      credentials=Not@SecurePassw0rd
      searchbase=dc=example,dc=org
      type=refreshAndPersist
      interval=00:00:00:10
      network-timeout=0
      retry="60 +"
      timeout=1
      starttls=critical
      tls_reqcert=never
    olcSyncrepl:
      rid=103
      provider=ldap://release-name-2.release-name-headless.default.svc.cluster.local:1389
      binddn=cn=admin,dc=example,dc=org
      bindmethod=simple
      credentials=Not@SecurePassw0rd
      searchbase=dc=example,dc=org
      type=refreshAndPersist
      interval=00:00:00:10
      network-timeout=0
      retry="60 +"
      timeout=1
      starttls=critical
      tls_reqcert=never

    dn: olcDatabase={2}mdb,cn=config
    changetype: modify
    add: olcMirrorMode
    olcMirrorMode: TRUE
  # acls
  acls.ldif: |
    dn: olcDatabase={2}mdb,cn=config
    changetype: modify
    replace: olcAccess
    olcAccess: {0}to *
      by dn.exact=gidNumber=0+uidNumber=1001,cn=peercred,cn=external,cn=auth manage
      by * break
    olcAccess: {1}to attrs=userPassword,shadowLastChange
      by self write
      by dn="cn=admin,dc=example,dc=org" write
      by anonymous auth by * none
    olcAccess: {2}to *
      by dn="cn=admin,dc=example,dc=org" write
      by self read
      by * none
---
# Source: openldap-stack-ha/charts/ltb-passwd/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-ltb-passwd
  labels:
    app.kubernetes.io/name: release-name-ltb
    helm.sh/chart: ltb-passwd-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: release-name-ltb
    app.kubernetes.io/instance: release-name
---
# Source: openldap-stack-ha/charts/phpldapadmin/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-phpldapadmin
  labels:
    app: phpldapadmin
    chart: phpldapadmin-0.1.2
    release: release-name
    heritage: Helm
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: phpldapadmin
    release: release-name
---
# Source: openldap-stack-ha/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name
  namespace: default
  labels:
    app.kubernetes.io/component: release-name
    chart: release-name-4.2.2
    release: release-name
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - name: ldap-port
      protocol: TCP
      port: 389
      targetPort: ldap-port
      nodePort: null
    - name: ssl-ldap-port
      protocol: TCP
      port: 636
      targetPort: ssl-ldap-port
      nodePort: null
  sessionAffinity: None
  selector:
    app.kubernetes.io/component: release-name
    release: release-name
---
# Source: openldap-stack-ha/templates/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-headless
  labels:
    app.kubernetes.io/component: release-name
    chart: release-name-4.2.2
    release: release-name
    heritage: Helm
spec:
  ports:
  - port: 389
    name: ldap-port
    targetPort: ldap-port
  clusterIP: None
  selector:
    app.kubernetes.io/component: release-name
    release: release-name  
  type: ClusterIP
  sessionAffinity: None
---
# Source: openldap-stack-ha/charts/ltb-passwd/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-ltb-passwd
  labels:
    app.kubernetes.io/name: release-name-ltb
    helm.sh/chart: ltb-passwd-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.3"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: release-name-ltb
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: release-name-ltb
        app.kubernetes.io/instance: release-name
    spec:
      
      containers:
        - name: ltb-passwd
          image: tiredofit/self-service-password:5.2.3
          imagePullPolicy: Always
          env:
          - name: LDAP_SERVER
            value: ldaps://release-name.default:636
          - name: LDAP_BINDDN
            value: cn=admin,dc=example,dc=org
          - name: LDAP_BINDPASS
            valueFrom:
              secretKeyRef:
                name: release-name-ltb-passwd
                key: LDAP_ADMIN_PASSWORD
          - name: LDAP_BASE_SEARCH
            value: "dc=example,dc=org"
          - name: SECRETKEY
            value: password
          - name: LDAP_LOGIN_ATTRIBUTE
            value: cn
          - name: LDAP_STARTTLS
            value: "false"
          - name: CHANGE_SSHKEY
            value: "true"
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
          volumeMounts:
            - mountPath: /etc/openldap
              name: ldap-conf
      volumes:
      - name: ldap-conf
        configMap:
          name: release-name-ltb-passwd-ldap-cm
---
# Source: openldap-stack-ha/charts/phpldapadmin/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment

metadata:
  name: release-name-phpldapadmin
  labels:
    app: phpldapadmin
    chart: phpldapadmin-0.1.2
    release: release-name
    heritage: Helm

spec:
  replicas: 1
  selector:
    matchLabels:
      app: phpldapadmin
      release: release-name
  template:
    metadata:
      labels:
        app: phpldapadmin
        release: release-name
    spec:
      
      containers:
      - name: phpldapadmin
        image: osixia/phpldapadmin:0.9.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        envFrom:
        - configMapRef:
            name: release-name-phpldapadmin
        livenessProbe:
            httpGet:
              path: /
              port: http
        readinessProbe:
            httpGet:
              path: /
              port: http
        resources:
            {}
---
# Source: openldap-stack-ha/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name:  release-name
  labels:
    app.kubernetes.io/name: openldap-stack-ha
    helm.sh/chart: openldap-stack-ha-4.2.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: release-name
    chart: release-name-4.2.2
    release: release-name
    heritage: Helm
spec:
  replicas: 3
  selector:
    matchLabels: 
      app.kubernetes.io/name: openldap-stack-ha
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: release-name
  serviceName: release-name-headless
  updateStrategy:

    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configmap-env: 6745c271ddd68c27fccc9390057f26a9af7fafd3d9923b5426dec412f94e2de7
      labels:
        app.kubernetes.io/name: openldap-stack-ha
        helm.sh/chart: openldap-stack-ha-4.2.2
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: release-name
        release: release-name
    spec:
      initContainers:
        - name: init-schema
          image: debian:latest
          imagePullPolicy: "Always"
          command:
            - sh
            - -c
            - |
              host=$(hostname)
              if [ "$host" = "release-name-0" ]
              then
                echo "This is the main openldap so let's init all additional schemas and ldifs here"
                cp -p -f /cm-schemas-acls/*.ldif /custom_config/ 
                if [ -d /cm-schemas ]; then
                  cp -p -f /cm-schemas/*.ldif /custom-schemas/ 
                fi
                if [ -d /cm-ldifs ]; then
                  cp -p -f /cm-ldifs/*.ldif /custom-ldifs/ 
                fi
              else
                cp -p -f /cm-schemas-acls/*.ldif /custom_config/
                rm -rf /custom_config/acls.ldif
                echo "let the replication takes care of everything :)"
              fi
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: cm-replication-acls
              mountPath: "/cm-schemas-acls"
            - name: replication-acls
              mountPath: "/custom_config"
        - name: init-tls-secret
          image: docker.io/alpine/openssl:latest
          imagePullPolicy: "IfNotPresent"
          command:
            - sh
            - -c
            - |
              openssl req -x509 -newkey rsa:4096 -nodes -subj '/CN=example.org' -keyout /tmp-certs/tls.key -out /tmp-certs/tls.crt -days 365
              chmod 777  /tmp-certs/*
              cp -Lr /tmp-certs/* /certs
              [ -e /certs/ca.crt ] || cp -a /certs/tls.crt /certs/ca.crt
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: certs
              mountPath: "/certs"
            - name: secret-certs
              mountPath: "/tmp-certs"
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: openldap-stack-ha
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: openldap
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      containers:
        - name: openldap-stack-ha
          image: jpgouin/openldap:2.6.6-fix
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          envFrom:
            - configMapRef:
                name: release-name-env
            - secretRef:
                name: release-name
          resources:
            limits: {}
            requests: {}
          ports:
            - name: ldap-port
              containerPort: 1389
            - name: ssl-ldap-port
              containerPort: 1636
          livenessProbe:
            tcpSocket:
              port: ldap-port
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            tcpSocket:
              port: ldap-port
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 10
          startupProbe:
            tcpSocket:
              port: ldap-port
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 30
          volumeMounts:
            - name: data
              mountPath: /bitnami/openldap/
            - name: certs
              mountPath: /opt/bitnami/openldap/certs
            - name: replication-acls
              mountPath: /opt/bitnami/openldap/etc/schema/syncprov.ldif
              subPath: syncprov.ldif
            - name: replication-acls
              mountPath: /opt/bitnami/openldap/etc/schema/serverid.ldif
              subPath: serverid.ldif
            - name: replication-acls
              mountPath: /opt/bitnami/openldap/etc/schema/csyncprov.ldif
              subPath: csyncprov.ldif
            - name: replication-acls
              mountPath: /opt/bitnami/openldap/etc/schema/rep.ldif
              subPath: rep.ldif
            - name: replication-acls
              mountPath: /opt/bitnami/openldap/etc/schema/bsyncprov.ldif
              subPath: bsyncprov.ldif
            - name: replication-acls
              mountPath: /opt/bitnami/openldap/etc/schema/brep.ldif
              subPath: brep.ldif
            - name: replication-acls
              mountPath: /opt/bitnami/openldap/etc/schema/acls.ldif
              subPath: acls.ldif
      volumes:
        - name: cm-replication-acls
          configMap:
            name: release-name-replication-acls
        - name: replication-acls
          emptyDir:
            medium: Memory
        - name: certs
          emptyDir:
            medium: Memory
        - name: secret-certs
          emptyDir:
            medium: Memory
  volumeClaimTemplates:
    - metadata:
        name: data
        annotations:
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: openldap-stack-ha/charts/ltb-passwd/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-ltb-passwd
  labels:
    app: release-name-ltb
    chart: ltb-passwd-0.1.0
    release: release-name
    heritage: Helm
spec:
  rules:
    - host: ssl-ldap2.example
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: release-name-ltb-passwd
                port:
                  name: http
---
# Source: openldap-stack-ha/charts/phpldapadmin/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-phpldapadmin
  labels:
    app: phpldapadmin
    chart: phpldapadmin-0.1.2
    release: release-name
    heritage: Helm
spec:
  rules:
    - host: phpldapadmin.example
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: release-name-phpldapadmin
                port:
                  name: http
---
# Source: openldap-stack-ha/templates/configmap-customldif.yaml
#
# A ConfigMap spec for openldap slapd that map directly to files under
# /container/service/slapd/assets/config/bootstrap/ldif/custom
#
---
# Source: openldap-stack-ha/templates/configmap-customschema.yaml
#
# A ConfigMap spec for openldap slapd that map directly to files under
# /opt/bitnami/openldap/etc/schema/custom
#
