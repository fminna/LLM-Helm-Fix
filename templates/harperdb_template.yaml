---
# Source: harperdb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-harperdb
  labels:
    helm.sh/chart: harperdb-0.1.0
    app.kubernetes.io/name: harperdb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.0.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: harperdb/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: harperdb
  labels:
    helm.sh/chart: harperdb-0.1.0
    app.kubernetes.io/name: harperdb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.0.1"
    app.kubernetes.io/managed-by: Helm
stringData:
  HDB_ADMIN_PASSWORD: password12345
  HDB_ADMIN_USERNAME: admin
---
# Source: harperdb/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: harperdb
  labels:
    helm.sh/chart: harperdb-0.1.0
    app.kubernetes.io/name: harperdb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# Source: harperdb/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-harperdb
  labels:
    helm.sh/chart: harperdb-0.1.0
    app.kubernetes.io/name: harperdb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: LoadBalancer
  ports:
    - port: 9925
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: harperdb
    app.kubernetes.io/instance: release-name
---
# Source: harperdb/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-harperdb
  labels:
    helm.sh/chart: harperdb-0.1.0
    app.kubernetes.io/name: harperdb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: harperdb
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: harperdb
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-harperdb
      securityContext:
        fsGroup: 1000
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: harperdb
      containers:
        - name: harperdb
          volumeMounts:
          - name: data
            mountPath: /opt/harperdb/hdb
          envFrom:
          - secretRef:
              name: harperdb
          securityContext:
            {}
          image: "harperdb/harperdb:4.0.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 9925
              protocol: TCP          
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
