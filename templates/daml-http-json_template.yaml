---
# Source: daml-http-json/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-daml-http-json
  labels:
    app.kubernetes.io/component: http-json
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: daml-http-json
    app.kubernetes.io/part-of: daml
    app.kubernetes.io/version: 2.8.1
    helm.sh/chart: daml-http-json-0.6.1
automountServiceAccountToken: false
secrets:
---
# Source: daml-http-json/templates/configmap-env.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-daml-http-json-envmap
  labels:
    app.kubernetes.io/component: http-json
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: daml-http-json
    app.kubernetes.io/part-of: daml
    app.kubernetes.io/version: 2.8.1
    helm.sh/chart: daml-http-json-0.6.1
data:
  JDK_JAVA_OPTIONS: "-XX:+ExitOnOutOfMemoryError -XX:InitialRAMPercentage=70 -XX:MaxRAMPercentage=70"
---
# Source: daml-http-json/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-daml-http-json
  labels:
    app.kubernetes.io/component: http-json
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: daml-http-json
    app.kubernetes.io/part-of: daml
    app.kubernetes.io/version: 2.8.1
    helm.sh/chart: daml-http-json-0.6.1
data:
  http-json.conf: |
    {
      server {
        address = "0.0.0.0"
        port = 3000
      }

      ledger-api {
        address = "participant"
        port = 4001
      }
      query-store {
        base-config {
          user = "json"
          password = ${?PGPASSWORD}
          driver = "org.postgresql.Driver"
          url = "jdbc:postgresql://postgres:5432/json?ssl=true&sslmode=require"
          pool-size = 10
          min-idle = 4
          idle-timeout = "10s"
          connection-timeout = "60s"
        }

        start-mode = "create-and-start"
      }

      package-reload-interval = "5s"
      max-inbound-message-size = 4194304
      package-max-inbound-message-size = 4194304
      max-template-id-cache-entries = 1000
      health-timeout-seconds = 5

      
      websocket-config {
        max-duration = "120m"
        heartbeat-period = "5s"
        mode = "shaping"
      }
      
    }
---
# Source: daml-http-json/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-daml-http-json
  namespace: "default"
  labels:
    app.kubernetes.io/component: http-json
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: daml-http-json
    app.kubernetes.io/part-of: daml
    app.kubernetes.io/version: 2.8.1
    helm.sh/chart: daml-http-json-0.6.1
---
# Source: daml-http-json/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-daml-http-json
  namespace: "default"
  labels:
    app.kubernetes.io/component: http-json
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: daml-http-json
    app.kubernetes.io/part-of: daml
    app.kubernetes.io/version: 2.8.1
    helm.sh/chart: daml-http-json-0.6.1
roleRef:
  kind: Role
  name: release-name-daml-http-json
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: release-name-daml-http-json
    namespace: "default"
---
# Source: daml-http-json/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-daml-http-json
  labels:
    app.kubernetes.io/component: http-json
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: daml-http-json
    app.kubernetes.io/part-of: daml
    app.kubernetes.io/version: 2.8.1
    helm.sh/chart: daml-http-json-0.6.1
spec:
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      port: 7575
      targetPort: http
  selector:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: daml-http-json
---
# Source: daml-http-json/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-daml-http-json
  labels:
    app.kubernetes.io/component: http-json
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: daml-http-json
    app.kubernetes.io/part-of: daml
    app.kubernetes.io/version: 2.8.1
    helm.sh/chart: daml-http-json-0.6.1
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: daml-http-json
  template:
    metadata:
      annotations:
        "checksum/config": "19427e3733db2dd98008fbc6c7d96b18c5c884e99b5d92083e3a3843fdbd8e2d"
        "checksum/env": "db1f08743a8e26f25d594bfe1b951ecabf7ea5466aa629db4ab53b1b1dd61585"
        "checksum/secret": "01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b"
      labels:
        app.kubernetes.io/component: http-json
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: daml-http-json
        app.kubernetes.io/part-of: daml
        app.kubernetes.io/version: 2.8.1
        helm.sh/chart: daml-http-json-0.6.1
    spec:
      serviceAccountName: release-name-daml-http-json
      securityContext:
        fsGroup: 65532
        fsGroupChangePolicy: Always
        sysctls: []
      containers:
        - name: http-json
          image: "digitalasset-docker.jfrog.io/http-json:2.8.1"
          imagePullPolicy: "IfNotPresent"
          securityContext:
            readOnlyRootFilesystem: true
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          args:
            - "--log-level=INFO"
            - "--log-encoder=plain"
            - "--config=/etc/http-json/http-json.conf"
          envFrom:
            - configMapRef:
                name: release-name-daml-http-json-envmap
          ports:
            - name: http
              containerPort: 3000
          resources:
            limits:
              cpu: 1
              memory: 1Gi
            requests:
              cpu: 200m
          livenessProbe:
            httpGet:
              path: /livez
              port: http
            timeoutSeconds: 1
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /readyz
              port: http
            timeoutSeconds: 1
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: config
              mountPath: /etc/http-json
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: release-name-daml-http-json
