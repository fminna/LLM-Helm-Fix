---
# Source: account-lookup-service-admin/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-account-lookup-service-admin
  namespace: "default"
  labels:
    app.kubernetes.io/name: account-lookup-service-admin
    helm.sh/chart: account-lookup-service-admin-13.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: account-lookup-service-admin
---
# Source: account-lookup-service-admin/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-account-lookup-service-admin-config
  labels:
    app.kubernetes.io/name: account-lookup-service-admin
    helm.sh/chart: account-lookup-service-admin-13.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: account-lookup-service-admin
data:
  default.json: |
    {  
        "ADMIN_PORT": 4001,
        "API_PORT":  4001,
        "DATABASE": {
          "DIALECT": "mysql",
          "HOST": "mysql",
          "PORT": 3306,
          "USER": "account_lookup",
          "DATABASE": "account_lookup",
          "POOL_MIN_SIZE": 10,
          "POOL_MAX_SIZE": 30,
          "ACQUIRE_TIMEOUT_MILLIS": 30000,
          "CREATE_TIMEOUT_MILLIS": 30000,
          "DESTROY_TIMEOUT_MILLIS": 5000,
          "IDLE_TIMEOUT_MILLIS": 30000,
          "REAP_INTERVAL_MILLIS": 1000,
          "CREATE_RETRY_INTERVAL_MILLIS": 200,
          "DEBUG": false
        },
        "DISPLAY_ROUTES": true,
        "RUN_MIGRATIONS": false,
        "ENDPOINT_CACHE_CONFIG": {
          "expiresIn": 180000,
          "generateTimeout": 30000
        },
        "SWITCH_ENDPOINT": "http://release-name-admin-api-svc:80",
        "ERROR_HANDLING": {
          "includeCauseExtension": false,
          "truncateExtensions": true
        },
        "INSTRUMENTATION": {
          "METRICS": {
            "DISABLED": false,
            "labels": {
              "fspId": "*"
            },
            "config": {
              "timeout": 5000,
              "prefix": "moja_",
              "defaultLabels": {
                "serviceName": "account-lookup-service"
              }
            }
          }
        },
        "ENDPOINT_SECURITY":{
            "JWS": {
                "JWS_SIGN": false,
                "FSPIOP_SOURCE_TO_SIGN": "switch",
                "JWS_SIGNING_KEY_PATH": "secrets/jwsSigningKey.key"
              }
        }, 
        "ERROR_HANDLING": {
            "includeCauseExtension": false,
            "truncateExtensions": true
        },
        "INSTRUMENTATION": {
            "METRICS": {
                "DISABLED": false,
                "labels": {
                    "fspId": "*"
                },
                "config": {
                    "timeout": 5000,
                    "prefix": "moja_",
                    "defaultLabels": {
                        "serviceName": "account-lookup-service"
                    }
                }
            }
        },
        "API_DOCUMENTATION_ENDPOINTS": true,
        "FEATURE_ENABLE_EXTENDED_PARTY_ID_TYPE": false      
    }
    
  knexfile.js: "'use strict'\nconst migrationsDirectory = '/opt/account-lookup-service/migrations'\nconst seedsDirectory = '/opt/account-lookup-service/seeds'\nconst Config = require('/opt/account-lookup-service/src/lib/config')\nmodule.exports = {\n    client: 'mysql',\n    version: '5.7',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}\n\n"
---
# Source: account-lookup-service-admin/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-account-lookup-service-admin-sidecar
  labels:
    app.kubernetes.io/name: account-lookup-service-admin
    helm.sh/chart: account-lookup-service-admin-13.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: account-lookup-service-admin
data:
  default.json: |
    {
      "PORT": 4003,
      "EVENT_LOGGER_GRPC_HOST": "localhost",
      "EVENT_LOGGER_GRPC_PORT": 50051,
      "INSTRUMENTATION": {
        "METRICS": {
          "DISABLED": false,
          "labels": {
            "eventId": "*"
          },
          "config": {
            "timeout": 5000,
            "prefix": "moja_",
            "defaultLabels": {
              "serviceName": "account-lookup-service-admin-event-sidecar"
            }
          }
        }
      },
      "KAFKA": {
        "TOPIC_TEMPLATES": {
          "GENERAL_TOPIC_TEMPLATE": {
            "TEMPLATE": "topic-{{functionality}}",
            "REGEX": "topic-(.*)"
          }
        },
        "PRODUCER": {
          "EVENT": {
            "config": {
              "options": {
                "messageCharset": "utf8"
              },
              "rdkafkaConf": {
                "metadata.broker.list": "kafka:9092",
                "client.id": "es-prod-event",
                "event_cb": true,
                "dr_cb": true,
                "socket.keepalive.enable": true,
                "queue.buffering.max.messages": 10000000
              },
              "topicConf": {
                "request.required.acks": "all",
                "partitioner": "murmur2_random"
              }
            }
          }
        }
      }
    }
---
# Source: account-lookup-service-admin/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-account-lookup-service-admin
  namespace: "default"
  labels:
    app.kubernetes.io/name: account-lookup-service-admin
    helm.sh/chart: account-lookup-service-admin-13.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: account-lookup-service-admin-13.0.0
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 4001
      protocol: TCP
  selector:
    app.kubernetes.io/name: account-lookup-service-admin
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: account-lookup-service-admin-13.0.0
---
# Source: account-lookup-service-admin/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-account-lookup-service-admin
  namespace: "default"
  labels:
    app.kubernetes.io/name: account-lookup-service-admin
    helm.sh/chart: account-lookup-service-admin-13.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: account-lookup-service-admin-13.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: account-lookup-service-admin
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: account-lookup-service-admin-13.0.0
  template:
    metadata:
      annotations: 
        checksum/config: 26e04bcc5a3f01242219c9c4a9727d3611163f1d6376f76058785fa0447ea129
        prometheus.io/port: "4001"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: account-lookup-service-admin
        helm.sh/chart: account-lookup-service-admin-13.0.0
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: account-lookup-service-admin-13.0.0
        app.kubernetes.io/version: 13.0.0
    spec:
      serviceAccountName: release-name-account-lookup-service-admin
      
      
      securityContext:
        fsGroup: 1001
      initContainers:
        - command:
          - sh
          - -c
          - until ./bin/kafka-broker-api-versions.sh --bootstrap-server ${KAFKA_HOST}:${KAFKA_PORT};
            do echo --------------------; echo Waiting for Kafka...; sleep 2; done; echo ====================;
            echo Kafka ok!;
          env:
          - name: KAFKA_HOST
            value: 'kafka'
          - name: KAFKA_PORT
            value: '9092'
          image: solsson/kafka
          imagePullPolicy: IfNotPresent
          name: wait-for-kafka
        - command:
          - sh
          - -c
          - until mysql -h ${DB_HOST} -P ${DB_PORT} -u ${DB_USER} --password=${DB_PASSWORD}  ${DB_DATABASE}
            -e 'select version()' ; do echo --------------------; echo Waiting for MySQL...;
            sleep 2; done; echo ====================; echo MySQL ok!;
          env:
          - name: DB_HOST
            value: 'mysql'
          - name: DB_PORT
            value: '3306'
          - name: DB_USER
            value: 'account_lookup'
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: 'mysql-password'
                name: 'mysql'
          - name: DB_DATABASE
            value: 'account_lookup'
          image: mysql
          imagePullPolicy: IfNotPresent
          name: wait-for-mysql
        - command:
          - sh
          - -c
          - npm run migrate
          env:
          - name: ALS_MIGRATIONS__RUN_DATA_MIGRATIONS
            value: "true"
          - name: ALS_DATABASE__PASSWORD
            valueFrom:
              secretKeyRef:
                key: 'mysql-password'
                name: 'mysql'
          image: 'docker.io/mojaloop/account-lookup-service:v11.8.0'
          imagePullPolicy: IfNotPresent
          name: run-migration
          volumeMounts:
          - mountPath: /opt/account-lookup-service/config
            name: config-volume
      containers:
        - name: account-lookup-service-admin
          image: docker.io/mojaloop/account-lookup-service:v11.8.0
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1001
          command:
            ["node", "src/index.js", "server", "--admin"]
          ports:
            - name: http
              containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 15
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 15
            periodSeconds: 15
          volumeMounts:
            - name: config-volume
              mountPath: /opt/account-lookup-service/config
          env:
            - name: ALS_DATABASE__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: 'mysql'
                  key: 'mysql-password'
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.1,participants=1.1,quotes=1.0
        - name: account-lookup-service-admin-sidecar
          image: "mojaloop/event-sidecar:v11.0.1"
          imagePullPolicy: IfNotPresent
          command:
            - npm
            - run
            - start
          ports:
            - containerPort: 4003
          readinessProbe:
            httpGet:
              path: /health
              port: 4003
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4003
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: config-volume
          configMap:
            name: release-name-account-lookup-service-admin-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
        - name: sidecar-volume
          configMap:
            name: release-name-account-lookup-service-admin-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: account-lookup-service-admin/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-account-lookup-service-admin
  namespace: "default"
  labels:
    app.kubernetes.io/name: account-lookup-service-admin
    helm.sh/chart: account-lookup-service-admin-13.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: account-lookup-service-admin-13.0.0
spec:
  ingressClassName: nginx
  rules:
    - host: account-lookup-service-admin.local
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: release-name-account-lookup-service-admin
                port:
                  name: http
