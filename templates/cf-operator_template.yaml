---
# Source: cf-operator/templates/single-namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: "staging"
  labels:
    quarks.cloudfoundry.org/monitored: cfo
    quarks.cloudfoundry.org/qjob-service-account: qjob-persist-output
---
# Source: cf-operator/charts/quarks-job/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-quarks-job
  namespace: default
---
# Source: cf-operator/charts/quarks-job/templates/single-namespace.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "qjob-persist-output"
  namespace: "staging"
---
# Source: cf-operator/charts/quarks-secret/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-quarks-secret
  namespace: default
---
# Source: cf-operator/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-cf-operator
  namespace: default
---
# Source: cf-operator/charts/quarks-job/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: release-name-quarks-job
rules:

- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - update

- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch

- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - watch

- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - list
  - watch

- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch

- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - get
  - list
  - update
  - watch

- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
  - update

- apiGroups:
  - quarks.cloudfoundry.org
  resources:
  - quarksjobs
  verbs:
  - delete
  - get
  - list
  - update
  - watch

- apiGroups:
  - quarks.cloudfoundry.org
  resources:
  - quarksjobs/status
  verbs:
  - update

- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
---
# Source: cf-operator/charts/quarks-job/templates/persist-output-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: "qjob-persist-output"
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - get
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - "*"
- apiGroups:
  - quarks.cloudfoundry.org
  resources:
  - quarksjobs
  verbs:
  - get
---
# Source: cf-operator/charts/quarks-secret/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: release-name-quarks-secret
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - approve
  - create
  - delete
  - get
  - list
  - update
  - watch

- apiGroups:
  - certificates.k8s.io
  resources:
  - signers
  resourceNames:
  - kubernetes.io/legacy-unknown
  verbs:
  - approve
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - create
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - update

- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch

- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch

- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch

- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
  - update

- apiGroups:
  - quarks.cloudfoundry.org
  resources:
  - quarkssecrets
  verbs:
  - delete
  - get
  - list
  - update
  - watch

- apiGroups:
  - quarks.cloudfoundry.org
  resources:
  - quarkssecrets/status
  verbs:
  - update
---
# Source: cf-operator/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: release-name-cf-operator-cluster
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - approve
  - create
  - delete
  - get
  - list
  - update
  - watch

- apiGroups:
  - certificates.k8s.io
  resources:
  - signers
  resourceNames:
  - kubernetes.io/legacy-unknown
  verbs:
  - approve

- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
  - delete
  - list
  - update
  - watch

- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - create
  - update

- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - update

- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - update
  - watch

- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  - mutatingwebhookconfigurations
  verbs:
  - create
  - delete
  - update

# for monitored namespaces

- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
  - update

- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - update
  - watch

- apiGroups:
  - ""
  resources:
  - services
  - configmaps
  verbs:
  - create
  - get
  - list
  - update
  - watch

- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
  - list
  - watch

- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create

- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - get
  - list
  - update
  - watch

- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
  - list

- apiGroups:
  - quarks.cloudfoundry.org
  resources:
  - quarksjobs
  verbs:
  - create
  - get
  - list
  - update
  - watch

- apiGroups:
  - quarks.cloudfoundry.org
  resources:
  - boshdeployments
  - quarksstatefulsets
  - quarkssecrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch

- apiGroups:
  - quarks.cloudfoundry.org
  resources:
  - boshdeployments/status
  - quarkssecrets/status
  - quarksstatefulsets/status
  verbs:
  - create
  - patch
  - update
---
# Source: cf-operator/charts/quarks-job/templates/service-account.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-quarks-job
roleRef:
  kind: ClusterRole
  name: release-name-quarks-job
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: release-name-quarks-job
  namespace: "default"
---
# Source: cf-operator/charts/quarks-secret/templates/service-account.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-quarks-secret
roleRef:
  kind: ClusterRole
  name: release-name-quarks-secret
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: release-name-quarks-secret
  namespace: "default"
---
# Source: cf-operator/templates/role-webhook.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: release-name-cf-operator-webhook
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
  - update
---
# Source: cf-operator/charts/quarks-job/templates/single-namespace.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "qjob-persist-output"
  namespace: "staging"
subjects:
- kind: ServiceAccount
  name: "qjob-persist-output"
roleRef:
  kind: ClusterRole
  name: "qjob-persist-output"
  apiGroup: rbac.authorization.k8s.io
---
# Source: cf-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cf-operator-webhook
  namespace: default
spec:
  selector:
    name: cf-operator
  ports:
  - port: 443
    targetPort: 2999
---
# Source: cf-operator/charts/quarks-job/templates/operator.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-quarks-job
  namespace: "default"
spec:
  replicas: 1
  selector:
    matchLabels:
      name: quarks-job
  template:
    metadata:
      labels:
        name: quarks-job
    spec:
      serviceAccountName: release-name-quarks-job
      containers:
        - name: quarks-job
          image: "cfcontainerization/quarks-job:v1.0.206"
          ports:
          - containerPort: 60000
            name: metrics
          command:
          - quarks-job
          imagePullPolicy: "IfNotPresent"
          env:
            - name: APPLY_CRD
              value: "true"
            - name: LOG_LEVEL
              value: "debug"
            - name: MAX_WORKERS
              value: "1"
            - name: CTX_TIMEOUT
              value: "300"
            - name: MELTDOWN_DURATION
              value: "60"
            - name: MELTDOWN_REQUEUE_AFTER
              value: "30"
            - name: MONITORED_ID
              value: cfo
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: "quarks-job"
            - name: DOCKER_IMAGE_ORG
              value: "cfcontainerization"
            - name: DOCKER_IMAGE_REPOSITORY
              value: "quarks-job"
            - name: DOCKER_IMAGE_TAG
              value: "v1.0.206"
            - name: DOCKER_IMAGE_PULL_POLICY
              value: "IfNotPresent"
---
# Source: cf-operator/charts/quarks-secret/templates/operator.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-quarks-secret
  namespace: "default"
spec:
  replicas: 1
  selector:
    matchLabels:
      name: quarks-secret
  template:
    metadata:
      labels:
        name: quarks-secret
    spec:
      serviceAccountName: release-name-quarks-secret
      containers:
        - name: quarks-secret
          image: "cfcontainerization/quarks-secret:v1.0.744"
          ports:
          - containerPort: 60000
            name: metrics
          command:
          - quarks-secret
          imagePullPolicy: "IfNotPresent"
          env:
            - name: APPLY_CRD
              value: "true"
            - name: LOG_LEVEL
              value: "debug"
            - name: MAX_WORKERS
              value: "1"
            - name: CTX_TIMEOUT
              value: "300"
            - name: MELTDOWN_DURATION
              value: "60"
            - name: MELTDOWN_REQUEUE_AFTER
              value: "30"
            - name: MONITORED_ID
              value: cfo
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: "quarks-secret"
---
# Source: cf-operator/templates/operator.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-cf-operator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      name: cf-operator
  template:
    metadata:
      labels:
        name: cf-operator
    spec:
      serviceAccountName: release-name-cf-operator
      containers:
        - name: cf-operator
          image: "cfcontainerization/cf-operator:v6.1.17-0.gec409fd7"
          ports:
          - containerPort: 60000
            name: metrics
          - containerPort: 2999
            name: webhook
          command:
          - cf-operator
          imagePullPolicy: "IfNotPresent"
          env:
            - name: APPLY_CRD
              value: "true"
            - name: BOSH_DNS_DOCKER_IMAGE
              value: "cfcontainerization/coredns:0.1.0-1.6.7-bp152.1.19"
            - name: CLUSTER_DOMAIN
              value: "cluster.local"
            - name: LOG_LEVEL
              value: "debug"
            - name: LOGROTATE_INTERVAL
              value: "1440"
            - name: MONITORED_ID
              value: cfo
            - name: CF_OPERATOR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CTX_TIMEOUT
              value: "300"
            - name: MELTDOWN_DURATION
              value: "60"
            - name: MELTDOWN_REQUEUE_AFTER
              value: "30"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: "cf-operator"
            - name: DOCKER_IMAGE_ORG
              value: "cfcontainerization"
            - name: DOCKER_IMAGE_REPOSITORY
              value: "cf-operator"
            - name: DOCKER_IMAGE_TAG
              value: "v6.1.17-0.gec409fd7"
            - name: DOCKER_IMAGE_PULL_POLICY
              value: "IfNotPresent"
            - name: CF_OPERATOR_WEBHOOK_SERVICE_PORT
              value: "2999"
            - name: CF_OPERATOR_WEBHOOK_USE_SERVICE_REFERENCE
              value: "true"
          readinessProbe:
            httpGet:
              path: /readyz
              port: 2999
              scheme: "HTTPS"
            initialDelaySeconds: 2
---
# Source: cf-operator/templates/service-account.yaml
apiVersion: v1
kind: List
items:
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: release-name-cf-operator-cluster
    subjects:
    - kind: ServiceAccount
      name: release-name-cf-operator
      namespace: default
    roleRef:
      kind: ClusterRole
      name: release-name-cf-operator-cluster
      apiGroup: rbac.authorization.k8s.io

  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: release-name-cf-operator-webhook
      namespace: default
    subjects:
    - kind: ServiceAccount
      name: release-name-cf-operator
      namespace: default
    roleRef:
      kind: Role
      name: release-name-cf-operator-webhook
      apiGroup: rbac.authorization.k8s.io
---
# Source: cf-operator/templates/pre-upgrade-hook.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "release-name-pre-upgrade"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: release-name-cf-operator
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-weight: "-2"
---
# Source: cf-operator/templates/pre-upgrade-hook.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: "release-name-pre-upgrade-delete-dm"
  namespace: "staging"
  labels:
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: release-name-cf-operator
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-weight: "-2"
rules:
- apiGroups: [quarks.cloudfoundry.org]
  resources: [quarksjobs]
  resourceNames: [dm]
  verbs: [delete]
---
# Source: cf-operator/templates/pre-upgrade-hook.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "release-name-pre-upgrade-delete-dm"
  namespace: "staging"
  labels:
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: release-name-cf-operator
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
    helm.sh/hook: pre-upgrade
    helm.sh/hook-weight: "-2"
roleRef:
  kind: Role
  name: "release-name-pre-upgrade-delete-dm"
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: "release-name-pre-upgrade"
  namespace: "default"
---
# Source: cf-operator/templates/pre-upgrade-hook.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "release-name-pre-upgrade"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: release-name-cf-operator
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-weight: "-1"
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: "release-name"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/name: release-name-cf-operator
    spec:
      serviceAccountName: "release-name-pre-upgrade"
      restartPolicy: Never
      containers:
      - name: pre-upgrade
        image: "ghcr.io/cfcontainerizationbot/kubecf-kubectl:v1.19.2"
        imagePullPolicy: IfNotPresent
        args:
        - delete
        - quarksjobs.quarks.cloudfoundry.org
        - --ignore-not-found
        - '--namespace=staging'
        - dm
