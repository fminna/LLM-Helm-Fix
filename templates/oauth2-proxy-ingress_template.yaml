---
# Source: oauth2-proxy-ingress/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-oauth2-proxy-ingress-subdomain1
  labels:
    helm.sh/chart: oauth2-proxy-ingress-1.1.0
    app.kubernetes.io/managed-by: Helms
  annotations:
    nginx.ingress.kubernetes.io/server-snippet: |
      if ($request_uri ~ ^/oauth2/(.*)$){
        rewrite ^(.*)$ $1 last;
      }

      if ($request_uri ~ ^/.well-known/(.*)$){
        rewrite ^(.*)$ $1 last;
      }

      if ($request_uri !~ ^/subdomain1/(.*)$){
        rewrite ^(.*)$ /subdomain1$1 last;
      }
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - subdomain1.example.com
      secretName: subdomain1.example.com-tls
  rules:
    - host: subdomain1.example.com
      http:
        paths:
          - backend:
              service:
                name: oauth2-proxy
                port:
                  number: 80
            path: /
            pathType: ImplementationSpecific
---
# Source: oauth2-proxy-ingress/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-oauth2-proxy-ingress-subdomain2
  labels:
    helm.sh/chart: oauth2-proxy-ingress-1.1.0
    app.kubernetes.io/managed-by: Helms
  annotations:
    nginx.ingress.kubernetes.io/server-snippet: |
      if ($request_uri ~ ^/oauth2/(.*)$){
        rewrite ^(.*)$ $1 last;
      }

      if ($request_uri ~ ^/.well-known/(.*)$){
        rewrite ^(.*)$ $1 last;
      }

      if ($request_uri !~ ^/subdomain2/(.*)$){
        rewrite ^(.*)$ /subdomain2$1 last;
      }
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - subdomain2.example.com
      secretName: subdomain2.example.com-tls
  rules:
    - host: subdomain2.example.com
      http:
        paths:
          - backend:
              service:
                name: oauth2-proxy
                port:
                  number: 80
            path: /
            pathType: ImplementationSpecific
