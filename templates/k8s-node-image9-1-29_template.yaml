---
# Source: k8s-node-image9-1-29/templates/anaconda-pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    helm.sh/chart: k8s-node-image9-1-29-0.2.11
    app.kubernetes.io/name: k8s-node-image9-1-29
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "k8s-node-image9-1.29.4-nginx-5"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: anaconda
    svc: anaconda
  name: release-name-k8s-node-image9-1-29-ana
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: k8s-node-image9-1-29
      app.kubernetes.io/instance: release-name
      svc: anaconda
  minAvailable: 1
---
# Source: k8s-node-image9-1-29/templates/k8s-node-pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    helm.sh/chart: k8s-node-image9-1-29-0.2.11
    app.kubernetes.io/name: k8s-node-image9-1-29
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "k8s-node-image9-1.29.4-nginx-5"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: k8s-node
    svc: k8s-node
  name: release-name-k8s-node-image9-1-29-node
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: k8s-node-image9-1-29
      app.kubernetes.io/instance: release-name
      svc: k8s-node
  minAvailable: 1
---
# Source: k8s-node-image9-1-29/templates/anaconda-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-k8s-node-image9-1-29-ana
  labels:
    helm.sh/chart: k8s-node-image9-1-29-0.2.11
    app.kubernetes.io/name: k8s-node-image9-1-29
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "k8s-node-image9-1.29.4-nginx-5"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: anaconda
    svc: anaconda
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: k8s-node-image9-1-29
    app.kubernetes.io/instance: release-name
    svc: anaconda
---
# Source: k8s-node-image9-1-29/templates/k8s-node-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-k8s-node-image9-1-29-node
  labels:
    helm.sh/chart: k8s-node-image9-1-29-0.2.11
    app.kubernetes.io/name: k8s-node-image9-1-29
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "k8s-node-image9-1.29.4-nginx-5"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: k8s-node
    svc: k8s-node
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: k8s-node-image9-1-29
    app.kubernetes.io/instance: release-name
    svc: k8s-node
---
# Source: k8s-node-image9-1-29/templates/anaconda-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-k8s-node-image9-1-29-ana
  labels:
    helm.sh/chart: k8s-node-image9-1-29-0.2.11
    app.kubernetes.io/name: k8s-node-image9-1-29
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "k8s-node-image9-1.29.4-nginx-5"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: anaconda
    svc: anaconda
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: k8s-node-image9-1-29
      app.kubernetes.io/instance: release-name
      svc: anaconda
  template:
    metadata:
      labels:
        app.kubernetes.io/name: k8s-node-image9-1-29
        app.kubernetes.io/instance: release-name
        svc: anaconda
    spec:
      containers:
        - name: main
          command: ["nginx", "-g", "daemon off;"]
          image: docker.io/pnnlmiscscripts/anaconda9:1699827798.672747-nginx-1
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/sh
                - -c
                - nginx -s quit
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: k8s-node-image9-1-29/templates/k8s-node-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-k8s-node-image9-1-29-node
  labels:
    helm.sh/chart: k8s-node-image9-1-29-0.2.11
    app.kubernetes.io/name: k8s-node-image9-1-29
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "k8s-node-image9-1.29.4-nginx-5"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: k8s-node
    svc: k8s-node
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: k8s-node-image9-1-29
      app.kubernetes.io/instance: release-name
      svc: k8s-node
  template:
    metadata:
      labels:
        app.kubernetes.io/name: k8s-node-image9-1-29
        app.kubernetes.io/instance: release-name
        svc: k8s-node
    spec:
      containers:
        - name: main
          command: ["nginx", "-g", "daemon off;"]
          image: docker.io/pnnlmiscscripts/k8s-node-image9:1.29.4-nginx-5
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/sh
                - -c
                - nginx -s quit
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: k8s-node-image9-1-29/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-k8s-node-image9-1-29
  labels:
    helm.sh/chart: k8s-node-image9-1-29-0.2.11
    app.kubernetes.io/name: k8s-node-image9-1-29
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "k8s-node-image9-1.29.4-nginx-5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  ingressClassName: 
  rules:
    - http:
        paths:
          - path: /9-1.29.4-nginx-5/?(.*)$
            pathType: Prefix
            backend:
              service:
                name: release-name-k8s-node-image9-1-29-node
                port:
                  name: http
          - path: /9-1.29.4-nginx-5/(images$|images/.*)
            pathType: Prefix
            backend:
              service:
                name: release-name-k8s-node-image9-1-29-ana
                port:
                  name: http
          - path: /9-1.29.4-nginx-5/(.treeinfo$)
            pathType: Prefix
            backend:
              service:
                name: release-name-k8s-node-image9-1-29-ana
                port:
                  name: http
          - path: /9-1.29.4-nginx-5/(LICENSE$)
            pathType: Prefix
            backend:
              service:
                name: release-name-k8s-node-image9-1-29-ana
                port:
                  name: http
          - path: /9-1.29.4-nginx-5/(RockyLinux_BuildTag$)
            pathType: Prefix
            backend:
              service:
                name: release-name-k8s-node-image9-1-29-ana
                port:
                  name: http
