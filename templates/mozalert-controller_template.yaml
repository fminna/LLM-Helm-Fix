---
# Source: mozalert-controller/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mozalert-controller
  labels:
    app: mozalert-controller
    helm.sh/chart: mozalert-controller-0.4.0
    app.kubernetes.io/name: mozalert-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.17.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: mozalert-controller/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mozalert-controller
rules:
- apiGroups:
  - "batch"
  resources:
  - jobs
  - jobs/status
  - pods
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - '*'
- apiGroups:
  - k8s.io
  resources:
  - databases
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - create
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  - pods/log
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - "crd.k8s.afrank.local"
  resources:
  - checks
  - checks/status
  verbs:
  - get
  - list
  - watch
  - update
  - patch
---
# Source: mozalert-controller/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mozalert-controller-clusterrole-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: mozalert-controller
subjects:
- kind: ServiceAccount
  name: mozalert-controller
  namespace: default
---
# Source: mozalert-controller/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mozalert-controller
  labels:
    app: mozalert-controller
    helm.sh/chart: mozalert-controller-0.4.0
    app.kubernetes.io/name: mozalert-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.17.0"
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  selector:
    app: mozalert-controller
---
# Source: mozalert-controller/templates/stateful.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mozalert-controller
  labels:
    app: mozalert-controller
    helm.sh/chart: mozalert-controller-0.4.0
    app.kubernetes.io/name: mozalert-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.17.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  serviceName: mozalert-controller
  selector:
    matchLabels:
      app: mozalert-controller
  template:
    metadata:
      labels:
        app: mozalert-controller
        helm.sh/chart: mozalert-controller-0.4.0
        app.kubernetes.io/name: mozalert-controller
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.17.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: mozalert-controller
      containers:
      - image: "afrank/mozalert-controller:latest"
        imagePullPolicy: Always
        name: mozalert-controller
        envFrom:
        - secretRef:
            name: mozalert-secrets
---
# Source: mozalert-controller/templates/tests/test-controller.yaml
apiVersion: v1
kind: Pod
metadata:
  name: mozalert-validator
  annotations:
    "helm.sh/hook": test-success
spec:
  restartPolicy: Never
  containers:
  - name: mozalert-validator
    image: "afrank/mozalert-controller:latest"
    command: [ "mozalert-validator" ]
    args: [ "crd.k8s.afrank.local", "v1", "checks" ]
