---
# Source: kube-aws/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-aws-chaos-admin
  labels:    
    app.kubernetes.io/component: kube-aws
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kube-aws
    app.kubernetes.io/part-of: kube-aws 
    app.kubernetes.io/version: "3.6.0"
    helm.sh/chart: kube-aws-3.6.0 
    litmuschaos.io/version: 3.6.0
rules:
- apiGroups:
  - ""
  - "apps"
  - "batch"
  - "extensions"
  - "litmuschaos.io"
  resources:
  - "jobs"
  - "pods"
  - "pods/exec"
  - "pods/log"
  - "pods/eviction"
  - "daemonsets"
  - "replicasets"
  - "deployments"
  - "statefulsets"
  - "services"
  - "events"
  - "configmaps"
  - "secrets"
  - "chaosengines"
  - "chaosexperiments"
  - "chaosresults"
  verbs:
  - "create"
  - "delete"
  - "get"
  - "list"
  - "patch"
  - "update"
  - "deletecollection"
- apiGroups:
  - ""
  resources:
  - "nodes"
  verbs:
  - "get"
  - "list"
  - "patch"
  - "update"
---
# Source: kube-aws/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-aws-chaos-admin 
  labels:    
    app.kubernetes.io/component: kube-aws
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kube-aws
    app.kubernetes.io/part-of: kube-aws 
    app.kubernetes.io/version: "3.6.0"
    helm.sh/chart: kube-aws-3.6.0 
    litmuschaos.io/version: 3.6.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-aws-chaos-admin
subjects:
- kind: ServiceAccount
  name: kube-aws-chaos-admin
  namespace: default
---
# Source: kube-aws/templates/ebs-loss-by-id.yaml
apiVersion: litmuschaos.io/v1alpha1
description:
  message: "Detaching ebs volumes from ec2 instances using volume id \n"
kind: ChaosExperiment
metadata:
  name: ebs-loss-by-id
  labels:    
    app.kubernetes.io/component: kube-aws
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kube-aws
    app.kubernetes.io/part-of: kube-aws 
    app.kubernetes.io/version: "3.6.0"
    helm.sh/chart: kube-aws-3.6.0 
    litmuschaos.io/version: 3.6.0
spec:
  definition:
    scope: Cluster
    permissions:
      - apiGroups:
          - ""
          - "batch"
          - "litmuschaos.io"
        resources:
          - "jobs"
          - "pods"
          - "events"
          - "pods/log"
          - "pods/exec"
          - "secrets"
          - "chaosengines"
          - "chaosexperiments"
          - "chaosresults"
        verbs:
          - "create"
          - "list"
          - "get"
          - "patch"
          - "update"
          - "delete"
    image: "litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.6.0"
    imagePullPolicy: Always
    args:
    - -c
    - ./experiments -name ebs-loss-by-id
    command:
    - /bin/bash
    env:
    - name: TOTAL_CHAOS_DURATION
      value: '30'

    - name: CHAOS_INTERVAL
      value: '30'

    # Period to wait before and after injection of chaos in sec
    - name: RAMP_TIME
      value: ''

    - name: EBS_VOLUME_ID
      value: ''

    - name: REGION
      value: ''

    - name: SEQUENCE
      value: 'parallel'      

    # Provide the path of aws credentials mounted from secret
    - name: AWS_SHARED_CREDENTIALS_FILE
      value: '/tmp/cloud_config.yml'

    # provide the LIB
    # only litmus supported
    - name: LIB
      value: 'litmus'
      
    labels:
      name: ebs-loss-by-id
      app.kubernetes.io/part-of: litmus
    secrets:
    - name: cloud-secret
      mountPath: /tmp/
---
# Source: kube-aws/templates/ebs-loss-by-tag.yaml
apiVersion: litmuschaos.io/v1alpha1
description:
  message: "Detaching ebs volumes from ec2 instances using common tag on volume\n"
kind: ChaosExperiment
metadata:
  name: ebs-loss-by-tag
  labels:    
    app.kubernetes.io/component: kube-aws
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kube-aws
    app.kubernetes.io/part-of: kube-aws 
    app.kubernetes.io/version: "3.6.0"
    helm.sh/chart: kube-aws-3.6.0 
    litmuschaos.io/version: 3.6.0
spec:
  definition:
    scope: Cluster
    permissions:
      - apiGroups:
          - ""
          - "batch"
          - "litmuschaos.io"
        resources:
          - "jobs"
          - "pods"
          - "events"
          - "pods/log"
          - "pods/exec"
          - "secrets"
          - "chaosengines"
          - "chaosexperiments"
          - "chaosresults"
        verbs:
          - "create"
          - "list"
          - "get"
          - "patch"
          - "update"
          - "delete"
    image: "litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.6.0"
    imagePullPolicy: Always
    args:
    - -c
    - ./experiments -name ebs-loss-by-tag
    command:
    - /bin/bash
    env:
    - name: TOTAL_CHAOS_DURATION
      value: '30'

    - name: CHAOS_INTERVAL
      value: '30'

    - name: RAMP_TIME
      value: ''

    - name: EBS_VOLUME_TAG
      value: ''

    - name: REGION
      value: ''

    - name: SEQUENCE
      value: 'parallel' 

    - name: VOLUME_AFFECTED_PERC
      value: ''             

    # Provide the path of aws credentials mounted from secret
    - name: AWS_SHARED_CREDENTIALS_FILE
      value: '/tmp/cloud_config.yml'

    # provide the LIB
    # only litmus supported
    - name: LIB
      value: 'litmus'
    labels:
      name: ebs-loss-by-tag
      app.kubernetes.io/part-of: litmus
    secrets:
    - name: cloud-secret
      mountPath: /tmp/
---
# Source: kube-aws/templates/ec2-terminate-by-id.yaml
apiVersion: litmuschaos.io/v1alpha1
description:
  message: "Stopping an aws EC2 instance for certain interval using instance ID \n"
kind: ChaosExperiment
metadata:
  name: ec2-terminate-by-id
  labels:    
    app.kubernetes.io/component: kube-aws
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kube-aws
    app.kubernetes.io/part-of: kube-aws 
    app.kubernetes.io/version: "3.6.0"
    helm.sh/chart: kube-aws-3.6.0 
    litmuschaos.io/version: 3.6.0
spec:
  definition:
    scope: Cluster
    permissions:
      - apiGroups:
          - ""
          - "batch"
          - "litmuschaos.io"
        resources:
          - "jobs"
          - "pods"
          - "events"
          - "pods/log"
          - "pods/exec"
          - "secrets"
          - "chaosengines"
          - "chaosexperiments"
          - "chaosresults"
        verbs:
          - "create"
          - "list"
          - "get"
          - "patch"
          - "update"
          - "delete"
    image: "litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.6.0"
    imagePullPolicy: Always
    args:
    - -c
    - ./experiments -name ec2-terminate-by-id
    command:
    - /bin/bash
    env:
    - name: TOTAL_CHAOS_DURATION
      value: '30'

    - name: CHAOS_INTERVAL
      value: '30'

    # Period to wait before and after injection of chaos in sec
    - name: RAMP_TIME
      value: ''

    # enable it if the target instance is a part of self-managed nodegroup.
    - name: MANAGED_NODEGROUP
      value: 'disable'      

    # Instance ID of the target ec2 instance
    # Multiple IDs can also be provided as comma separated values ex: id1,id2
    - name: EC2_INSTANCE_ID
      value: ''

    - name: REGION
      value: ''

    - name: SEQUENCE
      value: 'parallel'

    # Provide the path of aws credentials mounted from secret  
    - name: AWS_SHARED_CREDENTIALS_FILE
      value: '/tmp/cloud_config.yml'

    # provide the LIB
    # only litmus supported
    - name: LIB
      value: 'litmus'  
    labels:
      name: ec2-terminate-by-id
      app.kubernetes.io/part-of: litmus
    secrets:
    - name: cloud-secret
      mountPath: /tmp/
---
# Source: kube-aws/templates/ec2-terminate-by-tag.yaml
apiVersion: litmuschaos.io/v1alpha1
description:
  message: "Stopping an aws EC2 instance for certain interval using common tags on the instance \n"
kind: ChaosExperiment
metadata:
  name: ec2-terminate-by-tag
  labels:    
    app.kubernetes.io/component: kube-aws
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kube-aws
    app.kubernetes.io/part-of: kube-aws 
    app.kubernetes.io/version: "3.6.0"
    helm.sh/chart: kube-aws-3.6.0 
    litmuschaos.io/version: 3.6.0
spec:
  definition:
    scope: Cluster
    permissions:
      - apiGroups:
          - ""
          - "batch"
          - "litmuschaos.io"
        resources:
          - "jobs"
          - "pods"
          - "events"
          - "pods/log"
          - "pods/exec"
          - "secrets"
          - "chaosengines"
          - "chaosexperiments"
          - "chaosresults"
        verbs:
          - "create"
          - "list"
          - "get"
          - "patch"
          - "update"
          - "delete"
    image: "litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.6.0"
    imagePullPolicy: Always
    args:
    - -c
    - ./experiments -name ec2-terminate-by-tag
    command:
    - /bin/bash
    env:
    - name: TOTAL_CHAOS_DURATION
      value: '30'

    - name: CHAOS_INTERVAL
      value: '30'

    # Period to wait before and after injection of chaos in sec
    - name: RAMP_TIME
      value: ''

    - name: INSTANCE_TAG
      value: ''

    # enable it if the target instance is a part of self-managed nodegroup.
    - name: MANAGED_NODEGROUP
      value: 'disable'

    - name: REGION
      value: ''

    # Target the percentage of instance filtered from tag
    - name: INSTANCE_AFFECTED_PERC
      value: ''

    - name: SEQUENCE
      value: 'parallel'      

    # Provide the path of aws credentials mounted from secret  
    - name: AWS_SHARED_CREDENTIALS_FILE
      value: '/tmp/cloud_config.yml'

    # provide the LIB
    # only litmus supported
    - name: LIB
      value: 'litmus' 
    labels:
      name: ec2-terminate-by-tag
      app.kubernetes.io/part-of: litmus
    secrets:
    - name: cloud-secret
      mountPath: /tmp/
