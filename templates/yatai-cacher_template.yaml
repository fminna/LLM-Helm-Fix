---
# Source: yatai-cacher/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-yatai-cacher
  namespace: default
  labels:
    helm.sh/chart: yatai-cacher-0.0.2
    app.kubernetes.io/name: yatai-cacher
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: yatai-cacher/templates/secret-env.yaml
apiVersion: v1
kind: Secret
metadata:
  name: yatai-cacher-env
  namespace: default
  labels:
    helm.sh/chart: yatai-cacher-0.0.2
    app.kubernetes.io/name: yatai-cacher
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.2"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  FOO: bar
---
# Source: yatai-cacher/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-yatai-cacher-default
rules:
- apiGroups:
  - cache.yatai.ai
  resources:
  - modelcaches
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cache.yatai.ai
  resources:
  - modelcaches/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - "batch"
  resources:
  - jobs
  verbs:
  - create
  - delete
  - update
  - patch
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: yatai-cacher/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-yatai-cacher-default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-yatai-cacher-default
subjects:
- kind: ServiceAccount
  name: release-name-yatai-cacher
  namespace: default
---
# Source: yatai-cacher/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-yatai-cacher-webhook-service
  namespace: default
  labels:
    helm.sh/chart: yatai-cacher-0.0.2
    app.kubernetes.io/name: yatai-cacher
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    app.kubernetes.io/name: yatai-cacher
    app.kubernetes.io/instance: release-name
---
# Source: yatai-cacher/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-yatai-cacher
  namespace: default
  annotations:
    rollme: "7GMKX"
  labels:
    helm.sh/chart: yatai-cacher-0.0.2
    app.kubernetes.io/name: yatai-cacher
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: yatai-cacher
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: yatai-cacher
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-yatai-cacher
      securityContext:
        {}
      containers:
        - name: manager
          args:
            - --health-probe-bind-address=:8081
            - --metrics-bind-address=127.0.0.1:8080
            - --leader-elect
          command:
            - /manager
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: JUICEFS_STORAGE_CLASS_NAME
              value: "juicefs-sc"
          envFrom:
            - secretRef:
                name: yatai-cacher-env
          securityContext:
            {}
          image: "quay.io/bentoml/yatai-cacher:0.0.2"
          imagePullPolicy: IfNotPresent

          ports:
          - containerPort: 9443
            name: webhook-server
            protocol: TCP

          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1

          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1

          resources:
            {}

          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: release-name-yatai-cacher-webhook-server-cert
---
# Source: yatai-cacher/templates/certificate.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: release-name-yatai-cacher-serving-cert
  namespace: default
  labels:
    helm.sh/chart: yatai-cacher-0.0.2
    app.kubernetes.io/name: yatai-cacher
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  dnsNames:
  - release-name-yatai-cacher-webhook-service.default.svc
  - release-name-yatai-cacher-webhook-service.default.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: release-name-yatai-cacher-selfsigned-issuer
  secretName: release-name-yatai-cacher-webhook-server-cert
---
# Source: yatai-cacher/templates/issuer.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: release-name-yatai-cacher-selfsigned-issuer
  namespace: default
  labels:
    helm.sh/chart: yatai-cacher-0.0.2
    app.kubernetes.io/name: yatai-cacher
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selfSigned: {}
---
# Source: yatai-cacher/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-yatai-cacher-test-connection"
  labels:
    helm.sh/chart: yatai-cacher-0.0.2
    app.kubernetes.io/name: yatai-cacher
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-yatai-cacher:80']
  restartPolicy: Never
