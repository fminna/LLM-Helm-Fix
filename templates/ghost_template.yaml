---
# Source: ghost/templates/secureconfig.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-ghost
  labels:
    helm.sh/chart: ghost-0.123.1
    app.kubernetes.io/name: ghost
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "5.82.2"
    app.kubernetes.io/managed-by: Helm
data:
  database__client: c3FsaXRlMw==
  database__connection__filename: Y29udGVudC9kYXRhL2dob3N0LmRi
---
# Source: ghost/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-ghost
  labels:
    helm.sh/chart: ghost-0.123.1
    app.kubernetes.io/name: ghost
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "5.82.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: ghost
    app.kubernetes.io/instance: release-name
---
# Source: ghost/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-ghost
  labels:
    helm.sh/chart: ghost-0.123.1
    app.kubernetes.io/name: ghost
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "5.82.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ghost
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        checksum/secureconfig: 9e46fbd96ec1badfe49b0494cfc80c7fce810c6fde045697cc65577998480e29
      labels:
        app.kubernetes.io/name: ghost
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 1000
      containers:
        - name: ghost
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          image: "docker.io/ghost:5.82.2"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 2368
              protocol: TCP
          envFrom:
            - secretRef:
                name: release-name-ghost
          env:
            - name: logging__transports
              value: "[\"stdout\"]"
            - name: mail__transport
              value: "SMTP"
          startupProbe:
            httpGet:
              path: /
              port: http
              httpHeaders:
                - name: Host
                  value: localhost:2368
            initialDelaySeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
            successThreshold: 1
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: http
              httpHeaders:
                - name: Host
                  value: localhost:2368
            initialDelaySeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
              httpHeaders:
                - name: Host
                  value: localhost:2368
            initialDelaySeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
            periodSeconds: 10            
          volumeMounts:
            - mountPath: /tmp
              name: tmp
            - mountPath: /var/lib/ghost/content
              name: ghost-vol
      volumes:
        - name: tmp
          emptyDir: {}
        - name: ghost-vol
          emptyDir: {}
---
# Source: ghost/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-ghost-test-connection"
  labels:
    helm.sh/chart: ghost-0.123.1
    app.kubernetes.io/name: ghost
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "5.82.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-ghost:80']
  restartPolicy: Never
