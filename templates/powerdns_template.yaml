---
# Source: powerdns/charts/mariadb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-11.1.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
automountServiceAccountToken: false
---
# Source: powerdns/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-powerdns
  labels:
    helm.sh/chart: powerdns-0.1.3
    app.kubernetes.io/name: powerdns
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.5.3"
    app.kubernetes.io/managed-by: Helm
---
# Source: powerdns/charts/mariadb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-11.1.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  mariadb-root-password: "cm9vdA=="
  mariadb-password: "cG93ZXJkbnM="
---
# Source: powerdns/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-powerdns
  labels:
    helm.sh/chart: powerdns-0.1.3
    app.kubernetes.io/name: powerdns
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.5.3"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  PDNS_api_key: UG93ZXJETlNBUEk=
  MYSQL_ENV_MYSQL_PASSWORD: cG93ZXJkbnM=
  MYSQL_ENV_MYSQL_ROOT_PASSWORD: cm9vdA==
---
# Source: powerdns/charts/mariadb/templates/primary/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-11.1.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
data:
  my.cnf: |-
    [mysqld]
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mariadb
    plugin_dir=/opt/bitnami/mariadb/plugin
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    tmpdir=/opt/bitnami/mariadb/tmp
    max_allowed_packet=16M
    bind-address=*
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    log-error=/opt/bitnami/mariadb/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci
    slow_query_log=0
    slow_query_log_file=/opt/bitnami/mariadb/logs/mysqld.log
    long_query_time=10.0
    
    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mariadb/plugin
    
    [manager]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
---
# Source: powerdns/charts/mariadb/templates/primary/initialization-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-mariadb-init-scripts
  namespace: "default"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-11.1.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
data:
  initPDA.sql: |
    CREATE DATABASE pda;
    CREATE USER 'pda' IDENTIFIED BY 'pda';
    GRANT ALL PRIVILEGES ON pda.* TO 'pda';
    FLUSH PRIVILEGES;
---
# Source: powerdns/charts/mariadb/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-11.1.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: mysql
      nodePort: null
  selector: 
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: primary
---
# Source: powerdns/charts/phpmyadmin/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-phpmyadmin
  namespace: "default"
  labels:
    app.kubernetes.io/name: phpmyadmin
    helm.sh/chart: phpmyadmin-10.2.4
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
      nodePort: null
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
      nodePort: null
  selector:
    app.kubernetes.io/name: phpmyadmin
    app.kubernetes.io/instance: release-name
---
# Source: powerdns/charts/powerdns-admin/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-powerdns-admin
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: powerdns-admin
    app.kubernetes.io/version: v0.2.4
    helm.sh/chart: powerdns-admin-1.2.2
  annotations:
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: powerdns-admin
    app.kubernetes.io/instance: release-name
---
# Source: powerdns/templates/service-dns-tcp.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-powerdns-dns-tcp
  labels:
    helm.sh/chart: powerdns-0.1.3
    app.kubernetes.io/name: powerdns
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.5.3"
    app.kubernetes.io/managed-by: Helm 
spec:
  type: LoadBalancer
  ports:
    - port: 53
      targetPort: dns-tcp
      protocol: TCP
      name: dns-tcp
  selector:
    app.kubernetes.io/name: powerdns
    app.kubernetes.io/instance: release-name
---
# Source: powerdns/templates/service-dns-udp.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-powerdns-dns-udp
  labels:
    helm.sh/chart: powerdns-0.1.3
    app.kubernetes.io/name: powerdns
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.5.3"
    app.kubernetes.io/managed-by: Helm 
spec:
  type: LoadBalancer
  ports:
    - port: 53
      targetPort: dns-udp
      protocol: UDP
      name: dns-tcp
  selector:
    app.kubernetes.io/name: powerdns
    app.kubernetes.io/instance: release-name
---
# Source: powerdns/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-powerdns
  labels:
    helm.sh/chart: powerdns-0.1.3
    app.kubernetes.io/name: powerdns
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.5.3"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8081
      targetPort: api
      protocol: TCP
      name: api
  selector:
    app.kubernetes.io/name: powerdns
    app.kubernetes.io/instance: release-name
---
# Source: powerdns/charts/phpmyadmin/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-phpmyadmin
  namespace: "default"
  labels:
    app.kubernetes.io/name: phpmyadmin
    helm.sh/chart: phpmyadmin-10.2.4
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: phpmyadmin
      app.kubernetes.io/instance: release-name
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: phpmyadmin
        helm.sh/chart: phpmyadmin-10.2.4
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
    spec:
      
      # yamllint disable rule:indentation
      hostAliases:
        - hostnames:
          - status.localhost
          ip: 127.0.0.1
      # yamllint enable rule:indentation
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: phpmyadmin
                    app.kubernetes.io/instance: release-name
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      priorityClassName: ""
      securityContext:
        fsGroup: 1001
      containers:
        - name: phpmyadmin
          image: docker.io/bitnami/phpmyadmin:5.2.0-debian-11-r26
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: DATABASE_PORT_NUMBER
              value: "3306"
            - name: DATABASE_HOST
              value: "release-name-mariadb"
            - name: PHPMYADMIN_ALLOW_NO_PASSWORD
              value: "false"
            - name: DATABASE_ENABLE_SSL
              value: "no"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          resources:
            limits: {}
            requests: {}
          volumeMounts:
      volumes:
---
# Source: powerdns/charts/powerdns-admin/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-powerdns-admin
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: powerdns-admin
    app.kubernetes.io/version: v0.2.4
    helm.sh/chart: powerdns-admin-1.2.2
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: powerdns-admin
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: powerdns-admin
        app.kubernetes.io/instance: release-name
    spec:
      
      serviceAccountName: default
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: release-name-powerdns-admin
          image: "ngoduykhanh/powerdns-admin:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: GUNICORN_LOGLEVEL
              value: DEBUG
            - name: GUNICORN_TIMEOUT
              value: "60"
            - name: GUNICORN_WORKERS
              value: "2"
            - name: SECRET_KEY
              value: PowerDNSAPI
            - name: SQLALCHEMY_DATABASE_URI
              value: mysql://pda:pda@release-name-mariadb/pda
            - name: TZ
              value: Asia/Shanghai
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
---
# Source: powerdns/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-powerdns
  labels:
    helm.sh/chart: powerdns-0.1.3
    app.kubernetes.io/name: powerdns
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.5.3"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: powerdns
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: powerdns
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-powerdns
      securityContext:
        {}
      containers:
        - name: powerdns
          securityContext:
            {}
          image: "pschiffe/pdns-mysql:alpine"
          imagePullPolicy: IfNotPresent
          env:
            - name: PDNS_primary
              value: "true"
            - name: PDNS_webserver
              value: "true"
            - name: PDNS_webserver_address
              # https://stackoverflow.com/questions/63853679/helm-templating-doesnt-let-me-use-dash-in-names
              value: "0.0.0.0"
            - name: PDNS_webserver_allow_from
              value: "0.0.0.0/0"
            - name: PDNS_api
              value: "true"
            - name: PDNS_api_key
              valueFrom: 
                secretKeyRef:
                  name: release-name-powerdns
                  key: PDNS_api_key
            - name: MYSQL_ENV_MYSQL_HOST
              # https://github.com/helm/helm/issues/3558
              value: release-name-mariadb
            - name: MYSQL_ENV_MYSQL_DATABASE
              value: "powerdns"
            - name: MYSQL_ENV_MYSQL_USER
              value: "powerdns"
            - name: MYSQL_ENV_MYSQL_PASSWORD
              valueFrom: 
                secretKeyRef:
                  name: release-name-powerdns
                  key: MYSQL_ENV_MYSQL_PASSWORD
            - name: MYSQL_ENV_MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-powerdns
                  key: MYSQL_ENV_MYSQL_ROOT_PASSWORD
            - name: PDNS_dnsupdate
              value: "true"
          ports:
            - name: api
              containerPort: 8081
              protocol: TCP
            - name: dns-tcp
              containerPort: 53
              protocol: TCP
            - name: dns-udp
              containerPort: 53
              protocol: UDP
          livenessProbe:
            httpGet:
              path: /
              port: api
          readinessProbe:
            httpGet:
              path: /
              port: api
          resources:
            {}
---
# Source: powerdns/charts/mariadb/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-11.1.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels: 
      app.kubernetes.io/name: mariadb
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: primary
  serviceName: release-name-mariadb
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: c36cded75b54cb82d6d98030a4b8740eea199dd0a030f33baad48eb31ace9c29
      labels:
        app.kubernetes.io/name: mariadb
        helm.sh/chart: mariadb-11.1.8
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: primary
    spec:
      
      serviceAccountName: release-name-mariadb
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mariadb
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: primary
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      containers:
        - name: mariadb
          image: docker.io/bitnami/mariadb:10.6.9-debian-11-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-mariadb
                  key: mariadb-root-password
            - name: MARIADB_USER
              value: "powerdns"
            - name: MARIADB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-mariadb
                  key: mariadb-password
            - name: MARIADB_DATABASE
              value: "powerdns"
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          resources: 
            limits: {}
            requests: {}
          volumeMounts:
            - name: data
              mountPath: /bitnami/mariadb
            - name: custom-init-scripts
              mountPath: /docker-entrypoint-initdb.d
            - name: config
              mountPath: /opt/bitnami/mariadb/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: release-name-mariadb
        - name: custom-init-scripts
          configMap:
            name: release-name-mariadb-init-scripts
  volumeClaimTemplates:
    - metadata:
        name: data
        labels: 
          app.kubernetes.io/name: mariadb
          app.kubernetes.io/instance: release-name
          app.kubernetes.io/component: primary
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: powerdns/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-powerdns-test-connection"
  labels:
    helm.sh/chart: powerdns-0.1.3
    app.kubernetes.io/name: powerdns
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.5.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-powerdns:']
  restartPolicy: Never
