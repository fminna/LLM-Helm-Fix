---
# Source: complex-app/templates/frontend-app.yaml
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: frontend-app
spec:
  template:
    metadata:
      annotations:  
        dapr.io/app-id: frontend-app
        dapr.io/app-port: "8080"
        dapr.io/enabled: "true" 
        dapr.io/metrics-port: "9092"
        autoscaling.knative.dev/min-scale: "1"

    spec:
      containerConcurrency: 0
      containers:
        - image: docker.io/salaboy/frontend-43c85b23484769807bf48fb8b263845e@sha256:9cf5211a840ed7c331b9f3fb257af220e859475919e2991c402a02ce9c5e1770
          name: user-container
          livenessProbe:
            httpGet:
              path: /health/readiness
              port: 8080
          readinessProbe:
            httpGet:
              path: /health/liveness
              port: 8080
---
# Source: complex-app/templates/read-app.yaml
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: read-app
spec:
  template:
    metadata:
      annotations:  
        dapr.io/app-id: read-app
        dapr.io/app-port: "8080"
        dapr.io/enabled: "true" 
        dapr.io/metrics-port: "9092"
        autoscaling.knative.dev/min-scale: "1"

    spec:
      containerConcurrency: 0
      containers:
        - image: docker.io/salaboy/read-values-29641880cfce629a7bb375adac757e79@sha256:905e399701bb5775ff5cb643c7cd8a16fdc1f4a16ab355f6aa04563092515ed8
          name: user-container
          env: 
          - name: STATESTORE_NAME
            value: statestore
          - name: TENANT_ID
            value: release-name  
          livenessProbe:
            httpGet:
              path: /health/readiness
              port: 8080
          readinessProbe:
            httpGet:
              path: /health/liveness
              port: 8080
---
# Source: complex-app/templates/subscriber-app.yaml
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: subscriber-app
spec:
  template:
    metadata:
      annotations:  
        dapr.io/app-id: subscriber-app
        dapr.io/app-port: "8080"
        dapr.io/enabled: "true" 
        dapr.io/metrics-port: "9092"
        autoscaling.knative.dev/min-scale: "1"

    spec:
      containerConcurrency: 0
      containers:
        - image: docker.io/salaboy/subscriber-089df1234caea977a45badc3065470d6@sha256:d8e0daf8e97de847320a00b3b9514c284d1b0bbe4b5c87ddf00cffc6898f29a8
          name: user-container
          livenessProbe:
            httpGet:
              path: /health/readiness
              port: 8080
          readinessProbe:
            httpGet:
              path: /health/liveness
              port: 8080
---
# Source: complex-app/templates/write-app.yaml
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: write-app
spec:
  template:
    metadata:
      annotations:  
        dapr.io/app-id: write-app
        dapr.io/app-port: "8080"
        dapr.io/enabled: "true" 
        dapr.io/metrics-port: "9092"
        autoscaling.knative.dev/min-scale: "1"

    spec:
      containerConcurrency: 0
      containers:
        - image: docker.io/salaboy/write-values-bbf0e73c38257c6528fd36ab9b562bf8@sha256:393338dec76d81a88ec028340051815d64d5cc59f9ee3fc7b0111c642ce745e9
          name: user-container
          env: 
          - name: STATESTORE_NAME
            value: statestore
          - name: TENANT_ID
            value: release-name  
          - name: PUB_SUB_TOPIC
            value: "release-name-notifications"  
          livenessProbe:
            httpGet:
              path: /health/readiness
              port: 8080
          readinessProbe:
            httpGet:
              path: /health/liveness
              port: 8080
---
# Source: complex-app/templates/pubsub.yaml
apiVersion: dapr.io/v1alpha1
kind: Component
metadata:
  name: notifications-pubsub
spec:
  type: pubsub.redis
  version: v1
  metadata:
  # These settings will work out of the box if you use `helm install
  # bitnami/redis`.  If you have your own setup, replace
  # `redis-master:6379` with your own Redis master address, and the
  # Redis password with your own Secret's name. For more information,
  # see https://docs.dapr.io/operations/components/component-secrets .
  - name: redisHost
    value: redis-master.default.svc.cluster.local:6379
    
  - name: redisPassword
    secretKeyRef:
      name: redis
      key: redis-password
      

auth:
  secretStore: kubernetes
---
# Source: complex-app/templates/statestore.yaml
apiVersion: dapr.io/v1alpha1
kind: Component
metadata:
  name: statestore
spec:
  type: state.redis
  version: v1
  metadata:
  - name: keyPrefix
    value: name
  # These settings will work out of the box if you use `helm install
  # bitnami/redis`.  If you have your own setup, replace
  # `redis-master:6379` with your own Redis master address, and the
  # Redis password with your own Secret's name. For more information,
  # see https://docs.dapr.io/operations/components/component-secrets .
  - name: redisHost
    value: redis-master.default.svc.cluster.local:6379
    
  - name: redisPassword
    secretKeyRef:
      name: redis
      key: redis-password
      

auth:
  secretStore: kubernetes
---
# Source: complex-app/templates/subscription.yaml
apiVersion: dapr.io/v1alpha1
kind: Subscription
metadata:
  name: notifications-subscritpion
spec:
  topic: "release-name-notifications"
  route: /notifications
  pubsubname: notifications-pubsub
scopes: 
- subscriber-app
