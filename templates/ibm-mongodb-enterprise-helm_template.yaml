---
# Source: ibm-mongodb-enterprise-helm/templates/network-policy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: release-name-ibm-mongodb-enterprise-helm-network-policy
  labels:
    helm.sh/chart: ibm-mongodb-enterprise-helm-0.3.0
    app.kubernetes.io/name: ibm-mongodb-enterprise-helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  podSelector: {}
  ingress:
  - from: []
  policyTypes:
  - Ingress
---
# Source: ibm-mongodb-enterprise-helm/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mongod
  labels:
    helm.sh/chart: ibm-mongodb-enterprise-helm-0.3.0
    app.kubernetes.io/name: ibm-mongodb-enterprise-helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.4.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: ibm-mongodb-enterprise-helm/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
        #name: release-name-ibm-mongodb-enterprise-helm-auth
  name: release-name-auth
  labels:
    helm.sh/chart: ibm-mongodb-enterprise-helm-0.3.0
    app.kubernetes.io/name: ibm-mongodb-enterprise-helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.4.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
 
  MONGODB_USER_ADMIN_PASSWORD:  "YWRtaW4xMjM="
 
 #MONGODB_USER_ADMIN_PASSWORD:  "YWRtaW4xMjM="
  MONGODB_USER_ADMIN: "YWRtaW51c2Vy"
  MONGODB_DATABASE: "dGVzdGRi"
---
# Source: ibm-mongodb-enterprise-helm/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: UPDATE
  labels:

    helm.sh/chart: ibm-mongodb-enterprise-helm-0.3.0
    app.kubernetes.io/name: ibm-mongodb-enterprise-helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - "ReadWriteMany"
  storageClassName: "<UPDATE>"
  resources:
    requests:
      storage: "10Gi"
---
# Source: ibm-mongodb-enterprise-helm/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-ibm-mongodb-enterprise-helm-service
  labels:
    helm.sh/chart: ibm-mongodb-enterprise-helm-0.3.0
    app.kubernetes.io/name: ibm-mongodb-enterprise-helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 27017
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: ibm-mongodb-enterprise-helm
    app.kubernetes.io/instance: release-name
---
# Source: ibm-mongodb-enterprise-helm/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-ibm-mongodb-enterprise-helm-deployment
  labels:
    helm.sh/chart: ibm-mongodb-enterprise-helm-0.3.0
    app.kubernetes.io/name: ibm-mongodb-enterprise-helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ibm-mongodb-enterprise-helm
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ibm-mongodb-enterprise-helm
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: mongod
      securityContext:
        {}
      containers:
        - name: ibm-mongodb-enterprise-helm
          securityContext:
            runAsNonRoot: true
            runAsUser: 997
          image: "docker.io/ibmcom/ibm-enterprise-mongodb-ppc64le:4.4"
          imagePullPolicy: Always
          env:
          - name: "MONGODB_USER_ADMIN_PASSWORD"
            valueFrom:
              secretKeyRef:
                key: MONGODB_USER_ADMIN_PASSWORD
                name: release-name-auth
          - name: "MONGODB_DATABASE"
            valueFrom:
              secretKeyRef:
                key: MONGODB_DATABASE
                name: release-name-auth
          - name: "MONGODB_USER_ADMIN"
            valueFrom:
              secretKeyRef:
                key: MONGODB_USER_ADMIN
                name: release-name-auth
          volumeMounts:
          - name: UPDATE
            mountPath: "/data/db/"
            #name: UPDATE
          ports:
            - name: http
              containerPort: 27017
              protocol: TCP
              #livenessProbe:
              #httpGet:
              #path: /
              #port: http
              #readinessProbe:
              #httpGet:
              #path: /
              #port: http
          resources:
            {}
      volumes:
      - name: UPDATE
        persistentVolumeClaim:
          claimName: update
---
# Source: ibm-mongodb-enterprise-helm/templates/route.yaml
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: release-name-ibm-mongodb-enterprise-helm-route
  labels:
    helm.sh/chart: ibm-mongodb-enterprise-helm-0.3.0
    app.kubernetes.io/name: ibm-mongodb-enterprise-helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  host: <UPDATE>
  path: 
  port: 
    targetPort: 27017
  to:
    kind: Service
    name: release-name-ibm-mongodb-enterprise-helm-service
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  wildcardPolicy: None
status:
  ingress: []
---
# Source: ibm-mongodb-enterprise-helm/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-ibm-mongodb-enterprise-helm-test-connection"
  labels:
    helm.sh/chart: ibm-mongodb-enterprise-helm-0.3.0
    app.kubernetes.io/name: ibm-mongodb-enterprise-helm
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "4.4.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-ibm-mongodb-enterprise-helm:27017']
  restartPolicy: Never
