---
# Source: copilot-gpt4-service/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: copilot-gpt4-service
  labels:
    helm.sh/chart: copilot-gpt4-service-0.1.1
    app.kubernetes.io/name: copilot-gpt4-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: copilot-gpt4-service/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: copilot-gpt4-service
  labels:
    helm.sh/chart: copilot-gpt4-service-0.1.1
    app.kubernetes.io/name: copilot-gpt4-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
data:
  CACHE: "true"
  CACHE_PATH: "db/cache.sqlite3"
  COPILOT_TOKEN: ""
  CORS_PROXY_NEXTCHAT: "false"
  DEBUG: "false"
  ENABLE_SUPER_TOKEN: "false"
  HOST: "0.0.0.0"
  LOGGING: "true"
  LOG_LEVEL: "info"
  PORT: "8080"
  RATE_LIMIT: "0"
  SUPER_TOKEN: ""
---
# Source: copilot-gpt4-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: copilot-gpt4-service
  labels:
    helm.sh/chart: copilot-gpt4-service-0.1.1
    app.kubernetes.io/name: copilot-gpt4-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: copilot-gpt4-service
    app.kubernetes.io/instance: release-name
---
# Source: copilot-gpt4-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: copilot-gpt4-service
  labels:
    helm.sh/chart: copilot-gpt4-service-0.1.1
    app.kubernetes.io/name: copilot-gpt4-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: copilot-gpt4-service
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: copilot-gpt4-service-0.1.1
        app.kubernetes.io/name: copilot-gpt4-service
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.16.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: copilot-gpt4-service
      securityContext:
        {}
      containers:
        - name: copilot-gpt4-service
          securityContext:
            {}
          image: "ccr.ccs.tencentyun.com/kiila/copilot-gpt4-service:kiila-202404011103"
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: copilot-gpt4-service
                optional: true
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources:
            {}
---
# Source: copilot-gpt4-service/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "copilot-gpt4-service-test-connection"
  labels:
    helm.sh/chart: copilot-gpt4-service-0.1.1
    app.kubernetes.io/name: copilot-gpt4-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['copilot-gpt4-service:8080']
  restartPolicy: Never
