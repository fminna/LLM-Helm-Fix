---
# Source: kuberos/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kuberos-secret
type: Opaque
data:
  oidcSecret: "c3VwZXItc2VjcmV0LXZhbHVlLWhlcmU="
---
# Source: kuberos/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-kuberos-config
data:
  template: |-
    apiVersion: v1
    kind: Config
    current-context: dev-cluster
    clusters:
    
    - name: dev-cluster
      cluster:
        certificate-authority-data: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCmNlcnQgZGF0YSBoZXJlCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0="
        server: https://api.dev-cluster.example.com
---
# Source: kuberos/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kuberos
  labels:
    app: kuberos
    chart: kuberos-0.2.0
    release: release-name
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: kuberos-port
      protocol: TCP
      name: http
  selector:
    app: kuberos
    release: release-name
---
# Source: kuberos/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: release-name-kuberos
  labels:
    app: kuberos
    chart: kuberos-0.2.0
    release: release-name
    heritage: Helm
    checksum/config: 030a20fc32349e529cb48f7a15fc73ce9ed522e76aa81e1171f5f695a840469
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kuberos
      release: release-name
  template:
    metadata:
      labels:
        app: kuberos
        release: release-name
        checksum/config: 030a20fc32349e529cb48f7a15fc73ce9ed522e76aa81e1171f5f695a840469
      annotations:
        checksum/config: 030a20fc32349e529cb48f7a15fc73ce9ed522e76aa81e1171f5f695a840469
    spec:
      containers:
        - name: kuberos
          image: "negz/kuberos:ede4085"
          imagePullPolicy: IfNotPresent
          command: ["/kuberos", "https://accounts.google.com", "REDACTED.apps.googleusercontent.com", "/cfg/secret", "/cfg/template"]
          ports:
            - name: kuberos-port
              containerPort: 10003
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: kuberos-port
          readinessProbe:
            httpGet:
              path: /healthz
              port: kuberos-port
          resources:
            {}
          volumeMounts:
          - mountPath: /cfg/template
            name: template
            subPath: template
          - mountPath: /cfg/secret
            name: secret
            subPath: oidcSecret
      volumes:
      - name: template
        configMap:
          name: release-name-kuberos-config
      - name: secret
        secret:
          secretName: kuberos-secret
