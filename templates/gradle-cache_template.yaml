---
# Source: gradle-cache/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-gradle-cache
  namespace: default
  labels:
    helm.sh/chart: gradle-cache-0.2.0
    app.kubernetes.io/name: gradle-cache
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "11.0"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: "dmVyc2lvbjogNApjYWNoZToKICBhY2Nlc3NDb250cm9sOgogICAgYW5vbnltb3VzTGV2ZWw6IHJlYWR3cml0ZQogIG1heEVudHJ5QWdlSW5Ib3VyczogbnVsbAogIGZyZWVTcGFjZUJ1ZmZlclNpemU6IDEwMjQKICBtYXhBcnRpZmFjdFNpemU6IDEwMAogIHRhcmdldFNpemU6CiAgICB0eXBlOiBmaXhlZAogICAgc2l6ZTogMTAwMDAKdWlBY2Nlc3M6CiAgdHlwZTogb3Blbg=="
---
# Source: gradle-cache/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-gradle-cache
  namespace: default
  labels:
    helm.sh/chart: gradle-cache-0.2.0
    app.kubernetes.io/name: gradle-cache
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "11.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: gradle-cache
    app.kubernetes.io/instance: release-name
---
# Source: gradle-cache/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-gradle-cache
  namespace: default
  labels:
    helm.sh/chart: gradle-cache-0.2.0
    app.kubernetes.io/name: gradle-cache
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "11.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: gradle-cache
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gradle-cache
        app.kubernetes.io/instance: release-name
      annotations:
        checksum/secret: 748cf1914ee7b255e97b04e5dc2705c7fa1efed411ea7e5b732d94466bb14eaf
    spec:
      serviceAccountName: default
      securityContext:
        {}
      initContainers:
        - name: config-mounter
          image: "busybox:1.33.0"
          command:
             - sh
             - -ce
             - mkdir -p /data/conf/ && cp /tmp/config.yaml /data/conf/config.yaml
          volumeMounts:
            - name: tmp-build-cache-config-file
              mountPath: /tmp
            - name: cache
              mountPath: /data
      containers:
        - name: gradle-cache
          securityContext:
            {}
          image: "gradle/build-cache-node:11.0"
          args: 
            - start
            - --no-warn-anon-cache-write
            - --no-warn-anon-ui-access
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 5071
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
          volumeMounts:
            - name: cache
              mountPath: /data
      volumes:
        - name: tmp-build-cache-config-file
          secret:
            secretName: release-name-gradle-cache
        - emptyDir: {}
          name: cache
---
# Source: gradle-cache/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-gradle-cache-test-connection"
  namespace: default
  labels:
    helm.sh/chart: gradle-cache-0.2.0
    app.kubernetes.io/name: gradle-cache
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "11.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-gradle-cache:80']
  restartPolicy: Never
