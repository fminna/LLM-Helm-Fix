---
# Source: higress-console/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: higress-console
  namespace: default
  labels:
    helm.sh/chart: higress-console-1.3.3
    app.kubernetes.io/name: higress-console
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.3.3"
    app.kubernetes.io/managed-by: Helm
---
# Source: higress-console/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: higress-console
  namespace: default
type: Opaque
data:
---
# Source: higress-console/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: higress-console
  namespace: default
  labels:
    helm.sh/chart: higress-console-1.3.3
    app.kubernetes.io/name: higress-console
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.3.3"
    app.kubernetes.io/managed-by: Helm
data:
  login.prompt: ""
  chat.enabled: "false"
  chat.endpoint: ""
---
# Source: higress-console/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: higress-console-default
  labels:
    helm.sh/chart: higress-console-1.3.3
    app.kubernetes.io/name: higress-console
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.3.3"
    app.kubernetes.io/managed-by: Helm
rules:
  # ingress controller
  - apiGroups: ["extensions", "networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["*"]
  - apiGroups: ["extensions", "networking.k8s.io"]
    resources: ["ingresses/status"]
    verbs: ["*"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses", "ingressclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses/status"]
    verbs: ["*"]
  - apiGroups: ["networking.higress.io"]
    resources: ["mcpbridges"]
    verbs: ["*"]
  - apiGroups: ["extensions.higress.io"]
    resources: ["wasmplugins"]
    verbs: ["*"]
---
# Source: higress-console/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: higress-console-default
  labels:
    helm.sh/chart: higress-console-1.3.3
    app.kubernetes.io/name: higress-console
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.3.3"
    app.kubernetes.io/managed-by: Helm    
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: higress-console-default
subjects:
  - kind: ServiceAccount
    name: higress-console
    namespace: default
---
# Source: higress-console/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: higress-console
  namespace: default
  labels:
    helm.sh/chart: higress-console-1.3.3
    app.kubernetes.io/name: higress-console
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.3.3"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create", "get", "list", "watch", "update", "delete"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["create", "get", "list", "watch", "update", "delete"]
---
# Source: higress-console/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: higress-console
  namespace: default
  labels:
    helm.sh/chart: higress-console-1.3.3
    app.kubernetes.io/name: higress-console
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.3.3"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: higress-console
subjects:
  - kind: ServiceAccount
    name: higress-console
    namespace: default
---
# Source: higress-console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: higress-console
  namespace: default
  labels:
    helm.sh/chart: higress-console-1.3.3
    app.kubernetes.io/name: higress-console
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.3.3"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: higress-console
    app.kubernetes.io/instance: release-name
---
# Source: higress-console/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: higress-console
  namespace: default
  labels:
    helm.sh/chart: higress-console-1.3.3
    app.kubernetes.io/name: higress-console
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.3.3"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: higress-console
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: higress-console
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: higress-console
      securityContext:
        {}
      containers:
        - name: higress-console
          securityContext:
            {}
          image: "higress-registry.cn-hangzhou.cr.aliyuncs.com/higress/console:1.3.3"
          imagePullPolicy: IfNotPresent
          env:
            - name: JAVA_HOME
              value: /usr/local/openjdk-18
            - name: LANG
              value: C.UTF-8
            - name: HIGRESS_CONSOLE_NS
              value: default
            - name: HIGRESS_CONSOLE_ADMIN_SECRET
              value: higress-console
            - name: HIGRESS_CONSOLE_CONFIG_MAP_NAME
              value: higress-console
            - name: HIGRESS_CONSOLE_CONTROLLER_JWT_POLICY
              value: third-party-jwt
            - name: HIGRESS_CONSOLE_CONTROLLER_INGRESS_CLASS_NAME
              value: higress
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            requests:
              cpu: 250m
              memory: 512Mi
          volumeMounts:
            - mountPath: /var/run/secrets/access-token
              name: access-token
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      volumes:
        - name: access-token
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 3600
                path: token
