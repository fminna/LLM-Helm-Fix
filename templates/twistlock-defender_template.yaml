---
# Source: twistlock-defender/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount # Service Account is used for managing security context constraints policies in Openshift (SCC)
metadata:
  name: twistlock-service
  namespace: 
secrets:
- name: twistlock-secrets
---
# Source: twistlock-defender/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: twistlock-secrets
  namespace: 
type: Opaque
data:
  service-parameter: 
  defender-ca.pem: 
  defender-client-cert.pem: 
  defender-client-key.pem: 
  admission-cert.pem: 
  admission-key.pem:
---
# Source: twistlock-defender/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: 
rules:
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"] # Allow Defenders to list RBAC resources
  verbs: ["list"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"] # Allow Defenders to get Deployments and ReplicaSets
  verbs: ["get"]
- apiGroups: [""] # Core API
  resources: ["namespaces", "pods"] # Allow Defenders to get Namespaces and Pods
  verbs: ["get"]
---
# Source: twistlock-defender/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: twistlock-view-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 
subjects:
- apiGroup:
  kind: ServiceAccount
  name: twistlock-service
  namespace:
---
# Source: twistlock-defender/templates/defenderservice.yaml
apiVersion: v1
kind: Service # Expose the Defender as admission controller. Remark: by default, Defender will not listen on the service port
metadata:
  name: defender
  namespace: 
  labels:
    app: twistlock-defender
spec:
  ports:
  - port: 443
    targetPort: 
  selector:
    app: twistlock-defender
---
# Source: twistlock-defender/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: twistlock-defender-ds
  namespace: 
spec:
  selector:
    matchLabels:
      app: twistlock-defender
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/twistlock-defender: unconfined
      labels:
        app: twistlock-defender
    spec:
      serviceAccountName: twistlock-service
      restartPolicy: Always
      containers:
      - name: twistlock-defender
        image: 
        volumeMounts:
        - name: data-folder
          mountPath: ""
        - name: certificates # Setting the certificates mount after data-folder since it is nested and was overridden in CRI based GKE cluster
          mountPath: "/var/lib/twistlock/certificates"
        - name: passwd
          mountPath: "/etc/passwd"
          readOnly: true
        - name: syslog-socket
          mountPath: "/dev/log"
        env:
        - name: WS_ADDRESS
          value: 
        - name: DEFENDER_TYPE
          value: 
        - name: DEFENDER_LISTENER_TYPE
          value: "none"
        - name: LOG_PROD
          value: "true"
        - name: SYSTEMD_ENABLED
          value: "false"
        - name: DOCKER_CLIENT_ADDRESS
          value: ""
        - name: DEFENDER_CLUSTER_ID
          value: ""
        - name: DEFENDER_CLUSTER
          value: ""
        - name: MONITOR_SERVICE_ACCOUNTS
          value: "true"
        - name: MONITOR_ISTIO
          value: "false"
        - name: COLLECT_POD_LABELS
          value: "true"
        - name: INSTALL_BUNDLE
          value: ""
        - name: HOST_CUSTOM_COMPLIANCE_ENABLED
          value: "false"
        - name: CLOUD_HOSTNAME_ENABLED
          value: "false"
        securityContext:
          readOnlyRootFilesystem: true
          privileged: false
          capabilities:
            add:
            - NET_ADMIN  # Required for process monitoring
            - NET_RAW    # Required for iptables (CNNF, runtime DNS, WAAS). See: https://bugzilla.redhat.com/show_bug.cgi?id=1895032
            - SYS_ADMIN  # Required for filesystem monitoring
            - SYS_PTRACE # Required for local audit monitoring
            - SYS_CHROOT # Required for changing mount namespace using setns
            - MKNOD      # A capability to create special files using mknod(2), used by docker-less registry scanning
            - SETFCAP    # A capability to set file capabilities, used by docker-less registry scanning
            - IPC_LOCK   # Required for perf events monitoring, allowing to ignore memory lock limits
        resources: # See: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#how-pods-with-resource-requests-are-scheduled
          limits:
            memory: 
            cpu: 
          requests:
            cpu: "256m"
      volumes:
      - name: certificates
        secret:
          secretName: twistlock-secrets
          defaultMode: 256
      - name: syslog-socket
        hostPath:
          path: "/dev/log"
      - name: data-folder
        hostPath:
          path: ""
      - name: passwd
        hostPath:
          path: "/etc/passwd"
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
