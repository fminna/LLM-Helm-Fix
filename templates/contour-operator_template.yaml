---
# Source: contour-operator/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-contour-operator
  namespace: "default"
  labels:
    app.kubernetes.io/name: contour-operator
    helm.sh/chart: contour-operator-3.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: contour-operator
  annotations:
automountServiceAccountToken: true
---
# Source: contour-operator/templates/auth-proxy-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: contour-operator
    helm.sh/chart: contour-operator-3.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: contour-operator
  name: release-name-contour-operator-auth-proxy
  namespace: "default"
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
# Source: contour-operator/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: contour-operator
    helm.sh/chart: contour-operator-3.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: contour-operator
  name: release-name-contour-operator
  namespace: "default"
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - delete
      - get
      - list
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - namespaces
      - secrets
      - serviceaccounts
      - services
    verbs:
      - create
      - delete
      - get
      - list
      - update
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
  - apiGroups:
      - apps
    resources:
      - daemonsets
    verbs:
      - create
      - delete
      - get
      - list
      - update
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - create
      - delete
      - get
      - list
      - update
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - create
      - delete
      - get
      - list
      - update
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - list
      - update
      - watch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - gatewayclasses
      - gateways
      - httproutes
      - referencepolicies
      - referencegrants
      - tlsroutes
    verbs:
      - get
      - list
      - update
      - watch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - gatewayclasses/status
      - gateways/status
      - httproutes/status
      - tlsroutes/status
    verbs:
      - create
      - get
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingressclasses
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - create
      - get
      - update
  - apiGroups:
      - operator.projectcontour.io
    resources:
      - contours
    verbs:
      - get
      - list
      - update
      - watch
  - apiGroups:
      - operator.projectcontour.io
    resources:
      - contours/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - projectcontour.io
    resources:
      - contourconfigurations
      - extensionservices
      - httpproxies
      - tlscertificatedelegations
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - projectcontour.io
    resources:
      - contourconfigurations/status
      - extensionservices/status
      - httpproxies/status
    verbs:
      - create
      - get
      - update
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterrolebindings
      - clusterroles
      - rolebindings
      - roles
    verbs:
      - create
      - delete
      - get
      - list
      - update
      - watch
---
# Source: contour-operator/templates/metrics-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: contour-operator
    helm.sh/chart: contour-operator-3.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: contour-operator
  name: release-name-contour-operator-metrics-reader
  namespace: "default"
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
# Source: contour-operator/templates/auth-proxy-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: contour-operator
    helm.sh/chart: contour-operator-3.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: contour-operator
  name: release-name-contour-operator-auth-proxy
  namespace: "default"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-contour-operator-auth-proxy
subjects:
  - kind: ServiceAccount
    name: release-name-contour-operator
    namespace: "default"
---
# Source: contour-operator/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: contour-operator
    helm.sh/chart: contour-operator-3.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: contour-operator
  name: release-name-contour-operator
  namespace: "default"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-contour-operator
subjects:
  - kind: ServiceAccount
    name: release-name-contour-operator
    namespace: "default"
---
# Source: contour-operator/templates/metrics-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: contour-operator
    helm.sh/chart: contour-operator-3.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: contour-operator
  name: release-name-contour-operator-metrics-reader
  namespace: "default"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-contour-operator-metrics-reader
subjects:
  - kind: ServiceAccount
    name: release-name-contour-operator
    namespace: "default"
---
# Source: contour-operator/templates/contour-editor-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: contour-operator
    helm.sh/chart: contour-operator-3.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: contour-operator
  name: release-name-contour-operator-editor-role
  namespace: "default"
rules:
  - apiGroups:
      - operator.projectcontour.io
    resources:
      - contours
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - operator.projectcontour.io
    resources:
      - contours/status
    verbs:
      - get
---
# Source: contour-operator/templates/contour-viewer-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: contour-operator
    helm.sh/chart: contour-operator-3.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: contour-operator
  name: release-name-contour-operator-viewer
  namespace: "default"
rules:
  - apiGroups:
      - operator.projectcontour.io
    resources:
      - contours
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - operator.projectcontour.io
    resources:
      - contours/status
    verbs:
      - get
---
# Source: contour-operator/templates/leader-election-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: contour-operator
    helm.sh/chart: contour-operator-3.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: contour-operator
  name: release-name-contour-operator-leader-election
  namespace: "default"
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps/status
    verbs:
      - get
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
---
# Source: contour-operator/templates/leader-election-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: contour-operator
    helm.sh/chart: contour-operator-3.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: contour-operator
  name: release-name-contour-operator-leader-election
  namespace: "default"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-contour-operator-leader-election
subjects:
  - kind: ServiceAccount
    name: release-name-contour-operator
    namespace: "default"
---
# Source: contour-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-contour-operator
  namespace: "default"
  labels:
    app.kubernetes.io/name: contour-operator
    helm.sh/chart: contour-operator-3.0.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: contour-operator
    control-plane: contour-operator
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: contour-operator
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: contour-operator
      control-plane: contour-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: contour-operator
        helm.sh/chart: contour-operator-3.0.0
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: contour-operator
        control-plane: contour-operator
    spec:
      serviceAccountName: release-name-contour-operator
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: contour-operator
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: contour-operator
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      initContainers:
      containers:
        - name: contour-operator
          image: marketplace.azurecr.io/bitnami/contour-operator:1.23.0-scratch-r0
          imagePullPolicy: IfNotPresent
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
          args:
            - --metrics-addr=:8080
            - --enable-leader-election
            - --contour-image=marketplace.azurecr.io/bitnami/contour:1.23.0-debian-11-r0
            - --envoy-image=marketplace.azurecr.io/bitnami/envoy:1.24.0-debian-11-r2
          envFrom:
          resources:
            limits: {}
            requests: {}
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 5
            periodSeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 5
            periodSeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          ports:
            - containerPort: 8080
              name: metrics
