---
# Source: victoria-metrics-single/templates/podsecuritypolicy.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: release-name-victoria-metrics-single
  namespace: default
  labels:
    helm.sh/chart: victoria-metrics-single-0.0.6
    app.kubernetes.io/managed-by: Helm
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName:  'docker/default'
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    # Default set from Docker, without DAC_OVERRIDE or CHOWN
    - FOWNER
    - FSETID
    - KILL
    - SETGID
    - SETUID
    - SETPCAP
    - NET_BIND_SERVICE
    - NET_RAW
    - SYS_CHROOT
    - MKNOD
    - AUDIT_WRITE
    - SETFCAP
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'RunAsAny'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
  readOnlyRootFilesystem: false
---
# Source: victoria-metrics-single/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: victoria-metrics-single-0.0.6
    app.kubernetes.io/managed-by: Helm
  name: release-name-victoria-metrics-single
  namespace: default
---
# Source: victoria-metrics-single/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-victoria-metrics-single-clusterrole
  labels:
    helm.sh/chart: victoria-metrics-single-0.0.6
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:      ['extensions']
    resources:      ['podsecuritypolicies']
    verbs:          ['use']
    resourceNames:  [release-name-victoria-metrics-single]
---
# Source: victoria-metrics-single/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-victoria-metrics-single-clusterrolebinding
  labels:
    helm.sh/chart: victoria-metrics-single-0.0.6
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: release-name-victoria-metrics-single
    namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-victoria-metrics-single-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
# Source: victoria-metrics-single/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: release-name-victoria-metrics-single
  namespace: default
  labels:
    helm.sh/chart: victoria-metrics-single-0.0.6
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:      ['extensions']
  resources:      ['podsecuritypolicies']
  verbs:          ['use']
  resourceNames:  [release-name-victoria-metrics-single]
---
# Source: victoria-metrics-single/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: release-name-victoria-metrics-single
  namespace: default
  labels:
    helm.sh/chart: victoria-metrics-single-0.0.6
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-victoria-metrics-single
subjects:
- kind: ServiceAccount
  name: release-name-victoria-metrics-single
  namespace: default
---
# Source: victoria-metrics-single/templates/server-service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: server
    app.kubernetes.io/name: victoria-metrics-single
    app.kubernetes.io/instance: release-name
    helm.sh/chart: victoria-metrics-single-0.0.6
    app.kubernetes.io/managed-by: Helm
  name: release-name-victoria-metrics-single-server-headless
spec:
  clusterIP: None
  ports:
    - name: http
      port: 8428
      protocol: TCP
      targetPort: http
  selector:
    app: server
    app.kubernetes.io/name: victoria-metrics-single
    app.kubernetes.io/instance: release-name
---
# Source: victoria-metrics-single/templates/server-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: server
    app.kubernetes.io/name: victoria-metrics-single
    app.kubernetes.io/instance: release-name
    helm.sh/chart: victoria-metrics-single-0.0.6
    app.kubernetes.io/managed-by: Helm
  name: release-name-victoria-metrics-single-server
spec:
  ports:
    - name: http
      port: 8428
      protocol: TCP
      targetPort: http
  selector:
    app: server
    app.kubernetes.io/name: victoria-metrics-single
    app.kubernetes.io/instance: release-name
  type: "ClusterIP"
---
# Source: victoria-metrics-single/templates/server-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: server
    app.kubernetes.io/name: victoria-metrics-single
    app.kubernetes.io/instance: release-name
    helm.sh/chart: victoria-metrics-single-0.0.6
    app.kubernetes.io/managed-by: Helm
  name: release-name-victoria-metrics-single-server
spec:
  serviceName: release-name-victoria-metrics-single-server
  selector:
    matchLabels:
      app: server
      app.kubernetes.io/name: victoria-metrics-single
      app.kubernetes.io/instance: release-name
  replicas: 1
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: server
        app.kubernetes.io/name: victoria-metrics-single
        app.kubernetes.io/instance: release-name
        helm.sh/chart: victoria-metrics-single-0.0.6
        app.kubernetes.io/managed-by: Helm
    spec:
      containers:
        - name: victoria-metrics-single-server
          image: "victoriametrics/victoria-metrics:v1.34.7"
          imagePullPolicy: "IfNotPresent"
          args:
            - "--retentionPeriod=1"
            - "--storageDataPath=/storage"
          ports:
            - name: http
              containerPort: 8428
          livenessProbe:
            initialDelaySeconds: 5
            periodSeconds: 15
            tcpSocket:
              port: http
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 15
            timeoutSeconds: 5
          resources:
            {}
          volumeMounts:
            - name: server-volume
              mountPath: /storage
              subPath: 
      serviceAccountName: release-name-victoria-metrics-single
      terminationGracePeriodSeconds: 60
  volumeClaimTemplates:
    - metadata:
        name: server-volume
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "16Gi"
