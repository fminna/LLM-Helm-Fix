---
# Source: futtertrog/charts/mariadb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-mariadb
  namespace: default
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-9.4.4
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
---
# Source: futtertrog/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-futtertrog
  labels:
    helm.sh/chart: futtertrog-1.7.0
    app.kubernetes.io/name: futtertrog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "21.10.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: futtertrog/charts/mariadb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-mariadb
  namespace: default
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-9.4.4
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  mariadb-root-password: "Y2hhbmdlbWU="
  mariadb-password: "ZnV0dGVydHJvZw=="
---
# Source: futtertrog/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: futtertrog-secret
  namespace: default
  labels:
    app.kubernetes.io/name: futtertrog
    helm.sh/chart: futtertrog-1.7.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
type: Opaque
data:
  APP_KEY: "YU9ab1pRSGhoYTQ0RWxaQg=="

  DATABASE_URL: "bXlzcWw6Ly9mdXR0ZXJ0cm9nOmZ1dHRlcnRyb2dAcmVsZWFzZS1uYW1lLW1hcmlhZGIvZnV0dGVydHJvZw=="
---
# Source: futtertrog/charts/mariadb/templates/primary/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-mariadb
  namespace: default
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-9.4.4
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
data:
  my.cnf: |-
    [mysqld]
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mariadb
    plugin_dir=/opt/bitnami/mariadb/plugin
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    tmpdir=/opt/bitnami/mariadb/tmp
    max_allowed_packet=16M
    bind-address=0.0.0.0
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    log-error=/opt/bitnami/mariadb/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci
    
    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mariadb/plugin
    
    [manager]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
---
# Source: futtertrog/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: futtertrog-config
  namespace: default
  labels:
    app.kubernetes.io/name: futtertrog
    helm.sh/chart: futtertrog-1.7.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
data:

  NEXMO_KEY: ""

  CALL_A_PIZZA_LOCATION: ""
  CALL_A_PIZZA_CATEGORIES: "[\"pizza/pizza-klassiker\",\"burger\"]"

  FLASCHENPOST_ZIPCODE: ""
  FLASCHENPOST_CATEGORIES: "[\"limonade/cola\"]"

  MAIL_DRIVER: "log"
---
# Source: futtertrog/charts/mariadb/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mariadb
  namespace: default
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-9.4.4
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: ClusterIP
  ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: mysql
      nodePort: null
  selector: 
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: primary
---
# Source: futtertrog/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-futtertrog
  labels:
    helm.sh/chart: futtertrog-1.7.0
    app.kubernetes.io/name: futtertrog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "21.10.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: futtertrog
    app.kubernetes.io/instance: release-name
---
# Source: futtertrog/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-futtertrog
  namespace: "default"
  labels:
    helm.sh/chart: futtertrog-1.7.0
    app.kubernetes.io/name: futtertrog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "21.10.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: futtertrog
      app.kubernetes.io/instance: release-name
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: futtertrog
        app.kubernetes.io/instance: release-name
    spec:
      securityContext:
        fsGroup: 33
      containers:
        - name: futtertrog
          securityContext:
            {}
          image: "robjuz/futtertrog:21.10.1"
          imagePullPolicy: IfNotPresent
          env:
            - name: APP_NAME
              value: Futtertrog
          envFrom:
            - configMapRef:
                name: futtertrog-config
            - secretRef:
                name: futtertrog-secret
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            periodSeconds: 10
          resources:
            limits:
              cpu: 100m
              memory: 150Mi
---
# Source: futtertrog/charts/mariadb/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-mariadb
  namespace: default
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-9.4.4
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels: 
      app.kubernetes.io/name: mariadb
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: primary
  serviceName: release-name-mariadb
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: 50ca6e5653c3108b79f5b77b8d51a7f5cfd8a359976a3d4611324a12bddb562f
      labels:
        app.kubernetes.io/name: mariadb
        helm.sh/chart: mariadb-9.4.4
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: primary
    spec:
      
      serviceAccountName: release-name-mariadb
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mariadb
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: primary
                namespaces:
                  - default
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      containers:
        - name: mariadb
          image: docker.io/bitnami/mariadb:10.5.12-debian-10-r19
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-mariadb
                  key: mariadb-root-password
            - name: MARIADB_USER
              value: "futtertrog"
            - name: MARIADB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-mariadb
                  key: mariadb-password
            - name: MARIADB_DATABASE
              value: "futtertrog"
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          resources: 
            limits: {}
            requests: {}
          volumeMounts:
            - name: data
              mountPath: /bitnami/mariadb
            - name: config
              mountPath: /opt/bitnami/mariadb/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: release-name-mariadb
  volumeClaimTemplates:
    - metadata:
        name: data
        labels: 
          app.kubernetes.io/name: mariadb
          app.kubernetes.io/instance: release-name
          app.kubernetes.io/component: primary
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "4Gi"
---
# Source: futtertrog/templates/cron.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: release-name-futtertrog-cron
  namespace: "default"
  labels:
    app.kubernetes.io/name: futtertrog
    helm.sh/chart: futtertrog-1.7.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
spec:
  schedule: "* * * * *"
  concurrencyPolicy: Replace
  startingDeadlineSeconds: 30
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      activeDeadlineSeconds: 120
      backoffLimit: 1
      template:
        spec:
          containers:
            - name: futtertrog
              image: "robjuz/futtertrog:21.10.1"
              imagePullPolicy: IfNotPresent
              args:
                - php
                - artisan
                - schedule:run
              envFrom:
                - configMapRef:
                    name: release-name-futtertrog-config
                - secretRef:
                    name: release-name-futtertrog-secret
              resources:
                limits:
                  cpu: 30m
                  memory: 150Mi
          restartPolicy: Never
---
# Source: futtertrog/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-futtertrog-test-connection"
  labels:
    helm.sh/chart: futtertrog-1.7.0
    app.kubernetes.io/name: futtertrog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "21.10.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-futtertrog:80']
  restartPolicy: Never
---
# Source: futtertrog/templates/createAdminAccount.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-futtertrog-crate-admin
  namespace: default
  labels:
    app.kubernetes.io/name: futtertrog
    helm.sh/chart: futtertrog-1.7.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "20"
spec:
  template:
    spec:
      containers:
        - name: futtertrog
          image: "robjuz/futtertrog:21.10.1"
          imagePullPolicy: IfNotPresent
          envFrom:
          - configMapRef:
              name: release-name-futtertrog-config
          - secretRef:
              name: release-name-futtertrog-secret
          command:
            - php
            - artisan
            - futtertrog:create-admin
            - -n
            - Admin
            - admin@futtertrog.local
            - changemeplease
      restartPolicy: OnFailure
---
# Source: futtertrog/templates/dbMigrate.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-futtertrog-db-migrate
  namespace: default
  labels:
    app.kubernetes.io/name: futtertrog
    helm.sh/chart: futtertrog-1.7.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "10"
spec:
  template:
    spec:
      containers:
        - name: futtertrog
          image: "robjuz/futtertrog:21.10.1"
          imagePullPolicy: IfNotPresent
          envFrom:
          - configMapRef:
              name: release-name-futtertrog-config
          - secretRef:
              name: release-name-futtertrog-secret
          command:
            - php
            - artisan
            - migrate
            - --force
      restartPolicy: OnFailure
