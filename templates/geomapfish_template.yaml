---
# Source: geomapfish/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: release-name-geomapfish-geoportal
  labels:
    helm.sh/chart: geomapfish
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: geomapfish
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: geoportal
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: geomapfish
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: geoportal
---
# Source: geomapfish/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-geomapfish-env
  labels: 
    helm.sh/chart: geomapfish
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: geomapfish
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: env
data:
  RELEASE_NAME: release-name
  GEOPORTAL_IMAGE_TAG: "latest"
  ALEMBIC_IMAGE_TAG: "latest"
  TOOLS_IMAGE_TAG: "latest"
  CONFIG_IMAGE_TAG: "latest"
---
# Source: geomapfish/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-geomapfish-geoportal
  labels: 
    helm.sh/chart: geomapfish
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: geomapfish
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: geoportal
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: geomapfish
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: geoportal
---
# Source: geomapfish/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-geomapfish-geoportal
  labels: 
    helm.sh/chart: geomapfish
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: geomapfish
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: geoportal
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: geomapfish
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: geoportal
  template:
    metadata:
      labels: 
        app.kubernetes.io/name: geomapfish
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: geoportal
    spec:
      serviceAccountName: default
      securityContext:
        {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: In
                values:
                - main
              - key: app.kubernetes.io/instance
                operator: In
                values:
                - release-name
              - key: app.kubernetes.io/name
                operator: In
                values:
                - geomapfish
            topologyKey: "kubernetes.io/hostname"
      initContainers:
        - name: config
          securityContext:
            runAsNonRoot: true
            runAsUser: 33
          image: "camptocamp/<project>-config:latest"
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: FallbackToLogsOnError
          resources:
            {}
          args:
            - bash
            - -c
            - cp -a /etc/geomapfish/* /etc/geomapfish-volume/ &&
              cp -a /usr/local/tomcat/webapps/ROOT/print-apps/* /etc/print-volume/
          volumeMounts:
            - mountPath: /etc/geomapfish-volume
              name: geomapfish
            - mountPath: /etc/print-volume
              name: print
      containers:
        - name: geoportal
          securityContext:
            runAsNonRoot: true
            runAsUser: 33
          image: "camptocamp/geomapfishapp-geoportal:latest"
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: FallbackToLogsOnError
          resources:
            {}

          volumeMounts:
            - mountPath: /etc/geomapfish
              name: geomapfish
              readOnly: true
            - mountPath: /usr/local/tomcat/webapps/ROOT/print-apps
              name: print
              readOnly: true

          ports:
            - name: http
              containerPort: 8080
              protocol: TCP

          livenessProbe:
            httpGet:
              path: "/c2c/health_check?max_level=0"
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: "/c2c/health_check?max_level=0"
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 20

      volumes:
        - name: geomapfish
          emptyDir: {}
        - name: print
          emptyDir: {}
---
# Source: geomapfish/templates/tools-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-geomapfish-tools
  labels: 
    helm.sh/chart: geomapfish
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: geomapfish
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: tools
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: geomapfish
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: tools
  template:
    metadata:
      labels: 
        app.kubernetes.io/name: geomapfish
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: tools
    spec:
      serviceAccountName: default
      securityContext:
        {}
      affinity:
        {}
      containers:
        - name: tools
          securityContext:
            runAsNonRoot: true
            runAsUser: 33
          image: "camptocamp/geomapfish-tools:latest"
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: FallbackToLogsOnError
          resources:
            {}
          args:
           - sleep
           - infinity
---
# Source: geomapfish/templates/alembic-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-geomapfish-alembic
  labels: 
    helm.sh/chart: geomapfish
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: geomapfish
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: alembic
spec:
  activeDeadlineSeconds: 600
  template:
    metadata:
      labels: 
        app.kubernetes.io/name: geomapfish
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: alembic
    spec:
      serviceAccountName: default
      securityContext:
        {}
      affinity:
        {}
      restartPolicy: Never
      containers:
        - name: alembic
          securityContext:
            runAsNonRoot: true
            runAsUser: 33
          image: "camptocamp/geomapfishapp-geoportal:latest"
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: FallbackToLogsOnError
          resources:
            {}
          args:
            - bash
            - -c
            - alembic --name=static upgrade head
