---
# Source: ibm-nodejs-express/templates/serviceAccount.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: release-name-nodejsexpressref-nodejsexpress-sa
  namespace: default
  labels:
    app.kubernetes.io/name: "nodejsExpressRef"
    helm.sh/chart: "ibm-nodejs-express"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "release-name"
    release: "release-name"
    app.kubernetes.io/component: "nodejsExpress"
imagePullSecrets:
  - name: sa-default
---
# Source: ibm-nodejs-express/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "release-name-nodejsexpressref-index"
  labels:
    app.kubernetes.io/name: "nodejsExpressRef"
    helm.sh/chart: "ibm-nodejs-express"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "release-name"
    release: "release-name"
    app.kubernetes.io/component: "index"
data:
  index.html: |
    "Default web page created from configMap: release-name-nodejsexpressref-index"
---
# Source: ibm-nodejs-express/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: 
    prometheus.io/scrape: 'true'
  name: release-name-nodejsexpressref-nodejsexpress
  labels:
    app.kubernetes.io/name: "nodejsExpressRef"
    helm.sh/chart: "ibm-nodejs-express"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "release-name"
    release: "release-name"
    app.kubernetes.io/component: "nodejsExpress"
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
      name: ""
  selector:
    app.kubernetes.io/name: "nodejsExpressRef"
    helm.sh/chart: "ibm-nodejs-express"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "release-name"
    release: "release-name"
    app.kubernetes.io/component: "nodejsExpress"
---
# Source: ibm-nodejs-express/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "release-name-nodejsexpressref-nodejsexpress"
  labels:
    app.kubernetes.io/name: "nodejsExpressRef"
    helm.sh/chart: "ibm-nodejs-express"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "release-name"
    release: "release-name"
    app.kubernetes.io/component: "nodejsExpress"
spec:
  selector:
    matchLabels:
      release: "release-name"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "nodejsExpressRef"
        helm.sh/chart: "ibm-nodejs-express"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/instance: "release-name"
        release: "release-name"
        app.kubernetes.io/component: "nodejsExpress"
      annotations:        
        productID: "ibm_nodejs_express_1.0.0_perpetual_00000"
        productName: "ibm-nodejs-express"
        productVersion: "1.0.0"
    spec:      
      hostIPC: false
      hostNetwork: false
      hostPID: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      
      serviceAccountName: release-name-nodejsexpressref-nodejsexpress-sa
      
      affinity:        
        nodeAffinity:
          
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64  
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 3
            preference:
              matchExpressions:
              - key: "beta.kubernetes.io/arch"
                operator: "In"
                values:
                - amd64
      containers:
        - name: ibm-nodejs-express
          image: ":"
          imagePullPolicy: IfNotPresent          
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
          ports:
            - containerPort: 3000
              #hostPort: not set
              #hostIP: not set
          volumeMounts:
            - name: index-vol
              mountPath: /usr/share/nodejsExpress/html
          livenessProbe:
            initialDelaySeconds: 180
            periodSeconds: 20
            httpGet:
              path: "/health"
              port: 3000
          readinessProbe:
            initialDelaySeconds: 30
            periodSeconds: 5
            httpGet:
              path: "/health"
              port: 3000
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
      volumes:
        - name: index-vol
          configMap:
            name: "release-name-nodejsexpressref-index"
---
# Source: ibm-nodejs-express/templates/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata: 
  name: release-name-nodejsexpressref-nodejsexpress
  labels:
    app.kubernetes.io/name: "nodejsExpressRef"
    helm.sh/chart: "ibm-nodejs-express"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "release-name"
    release: "release-name"
    app.kubernetes.io/component: "nodejsExpress"
spec: 
  maxReplicas: 10
  minReplicas: 1
  scaleTargetRef: 
    apiVersion: apps/v1
    kind: Deployment
    name: release-name-nodejsexpressref-nodejsexpress
  targetCPUUtilizationPercentage: 50
