---
# Source: notifiarr/templates/common.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-notifiarr-config
  namespace: default
  labels:
    app: "notifiarr-4.8.13"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "notifiarr"
    app.kubernetes.io/version: "0.7.0"
    helm-revision: "1"
    helm.sh/chart: "notifiarr-4.8.13"
    release: "release-name"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
---
# Source: notifiarr/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-notifiarr
  namespace: default
  labels:
    app: "notifiarr-4.8.13"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "notifiarr"
    app.kubernetes.io/version: "0.7.0"
    helm-revision: "1"
    helm.sh/chart: "notifiarr-4.8.13"
    release: "release-name"
    service.name: "main"
spec:
  type: ClusterIP
  publishNotReadyAddresses: false
  ports:
    - name: main
      port: 5454
      protocol: TCP
      targetPort: 5454
  selector:
    pod.name: main
    app.kubernetes.io/name: notifiarr
    app.kubernetes.io/instance: release-name
---
# Source: notifiarr/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-notifiarr
  namespace: default
  labels:
    app: "notifiarr-4.8.13"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "notifiarr"
    app.kubernetes.io/version: "0.7.0"
    helm-revision: "1"
    helm.sh/chart: "notifiarr-4.8.13"
    release: "release-name"
spec:  
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      pod.name: main
      app.kubernetes.io/name: notifiarr
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app: "notifiarr-4.8.13"
        app.kubernetes.io/instance: "release-name"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/name: "notifiarr"
        app.kubernetes.io/version: "0.7.0"
        helm-revision: "1"
        helm.sh/chart: "notifiarr-4.8.13"
        pod.lifecycle: "permanent"
        pod.name: "main"
        release: "release-name"
      annotations:
        checksum/cnpg: "a75efb1ae0b12e0e9dc5b46ff4b7f091cc6a50e8a9f6d73734f01a0fd0d050e3"
        checksum/configmaps: "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a"
        checksum/mariadb: "09c85576cb45b1eecd1467732b11ea8fa3363b0105c465f02a6ad64991521d52"
        checksum/mongodb: "09c85576cb45b1eecd1467732b11ea8fa3363b0105c465f02a6ad64991521d52"
        checksum/persistence: "add07a8cb420cbb1858df3271bdcb93bc57521cee2aa895cf36a90a41eb832f2"
        checksum/redis: "013343a028cbb3f7e08f4ba7522702dd98e52632c688641074b0b1db3df29894"
        checksum/secrets: "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a"
        checksum/services: "865e069bf635c795c8154c6b6b907432202c3442fb8b3fc8c605e7a20155054d"
        checksum/solr: "29c14feeaddbf7762052db593898d274941f539cee681ddc613957587686f347"
    spec:
      serviceAccountName: default
      automountServiceAccountToken: false
      runtimeClassName: 
      hostNetwork: false
      hostPID: false
      hostIPC: false
      shareProcessNamespace: false
      enableServiceLinks: false
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/arch: amd64
      topologySpreadConstraints:
        - maxSkew: 1
          whenUnsatisfiable: ScheduleAnyway
          topologyKey: "kubernetes.io/hostname"
          labelSelector:
            matchLabels:      
              pod.name: main
              app.kubernetes.io/name: notifiarr
              app.kubernetes.io/instance: release-name
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      terminationGracePeriodSeconds: 60
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 568
        sysctls: []
      hostUsers: true
      containers:
        - name: release-name-notifiarr
          image: golift/notifiarr:0.7.0@sha256:5080028cabe9169a84ebfeab0d38df1496a56965fa72a1072397e13dac5cf9bc
          imagePullPolicy: IfNotPresent
          tty: false
          stdin: false
          ports:
            - name: main
              containerPort: 5454
              protocol: TCP
              hostPort: null
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: false
            - name: devshm
              mountPath: /dev/shm
              readOnly: false
            - name: machine-id
              mountPath: /etc/machine-id
              readOnly: true
            - name: shared
              mountPath: /shared
              readOnly: false
            - name: tmp
              mountPath: /tmp
              readOnly: false
            - name: tmpdir
              mountPath: /tmpdir
              readOnly: false
            - name: varlogs
              mountPath: /var/logs
              readOnly: false
            - name: varrun
              mountPath: /var/run
              readOnly: false
          livenessProbe:
            httpGet:
              port: 5454
              path: /
              scheme: HTTP
            initialDelaySeconds: 12
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
            periodSeconds: 15
          readinessProbe:
            httpGet:
              port: 5454
              path: /
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 4
            successThreshold: 2
            timeoutSeconds: 5
            periodSeconds: 12
          startupProbe:
            httpGet:
              port: 5454
              path: /
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 60
            successThreshold: 1
            timeoutSeconds: 3
            periodSeconds: 5
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits: 
              cpu: 4000m 
              memory: 8Gi
          securityContext:
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            privileged: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add: []
              drop:
                - ALL
          env:
            - name: "TZ"
              value: "UTC"
            - name: "UMASK"
              value: "0022"
            - name: "UMASK_SET"
              value: "0022"
            - name: "NVIDIA_VISIBLE_DEVICES"
              value: "void"
            - name: "S6_READ_ONLY_ROOT"
              value: "1"
            - name: "DN_API_KEY"
              value: "test"
            - name: "DN_BIND_ADDR"
              value: "0.0.0.0:5454"
            - name: "DN_UPSTREAMS_0"
              value: "172.16.0.0/16"
            - name: "TMPDIR"
              value: "/tmpdir"
      initContainers:
        - name: release-name-notifiarr-init-init-conf
          image: tccr.io/tccr/alpine:v3.19.1@sha256:ade0065e19edaa4f6903d464ee70605111a48394536deb94f31b661264704558
          imagePullPolicy: IfNotPresent
          tty: false
          stdin: false
          command:
            - "/bin/sh"
          args:
            - "-c"
            - "export CONF=/config/notifiarr.conf\n\ntest -f \"$CONF\" && echo \"Config exists, skipping creation...\" && exit 0\n\necho \"Creating a minimal config in [$CONF]...\"\n\necho \"# Dummy comment\" > \"$CONF\" || echo \"Failed to create a minimal config...\"\n\necho \"Finished.\"\n"
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: false
            - name: devshm
              mountPath: /dev/shm
              readOnly: false
            - name: shared
              mountPath: /shared
              readOnly: false
            - name: tmp
              mountPath: /tmp
              readOnly: false
            - name: varlogs
              mountPath: /var/logs
              readOnly: false
            - name: varrun
              mountPath: /var/run
              readOnly: false
          
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits: 
              cpu: 4000m 
              memory: 8Gi
          securityContext:
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            privileged: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add: []
              drop:
                - ALL
          env:
            - name: "TZ"
              value: "UTC"
            - name: "UMASK"
              value: "0022"
            - name: "UMASK_SET"
              value: "0022"
            - name: "NVIDIA_VISIBLE_DEVICES"
              value: "void"
            - name: "S6_READ_ONLY_ROOT"
              value: "1"
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: release-name-notifiarr-config
        - name: devshm
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: machine-id
          hostPath:
            path: /etc/machine-id
        - name: shared
          emptyDir: {}
        - name: tmp
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: tmpdir
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: varlogs
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: varrun
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
