---
# Source: openhab-cloud/templates/ohcloudapp-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-openhab-cloud
  labels:
    helm.sh/chart: openhab-cloud-1.0.16
    app.kubernetes.io/name: openhab-cloud
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "9a2324b"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: openhab-cloud/templates/ ohcloudapp-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-openhab-cloud-config-json-template
  labels:
    helm.sh/chart: openhab-cloud-1.0.16
    app.kubernetes.io/name: openhab-cloud
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "9a2324b"
    app.kubernetes.io/managed-by: Helm
data:
  config.json.template: |-
    {
    "system": {
      "host": "${DOMAIN_NAME}",
      "proxyHost": "${PROXY_DOMAIN_NAME}",
      "port": "443",
      "protocol": "https",
      "logger" : {
        "type": "console"
      },
      "subDomainCookies": false
    },
    "express":{
      "key" : "${EXPRESS_KEY}"
    },
    "apn" : {
      "gateway": "gateway.push.apple.com",
      "cert": "certs/aps/aps_production_cert.pem",
      "key": "certs/aps/aps_production_key.pem",
      "passphrase": "${APN_PASSPHRASE}"
    },
    "gcm" : {
      "jid": "something@gcm.googleapis.com",
      "password": "${GCM_PASSWORD}"
    },
    "ifttt" : {
      "iftttChannelKey" : "key",
      "iftttTestToken" : "token"
    },
    "mongodb": {
        "hosts": ["${MONGODB_URI}"],
        "db": "${MONGODB_DB}",
        "user": "${MONGODB_USER}",
        "password": "${MONGODB_PASS}"
    },
    "redis": {
        "host": "${REDIS_HOST}",
        "port": "6379",
        "password": "${REDIS_PASSWORD}"
    },
    "mailer": {
        "host" : "${MAIL_HOST}",
        "port": 465,
        "secureConnection": true,
        "user": "${MAIL_USER}",
        "password": "${MAIL_PASSWORD}",
        "from": "${MAIL_FROM}"
    },
    "legal": {
        "terms" : "",
        "policy": ""
    },
    "registration_enabled": false
    }
---
# Source: openhab-cloud/templates/ohcloudapp-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-openhab-cloud
  labels:
    helm.sh/chart: openhab-cloud-1.0.16
    app.kubernetes.io/name: openhab-cloud
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "9a2324b"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: openhab-cloud
    app.kubernetes.io/instance: release-name
---
# Source: openhab-cloud/templates/ohcloudapp-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-openhab-cloud
  labels:
    helm.sh/chart: openhab-cloud-1.0.16
    app.kubernetes.io/name: openhab-cloud
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "9a2324b"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: openhab-cloud
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: openhab-cloud-1.0.16
        app.kubernetes.io/name: openhab-cloud
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "9a2324b"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: release-name-openhab-cloud
      securityContext:
        {}
      containers:
        - name: openhab-cloud
          securityContext:
            {}
          image: "docker.io/openhab/openhab-cloud:9a2324b"
          imagePullPolicy: IfNotPresent
          env:
            - name: "PORT"
              value: "3000"
            - name: "PROXY_DOMAIN_NAME"
              value: ""
            - name: DOMAIN_NAME
              value: ""
            - name: EXPRESS_KEY
              value: ""
            - name: APN_PASSPHRASE
              value: ""
            - name: GCM_PASSWORD
              value: ""
            - name: MONGODB_URI
              value: ""
            - name: MONGODB_DB
              value: ""
            - name: MONGODB_USER
              value: ""
            - name: MONGODB_PASS
              value: ""
            - name: REDIS_HOST
              value: ""
            - name: REDIS_PASSWORD
              value: ""
            - name: MAIL_USER
              value: ""
            - name: MAIL_PASSWORD
              value: ""
            - name: MAIL_FROM
              value: ""
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
          volumeMounts:
            - name: config-json-template
              mountPath: "/opt/openhabcloud/config.json.template"
              readOnly: true
              subPath: "config.json.template"
      volumes:
        - name: config-json-template
          configMap:
            # Provide the name of the ConfigMap containing the files you want
            # to add to the container
            name: release-name-openhab-cloud-config-json-template
            items:
            - key: config.json.template
              path: config.json.template
