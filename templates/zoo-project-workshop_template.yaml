---
# Source: zoo-project-workshop/charts/rabbitmq/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-rabbitmq
  namespace: "default"
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-11.5.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
secrets:
  - name: release-name-rabbitmq
---
# Source: zoo-project-workshop/charts/redis/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: release-name-redis
  namespace: "default"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-17.6.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
# Source: zoo-project-workshop/templates/sa-processing-manager.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-processing-manager
  labels:
    helm.sh/chart: zoo-project-workshop-0.0.6
    app.kubernetes.io/name: zoo-project-workshop
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: zoo-project-workshop/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name
  labels:
    helm.sh/chart: zoo-project-workshop-0.0.6
    app.kubernetes.io/name: zoo-project-workshop
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: zoo-project-workshop/charts/postgresql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-12.1.9
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  postgres-password: "NFc4bFFldzF0cA=="
  password: "em9v"
  # We don't auto-generate LDAP password when it's not provided as we do for other passwords
---
# Source: zoo-project-workshop/charts/rabbitmq/templates/config-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-rabbitmq-config
  namespace: "default"
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-11.5.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  rabbitmq.conf: |-
    IyMgVXNlcm5hbWUgYW5kIHBhc3N3b3JkCiMjCmRlZmF1bHRfdXNlciA9IFJBQkJJVE1RX1VTRVJOQU1FCiMjIENsdXN0ZXJpbmcKIyMKY2x1c3Rlcl9mb3JtYXRpb24ucGVlcl9kaXNjb3ZlcnlfYmFja2VuZCAgPSByYWJiaXRfcGVlcl9kaXNjb3ZlcnlfazhzCmNsdXN0ZXJfZm9ybWF0aW9uLms4cy5ob3N0ID0ga3ViZXJuZXRlcy5kZWZhdWx0CmNsdXN0ZXJfZm9ybWF0aW9uLm5vZGVfY2xlYW51cC5pbnRlcnZhbCA9IDEwCmNsdXN0ZXJfZm9ybWF0aW9uLm5vZGVfY2xlYW51cC5vbmx5X2xvZ193YXJuaW5nID0gdHJ1ZQpjbHVzdGVyX3BhcnRpdGlvbl9oYW5kbGluZyA9IGF1dG9oZWFsCmxvYWRfZGVmaW5pdGlvbnMgPSAvYXBwL2xvYWRfZGVmaW5pdGlvbi5qc29uCiMgcXVldWUgbWFzdGVyIGxvY2F0b3IKcXVldWVfbWFzdGVyX2xvY2F0b3IgPSBtaW4tbWFzdGVycwojIGVuYWJsZSBsb29wYmFjayB1c2VyCmxvb3BiYWNrX3VzZXJzLlJBQkJJVE1RX1VTRVJOQU1FID0gZmFsc2UKbG9hZF9kZWZpbml0aW9ucyA9IC9hcHAvbG9hZF9kZWZpbml0aW9uLmpzb24K
---
# Source: zoo-project-workshop/charts/rabbitmq/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-rabbitmq
  namespace: "default"
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-11.5.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  rabbitmq-password: "Q0hBTkdFTUU="
  
  rabbitmq-erlang-cookie: "TE80SGYxdTh4T0tYaFVFUW1LQWhLSlBFaGFRUW15RXE="
---
# Source: zoo-project-workshop/charts/redis/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-redis
  namespace: "default"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-17.6.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  redis-password: "RUhDN2xGeFBQQg=="
---
# Source: zoo-project-workshop/templates/rabbitmq-definition-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: load-definition
type: Opaque
stringData:
  load_definition.json: "{\n  \"rabbit_version\": \"3.8.9\",\n  \"rabbitmq_version\": \"3.8.9\",\n  \"product_name\": \"RabbitMQ\",\n  \"product_version\": \"3.8.9\",\n  \"users\": [\n    {\n      \"name\": \"guest\",\n      \"password_hash\": \"4+GY9SXaXs4JKn5uz0kVOQ/bklsy9dJRnxF2HwVco23TMFPg\",\n      \"hashing_algorithm\": \"rabbit_password_hashing_sha256\",\n      \"tags\": \"administrator\"\n    }\n  ],\n  \"vhosts\": [\n    {\n      \"name\": \"/\"\n    }\n  ],\n  \"permissions\": [\n    {\n      \"user\": \"guest\",\n      \"vhost\": \"/\",\n      \"configure\": \".*\",\n      \"write\": \".*\",\n      \"read\": \".*\"\n    }\n  ],\n  \"topic_permissions\": [],\n  \"parameters\": [],\n  \"global_parameters\": [\n    {\n      \"name\": \"cluster_name\",\n      \"value\": \"rabbit@7ef77dc5021e\"\n    },\n    {\n      \"name\": \"internal_cluster_id\",\n      \"value\": \"rabbitmq-cluster-id-I25xJdt3QpmEFzeKaPqmdQ\"\n    }\n  ],\n  \"policies\": [],\n  \"queues\": [\n    {\n      \"name\": \"amq.gen-67C6b7LbpXCa_2JKu5hsbQ\",\n      \"vhost\": \"/\",\n      \"durable\": false,\n      \"auto_delete\": true,\n      \"arguments\": {\n        \"x-message-ttl\": 6000\n      }\n    },\n    {\n      \"name\": \"amq.gen-A_NBM-thDA0ivfU5ni05eg\",\n      \"vhost\": \"/\",\n      \"durable\": false,\n      \"auto_delete\": true,\n      \"arguments\": {\n        \"x-message-ttl\": 6000\n      }\n    },\n    {\n      \"name\": \"amq.gen--15Q21vMHiRYsrhyftTmVw\",\n      \"vhost\": \"/\",\n      \"durable\": false,\n      \"auto_delete\": true,\n      \"arguments\": {\n        \"x-message-ttl\": 6000\n      }\n    },\n    {\n      \"name\": \"amq.gen-rsQm2-BNFiyT_1KEcDldsQ\",\n      \"vhost\": \"/\",\n      \"durable\": false,\n      \"auto_delete\": true,\n      \"arguments\": {\n        \"x-message-ttl\": 6000\n      }\n    },\n    {\n      \"name\": \"zoo_service_queue\",\n      \"vhost\": \"/\",\n      \"durable\": true,\n      \"auto_delete\": false,\n      \"arguments\": {\n        \"x-queue-type\": \"classic\"\n      }\n    }\n  ],\n  \"exchanges\": [],\n  \"bindings\": []\n}"
---
# Source: zoo-project-workshop/charts/redis/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-redis-configuration
  namespace: "default"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-17.6.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  redis.conf: |-
    # User-supplied common configuration:
    # Enable AOF https://redis.io/topics/persistence#append-only-file
    appendonly yes
    # Disable RDB persistence, AOF persistence already enabled.
    save ""
    # End of common configuration
  master.conf: |-
    dir /data
    # User-supplied master configuration:
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
    # End of master configuration
  replica.conf: |-
    dir /data
    # User-supplied replica configuration:
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
    # End of replica configuration
---
# Source: zoo-project-workshop/charts/redis/templates/health-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-redis-health
  namespace: "default"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-17.6.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  ping_readiness_local.sh: |-
    #!/bin/bash

    [[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD="$(< "${REDIS_PASSWORD_FILE}")"
    [[ -n "$REDIS_PASSWORD" ]] && export REDISCLI_AUTH="$REDIS_PASSWORD"
    response=$(
      timeout -s 3 $1 \
      redis-cli \
        -h localhost \
        -p $REDIS_PORT \
        ping
    )
    if [ "$?" -eq "124" ]; then
      echo "Timed out"
      exit 1
    fi
    if [ "$response" != "PONG" ]; then
      echo "$response"
      exit 1
    fi
  ping_liveness_local.sh: |-
    #!/bin/bash

    [[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD="$(< "${REDIS_PASSWORD_FILE}")"
    [[ -n "$REDIS_PASSWORD" ]] && export REDISCLI_AUTH="$REDIS_PASSWORD"
    response=$(
      timeout -s 3 $1 \
      redis-cli \
        -h localhost \
        -p $REDIS_PORT \
        ping
    )
    if [ "$?" -eq "124" ]; then
      echo "Timed out"
      exit 1
    fi
    responseFirstWord=$(echo $response | head -n1 | awk '{print $1;}')
    if [ "$response" != "PONG" ] && [ "$responseFirstWord" != "LOADING" ] && [ "$responseFirstWord" != "MASTERDOWN" ]; then
      echo "$response"
      exit 1
    fi
  ping_readiness_master.sh: |-
    #!/bin/bash

    [[ -f $REDIS_MASTER_PASSWORD_FILE ]] && export REDIS_MASTER_PASSWORD="$(< "${REDIS_MASTER_PASSWORD_FILE}")"
    [[ -n "$REDIS_MASTER_PASSWORD" ]] && export REDISCLI_AUTH="$REDIS_MASTER_PASSWORD"
    response=$(
      timeout -s 3 $1 \
      redis-cli \
        -h $REDIS_MASTER_HOST \
        -p $REDIS_MASTER_PORT_NUMBER \
        ping
    )
    if [ "$?" -eq "124" ]; then
      echo "Timed out"
      exit 1
    fi
    if [ "$response" != "PONG" ]; then
      echo "$response"
      exit 1
    fi
  ping_liveness_master.sh: |-
    #!/bin/bash

    [[ -f $REDIS_MASTER_PASSWORD_FILE ]] && export REDIS_MASTER_PASSWORD="$(< "${REDIS_MASTER_PASSWORD_FILE}")"
    [[ -n "$REDIS_MASTER_PASSWORD" ]] && export REDISCLI_AUTH="$REDIS_MASTER_PASSWORD"
    response=$(
      timeout -s 3 $1 \
      redis-cli \
        -h $REDIS_MASTER_HOST \
        -p $REDIS_MASTER_PORT_NUMBER \
        ping
    )
    if [ "$?" -eq "124" ]; then
      echo "Timed out"
      exit 1
    fi
    responseFirstWord=$(echo $response | head -n1 | awk '{print $1;}')
    if [ "$response" != "PONG" ] && [ "$responseFirstWord" != "LOADING" ]; then
      echo "$response"
      exit 1
    fi
  ping_readiness_local_and_master.sh: |-
    script_dir="$(dirname "$0")"
    exit_status=0
    "$script_dir/ping_readiness_local.sh" $1 || exit_status=$?
    "$script_dir/ping_readiness_master.sh" $1 || exit_status=$?
    exit $exit_status
  ping_liveness_local_and_master.sh: |-
    script_dir="$(dirname "$0")"
    exit_status=0
    "$script_dir/ping_liveness_local.sh" $1 || exit_status=$?
    "$script_dir/ping_liveness_master.sh" $1 || exit_status=$?
    exit $exit_status
---
# Source: zoo-project-workshop/charts/redis/templates/scripts-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-redis-scripts
  namespace: "default"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-17.6.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  start-master.sh: |
    #!/bin/bash

    [[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD="$(< "${REDIS_PASSWORD_FILE}")"
    if [[ -f /opt/bitnami/redis/mounted-etc/master.conf ]];then
        cp /opt/bitnami/redis/mounted-etc/master.conf /opt/bitnami/redis/etc/master.conf
    fi
    if [[ -f /opt/bitnami/redis/mounted-etc/redis.conf ]];then
        cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf
    fi
    ARGS=("--port" "${REDIS_PORT}")
    ARGS+=("--requirepass" "${REDIS_PASSWORD}")
    ARGS+=("--masterauth" "${REDIS_PASSWORD}")
    ARGS+=("--include" "/opt/bitnami/redis/etc/redis.conf")
    ARGS+=("--include" "/opt/bitnami/redis/etc/master.conf")
    exec redis-server "${ARGS[@]}"
  start-replica.sh: |
    #!/bin/bash

    get_port() {
        hostname="$1"
        type="$2"

        port_var=$(echo "${hostname^^}_SERVICE_PORT_$type" | sed "s/-/_/g")
        port=${!port_var}

        if [ -z "$port" ]; then
            case $type in
                "SENTINEL")
                    echo 26379
                    ;;
                "REDIS")
                    echo 6379
                    ;;
            esac
        else
            echo $port
        fi
    }

    get_full_hostname() {
        hostname="$1"
        echo "${hostname}.${HEADLESS_SERVICE}"
    }

    REDISPORT=$(get_port "$HOSTNAME" "REDIS")

    [[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD="$(< "${REDIS_PASSWORD_FILE}")"
    [[ -f $REDIS_MASTER_PASSWORD_FILE ]] && export REDIS_MASTER_PASSWORD="$(< "${REDIS_MASTER_PASSWORD_FILE}")"
    if [[ -f /opt/bitnami/redis/mounted-etc/replica.conf ]];then
        cp /opt/bitnami/redis/mounted-etc/replica.conf /opt/bitnami/redis/etc/replica.conf
    fi
    if [[ -f /opt/bitnami/redis/mounted-etc/redis.conf ]];then
        cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf
    fi

    echo "" >> /opt/bitnami/redis/etc/replica.conf
    echo "replica-announce-port $REDISPORT" >> /opt/bitnami/redis/etc/replica.conf
    echo "replica-announce-ip $(get_full_hostname "$HOSTNAME")" >> /opt/bitnami/redis/etc/replica.conf
    ARGS=("--port" "${REDIS_PORT}")
    ARGS+=("--replicaof" "${REDIS_MASTER_HOST}" "${REDIS_MASTER_PORT_NUMBER}")
    ARGS+=("--requirepass" "${REDIS_PASSWORD}")
    ARGS+=("--masterauth" "${REDIS_MASTER_PASSWORD}")
    ARGS+=("--include" "/opt/bitnami/redis/etc/redis.conf")
    ARGS+=("--include" "/opt/bitnami/redis/etc/replica.conf")
    exec redis-server "${ARGS[@]}"
---
# Source: zoo-project-workshop/templates/cm-cwlwrapper-assets.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-cwlwrapper-config
data:
  main.yaml: "class: Workflow\n$namespaces:\n    cwltool: http://commonwl.org/cwltool#\ndoc:
    Main stage manager\nid: main\nlabel: macro-cwl\ninputs: {}\noutputs: \n    StacCatalogUri:\n
    \       outputSource:\n          - node_stage_out/StacCatalogUri\n        type:
    string\nhints:\n    \"cwltool:Secrets\":\n        secrets: []\nrequirements:\n    SubworkflowFeatureRequirement:
    {}\n    ScatterFeatureRequirement: {}\n    InlineJavascriptRequirement: {}"
  rules.yaml: |-
    rulez:
      version: 1
  
    parser:
      type: $graph
      driver: cwl
  
    onstage:
      driver: cwl
  
      stage_in:
        connection_node: node_stage_in
        if_scatter:
          scatterMethod: dotproduct
        input:
          template:
            overwrite: True
  
      on_stage:
        connection_node: on_stage
  
      stage_out:
        connection_node: node_stage_out
        scatter: False
        if_scatter:
          scatterMethod: dotproduct
        follow_node: node_metrics_out
  
  
    output:
      driver: cwl
      name: '-'
      type: $graph
  
  
    cwl:
      GlobalInput:
        Directory: string
        Directory[]: string[]
  
      OptionalInput:
        Directory: string?
        Directory[]: string[]?
  
      stage_in:
        Directory:
          type: string
          inputBinding:
            position: 2
  
        Directory[]:
          type: string[]
          inputBinding:
            position: 2
  
      stage_out:
        Directory:
          type: Directory
  
        Directory[]:
          type: Directory[]
  
      outputBindingResult:
        command:
          Directory:
            outputBinding:
              glob: .
            type: Directory
          Directory[]:
            outputBinding:
              glob: .
            type: Directory[]
        stepOut:
          type:
            items: Directory
            type: array
  stagein.yaml: |
    #!/usr/bin/env cwl-runner
  
    cwlVersion: v1.0
    class: CommandLineTool
    id: stage
    inputs: {}
    outputs: {}
    baseCommand:
      - python
      - stage.py
    arguments:
      - $( inputs.input )
    requirements:
      DockerRequirement:
        dockerPull: ghcr.io/terradue/ogc-eo-application-package-hands-on/stage:1.3.2
      EnvVarRequirement:
        envDef:
          A: "2"
      InlineJavascriptRequirement: {}
      InitialWorkDirRequirement:
        listing:
          - entryname: stage.py
            entry: "import pystac\nimport stac_asset\nimport asyncio\nimport os\nimport sys\n\nconfig = stac_asset.Config(warn=True)\n\nasync def main(href: str):\n    \n    item = pystac.read_file(href)\n    \n    os.makedirs(item.id, exist_ok=True)\n    cwd = os.getcwd()\n    \n    os.chdir(item.id)\n    item = await stac_asset.download_item(item=item, directory=\".\", config=config)\n    os.chdir(cwd)\n    \n    cat = pystac.Catalog(\n        id=\"catalog\",\n        description=f\"catalog with staged {item.id}\",\n        title=f\"catalog with staged {item.id}\",\n    )\n    cat.add_item(item)\n    \n    cat.normalize_hrefs(\"./\")\n    cat.save(catalog_type=pystac.CatalogType.SELF_CONTAINED)\n\n    return cat\n\nhref = sys.argv[1]\n\ncat = asyncio.run(main(href))"
  stageout.yaml: "cwlVersion: v1.0\nclass: CommandLineTool\nid: stage-out\ndoc: \"Stage-out
    the results to S3\"\n#hints:\n#  \"cwltool:Secrets\":\n#    secrets:\n#      - STAGEOUT_AWS_ACCESS_KEY_ID\n#
    \     - STAGEOUT_AWS_SECRET_ACCESS_KEY\n#      - STAGEOUT_AWS_REGION\n#      - STAGEOUT_AWS_SERVICEURL\ninputs:\n
    \ STAGEOUT_OUTPUT:\n    type: string\n  process:\n    type: string\n  STAGEOUT_AWS_ACCESS_KEY_ID:\n
    \   type: string\n  STAGEOUT_AWS_SECRET_ACCESS_KEY:\n    type: string\n  STAGEOUT_AWS_REGION:\n
    \   type: string\n  STAGEOUT_AWS_SERVICEURL:\n    type: string\noutputs:\n  StacCatalogUri:\n
    \   outputBinding:\n      outputEval: ${  return inputs.STAGEOUT_OUTPUT + \"/\"
    + inputs.process + \"/catalog.json\"; }\n    type: string\nbaseCommand:\n  - python\n
    \ - stage.py\narguments:\n  - $( inputs.wf_outputs.path )\n  - $( inputs.STAGEOUT_OUTPUT
    )\n  - $( inputs.process )\nrequirements:\n  DockerRequirement:\n    dockerPull:
    ghcr.io/terradue/ogc-eo-application-package-hands-on/stage:1.3.2\n  InlineJavascriptRequirement:
    {}\n  EnvVarRequirement:\n    envDef:\n      STAGEOUT_AWS_ACCESS_KEY_ID: $( inputs.STAGEOUT_AWS_ACCESS_KEY_ID
    )\n      STAGEOUT_AWS_SECRET_ACCESS_KEY: $( inputs.STAGEOUT_AWS_SECRET_ACCESS_KEY
    )\n      STAGEOUT_AWS_REGION: $( inputs.STAGEOUT_AWS_REGION )\n      STAGEOUT_AWS_SERVICEURL:
    $( inputs.STAGEOUT_AWS_SERVICEURL )\n\n  ResourceRequirement: {}\n  InitialWorkDirRequirement:\n
    \   listing:\n      - entryname: stage.py\n        entry: |-\n          import os\n
    \         import sys\n          import pystac\n          import botocore\n          import
    boto3\n          import shutil\n          from pystac.stac_io import DefaultStacIO,
    StacIO\n          from urllib.parse import urlparse\n\n          cat_url = sys.argv[1]\n
    \         bucket = sys.argv[2].replace(\"s3://\",\"\")\n          subfolder = sys.argv[3]\n
    \         \n          aws_access_key_id = os.environ[\"STAGEOUT_AWS_ACCESS_KEY_ID\"]\n
    \         aws_secret_access_key = os.environ[\"STAGEOUT_AWS_SECRET_ACCESS_KEY\"]\n
    \         region_name = os.environ[\"STAGEOUT_AWS_REGION\"]\n          endpoint_url
    = os.environ[\"STAGEOUT_AWS_SERVICEURL\"]\n\n          shutil.copytree(cat_url,
    \"/tmp/catalog\")\n          cat = pystac.read_file(os.path.join(\"/tmp/catalog\",
    \"catalog.json\"))\n\n          class CustomStacIO(DefaultStacIO):\n              \"\"\"Custom
    STAC IO class that uses boto3 to read from S3.\"\"\"\n\n              def __init__(self):\n
    \                 self.session = botocore.session.Session()\n                  self.s3_client
    = self.session.create_client(\n                      service_name=\"s3\",\n                      use_ssl=True,\n
    \                     aws_access_key_id=aws_access_key_id,\n                      aws_secret_access_key=aws_secret_access_key,\n
    \                     endpoint_url=endpoint_url,\n                      region_name=region_name,\n
    \                 )\n\n              def write_text(self, dest, txt, *args, **kwargs):\n
    \                 parsed = urlparse(dest)\n                  if parsed.scheme ==
    \"s3\":\n                      self.s3_client.put_object(\n                          Body=txt.encode(\"UTF-8\"),\n
    \                         Bucket=parsed.netloc,\n                          Key=parsed.path[1:],\n
    \                         ContentType=\"application/geo+json\",\n                      )\n
    \                 else:\n                      super().write_text(dest, txt, *args,
    **kwargs)\n\n\n          client = boto3.client(\n              \"s3\",\n              aws_access_key_id=aws_access_key_id,\n
    \             aws_secret_access_key=aws_secret_access_key,\n              endpoint_url=endpoint_url,\n
    \             region_name=region_name,\n          )\n\n          StacIO.set_default(CustomStacIO)\n\n
    \         for item in cat.get_items():\n              for key, asset in item.get_assets().items():\n
    \                 s3_path = os.path.normpath(\n                      os.path.join(os.path.join(subfolder,
    item.id, asset.href))\n                  )\n                  print(f\"upload {asset.href}
    to s3://{bucket}/{s3_path}\",file=sys.stderr)\n                  client.upload_file(\n
    \                     asset.get_absolute_href(),\n                      bucket,\n
    \                     s3_path,\n                  )\n                  asset.href
    = f\"s3://{bucket}/{s3_path}\"\n                  item.add_asset(key, asset)\n\n
    \         cat.normalize_hrefs(f\"s3://{bucket}/{subfolder}\")\n\n          for item
    in cat.get_items():\n              # upload item to S3\n              print(f\"upload
    {item.id} to s3://{bucket}/{subfolder}\", file=sys.stderr)\n              pystac.write_file(item,
    item.get_self_href())\n\n\n          # upload catalog to S3\n          print(f\"upload
    catalog.json to s3://{bucket}/{subfolder}\", file=sys.stderr)\n          for index,
    link in enumerate(cat.links):\n              if link.rel == \"root\":\n              \t
    cat.links.pop(index) \n          pystac.write_file(cat, cat.get_self_href())\n\n
    \         print(f\"s3://{bucket}/{subfolder}/catalog.json\", file=sys.stdout)\n"
---
# Source: zoo-project-workshop/templates/cm-example-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-zoo-example-config
data:
  app-package.cwl: |
    cwlVersion: v1.0
    $namespaces:
      s: https://schema.org/
    s:softwareVersion: 1.4.1
    schemas:
      - http://schema.org/version/9.0/schemaorg-current-http.rdf
    $graph:
      - class: Workflow
        id: water-bodies
        label: Water bodies detection based on NDWI and otsu threshold
        doc: Water bodies detection based on NDWI and otsu threshold
        requirements:
          - class: ScatterFeatureRequirement
          - class: SubworkflowFeatureRequirement
        inputs:
          aoi:
            label: area of interest
            doc: area of interest as a bounding box
            type: string
          epsg:
            label: EPSG code
            doc: EPSG code
            type: string
            default: "EPSG:4326"
          stac_items:
            label: Sentinel-2 STAC items
            doc: list of Sentinel-2 COG STAC items
            type: string[]
          bands:
            label: bands used for the NDWI
            doc: bands used for the NDWI
            type: string[]
            default: ["green", "nir"]
        outputs:
          - id: stac
            outputSource:
              - node_stac/stac_catalog
            type: Directory
        steps:
          node_water_bodies:
            run: "#detect_water_body"
            in:
              item: stac_items
              aoi: aoi
              epsg: epsg
              bands: bands
            out:
              - detected_water_body
            scatter: item
            scatterMethod: dotproduct
          node_stac:
            run: "#stac"
            in:
              item: stac_items
              rasters:
                source: node_water_bodies/detected_water_body
            out:
              - stac_catalog
      - class: Workflow
        id: detect_water_body
        label: Water body detection based on NDWI and otsu threshold
        doc: Water body detection based on NDWI and otsu threshold
        requirements:
          - class: ScatterFeatureRequirement
        inputs:
          aoi:
            doc: area of interest as a bounding box
            type: string
          epsg:
            doc: EPSG code
            type: string
            default: "EPSG:4326"
          bands:
            doc: bands used for the NDWI
            type: string[]
          item:
            doc: STAC item
            type: string
        outputs:
          - id: detected_water_body
            outputSource:
              - node_otsu/binary_mask_item
            type: File
        steps:
          node_crop:
            run: "#crop"
            in:
              item: item
              aoi: aoi
              epsg: epsg
              band: bands
            out:
              - cropped
            scatter: band
            scatterMethod: dotproduct
          node_normalized_difference:
            run: "#norm_diff"
            in:
              rasters:
                source: node_crop/cropped
            out:
              - ndwi
          node_otsu:
            run: "#otsu"
            in:
              raster:
                source: node_normalized_difference/ndwi
            out:
              - binary_mask_item
      - class: CommandLineTool
        id: crop
        requirements:
          InlineJavascriptRequirement: {}
          EnvVarRequirement:
            envDef:
              PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
              PYTHONPATH: /app
          ResourceRequirement:
            coresMax: 1
            ramMax: 512
        hints:
          DockerRequirement:
            dockerPull: ghcr.io/terradue/ogc-eo-application-package-hands-on/crop:1.5.0
        baseCommand: ["python", "-m", "app"]
        arguments: []
        inputs:
          item:
            type: string
            inputBinding:
              prefix: --input-item
          aoi:
            type: string
            inputBinding:
              prefix: --aoi
          epsg:
            type: string
            inputBinding:
              prefix: --epsg
          band:
            type: string
            inputBinding:
              prefix: --band
        outputs:
          cropped:
            outputBinding:
              glob: '*.tif'
            type: File
      - class: CommandLineTool
        id: norm_diff
        requirements:
          InlineJavascriptRequirement: {}
          EnvVarRequirement:
            envDef:
              PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
              PYTHONPATH: /app
          ResourceRequirement:
            coresMax: 1
            ramMax: 512
        hints:
          DockerRequirement:
            dockerPull: ghcr.io/terradue/ogc-eo-application-package-hands-on/norm_diff:1.5.0
        baseCommand: ["python", "-m", "app"]
        arguments: []
        inputs:
          rasters:
            type: File[]
            inputBinding:
              position: 1
        outputs:
          ndwi:
            outputBinding:
              glob: '*.tif'
            type: File
      - class: CommandLineTool
        id: otsu
        requirements:
          InlineJavascriptRequirement: {}
          EnvVarRequirement:
            envDef:
              PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
              PYTHONPATH: /app
          ResourceRequirement:
            coresMax: 1
            ramMax: 512
        hints:
          DockerRequirement:
            dockerPull: ghcr.io/terradue/ogc-eo-application-package-hands-on/otsu:1.5.0
        baseCommand: ["python", "-m", "app"]
        arguments: []
        inputs:
          raster:
            type: File
            inputBinding:
              position: 1
        outputs:
          binary_mask_item:
            outputBinding:
              glob: '*.tif'
            type: File
      - class: CommandLineTool
        id: stac
        requirements:
          InlineJavascriptRequirement: {}
          EnvVarRequirement:
            envDef:
              PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
              PYTHONPATH: /app
          ResourceRequirement:
            coresMax: 1
            ramMax: 512
        hints:
          DockerRequirement:
            dockerPull: ghcr.io/terradue/ogc-eo-application-package-hands-on/stac:1.5.0
        baseCommand: ["python", "-m", "app"]
        arguments: []
        inputs:
          item:
            type:
              type: array
              items: string
              inputBinding:
                prefix: --input-item
          rasters:
            type:
              type: array
              items: File
              inputBinding:
                prefix: --water-body
        outputs:
          stac_catalog:
            outputBinding:
              glob: .
            type: Directory
  app-package.json: |
    {
      "executionUnit": {
        "href": "https://github.com/Terradue/ogc-eo-application-package-hands-on/releases/download/1.5.0/app-water-bodies-cloud-native.1.5.0.cwl",
        "type": "application/cwl"
      }
    }
  job-order.json: |
    {
      "inputs": {
        "stac_items": ["https://planetarycomputer.microsoft.com/api/stac/v1/collections/landsat-c2-l2/items/LC09_L2SP_042033_20231015_02_T1"],
        "aoi": "-118.985,38.432,-118.183,38.938",
        "epsg": "EPSG:4326",
        "bands": ["green","nir08"]
      }
    }
  job-order1.json: |
    {
      "inputs": {
        "stac_items": [
          "https://earth-search.aws.element84.com/v0/collections/sentinel-s2-l2a-cogs/items/S2B_10TFK_20210713_0_L2A",
          "https://earth-search.aws.element84.com/v0/collections/sentinel-s2-l2a-cogs/items/S2A_10TFK_20220524_0_L2A"
        ],
        "aoi": "-121.399,39.834,-120.74,40.472",
        "epsg": "EPSG:4326",
        "bands": [
          "green",
          "nir"
        ]
      }
    }
  job-order2.json: |
    {
      "inputs": {
        "s3_ref": "s3://processingresults/DIR/catalog.json"
      },
      "outputs": {
        "result": {
          "transmissionMode": "value"
        }
     }
    }
  job-order3.json: |
    {
      "inputs": {
        "s3_ref": "s3://processingresults/DIR/DIR/otsu.tif"
      },
      "outputs": {
        "result": {
          "transmissionMode": "reference"
        }
     }
    }
  s3_download.md: |
    ## Produce a link to download the produced TIF file
  
    Use this endpoint to read the TIF files from an s3 bucket, which is accessible from the processing server. We can use this dedicated *s3_download* process using a TIF file URL. By browsing the catalog from the previous endpoint, we can choose one of the items and use the referenced TIF file to generate a link to download it.
  
    It is necessary to modify the example request to use the s3 file produced earlier. Once you have run the process and it has generated the resource, we can go back to the initial notebook to follow the final step and use this resource URL in place of the `URL_HERE` string value.
  s3_download.zcfg: |
    [s3_download]
     Title = Access a s3 bucket storing results
     Abstract = Access a s3 bucket storing results
     processVersion = 2
     storeSupported = true
     statusSupported = true
     serviceProvider = s3utils
     serviceType = Python
     <DataInputs>
      [s3_ref]
       Title = The s3 tif file to download
       Abstract = The s3 tif file to download
       minOccurs = 1
       maxOccurs = 1
       <LiteralData>
        <Default>
         dataType=string
        </Default>
       </LiteralData>
     </DataInputs>
     <DataOutputs>
      [result]
       Title = The downloaded file
       Abstract = The downloaded file
       <ComplexData>
        <Default>
         mimeType = image/tiff
        </Default>
        <Supported>
         mimeType = image/png
         useMApserver = true
        </Supported>
       </ComplexData>
     </DataOutputs>
  s3_read.md: |
    ## Read the JSON file produced by the *water-bodies* process
  
    Using this dedicated *s3_read* process, we can read the JSON files stored on the s3 bucket accessible from the processing server.
  
    We have an example request that we should modify to be able to use the file we produced during the job run, the one accessed from the previous endpoint. We should use the value of the `StacCatalogUri` field from the object returned before.
  
    We can also access the JSON files listed as items from the catalog by changing the *s3_ref* input value within the example request body.
  s3_read.zcfg: |
    [s3_read]
     Title = Access a json file from a s3 bucket storing results
     Abstract = Access a json file from a s3 bucket storing results
     processVersion = 2
     storeSupported = true
     statusSupported = true
     serviceProvider = s3utils
     serviceType = Python
     <DataInputs>
      [s3_ref]
       Title = The s3 json file to read
       Abstract = The s3 json file to read
       minOccurs = 1
       maxOccurs = 1
       <LiteralData>
        <Default>
         dataType=string
        </Default>
       </LiteralData>
     </DataInputs>
     <DataOutputs>
      [result]
       Title = The stac catalog content
       Abstract = The stac catalog content
       <ComplexData>
        <Default>
         mimeType = application/json
         encoding = utf-8
        </Default>
       </ComplexData>
     </DataOutputs>
  s3cfg: |
    # Setup endpoint
    host_base = http://s3-service.zoo.svc.cluster.local:9000
    host_bucket = http://s3-service.zoo.svc.cluster.local:9000
    use_https = False
  
    # Setup access keys
    access_key =  minio-admin
    secret_key = minio-secret-password
  
    # Enable S3 v4 signature APIs
    signature_v2 = False
  s3utils.py: "import os\nimport sys\nimport zoo\n\n# don't remove this import, it's
    needed for the botocore session\nimport boto3  # noqa: F401\nimport botocore\nfrom
    botocore.exceptions import ClientError\nimport yaml\nfrom urllib.parse import urljoin,
    urlparse\nfrom loguru import logger\nimport requests\nimport subprocess\n\ndef s3_read(conf,inputs,outputs):\n
    \   import json\n    source=inputs[\"s3_ref\"][\"value\"]\n    parsed = urlparse(inputs[\"s3_ref\"][\"value\"])\n
    \   if parsed.scheme == \"s3\":\n        for i in conf[\"additional_parameters\"].keys():\n
    \           os.environ[i]=conf[\"additional_parameters\"][i]\n        \n        session
    = botocore.session.Session()\n        s3_client = session.create_client(\n            service_name=\"s3\",\n
    \           region_name=os.environ.get(\"STAGEOUT_AWS_REGION\"),\n            use_ssl=True,\n
    \           endpoint_url=os.environ.get(\"STAGEOUT_AWS_SERVICEURL\"),\n            aws_access_key_id=os.environ.get(\"STAGEOUT_AWS_ACCESS_KEY_ID\"),\n
    \           aws_secret_access_key=os.environ.get(\"STAGEOUT_AWS_SECRET_ACCESS_KEY\"),\n
    \       )\n\n        bucket = parsed.netloc\n        key = parsed.path[1:]\n\n        try:\n
    \           outputs[\"result\"][\"value\"] = (\n                s3_client.get_object(Bucket=bucket,
    Key=key)[\"Body\"]\n                .read()\n                .decode(\"utf-8\")\n
    \           )\n            return zoo.SERVICE_SUCCEEDED\n        except ClientError
    as ex:\n            if ex.response[\"Error\"][\"Code\"] == \"NoSuchKey\":\n                logger.error(f\"Error
    reading {source}: {ex}\")\n                conf[\"lenv\"][\"message\"]+=f\"\\nError
    reading {source}: {ex}\"\n                return zoo.SERVICE_FAILED\n    else:\n
    \       conf[\"lenv\"][\"message\"]=\"Unable to find any S3 URI from your string\"\n
    \       return zoo.SERVICE_FAILED\n\ndef s3_download(conf,inputs,outputs):\n    fileName=conf[\"main\"][\"tmpPath\"]+\"/file-\"+conf[\"lenv\"][\"usid\"]+\".tif\"\n
    \   oldOutFd = os.dup(sys.stdout.fileno())\n    oldOut = sys.stdout\n    os.dup2(sys.stderr.fileno(),1)\n
    \   out = subprocess.run('s3cmd get '+inputs[\"s3_ref\"][\"value\"]+\" \"+fileName,
    shell=True)\n    sys.stdout.flush()\n    os.dup2(oldOutFd, oldOut.fileno())\n    sys.stdout
    = oldOut\n    outputs[\"result\"][\"generated_file\"]=fileName\n    return zoo.SERVICE_SUCCEEDED\n\n"
---
# Source: zoo-project-workshop/templates/cm-openapi-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-openapi-config
data:
  .htaccess: |
    RewriteRule ^ogc-api/api.html$ /cgi-bin/zoo_loader.cgi?/api.html [L,QSA]
    RewriteRule ^ogc-api/index.html$ /cgi-bin/zoo_loader.cgi?service=WPS&service=WPS&request=Execute&version=1.0.0&Identifier=display&RawDataOutput=Result&DataInputs=tmpl=@xlink:href=https://demo.mapmint.com/ogc-api/ [L,QSA]
    RewriteRule ^ogc-api(.*).html$ /cgi-bin/zoo_loader.cgi?service=WPS&service=WPS&request=Execute&version=1.0.0&Identifier=display&RawDataOutput=Result&DataInputs=tmpl=@xlink:href=https://demo.mapmint.com/ogc-api$1 [L,QSA]
    RewriteRule ^ogc-api(.*)$ /cgi-bin/zoo_loader.cgi?$1 [L,QSA]
  deploy.md: |
    ## Deploy the water_bodies Application Package
  
    This endpoint permits the deployment of the *water_bodies* application package.
  
    This time, we can add a request body and set its content type. There are two encodings presented which rely on the same CWL conformance class. They both use the same `water_bodies.cwl`, but using the OGC Application Package encoding (`application/ogcapppkg+json`), we can pass the CWL file by reference rather than the file content, when we pick the CWL encoding (`application/cwl+yaml`).
  
    When we select a content type, the request body text area should get updated and contain a relevant payload for this encoding.
  
    <div class="markdown-alert markdown-alert-warning" data-sourcepos="9:1-10:18" dir="auto"><p data-sourcepos="9:2-10:18" dir="auto"><span class="color-fg-attention text-semibold d-inline-flex flex-items-center mb-1"><svg class="octicon octicon-alert mr-2" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="M6.457 1.047c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0 1 14.082 15H1.918a1.75 1.75 0 0 1-1.543-2.575Zm1.763.707a.25.25 0 0 0-.44 0L1.698 13.132a.25.25 0 0 0 .22.368h12.164a.25.25 0 0 0 .22-.368Zm.53 3.996v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"></path></svg>Warning</span><br>
    This is a warning</p></div>
  
    >[!WARNING]
    >If we edit the payload, the text area may not update when selecting a different encoding. In such a case, we can use the `Reset` button to get it corrected.
  
    After executing the deployment request, the server sends back a process summary similar to the one we received from the previous endpoint. The server response includes a `Location` header that contains the URL for accessing the detailed process description.
  
    We have two options: go back to the first step and list the available processes (it should contain the deployed process), or move on to the next step and review the process description.
  execute.md: |
    ## Execute the water-bodies process
  
    Using this endpoint, we can execute the *water-bodies* process. It
    will lead to the creation of a job. It is the entity that identifies
    your process execution.
  
    After we send the request to the server, it should create a unique identifier for the job called `jobID`. The server should then return a status code of 201 along with a `Location` header that contains the URL to the job status. The information received in the response body should match the process summary that we previously obtained by using the process list endpoint.
  
    With the help of the unique job identifier `{jobID}`, we can take control of the execution process. To keep track of its progress, we can use the endpoint `/jobs/{jobID}`. Once the execution process is complete, we can retrieve the outcome by accessing `/jobs/{jobId}/results`. If needed, we can terminate the job run at any point by using the endpoint `/jobs/{jobId}`.
  
    We will use the STAC item below to execute the *water-bodies*
    process.
  
    <table>
    <thead>
    <tr>
    <th>Acquisitions</th>
    <th></th>
    <th></th>
    </tr>
    </thead>
    <tbody>
    <tr>
    <td>Date</td>
    <td>2021-07-13</td>
    <td>2022-05-24</td>
    </tr>
    <tr>
    <td>URL</td>
    <td><a href="https://earth-search.aws.element84.com/v0/collections/sentinel-s2-l2a-cogs/items/S2B_10TFK_20210713_0_L2A">S2B_10TFK_20210713_0_L2A</a></td>
    <td><a href="https://earth-search.aws.element84.com/v0/collections/sentinel-s2-l2a-cogs/items/S2A_10TFK_20220524_0_L2A">S2A_10TFK_20220524_0_L2A</a></td>
    </tr>
    <tr>
    <td>Quicklook</td>
      <td><img src="https://roda.sentinel-hub.com/sentinel-s2-l1c/tiles/10/T/FK/2021/7/13/0/preview.jpg" width="300px" /></td>
      <td><img src="https://roda.sentinel-hub.com/sentinel-s2-l1c/tiles/10/T/FK/2022/5/24/0/preview.jpg" width="300px" /></td>
    </tr>
    </tbody>
    </table>
  
    As mentioned earlier, to proceed with the following steps, you need to copy and paste the `jobID` that you received. You can find this `jobID` in both the `Location` header and the `id` parameter of the status information object contained in the response body. Once you have the `jobID`, you can check the job status and access the final result.
  
    Here is a screenshot demonstrating where to locate the `jobID` within the server response.
  
    <center><img src="https://raw.githubusercontent.com/ZOO-Project/charts/main/img/copy-jobId.png" />*Illustrating where to find the jobID*</center>
  
    After receiving the response, we can proceed to the following endpoint to check the job status.
  
    For more information, see <a rel="noopener noreferrer" target="_blank" href="https://docs.ogc.org/is/18-062r2/18-062r2.html#sc_create_job">Section 7.11</a>.
  header.md: "# Processing Application Deploy, Execution and Results Exploitation\n\n<img\nsrc=\"https://avatars.githubusercontent.com/u/44975239?s=200&amp;v=4\"\nwidth=\"100\"
    height=\"100\" alt=\"@EOEPCA\" style=\"float:\nleft;margin-right: 25px;margin-left:
    25px;\">\n\n## Introduction\n\nThis OpenAPI is a component of the workshop that
    showcases the **EOEPCA Application Deployment and Execution Service** (**ADES**)
    building block. Based initially on the <a href=\"http://zoo-project.org\">ZOO-Project</a>,
    the **ADES** is now an integral part of it, operating under the code name **ZOO-Project-DRU**.
    The official package corresponding to the current server instance is available from
    [here](https://artifacthub.io/packages/helm/zoo-project/zoo-project-workshop). \n\nThe
    ZOO-Project is an open-source processing platform created in 2008 and announced
    in 2009 at the FOSS4G conference in Sydney, Australia. Released under MIT/X11 license,
    it provides a generic processing platform to facilitate communication between your
    existing software and libraries. This platform uses communication standards defined
    by the Open Geospatial Consortium (OGC) to ensure that processing is Findable, Accessible,
    Interoperable, and Reproducible (FAIR).\n\nThe first version implemented and still
    supported in the ZOO-Project is the OGC <a href=\"https://www.ogc.org/standard/wps/\">Web
    Processing Service (WPS)</a> 1.0.0 standard published in 2007. As time passed and
    technologies evolved, the OGC adopted other processing-oriented standards (such
    as WPS 2.0.0), and now there is the <a href=\"https://docs.ogc.org/is/18-062r2/18-062r2.html\">OGC
    API - Processes - Part 1: Core standard</a>. This standard is the version we will
    showcase during the Workshop. \n\nFor more information about the ZOO-Project, look
    at last year's [FOSS4G conference slides](https://zoo-project.github.io/slides/FOSS4G-2022/#/).\n\nUsing
    any OGC API, a client application should be able to list, from the `/conformance`
    endpoint, the conformance classes supported by the server instance it is interacting
    with. \n\nThe conformance classes, defined in the <a href=\"https://docs.ogc.org/is/19-072/19-072.html\">OGC
    API - Common - Part 1: Core</a>, and shared amongst OGC APIs are the following:\n*
    <a href=\"https://docs.ogc.org/is/19-072/19-072.html#_8749f7f5-747a-4760-b566-4c06916622f4\">core</a>\n*
    <a href=\"https://docs.ogc.org/is/19-072/19-072.html#_50ec22a6-6d42-449a-b16e-b3f8b2f0c568\">landing-page</a>\n*
    <a href=\"https://docs.ogc.org/is/19-072/19-072.html#_ab6e3c2d-d2dc-4f01-a7d4-8b52133289a0\">oas30</a>\n*
    <a href=\"https://docs.ogc.org/is/19-072/19-072.html#_cc409eaa-913f-4fce-be16-7b4659a1bddc\">html</a>\n*
    <a href=\"https://docs.ogc.org/is/19-072/19-072.html#_4426a778-fd8b-4f21-8cf1-370658aac1a7\">json</a>\n\nThe
    OGC API - Common - Part 1: Core standard can expose an OpenAPI on a given endpoint
    (it can be any path depending on the server implementation; it is `/api` here and
    corresponds to the link with `\"rel\": \"service-desc\"` from the landing page)
    if the server instance supports the corresponding conformance class (oas30) defined
    in both the OGC API - Common - Part 1: Core and OGC API - Processes - Part 1: Core
    standards. It is the source for producing through <a href=\"https://swagger.io/tools/swagger-ui/\">Swagger-UI</a>
    the user interface we will interact with for this step-by-step exercise.\n\nThe
    OGC API - Processes - Part 1: Core standard includes the following conformance classes:\n*
    <a href=\"https://docs.ogc.org/is/18-062r2/18-062r2.html#toc61\">core</a>\n* <a
    href=\"https://docs.ogc.org/is/18-062r2/18-062r2.html#toc62\">ogc-process-description</a>\n*
    <a href=\"https://docs.ogc.org/is/18-062r2/18-062r2.html#toc66\">job-list</a>\n*
    <a href=\"https://docs.ogc.org/is/18-062r2/18-062r2.html#toc67\">callback</a>\n*
    <a href=\"https://docs.ogc.org/is/18-062r2/18-062r2.html#toc68\">dismiss</a>\n\nThe
    OGC API - Processes - Part 1: Core standard defines how a server implementation
    provides access to executable processes through a Web API and the capability to
    invoke them from a client application. The server implementation should provide
    an endpoint to access the processes list, get a detailed description (ogc-process-description),
    execute a process by providing inputs and outputs, follow execution status (job-list),
    inform another service about the current status of a job (callback), cancel a job
    run or remove its results (dismiss).\n\nIf the OGC API - Processes - Part 1: Core
    defines a standard way to list processes, execute them, and get control of their
    execution, it does not define how to deploy, replace, or undeploy processes. For
    this transactional purpose, we will rely on the <a href=\"https://docs.ogc.org/DRAFTS/20-044.html\">OGC
    API - Processes - Part 2: Deploy, Replace, Undeploy draft specification</a>, which
    the ZOO-Project-DRU supports. It defines three additional conformance classes to
    the initial OGC API - Processes - Part 1: Core standard and determines how a client
    application can interact with a server instance to deploy, replace, or undeploy
    a process from the processes available from the server instance. The first conformance
    class (deploy-replace-undeploy) defines the three operations, and the two other
    conformance classes (ogcapppkg and cwl) are related to the encoding that the server
    instance supports for the operations.\n\nThis server instance has been specifically
    made available for the <a href=\"https://www.bigdatafromspace2023.org\">BiDS</a>\nconference
    Workshop held on November 5th, 2023. It utilizes the upcoming 2.0 version of the
    ZOO-Project, packaged as a zoo-project-workshop helm chart publicly available here.\n\nWe
    will use the Swagger-UI to interact with the API with the help of examples associated
    with essential steps. Each endpoint should have a description and self-explanatory
    purpose.\n\nWe aim to explore the API by beginning from the landing page and displaying
    the conformances that the server instance supports. After that, we will introduce
    an endpoint that allows us to list, deploy, and obtain detailed information about
    a process. Lastly, we will execute the previously deployed process, monitor its
    progress, and access the result.\n\nAuthentication is necessary to access specific
    endpoints. Please refer to the next section and follow instructions when required.\n\n##
    Authentication\n\nTo use parts of this API, authentication with an OpenID Connect
    Provider is required. For this Workshop, we will use a Keycloak instance. Endpoints
    that require authentication are marked with an open lock icon on the right.\n\nTo
    authenticate, please press the button\n<svg xmlns=\"http://www.w3.org/2000/svg\"
    viewBox=\"0 0 20 20\" class=\"unlocked\" width=\"20\" height=\"20\" aria-hidden=\"true\"
    focusable=\"false\"><path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703
    6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1
    1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549
    0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352
    8 15.8 8z\"></path></svg>\n, then a window appears, as shown below. \n\n<center><img
    src=\"https://raw.githubusercontent.com/ZOO-Project/charts/main/img/authorizations.png\"
    width=\"50%\" /><br>*Window to set client_id and authenticate*</center>\n\nFrom
    there, use the following **client_id**:\n`EOEPCA-Secured-Client` in the section
    **OpenIDAuth\n(OAuth2,implicit)** from the available authorizations. The login interface
    shown below allows us to authenticate.\n\n<center><img src=\"https://raw.githubusercontent.com/ZOO-Project/charts/main/img/keycloack_login.png\"
    width=\"50%\" /><br>*Window to set client_id and authenticate*</center>\n\nWe can
    authenticate by entering the login and password, then clicking \"Sign in\". After
    that, we will be redirected to Swagger-UI, where we can close the window. Earlier,
    you pressed the lock button. Now, the button should look closed <svg xmlns=\"http://www.w3.org/2000/svg\"
    viewBox=\"0 0 20 20\" class=\"locked\" width=\"20\" height=\"20\" aria-hidden=\"true\"
    focusable=\"false\"><path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703
    6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861
    6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17
    8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z\"></path></svg>.\n\nOnce
    authenticated, we can use the endpoint or any other secured endpoint. In other cases,
    we should get an exception response with a 403 status code.\n"
  index.html: "<!doctype html>\n#import zoo\n#import html,os\n#set removeCacheFile=False\n#set
    strUrl=$inputs[\"tmpl\"][\"xlink:href\"]\n#set currentUrl=$strUrl.replace($openapi[\"openapi\"][\"rootUrl\"],\"\")\n#if
    $currentUrl==\"/\"\n#set currentKey=\"root\"\n#set $currentUrl=\"/index\"\n#else\n#set
    currentKey=$currentUrl\n#end if\n#set urlCompnents=$currentUrl.split('/')\n#*\n//
    TODO: don't set the \"id\" parameter within the response Object, in\n// other case
    it can be seen seen within the UI textarea (at the\n// bottom, that may be hidden
    too)\n* Load the JSON content from the API\n*#\n#try\n#import json\n#if \"cache_file\"
    in $inputs[\"tmpl\"]\n#set values=json.load(open($inputs[\"tmpl\"][\"cache_file\"],
    encoding='utf-8'))\n#else\n#set values=json.loads($inputs[\"tmpl\"][\"value\"])\n#end
    if\n#except Exception as e\n$e\n#set values={}\n#end try\n#def findLink($val,$key)\n#if
    \"links\" in $val\n#for i in range(len($val[\"links\"]))\n#if $val[\"links\"][$i][\"rel\"]==$key\n#return
    $val[\"links\"][$i][\"href\"]\n#end if\n#end for\n#return None\n#else\n#return None\n#end
    if\n#end def\n<html lang=\"en\">\n  <head>\n    <!-- Required meta tags -->\n    <meta
    charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1,
    shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\"
    href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\"
    integrity=\"sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z\"
    crossorigin=\"anonymous\">\n    <!-- Custom styles for this template -->\n    <link
    href=\"$openapi[\"openapi\"][\"rootUrl\"]/../static/openapi.css\" rel=\"stylesheet\">\n
    \   <link href=\"https://cdn.datatables.net/1.10.25/css/jquery.dataTables.min.css\"
    rel=\"stylesheet\">\n    <title>#if \"id\" in $values#$values[\"id\"]#else##if $currentKey
    in $openapi and \"title\" in $openapi[$currentKey]#$openapi[$currentKey][\"title\"]#else#Landing
    Page#end if##end if#</title>\n  </head>\n  <body itemscope itemtype=\"https://schema.org/DataCatalog\">\n
    \   <header>\n     <!-- Fixed navbar -->\n      <nav\n        class=\"navbar navbar-expand-md
    navbar-dark fixed-top bg-dark\"\n        itemprop=\"creator\"\n        itemscope
    itemtype=\"https://schema.org/Organization\" >\n        <a class=\"navbar-brand\"
    href=\"#\">\n          <img itemprop=\"logo\" src=\"http://zoo-project.org/img/zoo-sun-logo.png\"
    width=\"55\" height=\"30\" class=\"d-inline-block align-top\" alt=\"\">\n           <span
    itemprop=\"name\">$conf[\"provider\"][\"providerName\"]</span>\n        </a>\n        <button
    class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\"
    aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n
    \         <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div
    class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n\t  <ul class=\"navbar-nav
    mr-auto\"\n\t    itemscope itemtype=\"https://schema.org/BreadcrumbList\">\n\t    <li
    class=\"nav-item #if $currentKey==\"root\"# active#end if#\"\n\t      itemprop=\"itemListElement\"
    itemscope\n\t      itemtype=\"https://schema.org/ListItem\">\n\t      <a itemprop=\"item\"
    class=\"nav-link\"\n\t        href=\"$openapi[\"openapi\"][\"rootUrl\"]/index.html\">\n\t
    \       <span itemprop=\"name\">$zoo._(\"Home\") #if $currentKey==\"root\"# <span
    class=\"sr-only\">(current)</span>#end if#</span>\n\t        <meta itemprop=\"position\"
    content=\"1\" />\n\t      </a>\n\t    </li>\n\t    #if $currentKey!=\"root\"\n\t
    \   #for i in range(1,len($urlCompnents))\n\t    <li\n\t      itemprop=\"itemListElement\"
    itemscope\n\t      itemtype=\"https://schema.org/ListItem\"\n\t      class=\"nav-item
    #if $i+1==len($urlCompnents)#active#end if#\">\n\t    #set prefix=\"\"\n\t    #for
    j in range(1,$i)\n\t    #set $prefix+=\"/\"+$urlCompnents[$j]\n\t    #end for\n\t
    \     <a itemprop=\"item\" class=\"nav-link\" href=\"$openapi[\"openapi\"][\"rootUrl\"]$(prefix)/$(urlCompnents[$i]).html\">\n\t
    \       <span itemprop=\"name\">\n\t    #if $i==2\n\t    $(urlCompnents[$i])\n\t
    \   #else\n\t    $(urlCompnents[$i].title())\n\t    #end if\n\t    #if $i+1==len($urlCompnents)\n\t
    \   <span class=\"sr-only\">(current)</span>\n\t    #end if\n\t        <meta itemprop=\"position\"
    content=\"$(i+1)\" />\n\t        </span>\n\t      </a>\n\t    </li>\n\t    #end
    for\n\t    #end if\n\t  </ul>\n\t</div>\n       </nav>\n    </header>\n\t<script>\n\tvar
    System={};\n\t</script>\n\n#def printRel($o,$v)\n#if $v in $o\n$zoo._($o[$v])\n#else\n#if
    $v.count(\"http\")>0\n#set ov=$v.split(\"/\")\n#set ov1=$ov[len(ov)-1]\n#if $ov1
    in $o\n$zoo._($o[$ov1])\n#end if\n#else\n$zoo._(\"View default (no title found for
    \")$v).\n#end if\n#end if\n#end def\n#*\n\t\n*#\n#def printBboxInput(obj)\n#if \"type\"
    not in $obj\n#set oType=\"input_value\"\n#else\n#set oType=$obj[\"type\"]\n#end
    if\t\n\t<div class=\"input-group\">\n\t  <div class=\"input-group-prepend\">\n\t
    \   <div class=\"input-group-text\">$obj[\"title\"]</div>\n\t  </div>\n\t  #set
    placeholders=[\"minx\",\"miny\",\"maxx\",\"maxy\"]  \n\t  #for i in range(4)  \n\t
    \ <input type=\"text\"\n\t    #if \"value\" in $obj#value=\"$obj[\"value\"]\"\"#end
    if#\n\t    #if \"id\" in $obj#data-id=\"${obj[\"id\"]}_$i\"#end if#\n\t    class=\"form-control\"\n\t
    \   data-name=\"$obj[\"title\"]\"\n\t    name=\"$(oType)_${obj[\"id\"]}_$placeholders[$i]\"\n\t
    \   placeholder=\"$placeholders[$i]\"\n\t    #if \"nullable\" not in $obj[\"schema\"]
    and (\"minOccurs\" not in $obj or $obj[\"minOccurs\"]>=1)#required#end if#/>\n\t
    \ #end for\n\t  <div class=\"invalid-feedback\">\n\t    Please set a value for $obj[\"id\"].\n\t
    \ </div>\n\t</div>\t\n\t<div class=\"input-group\">\n\t  <div class=\"input-group-prepend\">\n\t
    \   <div class=\"input-group-text\">crs</div>\n\t  </div>\n\t  <select name=\"$(oType)_$obj[\"id\"]\"
    class=\"form-control\" #if \"nullable\" not in $obj[\"schema\"] and (\"minOccurs\"
    not in $obj or $obj[\"minOccurs\"]>=1)#required#end if#>\n\t  #for i in range(len($obj[\"schema\"][\"properties\"][\"crs\"][\"enum\"]))\n\t
    \   <option>$obj[\"schema\"][\"properties\"][\"crs\"][\"enum\"][$i]</option>\n\t
    \ #end for\n\t  </select>\n\t  <div class=\"invalid-feedback\">\n\t    Please set
    a value for $obj[\"id\"].\n\t  </div>\n\t</div>\t\n#end def\n\t\n#*\n\t\n*#\n#def
    printControl(obj)\n#if \"type\" not in $obj\n#set oType=\"format\"\n#else\n#set
    oType=$obj[\"type\"]\n#end if\t\n\t<div class=\"input-group\">\n\t  <div class=\"input-group-prepend\">\n\t
    \   <div class=\"input-group-text\">$obj[\"title\"]</div>\n\t  </div>\n\t  #if \"ph\"
    in $obj  and $obj[\"title\"]!=\"bool\"\n\t  <input type=\"text\"\n\t    #if \"value\"
    in $obj#value=\"$obj[\"value\"]\"\"#end if#\n\t    #if \"id\" in $obj#data-id=\"$obj[\"id\"]\"#end
    if#\n\t    class=\"form-control\" data-name=\"$obj[\"title\"]\" name=\"$(oType)_$obj[\"name\"]\"
    placeholder=\"$obj[\"ph\"]\" #if \"required\" in $obj#required#end if#/>\n\t  #else\n\t
    \ #if $obj[\"title\"]==\"bool\"\n\t  #set $obj[\"options\"]=[\"true\",\"false\"];\n\t
    \ #end if\n\t  <select name=\"$(oType)_$obj[\"name\"]\" class=\"form-control\" #if
    \"required\" in $obj#required#end if#>\n\t  #for i in range(len($obj[\"options\"]))\n\t
    \   <option>$obj[\"options\"][$i]</option>\n\t  #end for\n\t  </select>\n\t  #end
    if\n\t  #if \"required\" in $obj\n\t  <div class=\"invalid-feedback\">\n\t    Please
    set a value for $obj[\"id\"].\n\t  </div>\n\t  #end if\n\t</div>\n#end def\n#def
    printCard(obj)\n      <div class=\"card\" #if \"attrs\" in $obj#$obj[\"attrs\"]#end
    if#>\n        <div class=\"card-header\" id=\"heading$(obj[\"id\"])\">\n\t  <h4
    class=\"mb-0\">\n\t    <button class=\"btn btn-link btn-block text-left\" type=\"button\"
    data-toggle=\"collapse\" data-target=\"#collapse$(obj[\"id\"])\" aria-expanded=\"true\"
    aria-controls=\"collapse$(obj[\"id\"])\">\n\t      $obj[\"title\"]\n\t    </button>\n\t
    \ </h4>\n\t</div>\n\t<div id=\"collapse$(obj[\"id\"])\" class=\"collapse #if \"class\"
    in $obj#$obj[\"class\"]#end if#\" aria-labelledby=\"heading$(obj[\"id\"])\">\n\t
    \ <div class=\"card-body\">\n\t    $obj[\"content\"]\n\t  </div>\n\t</div>\n      </div>\n#end
    def\n#def printInputContent($obj)\n#set cName=$obj[\"id\"].replace(\".\",\"_\")\n#if
    \"oneOf\" in $obj[\"schema\"]\n #set cFormats=[]\n  #for j in range(len($obj[\"schema\"][\"oneOf\"]))\n
    \   #if \"contentMediaType\" in $obj[\"schema\"][\"oneOf\"][$j]\n      #set $cFormats+=[$obj[\"schema\"][\"oneOf\"][$j][\"contentMediaType\"]]\n
    \   #end if\n  #end for\n  $printControl({\"title\": \"format\",\"type\": \"input_format\",\"name\":
    $cName,\"options\":$cFormats})\n  #set largs={\"id\": $obj[\"id\"],\"title\": \"href\",\"type\":
    \"input_value\",\"name\": $cName,\"ph\":\"URL\"}\n  #if \"nullable\" not in $obj[\"schema\"]
    and (\"minOccurs\" not in $obj or $obj[\"minOccurs\"]>0)\n  #set $largs[\"required\"]=True\n
    \ #end if\n  $printControl($largs)\n#else\n #if \"type\" in $obj[\"schema\"] and
    \"properties\" not in $obj[\"schema\"]\n  #set cDataDomain=$obj[\"schema\"]\n  #set
    largs={\"id\": $obj[\"id\"],\"title\": $cDataDomain[\"type\"],\"type\": \"input_value\",
    \"name\": $cName,}\n  #if \"nullable\" not in $obj[\"schema\"] and (\"minOccurs\"
    not in $obj or $obj[\"minOccurs\"]>0)\n  #set $largs[\"required\"]=True\n  #end
    if\n  #if \"valueDefinition\" in $cDataDomain and \"anyValue\" in $cDataDomain[\"valueDefinition\"]\n
    \  #set $largs[\"ph\"]=\"Value\"\n      $printControl($largs)\n  #else\n   #if \"enum\"
    in $cDataDomain\n    #set $largs[\"options\"]=$cDataDomain[\"enum\"]\n    $printControl($largs)\n
    \  #else\n      #set $largs[\"ph\"]=\"Value\"\n      $printControl($largs)\n   #end
    if\n  #end if\n  #if \"default\" in $obj[\"schema\"]\n      <script>\n        System[\"function_$cName\"]=function(){\n
    \         try{\n            jQuery(\"input[name='input_value_$cName'],select[name='input_value_$cName]']\").val($obj[\"schema\"][\"default\"]);\n
    \         }catch(e){\n            jQuery(\"input[name='input_value_$cName'],select[name='input_value_$cName']\").val(\"$obj[\"schema\"][\"default\"]\");\n
    \         }\n        }\n      </script>\n  #end if\n #else\n $printBboxInput($obj)
    \     \n #end if\n#end if\n#if \"maxOccurs\" in $obj and ($obj[\"maxOccurs\"]==\"unbounded\"
    or $obj[\"maxOccurs\"]>1)\n\t<div class=\"btn-group\" role=\"group\" aria-label=\"Basic
    example\">\n\t  <button type=\"button\" class=\"btn btn-secondary\" onclick=\"addElementToList(\\$(this));\">$zoo._(\"Add\")</button>\n\t
    \ <button type=\"button\" class=\"btn btn-secondary\" onclick=\"delElementToList(\\$(this));\">$zoo._(\"Delete\")</button>\n\t</div>\n#end
    if\n#end def\n#def printProvider(conf)\n#set provider=$conf[\"provider\"]\n      <b
    itemprop=\"name\">$provider[\"providerName\"]</b>\n      <p><a itemprop=\"url\"
    href=\"$provider[\"providerSite\"]\">$provider[\"providerSite\"]</a></p>\n#end def\n#def
    printContact(conf)\n#set provider=$conf[\"provider\"]\n#set alt=$openapi[\"provider_alt\"]\n#set
    elements=list($alt.keys())\n      <b>$zoo._(\"Address\")</b>\n      #for i in [\"addressDeliveryPoint\",\"addressCity\",\"addressAdministrativeArea\",\"addressPostalCode\",\"addressCountry\",\"addressElectronicMailAddress\",\"phoneVoice\",\"phoneFacsimile\"]\n
    \     #if i!=\"addressElectronicMailAddress\" and $provider[$i]!=\"False\"\n      <p
    itemprop=\"$(alt[$i.lower()])\">\n      #if i==\"phoneVoice\"\n      Phone\n      <svg
    width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-telephone\" fill=\"currentColor\"
    xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill-rule=\"evenodd\" d=\"M3.654
    1.328a.678.678 0 0 0-1.015-.063L1.605 2.3c-.483.484-.661 1.169-.45 1.77a17.568 17.568
    0 0 0 4.168 6.608 17.569 17.569 0 0 0 6.608 4.168c.601.211 1.286.033 1.77-.45l1.034-1.034a.678.678
    0 0 0-.063-1.015l-2.307-1.794a.678.678 0 0 0-.58-.122l-2.19.547a1.745 1.745 0 0
    1-1.657-.459L5.482 8.062a1.745 1.745 0 0 1-.46-1.657l.548-2.19a.678.678 0 0 0-.122-.58L3.654
    1.328zM1.884.511a1.745 1.745 0 0 1 2.612.163L6.29 2.98c.329.423.445.974.315 1.494l-.547
    2.19a.678.678 0 0 0 .178.643l2.457 2.457a.678.678 0 0 0 .644.178l2.189-.547a1.745
    1.745 0 0 1 1.494.315l2.306 1.794c.829.645.905 1.87.163 2.611l-1.034 1.034c-.74.74-1.846
    1.065-2.877.702a18.634 18.634 0 0 1-7.01-4.42 18.634 18.634 0 0 1-4.42-7.009c-.362-1.03-.037-2.137.703-2.877L1.885.511z\"/>\n
    \     </svg>\n      #end if\n      $provider[$i]\n      </p>\n      #else\n      #if
    i==\"addressElectronicMailAddress\"\n      <b>Email</b>\n      <p itemprop=\"$(alt[$i.lower()])\">\n
    \     $provider[$i]\n      </p>\n      #end if\n      #end if\n      #end for\n#end
    def      \n#def printIndentification(conf)\n#set provider=$conf[\"provider\"]\n$printCard({\"id\":
    \"provider\",\"title\": $zoo._(\"Provider\"),\"content\": $printProvider($conf),\"class\":
    \"show\"})\n$printCard({\"id\": \"contact\",\"title\": $zoo._(\"Contact\"),\"content\":
    $printContact($conf),\"class\": \"show\",\"attrs\":'itemprop=\"address\" itemscope
    itemtype=\"https://schema.org/PostalAddress\"'})\n#end def\n      \n#if $currentKey==\"root\"\n
    \ <div class=\"container-fluid\">\n  <div class=\"row\">\n      <div class=\"col-sm-8\">\n#end
    if\n\t<!-- $currentUrl -->\n      <!-- Begin page content -->      \n      <main
    #if $currentKey!=\"root\"#class=\"container-fluid\"#end if#>\n\t<h1 itemprop=\"name\">#if
    \"id\" in $values#$values[\"id\"]: #end if##if \"title\" in $values#$html.escape($values[\"title\"])#else##if
    len($urlCompnents)==2#$currentUrl[1:].title()#else#$currentUrl[1:]#end if##end if#</h1>\n\t#if
    \"description\" in $values#<p itemprop=\"description\">$html.escape($values[\"description\"])</p>#end
    if#\n\t#if $currentKey==\"root\"\n        <div class=\"keywords\">\n\t  #for i in
    $conf[\"identification\"][\"keywords\"].split(',')\n\t  <button type=\"button\"\n\t
    \   class=\"btn btn-outline-info\">$i</button>\n\t  #end for\n\t</div>\n\tLicense:
    \n\t<a itemprop=\"license\" href=\"$openapi[\"openapi\"][\"license_url\"]\">$openapi[\"openapi\"][\"license_name\"]</a>\n\t#end
    if\n\t#if \"inputs\" in $values\n\t#try\n#set $cid=\"JOBSOCKET-\"+$conf[\"lenv\"][\"usid\"]\n\t<form
    class=\"needs-validation\" data-id=\"$cid\" novalidate>\n\t  <input type=\"hidden\"
    name=\"oapi_ioAsArray\" value=\"#if \"io_as_array\" in $openapi[\"openapi\"]#$openapi[\"openapi\"][\"io_as_array\"]#else#false#end
    if#\" />\n\t  <input type=\"hidden\" name=\"oapi_wsUrl\" value=\"$openapi[\"openapi\"][\"wsurl\"]\"
    />\n\t  <input type=\"hidden\" name=\"oapi_jobUrl\" value=\"$findLink($values,\"http://www.opengis.net/def/rel/ogc/1.0/execute\")\"
    />\n\t  <input type=\"hidden\" name=\"oapi_reqID\" value=\"$cid\" />\n\t  <h3>Inputs</h3>\n\t
    \ <div class=\"accordion\" id=\"accordionInputExample\">\n\t    #for i in values[\"inputs\"]\n\t
    \   #set cInput=$values[\"inputs\"][$i]\n\t    #set $cInput[\"id\"]=$i\n\t    #set
    cName=$i.replace(\".\",\"_\")\n\t    #try\n\t    $printCard({\"id\": $cName, \"title\":
    $i,\"content\":'<p>'+$cInput[\"description\"]+'</p>'+$printInputContent($cInput)})\n\t
    \   #except Exception as e\n\t    $i $e\n\t    #end try\n\t    #end for    \n\t
    \ </div>\n      \n\t  <h3>Outputs</h3>\n\t  <div class=\"accordion\" id=\"accordionOutputExample\">\n\t
    \   #for i in values[\"outputs\"]\n\t    #set cOutput=$values[\"outputs\"][$i]\n\t
    \   #set $cOutput[\"id\"]=$i\n\t    #set cName=$i.replace(\".\",\"_\")\n\t    #set
    cFormats=[]\n\t    #if \"oneOf\" in $cOutput[\"schema\"]\n\t    #for j in range(len($cOutput[\"schema\"][\"oneOf\"]))\n\t
    \   #if \"contentMediaType\" in $cOutput[\"schema\"][\"oneOf\"][$j]\n\t    #set
    cFormats+=[$cOutput[\"schema\"][\"oneOf\"][$j][\"contentMediaType\"]]\n\t    #else\n\t
    \   #set cFormats+=[\"application/json\"]\n\t    #end if\n\t    #end for\n\t    #end
    if\n\t    #set cTransmissions=[]\n\t    #for j in range(len($values[\"outputTransmission\"]))\n\t
    \   #set cTransmissions+=[$values[\"outputTransmission\"][$j]]\n\t    #end for\n\t
    \   #set cContent=\"<p>\"+$cOutput[\"description\"]+\"</p>\"\n\t    #if len(cFormats)>0\n\t
    \   #set $cContent+=$printControl({\"id\": $cOutput[\"id\"], \"title\": \"format\",\"type\":
    \"format\",\"name\": $cName,\"options\":$cFormats})\n\t    #end if\n\t    #if len(cTransmissions)>0\n\t
    \   #set $cContent+=$printControl({\"id\": $cOutput[\"id\"], \"title\": \"transmission\",\"type\":
    \"transmission\",\"name\": $cName,\"options\":$cTransmissions})\n\t    #end if\n\t
    \   $printCard({\"id\": $cName+\"_\"+str($i),\"title\": $cOutput[\"id\"],\"content\":
    $cContent})\n\t    #end for\n\t  </div>\n    \n\t  <h3>Execution options</h3>\n\t
    \ <div class=\"accordion\" id=\"accordionExampleExecutionMode\">\n\t    #set cContent=\"\"\n\t
    \   #set cUrl=$openapi[\"openapi\"][\"publisherurl\"]+cid+\"&type=\"\n\t    #for
    a in [\"successUri\",\"inProgressUri\",\"failedUri\"]\n\t    #set $cContent+=$printControl({\"title\":
    $a,\"type\": \"main_value\",\"name\": $a,\"ph\":\"URL\",\"value\":$cUrl+$a.replace(\"Uri\",\"\")})\n\t
    \   #end for\n\t    $printCard({\"id\":\"ModeOne\",\"title\":\"Subscribers\",\"content\":
    $cContent})\n\t    $printCard({\"id\":\"ModeTwo\",\"title\":\"Response\",\"content\":
    $printControl({\"title\":\"format\",\"type\": \"main_value\",\"name\": \"format\",\"options\":[\"document\",\"raw\"]})})\n\t
    \   $printCard({\"id\":\"ModeThree\",\"title\":\"Mode\",\"content\": $printControl({\"title\":\"mode\",\"type\":
    \"main_value\",\"name\": \"mode\",\"options\":[\"async\",\"sync\"]})})\n\t  </div>\n\t
    \ \n\t  <button type=\"submit\" class=\"btn btn-primary\" >$zoo._(\"Submit\")</button>\n\t</form>\n
    \   <div class=\"modal\" tabindex=\"-1\" id=\"requestModal\">\n      <div class=\"modal-dialog
    modal-xl\">\n        <div class=\"modal-content\">\n\t  <div class=\"modal-header\">\n\t
    \   <h5 class=\"modal-title\">Your request</h5>\n\t    <button type=\"button\" class=\"close\"
    data-dismiss=\"modal\" aria-label=\"Close\">\n\t      <span aria-hidden=\"true\">&times;</span>\n\t
    \   </button>\n\t  </div>\n\t  <div class=\"modal-body\">\n\t    <textarea name=\"modalText\"
    class=\"form-control\" style=\"min-height:300px\"></textarea>\n\t    <pre id=\"result\"></pre>\n\t
    \   <div id=\"progress_details\" style=\"display:none\">\n\t      <p id=\"prgress_description\"></p>\n\t
    \     <div class=\"progress\">\n\t        <div class=\"progress-bar progress-bar-striped
    progress-bar-animated\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\"
    aria-valuemax=\"100\" style=\"width: 0%\"></div>\n              </div>\n\t    </div>\n\t
    \ </div>\n\t  <div class=\"modal-footer\">\n\t    <button type=\"button\" class=\"btn
    btn-secondary\" data-dismiss=\"modal\">$zoo._(\"Close\")</button>\n\t    <button
    type=\"button\" class=\"btn btn-primary\">$zoo._(\"Submit Job\")</button>\n\t  </div>\n\t</div>\n
    \     </div>\n    </div>\n    <script src=\"$openapi[\"openapi\"][\"rootUrl\"]/../static/openapi.js\"></script>\n
    \   #except Exception as e\n    $e\n    #end try\n    #end if\n    \n    #try\n
    \   #if \"links\" in $values\n    #for i in range(len($values[\"links\"]))\n    #if
    $i%2==0\n    #if \"title\" in $values[\"links\"][$i]\n    <h2>$values[\"links\"][$i][\"title\"]</h2>\n
    \   #end if\n    <p>\n      <a href=\"$values[\"links\"][$i][\"href\"]\">$printRel($openapi[\"links_title\"],$values[\"links\"][$i][\"rel\"])</a>\n
    \   </p>\n    #if $i+1<=len($values[\"links\"]) and len($values[\"links\"])>1 and
    ($values[\"links\"][$i+1][\"rel\"]==\"alternate\" or $values[\"links\"][$i+1][\"rel\"]==\"service-doc\")\n
    \   <p><a href=\"$values[\"links\"][$i+1][\"href\"]\">$printRel($openapi[\"links_title\"],$values[\"links\"][$i+1][\"rel\"])</a></p>\n
    \   #end if\n    #end if\n    #end for\n    #end if\n    #except Exception as e\n
    \   $e\n    #end try\n    #if \"conformsTo\" in $values\n    <ul>\n      #for i
    in range(len($values[\"conformsTo\"]))\n      <li>\n      <a href=\"$values[\"conformsTo\"][$i]\">$values[\"conformsTo\"][$i]</a>\n
    \     </li>\n      #end for\n    </ul>\n    #end if\n    #if \"jobs\" in $urlCompnents\n
    \   #set $removeCacheFile=True\n    #try\n    #set lValues=$values[\"jobs\"]\n    #except\n
    \   #set lValues=$values\n    #end try\n    #else\n    #if \"processes\" in $values\n
    \   #set lValues=$values[\"processes\"]\n    #else\n    #set lValues=None\n    #end
    if\n    #end if\n    #if hasattr($lValues, \"__len__\") and isinstance($lValues,list)
    and len($lValues)>0\n    <table class=\"table table-striped\">\n      <thead>\n\t<tr>\n\t
    \ #if \"jobs\" not in $urlCompnents\n\t  #*\n\t  * Processes list\n\t  *#\n\t  <th
    scope=\"col\">#</th>\n\t  <th scope=\"col\">Title</th>\n\t  <th scope=\"col\">Version</th>\n\t
    \ #else\n\t  #*\n\t  * Jobs list\n\t  *#\n\t  <th scope=\"col\">#</th>\n\t  <th
    scope=\"col\">Message</th>\n\t  <th scope=\"col\">Links</th>\n\t  #end if\n\t</tr>\n
    \     </thead>\n      <tbody>\t\n\t#for i in range(len($lValues))\n\t<tr>\n\t  #if
    \"jobs\" not in $urlCompnents\n\t  #*\n\t  * Processes list\n\t  *#\n\t  <th scope=\"row\">\n\t
    \   <a href=\"$(lValues[$i][\"links\"][0][\"href\"]).html\">\n\t      <svg width=\"1em\"
    height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-link-45deg\" fill=\"currentColor\"
    xmlns=\"http://www.w3.org/2000/svg\">\n\t        <path d=\"M4.715 6.542L3.343 7.914a3
    3 0 1 0 4.243 4.243l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1.001 1.001 0 0 0-.154.199
    2 2 0 0 1 .861 3.337L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4.018 4.018 0 0 1-.128-1.287z\"/>\n\t
    \       <path d=\"M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346L9.12
    3.55a2 2 0 0 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287l1.372-1.372a3 3 0 0
    0-4.243-4.243L6.586 4.672z\"/>\n\t      </svg>\n\t    $lValues[$i][\"id\"]\n\t    </a>\n\t
    \ </th>\n\t  <td>$lValues[$i][\"title\"]</td>\n\t  <td>#if \"version\" in $lValues[$i]#$lValues[$i][\"version\"]#else#1.0.0#end
    if#</td>\n\t  #else\n\t  #*\n\t  * Jobs list\n\t  *#\n\t  #set cValue=$lValues[$i]\n\t
    \ <th scope=\"row\">\n\t    #if \"status\" in $cValue and $cValue[\"status\"]==\"successful\"\n\t
    \   <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-check-circle-fill
    text-success\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n\t      <path
    fill-rule=\"evenodd\" d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75
    0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75
    0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\"/>\n\t    </svg>\n\t    #else\n\t
    \   #if \"status\" in $cValue and $cValue[\"status\"]==\"failed\"\n\t    <svg width=\"1.0625em\"
    height=\"1em\" viewBox=\"0 0 17 16\" class=\"bi bi-exclamation-triangle-fill text-error\"
    fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n\t      <path fill-rule=\"evenodd\"
    d=\"M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889
    0 1.438-.99.98-1.767L8.982 1.566zM8 5a.905.905 0 0 0-.9.995l.35 3.507a.552.552 0
    0 0 1.1 0l.35-3.507A.905.905 0 0 0 8 5zm.002 6a1 1 0 1 0 0 2 1 1 0 0 0 0-2z\"/>\n\t
    \   </svg>\n\t    #end if\n\t    #end if\n\t    $cValue[\"jobID\"]\n\t  </th>\n\t
    \ <td>$cValue[\"message\"]</td>\n\t  <td>\n\t  <div class=\"dropdown\">\n\t    <button
    class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\"
    data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\t    Action\n\t
    \   </button>\n\t    <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n\t
    \     #for j in range(len($cValue[\"links\"]))\n\t      #set $cValueLink=$cValue[\"links\"][$j]\n\t
    \     #if $cValueLink[\"href\"].count(\"result\")==0\n\t      <a class=\"dropdown-item
    delete\"\n\t        href=\"#\"\n\t        data-value=\"$(cValueLink[\"href\"])\">$zoo._(\"Delete\")</a>\n\t
    \     #end if\n\t      <a class=\"dropdown-item\" href=\"$(cValueLink[\"href\"]).html\">$cValueLink[\"title\"]</a>\n\t
    \     #end for\t      \n\t    </div>\n\t  </div>\n\t  </td>\n\t  #end if\n\t</tr>\t\n\t#end
    for\n      </tbody>\n    </table>\n    <script>\n    System[\"jobListDelete\"]=function(){\n
    \     \\$(\".delete\").each(function(){\n        \\$(this).off(\"click\");\n        \\$(this).click(function(){\n
    \         console.log(\"OK\");\n          \\$.ajax({\n            url: \\$(this).data(\"value\"),\n
    \           type: \"DELETE\",\n            success: function(){\n              console.log(arguments);\n
    \             console.log(arguments[0].message);\n              \\$('#myModal').find(\".modal-body\").text(arguments[0].message);\n
    \             \\$('#myModal').modal();\n              \\$('#myModal').on('hidden.bs.modal',
    function (e) {\n                location.reload(true);\n              })\n            }\n
    \         });\n        });\n      });\n    }\n    </script>\n    #end if\n\n      <div
    class=\"microlight\">$json.dumps(values)</div>\n      <a class=\"btn btn-primary\"
    data-toggle=\"collapse\" href=\"#collapseJson\" role=\"button\" aria-expanded=\"false\"
    aria-controls=\"collapseJson\">\n        $zoo._(\"Display original data as JSON\")\n
    \     </a>\n\n      <textarea id=\"collapseJson\" class=\"form-control collapse\"
    ></textarea>\n      <script>\n      window.onload = function(){\n      \\$(\"main\").find(\"table\").DataTable(\n
    \     #if $conf[\"main\"][\"language\"]!=\"en-US\"\n      { language: {\n            url:
    '//cdn.datatables.net/plug-ins/1.11.3/i18n/$(conf[\"main\"][\"language\"].replace(\"-\",\"_\").lower()).json'\n
    \    }}\n      #end if\n      );\n        var jsContent=\\$(\".microlight\").html();\n
    \       var tmpStr=js_beautify(jsContent);\n        \\$(\"textarea\").last().val(tmpStr);\n
    \       \\$(\".microlight\").remove();\n        for(var i in System){\n          System[i]();\n
    \       }\n        System[\"JSON_STR\"]=JSON.parse(tmpStr);\n        var forms =
    document.getElementsByClassName('needs-validation');\n        // Loop over them
    and prevent submission\n        var validation = Array.prototype.filter.call(forms,
    function(form) {\n          form.addEventListener('submit', function(event) {\n
    \           event.preventDefault();\n            event.stopPropagation();\n            if
    (form.checkValidity() === false) {\n              event.preventDefault();\n              event.stopPropagation();\n
    \             for(var i in System[\"JSON_STR\"][\"inputs\"]){\n                var
    cName=i.replace(/\\./g,\"_\");\n                var selector=\n                  'input[name=\"input_value_'+cName+'\"]:invalid,'+\n
    \                 'input[name=\"input_value_'+cName+'_minx\"]:invalid,'+\n                  'select[name=\"input_value_'+cName+'\"]:invalid';\n
    \               if(\\$(selector).length>0){\n                  \\$(selector).each(function(){\n
    \                   if(!\\$(this).parent().parent().parent().hasClass(\"show\"))\n
    \                     \\$(this).parent().parent().parent().parent().find(\".btn\").first().click();\n
    \                 });\n                }\n              }\n            }else{\n
    \             loadRequest();\n            }\n            form.classList.add('was-validated');\n
    \         }, false);\n        });\n      \n      }\n      </script>\n      <hr>\n
    \     <address>$openapi[\"openapi\"][\"rootUrl\"]$(currentUrl).html</address>\n
    \     <!-- hhmts start -->Last modified: Sat Feb 19 15:43:34 CET 2022 <!-- hhmts
    end -->\n    </main>\n#if $currentKey==\"root\"\n    </div>  \n    <div class=\"col-sm-4\"\n
    \     itemprop=\"provider\"\n      itemscope itemtype=\"https://schema.org/Organization\">\n
    \     $printIndentification($conf)\n    </div>\n   </div>\n  </div>\n#end if\n      \n\n
    \   <footer class=\"footer\" itemscope itemtype=\"https://schema.org/SoftwareApplication\">\n
    \     <div class=\"container-fluid\">\n\t<span class=\"text-muted\">\n\t  $zoo._(\"Powered
    by\")\n\t  <a target=\"_blank\" itemprop=\"url\"\n\t    href=\"http://www.zoo-project.org/\"><span
    itemprop=\"name\">ZOO-Project</span></a>\n\t  <span itemprop=\"version\">$zoo.VERSION</span>.\n\t
    \ <meta itemprop=\"applicationCategory\" content=\"WebService\" />\n\t#try\n\t#set
    sysname=$os.uname()\n\t#except Exception as e\n\t#set sysname=[\"Unknown\"]\n\t#end
    try\n\t  <meta itemprop=\"operatingSystem\" content=\"$sysname[0]\" />\n\t</span>\n
    \     </div>\n    </footer>\n\n  <!-- The Modal -->\n  <div class=\"modal fade\"
    id=\"myModal\">\n    <div class=\"modal-dialog modal-sm\">\n      <div class=\"modal-content\">\n\n
    \       <!-- Modal Header -->\n        <div class=\"modal-header\">\n          <h4
    class=\"modal-title\">$zoo._(\"Message\")</h4>\n          <button type=\"button\"
    class=\"close\" data-dismiss=\"modal\">&times;</button>\n        </div>\n\n        <!--
    Modal body -->\n        <div class=\"modal-body\">\n          Modal body..\n        </div>\n\n
    \       <!-- Modal footer -->\n        <div class=\"modal-footer\">\n          <button
    type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n
    \       </div>\n\n      </div>\n    </div>\n  </div>\n\n    <!-- JS, Popper.js,
    and jQuery -->\n    <script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"
    integrity=\"sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=\" crossorigin=\"anonymous\"></script>\n
    \   <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"
    integrity=\"sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN\"
    crossorigin=\"anonymous\"></script>\n    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"
    integrity=\"sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8shuf57BaghqFfPlYxofvL8/KUEfYiJOMMV+rV\"
    crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/js-beautify/1.13.0/beautify.min.js\"
    integrity=\"sha512-84xqGKD+OW9ElGeIq5RkXhsKveQx+kAjahn9r7f/Vm9J0bDrwEabW3MQNgYdTzLBnwfrTGs0nuPx3pZxh6itNg==\"
    crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdn.datatables.net/1.10.25/js/jquery.dataTables.min.js\"
    ></script>\n  </body>\n</html>\n#if \"cache_file\" in $inputs[\"tmpl\"] and $removeCacheFile\n<!--
    REMOVED ! -->      \n#import os\n$(os.remove($inputs[\"tmpl\"][\"cache_file\"]))\n#end
    if\n"
  job-results.md: |
    ## Accessing results
  
    After a successful job execution, we can use this endpoint to retrieve the process execution results.
  
    Following the <a href="https://docs.ogc.org/bp/20-089r1.html">OGC Best Practice for Earth Observation Application Package</a>, the result should be a stac catalog.
  
    If everything runs correctly, you will receive a JSON object containing a `StacCatalogUri` that points to the s3 bucket where your catalog is stored.
  
    You can use the two following endpoints to generate a URL to download your result. After producing the link for a resulting image, you can return to the notebook and follow the instructions to manipulate your results.
  job-status.md: "## Job Status\n\nThis endpoint provides access to information about
    jobs. As defined in the schema, information should contain at least a `type` (`process`),
    a `jobId`, and a `status`. This last, can take the following values: `accepted`,
    `running`, `successful`, `failed`, `dismissed`.\n\nWe can monitor job progress using
    the `progress` field, current step using `message`, and check service runtime using
    `created`, `started`, `updated`, and potentially `finished`.\n \nOptionally, the
    JSON object can contain links. Upon running the process, the server returns the
    current status as a single link. At the end of execution, another link should be
    available and include a URL to the results, identified by the relation 'http://www.opengis.net/def/rel/ogc/1.0/results'.\n\nIn
    the ZOO-Project-DRU implementation, we added links to the log files of every step
    of the CWL workshop execution.\n\nTo proceed, we must take the `jobID` returned
    in the previous step and paste it into the designated field. Once done, we should
    click the \"Execute\" button.\n"
  openapi.css: |
    /* Sticky footer styles
    -------------------------------------------------- */
    html {
      position: relative;
      min-height: 100%;
    }
    body {
      /* Margin bottom by footer height */
      margin-bottom: 60px;
    }
    .footer {
      position: absolute;
      bottom: 0;
      width: 100%;
      /* Set the fixed height of the footer here */
      height: 60px;
      line-height: 60px; /* Vertically center the text there */
      background-color: #f5f5f5;
    }
  
  
    /* Custom page CSS
    -------------------------------------------------- */
    /* Not required for template or sticky footer method. */
  
    body > .container-fluid {
      padding: 60px 15px 0;
    }
  
    .footer > .container-fluid {
      padding-right: 15px;
      padding-left: 15px;
    }
  
    code {
      font-size: 80%;
    }
  
    .bi::before {
      display: inline-block;
      content: "";
      background-image: url("data:image/svg+xml,<svg viewBox='0 0 16 16' fill='%23333' xmlns='http://www.w3.org/2000/svg'><path fill-rule='evenodd' d='M8 9.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z' clip-rule='evenodd'/></svg>");
      background-repeat: no-repeat;
      background-size: 1rem 1rem;
    }
  
    .bg-dark {
      background-color: #663e05!important;
    }
  
    textarea {
        height: 300px !important;
    }
  openapi.js: "var socket;\nfunction addElementToList(){\n    var lClosure=arguments[0];\n
    \   var isOver=false;\n    var cnt=0;\n    lClosure.parent().parent().find(\"div\").each(function(){\n
    \       if(isOver) return;\n        if($(this).hasClass(\"btn-group\")) isOver=true;\n
    \       if($(this).hasClass(\"input-group\")){\n            lClosure.parent().parent().append($(this)[0].outerHTML);\n
    \           cnt++;\n        }\n    });\n    if(lClosure.parent().parent().find(\".input-group\").length>cnt)\n
    \       lClosure.next().attr(\"disabled\",false);\n    else\n        lClosure.next().attr(\"disabled\",true);\n}\nfunction
    delElementToList(){\n    var lClosure=arguments[0];\n    var isOver=false;\n    var
    cnt=0;\n    lClosure.parent().parent().find(\"div\").each(function(){\n        if(isOver)
    return;\n        if($(this).hasClass(\"btn-group\")) isOver=true;\n        if($(this).hasClass(\"input-group\"))
    cnt++;\n    });\n    if(lClosure.parent().parent().find(\".input-group\").length>cnt)\n
    \       for(var i=0;i<cnt;i++)\n            lClosure.parent().parent().find(\".input-group\").last().remove();\n
    \   if(lClosure.parent().parent().find(\".input-group\").length==cnt)\n        lClosure.attr(\"disabled\",true);\n
    \   else\n        lClosure.attr(\"disabled\",false);\n}\n\nfunction loadRequest(){\n
    \   var executionMode=$(\"select[name='main_value_mode']\").val();\n    var requestObject={\n\t//\"id\":
    System[\"JSON_STR\"][\"id\"],\n        \"inputs\":{},\n        \"outputs\":{},\n
    \       \"subscriber\":{}/*,\n        \"mode\": $(\"select[name='main_value_mode']\").val(),\n
    \       \"response\": $(\"select[name='main_value_format']\").val()*/\n    };\n
    \   if($('input[name=\"oapi_ioAsArray\"]').val()==\"true\"){\n\trequestObject[\"inputs\"]=[];\n\trequestObject[\"outputs\"]=[];\n
    \   }\n    for(var i in System[\"JSON_STR\"][\"inputs\"]){\n    //for(var i=0;i
    < System[\"JSON_STR\"][\"inputs\"].length;i++){\n        var cName=i.replace(\".\",\"_\");\n
    \       var selector=\"input[name='input_value_\"+cName+\"'],\"+\n\t    \"select[name='input_value_\"+cName+\"']\";\n
    \       if($(selector).val()!=\"\"){\n\t    $(selector).each(function(){\n\t\tvar
    cInput={};\n\t\tif($('input[name=\"oapi_ioAsArray\"]').val()==\"true\")\n\t\t    cInput={\"id\":
    System[\"JSON_STR\"][\"inputs\"][i][\"id\"], \"input\": {}};\n\t\tif(System[\"JSON_STR\"][\"inputs\"][i][\"schema\"][\"oneOf\"]){\n\t\t
    \   var selector1=\"input[name='input_format_\"+cName+\"'],\"+\n\t\t\t\"select[name='input_format_\"+cName+\"']\";\n\t\t
    \   console.log($(this).parent().prev().find(\"select\").val());\n\t\t    if($('input[name=\"oapi_ioAsArray\"]').val()==\"true\"){\n\t\t\tcInput[\"input\"][\"format\"]={\n\t\t\t
    \   \"mediaType\": $(this).parent().prev().find(\"select\").val()\n\t\t\t};\n\t\t\tcInput[\"input\"][\"href\"]=$(this).val();\n\t\t
    \   }else{\n\t\t\tcInput[\"type\"]=$(this).parent().prev().find(\"select\").val();\n\t\t\tcInput[\"href\"]=$(this).val();\n\t\t
    \   }\n\t\t}\n\t\telse{\n\t\t    if(System[\"JSON_STR\"][\"inputs\"][i][\"schema\"][\"type\"]!=\"object\"){\n\t\t\tconsole.log(System[\"JSON_STR\"][\"inputs\"][i][\"schema\"][\"type\"]);\n\t\t\tcInput=$(this).val();\n\t\t
    \   }else{\n\t\t\tconsole.log($(this).attr(\"name\"));\n\t\t\tconsole.log(\"ok BB\");\n\t\t\tcInput[\"crs\"]=$(this).val();\n\t\t\tcInput[\"bbox\"]=[parseFloat($(\"input[name=\"+$(this).attr(\"name\")+\"_minx]\").val()),parseFloat($(\"input[name=\"+$(this).attr(\"name\")+\"_miny]\").val()),parseFloat($(\"input[name=\"+$(this).attr(\"name\")+\"_maxx]\").val()),parseFloat($(\"input[name=\"+$(this).attr(\"name\")+\"_maxy]\").val())];\n\t\t
    \   }\n\t\t}\n\t\tconsole.log(cInput);\n\t\tif($('input[name=\"oapi_ioAsArray\"]').val()==\"true\")\n\t\t
    \   requestObject[\"inputs\"].push(cInput);\n\t\telse{\n\t\t    if(!requestObject[\"inputs\"][System[\"JSON_STR\"][\"inputs\"][i][\"id\"]])\n\t\t\trequestObject[\"inputs\"][System[\"JSON_STR\"][\"inputs\"][i][\"id\"]]=cInput;\n\t\t
    \   else{\n\t\t\tif(!Array.isArray(requestObject[\"inputs\"][System[\"JSON_STR\"][\"inputs\"][i][\"id\"]])){\n\t\t\t
    \   var saveObject=requestObject[\"inputs\"][System[\"JSON_STR\"][\"inputs\"][i][\"id\"]];\n\t\t\t
    \   requestObject[\"inputs\"][System[\"JSON_STR\"][\"inputs\"][i][\"id\"]]=[saveObject];\n\t\t\t}\n\t\t\trequestObject[\"inputs\"][System[\"JSON_STR\"][\"inputs\"][i][\"id\"]].push(cInput);\n\t\t
    \   }\n\t\t}\n\t    });\n        }\n    }\n    //console.log(System[\"JSON_STR\"][\"outputs\"]);\n
    \   for(var i in System[\"JSON_STR\"][\"outputs\"]){\n    //for(var i=0;i < System[\"JSON_STR\"][\"outputs\"].length;i++){\n
    \       var cOutput={};\n\tconsole.log($('input[name=\"oapi_ioAsArray\"]').val()==\"true\");\n\tif($('input[name=\"oapi_ioAsArray\"]').val()==\"true\")\n\t
    \   cOutput={\"id\": i};\n        var cName=i.replace(/\\./g,\"_\");\n        if(System[\"JSON_STR\"][\"outputs\"][i][\"schema\"][\"oneOf\"]){\n\t
    \   var selector=\"select[name='format_\"+cName+\"']\";\n\t    cOutput[\"format\"]={\n\t\t\"mediaType\":
    $(selector).val()\n\t    };\n        }\n        else{\n\t    /*if(System[\"JSON_STR\"][\"outputs\"][i][\"schema\"][\"type\"]!=\"object\"){\n\t\tcOutput[\"dataType\"]={\n\t\t
    \   \"name\": System[\"JSON_STR\"][\"outputs\"][i][\"schema\"][\"literalDataDomains\"][0][\"dataType\"][\"name\"]\n\t\t};\n\t
    \   }*/\n        }\n        var selector1=\"select[name='transmission_\"+cName+\"']\";\n
    \       cOutput[\"transmissionMode\"]=$(selector1).val();\n\tif($('input[name=\"oapi_ioAsArray\"]').val()==\"true\")\n
    \           requestObject[\"outputs\"].push(cOutput);\n\telse\n\t    requestObject[\"outputs\"][i]=cOutput;\n
    \   }\n    \n    if($(\"input[name='main_value_successUri']\").val()!=\"\")\n        requestObject[\"subscriber\"][\"successUri\"]=$(\"input[name='main_value_successUri']\").val();\n
    \   if($(\"input[name='main_value_inProgressUri']\").val()!=\"\")\n        requestObject[\"subscriber\"][\"inProgressUri\"]=$(\"input[name='main_value_inProgressUri']\").val();\n
    \   if($(\"input[name='main_value_failedUri']\").val()!=\"\")\n        requestObject[\"subscriber\"][\"failedUri\"]=$(\"input[name='main_value_failedUri']\").val();\n
    \   $(\".modal\").find(\"textarea\").first().val(js_beautify(JSON.stringify(requestObject)));\n
    \   $(\"#requestModal\").modal('toggle');\n    $('#result').html(\"\");\n    $(\"#requestModal\").find(\".btn-primary\").off('click');\n
    \   var firstRun=true;\n    $(\"#requestModal\").find(\".btn-primary\").click(function(){\n
    \       $('#result').html(\"\");\n        if(!socket && executionMode!=\"sync\")\n
    \           socket = new WebSocket($('input[name=\"oapi_wsUrl\"]').val());\n        else\n\t
    \   if(executionMode==\"sync\"){\n\t\tvar localHeaders={\"Prefer\": \"return=\"+($(\"select[name='main_value_format']\").val()==\"raw\"?\"minimal\":\"representation\")};\n\t\t$.ajax({\n\t\t
    \   headers: localHeaders,\n                    contentType: \"application/json\",\n\t\t
    \   data: $(\"textarea\").val(),\n                    type: \"POST\",\n                    url:
    $('input[name=\"oapi_jobUrl\"]').val(),\n\t\t    success: function (msg) {\n\t\t\tconsole.log(msg);\n\t\t\tvar
    cObj=msg;\n\t\t\t$('#result').html(js_beautify(JSON.stringify(msg)));\n                    },\n
    \                   error: function(){\n\t\t\tconsole.log(arguments);\n\t\t\t$('#result').html(js_beautify(JSON.stringify(arguments[0].responseJSON)));\n
    \                   },\n\t\t});\n\t    }\n        if(executionMode==\"sync\"){\n
    \           return;\n        }\n\tconsole.log(firstRun);\n        socket.onopen
    = function () {\n\t    console.log('Connected!');\n\t    socket.send(\"SUB \"+$('input[name=\"oapi_reqID\"]').val());\n
    \       };\n        socket.onmessage = function(event) {\n            console.log('MESSAGE:
    ' + event.data);\n            if(event.data==\"1\"){\n\t\tvar localHeaders={};\n\t\tif(executionMode!=\"sync\"){\n\t\t
    \   localHeaders={\"Prefer\": \"respond-async;return=\"+($(\"select[name='main_value_format']\").val()==\"raw\"?\"minimal\":\"representation\")};\n\t\t}else{\n\t\t
    \   localHeaders={\"Prefer\": \"return=\"+($(\"select[name='main_value_format']\").val()==\"raw\"?\"minimal\":\"representation\")};\n\t\t}\n\t\tconsole.log(localHeaders);\n\t\t\n\t\t$.ajax({\n
    \                   contentType: \"application/json\",\n                    headers:
    localHeaders,\n                    data: $(\"textarea\").val(),\n                    type:
    \"POST\",\n                    url: $('input[name=\"oapi_jobUrl\"]').val(),\n                    success:
    function (msg) {\n\t\t\tconsole.log(msg);\n                    },\n                    error:
    function(){\n\t\t\tconsole.log(arguments);\n                    },\n\t\t});\n\t
    \   }\n            else{\n\t\t//progressBar\n\t\t$(\"#progress_details\").show();\n\t\tvar
    cObj=JSON.parse(event.data);\n\t\tif(cObj[\"jobID\"]){\n\t\t    console.log('MESSAGE:
    ' + event.data);\n                    $(\"#prgress_description\").html(cObj[\"jobID\"]+\":
    \"+cObj[\"message\"]);\n                    $(\".progress-bar\").attr(\"aria-valuenow\",cObj[\"progress\"]);\n
    \                   $(\".progress-bar\").css(\"width\",cObj[\"progress\"]+\"%\");\n\t\t}else{\n\t\t
    \   console.log('MESSAGE (to close): ' + event.data);\n                    $(\"#progress_details\").hide();\n
    \                   if(cObj)\n\t\t\t$('#result').html(js_beautify(JSON.stringify(cObj)));\n
    \                   else\n\t\t\t$('#result').html(cObj[\"message\"]);\n\t\t    socket.close();\n\t\t
    \   socket=false;\n\t\t}\n            }\n        };\n    });\n}\n"
  processes-description.md: "### Details about the *water-bodies* process\n\nThe process
    description contains information about inputs and outputs and a link to the execution
    endpoint for the process. The Core does not mandate the use of a specific process
    description to specify the interface of a process. That said, the Core requirements
    class makes the following recommendation:\n\nImplementations SHOULD consider supporting
    the OGC process description.\n\nFor more information, see <a rel=\"noopener noreferrer\"
    target=\"_blank\" href=\"https://docs.ogc.org/is/18-062r2/18-062r2.html#sc_process_description\">Section
    7.10</a>.\n\nHere, we use a fixed `{processId}` parameter, but we can still use
    <a href=\"#operations-Other_endpoints-Other_endpointsget_process__processID__\">the
    generic link</a> at the bottom of this form to access a detailed description of
    other processes. \n\nAs seen earlier, the conformance class ogc-process-description
    is supported, meaning the server will provide a standard process description that
    contains the list and detailed description of every input and output. \n\nThe input
    for a process can be either single-valued or multi-valued, meaning you can pass
    one or more values for a given input. Every input has `minOccurs` and `maxOccurs`
    attributes. If there are no `minOccurs` attributes, it means that the value is 1,
    \ and that the input is required to execute the process. Some inputs may be optional,
    indicated by a `minOccurs` of 0. If there are no `maxOccurs`, the default value
    1 applies, and the input can take only one value. If `maxOccurs` is greater than
    1, the input can be an array of multiple items.\n\nFor the *water-bodies* process
    we review, we have the single-valued inputs `aoi` and `epsg`, while `bands` and
    `stac_items` are multi-valued. It has a single `stac` output containing the stac
    catalog of the processing results.\n"
  processes-list.md: |
    ## List available processes
  
    The list of processes contains a summary of each process the OGC API - Processes offers, including the link to a more detailed description of the process.
  
    For more information, see <a rel="noopener noreferrer" target="_blank" href="https://docs.ogc.org/is/18-062r2/18-062r2.html#sc_process_list">Section 7.9</a>.
  
    The first time we use this endpoint, the list contains only the default processes.
  
    One may note that the `mutable` property in the process summary is `false` for these processes. It means that the end-user cannot modify them in any way. They can only use them through OGC API - Processes - Part 1: Core standard.
  
    Additionally, there are two other properties: `jobControlOptions` and `outputTransmission`. The `jobControlOptions` property defines the restrictions for executing a process, while the `outputTransmission` property determines the method for requesting the result returned from the process. By examining the `jobControlOptions` value, we can determine that the possible execution modes are synchronous (`sync-execute`), asynchronous (`async-execute`), and dismissed (`dismiss`). The options available in the array may vary depending on the process. In the next step, we will learn that for mutable processes, the possible values are limited to `async-execute` and `dismiss`, indicating that these processes cannot be executed synchronously.
  
    As we will see later, this list will change once you have deployed a new process. Follow the next step, and once complete, come back here to get the updated list.
  publish.py: "#!/usr/bin/python3\nimport os\nimport sys\nimport redis\ndata = sys.stdin.read();\n\nprint('Content-Type:
    text/html')\nprint('')\nprint('Environment variables')\nfor param in os.environ.keys():\n
    \       print (\"<b>%20s</b>: %s<br/>\" % (param, os.environ[param]))\n\nprint(data)\n\nfrom
    urllib import parse\n\ntry:\n    params=parse.parse_qs(os.environ[\"QUERY_STRING\"])\n
    \   r=None\n    if \"ZOO_REDIS_HOST\" in os.environ:\n        r = redis.Redis(host=os.environ[\"ZOO_REDIS_HOST\"],
    port=6379, db=0)\n    else:\n        r = redis.Redis(host='redis', port=6379, db=0)\n
    \   print(params)\n    r.publish(params[\"jobid\"][0],data)\nexcept Exception as
    e:\n\tprint(e)\n\n"
  subscriber.py: |
    #!/usr/bin/python3
    # cf. https://github.com/joewalnes/websocketd/wiki/Simple-Python-Duplex-Example
    #
    # example usage:
    # websocketd --port=4430 --ssl --sslcert /ssl/fullchain.pem --sslkey /ssl/privkey.pem subscriber.py --devconsole
    #
  
    from sys import stdout, stdin
    import sys
    import threading
    import redis
    import json
    import os
  
    mThreads=[]
    r=None
  
    if "ZOO_REDIS_HOST" in os.environ:
        r = redis.Redis(host=os.environ["ZOO_REDIS_HOST"], port=6379, db=0)
    else:
        r = redis.Redis(host='redis', port=6379, db=0)
  
    def send(t):
        # send string to web page
        stdout.write(t+'\n')
        stdout.flush()
  
    def listenMessages(jobID=None):
        global r
        p = r.pubsub()
        p.subscribe(jobID)
        hasSend=False
        for raw_message in p.listen():
            try:
                send(str(raw_message["data"],'utf-8'))
                hasSend=True
                try:
                    tmp=json.loads(str(raw_message["data"],'utf-8'))
                    if tmp is not None and "outputs" in tmp:
                        sys.exit()
                except Exception as e:
                    print(str(e))
                    return
            except:
                if not(hasSend):
                    send(str(raw_message["data"]))
  
  
    def receive():
        global n
        global mThreads
        while True:
            t = stdin.readline().strip()
            if not t:
                break
            t1 = t.split(" ")
            if t1[0]=="SUB":
                mThreads += [threading.Thread(target=listenMessages,kwargs={"jobID":t1[1]})]
                mThreads[len(mThreads)-1].start()
            else:
                send(t)
  
    t0 = threading.Thread(target=receive)
    t0.start()
  
    t0.join()
    #for i in range(len(mThreads)):
    #    mThreads[i].join()
---
# Source: zoo-project-workshop/templates/cm-start-up-script.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-startup-configmap
data:
    start-up.sh: |
      #!/bin/bash
      # Author: Gérald Fenoy
      # Copyright GeoLabs 2021
      set -x
      echo "hello"
      mkdir -p /tmp/zTmp/statusInfos
      cp /var/www/html/data/* /usr/com/zoo-project
      chown www-data:www-data -R /tmp/zTmp /usr/com/zoo-project
      chmod 777 -R /tmp/zTmp
    
      CMD="curl -o toto.out release-name-rabbitmq:15672"
      $CMD
      cat toto.out
      if [ -e toto.out ]; then echo "Should start" ; else echo wait; sleep 1; $CMD ; fi
    
      while [ ! -e toto.out ]; do echo wait; sleep 1; $CMD ;  done
    
    
      echo "START FPM in 5 seconds"
    
      sleep 5
    
      cd /usr/lib/cgi-bin
      touch /var/log/zoofpm.log
      chown www-data:www-data /var/log/zoofpm.log
      su www-data -s /bin/bash -c "./zoo_loader_fpm ./main.cfg 2> /var/log/zoofpm.log >> /var/log/zoofpm.log"
    
      echo "STARTING FPM DONE"
---
# Source: zoo-project-workshop/templates/cm-zoo-deploy-service-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-zoo-deploy-service-config
data:
    cookiecutter_config.yaml: |
      replay_dir: "/tmp/zTmp/cookiecutter-templates/"
      cookiecutters_dir: "/tmp/zTmp/cookiecutter-templates/"
---
# Source: zoo-project-workshop/templates/cm-zoo-project-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-zoo-project-config
data:
    htaccess: |
      RewriteEngine On
      SetEnvIf Authorization "(.*)" HTTP_AUTHORIZATION=$1
      SetEnvIf Request_URI "^\/?(\w+)\/ogc-api(.*)" SERVICES_NAMESPACE=$1
      RewriteRule ^\/?(\w+)\/ogc-api/(.*) /ogc-api/$2 [PT]
      RewriteCond %{REQUEST_FILENAME} !-f
      RewriteCond %{REQUEST_FILENAME} !-d
      RewriteRule ^ogc-api/api.html$ /cgi-bin/zoo_loader.cgi?/api.html [L,QSA]
      RewriteRule ^ogc-api/index.html$ /cgi-bin/zoo_loader.cgi?service=WPS&service=WPS&request=Execute&version=1.0.0&Identifier=display&RawDataOutput=Result&DataInputs=tmpl=@xlink:href=http://localhost/ogc-api/ [L,QSA]
      RewriteRule ^ogc-api(.*).html$ /cgi-bin/zoo_loader.cgi?service=WPS&service=WPS&request=Execute&version=1.0.0&Identifier=display&RawDataOutput=Result&DataInputs=tmpl=@xlink:href=http://localhost/ogc-api$1 [L,QSA]
      RewriteRule ^ogc-api(.*)$ /cgi-bin/zoo_loader.cgi?$1 [L,QSA]
    main.cfg: |
      [main]
      encoding = utf-8
      version = 1.0.0
      serverAddress = http://127.0.0.1
      language = en-US
      lang = fr-FR,en-CA,en-US
      tmpPath=/tmp/zTmp
      tmpUrl = http://localhost:8080/temp/
      mapserverAddress = http://localhost:8080/cgi-bin/mapserv
      dataPath = /usr/com/zoo-project
      cacheDir =/tmp/zTmp
      templatesPath = /var/www/
      search_path=true
    
      [identification]
      title = EOEPCA - Workshop 2023
      abstract_file=/var/www/header.md
      fees = None
      accessConstraints = none
      keywords = WPS,GIS,buffer
    
      [provider]
      providerName=ZOO-Project
      providerSite=http://www.zoo-project.org
      individualName=Gerald FENOY
      positionName=Developer
      role=Dev
      addressDeliveryPoint=1280, avenue des Platanes
      addressCity=Lattes
      addressAdministrativeArea=False
      addressPostalCode=34970
      addressCountry=fr
      addressElectronicMailAddress=gerald.fenoy@geolabs.fr
      phoneVoice=False
      phoneFacsimile=False
    
    
      [env]
      PYTHONPATH=/usr/miniconda3/envs/ades-dev/lib/python3.8/site-packages
      CONTEXT_DOCUMENT_ROOT=/usr/lib/cgi-bin/
    
      [database]
      dbname=zoo
      port=5432
      user=zoo
      password=zoo
      host=release-name-postgresql
      type=PG
      schema=public
    
      [metadb]
      dbname=zoo
      port=5432
      user=zoo
      password=zoo
      host=release-name-postgresql
      type=PG
      schema=public
    
      [security]
      attributes=Authorization,Cookie,User-Agent
      hosts=*
    
      [cookiecutter]
      configurationFile=/tmp/zTmp/cookiecutter_config.yaml
      templatesPath=/tmp/zTmp/cookiecutter-templates
      templateUrl=https://github.com/EOEPCA/proc-service-template.git
      templateBranch=
    
    
      [servicesNamespace]
      path= /opt/zooservices_user
      deploy_service_provider=DeployProcess
      undeploy_service_provider=UndeployProcess
      has_jwt_service=true
      sections_list=additional_parameters,pod_env_vars,pod_node_selector
      required_files=
    
      [headers]
      X-Powered-By=ZOO-Project-DRU
    
      [rabbitmq]
      host=release-name-rabbitmq
      port=5672
      user=guest
      passwd=guest
      exchange=amq.direct
      routingkey=zoo
      queue=zoo_service_queue
    
      [server]
      async_worker=70
    oapi-index.html: |
      <!-- HTML for static distribution bundle build -->
      <!DOCTYPE html>
      <html lang="en">
        <head>
          <meta charset="UTF-8">
          <title>Swagger UI</title>
          <link rel="stylesheet" type="text/css" href="./swagger-ui.css" />
          <link rel="stylesheet" type="text/css" href="index.css" />
          <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
          <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
          <style type="text/css">
    
            img { float:right ;}
            center img, td img { float:none; }
    
          </style>
    
        </head>
    
        <body>
          <div id="swagger-ui"></div>
          <!-- hhmts start -->Last modified: Wed Nov  1 21:48:20 CET 2023 <!-- hhmts end -->
          <script src="./swagger-ui-bundle.js" charset="UTF-8"> </script>
          <script src="./swagger-ui-standalone-preset.js" charset="UTF-8"> </script>
          <script src="./swagger-initializer.js" charset="UTF-8"> </script>
        </body>
      </html>
    oas.cfg: |
      [openapi]
      use_content=false
      rootUrl=http://localhost:8080/ogc-api
      rootHost=http://localhost:8080
      rootPath=ogc-api
      links=/,/api,/conformance,/processes,/jobs
      paths=/root,/conformance,/api,/processes,/processes/water-bodies,/processes/{processID},/processes/water-bodies/execution,/processes/{processID}/execution,/jobs,/jobs/{jobID},/jobs/{jobID}/results,/processes/s3_read/execution,/processes/s3_download/execution
      parameters=processID,jobID,resultID
      header_parameters=oas-header1,oas-header2,oas-header3,oas-header4,oas-header5,limitParam,skipParam,processIdParam,statusParam,minDurationParam,maxDurationParam,typeParam,datetimeParam,wParam
      version=3.0.3
      license_name=OGC license
      license_url=https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/LICENSE
      full_html_support=false
      partial_html_support=false
      wsUrl=ws://localhost:8888/
      publisherUrl=http://zookernel/cgi-bin/publish.py?jobid=
      link_href=http://zoo-project.org/dl/link.json
      tags=Browse the API,List - deploy - get detailed information about processes,Execute process - monitor job - access the result,Jobs management,Processes management,Other endpoints
      examplesPath=/var/www/html/examples/
      examplesUrl=http://localhost:8080/examples/
      exceptionsUrl=https://www.opengis.net/def/rel/ogc/1.0/exception
      exceptionsUrl_1=https://www.opengis.net/def/exceptions/ogcapi-processes-2/1.0
      use_problem_json_content_type_for_exception=true
    
      [tags]
      length=6
      value=From the landing page we can list links exposed by the API, it should contains a link to `/conformance` to use to know what are the server capabilities.
      value_1=From this section, we can list available processes, deploy new processes then get detailled description of the created process
      value_2=From this section, we can execute processes to create jobs, monitor these jobs during their execution then access the resulting data
      value_3=From this section, we can list or dismiss jobs
      value_4=From this section, we can modify or remove deployed processes
      value_5=From this section, we can access the process description and the execution endpoint for any processes
    
      [oas-header1]
      in=header
      name=Prefer
      type=string
      required=true
      enum=return=representation,return=minimal,respond-async;return=representation
      enum1=return=representation,return=minimal,respond-async;return=representation,respond-async;return=minimal
    
      [oas-header2]
      in=header
      name=Prefer
      type=string
      required=false
      enum=return=representation,return=minimal
    
      [oas-header3]
      in=header
      name=Prefer
      type=string
      required=true
      enum=respond-async;return=representation
    
      [oas-header4]
      in=header
      name=Prefer
      type=string
      required=true
      enum=return=minimal
    
      [oas-header5]
      in=header
      name=Prefer
      type=string
      required=true
      enum=return=representation
    
      [limitParam]
      name=limit
      title=The limit parameter
      abstract=The limit parameter indicates the number of elements to return in an array
      in=query
      type=integer
      schema_minimum=1
      schema_maximum=10000
      schema_default=1000
      required=false
    
      [skipParam]
      name=skip
      title=The skip parameter
      abstract=The skip parameter indicates the number of elements to skip before starting returning values in an array
      in=query
      type=integer
      schema_minimum=0
      required=false
    
      [wParam]
      name=w
      title=The workflow id parameter
      abstract=The workflow parameter indicates the name of an existing entry point within the CWL workflow definition associated with
      in=query
      type=string
      schema_default=water-bodies
      required=false
    
      [/]
      rel=self
      type=application/json
      title=this document
    
      [root]
      method=get
      title=landing page of this API
      abstract=The landing page provides links to the API definition, the Conformance statements and the metadata about the processes offered by this service.
      tags=Browse the API
      operationId=get_root
      schema=https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/LandingPage.yaml
    
      [/index.html]
      rel=alternate
      type=text/html
    
      [/api]
      rel=service-desc
      type=application/vnd.oai.openapi+json;version=3.0
      title=the API definition
    
      [/api.html]
      rel=service-doc
      type=text/html
    
      [api.html]
      href=http://localhost:8080/swagger-ui/oapip/
    
    
      [api]
      method=get
      title=This document
      abstract=This document
      tags=Browse the API
      operationId=get_api
      schema=
    
      [/conformance]
      rel=http://www.opengis.net/def/rel/ogc/1.0/conformance
      type=application/json
      title=OGC API - Processes conformance classes implemented by this server
    
      [conformance]
      method=get
      title=information about standards that this API conforms to
      abstract=list all requirements classes specified in a standard (e.g., WPS REST/JSON Binding Core) that the server conforms to
      tags=Browse the API
      operationId=get_conformance
      schema=https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/ConformanceDeclaration.yaml
    
      [/conformance.html]
      rel=alternate
      type=text/html
    
      [/processes]
      rel=http://www.opengis.net/def/rel/ogc/1.0/processes
      type=application/json
      title=The processes offered by this server
    
      [processes]
      length=2
      secured=OpenIDAuth
      ecode=401,403
      method=get
      title=retrieve available processes
      abstract=Information about the available processes
      abstract_file=/var/www/processes-list.md
      tags=List - deploy - get detailed information about processes
      operationId=get_processes
      parameters=/components/parameters/limitParam,/components/parameters/skipParam
      schema=https://raw.githubusercontent.com/GeoLabs/ogcapi-processes/rel-1.0/core/openapi/responses/ProcessList.yaml
      method_1=post
      secured_1=OpenIDAuth
      ecode_1=401,403,500
      code_1=201
      title_1=deploy a new processes
      abstract_1=Deploy a new processes
      abstract_file_1=/var/www/deploy.md
      tags_1=List - deploy - get detailed information about processes
      operationId_1=post_processes
      parameters_1=/components/parameters/wParam
      schema_1=https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/openapi/responses/processes-dru/rDeployProcess.yaml
      requestBody_length_1=2
      requestBody_1_1=requestBodyPkg
      examples_1_1=app-package.json
      examples_summary_1_1=Deploy water-bodies process using OGC Application Package encoding
      requestBody_1=requestBodyCwl
      examples_ref_1=https://raw.githubusercontent.com/EOEPCA/app-snuggs/main/app-package.cwl
      examples_1=app-package.cwl
      examples_summary_1=Deploy water-bodies process using the CWL Application Package encoding
    
      [/processes.html]
      rel=alternate
      type=text/html
    
      [processes/{processID}]
      prel=http://www.opengis.net/def/rel/iana/1.0/describedby
      rel=self
      length=3
      method=get
      secured=OpenIDAuth
      ecode=401,403,404
      title=retrieve a process description
      abstract=A process description.
      tags=Other endpoints
      aoperationId=get_process__processID__
      schema=https://raw.githubusercontent.com/GeoLabs/ogcapi-processes/rel-1.0/core/openapi/responses/swagger/ProcessDescription.yaml
      parameters=/components/parameters/processID
      method_1=delete
      secured_1=OpenIDAuth
      ecode_1=401,403,404
      code_1=204
      title_1=undeploy a mutable process
      abstract_1=Undeploy a mutable process.
      tags_1=Processes management
      aoperationId_1=delete_process__processID__
      parameters_1=/components/parameters/processID
      method_2=put
      secured_2=OpenIDAuth
      ecode_2=401,403,404
      code_2=204
      aoperationId_2=put_process__processID__
      title_2=Update a mutable process
      requestBody_length_2=2
      requestBody_2=requestBodyPkg
      requestBody_2_1=requestBodyCwl
      abstract_2=Update a mutable process.
      tags_2=Processes management
      parameters_2=/components/parameters/processID
      examples_2=app-package.json
      examples_summary_2=Update water-bodies process
      examples_ref_2_1=https://raw.githubusercontent.com/EOEPCA/app-snuggs/main/app-package.cwl
      examples_summary_2_1=Update test water-bodies process
    
      [processes/water-bodies]
      prel=http://www.opengis.net/def/rel/iana/1.0/describedby
      pname=water-bodies
      length=1
      method=get
      secured=OpenIDAuth
      ecode=401,403,404
      title=Retrieve the water-bodies process description
      abstract=The water-bodies process description.
      abstract_file=/var/www/processes-description.md
      tags=List - deploy - get detailed information about processes
      schema=https://raw.githubusercontent.com/GeoLabs/ogcapi-processes/rel-1.0/core/openapi/responses/swagger/ProcessDescription.yaml
      aparameters=/components/parameters/processID
    
      [processes/{processID}/execution]
      rel=http://www.opengis.net/def/rel/ogc/1.0/execute
      length=1
      secured=OpenIDAuth
      ecode=400,401,403,404,500
      method=post
      title=execute a job
      abstract=An execute endpoint.
      tags=Other endpoints
      operationId=processes__processID__execution
      schema=https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/ExecuteSync.yaml
      parameters=/components/parameters/processID,/components/parameters/oas-header1
      requestBody=requestBody
      callbacksReference=callbacks
    
      [processes/water-bodies/execution]
      length=1
      method=post
      secured=OpenIDAuth
      ecode=400,401,403,404,500
      pname=water-bodies
      title=execute water-bodies
      abstract=An execute endpoint.
      abstract_file=/var/www/execute.md
      tags=Execute process - monitor job - access the result
      schema=https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/ExecuteSync.yaml
      parameters=/components/parameters/oas-header3
      callbacksReference=callbacks
      examples=job-order1.json
      examples_summary=Execute water-bodies with the presented stac item
    
      [processes/s3_read/execution]
      length=1
      method=post
      secured=OpenIDAuth
      ecode=400,401,403,404,500
      pname=s3_read
      title=Read a s3 json file
      abstract=An execute endpoint.
      abstract_file=/var/www/s3_read.md
      tags=Execute process - monitor job - access the result
      schema=https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/ExecuteSync.yaml
      parameters=/components/parameters/oas-header4
      callbacksReference=callbacks
      examples=job-order1.json
      examples_summary=Acces the catalog or other json files referenced from it
    
      [processes/s3_download/execution]
      length=1
      method=post
      secured=OpenIDAuth
      ecode=400,401,403,404,500
      pname=s3_download
      title=Produce a link to download a copy of a tif file stored on s3
      abstract=An execute endpoint.
      abstract_file=/var/www/s3_download.md
      tags=Execute process - monitor job - access the result
      schema=https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/ExecuteSync.yaml
      parameters=/components/parameters/oas-header5
      callbacksReference=callbacks
      examples=job-order1.json
      examples_summary=Download the results produced by water-bodies
    
      [/jobs]
      rel=http://www.opengis.net/def/rel/ogc/1.0/job-list
      type=application/json
      title=Job Management
    
      [jobs]
      length=1
      method=get
      secured=OpenIDAuth
      ecode=500
      title=retrieve a list of jobs run
      abstract=A list of jobs run.
      tags=Jobs management
      operationId=get_jobs
      schema=https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/JobList.yaml
      parameters=/components/parameters/limitParam,/components/parameters/skipParam,/components/parameters/processIdParam,/components/parameters/statusParam,/components/parameters/minDurationParam,/components/parameters/maxDurationParam,/components/parameters/typeParam,/components/parameters/datetimeParam
    
      [requestBody]
      abstract=Mandatory execute request in JSON format
      type=application/json
      schema=https://raw.githubusercontent.com/GeoLabs/ogcapi-processes/rel-1.0/core/openapi/schemas/execute.yaml
    
      [requestBodyPkg]
      abstract=Mandatory OGC Application Package in JSON format
      type=application/ogcapppkg+json
      schema=https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/openapi/schemas/processes-dru/ogcapppkg.yaml
    
      [requestBodyCwl]
      abstract=Mandatory OGC Application Package in CWL format
      type=application/cwl+yaml
      schema=https://raw.githubusercontent.com/common-workflow-language/schema_salad/main/schema_salad/metaschema/metaschema.yml
    
      [/jobs.html]
      rel=alternate
      type=text/html
    
      [/jobs/{jobID}]
      rel=canonical
      type=application/json
      title=Status
    
      [jobs/{jobID}]
      length=2
      method=get
      operationId=get_jobs__jobID_
      secured=OpenIDAuth
      ecode=404,500
      title=The status of a job.
      abstract=The status of a job.
      abstract_file=/var/www/job-status.md
      tags=Execute process - monitor job - access the result
      schema=https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/Status.yaml
      parameters=/components/parameters/jobID
      method_1=delete
      secured_1=OpenIDAuth
      ecode_1=404,500
      title_1=Delete a job
      operationId_1=delete_jobs__jobID__
      abstract_1=Cancel the job execution.
      tags_1=Jobs management
      schema_1=https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/Status.yaml
      parameters_1=/components/parameters/jobID
    
      [/jobs/{jobID}/results]
      rel=http://www.opengis.net/def/rel/ogc/1.0/results
      type=application/json
      title=Get Result
    
      [jobs/{jobID}/results]
      method=get
      operationId=get_jobs__jobID__results
      secured=OpenIDAuth
      ecode=401,403,404,500
      title=The result of a job execution.
      abstract=The result of a job execution.
      abstract_file=/var/www/job-results.md
      tags=Execute process - monitor job - access the result
      schema=https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/Results.yaml
      parameters=/components/parameters/jobID
      ep=,/components/parameters/oas-header2
    
      [{processID}]
      type=string
      title=The id of a process
      abstract=The id of a process
      in=path
      required=true
      example=water-bodies
    
      [{jobID}]
      type=string
      title=The id of a job
      abstract=The id of a job
      in=path
      required=true
    
      [{resultID}]
      type=string
      title=The id of an output
      abstract=The id of an output
      in=path
      required=true
    
      [statusParam]
      schema=https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/parameters/status.yaml
    
      [processIdParam]
      schema=https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/parameters/processIdQueryParam.yaml
    
      [minDurationParam]
      schema=https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/parameters/minDuration.yaml
    
      [maxDurationParam]
      schema=https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/parameters/maxDuration.yaml
    
      [typeParam]
      schema=https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/parameters/type.yaml
    
      [datetimeParam]
      schema=https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/parameters/datetime.yaml
    
      [{f}]
      default=json
      enum=json
      title=The optional f parameter
      abstract=The optional f parameter indicates the output format which the server shall provide as part of the response document.  The default format is JSON.
      in=query
      required=false
    
      [conformsTo]
      rootUrl=http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/
      extentionsLength=
      extentionUrl=http://www.opengis.net/spec/ogcapi-processes-2/1.0/conf/
      extentionUrl_1=http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/
      link=core
      link_1=oas30
      link_2=json
      link_3=job-list
      link_4=dismiss
      link_5=callback
      link_6=ogc-process-description
      link_7=deploy-replace-undeploy
      extention_7=true
      extid_7=0
      link_8=ogcapppkg
      extention_8=true
      extid_8=0
      link_9=cwl
      extention_9=true
      extid_9=0
      link_10=core
      extention_10=true
      extid_10=1
      link_11=landing-page
      extention_11=true
      extid_11=1
      link_12=oas30
      extention_12=true
      extid_12=1
      link_13=json
      extention_13=true
      extid_13=1
      length=14
    
      [exception]
      abstract=Exception
      type=application/json
      schema=https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/NotFound.yaml
      default_schema=https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/openapi/responses/common-core/rServerError.yaml
    
      [responses]
      length=7
      code=404
      schema=https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/openapi/responses/common-core/rNotFound.yaml
      type=application/json
      title=NotFound
      code_1=500
      schema_1=https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/openapi/responses/common-core/rServerError.yaml
      type_1=application/json
      title_1=ServerError
      code_2=400
      schema_2=https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/openapi/responses/common-core/rInvalidParameter.yaml
      type_2=appliction/json
      title_2=InvalidParameter
      code_3=405
      schema_3=https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/responses/NotAllowed.yaml
      type_3=appliction/json
      title_3=NotAllowed
      code_4=406
      schema_4=https://raw.githubusercontent.com/opengeospatial/ogcapi-processes/master/core/openapi/responses/NotSupported.yaml
      type_4=appliction/json
      title_4=NotSupported
      code_5=401
      schema_5=https://raw.githubusercontent.com/ZOO-Project/ZOO-Project/master/thirds/openapi/responses/Unauthorized.yaml
      type_5=appliction/json
      title_5=Unauthorized
      code_6=403
      schema_6=https://raw.githubusercontent.com/ZOO-Project/ZOO-Project/master/thirds/openapi/responses/Forbidden.yaml
      type_6=appliction/json
      title_6=Forbidden
    
    
      [callbacks]
      length=3
      state=jobSuccess
      uri=successUri
      schema=https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/results.yaml
      type=application/json
      title=Results received successfully
      state_1=jobInProgress
      uri_1=inProgressUri
      schema_1=https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/statusInfo.yaml
      type_1=application/json
      title_1=Status received successfully
      state_2=jobFailed
      uri_2=failedUri
      schema_2=https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/exception.yaml
      type_2=application/json
      title_2=Exception received successfully
    
      [provider_alt]
      addressDeliveryPoint=streetAddress
      addressCity=addressLocality
      addressAdministrativeArea=addressRegion
      addressPostalCode=postalCode
      addressCountry=addressCountry
      addressElectronicMailAddress=email
      phoneVoice=telephone
      phoneFacsimile=faxNumber
      hoursOfService=hoursAvailable
      contactInstructions=contactOption
      [osecurity]
      name=OpenIDAuth
      type=openIdConnect
      openIdConnectUrl=https://testbed19.geolabs.fr:8099/realms/EOEPCA_WORKSHOP/.well-known/openid-configuration
      realm=Secured section
      [filter_in]
      path=/usr/lib/cgi-bin
      service=securityIn
      [filter_out]
      path=/usr/lib/cgi-bin
      service=securityOut
    
      [links_title]
      self=View this document in JSON.
      alternate=View the alternative version in HTML.
      service-desc=View the service description.
      service-doc=View service documentation.
      processes=View the list of processes the API offers.
      results=View the results of a process.
      status=View the current status of a job execution.
      execute=View the execution endpoint of a process.
      job-list=View the list of job available on this server.
      conformance=View the conformance classes that the link's context conforms to.
    security_service.py: |
      # -*- coding: utf-8 -*-
      ###############################################################################
      #  Author:   Gérald Fenoy, gerald.fenoy@geolabs.fr
      #  Copyright (c) 2020-2023, GeoLabs SARL.
      ###############################################################################
      #  Permission is hereby granted, free of charge, to any person obtaining a
      #  copy of this software and associated documentation files (the "Software"),
      #  to deal in the Software without restriction, including without limitation
      #  the rights to use, copy, modify, merge, publish, distribute, sublicense,
      #  and/or sell copies of the Software, and to permit persons to whom the
      #  Software is furnished to do so, subject to the following conditions:
      #
      #  The above copyright notice and this permission notice shall be included
      #  in all copies or substantial portions of the Software.
      #
      #  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
      #  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
      #  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
      #  THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
      #  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
      #  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
      #  DEALINGS IN THE SOFTWARE.
      ################################################################################
      import zoo
    
    
      def workspaceApi(conf, inputs, outputs):
          conf["additional_parameters"] = {}
          conf["additional_parameters"]["APP"] = "zoo-project-workshop"
          conf["additional_parameters"]["STAGEIN_AWS_REGION"] = "RegionOne"
          conf["additional_parameters"]["STAGEIN_AWS_ACCESS_KEY_ID"] = "minio-admin"
          conf["additional_parameters"][
              "STAGEIN_AWS_SECRET_ACCESS_KEY"
          ] = "minio-secret-password"
          conf["additional_parameters"][
              "STAGEIN_AWS_SERVICEURL"
          ] = "http://s3-service.zoo.svc.cluster.local:9000"
          conf["additional_parameters"]["STAGEOUT_AWS_REGION"] = "RegionOne"
          conf["additional_parameters"]["STAGEOUT_AWS_ACCESS_KEY_ID"] = "minio-admin"
          conf["additional_parameters"][
              "STAGEOUT_AWS_SECRET_ACCESS_KEY"
          ] = "minio-secret-password"
          conf["additional_parameters"][
              "STAGEOUT_AWS_SERVICEURL"
          ] = "http://s3-service.zoo.svc.cluster.local:9000"
          conf["additional_parameters"]["STAGEOUT_OUTPUT"] = "s3://processingresults"
          return zoo.SERVICE_SUCCEEDED
    
    
      def securityIn(conf, inputs, outputs):
          import sys, os, shutil
    
          if "servicesNamespace" in conf and "debug" in conf["servicesNamespace"]:
              print("securityIn!", file=sys.stderr)
          workspaceApi(conf, inputs, outputs)
          conf["pod_env_vars"] = {"A": "1", "B": "2"}
          conf["pod_node_selector"] = {} #{"C": "3"}
          try:
              if (
                  "has_jwt_service" in conf["servicesNamespace"]
                  and conf["servicesNamespace"]["has_jwt_service"] == "true"
              ):
                  import jwts.security_service as s
    
                  res = s.securityIn(conf, inputs, outputs)
                  s.addHeader(conf, "dru.securityIn")
                  if res == zoo.SERVICE_FAILED:
                      return res
          except Exception as e:
              if "servicesNamespace" in conf and "debug" in conf["servicesNamespace"]:
                  print("No JWT service available: " + str(e), file=sys.stderr)
          rPath = conf["servicesNamespace"]["path"] + "/"
          for i in conf["renv"]:
              if i.count("SERVICES_NAMESPACE"):
                  rPath += conf["renv"][i]
                  conf["auth_env"] = {"user": conf["renv"][i], "cwd": rPath}
                  conf["lenv"]["fpm_user"] = conf["renv"][i]
                  conf["lenv"]["fpm_cwd"] = rPath
                  # conf["lenv"]["cwd"]=rPath
                  conf["zooServicesNamespace"] = {"namespace": conf["renv"][i], "cwd": rPath}
                  break
          if not (os.path.isdir(rPath)):
              os.mkdir(rPath)
              if "required_files" in conf["servicesNamespace"]:
                  rFiles = conf["servicesNamespace"]["required_files"].split(",")
                  for i in range(len(rFiles)):
                      shutil.copyfile(
                          conf["renv"]["CONTEXT_DOCUMENT_ROOT"] + "/" + rFiles[i],
                          rPath + "/" + rFiles[i],
                      )
          return zoo.SERVICE_SUCCEEDED
    
    
      def securityOut(conf, inputs, outputs):
          import sys
    
          try:
              if (
                  "has_jwt_service" in conf["servicesNamespace"]
                  and conf["servicesNamespace"]["has_jwt_service"] == "true"
              ):
                  import jwts.security_service as s
    
                  s.addHeader(conf, "dru.securityOut")
          except Exception as e:
              if "servicesNamespace" in conf and "debug" in conf["servicesNamespace"]:
                  print("No JWT service available: " + str(e), file=sys.stderr)
          if "servicesNamespace" in conf and "debug" in conf["servicesNamespace"]:
              print("securityOut!", file=sys.stderr)
          return zoo.SERVICE_SUCCEEDED
---
# Source: zoo-project-workshop/templates/postgresql-primary-init-scripts.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-primary-init-scripts
data:
  1-schema.sql: "--------------------------------------------------------------------------------\n--\n-- PostgreSQL definition of tables required byt the ZOO-Kernel version >= 1.5.0\n-- if the the db-backend option is activated\n--\n-- Copyright (C) 2015 GeoLabs SARL. All rights reserved.\n-- Author: David Saggiorato <david.saggiorato@geolabs.fr>\n--\n-- Permission is hereby granted, free of charge, to any person obtaining a copy\n-- of this software and associated documentation files (the \"Software\"), to deal\n-- in the Software without restriction, including without limitation the rights\n-- to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n-- copies of the Software, and to permit persons to whom the Software is\n-- furnished to do so, subject to the following conditions:\n--\n-- The above copyright notice and this permission notice shall be included in\n-- all copies or substantial portions of the Software.\n--\n-- THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n-- FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n-- AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n-- LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n-- OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n-- THE SOFTWARE.\n--\n-------------------------------------------------------------------------------- \n-- If your database is not using UTF-8 per default then uncomment the following \n-- SET client_encoding = 'UTF8';\n-------------------------------------------------------------------------------- \n-- Create a dedicated schema to store all tables\n-- Uncomment the following 2 lines to activate the schema use\n-- CREATE SCHEMA processdb;\n-- SET search_path TO processdb;\n--------------------------------------------------------------------------------\n-- Users table \n-- Used to store the user name provided in case of authentication\ncreate table users (\n       id serial PRIMARY KEY,\n       name varchar(255),\n       provider varchar(255),\n       creation_time timestamp with time zone default now(),\n       access_time timestamp with time zone default now()\n);\nINSERT INTO users (id,name,provider) VALUES (0,'anonymous','unknown');\n--------------------------------------------------------------------------------\n-- Services table\n-- Used to store information about services running asynchronously\ncreate table services (\n       osid TEXT,\n       sid TEXT,\n       uuid TEXT unique,\n       processid TEXT,\n       fstate varchar(25),\n       status TEXT,\n       response TEXT,\n       creation_time timestamp with time zone default now(),\n       start_time timestamp with time zone default now(),\n       updated_time timestamp with time zone default now(),\n       finished_time timestamp with time zone default NULL,\n       end_time timestamp with time zone default NULL,\n       progress int,\n       itype varchar(10),\n       message TEXT,\n       user_id int REFERENCES users(id) ON DELETE CASCADE\n);\n--------------------------------------------------------------------------------\n-- Responses table \n-- Used to store the response provided by a services running asynchronously\ncreate table responses (\n       uuid text references services(uuid) ON DELETE CASCADE,\n       content text,\n       creation_time timestamp with time zone default now()\n);\n--------------------------------------------------------------------------------\n-- Files table\n-- Used to store the files generated during the service execution\ncreate table files (\n       uuid TEXT references services(uuid) ON DELETE CASCADE,\n       filename text,\n       nature varchar(10),\n       name varchar(255),\n       creation_time timestamp with time zone default now(),\n       expiration_time timestamp with time zone default now() + interval '48 hours'\n);\n--------------------------------------------------------------------------------\n--------------------------------------------------------------------------------\n-- Function to display date respecting the RFC 3339\nCREATE OR REPLACE FUNCTION display_date_rfc3339(param_in timestamp with time zone)\nRETURNS text AS\n$$\nDECLARE var_out varchar;\nBEGIN\n\tPERFORM set_config('timezone', 'UTC', true);\n\tvar_out := to_char(param_in , 'YYYY-MM-DD\"T\"HH24:MI:SS.MS\"Z\"');\n\tRETURN var_out;\nEND;\n$$ language plpgsql VOLATILE;\n--------------------------------------------------------------------------------"
  2-schema.sql: "--------------------------------------------------------------------------------\n--\n-- PostgreSQL definition of tables required byt the ZOO-Kernel version >= 1.8.0\n-- if the the rabbitmq option is activated\n--\n-- Copyright (C) 2020 GeoLabs SARL. All rights reserved.\n-- Author: Gérald Fenoy <gerald.fenoy@geolabs.fr>\n--\n-- Permission is hereby granted, free of charge, to any person obtaining a copy\n-- of this software and associated documentation files (the \"Software\"), to deal\n-- in the Software without restriction, including without limitation the rights\n-- to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n-- copies of the Software, and to permit persons to whom the Software is\n-- furnished to do so, subject to the following conditions:\n--\n-- The above copyright notice and this permission notice shall be included in\n-- all copies or substantial portions of the Software.\n--\n-- THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n-- FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n-- AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n-- LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n-- OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n-- THE SOFTWARE.\n--\n-------------------------------------------------------------------------------- \n-- If your database is not using UTF-8 per default then uncomment the following \n-- SET client_encoding = 'UTF8';\n-------------------------------------------------------------------------------- \n-- Create a dedicated schema to store all tables\n-- Uncomment the following 2 lines to activate the schema use\n-- CREATE SCHEMA processdb;\n-- SET search_path TO processdb;\n--------------------------------------------------------------------------------\nCREATE TABLE workers (\n       id serial primary key,\n       uuid text,\n       pid int,\n       status int,\n       creation_time timestamp with time zone default now(),\n       UNIQUE(uuid)\n);\n\n\nCREATE OR REPLACE FUNCTION checkAvailableExecutionSlot(schema text,uuid text, pid int) RETURNS boolean AS \n$BODY$\nDECLARE\n\tres int;\n        cnt int;\nBEGIN\n        EXECUTE 'SELECT count(*) from '||schema||'.workers where uuid = '''||uuid||'''' INTO cnt;\n\tIF cnt = 0  THEN\n\t   EXECUTE 'INSERT INTO '||schema||'.workers (uuid,pid,status) VALUES ('''||uuid||''','||pid||',1)';\n\t   RETURN true;\n\tELSE\n\t   RETURN false;\n\tEND IF;\nEND;\n$BODY$\nLANGUAGE 'plpgsql' COST 100.0 SECURITY INVOKER;\n"
  3-schema.sql: "--------------------------------------------------------------------------------\n--\n-- PostgreSQL definition of tables required byt the ZOO-Kernel version >= 1.8.0\n-- if the the metadb is activated\n--\n-- Copyright (C) 2018-2022 GeoLabs SARL. All rights reserved.\n-- Author: Gérald Fenoy <gerald.fenoy@geolabs.fr>\n--\n-- Permission is hereby granted, free of charge, to any person obtaining a copy\n-- of this software and associated documentation files (the \"Software\"), to deal\n-- in the Software without restriction, including without limitation the rights\n-- to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n-- copies of the Software, and to permit persons to whom the Software is\n-- furnished to do so, subject to the following conditions:\n--\n-- The above copyright notice and this permission notice shall be included in\n-- all copies or substantial portions of the Software.\n--\n-- THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n-- FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n-- AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n-- LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n-- OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n-- THE SOFTWARE.\n--\n--------------------------------------------------------------------------------\n-- If your database is not using UTF-8 per default then uncomment the following\n-- SET client_encoding = 'UTF8';\n--------------------------------------------------------------------------------\n\ncreate schema CollectionDB;\n\nset search_path = CollectionDB, pg_catalog;\n\nCREATE OR REPLACE FUNCTION update_Description() RETURNS trigger AS\n$$\nDECLARE\n\ti integer;\nBEGIN\n\tINSERT INTO CollectionDB.Descriptions (id) VALUES (NEW.id);\n\tRETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\nCREATE FUNCTION is_in_ows_DataDescription(i integer) RETURNS boolean\n    LANGUAGE plpgsql\n    AS $$\nDECLARE\n        res int;\n        mymax int;\nBEGIN\n\tSELECT id from CollectionDB.ows_DataDescription where id=i INTO res ;\n\tif res is NULL then\n\t   return false;\n\telse\n\t   return true;\n\tend if;\nEND;\n$$;\n\ncreate table CollectionDB.Descriptions (\n       id serial primary key\n);\n\ncreate table CollectionDB.ows_Metadata (\n       id serial primary key,\n       title text,\n       role text,\n       href text\n);\n\ncreate table CollectionDB.DescriptionsMetadataAssignment(\n       descriptions_id int references CollectionDB.Descriptions(id) ON DELETE CASCADE,\n       metadata_id int references CollectionDB.ows_Metadata(id) ON DELETE CASCADE\n);\n\ncreate table CollectionDB.ows_Keywords (\n    id serial primary key,\n    keyword varchar\n);\n\ncreate table CollectionDB.DescriptionsKeywordsAssignment(\n       descriptions_id int references CollectionDB.Descriptions(id) ON DELETE CASCADE,\n       keywords_id int references CollectionDB.ows_Keywords(id) ON DELETE CASCADE\n);\n\ncreate table CollectionDB.ows_AdditionalParameters (\n    id serial primary key,\n    title varchar,\n    role varchar,\n    href varchar\n);\n\ncreate table CollectionDB.DescriptionsAdditionalParametersAssignment (\n       descriptions_id int references CollectionDB.Descriptions(id) ON DELETE CASCADE,\n       additional_parameters_id int references CollectionDB.ows_AdditionalParameters(id) ON DELETE CASCADE\n);\n\n--\n-- See reference for primitive datatypes\n-- https://www.w3.org/TR/xmlschema-2/#built-in-primitive-datatypes\n--\ncreate table CollectionDB.PrimitiveDataTypes (\n       id serial primary key,\n       name varchar(255)\n);\nINSERT INTO CollectionDB.PrimitiveDataTypes (name) VALUES ('string');\nINSERT INTO CollectionDB.PrimitiveDataTypes (name) VALUES ('boolean');\nINSERT INTO CollectionDB.PrimitiveDataTypes (name) VALUES ('integer');\nINSERT INTO CollectionDB.PrimitiveDataTypes (name) VALUES ('float');\nINSERT INTO CollectionDB.PrimitiveDataTypes (name) VALUES ('double');\nINSERT INTO CollectionDB.PrimitiveDataTypes (name) VALUES ('duration');\nINSERT INTO CollectionDB.PrimitiveDataTypes (name) VALUES ('dateTime');\nINSERT INTO CollectionDB.PrimitiveDataTypes (name) VALUES ('time');\nINSERT INTO CollectionDB.PrimitiveDataTypes (name) VALUES ('date');\nINSERT INTO CollectionDB.PrimitiveDataTypes (name) VALUES ('gYearMonth');\nINSERT INTO CollectionDB.PrimitiveDataTypes (name) VALUES ('gYear');\nINSERT INTO CollectionDB.PrimitiveDataTypes (name) VALUES ('gMonthDay');\nINSERT INTO CollectionDB.PrimitiveDataTypes (name) VALUES ('gDay');\nINSERT INTO CollectionDB.PrimitiveDataTypes (name) VALUES ('gMonth');\nINSERT INTO CollectionDB.PrimitiveDataTypes (name) VALUES ('hexBinary');\nINSERT INTO CollectionDB.PrimitiveDataTypes (name) VALUES ('base64Binary');\nINSERT INTO CollectionDB.PrimitiveDataTypes (name) VALUES ('anyURI');\nINSERT INTO CollectionDB.PrimitiveDataTypes (name) VALUES ('QName');\nINSERT INTO CollectionDB.PrimitiveDataTypes (name) VALUES ('NOTATION');\n\n--\n-- List all primitive formats\n--\ncreate table CollectionDB.PrimitiveFormats (\n       id serial primary key,\n       mime_type varchar(255),\n       encoding varchar(15),\n       schema varchar(255)\n);\n\n-- https://tools.ietf.org/html/rfc4180\nINSERT INTO CollectionDB.PrimitiveFormats (mime_type,encoding) VALUES ('text/csv','utf-8');\nINSERT INTO CollectionDB.PrimitiveFormats (mime_type,encoding) VALUES ('text/css','utf-8');\nINSERT INTO CollectionDB.PrimitiveFormats (mime_type,encoding) VALUES ('text/html','utf-8');\nINSERT INTO CollectionDB.PrimitiveFormats (mime_type,encoding) VALUES ('text/javascript','utf-8');\nINSERT INTO CollectionDB.PrimitiveFormats (mime_type,encoding) VALUES ('text/plain','utf-8');\nINSERT INTO CollectionDB.PrimitiveFormats (mime_type,encoding,schema)\n       VALUES ('text/xml','utf-8','http://schema.opengis.net/gml/3.2.1/gml.xsd');\nINSERT INTO CollectionDB.PrimitiveFormats (mime_type,encoding,schema)\n       VALUES ('text/xml','utf-8','http://schema.opengis.net/gml/3.1.0/gml.xsd');\nINSERT INTO CollectionDB.PrimitiveFormats (mime_type,encoding) VALUES ('application/gml+xml','utf-8');\nINSERT INTO CollectionDB.PrimitiveFormats (mime_type,encoding) VALUES ('application/json','utf-8');\n-- https://tools.ietf.org/html/rfc3302\nINSERT INTO CollectionDB.PrimitiveFormats (mime_type) VALUES ('image/tiff');\n-- https://www.ietf.org/rfc/rfc4047.txt\nINSERT INTO CollectionDB.PrimitiveFormats (mime_type) VALUES ('image/fits');\n-- https://tools.ietf.org/html/rfc3745\nINSERT INTO CollectionDB.PrimitiveFormats (mime_type) VALUES ('image/jp2');\nINSERT INTO CollectionDB.PrimitiveFormats (mime_type) VALUES ('image/png');\nINSERT INTO CollectionDB.PrimitiveFormats (mime_type) VALUES ('image/jpeg');\nINSERT INTO CollectionDB.PrimitiveFormats (mime_type) VALUES ('image/gif');\nINSERT INTO CollectionDB.PrimitiveFormats (mime_type) VALUES ('application/octet-stream');\nINSERT INTO CollectionDB.PrimitiveFormats (mime_type) VALUES ('application/vnd.google-earth.kml+xml');\n-- https://www.iana.org/assignments/media-types/application/zip\nINSERT INTO CollectionDB.PrimitiveFormats (mime_type) VALUES ('application/zip');\n-- https://www.iana.org/assignments/media-types/application/xml\nINSERT INTO CollectionDB.PrimitiveFormats (mime_type,encoding) VALUES ('application/xml','utf-8');\n\ncreate table CollectionDB.ows_Format (\n    id serial primary key,\n    primitive_format_id int references CollectionDB.PrimitiveFormats(id) ON DELETE CASCADE,\n    maximum_megabytes int,\n    def boolean,\n\tuse_mapserver bool,\n\tms_styles text\n);\n\ncreate table CollectionDB.ows_DataDescription (\n    id serial primary key,\n    format_id int references CollectionDB.ows_Format(id) ON DELETE CASCADE\n);\n\ncreate table CollectionDB.PrimitiveUom (\n\tid serial primary key,\n\tuom varchar\n);\n-- source : Open Geospatial Consortium - URNs of definitions in ogc namespace\ninsert into CollectionDB.PrimitiveUom (uom) values ('degree');\ninsert into CollectionDB.PrimitiveUom (uom) values ('radian');\ninsert into CollectionDB.PrimitiveUom (uom) values ('metre');\ninsert into CollectionDB.PrimitiveUom (uom) values ('unity');\n\ncreate table CollectionDB.LiteralDataDomain (\n    possible_literal_values varchar,\n    default_value varchar,\n    data_type_id int references CollectionDB.PrimitiveDataTypes(id) ON DELETE CASCADE,\n    uom int references CollectionDB.PrimitiveUom(id) ON DELETE CASCADE,\n    def boolean\n) inherits (CollectionDB.ows_DataDescription);\nalter table CollectionDB.LiteralDataDomain add constraint literal_data_domain_id unique (id);\n\ncreate table CollectionDB.BoundingBoxData (\n    epsg int\n) inherits (CollectionDB.ows_DataDescription);\nalter table CollectionDB.BoundingBoxData add constraint bounding_box_data_id unique (id);\n\ncreate table CollectionDB.ComplexData (\n) inherits (CollectionDB.ows_DataDescription);\nalter table CollectionDB.ComplexData add constraint complex_data_id unique (id);\n\ncreate table CollectionDB.AllowedValues (\n    id serial primary key,\n    allowed_value varchar(255)\n);\n\ncreate table CollectionDB.AllowedValuesAssignment (\n    id serial primary key,\n    literal_data_domain_id int references CollectionDB.LiteralDataDomain (id) ON DELETE CASCADE,\n    allowed_value_id int references CollectionDB.AllowedValues (id) ON DELETE CASCADE\n);\n\ncreate table CollectionDB.ows_AdditionalParameter (\n    id serial primary key,\n    key varchar,\n    value varchar,\n    additional_parameters_id int references CollectionDB.ows_AdditionalParameters(id) ON DELETE CASCADE\n);\n\ncreate table CollectionDB.ows_Input (\n    id int primary key default nextval('collectiondb.descriptions_id_seq'::regclass),\n    title text,\n    abstract text,\n    identifier varchar(255),\n    min_occurs int,\n    max_occurs int\n); -- inherits (CollectionDB.Descriptions);\nalter table CollectionDB.ows_Input add constraint codb_input_id unique (id);\nCREATE TRIGGER ows_Input_proc AFTER INSERT ON CollectionDB.ows_Input FOR EACH ROW EXECUTE PROCEDURE update_Description();\n\ncreate table CollectionDB.ows_Output (\n    id int primary key default nextval('collectiondb.descriptions_id_seq'::regclass),\n    title text,\n    abstract text,\n    identifier varchar(255)\n); --inherits (CollectionDB.Descriptions);\nalter table CollectionDB.ows_Output add constraint codb_output_id unique (id);\nCREATE TRIGGER ows_Output_proc AFTER INSERT ON CollectionDB.ows_Output FOR EACH ROW EXECUTE PROCEDURE update_Description();\n\ncreate table CollectionDB.zoo_PrivateMetadata (\n    id serial primary key,\n    identifier varchar,\n    metadata_date timestamp\n);\n\ncreate table CollectionDB.ows_Process (\n    id int primary key default nextval('collectiondb.descriptions_id_seq'::regclass),\n    title text,\n    abstract text,\n    identifier varchar(255),\n    availability boolean,\n    mutable boolean,\n    process_description_xml text,\n    private_metadata_id int references CollectionDB.zoo_PrivateMetadata(id) ON DELETE CASCADE,\n    user_id int REFERENCES public.users(id) ON DELETE CASCADE\n); -- inherits (CollectionDB.Descriptions);\nalter table CollectionDB.ows_Process add constraint codb_process_id unique (id);\nalter table CollectionDB.ows_Process add constraint codb_process_identifier unique (identifier,user_id);\nCREATE TRIGGER ows_Process_proc AFTER INSERT ON CollectionDB.ows_Process FOR EACH ROW EXECUTE PROCEDURE update_Description();\n\ncreate table CollectionDB.InputInputAssignment (\n    id serial primary key,\n    parent_input int references CollectionDB.ows_Input(id) ON DELETE CASCADE,\n    child_input int references CollectionDB.ows_Input(id) ON DELETE CASCADE\n);\n\ncreate table CollectionDB.InputDataDescriptionAssignment (\n    id serial primary key,\n    input_id int references CollectionDB.ows_Input(id) ON DELETE CASCADE,\n    data_description_id int check (CollectionDB.is_in_ows_DataDescription(data_description_id))\n);\n\ncreate table CollectionDB.OutputOutputAssignment (\n    id serial primary key,\n    parent_output int references CollectionDB.ows_Output(id) ON DELETE CASCADE,\n    child_output int references CollectionDB.ows_Output(id) ON DELETE CASCADE\n);\n\ncreate table CollectionDB.OutputDataDescriptionAssignment (\n    id serial primary key,\n    output_id int references CollectionDB.ows_Output(id) ON DELETE CASCADE,\n    data_description_id int check (CollectionDB.is_in_ows_DataDescription(data_description_id))\n);\n\ncreate table CollectionDB.zoo_ServiceTypes (\n\tid serial primary key,\n\tservice_type varchar\n);\ninsert into CollectionDB.zoo_ServiceTypes (service_type) VALUES ('HPC');\ninsert into CollectionDB.zoo_ServiceTypes (service_type) VALUES ('C');\ninsert into CollectionDB.zoo_ServiceTypes (service_type) VALUES ('Java');\ninsert into CollectionDB.zoo_ServiceTypes (service_type) VALUES ('Mono');\ninsert into CollectionDB.zoo_ServiceTypes (service_type) VALUES ('JS');\ninsert into CollectionDB.zoo_ServiceTypes (service_type) VALUES ('PHP');\ninsert into CollectionDB.zoo_ServiceTypes (service_type) VALUES ('Python');\n\ninsert into CollectionDB.zoo_ServiceTypes (service_type) VALUES ('OTB');\n\ncreate table CollectionDB.zoo_DeploymentMetadata (\n    id serial primary key,\n    executable_name varchar,\n    configuration_identifier varchar,\n        service_type_id int references CollectionDB.zoo_ServiceTypes(id) ON DELETE CASCADE);\n\ncreate table CollectionDB.zoo_PrivateProcessInfo (\n    id serial primary key\n);\n\ncreate table CollectionDB.PrivateMetadataDeploymentMetadataAssignment (\n    id serial primary key,\n    private_metadata_id int references CollectionDB.zoo_PrivateMetadata(id) ON DELETE CASCADE,\n    deployment_metadata_id int references CollectionDB.zoo_DeploymentMetadata(id) ON DELETE CASCADE\n);\n\ncreate table CollectionDB.PrivateMetadataPrivateProcessInfoAssignment (\n    id serial primary key,\n    private_metadata_id int references CollectionDB.zoo_PrivateMetadata(id) ON DELETE CASCADE,\n    private_process_info_id int references CollectionDB.zoo_PrivateProcessInfo(id) ON DELETE CASCADE\n);\n\ncreate table CollectionDB.ProcessInputAssignment (\n    id serial primary key,\n    process_id int references CollectionDB.ows_Process(id) ON DELETE CASCADE,\n    input_id int references CollectionDB.ows_Input(id) ON DELETE CASCADE,\n    index int\n);\n\ncreate table CollectionDB.ProcessOutputAssignment (\n    id serial primary key,\n    process_id int references CollectionDB.ows_Process(id) ON DELETE CASCADE,\n    output_id int references CollectionDB.ows_Output(id) ON DELETE CASCADE,\n    index int\n);\n\nCREATE OR REPLACE VIEW public.ows_process AS\n       (SELECT\n\tid,\n\tidentifier,\n\ttitle,\n\tabstract,\n\t(SELECT service_type FROM CollectionDB.zoo_ServiceTypes WHERE id = (SELECT service_type_id FROM CollectionDB.zoo_DeploymentMetadata WHERE id = (SELECT deployment_metadata_id FROM CollectionDB.PrivateMetadataDeploymentmetadataAssignment WHERE private_metadata_id=(SELECT id FROM CollectionDB.zoo_PrivateMetadata WHERE id = CollectionDB.ows_Process.private_metadata_id)))) as service_type,\n\t(SELECT executable_name FROM CollectionDB.zoo_DeploymentMetadata WHERE id = (SELECT deployment_metadata_id FROM CollectionDB.PrivateMetadataDeploymentmetadataAssignment WHERE private_metadata_id=(SELECT id FROM CollectionDB.zoo_PrivateMetadata WHERE id = CollectionDB.ows_Process.private_metadata_id))) as service_provider,\n\t(SELECT configuration_identifier FROM CollectionDB.zoo_DeploymentMetadata WHERE id = (SELECT deployment_metadata_id FROM CollectionDB.PrivateMetadataDeploymentmetadataAssignment WHERE private_metadata_id=(SELECT id FROM CollectionDB.zoo_PrivateMetadata WHERE id = CollectionDB.ows_Process.private_metadata_id))) as conf_id,\n\tmutable,\n\tavailability,\n\tuser_id\n\tFROM CollectionDB.ows_Process\n\tWHERE\n\t availability\n\t);"
---
# Source: zoo-project-workshop/templates/claim-services-data.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-processing-services
  namespace: default
  labels:
    app: release-name
    chart: "zoo-project-workshop-0.0.6"
    release: release-name
    heritage: Helm
spec:
  accessModes:
    - "ReadWriteOnce"
  storageClassName: "standard"
  resources:
    requests:
      storage:  "5Gi"
---
# Source: zoo-project-workshop/templates/claim-services-doc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-documentation-services
  namespace: default
  labels:
    app: release-name-zoo-project-workshop
    chart: "zoo-project-workshop-0.0.6"
    release: release-name
    heritage: Helm
spec:
  accessModes:
    - "ReadWriteOnce"
  storageClassName: "standard"
  resources:
    requests:
      storage:  "5Gi"
---
# Source: zoo-project-workshop/templates/claim-zoo-tmp.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-tmp-folder
  namespace: default
  labels:
    app: release-name-zoo-project-workshop
    chart: "zoo-project-workshop-0.0.6"
    release: release-name
    heritage: Helm
spec:
  accessModes:
    - "ReadWriteMany"
  storageClassName: "standard"
  resources:
    requests:
      storage:  "2Gi"
---
# Source: zoo-project-workshop/templates/role-binding-processing.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-processing
subjects:
  - kind: ServiceAccount
    name: release-name-processing-manager
    namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
---
# Source: zoo-project-workshop/charts/rabbitmq/templates/role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-rabbitmq-endpoint-reader
  namespace: "default"
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-11.5.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create"]
---
# Source: zoo-project-workshop/charts/rabbitmq/templates/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-rabbitmq-endpoint-reader
  namespace: "default"
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-11.5.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: release-name-rabbitmq
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-rabbitmq-endpoint-reader
---
# Source: zoo-project-workshop/charts/postgresql/templates/primary/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql-hl
  namespace: "default"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-12.1.9
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
    # Use this annotation in addition to the actual publishNotReadyAddresses
    # field below because the annotation will stop being respected soon but the
    # field is broken in some versions of Kubernetes:
    # https://github.com/kubernetes/kubernetes/issues/58662
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  clusterIP: None
  # We want all pods in the StatefulSet to have their addresses published for
  # the sake of the other Postgresql pods even before they're ready, since they
  # have to be able to talk to each other in order to become ready.
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: primary
---
# Source: zoo-project-workshop/charts/postgresql/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-12.1.9
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
      nodePort: null
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: primary
---
# Source: zoo-project-workshop/charts/rabbitmq/templates/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-rabbitmq-headless
  namespace: "default"
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-11.5.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  ports:
    - name: epmd
      port: 4369
      targetPort: epmd
    - name: amqp
      port: 5672
      targetPort: amqp
    - name: dist
      port: 25672
      targetPort: dist
    - name: http-stats
      port: 15672
      targetPort: stats
  selector: 
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/instance: release-name
  publishNotReadyAddresses: true
---
# Source: zoo-project-workshop/charts/rabbitmq/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-rabbitmq
  namespace: "default"
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-11.5.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: amqp
      port: 5672
      targetPort: amqp
      nodePort: null
    - name: epmd
      port: 4369
      targetPort: epmd
      nodePort: null
    - name: dist
      port: 25672
      targetPort: dist
      nodePort: null
    - name: http-stats
      port: 15672
      targetPort: stats
      nodePort: null
  selector: 
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/instance: release-name
---
# Source: zoo-project-workshop/charts/redis/templates/headless-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-redis-headless
  namespace: "default"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-17.6.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: tcp-redis
      port: 6379
      targetPort: redis
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: release-name
---
# Source: zoo-project-workshop/charts/redis/templates/master/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-redis-master
  namespace: "default"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-17.6.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: master
spec:
  type: ClusterIP
  internalTrafficPolicy: Cluster
  sessionAffinity: None
  ports:
    - name: tcp-redis
      port: 6379
      targetPort: redis
      nodePort: null
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: master
---
# Source: zoo-project-workshop/charts/redis/templates/replicas/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-redis-replicas
  namespace: "default"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-17.6.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: replica
spec:
  type: ClusterIP
  internalTrafficPolicy: Cluster
  sessionAffinity: None
  ports:
    - name: tcp-redis
      port: 6379
      targetPort: redis
      nodePort: null
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: replica
---
# Source: zoo-project-workshop/templates/service-proxy.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kubeproxy
spec:
  type: ClusterIP
  ports:
    - port: 8001
      targetPort: 8001
      protocol: TCP
      name: http-kubeproxy
  selector:
    app.kubernetes.io/name: release-name-kubeproxy
---
# Source: zoo-project-workshop/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-service
  labels:
    helm.sh/chart: zoo-project-workshop-0.0.6
    app.kubernetes.io/name: zoo-project-workshop
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: zoo-project-workshop
    app.kubernetes.io/instance: release-name
---
# Source: zoo-project-workshop/templates/dp-kube-proxy.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kubeproxy
  labels:
    app.kubernetes.io/name: release-name-kubeproxy
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: release-name-kubeproxy
  template:
    metadata:
      labels:
        app.kubernetes.io/name: release-name-kubeproxy
    spec:
      serviceAccountName: release-name-processing-manager
      securityContext:
        {}
      containers:
        - name: release-name-kubeproxy
          securityContext:
            {}
          image: eoepca/kubectl-proxy:latest
          ports:
            - containerPort: 8001
      restartPolicy: Always
---
# Source: zoo-project-workshop/templates/dp-zoofpm.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-zoofpm
  labels:
    app.kubernetes.io/version: "0.1.2"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-name-zoofpm
    app.kubernetes.io/instance: release-name-zoofpm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: zoo-project-workshop-zoofpm
      app.kubernetes.io/instance: release-name-zoofpm
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        checksum/cm-cwlwrapper-assets: 0c08f0c66524da2934fa3ef4529eb6db8ea6c10d2259668a0a6e06e8347f54fc
        checksum/cm-zoo-deploy-service-config: f46838f80df2eac345fe8ff983e7a395838ff7e835bf3353a4ed79af66004982
        checksum/cm-zoo-project-config: f0ef5cb08fda0b95c04a6437396ded8fe28433d064991930b2ab61a19773ca70
        checksum/cm-openapi-config: caa53d0ae70dd419be440a25079e6833308d1b129e0785363526ec668281e7fc
      labels:
        app.kubernetes.io/name: zoo-project-workshop-zoofpm
        app.kubernetes.io/instance: release-name-zoofpm
    spec:
      serviceAccountName: release-name-processing-manager
      initContainers:
        - name: init-wait-for-dependencies-zoofpm
          image: docker.io/wshihadeh/wait_for:latest
          imagePullPolicy: IfNotPresent
          command: [ "/docker-entrypoint.sh" ]
          args: [ "wait_for", "rabbitmq:release-name-rabbitmq"]
          env:
            - name: ZOO_RABBITMQ_HOST
              value: release-name-rabbitmq
      containers:
        - env:
            - name: ZOO_RABBITMQ_HOST
              value: release-name-rabbitmq
            - name: STORAGE_CLASS
              value: standard
            - name: DEFAULT_VOLUME_SIZE
              value: "10190"
            - name: DEFAULT_MAX_RAM
              value: "1024"
            - name: DEFAULT_MAX_CORES
              value: "2"
            - name: CALRISSIAN_IMAGE
              value: "terradue/calrissian:0.12.0"
            - name: WRAPPER_STAGE_IN
              value: "/assets/stagein.yaml"
            - name: WRAPPER_STAGE_OUT
              value: "/assets/stageout.yaml"
            - name: WRAPPER_RULES
              value: "/assets/rules.yaml"
            - name: WRAPPER_MAIN
              value: "/assets/main.yaml"
            - name: HTTP_PROXY
              value: "http://release-name-kubeproxy.default.svc.cluster.local:8001"
            - name: PGHOST
              value: "release-name-postgresql-hl"
            - name: PGDATABASE
              value: "zoo"
            - name: PGPASSWORD
              value: "zoo"
            - name: PGUSER
              value: "zoo"
            - name: PGPORT
              value: "5432"


          name: zoofpm
          image: "zooproject/zoo-project:dru-7de51b06d7756e5af0d13fb5213ab52da27e0e4d"
          imagePullPolicy: IfNotPresent
          command: ["/startup.sh"]
          resources: {}
          volumeMounts:
            - name: zoo-project-config
              mountPath: /usr/lib/cgi-bin/main.cfg
              subPath: main.cfg
            
            - name: zoo-project-config
              mountPath: /usr/lib/cgi-bin/oas.cfg
              subPath: oas.cfg
            
            - name: zoo-project-config
              mountPath: /var/www/html/.htaccess
              subPath: htaccess

            - name: startup-script
              mountPath: /startup.sh
              subPath: start-up.sh

            - name: zoo-deploy-service-config
              mountPath: /tmp/zTmp/cookiecutter_config.yaml
              subPath: cookiecutter_config.yaml

            - name: cwlwrapper-config
              mountPath: /assets/main.yaml
              subPath: main.yaml

            - name: cwlwrapper-config
              mountPath: /assets/rules.yaml
              subPath: rules.yaml

            - name: cwlwrapper-config
              mountPath: /assets/stagein.yaml
              subPath: stagein.yaml

            - name: cwlwrapper-config
              mountPath: /assets/stageout.yaml
              subPath: stageout.yaml

            - name: ades-processing-services
              mountPath: /opt/zooservices_user

            - name: tmp-folder
              mountPath: /tmp/zTmp
      restartPolicy: Always
      volumes:
        - name: zoo-kernel-config
          configMap:
            name: release-name-zoo-kernel-config
        - name: openapi-config
          configMap:
            name: release-name-openapi-config
        - name: zoo-deploy-service-config
          configMap:
            name: release-name-zoo-deploy-service-config
        - name: cwlwrapper-config
          configMap:
            name: release-name-cwlwrapper-config
        - name: startup-script
          configMap:
            name: release-name-startup-configmap
            defaultMode: 0744
        - name: zoo-project-config
          configMap:
            name: release-name-zoo-project-config
        - name: tmp-folder
          persistentVolumeClaim:
            claimName: release-name-tmp-folder

        - name: ades-processing-services
          persistentVolumeClaim:
            claimName: release-name-processing-services
status: {}
---
# Source: zoo-project-workshop/templates/dp-zookernel.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-zookernel
  labels:
    helm.sh/chart: zoo-project-workshop-0.0.6
    app.kubernetes.io/name: zoo-project-workshop
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: zoo-project-workshop
      app.kubernetes.io/instance: release-name
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        checksum/cm-cwlwrapper-assets: 0c08f0c66524da2934fa3ef4529eb6db8ea6c10d2259668a0a6e06e8347f54fc
        checksum/cm-zoo-deploy-service-config: f46838f80df2eac345fe8ff983e7a395838ff7e835bf3353a4ed79af66004982
        checksum/cm-zoo-project-config: f0ef5cb08fda0b95c04a6437396ded8fe28433d064991930b2ab61a19773ca70
        checksum/cm-openapi-config: caa53d0ae70dd419be440a25079e6833308d1b129e0785363526ec668281e7fc
      labels:
        app.kubernetes.io/name: zoo-project-workshop
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
        - name: init-wait-for-dependencies-zookernel
          image: docker.io/wshihadeh/wait_for:latest
          imagePullPolicy: IfNotPresent
          command: [ "/docker-entrypoint.sh" ]
          args: [ "wait_for", "rabbitmq:release-name-rabbitmq" ]
          env:
            - name: ZOO_RABBITMQ_HOST
              value: release-name-rabbitmq
      containers:
        - name: zookernel
          command: [ "apachectl" ]
          args: [ "-D", "FOREGROUND" ]
          env:
            - name: ZOO_REDIS_HOST
              value: release-name-redis-master
          image: "zooproject/zoo-project:dru-7de51b06d7756e5af0d13fb5213ab52da27e0e4d"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources: {}
          volumeMounts:
            - name: zoo-project-config
              mountPath: /usr/lib/cgi-bin/main.cfg
              subPath: main.cfg
            - name: zoo-project-config
              mountPath: /usr/lib/cgi-bin/oas.cfg
              subPath: oas.cfg
            - name: zoo-project-config
              mountPath: /var/www/html/.htaccess
              subPath: htaccess
            - name: zoo-project-config
              mountPath: /var/www/html/swagger-ui/oapip/index.html
              subPath: oapi-index.html
            - name: zoo-project-config
              mountPath: /usr/lib/cgi-bin/security_service.py
              subPath: security_service.py
            - name: zoo-example-config
              mountPath: /var/www/html/examples/post_processes/app-package.cwl
              subPath: app-package.cwl
            - name: zoo-example-config
              mountPath: /var/www/html/examples/post_processes/app-package.json
              subPath: app-package.json
            - name: zoo-example-config
              mountPath: /var/www/html/examples/water-bodies/job-order1.json
              subPath: job-order1.json
            - name: zoo-example-config
              mountPath: /usr/lib/cgi-bin/s3_read.zcfg
              subPath: s3_read.zcfg
            - name: zoo-example-config
              mountPath: /usr/lib/cgi-bin/s3_download.zcfg
              subPath: s3_download.zcfg
            - name: zoo-example-config
              mountPath: /usr/lib/cgi-bin/s3utils.py
              subPath: s3utils.py
            - name: zoo-example-config
              mountPath: /var/www/.s3cfg
              subPath: s3cfg
            - name: zoo-example-config
              mountPath: /var/www/html/examples/s3_read/job-order1.json
              subPath: job-order2.json
            - name: zoo-example-config
              mountPath: /var/www/html/examples/s3_download/job-order1.json
              subPath: job-order3.json
            - name: zoo-example-config
              mountPath: /var/www/s3_read.md
              subPath: s3_read.md
            - name: zoo-example-config
              mountPath: /var/www/s3_download.md
              subPath: s3_download.md
            - name: openapi-config
              mountPath: /var/www/header.md
              subPath: header.md
            - name: openapi-config
              mountPath: /var/www/processes-list.md
              subPath: processes-list.md
            - name: openapi-config
              mountPath: /var/www/deploy.md
              subPath: deploy.md
            - name: openapi-config
              mountPath: /var/www/processes-description.md
              subPath: processes-description.md
            - name: openapi-config
              mountPath: /var/www/execute.md
              subPath: execute.md
            - name: openapi-config
              mountPath: /var/www/job-status.md
              subPath: job-status.md
            - name: openapi-config
              mountPath: /var/www/job-results.md
              subPath: job-results.md
            - name: zoo-deploy-service-config
              mountPath: /tmp/zTmp/cookiecutter_config.yaml
              subPath: cookiecutter_config.yaml
            - name: ades-processing-services
              mountPath: /opt/zooservices_user
            - name: tmp-folder
              mountPath: /tmp/zTmp
      restartPolicy: Always
      volumes:
        - name: zoo-project-config
          configMap:
            name: release-name-zoo-project-config
        - name: zoo-example-config
          configMap:
            name: release-name-zoo-example-config
        - name: openapi-config
          configMap:
            name: release-name-openapi-config
        - name: zoo-deploy-service-config
          configMap:
            name: release-name-zoo-deploy-service-config
        - name: tmp-folder
          persistentVolumeClaim:
            claimName: release-name-tmp-folder
        - name: ades-processing-services
          persistentVolumeClaim:
            claimName: release-name-processing-services
status: {}
---
# Source: zoo-project-workshop/charts/postgresql/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-12.1.9
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  replicas: 1
  serviceName: release-name-postgresql-hl
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: primary
  template:
    metadata:
      name: release-name-postgresql
      labels:
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-12.1.9
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: primary
      annotations:
    spec:
      serviceAccountName: default
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: postgresql
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: primary
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      hostNetwork: false
      hostIPC: false
      initContainers:
      containers:
        - name: postgresql
          image: docker.io/bitnami/postgresql:15.1.0-debian-11-r20
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: "/bitnami/postgresql"
            - name: PGDATA
              value: "/bitnami/postgresql/data"
            # Authentication
            - name: POSTGRES_USER
              value: "zoo"
            - name: POSTGRES_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-postgresql
                  key: postgres-password
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-postgresql
                  key: password
            - name: POSTGRES_DB
              value: "zoo"
            # Replication
            # Initdb
            # Standby
            # LDAP
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            # TLS
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            # Audit
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            # Others
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: "error"
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: "pgaudit"
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "zoo" -d "dbname=zoo" -h 127.0.0.1 -p 5432
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                
                - |
                  exec pg_isready -U "zoo" -d "dbname=zoo" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
          resources:
            limits: {}
            requests:
              cpu: 250m
              memory: 256Mi
          volumeMounts:
            - name: custom-init-scripts
              mountPath: /docker-entrypoint-initdb.d/
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /bitnami/postgresql
      volumes:
        - name: custom-init-scripts
          configMap:
            name: postgresql-primary-init-scripts
        - name: dshm
          emptyDir:
            medium: Memory
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: zoo-project-workshop/charts/rabbitmq/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-rabbitmq
  namespace: "default"
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-11.5.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: release-name-rabbitmq-headless
  podManagementPolicy: OrderedReady
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: rabbitmq
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rabbitmq
        helm.sh/chart: rabbitmq-11.5.0
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/config: 7a13dbeb15c0d1b6639022c2ccf4afef2527b0d2f06d08e13b75518b27855467
        checksum/secret: 96614c672bdcaca7069d59101812ef45112e354c41236053a55f6b32dddf9f7c
    spec:
      
      serviceAccountName: release-name-rabbitmq
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: rabbitmq
                    app.kubernetes.io/instance: release-name
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      terminationGracePeriodSeconds: 120
      initContainers:
      containers:
        - name: rabbitmq
          image: docker.io/bitnami/rabbitmq:3.11.6-debian-11-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/bash
                  - -ec
                  - |
                    if [[ -f /opt/bitnami/scripts/rabbitmq/nodeshutdown.sh ]]; then
                        /opt/bitnami/scripts/rabbitmq/nodeshutdown.sh -t "120" -d "false"
                    else
                        rabbitmqctl stop_app
                    fi
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: K8S_SERVICE_NAME
              value: release-name-rabbitmq-headless
            - name: K8S_ADDRESS_TYPE
              value: hostname
            - name: RABBITMQ_FORCE_BOOT
              value: "no"
            - name: RABBITMQ_NODE_NAME
              value: "rabbit@$(MY_POD_NAME).$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local"
            - name: K8S_HOSTNAME_SUFFIX
              value: ".$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local"
            - name: RABBITMQ_MNESIA_DIR
              value: "/bitnami/rabbitmq/mnesia/$(RABBITMQ_NODE_NAME)"
            - name: RABBITMQ_LDAP_ENABLE
              value: "no"
            - name: RABBITMQ_LOGS
              value: "-"
            - name: RABBITMQ_ULIMIT_NOFILES
              value: "65536"
            - name: RABBITMQ_USE_LONGNAME
              value: "true"
            - name: RABBITMQ_ERL_COOKIE
              valueFrom:
                secretKeyRef:
                  name: release-name-rabbitmq
                  key: rabbitmq-erlang-cookie
            - name: RABBITMQ_LOAD_DEFINITIONS
              value: "yes"
            - name: RABBITMQ_DEFINITIONS_FILE
              value: "/app/load_definition.json"
            - name: RABBITMQ_SECURE_PASSWORD
              value: "yes"
            - name: RABBITMQ_USERNAME
              value: "RABBITMQ_USERNAME"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-rabbitmq
                  key: rabbitmq-password
            - name: RABBITMQ_PLUGINS
              value: "rabbitmq_management, rabbitmq_peer_discovery_k8s, rabbitmq_auth_backend_ldap"
          envFrom:
          ports:
            - name: amqp
              containerPort: 5672
            - name: dist
              containerPort: 25672
            - name: stats
              containerPort: 15672
            - name: epmd
              containerPort: 4369
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 120
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 20
            exec:
              command:
                - /bin/bash
                - -ec
                - rabbitmq-diagnostics -q ping
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 20
            exec:
              command:
                - /bin/bash
                - -ec
                - rabbitmq-diagnostics -q check_running && rabbitmq-diagnostics -q check_local_alarms
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: configuration
              mountPath: /bitnami/rabbitmq/conf
            - name: data
              mountPath: /bitnami/rabbitmq/mnesia
            - name: load-definition-volume
              mountPath: /app
              readOnly: true
      volumes:
        - name: configuration
          projected:
            sources:
              - secret:
                  name: release-name-rabbitmq-config
        - name: load-definition-volume
          secret:
            secretName: "load-definition"
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/name: rabbitmq
          app.kubernetes.io/instance: release-name
      spec:
        accessModes:
            - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: zoo-project-workshop/charts/redis/templates/master/application.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-redis-master
  namespace: "default"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-17.6.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: master
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: master
  serviceName: release-name-redis-headless
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        helm.sh/chart: redis-17.6.0
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: master
      annotations:
        checksum/configmap: 6a6d262cf946d2dfe1d7464f6ec9fe9949d6014281f922e72380921cd1c4eb61
        checksum/health: 953f4286d75d2f45a1d9151d5b76ba1c6582790eb1accff3e3d70e76a1c61d98
        checksum/scripts: b37010504cc23299e5ba96d6ea6fc53da5afbb7f7ca09427ec5481e041295fe4
        checksum/secret: db5f1863fe8722161877e0997df9ee000e72cc090d5447858748490932defac5
    spec:
      
      securityContext:
        fsGroup: 1001
      serviceAccountName: release-name-redis
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: redis
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: master
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      terminationGracePeriodSeconds: 30
      containers:
        - name: redis
          image: docker.io/bitnami/redis:7.0.8-debian-11-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          command:
            - /bin/bash
          args:
            - -c
            - /opt/bitnami/scripts/start-scripts/start-master.sh
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: REDIS_REPLICATION_MODE
              value: master
            - name: ALLOW_EMPTY_PASSWORD
              value: "no"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-redis
                  key: redis-password
            - name: REDIS_TLS_ENABLED
              value: "no"
            - name: REDIS_PORT
              value: "6379"
          ports:
            - name: redis
              containerPort: 6379
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            # One second longer than command timeout should prevent generation of zombie processes.
            timeoutSeconds: 6
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - /health/ping_liveness_local.sh 5
          readinessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - /health/ping_readiness_local.sh 1
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: start-scripts
              mountPath: /opt/bitnami/scripts/start-scripts
            - name: health
              mountPath: /health
            - name: redis-data
              mountPath: /data
            - name: config
              mountPath: /opt/bitnami/redis/mounted-etc
            - name: redis-tmp-conf
              mountPath: /opt/bitnami/redis/etc/
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: start-scripts
          configMap:
            name: release-name-redis-scripts
            defaultMode: 0755
        - name: health
          configMap:
            name: release-name-redis-health
            defaultMode: 0755
        - name: config
          configMap:
            name: release-name-redis-configuration
        - name: redis-tmp-conf
          emptyDir: {}
        - name: tmp
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: redis-data
        labels:
          app.kubernetes.io/name: redis
          app.kubernetes.io/instance: release-name
          app.kubernetes.io/component: master
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: zoo-project-workshop/charts/redis/templates/replicas/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-redis-replicas
  namespace: "default"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-17.6.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: replica
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: replica
  serviceName: release-name-redis-headless
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        helm.sh/chart: redis-17.6.0
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: replica
      annotations:
        checksum/configmap: 6a6d262cf946d2dfe1d7464f6ec9fe9949d6014281f922e72380921cd1c4eb61
        checksum/health: 953f4286d75d2f45a1d9151d5b76ba1c6582790eb1accff3e3d70e76a1c61d98
        checksum/scripts: b37010504cc23299e5ba96d6ea6fc53da5afbb7f7ca09427ec5481e041295fe4
        checksum/secret: 39c029e7311750103a30e57a355658229bfde2b44ca1ca7e21508755da5cd2f3
    spec:
      
      securityContext:
        fsGroup: 1001
      serviceAccountName: release-name-redis
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: redis
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: replica
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      terminationGracePeriodSeconds: 30
      containers:
        - name: redis
          image: docker.io/bitnami/redis:7.0.8-debian-11-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          command:
            - /bin/bash
          args:
            - -c
            - /opt/bitnami/scripts/start-scripts/start-replica.sh
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: REDIS_REPLICATION_MODE
              value: replica
            - name: REDIS_MASTER_HOST
              value: release-name-redis-master-0.release-name-redis-headless.default.svc.cluster.local
            - name: REDIS_MASTER_PORT_NUMBER
              value: "6379"
            - name: ALLOW_EMPTY_PASSWORD
              value: "no"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-redis
                  key: redis-password
            - name: REDIS_MASTER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-redis
                  key: redis-password
            - name: REDIS_TLS_ENABLED
              value: "no"
            - name: REDIS_PORT
              value: "6379"
          ports:
            - name: redis
              containerPort: 6379
          startupProbe:
            failureThreshold: 22
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            tcpSocket:
              port: redis
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 6
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - /health/ping_liveness_local_and_master.sh 5
          readinessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - /health/ping_readiness_local_and_master.sh 1
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: start-scripts
              mountPath: /opt/bitnami/scripts/start-scripts
            - name: health
              mountPath: /health
            - name: redis-data
              mountPath: /data
            - name: config
              mountPath: /opt/bitnami/redis/mounted-etc
            - name: redis-tmp-conf
              mountPath: /opt/bitnami/redis/etc
      volumes:
        - name: start-scripts
          configMap:
            name: release-name-redis-scripts
            defaultMode: 0755
        - name: health
          configMap:
            name: release-name-redis-health
            defaultMode: 0755
        - name: config
          configMap:
            name: release-name-redis-configuration
        - name: redis-tmp-conf
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: redis-data
        labels:
          app.kubernetes.io/name: redis
          app.kubernetes.io/instance: release-name
          app.kubernetes.io/component: replica
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: zoo-project-workshop/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-zoo-project-workshop-test-connection"
  labels:
    helm.sh/chart: zoo-project-workshop-0.0.6
    app.kubernetes.io/name: zoo-project-workshop
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-zoo-project-workshop:80']
  restartPolicy: Never
