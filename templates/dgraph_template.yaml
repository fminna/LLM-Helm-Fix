---
# Source: dgraph/templates/alpha/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-dgraph-alpha-headless
  labels:
    app: dgraph
    chart: dgraph-0.0.20
    component: alpha
    release: release-name
    heritage: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: grpc-alpha-int
    port: 7080
    targetPort: 9080
  selector:
    app: dgraph
    chart: dgraph-0.0.20
    component: alpha
    release: release-name
---
# Source: dgraph/templates/alpha/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-dgraph-alpha
  labels:
    app: dgraph
    chart: dgraph-0.0.20
    component: alpha
    release: release-name
    heritage: Helm
    monitor: alpha-dgraph-io
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    name: http-alpha
  - port: 9080
    name: grpc-alpha
  publishNotReadyAddresses: true
  selector:
    app: dgraph
    chart: dgraph-0.0.20
    component: alpha
    release: release-name
---
# Source: dgraph/templates/zero/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-dgraph-zero-headless
  labels:
    app: dgraph
    chart: dgraph-0.0.20
    component: zero
    release: release-name
    heritage: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: grpc-zero
    port: 5080
    targetPort: 5080
  selector:
    app: dgraph
    chart: dgraph-0.0.20
    release: release-name
    component: zero
---
# Source: dgraph/templates/zero/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-dgraph-zero
  labels:
    app: dgraph
    chart: dgraph-0.0.20
    component: zero
    release: release-name
    heritage: Helm
    monitor: zero-dgraph-io
spec:
  type: ClusterIP
  ports:
  - port: 5080
    targetPort: 5080
    name: grpc-zero
  - port: 6080
    targetPort: 6080
    name: http-zero
  publishNotReadyAddresses: true
  selector:
    app: dgraph
    chart: dgraph-0.0.20
    release: release-name
    component: zero
---
# Source: dgraph/templates/alpha/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-dgraph-alpha
  labels:
    app: dgraph
    chart: dgraph-0.0.20
    component: alpha
    release: release-name
    heritage: Helm
spec:
  serviceName: release-name-dgraph-alpha-headless
  replicas: 3
  podManagementPolicy: "OrderedReady"
  updateStrategy:
    type: "RollingUpdate"
  selector:
    matchLabels:
      app: dgraph
      chart: dgraph-0.0.20
      release: release-name
      component: alpha
  template:
    metadata:
      name: release-name-dgraph-alpha
      annotations:
        prometheus.io/path: /debug/prometheus_metrics
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels:
        app: dgraph
        chart: dgraph-0.0.20
        release: release-name
        component: alpha
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - alpha
              topologyKey: kubernetes.io/hostname      
      containers:
      - name: release-name-dgraph-alpha
        image: docker.io/dgraph/dgraph:v21.12.0
        ports:
        - containerPort: 7080
          name: grpc-alpha-int
        - containerPort: 8080
          name: http-alpha
        - containerPort: 9080
          name: grpc-alpha
        imagePullPolicy: "IfNotPresent"
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        
        command:
          - bash
          - "-c"
          ## NOTE: awk gsub is needed to trim trailing period otherwise it causes
          ##       crash for Kubernetes without the domain name
          - |
            set -ex
            dgraph alpha --my=$(hostname -f | awk '{gsub(/\.$/,""); print $0}'):7080 --lru_mb=6000 --query_edge_limit=1e+07 --zero release-name-dgraph-zero-0.release-name-dgraph-zero-headless.${POD_NAMESPACE}.svc.cluster.local:5080,release-name-dgraph-zero-1.release-name-dgraph-zero-headless.${POD_NAMESPACE}.svc.cluster.local:5080,release-name-dgraph-zero-2.release-name-dgraph-zero-headless.${POD_NAMESPACE}.svc.cluster.local:5080 
        resources:
          requests:
            memory: 100Mi
        volumeMounts:
        - name: datadir
          mountPath: /dgraph
      terminationGracePeriodSeconds: 600
      volumes:
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  volumeClaimTemplates:
    - metadata:
        name: datadir
        annotations:
          volume.alpha.kubernetes.io/storage-class: anything
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "100Gi"
---
# Source: dgraph/templates/zero/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "release-name-dgraph-zero"
  labels:
    app: dgraph
    chart: dgraph-0.0.20
    component: zero
    release: release-name
    heritage: Helm
spec:
  serviceName: release-name-dgraph-zero-headless
  replicas: 3
  podManagementPolicy: "OrderedReady"
  updateStrategy:
    type: "RollingUpdate"
  selector:
    matchLabels:
      app: dgraph
      chart: dgraph-0.0.20
      release: release-name
      component: zero
  template:
    metadata:
      name: release-name-dgraph-zero
      annotations:
        prometheus.io/path: /debug/prometheus_metrics
        prometheus.io/port: "6080"
        prometheus.io/scrape: "true"
      labels:
        app: dgraph
        chart: dgraph-0.0.20
        release: release-name
        component: zero
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - zero
              topologyKey: kubernetes.io/hostname      
      containers:
      - name: release-name-dgraph-zero
        image: docker.io/dgraph/dgraph:v21.12.0
        ports:
        - containerPort: 5080
          name: grpc-zero
        - containerPort: 6080
          name: http-zero
        imagePullPolicy: "IfNotPresent"
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        command:
          - bash
          - "-c"
          - |
            set -ex
            [[ `hostname` =~ -([0-9]+)$ ]] || exit 1
              ordinal=${BASH_REMATCH[1]}
              idx=$(($ordinal + 1))
              if [[ $ordinal -eq 0 ]]; then
                exec dgraph zero --my=$(hostname -f | awk '{gsub(/\.$/,""); print $0}'):5080 --raft idx=$idx --replicas 5 
              else
                exec dgraph zero --my=$(hostname -f | awk '{gsub(/\.$/,""); print $0}'):5080 --peer release-name-dgraph-zero-0.release-name-dgraph-zero-headless.${POD_NAMESPACE}.svc.cluster.local:5080 --raft idx=$idx --replicas 5 
              fi
        resources:
          requests:
            memory: 100Mi
        volumeMounts:
        - name: datadir
          mountPath: /dgraph
      terminationGracePeriodSeconds: 60
      volumes:
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  volumeClaimTemplates:
    - metadata:
        name: datadir
        annotations:
          volume.alpha.kubernetes.io/storage-class: anything
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "32Gi"
