---
# Source: operator-effectiveness/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-operator-effectiveness
  labels:
    app.kubernetes.io/name: operator-effectiveness
    helm.sh/chart: operator-effectiveness-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
# Source: operator-effectiveness/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-operator-effectiveness
  labels:
    app.kubernetes.io/name: operator-effectiveness
    helm.sh/chart: operator-effectiveness-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  SCORING_DATABASE_PATH: "/data/operator.db"
  SCORING_ETH2_NODE_URL: "http://127.0.0.1:8545"
  SCORING_GRAPH_NODE_URL: "https://api.thegraph.com/subgraphs/name/stakewise/stakewise-mainnet"
  SCORING_SERVER_BIND_ADDR: "0.0.0.0:3000"
---
# Source: operator-effectiveness/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-operator-effectiveness
  labels:
    app.kubernetes.io/name: operator-effectiveness
    helm.sh/chart: operator-effectiveness-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: operator-effectiveness
    app.kubernetes.io/instance: release-name
---
# Source: operator-effectiveness/templates/deployment.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-operator-effectiveness
  labels:
    app.kubernetes.io/name: operator-effectiveness
    helm.sh/chart: operator-effectiveness-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: operator-effectiveness
      app.kubernetes.io/instance: release-name
  serviceName: release-name-operator-effectiveness
  template:
    metadata:
      labels:
        app.kubernetes.io/name: operator-effectiveness
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-operator-effectiveness
      securityContext:
        {}
      containers:
        - name: operator-effectiveness
          securityContext:
            {}
          image: "europe-west4-docker.pkg.dev/stakewiselabs/public/operator-effectiveness:v0.0.5"
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: release-name-operator-effectiveness
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {}
          volumeMounts:
            - name: data
              mountPath: /data
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/name: operator-effectiveness
          helm.sh/chart: operator-effectiveness-0.1.0
          app.kubernetes.io/instance: release-name
          app.kubernetes.io/managed-by: Helm
      spec:
        accessModes: [ReadWriteOnce]
        storageClassName: 
        resources:
          requests:
            storage: "100Gi"
---
# Source: operator-effectiveness/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-operator-effectiveness-test-connection"
  labels:
    app.kubernetes.io/name: operator-effectiveness
    helm.sh/chart: operator-effectiveness-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-operator-effectiveness:3000']
  restartPolicy: Never
