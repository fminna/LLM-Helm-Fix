---
# Source: kubernetes-sync/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: opslevel-sync
  labels:
    helm.sh/chart: kubernetes-sync-0.6.5
    app.kubernetes.io/name: kubernetes-sync
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2024.4.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    opslevel.com/description: A tool that enables you to import & reconcile services with
      OpsLevel from your Kubernetes clusters.
    opslevel.com/framework: client-go
    opslevel.com/language: go
    opslevel.com/tags.app_version: v2024.4.3
---
# Source: kubernetes-sync/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-kubernetes-sync
  labels:
    helm.sh/chart: kubernetes-sync-0.6.5
    app.kubernetes.io/name: kubernetes-sync
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2024.4.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    opslevel.com/description: A tool that enables you to import & reconcile services with
      OpsLevel from your Kubernetes clusters.
    opslevel.com/framework: client-go
    opslevel.com/language: go
    opslevel.com/tags.app_version: v2024.4.3
data:
  opslevel-k8s.yaml: |-
    
    version: "1.3.0"
    service:
      import:
        - selector:
            apiVersion: apps/v1
            kind: Deployment
            excludes:
                - .metadata.namespace == "kube-system"
                - .metadata.annotations."opslevel.com/ignore"
          opslevel:
            aliases:
                - '"k8s:\(.metadata.name)-\(.metadata.namespace)"'
                - '"\(.metadata.namespace)-\(.metadata.name)"'
            description: .metadata.annotations."opslevel.com/description"
            framework: .metadata.annotations."opslevel.com/framework"
            language: .metadata.annotations."opslevel.com/language"
            lifecycle: .metadata.annotations."opslevel.com/lifecycle"
            name: .metadata.name
            owner: .metadata.annotations."opslevel.com/owner"
            product: .metadata.annotations."opslevel.com/product"
            properties:
                prop_object: .metadata.annotations.prop_object
            repositories:
                - '{"name": "My Cool Repo", "directory": "", "repo": .metadata.annotations.repo} | if .repo then . else empty end'
                - .metadata.annotations.repo
                - '.metadata.annotations | to_entries |  map(select(.key | startswith("opslevel.com/repo"))) | map({"name": .key | split(".")[2], "directory": .key | split(".")[3:] | join("/"), "repo": .value})'
            system: ""
            tags:
                assign:
                    - '{"imported": "kubectl-opslevel"}'
                    - '.metadata.annotations | to_entries |  map(select(.key | startswith("opslevel.com/tags"))) | map({(.key | split(".")[2]): .value})'
                    - .metadata.labels
                create:
                    - '{"environment": .spec.template.metadata.labels.environment}'
            tier: .metadata.annotations."opslevel.com/tier"
            tools:
                - '{"category": "other", "environment": "production", "displayName": "my-cool-tool", "url": .metadata.annotations."example.com/my-cool-tool"} | if .url then . else empty end'
                - '.metadata.annotations | to_entries |  map(select(.key | startswith("opslevel.com/tools"))) | map({"category": .key | split(".")[2], "displayName": .key | split(".")[3], "url": .value})'
---
# Source: kubernetes-sync/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-kubernetes-sync
rules:
- apiGroups:
  - ""
  - "*"
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: kubernetes-sync/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sync
subjects:
- kind: ServiceAccount
  name: opslevel-sync
  namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-kubernetes-sync
  apiGroup: rbac.authorization.k8s.io
---
# Source: kubernetes-sync/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kubernetes-sync
  labels:
    helm.sh/chart: kubernetes-sync-0.6.5
    app.kubernetes.io/name: kubernetes-sync
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v2024.4.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    opslevel.com/description: A tool that enables you to import & reconcile services with
      OpsLevel from your Kubernetes clusters.
    opslevel.com/framework: client-go
    opslevel.com/language: go
    opslevel.com/tags.app_version: v2024.4.3
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubernetes-sync
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: kubernetes-sync-0.6.5
        app.kubernetes.io/name: kubernetes-sync
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "v2024.4.3"
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/config: 412c214f8fb30498672c6dae8211b780bafe4a99bff56db656b7ded3a7bd61e7
    spec:
      serviceAccountName: opslevel-sync
      initContainers:
      containers:
      - name: kubernetes-sync
        image: public.ecr.aws/opslevel/kubectl-opslevel:v2024.4.3
        imagePullPolicy: IfNotPresent
        args:
          - service
          - reconcile
          - --config
          - /app/opslevel-k8s.yaml
        envFrom:
        - secretRef:
            name: opslevel-api-token
            optional: true
        volumeMounts:
        - name: config
          mountPath: /app
      volumes:
      - name: config
        configMap:
          name: release-name-kubernetes-sync
