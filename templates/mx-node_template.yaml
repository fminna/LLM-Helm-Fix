---
# Source: mx-node/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-mx-node
  labels:
    helm.sh/chart: mx-node-0.1.0
    app.kubernetes.io/name: mx-node
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.3.50.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: mx-node/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mx-node-api
  labels:
    helm.sh/chart: mx-node-0.1.0
    app.kubernetes.io/name: mx-node
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.3.50.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      nodePort: 
      targetPort: api
      protocol: TCP
      name: api
  selector:
    app.kubernetes.io/name: mx-node
    app.kubernetes.io/instance: release-name
---
# Source: mx-node/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mx-node-p2p
  labels:
    helm.sh/chart: mx-node-0.1.0
    app.kubernetes.io/name: mx-node
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.3.50.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 37373
      nodePort: 32767
      targetPort: p2p
      protocol: TCP
      name: p2p
  selector:
    app.kubernetes.io/name: mx-node
    app.kubernetes.io/instance: release-name
---
# Source: mx-node/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-mx-node
  labels:
    helm.sh/chart: mx-node-0.1.0
    app.kubernetes.io/name: mx-node
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.3.50.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  serviceName: release-name-mx-node
  selector:
    matchLabels:
      app.kubernetes.io/name: mx-node
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mx-node
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-mx-node
      securityContext:
        {}
      containers:
        - name: mx-node
          securityContext:
            {}
          image: "bicarus/elrond-rosetta:v1.3.50.0"
          imagePullPolicy: IfNotPresent
          args:
            - --destination-shard-as-observer=0
            - --log-save
            - --log-level=*:DEBUG
            - --log-logger-name
            - --rest-api-interface=0.0.0.0:8080
            - --working-directory=/data
            - --validator-key-pem-file=/data/observerKey.pem
            - --serialize-snapshots
            - --disable-consensus-watchdog
          env:
            - name: NETWORK
              value: "devnet"
            - name: PROGRAM
              value: "node"
            - name: DOWNLOAD_CHAIN_ID
              value: "D"
            - name: DOWNLOAD_NON_PRUNED_EPOCHS
              value: "false"
            - name: DOWNLOAD_NON_PRUNED_EPOCHS_URL
              value: "https://example.example.example.com/devnet"
            - name: DOWNLOAD_REGULAR_ARCHIVE
              value: "false"
            - name: DOWNLOAD_REGULAR_ARCHIVE_URL
              value: "https://example.example.example-example.example.com/devnet/day/archive.tar.gz"
            - name: DOWNLOAD_EPOCH_FIRST
              value: "1160"
            - name: DOWNLOAD_EPOCH_LAST
              value: "2824"
            - name: FULL_ARCHIVE
              value: "false"
            - name: ELASTICSEARCH_ENABLE
              value: "false"
            - name: ELASTICSEARCH_INDEXER_CACHE_SIZE
              value: "0"
            - name: ELASTICSEARCH_BULK_REQUEST_MAX_SIZE_IN_BYTES
              value: "4.194304e+06"
            - name: ELASTICSEARCH_URL
              value: http://localhost:9201
            - name: ELASTICSEARCH_USE_KIBANA
              value: "false"
            - name: ELASTICSEARCH_USERNAME
              value: 
            - name: ELASTICSEARCH_PASSWORD
              value: 
            - name: EVENT_NOTIFIER_ENABLE
              value: "false"
            - name: EVENT_NOTIFIER_USE_AUTHORIZATION
              value: "false"
            - name: EVENT_NOTIFIER_PROXY_URL
              value: http://localhost:5000
            - name: EVENT_NOTIFIER_USERNAME
              value: 
            - name: EVENT_NOTIFIER_PASSWORD
              value: 
            - name: COVALENT_ENABLE
              value: "false"
            - name: COVALENT_PROXY_URL
              value: "localhost:21111"
            - name: COVALENT_ROUTE_SEND_DATA
              value: "/block"
            - name: COVALENT_ROUTE_ACKNOWLEDGE_DATA
              value: "/acknowledge"
          ports:
            - name: api
              containerPort: 8080
              protocol: TCP
            - name: p2p
              containerPort: 37373
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {}
          volumeMounts:
            - name: release-name-mx-node-data
              mountPath: /data
  volumeClaimTemplates:
    - metadata:
        name: release-name-mx-node-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 500Gi
---
# Source: mx-node/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-mx-node-test-connection"
  labels:
    helm.sh/chart: mx-node-0.1.0
    app.kubernetes.io/name: mx-node
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.3.50.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-mx-node:']
  restartPolicy: Never
