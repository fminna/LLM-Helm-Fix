---
# Source: starter-kit/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-starter-kit
  labels:
    app: starter-kit
    helm.sh/chart: starter-kit-0.6.2
    app.kubernetes.io/name: starter-kit
    app.kubernetes.io/instance: release-name
    version: "0.6.0"
    app.kubernetes.io/version: "0.6.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: starter-kit/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-starter-kit
  labels:
    app: starter-kit
    helm.sh/chart: starter-kit-0.6.2
    app.kubernetes.io/name: starter-kit
    app.kubernetes.io/instance: release-name
    version: "0.6.0"
    app.kubernetes.io/version: "0.6.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: starter-kit
    app.kubernetes.io/instance: release-name
---
# Source: starter-kit/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-starter-kit
  labels:
    app: starter-kit
    helm.sh/chart: starter-kit-0.6.2
    app.kubernetes.io/name: starter-kit
    app.kubernetes.io/instance: release-name
    version: "0.6.0"
    app.kubernetes.io/version: "0.6.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: starter-kit
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: starter-kit
        helm.sh/chart: starter-kit-0.6.2
        app.kubernetes.io/name: starter-kit
        app.kubernetes.io/instance: release-name
        version: "0.6.0"
        app.kubernetes.io/version: "0.6.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: release-name-starter-kit
      securityContext:
        {}
      containers:
        - name: starter-kit
          securityContext:
            {}
          image: "bitnami/nginx:0.6.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: JAEGER_SERVICE_NAME
              value: release-name-starter-kit
            - name: IMAGE_NAME
              value: release-name-starter-kit
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 60
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 60
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          resources:
            limits:
              cpu: 500m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 128Mi
