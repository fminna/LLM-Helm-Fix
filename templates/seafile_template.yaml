---
# Source: seafile/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-seafile
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: seafile
    app.kubernetes.io/version: 10.0.1
    helm.sh/chart: seafile-3.2.0
  annotations:
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: seafile
    app.kubernetes.io/instance: release-name
---
# Source: seafile/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-seafile
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: seafile
    app.kubernetes.io/version: 10.0.1
    helm.sh/chart: seafile-3.2.0
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: seafile
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: seafile
        app.kubernetes.io/instance: release-name
    spec:
      
      serviceAccountName: default
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: release-name-seafile
          image: "seafileltd/seafile-mc:10.0.1"
          imagePullPolicy: IfNotPresent
          env:
            - name: DB_HOST
              value: seafile-mariadb
            - name: DB_ROOT_PASSWD
              value: seafilerootpass
            - name: SEAFILE_ADMIN_EMAIL
              value: example@example.com
            - name: SEAFILE_ADMIN_PASSWORD
              value: seafileadminpass
            - name: SEAFILE_SERVER_HOSTNAME
              value: null
            - name: SEAFILE_SERVER_LETSENCRYPT
              value: "false"
            - name: TIME_ZONE
              value: Etc/UTC
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
