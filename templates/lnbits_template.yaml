---
# Source: lnbits/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-lnbits
  labels:
    helm.sh/chart: lnbits-0.1.0
    app.kubernetes.io/name: lnbits
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: lnbits/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-lnbits-data
  labels:
    app: release-name-lnbits-data
    type: local
    chart: "lnbits-0.1.0"
    release: "release-name"
    heritage: "Helm"
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: "1G"
---
# Source: lnbits/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-lnbits
  labels:
    helm.sh/chart: lnbits-0.1.0
    app.kubernetes.io/name: lnbits
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 5000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: lnbits
    app.kubernetes.io/instance: release-name
---
# Source: lnbits/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-lnbits
  labels:
    helm.sh/chart: lnbits-0.1.0
    app.kubernetes.io/name: lnbits
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: lnbits
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: lnbits
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-lnbits
      securityContext:
        {}
      containers:
        - name: lnbits
          securityContext:
            {}
          image: "lnbitsdocker/lnbits-legend:latest"
          imagePullPolicy: IfNotPresent
          env:
            # - name: LNBITS_BACKEND_WALLET_CLASS
            #   value: LndWallet
            - name: LND_GRPC_ENDPOINT
              value: lnd.alice.svc.cluster.local
            - name: LND_GRPC_PORT
              value: "5000"
            - name: LND_GRPC_CERT
              value: "/mnt/certs/.lnd/tls.cert"
            - name: LND_GRPC_MACAROON
              value: "/mnt/certs/.lnd/data/chain/regtest/admin.macaroon"
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
          volumeMounts:
            - name: data
              mountPath: /app/lnbits/data
            - name: certs
              mountPath: /mnt/certs
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: release-name-lnbits-data
        - name: certs
          persistentVolumeClaim:claimName: release-name-lnbits-certs
---
# Source: lnbits/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-lnbits
  labels:
    helm.sh/chart: lnbits-0.1.0
    app.kubernetes.io/name: lnbits
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
    - host: "lnbits.alice.localhost"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: release-name-lnbits
                port:
                  number: 5000
---
# Source: lnbits/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-lnbits-test-connection"
  labels:
    helm.sh/chart: lnbits-0.1.0
    app.kubernetes.io/name: lnbits
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-lnbits:5000']
  restartPolicy: Never
