---
# Source: haproxy-ingress/templates/controller-poddisruptionbudget.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  labels:
    app: haproxy-ingress
    chart: haproxy-ingress-0.0.13
    component: "controller"
    release: release-name
    heritage: Helm
  name: release-name-haproxy-ingress-controller
spec:
  selector:
    matchLabels:
      app: haproxy-ingress
      release: release-name
      component: "controller"
  minAvailable: 1
---
# Source: haproxy-ingress/templates/default-backend-poddisruptionbudget.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  labels:
    app: haproxy-ingress
    chart: haproxy-ingress-0.0.13
    component: "default-backend"
    release: release-name
    heritage: Helm
  name: release-name-haproxy-ingress-default-backend
spec:
  selector:
    matchLabels:
      app: haproxy-ingress
      release: release-name
      component: "default-backend"
  minAvailable: 1
---
# Source: haproxy-ingress/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: haproxy-ingress
    chart: haproxy-ingress-0.0.13
    release: release-name
    heritage: Helm
  name: release-name-haproxy-ingress
---
# Source: haproxy-ingress/templates/controller-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: haproxy-ingress
    chart: haproxy-ingress-0.0.13
    component: "controller"
    release: release-name
    heritage: Helm
  name: release-name-haproxy-ingress-controller
data:
  healthz-port: "10253"
  stats-port: "1936"
---
# Source: haproxy-ingress/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    app: haproxy-ingress
    chart: haproxy-ingress-0.0.13
    release: release-name
    heritage: Helm
  name: release-name-haproxy-ingress
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - nodes
      - pods
      - secrets
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - extensions
    resources:
      - ingresses/status
    verbs:
      - update
---
# Source: haproxy-ingress/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app: haproxy-ingress
    chart: haproxy-ingress-0.0.13
    release: release-name
    heritage: Helm
  name: release-name-haproxy-ingress
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-haproxy-ingress
subjects:
  - kind: ServiceAccount
    name: release-name-haproxy-ingress
    namespace: default
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: release-name-haproxy-ingress
---
# Source: haproxy-ingress/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  labels:
    app: haproxy-ingress
    chart: haproxy-ingress-0.0.13
    release: release-name
    heritage: Helm
  name: release-name-haproxy-ingress
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
    verbs:
      - get
      - create
      - update
---
# Source: haproxy-ingress/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  labels:
    app: haproxy-ingress
    chart: haproxy-ingress-0.0.13
    release: release-name
    heritage: Helm
  name: release-name-haproxy-ingress
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-haproxy-ingress
subjects:
  - kind: ServiceAccount
    name: release-name-haproxy-ingress
    namespace: default
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: release-name-haproxy-ingress
---
# Source: haproxy-ingress/templates/controller-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: haproxy-ingress
    chart: haproxy-ingress-0.0.13
    component: "controller"
    release: release-name
    heritage: Helm
  name: release-name-haproxy-ingress-controller
  namespace: default
spec:
  ports:
    - name: "80-http"
      port: 80
      protocol: TCP
      targetPort: http
    - name: "80-http"
      port: 80
      protocol: TCP
      targetPort: http
    - name: "80-http"
      port: 80
      protocol: TCP
      targetPort: http
    - name: "443-https"
      port: 443
      protocol: TCP
      targetPort: https
    - name: "443-https"
      port: 443
      protocol: TCP
      targetPort: https
    - name: "443-https"
      port: 443
      protocol: TCP
      targetPort: https
  selector:
    app: haproxy-ingress
    component: "controller"
    release: release-name
  type: "LoadBalancer"
---
# Source: haproxy-ingress/templates/default-backend-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: haproxy-ingress
    chart: haproxy-ingress-0.0.13
    component: "default-backend"
    release: release-name
    heritage: Helm
  name: release-name-haproxy-ingress-default-backend
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: http
  selector:
    app: haproxy-ingress
    component: "default-backend"
    release: release-name
  type: "ClusterIP"
---
# Source: haproxy-ingress/templates/controller-deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    app: haproxy-ingress
    chart: haproxy-ingress-0.0.13
    component: "controller"
    release: release-name
    heritage: Helm
  name: release-name-haproxy-ingress-controller
spec:
  replicas: 1
  revisionHistoryLimit: 
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  minReadySeconds: 0
  selector:
    matchLabels:
      app: haproxy-ingress
      release: release-name
  template:
    metadata:
      annotations:
      labels:
        app: haproxy-ingress
        component: "controller"
        release: release-name
    spec:
      serviceAccountName: release-name-haproxy-ingress
      containers:
        - name: haproxy-ingress
          image:  "quay.io/jcmoraisjr/haproxy-ingress:v0.7.1"
          imagePullPolicy: "IfNotPresent"
          args:
            - --configmap=default/release-name-haproxy-ingress-controller
            - --ingress-class=haproxy
            - --sort-backends
            - --default-backend-service=default/release-name-haproxy-ingress-default-backend
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
            - name: healthz
              containerPort: 10253
          livenessProbe:
            httpGet:
              path: "/healthz"
              port: 10253
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: "/healthz"
              port: 10253
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            {}
      terminationGracePeriodSeconds: 60
      dnsPolicy: ClusterFirst
      hostNetwork: false
---
# Source: haproxy-ingress/templates/default-backend-deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    app: haproxy-ingress
    chart: haproxy-ingress-0.0.13
    component: "default-backend"
    heritage: Helm
    release: release-name
  name: release-name-haproxy-ingress-default-backend
spec:
  selector:
    matchLabels:
      app: haproxy-ingress
      release: release-name
  template:
    metadata:
      labels:
        app: haproxy-ingress
        component: "default-backend"
        release: release-name
    spec:
      containers:
        - name: default-backend
          image: "registry.cn-hangzhou.aliyuncs.com/kubeapps/gcr-defaultbackend:1.0"
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            limits:
              cpu: 10m
              memory: 20Mi
      terminationGracePeriodSeconds: 60
