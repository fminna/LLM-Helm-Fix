---
# Source: sunflare-tools/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-sunflare-tools
  labels:
    helm.sh/chart: sunflare-tools-1.1.0
    app.kubernetes.io/name: sunflare-tools
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
---
# Source: sunflare-tools/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ip-release-name-sunflare-tools
  labels:
    helm.sh/chart: sunflare-tools-1.1.0
    app.kubernetes.io/name: sunflare-tools
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: sunflare-tools
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/type: ip
---
# Source: sunflare-tools/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: whoami-release-name-sunflare-tools
  labels:
    helm.sh/chart: sunflare-tools-1.1.0
    app.kubernetes.io/name: sunflare-tools
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: sunflare-tools
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/type: whoami
---
# Source: sunflare-tools/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: password-release-name-sunflare-tools
  labels:
    helm.sh/chart: sunflare-tools-1.1.0
    app.kubernetes.io/name: sunflare-tools
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: sunflare-tools
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/type: password
---
# Source: sunflare-tools/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: uuid-release-name-sunflare-tools
  labels:
    helm.sh/chart: sunflare-tools-1.1.0
    app.kubernetes.io/name: sunflare-tools
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: sunflare-tools
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/type: uuid
---
# Source: sunflare-tools/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dns-release-name-sunflare-tools
  labels:
    helm.sh/chart: sunflare-tools-1.1.0
    app.kubernetes.io/name: sunflare-tools
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: sunflare-tools
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/type: dns
---
# Source: sunflare-tools/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: host-release-name-sunflare-tools
  labels:
    helm.sh/chart: sunflare-tools-1.1.0
    app.kubernetes.io/name: sunflare-tools
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: sunflare-tools
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/type: host
---
# Source: sunflare-tools/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ip-release-name-sunflare-tools
  labels:
    helm.sh/chart: sunflare-tools-1.1.0
    app.kubernetes.io/name: sunflare-tools
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sunflare-tools
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/type: ip
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sunflare-tools
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/type: ip
    spec:
      serviceAccountName: release-name-sunflare-tools
      securityContext:
        {}
      containers:
        - name: sunflare-tools
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          image: "glenndehaan/sunflare-tools:latest"
          imagePullPolicy: Always
          command: ["dumb-init", "ip"]
          env:
            - name: HELM_CHART_VERSION
              value: "v1.1.0"
            - name: RUST_LOG
              value: "info"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /_health
              port: http
          readinessProbe:
            httpGet:
              path: /_health
              port: http
          resources:
            limits:
              memory: 25Mi
            requests:
              memory: 25Mi
---
# Source: sunflare-tools/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: whoami-release-name-sunflare-tools
  labels:
    helm.sh/chart: sunflare-tools-1.1.0
    app.kubernetes.io/name: sunflare-tools
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sunflare-tools
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/type: whoami
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sunflare-tools
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/type: whoami
    spec:
      serviceAccountName: release-name-sunflare-tools
      securityContext:
        {}
      containers:
        - name: sunflare-tools
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          image: "glenndehaan/sunflare-tools:latest"
          imagePullPolicy: Always
          command: ["dumb-init", "whoami"]
          env:
            - name: HELM_CHART_VERSION
              value: "v1.1.0"
            - name: RUST_LOG
              value: "info"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /_health
              port: http
          readinessProbe:
            httpGet:
              path: /_health
              port: http
          resources:
            limits:
              memory: 25Mi
            requests:
              memory: 25Mi
---
# Source: sunflare-tools/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: password-release-name-sunflare-tools
  labels:
    helm.sh/chart: sunflare-tools-1.1.0
    app.kubernetes.io/name: sunflare-tools
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sunflare-tools
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/type: password
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sunflare-tools
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/type: password
    spec:
      serviceAccountName: release-name-sunflare-tools
      securityContext:
        {}
      containers:
        - name: sunflare-tools
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          image: "glenndehaan/sunflare-tools:latest"
          imagePullPolicy: Always
          command: ["dumb-init", "password"]
          env:
            - name: HELM_CHART_VERSION
              value: "v1.1.0"
            - name: RUST_LOG
              value: "info"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /_health
              port: http
          readinessProbe:
            httpGet:
              path: /_health
              port: http
          resources:
            limits:
              memory: 25Mi
            requests:
              memory: 25Mi
---
# Source: sunflare-tools/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uuid-release-name-sunflare-tools
  labels:
    helm.sh/chart: sunflare-tools-1.1.0
    app.kubernetes.io/name: sunflare-tools
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sunflare-tools
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/type: uuid
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sunflare-tools
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/type: uuid
    spec:
      serviceAccountName: release-name-sunflare-tools
      securityContext:
        {}
      containers:
        - name: sunflare-tools
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          image: "glenndehaan/sunflare-tools:latest"
          imagePullPolicy: Always
          command: ["dumb-init", "uuid"]
          env:
            - name: HELM_CHART_VERSION
              value: "v1.1.0"
            - name: RUST_LOG
              value: "info"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /_health
              port: http
          readinessProbe:
            httpGet:
              path: /_health
              port: http
          resources:
            limits:
              memory: 25Mi
            requests:
              memory: 25Mi
---
# Source: sunflare-tools/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dns-release-name-sunflare-tools
  labels:
    helm.sh/chart: sunflare-tools-1.1.0
    app.kubernetes.io/name: sunflare-tools
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sunflare-tools
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/type: dns
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sunflare-tools
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/type: dns
    spec:
      serviceAccountName: release-name-sunflare-tools
      securityContext:
        {}
      containers:
        - name: sunflare-tools
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          image: "glenndehaan/sunflare-tools:latest"
          imagePullPolicy: Always
          command: ["dumb-init", "dns"]
          env:
            - name: HELM_CHART_VERSION
              value: "v1.1.0"
            - name: RUST_LOG
              value: "info"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /_health
              port: http
          readinessProbe:
            httpGet:
              path: /_health
              port: http
          resources:
            limits:
              memory: 25Mi
            requests:
              memory: 25Mi
---
# Source: sunflare-tools/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: host-release-name-sunflare-tools
  labels:
    helm.sh/chart: sunflare-tools-1.1.0
    app.kubernetes.io/name: sunflare-tools
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sunflare-tools
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/type: host
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sunflare-tools
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/type: host
    spec:
      serviceAccountName: release-name-sunflare-tools
      securityContext:
        {}
      containers:
        - name: sunflare-tools
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          image: "glenndehaan/sunflare-tools:latest"
          imagePullPolicy: Always
          command: ["dumb-init", "host"]
          env:
            - name: HELM_CHART_VERSION
              value: "v1.1.0"
            - name: RUST_LOG
              value: "info"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /_health
              port: http
          readinessProbe:
            httpGet:
              path: /_health
              port: http
          resources:
            limits:
              memory: 25Mi
            requests:
              memory: 25Mi
