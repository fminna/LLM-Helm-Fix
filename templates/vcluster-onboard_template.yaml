---
# Source: vcluster-onboard/templates/serviceaccounts/vcluster-onboard.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vcluster-onboard-release-name
  namespace: default
---
# Source: vcluster-onboard/templates/configmaps/vcluster-helm-values.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: vcluster-helm-values-release-name
  namespace: default
data:
  satelite.yaml: |
    cert_template:
        c: MyCountry
        l: My Cluster
        o: MyOrg
        ou: Kubernetes
        st: State of Cluster
    certs:
        use_k8s_cm: false
    dashboard:
        cert_name: kubernetes-dashboard-certs
        label: app.kubernetes.io/name=kubernetes-dashboard
        namespace: kubernetes-dashboard
        require_session: true
        service_name: kubernetes-dashboard
    enable_impersonation: true
    image: ghcr.io/openunison/openunison-k8s:1.0.40
    impersonation:
        explicit_certificate_trust: true
        jetstack_oidc_proxy_image: ghcr.io/tremolosecurity/kube-oidc-proxy:1.0.6
        use_jetstack: true
    k8s_cluster_name: 
    monitoring:
        prometheus_service_account: system:serviceaccount:monitoring:prometheus-k8s
    myvd_config_path: WEB-INF/myvd.conf
    network:
        api_server_host: 
        createIngressCertificate: 
        dashboard_host: 
        force_redirect_to_tls: false
        ingress_type: nginx
        k8s_url: ""
        openunison_host: 
        session_inactivity_timeout_seconds: 900
        
    network_policies:
        apiserver:
            enabled: false
            labels:
                app.kubernetes.io/name: kube-system
        enabled: false
        ingress:
            enabled: true
            labels:
                app.kubernetes.io/name: ingress-nginx
        monitoring:
            enabled: true
            labels:
                app.kubernetes.io/name: monitoring
    openunison:
        enable_provisioning: false
        html:
            image: ghcr.io/openunison/openunison-k8s-html:1.0.0
        non_secret_data:
            K8S_DB_SSO: oidc
            PROMETHEUS_SERVICE_ACCOUNT: system:serviceaccount:monitoring:prometheus-k8s
            SHOW_PORTAL_ORGS: "false"
        replicas: 1
        secrets: []
        az_groups:
        
    services:
        enable_tokenrequest: false
        node_selectors: []
        token_request_audience: api
        token_request_expiration_seconds: 600
    trusted_certs: []
---
# Source: vcluster-onboard/templates/clusterroles/vcluster-onboard-crds.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vcluster-onboard-crds-release-name
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - 'get'
---
# Source: vcluster-onboard/templates/clusterrolebindings/vcluster-onboard-crds.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vcluster-onboard-crds-release-name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vcluster-onboard-crds-release-name
subjects:
- kind: ServiceAccount
  name: vcluster-onboard-release-name
  namespace: default
---
# Source: vcluster-onboard/templates/roles/vcluster-onboard-create-obj.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: vcluster-onboard-create-obj-release-name
  namespace: default
rules:
- apiGroups:
  - openunison.tremolo.io
  resources:
  - applications
  - groupmetadatas
  - orgs
  - targets
  - portalurls
  - workflows
  verbs:
  - 'get'
  - 'create'
  - 'update'
  - 'delete'
  - 'patch'
---
# Source: vcluster-onboard/templates/roles/vcluster-onboard-openunison.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: vcluster-onboard-openunison-release-name
  namespace: default
rules:
- apiGroups:
  - openunison.tremolo.io
  resources:
  - openunisons
  verbs:
  - 'get'
---
# Source: vcluster-onboard/templates/rolebindings/vcluster-onboard-create-obj.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: vcluster-onboard-create-obj-release-name
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: vcluster-onboard-create-obj-release-name
subjects:
- kind: ServiceAccount
  name: vcluster-onboard-release-name
  namespace: default
---
# Source: vcluster-onboard/templates/rolebindings/vcluster-onboard-openunison.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: vcluster-onboard-openunison-release-name
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: vcluster-onboard-openunison-release-name
subjects:
- kind: ServiceAccount
  name: vcluster-onboard-release-name
  namespace: default
---
# Source: vcluster-onboard/templates/rolebindings/vcluster-onboard-vcluster.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: vcluster-onboard-vcluster-release-name
  namespace: 
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
- kind: ServiceAccount
  name: vcluster-onboard-release-name
  namespace: default
---
# Source: vcluster-onboard/templates/rolebindings/vcluster-onboard.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: vcluster-onboard-release-name
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
- kind: ServiceAccount
  name: vcluster-onboard-release-name
  namespace: default
---
# Source: vcluster-onboard/templates/jobs/vcluster-onboard.yaml
kind: Job
apiVersion: batch/v1
metadata:
  name: onboard-vcluster-release-name
  namespace: default
spec:
  parallelism: 1
  completions: 1
  backoffLimit: 3
  selector:
    matchLabels:
      job-name: onboard-vcluster-release-name
  template:
    metadata:
      name: vcluster-onboard-release-name
      namespace: default
      labels:
        job-name: onboard-vcluster-release-name
    spec:
        containers:
        - args:
            - /usr/local/openunison/onboard-cluster.sh
          image: ghcr.io/tremolosecurity/vcluster-onboard:1.0.0
          imagePullPolicy: Always
          name: vcluster-onboard
          resources: {}
          volumeMounts:
            - mountPath: /etc/openunison
              name: vcluster-helm-values
          env:
          - name: VCLUSTER_NAME
            value: 
          - name: VCLUSTER_NAMESPACE
            value: 
          - name: TREMOLO_HELM_REPO
            value: https://nexus.tremolo.io/repository/helm/
          - name: K8S_DASHBOARD_HELM_REPO
            value: https://kubernetes.github.io/dashboard/
          - name: VCLUSTER_LABEL
            value: 
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - "all"
        dnsPolicy: ClusterFirst
        serviceAccount: vcluster-onboard-release-name
        serviceAccountName: vcluster-onboard-release-name
        restartPolicy: OnFailure
        
        securityContext:
          fsGroup: 433
          supplementalGroups: [433]
          seccompProfile:
            type: RuntimeDefault
          runAsNonRoot: true
          runAsUser: 431
          runAsGroup: 433
        
        volumes:
        - name: vcluster-helm-values
          configMap:
            name: vcluster-helm-values-release-name
