---
# Source: databend-meta/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-databend-meta
  labels:
    helm.sh/chart: databend-meta-0.7.3
    app.kubernetes.io/name: databend-meta
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.2.279"
    app.kubernetes.io/managed-by: Helm
---
# Source: databend-meta/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-databend-meta
  labels:
    helm.sh/chart: databend-meta-0.7.3
    app.kubernetes.io/name: databend-meta
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.2.279"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  publishNotReadyAddresses: true
  clusterIP: None
  ports:
    - port: 28002
      targetPort: admin
      protocol: TCP
      name: admin
    - port: 9191
      targetPort: grpc
      protocol: TCP
      name: grpc
  selector:
    app.kubernetes.io/name: databend-meta
    app.kubernetes.io/instance: release-name
---
# Source: databend-meta/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-databend-meta
  labels:
    helm.sh/chart: databend-meta-0.7.3
    app.kubernetes.io/name: databend-meta
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.2.279"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: release-name-databend-meta
  replicas: 1
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app.kubernetes.io/name: databend-meta
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: databend-meta
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-databend-meta
      securityContext:
        {}
      initContainers:
      containers:
        - name: databend-meta
          securityContext:
            {}
          image: "datafuselabs/databend-meta:v1.2.279"
          imagePullPolicy: IfNotPresent
          command: ["/bin/bash", "-c"]
          args:
            -  |
              echo "check if my service is running and run commands ";
              if [[ $POD_NAME =~ (.*)-([0-9]+)$ ]]
              then
                NAME=${BASH_REMATCH[1]}
                ID=${BASH_REMATCH[2]}
                echo "ID: $ID" "NAME : $NAME"
                case ${BASH_REMATCH[2]} in
                  0)
                    echo "initialize leader node";
                    exec /databend-meta --id ${ID} \
                      --log-stderr-on \
                      --log-stderr-level "WARN" \
                      --log-file-level "INFO" \
                      --log-file-dir "/data/databend-meta/log" \
                      --max-applied-log-to-keep 102400 \
                      --raft-dir "/data/databend-meta/raft" \
                      --admin-api-address ${POD_IP}:28002 \
                      --grpc-api-address ${POD_IP}:9191 \
                      --raft-api-port 28004 \
                      --raft-listen-host ${POD_IP} \
                      --raft-advertise-host ${POD_NAME}.release-name-databend-meta.${POD_NAMESPACE}.svc.cluster.local \
                      --grpc-api-advertise-host ${POD_IP} \
                      --config-id ${ID} \
                      --single
                  ;;
                  *)
                    echo "initialize follower node";
                    exec /databend-meta --id ${ID} \
                      --log-stderr-on \
                      --log-stderr-level "WARN" \
                      --log-file-level "INFO" \
                      --log-file-dir "/data/databend-meta/log" \
                      --max-applied-log-to-keep 102400 \
                      --raft-dir "/data/databend-meta/raft" \
                      --admin-api-address ${POD_IP}:28002 \
                      --grpc-api-address ${POD_IP}:9191 \
                      --raft-api-port 28004 \
                      --raft-listen-host ${POD_IP} \
                      --raft-advertise-host ${POD_NAME}.release-name-databend-meta.${POD_NAMESPACE}.svc.cluster.local \
                      --grpc-api-advertise-host ${POD_IP} \
                      --config-id ${ID} \
                      --join ${NAME}-0.release-name-databend-meta.${POD_NAMESPACE}.svc.cluster.local:28004
                  ;;
                esac
              else
                echo pod name $POD_NAME is not valid && exit 1
              fi
          ports:
            - name: admin
              containerPort: 28002
            - name: raft
              containerPort: 28004
            - name: grpc
              containerPort: 9191
          livenessProbe:
            httpGet:
              path: /v1/health
              port: admin
          readinessProbe:
            httpGet:
              path: /v1/health
              port: admin
            initialDelaySeconds: 5
            periodSeconds: 15
            failureThreshold: 3
          resources:
            {}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          volumeMounts:
            - name: data
              mountPath: /data/databend-meta
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
