---
# Source: nfs-provisioner/templates/storageclass.yaml
kind: StorageClass
apiVersion: storage.k8s.io/v1beta1
metadata:
  name: local-nfs
  
provisioner: cluster.local/nfs
---
# Source: nfs-provisioner/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-nfs-provisi
  labels:
    app: release-name-nfs-provisi
    chart: "nfs-provisioner-0.2.2"
    release: "release-name"
    heritage: "Helm"
  annotations:
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
  storageClassName: "generic"
---
# Source: nfs-provisioner/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: release-name-nfs-provisi
  labels:
    app: release-name-nfs-provisi
    chart: "nfs-provisioner-0.2.2"
    release: "release-name"
    heritage: "Helm"
spec:
  
  type: ClusterIP
  ports:
    - name: nfs
      port: 2049
    - name: mountd
      port: 20048
    - name: rpcbind
      port: 111
    - name: rpcbind-udp
      port: 111
      protocol: UDP
  selector:
    app: release-name-nfs-provisi
---
# Source: nfs-provisioner/templates/statefulset.yaml
kind: StatefulSet
apiVersion: apps/v1beta1
metadata:
  name: release-name-nfs-provisi
  labels:
    app: release-name-nfs-provisi
    chart: "nfs-provisioner-0.2.2"
    release: "release-name"
    heritage: "Helm"
spec:
  serviceName: release-name-nfs-provisi
  replicas: 1
  template:
    metadata:
      labels:
        app: release-name-nfs-provisi
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
    spec:
      terminationGracePeriodSeconds: 0
      containers:
        - name: release-name-nfs-provisi
          image: quay.io/kubernetes_incubator/nfs-provisioner:v1.0.9
          ports:
            - name: nfs
              containerPort: 2049
            - name: mountd
              containerPort: 20048
            - name: rpcbind
              containerPort: 111
            - name: rpcbind-udp
              containerPort: 111
              protocol: UDP
          securityContext:
            capabilities:
              add:
                - DAC_READ_SEARCH
          args:
            - "-provisioner=cluster.local/nfs"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SERVICE_NAME
              value: release-name-nfs-provisi
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: data
              mountPath: /export
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: release-name-nfs-provisi
