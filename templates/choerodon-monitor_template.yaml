---
# Source: choerodon-monitor/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-choerodon-monitor
  namespace: default
  labels:
    app.kubernetes.io/name: choerodon-monitor
    helm.sh/chart: choerodon-monitor-2.0.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  
  ports:
    - name: server
      port: 8260
      targetPort: server
      nodePort: null
    - name: actuator
      port: 8261
      targetPort: actuator
      nodePort: null
  selector:
    app.kubernetes.io/name: choerodon-monitor
    app.kubernetes.io/instance: release-name
---
# Source: choerodon-monitor/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-choerodon-monitor
  namespace: default
  labels:
    app.kubernetes.io/name: choerodon-monitor
    helm.sh/chart: choerodon-monitor-2.0.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: choerodon-monitor
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: choerodon-monitor
        helm.sh/chart: choerodon-monitor-2.0.1
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
    spec:
      
      enableServiceLinks: false
      automountServiceAccountToken: false
      serviceAccountName: default
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: choerodon-monitor
                    app.kubernetes.io/instance: release-name
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 33
      initContainers:
        - name: server-volume
          image:  registry.cn-shanghai.aliyuncs.com/c7n/choerodon-monitor:2.0.1
          imagePullPolicy: "IfNotPresent"
          command:
            - /bin/sh
            - -ecx
            - |
              cp -rfp /choerodon/* /opt/choerodon
          securityContext:
            runAsUser: 33
          volumeMounts:
            - name: volume
              mountPath: /opt/choerodon
      containers:
        - name: "choerodon-monitor"
          image: registry.cn-shanghai.aliyuncs.com/c7n/javabase:jdk8u282-b08
          imagePullPolicy: "IfNotPresent"
          workingDir: /opt/choerodon
          securityContext:
            runAsUser: 33
          args:
            - "/bin/sh"
            - "-ecx"
            - "java $SKYWALKING_OPTS $JAVA_OPTS -jar /opt/choerodon/choerodon-monitor.jar"
          env:
            - name: SERVER_PORT
              value: "8260"
            - name: MANAGEMENT_SERVER_PORT
              value: "8261"
            - name: CHART_VERSION
              value: "2.0.1"
            
            - name: "EUREKA_CLIENT_SERVICEURL_DEFAULTZONE"
              value: "http://register-server:8000/eureka/"
            - name: "FEIGN_CLIENT_CONFIG_DEFAULT_CONNECT_TIMEOUT"
              value: "2000"
            - name: "FEIGN_CLIENT_CONFIG_DEFAULT_READ_TIMEOUT"
              value: "5000"
            - name: "HZERO_AUDIT_ANNOTATION_ENABLE"
              value: "true"
            - name: "HZERO_AUDIT_API_ENABLE"
              value: "true"
            - name: "HZERO_AUDIT_OPERATION_ENABLE"
              value: "true"
            - name: "HZERO_RESOURCE_PATTERN"
              value: "/v1/*,/hzero/*,/hmnt/v1/*,/hmnt/hzero/*"
            - name: "LOG_LEVEL"
              value: "info"
            - name: "SPRING_DATASOURCE_PASSWORD"
              value: "password"
            - name: "SPRING_DATASOURCE_URL"
              value: "jdbc:mysql://localhost:3306/hzero_monitor?useUnicode=true&characterEncoding=utf-8&useSSL=false&useInformationSchema=true&remarks=true&serverTimezone=Asia/Shanghai"
            - name: "SPRING_DATASOURCE_USERNAME"
              value: "choerodon"
            - name: "SPRING_REDIS_DATABASE"
              value: "1"
            - name: "SPRING_REDIS_HOST"
              value: "localhost"
            - name: "SPRING_REDIS_POOL_MAX_ACTIVE"
              value: "50"
            - name: "SPRING_REDIS_POOL_MAX_IDLE"
              value: "50"
            - name: "SPRING_REDIS_POOL_MAX_WAIT"
              value: "5000"
            - name: "SPRING_REDIS_PORT"
              value: "6379"
          envFrom:
          ports:
            - name: server
              containerPort: 8260
              protocol: TCP
            - name: actuator
              containerPort: 8261
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: server
            initialDelaySeconds: 480
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: actuator
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 5
          resources:
            limits:
              memory: 2Gi
            requests:
              memory: 2Gi
          volumeMounts:
            - name: volume
              mountPath: /opt/choerodon
      volumes:
        - name: volume
          emptyDir: {}
---
# Source: choerodon-monitor/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-choerodon-monitor-init-db
  namespace: default
  annotations:
    "helm.sh/hook-weight": "1"
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": "before-hook-creation"
  labels:
    app.kubernetes.io/name: choerodon-monitor
    helm.sh/chart: choerodon-monitor-2.0.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  backoffLimit: 1
  parallelism: 1
  completions: 1
  activeDeadlineSeconds: 1800
  template:
    metadata:
      labels:
        app.kubernetes.io/name: choerodon-monitor
        helm.sh/chart: choerodon-monitor-2.0.1
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
    spec:
      
      initContainers:
        - name: dbtool-volume
          image:  registry.cn-shanghai.aliyuncs.com/c7n/dbtool:0.9.2
          imagePullPolicy: "IfNotPresent"
          command:
            - /bin/sh
            - -ecx
            - cp -rfp /var/choerodon/* /opt/choerodon
          volumeMounts:
          - mountPath: /opt/choerodon
            name: volume
        - name: server-volume
          image:  registry.cn-shanghai.aliyuncs.com/c7n/choerodon-monitor:2.0.1
          imagePullPolicy: "IfNotPresent"
          command:
            - /bin/sh
            - -ecx
            - cp -rfp /choerodon/* /opt/choerodon
          volumeMounts:
          - mountPath: /opt/choerodon
            name: volume
      containers:
        - name: init-databases
          image:  registry.cn-shanghai.aliyuncs.com/c7n/javabase:jdk8u282-b08
          imagePullPolicy: "IfNotPresent"
          workingDir: /opt/choerodon
          command:
            - /bin/sh
            - -ecx
            - >
              java -Ddata.init=true 
              -Dlogging.level.root=info
              -Dinstaller.exclusion=
              -Dspring.datasource.url="jdbc:mysql://localhost:3306/?useUnicode=true&characterEncoding=utf-8&useSSL=false&useInformationSchema=true&remarks=true&serverTimezone=Asia/Shanghai"
              -Dspring.datasource.username=username
              -Dspring.datasource.password=password
              -Dspring.datasource.driver-class-name=com.mysql.jdbc.Driver
              -Dinstaller.jarPath=/opt/choerodon/choerodon-monitor.jar
              -jar /opt/choerodon/choerodon-tool-liquibase.jar;
          volumeMounts:
          - mountPath: /opt/choerodon
            name: volume
      restartPolicy: Never
      serviceAccountName: default
      securityContext:
        runAsUser: 33
      volumes:
        - emptyDir: {}
          name: volume
