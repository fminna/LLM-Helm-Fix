---
# Source: connaisseur/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: connaisseur-serviceaccount
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.4.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.4.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: connaisseur/templates/redis.yaml
apiVersion: v1
kind: Secret
metadata:
  name: connaisseur-redis-secret
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.4.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.4.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
    REDIS_PASSWORD: MzYxOWMyNjQtOGU1ZC00NDNlLWIxNGYtYmFmMzgzZTNjMWFm
---
# Source: connaisseur/templates/redis.yaml
apiVersion: v1
kind: Secret
metadata:
  name: connaisseur-redis-tls
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.4.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.4.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQxVENDQXIyZ0F3SUJBZ0lRYzRRbDI3SnJWbit6UHpJOXdIOUdqakFOQmdrcWhraUc5dzBCQVFzRkFEQXcKTVM0d0xBWURWUVFERXlWamIyNXVZV2x6YzJWMWNpMXlaV1JwY3kxelpYSjJhV05sTG1SbFptRjFiSFF1YzNaagpNQ0FYRFRJME1EVXhOREl6TWpJeU4xb1lEekl4TWpRd05ESXdNak15TWpJM1dqQXdNUzR3TEFZRFZRUURFeVZqCmIyNXVZV2x6YzJWMWNpMXlaV1JwY3kxelpYSjJhV05sTG1SbFptRjFiSFF1YzNaak1JSUJJakFOQmdrcWhraUcKOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXJPNmJhZlNsWFAvQkxBZS9SR0VNRWNvaGdoK1M3Wngwb2N4Qgo4d2dxdGtoMDh6YTNUZEZXdERONjdOYlNQNWtyckVaTEVNNHhMdDFrWDFMTnFlT1hQZ2hDQmNTMWQ2ZW5BNWVICkRoN1FNb3BSc29tbEtJNFdMN2dsSFVYa3J1VHBmdmhtUHk2NGdEY0ViQ3BIUXNzQ2I5VmpKTTV4N2IwellzczcKRHBxR2grNG1ycVJ5R2VIYTRObk0xYmxsc3Erbm5oNGZjb3IvVjMvQ0xNME5CcFZJY1N3MHJXSHhHSWE4QTQ5MgovZ1NnbVJucTBHQVgyRCt5TEFJYW5nSUo1bHd1ZHlUV2NPMUU2MlRYSzdrVGxnUEFyTXJUZ0d4MXhyRFMzWVJZCmJKRFhZN2dxa1ZOUUVyelhMU3JIdDhYYldITzd2WjJrQktmRlVwSnBzd0s3NUw1dVZ3SURBUUFCbzRIb01JSGwKTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJdwpEQVlEVlIwVEFRSC9CQUl3QURDQnBRWURWUjBSQklHZE1JR2FnaGxqYjI1dVlXbHpjMlYxY2kxeVpXUnBjeTF6ClpYSjJhV05sZ2lGamIyNXVZV2x6YzJWMWNpMXlaV1JwY3kxelpYSjJhV05sTG1SbFptRjFiSFNDSldOdmJtNWgKYVhOelpYVnlMWEpsWkdsekxYTmxjblpwWTJVdVpHVm1ZWFZzZEM1emRtT0NNMk52Ym01aGFYTnpaWFZ5TFhKbApaR2x6TFhObGNuWnBZMlV1WkdWbVlYVnNkQzV6ZG1NdVkyeDFjM1JsY2k1c2IyTmhiREFOQmdrcWhraUc5dzBCCkFRc0ZBQU9DQVFFQVhXMWRDUGZyTi9hamJ6cnFKYUdudXpYYS9IYWZUSC9NQWR1S1N0R0ljVnpKMTJtc3I0d2wKK3FIb0ZLV2hRQkxlOTdXdGFWMnl5MTVaRzBnQUhCU3VvQjJkODVwMkRaZkRGMWtURzVjam1GdmJRbFVSaXY4Ugp0VXZpby9yU2RLNWhZLzMyMTdYZFp2THIvWmovUHhsS1VFWS9UbFpGS0tZb1JXaS9hYUU5MWJBUUh0MkJNeWkyCjRBK2R0QnUzcU9KNm1jMEx4Mll2bGFCcklNekRxYXZkZVV6TGJncWptUi85VVMxUWNZZkt6cEN2cW56RlJWMWUKdG51TFZlOWhMczNONUVWTXp6dzlXNmZ4UFZCTC9lNXd4ZWNiUDdRNmltV2YyQnNvTkRCb3RpMW8yMTNNTWpBNApOWEVwUFpaRTZOeXhFVkc3MC9CTVlrRlJCY1FZeUFIMlNBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBck82YmFmU2xYUC9CTEFlL1JHRU1FY29oZ2grUzdaeDBvY3hCOHdncXRraDA4emEzClRkRld0RE42N05iU1A1a3JyRVpMRU00eEx0MWtYMUxOcWVPWFBnaENCY1MxZDZlbkE1ZUhEaDdRTW9wUnNvbWwKS0k0V0w3Z2xIVVhrcnVUcGZ2aG1QeTY0Z0RjRWJDcEhRc3NDYjlWakpNNXg3YjB6WXNzN0RwcUdoKzRtcnFSeQpHZUhhNE5uTTFibGxzcStubmg0ZmNvci9WMy9DTE0wTkJwVkljU3cwcldIeEdJYThBNDkyL2dTZ21SbnEwR0FYCjJEK3lMQUlhbmdJSjVsd3VkeVRXY08xRTYyVFhLN2tUbGdQQXJNclRnR3gxeHJEUzNZUlliSkRYWTdncWtWTlEKRXJ6WExTckh0OFhiV0hPN3ZaMmtCS2ZGVXBKcHN3Szc1TDV1VndJREFRQUJBb0lCQUhjR0Ixdkc4YVh2dGRJTApSdjdXV010SnR3UnJuT0lFQkZaMFVwUG1kQmRnQ1haNG0zTm8rT2N3WTVQdFMycFFqem1VYkFnV0VzM3h2U3JLCndCa0ZOMHlQdkhsaDZaQ0FpTGcxSzlSeEt0VU9WS3F3aUVkQWZFNjl6SFc0Ykd4Znk4SURUOFIrOEtmMnRnbUkKaytHSi9wUmdaMHVtOTgwc290aUZqcEUvbEFhcnBtZXVXUDJnZFIvamlRQXFFQU5pYkNtbit4YzRZcFZaZWpPWgpDQTFSMTU3bFVMZlJUTFJUUTlnbDFYczF5YWxjeEtNbVpKUG12YXZIRWNjWmkwMTFzRzg1UFg4SmVadEpNOTFsCi9WbWp2TUlXQmRuYURDenYvVDRMeEtyNEJuVWorZ0xrN2I1OWJXbmd2ZFhCQ284NzdTM3ZWSkxiUEJwWHhKSkgKUTYwc2wzRUNnWUVBeUtPNmZpWXY3RGVBMkw3SEpSb0JER0llZktTbFRpZjAvN21ZS3RBRnVpS3hUSnpTOVJkawpZelBCeklUVFFWeSt3c0FDeVMxdnozcUpZcG5QYU1OeHVrZVgzWjdPUWJvdDVVRml2K2tNMnpRbkpFd3BqM0dDCnFRWU1oSzJzdml5cE0xeEFuL3FFODM4b0pYTkpzYll0U2VDUnM3QlN4ZHhkaHhsYi9oM1dKTmtDZ1lFQTNLVysKNXJrRk1SUWtyd2g4SzBoanlOalpQOEFnUTJoM1JHTkRXTGFlOXdUaHgrZzZwU09VQy90SXpwcEx3SUZuK2lyZgp3M0ZGNmRkZmtXZmVBY3kzenFicTJ4MDhNb2JCV0NNZFc5SnFkbEJoSDZ5VWk3bWp1UGdmemFzM1ZrcnYyTHN1CjBxWlMwMG1XeDhHZ3pvOHN1aXMwakl5Y1Bja2Y5RzBsVk12MmJxOENnWUVBckxRaVowdS9uSGo2TTVla0c4K1MKYjNKV0E3eEZma3p1bXVES2xxK1Evbk8yWWRmcnpvUmdLUFA0TVc5ejJLTllvSkplMDRTRTVmYjRJeU42WVJjNgo0Ym1XZzNHYTRRQzlXTVU3bHkybm4xZjVDVWwxekw5TVZPbWNCT2pwOUpqRTNDemdnOVJFZE1SVGJra2FlaG55ClNkRkFHWWdBOThlRHlqS04rT0w5M2FFQ2dZQXRzWlZyS24zTXdDTW9yRlVxa1g4NHBNKzR5QXptYU1mcVBiUkEKdHZFTXJ0SWpHQkN0Q2tVcWhndDUzYkk2VjVJMDJKUW1ZVnJkSm1FQU44WmVFUXN2bkptZWJ0dDhpek9YRVE2UAphVy9xdUpLa2dKVHlxcXNoTHlGRzhtSXZXSzE2OEtpdHJ3d1AvWGxnUE5VVWNjb05jODBhSGpSdEJ5MjY3SytDCmRBckF1UUtCZ0ZRZjJ2b0xLRDNNemtSMUpyZWlZQjlyOCtLck1yZUNQbWNZeDlCVFlsN2t2WnM0ZWZZOUd2YUkKaTZYTVAvNmczZlcrc0RkYzBEQzVZd0VpSmswdHJqbi9nODJhQ1UrZFJEbGdYa2M1Vit3Tm5MQkNIZHdBQ3p1LwpuUHF4VWVpVXo3TFhNMFNEYVIyL0JvaFJWYmtVWVdzNEVFTkVqNlM1aTRjcEh1R1k0MGlYCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: connaisseur/templates/webhook+certificate.yaml
apiVersion: v1
kind: Secret
metadata:
  name: connaisseur-tls
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.4.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.4.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURsakNDQW42Z0F3SUJBZ0lRS0lWT3dTaytnZCtyNWYveWtJUERzREFOQmdrcWhraUc5dzBCQVFzRkFEQW0KTVNRd0lnWURWUVFERXh0amIyNXVZV2x6YzJWMWNpMXpkbU11WkdWbVlYVnNkQzV6ZG1Nd0lCY05NalF3TlRFMApNak15TWpJM1doZ1BNakV5TkRBME1qQXlNekl5TWpkYU1DWXhKREFpQmdOVkJBTVRHMk52Ym01aGFYTnpaWFZ5CkxYTjJZeTVrWldaaGRXeDBMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUIKQUtWYTU4MVhUYU41Nm1ML0NkS3VYOHZZWE81SGRlZitLSEtpTDI4eGdteUJ2ZE5OakxVdXRkK0N5bzlEaGNxTAprSjdweEJnZVN4SDZSTGdQUzBrODVvSEo5SXZPbmpWRFY0WHpYY0hXbG5QTTR5OGtKUW9DcXBYSVYxK1FGb0swCjJEb0dhSjd2a0Z1azFwNFFvWVJFcUNpV2xyNXdKbWxnNGpMOWp2eVE2enpCWjY5bU5EVEtiT1c5eWFnS3pnQWMKWlVtdkcrdlhydWlrazlSUWVyYyt4ZWNLNFVDenFGNWt6eEVrMCt3MmorelFZYzY3RW9xdzAyeGRCdzQ0OU11NwpSNDc5cmhONWN3aHpNN1V2NDNkcnU2UkRBdmxOMUp5NlNhYWFLVHlZcldRNkNidWgyNUl3aUFoNUd0VzNjOFJUCnNDSmlzQTdPM1NmbmpkTVY1MEhETzZVQ0F3RUFBYU9CdlRDQnVqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdld1lEVlIwUgpCSFF3Y29JUFkyOXVibUZwYzNObGRYSXRjM1pqZ2hkamIyNXVZV2x6YzJWMWNpMXpkbU11WkdWbVlYVnNkSUliClkyOXVibUZwYzNObGRYSXRjM1pqTG1SbFptRjFiSFF1YzNaamdpbGpiMjV1WVdsemMyVjFjaTF6ZG1NdVpHVm0KWVhWc2RDNXpkbU11WTJ4MWMzUmxjaTVzYjJOaGJEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFvN3prNFN3awpDc3hSR2s4WEsxQjhHSTVZdklhblc4Q0JYaE1uTHNTN1huTGEvYVBReHAzcHlZbHhOQUM5bHZkem9kNHEwQm40CnRXc3EvREJkNmRVQTFMZmJwK2JCMzJsb2RFRlFxYUs5bk9rU25pbVlRMlJSWDlQdzNqNm9CNm96dEx3QTMzc3kKdVh5SUVXU3RhMTJrck01R1AvUi9BZ1lCMVJKZlREWG1uRC96U0E1UjhSNEFIcUdiU3dQRGtrQ3pRRzc3M1UwbApxcTJpU3hFSGFVdmlrNCtpU1R6M21hOGtrTnNaRHphS3FoTkJ1eUJuK1BQL2ZFaXBqNG93L3pSS3dEYlEzL0x0CkJPNEY0MWUvYWJJRUlaZzN1RTNxY3hMd2pMSXZJRXBFNEdkNGtaZ1pkVnQreFgvbjhRcUxJWDRCeVNlOFlDNmYKZE5QYWgwTHJoTkUwbmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcFZybnpWZE5vM25xWXY4SjBxNWZ5OWhjN2tkMTUvNG9jcUl2YnpHQ2JJRzkwMDJNCnRTNjEzNExLajBPRnlvdVFudW5FR0I1TEVmcEV1QTlMU1R6bWdjbjBpODZlTlVOWGhmTmR3ZGFXYzh6akx5UWwKQ2dLcWxjaFhYNUFXZ3JUWU9nWm9udStRVzZUV25oQ2hoRVNvS0phV3ZuQW1hV0RpTXYyTy9KRHJQTUZucjJZMApOTXBzNWIzSnFBck9BQnhsU2E4YjY5ZXU2S1NUMUZCNnR6N0Y1d3JoUUxPb1htVFBFU1RUN0RhUDdOQmh6cnNTCmlyRFRiRjBIRGpqMHk3dEhqdjJ1RTNsekNITXp0Uy9qZDJ1N3BFTUMrVTNVbkxwSnBwb3BQSml0WkRvSnU2SGIKa2pDSUNIa2ExYmR6eEZPd0ltS3dEczdkSitlTjB4WG5RY003cFFJREFRQUJBb0lCQURpY1A4SHdRcmRXRk9XaApsUlpZOXBrT1VQcU80cEh6Vkp1eVpQVDNpVVJtd3J0bDBHZHpQM2J2Q3pRekZNbjhNQjRId0VmVmp6UHZiN2xvCkd3bE8zVWZRQVhZZjNkQTBadkdJR1RBMHJEdW5DSnhxRG5nMzQzajJKdHVqcytFNTB0RkN3bXl2YmNmQ1RtdTkKRzk3eHRuUjI0ZEwvQ0ZlSmdNZWVRV2E4b3B5Z3VScG5ESVJhZFJydUJZOE5xTE1rNEU3UklwMHNsUVE1cnVIbQpGWEpxNFRNVFZFWGRNMW9RYkoxSkMxWittUy9BdmxiOG9reHVXbk54WEFuM0Z5VWFOY3EwSnR2UHJHQThkWWo3ClIvdWRHandCWGs5d3FZKzc3OE5YN0RUclQ3dVZiV0t5eGR2cGJpSkxyQTI4c0htelNRaGV5MWFpSkxOWUQ4bVMKM2NReFBWMENnWUVBd1JzRldGRi9uUWRDRzVXRWhFL2pQempiQWNBcXVnWW1XOVdqSmRSejMweExKTXJlUGtOTwpkbnV4b1RuenpPK3pCaEtDOUgreFM0UlpVcnJ0UERPeU9leHVSdXZyckplS2NaT2llbjczWU01TXQ3QnVoYm0yCjVGR20vM2tPdjhzYk5OUjVvYWUyRnZ1NG9xWnp3RFNSS3BlSi9zNkJDYnRLTEdtWXBGTzdPT2NDZ1lFQTJ6WVQKUXljVzBBa3FXM2NRaCtobzJQd3gxdkRqOWUvSEF2U3V1eVZERExEUE1UOSt3VkdZRnZWWFdlZkkxMHRGcUF2cQptNXN5d0IvVlAvb0pPVlBlbnlmV2VxZDJVSXVmQ3U1Mk0vd21lVW1BWWVPMngrSGpzYVgyWmJDRFNxZ3p4NzhCCkp5bDA2RWpaWEl1c3ZLYVNGRG1UczN1TW1TNzRnaXh0ckFCVkdaTUNnWUJMS2w5c1AxenpISzRvMm94WWpGZ2kKZGRrWjExbEtTN2FHcktQeXg3M0t2NEhJY29jTHFWdFRWMWFQTVdXcThlcTNoR0VoRnN0R1g5LzlDZkhxS3gxRwoycmNhT0I3bWNaNWNFMkY5V1FxbHplZWk0TFJFclVONW9DYm03cEpGS2FRUGJsMWlCVXdscWhuMmhlQXNnc20yCjBJSFFnMFZMS25IMjA2dXMyMExYSlFLQmdRRFN5Nnc0UGlXTXhkT0tndk5OamVzTkJXOHozdytIVngwTHRaazAKODM4SGZCcXhvL3BURWhCcnUxOVZZRE5jL05BdDZjK2Y5TjBYclVUV3NhMGZDSXlpaForVThPWXdUQ01UVXY0dAp2VUtPRFdVOFBNcHVhY1VYOXB6N2FvTEdUdnNFRUtPZU1ocHVxR2NFdkhmT0xXdDVzV2hjQnVuTUFFUU9nWVN4CkN0ektxd0tCZ0V3R3o1eFdrYXJpeVVlMHlsS0tVTG1BQ3FRYWZCZER1UUQ2VzJnekptWkZVcjNSSFhoeEdHWDMKRERCanJ6VDdvMHNlYUZMcHk3NUo1KzE3K3Z3czV2QWZBSnR3YjNVSVZ5Y3VqY2lJdnd5aVE3Y3lkWFE2L3d1eQp4Zzk2dzdnUDJVVTV2Tktsck5JVXZxb0dsWVZtYXdNa2VQa3lnU09pdkswZC9FdmRnUktRCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: connaisseur/templates/configmaps.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: connaisseur-app-config
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.4.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.4.0"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    validators:
    -
      approve: true
      name: allow
      type: static
    -
      approve: false
      name: deny
      type: static
    -
      name: dockerhub
      trustRoots:
      - key: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEOXYta5TgdCwXTCnLU09W5T4M4r9f
          QQrqJuADP6U7g5r9ICgPSmZuRHP/1AYUfOQW3baveKsT969EfELKj1lfCA==
          -----END PUBLIC KEY-----
        name: default
      - key: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEsx28WV7BsQfnHF1kZmpdCTTLJaWe
          d0CA+JOi8H4REuBaWSZ5zPDe468WuOJ6f71E7WFg3CVEVYHuoZt2UYbN/Q==
          -----END PUBLIC KEY-----
        name: sse
      type: notaryv1
    policy:
    -
      pattern: '*:*'
      validator: deny
    -
      pattern: docker.io/library/*:*
      validator: dockerhub
    -
      pattern: docker.io/securesystemsengineering/*:*
      validator: dockerhub
      with:
        trustRoot: sse
    -
      pattern: registry.k8s.io/*:*
      validator: allow
---
# Source: connaisseur/templates/configmaps.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: connaisseur-alert-config
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.4.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.4.0"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
      {}
---
# Source: connaisseur/templates/env.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: connaisseur-env
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.4.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.4.0"
    app.kubernetes.io/managed-by: Helm
data:
  AUTOMATIC_CHILD_APPROVAL: "true"
  AUTOMATIC_UNCHANGED_APPROVAL: "false"
  DETECTION_MODE: "false"
  RESOURCE_VALIDATION_MODE: "all"
  LOG_LEVEL: "info"
---
# Source: connaisseur/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: connaisseur-cluster-role
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.4.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.4.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["pods", "replicationcontrollers"]
  verbs: ["get"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get"]
---
# Source: connaisseur/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: connaisseur-cluster-role-binding
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.4.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.4.0"
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: connaisseur-serviceaccount
  namespace: default
roleRef:
  kind: ClusterRole
  name: connaisseur-cluster-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: connaisseur/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: connaisseur-role
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.4.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.4.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]
---
# Source: connaisseur/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: connaisseur-role-binding
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.4.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.4.0"
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: connaisseur-serviceaccount
  namespace: default
roleRef:
  kind: Role
  name: connaisseur-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: connaisseur/templates/redis.yaml
apiVersion: v1
kind: Service
metadata:
  name: connaisseur-redis-service
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.4.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 6379
      targetPort: 6379
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: redis
---
# Source: connaisseur/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: connaisseur-svc
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.4.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 5000
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
---
# Source: connaisseur/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: connaisseur
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.4.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.4.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    checksum/config: 454170a039bebf88596c9089633a21de313602dd53a0dbb97c8f2c40be719cef
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: connaisseur
      app.kubernetes.io/instance: connaisseur
  template:
    metadata:
      labels:
        app.kubernetes.io/name: connaisseur
        app.kubernetes.io/instance: connaisseur
      annotations:
        checksum/config: 454170a039bebf88596c9089633a21de313602dd53a0dbb97c8f2c40be719cef
    spec:
      serviceAccountName: connaisseur-serviceaccount
      containers:
        - name: connaisseur
          image: docker.io/securesystemsengineering/connaisseur:v3.4.0
          imagePullPolicy: Always
          ports:
            - name: https
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: https
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /ready
              port: https
              scheme: HTTPS
          startupProbe:
            httpGet:
              path: /start
              port: https
              scheme: HTTPS
            periodSeconds: 5
            failureThreshold: 30
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 20001
            runAsNonRoot: true
            runAsUser: 10001
            seccompProfile:
              type: RuntimeDefault
          resources:
            limits:
              cpu: 1000m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - name: certs
              mountPath: /app/certs
              readOnly: true
            - name: app-config
              mountPath: /app/config
              readOnly: true
            - name: redis-certs
              mountPath: /app/redis-certs/tls.crt
              readOnly: true
              subPath: tls.crt
            - name: connaisseur-alert-config
              mountPath: /app/alerts/config.yaml
              readOnly: true
              subPath: config.yaml
            
          envFrom:
          - configMapRef:
              name: connaisseur-env
          - secretRef:
              name: connaisseur-redis-secret
          env:
          - name: REDIS_HOST
            value: connaisseur-redis-service
          
      volumes:
        - name: certs
          secret:
            secretName: connaisseur-tls
        - name: redis-certs
          secret:
            secretName: connaisseur-redis-tls
        - name: app-config
          configMap:
            name: connaisseur-app-config
        - name: connaisseur-alert-config
          configMap:
            name: connaisseur-alert-config
        
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - connaisseur
              topologyKey: kubernetes.io/hostname
            weight: 100
      tolerations:
        []
      nodeSelector:
        {}
      securityContext:
        {}
---
# Source: connaisseur/templates/redis.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: connaisseur-redis
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.4.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.4.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    checksum/config: 454170a039bebf88596c9089633a21de313602dd53a0dbb97c8f2c40be719cef
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: connaisseur
      app.kubernetes.io/instance: redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: connaisseur
        app.kubernetes.io/instance: redis
      annotations:
        checksum/config: 454170a039bebf88596c9089633a21de313602dd53a0dbb97c8f2c40be719cef
    spec:
      automountServiceAccountToken: false
      containers:
      - name: redis
        image: redis:7
        imagePullPolicy: Always
        args:
          - --requirepass
          - $(REDIS_PASSWORD)
          - --tls-cert-file
          - /cfg/certs/tls.crt
          - --tls-key-file
          - /cfg/certs/tls.key
          - --tls-auth-clients
          - "no"
          - --tls-port
          - "6379"
          - --port
          - "6380"
          - --loglevel
          - "notice"
          - --rename-command
          - FLUSHALL
          - ""
          - --rename-command
          - FLUSHDB
          - ""
        ports:
          - containerPort: 6379
            name: redis
            protocol: TCP
        livenessProbe:
          exec:
            command:
              - redis-cli
              - -p
              - "6380"
              - ping
        readinessProbe:
          exec:
            command:
              - redis-cli
              - -p
              - "6380"
              - ping
        volumeMounts:
          - name: certs
            mountPath: /cfg/certs
            readOnly: true
        envFrom:
          - secretRef:
              name: connaisseur-redis-secret
        resources:
            limits:
              cpu: 1000m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
        securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 20001
            runAsNonRoot: true
            runAsUser: 10001
            seccompProfile:
              type: RuntimeDefault
      securityContext:
        {}
      volumes:
        - name: certs
          secret:
            secretName: connaisseur-redis-tls
---
# Source: connaisseur/templates/webhook+certificate.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: connaisseur-webhook
  labels:
    helm.sh/chart: connaisseur-2.4.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.4.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation, hook-succeeded, hook-failed
webhooks:
  - name: connaisseur-svc.default.svc
    failurePolicy: Ignore
    reinvocationPolicy: Never
    clientConfig:
      service:
        name: connaisseur-svc
        namespace: default
        path: /mutate
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURsakNDQW42Z0F3SUJBZ0lRS0lWT3dTaytnZCtyNWYveWtJUERzREFOQmdrcWhraUc5dzBCQVFzRkFEQW0KTVNRd0lnWURWUVFERXh0amIyNXVZV2x6YzJWMWNpMXpkbU11WkdWbVlYVnNkQzV6ZG1Nd0lCY05NalF3TlRFMApNak15TWpJM1doZ1BNakV5TkRBME1qQXlNekl5TWpkYU1DWXhKREFpQmdOVkJBTVRHMk52Ym01aGFYTnpaWFZ5CkxYTjJZeTVrWldaaGRXeDBMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUIKQUtWYTU4MVhUYU41Nm1ML0NkS3VYOHZZWE81SGRlZitLSEtpTDI4eGdteUJ2ZE5OakxVdXRkK0N5bzlEaGNxTAprSjdweEJnZVN4SDZSTGdQUzBrODVvSEo5SXZPbmpWRFY0WHpYY0hXbG5QTTR5OGtKUW9DcXBYSVYxK1FGb0swCjJEb0dhSjd2a0Z1azFwNFFvWVJFcUNpV2xyNXdKbWxnNGpMOWp2eVE2enpCWjY5bU5EVEtiT1c5eWFnS3pnQWMKWlVtdkcrdlhydWlrazlSUWVyYyt4ZWNLNFVDenFGNWt6eEVrMCt3MmorelFZYzY3RW9xdzAyeGRCdzQ0OU11NwpSNDc5cmhONWN3aHpNN1V2NDNkcnU2UkRBdmxOMUp5NlNhYWFLVHlZcldRNkNidWgyNUl3aUFoNUd0VzNjOFJUCnNDSmlzQTdPM1NmbmpkTVY1MEhETzZVQ0F3RUFBYU9CdlRDQnVqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdld1lEVlIwUgpCSFF3Y29JUFkyOXVibUZwYzNObGRYSXRjM1pqZ2hkamIyNXVZV2x6YzJWMWNpMXpkbU11WkdWbVlYVnNkSUliClkyOXVibUZwYzNObGRYSXRjM1pqTG1SbFptRjFiSFF1YzNaamdpbGpiMjV1WVdsemMyVjFjaTF6ZG1NdVpHVm0KWVhWc2RDNXpkbU11WTJ4MWMzUmxjaTVzYjJOaGJEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFvN3prNFN3awpDc3hSR2s4WEsxQjhHSTVZdklhblc4Q0JYaE1uTHNTN1huTGEvYVBReHAzcHlZbHhOQUM5bHZkem9kNHEwQm40CnRXc3EvREJkNmRVQTFMZmJwK2JCMzJsb2RFRlFxYUs5bk9rU25pbVlRMlJSWDlQdzNqNm9CNm96dEx3QTMzc3kKdVh5SUVXU3RhMTJrck01R1AvUi9BZ1lCMVJKZlREWG1uRC96U0E1UjhSNEFIcUdiU3dQRGtrQ3pRRzc3M1UwbApxcTJpU3hFSGFVdmlrNCtpU1R6M21hOGtrTnNaRHphS3FoTkJ1eUJuK1BQL2ZFaXBqNG93L3pSS3dEYlEzL0x0CkJPNEY0MWUvYWJJRUlaZzN1RTNxY3hMd2pMSXZJRXBFNEdkNGtaZ1pkVnQreFgvbjhRcUxJWDRCeVNlOFlDNmYKZE5QYWgwTHJoTkUwbmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    rules: []
    sideEffects: None
    admissionReviewVersions: ["v1"]
---
# Source: connaisseur/templates/webhook+certificate.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: connaisseur-webhook
  labels:
    helm.sh/chart: connaisseur-2.4.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.4.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": post-install, post-upgrade, post-rollback
webhooks:
  - name: connaisseur-svc.default.svc
    failurePolicy: Fail
    reinvocationPolicy: Never
    clientConfig:
      service:
        name: connaisseur-svc
        namespace: default
        path: /mutate
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURsakNDQW42Z0F3SUJBZ0lRS0lWT3dTaytnZCtyNWYveWtJUERzREFOQmdrcWhraUc5dzBCQVFzRkFEQW0KTVNRd0lnWURWUVFERXh0amIyNXVZV2x6YzJWMWNpMXpkbU11WkdWbVlYVnNkQzV6ZG1Nd0lCY05NalF3TlRFMApNak15TWpJM1doZ1BNakV5TkRBME1qQXlNekl5TWpkYU1DWXhKREFpQmdOVkJBTVRHMk52Ym01aGFYTnpaWFZ5CkxYTjJZeTVrWldaaGRXeDBMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUIKQUtWYTU4MVhUYU41Nm1ML0NkS3VYOHZZWE81SGRlZitLSEtpTDI4eGdteUJ2ZE5OakxVdXRkK0N5bzlEaGNxTAprSjdweEJnZVN4SDZSTGdQUzBrODVvSEo5SXZPbmpWRFY0WHpYY0hXbG5QTTR5OGtKUW9DcXBYSVYxK1FGb0swCjJEb0dhSjd2a0Z1azFwNFFvWVJFcUNpV2xyNXdKbWxnNGpMOWp2eVE2enpCWjY5bU5EVEtiT1c5eWFnS3pnQWMKWlVtdkcrdlhydWlrazlSUWVyYyt4ZWNLNFVDenFGNWt6eEVrMCt3MmorelFZYzY3RW9xdzAyeGRCdzQ0OU11NwpSNDc5cmhONWN3aHpNN1V2NDNkcnU2UkRBdmxOMUp5NlNhYWFLVHlZcldRNkNidWgyNUl3aUFoNUd0VzNjOFJUCnNDSmlzQTdPM1NmbmpkTVY1MEhETzZVQ0F3RUFBYU9CdlRDQnVqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdld1lEVlIwUgpCSFF3Y29JUFkyOXVibUZwYzNObGRYSXRjM1pqZ2hkamIyNXVZV2x6YzJWMWNpMXpkbU11WkdWbVlYVnNkSUliClkyOXVibUZwYzNObGRYSXRjM1pqTG1SbFptRjFiSFF1YzNaamdpbGpiMjV1WVdsemMyVjFjaTF6ZG1NdVpHVm0KWVhWc2RDNXpkbU11WTJ4MWMzUmxjaTVzYjJOaGJEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFvN3prNFN3awpDc3hSR2s4WEsxQjhHSTVZdklhblc4Q0JYaE1uTHNTN1huTGEvYVBReHAzcHlZbHhOQUM5bHZkem9kNHEwQm40CnRXc3EvREJkNmRVQTFMZmJwK2JCMzJsb2RFRlFxYUs5bk9rU25pbVlRMlJSWDlQdzNqNm9CNm96dEx3QTMzc3kKdVh5SUVXU3RhMTJrck01R1AvUi9BZ1lCMVJKZlREWG1uRC96U0E1UjhSNEFIcUdiU3dQRGtrQ3pRRzc3M1UwbApxcTJpU3hFSGFVdmlrNCtpU1R6M21hOGtrTnNaRHphS3FoTkJ1eUJuK1BQL2ZFaXBqNG93L3pSS3dEYlEzL0x0CkJPNEY0MWUvYWJJRUlaZzN1RTNxY3hMd2pMSXZJRXBFNEdkNGtaZ1pkVnQreFgvbjhRcUxJWDRCeVNlOFlDNmYKZE5QYWgwTHJoTkUwbmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["apps"]
        apiVersions: ["v1"]
        resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
      - operations: ["CREATE", "UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods", "pods/ephemeralcontainers", "replicationcontrollers"]
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["batch"]
        apiVersions: ["v1"]
        resources: ["jobs", "cronjobs"]
    sideEffects: None
    timeoutSeconds: 30
    admissionReviewVersions: ["v1"]
    namespaceSelector:
      matchExpressions:
      - key: securesystemsengineering.connaisseur/webhook
        operator: NotIn
        values:
          - ignore
