---
# Source: restcube/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-restcube
  labels:
    app.kubernetes.io/name: restcube
    helm.sh/chart: restcube-0.2.9
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: restcube
    app.kubernetes.io/instance: release-name
---
# Source: restcube/templates/celery-worker-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-restcube-worker
  labels:
    app.kubernetes.io/name: restcube-worker
    helm.sh/chart: restcube-0.2.9
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: restcube-worker
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: restcube-worker
        app.kubernetes.io/instance: release-name
    spec:
      # Turning single-request-reopen option on would fix issue where in two requests from the same port are
      # not handled correctly it will close the socket and open a new one before sending the second request.
      dnsConfig:
        options:
          - name: single-request-reopen
      containers:
        - name: restcube
          image: "opendatacube/restcube:latest"
          imagePullPolicy: IfNotPresent
          args: []
          env:
          - name: DB_HOSTNAME
            value: "localhost"
          - name: DB_PORT
            value: "5432"
          - name: DB_DATABASE
            value: "datacube"
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: datacube
                key: postgres-username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: datacube
                key: postgres-password
          - name: VIRTUAL_HOST
            value: localhost,127.0.0.
          resources:
            {}
---
# Source: restcube/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-restcube
  labels:
    app.kubernetes.io/name: restcube
    helm.sh/chart: restcube-0.2.9
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: restcube
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: restcube
        app.kubernetes.io/instance: release-name    
    spec:
      # Turning single-request-reopen option on would fix issue where in two requests from the same port are
      # not handled correctly it will close the socket and open a new one before sending the second request.
      dnsConfig:
        options:
          - name: single-request-reopen
      containers:
        - name: restcube
          image: "opendatacube/restcube:latest"
          imagePullPolicy: IfNotPresent
          args: []
          env:
          - name: DB_HOSTNAME
            value: "localhost"
          - name: DB_PORT
            value: "5432"
          - name: DB_DATABASE
            value: "datacube"
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: datacube
                key: postgres-username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: datacube
                key: postgres-password
          - name: VIRTUAL_HOST
            value: localhost,127.0.0.
          volumeMounts:
          - name: kubectl-binary
            mountPath: /usr/local/bin/kubectl
            readOnly: true
          - name: kubectl-config
            mountPath: /root/.kube/config
            readOnly: true
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            {}
      volumes:
      - name: kubectl-binary
        hostPath:
          path: /usr/local/bin/kubectl
      - name: kubectl-config
        hostPath:
          path: /root/.kube/config
