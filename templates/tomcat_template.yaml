---
# Source: tomcat/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-tomcat
  labels:
    app: release-name-tomcat
    chart: "tomcat-3.0.1"
    release: "release-name"
    heritage: "Helm"
type: Opaque
data:
  
  tomcat-password: "TWt0RkdyeTlmSA=="
---
# Source: tomcat/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-tomcat
  labels:
    app: release-name-tomcat
    chart: "tomcat-3.0.1"
    release: "release-name"
    heritage: "Helm"
  annotations:
    volume.alpha.kubernetes.io/storage-class: default
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: tomcat/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-tomcat
  labels:
    app: release-name-tomcat
    chart: "tomcat-3.0.1"
    release: "release-name"
    heritage: "Helm"
spec:
  type: LoadBalancer
  externalTrafficPolicy: "Cluster"
  ports:
    - name: http
      port: 80
      targetPort: http
  selector:
    app: release-name-tomcat
---
# Source: tomcat/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-tomcat
  labels:
    app: release-name-tomcat
    chart: "tomcat-3.0.1"
    release: "release-name"
    heritage: "Helm"
spec:
  selector:
    matchLabels:
      app: release-name-tomcat
      release: "release-name"
  template:
    metadata:
      labels:
        app: release-name-tomcat
        chart: "tomcat-3.0.1"
        release: "release-name"
    spec:
      securityContext:
        fsGroup: 1001
        runAsUser: 1001      
      containers:
      - name: release-name-tomcat
        image: "docker.io/bitnami/tomcat:9.0.20"
        imagePullPolicy: "IfNotPresent"
        env:
        - name: TOMCAT_USERNAME
          value: "user"
        - name: TOMCAT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: release-name-tomcat
              key: tomcat-password
        - name: TOMCAT_ALLOW_REMOTE_MANAGEMENT
          value: "0"
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 120
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 3
          periodSeconds: 51
        resources:
          requests:
            cpu: 300m
            memory: 512Mi
        volumeMounts:
        - name: tomcat-data
          mountPath: /bitnami/tomcat
      volumes:
      - name: tomcat-data
        persistentVolumeClaim:
          claimName: release-name-tomcat
