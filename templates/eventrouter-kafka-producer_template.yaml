---
# Source: eventrouter-kafka-producer/templates/base.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-eventrouter-kafka-producer
  labels:
    helm.sh/chart: eventrouter-kafka-producer-0.1.1
    app.kubernetes.io/name: eventrouter-kafka-producer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: eventrouter-kafka-producer/templates/base.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-service
  labels:
    helm.sh/chart: eventrouter-kafka-producer-0.1.1
    app.kubernetes.io/name: eventrouter-kafka-producer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app.kubernetes.io/name: eventrouter-kafka-producer
    app.kubernetes.io/instance: release-name
---
# Source: eventrouter-kafka-producer/templates/base.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  eventrouter-kafka-producer
  namespace: default
  labels:
    helm.sh/chart: eventrouter-kafka-producer-0.1.1
    app.kubernetes.io/name: eventrouter-kafka-producer
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: eventrouter-kafka-producer
      app.kubernetes.io/instance: release-name
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        helm.sh/chart: eventrouter-kafka-producer-0.1.1
        app.kubernetes.io/name: eventrouter-kafka-producer
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "0.1.1"
        app.kubernetes.io/managed-by: Helm
    spec:
      terminationGracePeriodSeconds: 60
      serviceAccountName: release-name-eventrouter-kafka-producer
      securityContext:
        {}
      containers:
        - name: eventrouter-kafka-producer
          securityContext:
            {}
          image: "ghcr.io/krateoplatformops/eventrouter-kafka-producer:0.1.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            {}
          env:
            - name: EVENTROUTER_KAFKA_PRODUCER_PORT
              value: "8080"
            - name: EVENTROUTER_KAFKA_PRODUCER_DEBUG
              value: "false"
            - name: EVENTROUTER_KAFKA_PRODUCER_BROKERS
              value: 127.0.0.1:9092
            - name: EVENTROUTER_KAFKA_PRODUCER_TOPIC
              value: test-topic
