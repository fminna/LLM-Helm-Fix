---
# Source: token-server/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-token-server
data:
  ADDR: :8080
  CLIENT_CREDENTIALS: "false"
  EXPIRE_SECONDS: "600"
  HEALTH: /health
  ROUTE: /token
---
# Source: token-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-token-server
  labels:
    helm.sh/chart: token-server-1.0.0
    app.kubernetes.io/name: token-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: token-server
    app.kubernetes.io/instance: release-name
---
# Source: token-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-token-server
  labels:
    helm.sh/chart: token-server-1.0.0
    app.kubernetes.io/name: token-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: token-server
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        rollme: "rFTl3"
      labels:
        app.kubernetes.io/name: token-server
        app.kubernetes.io/instance: release-name
        app: token-server
    spec:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app.kubernetes.io/instance: release-name
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app.kubernetes.io/instance: release-name
      securityContext:
        {}
      volumes: []
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      containers:
        - name: release-name
          securityContext:
            {}
          image: "udhos/token-server:1.0.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: https
              containerPort: 8443
              protocol: TCP
          envFrom:
          - configMapRef:
              name: release-name-token-server
          startupProbe:
            # must initialize within 3*100=300 seconds
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            periodSeconds: 3
            failureThreshold: 100
          readinessProbe:
            # not ready after 10*6=60 seconds without success
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            failureThreshold: 6
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            # kill after 20*6=120 seconds without success
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            periodSeconds: 20
            failureThreshold: 6
            successThreshold: 1
            timeoutSeconds: 10            
          resources:
            limits:
              cpu: 2000m
              ephemeral-storage: 1Gi
              memory: 1Gi
            requests:
              cpu: 300m
              ephemeral-storage: 1Gi
              memory: 300Mi
---
# Source: token-server/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: release-name-token-server
  labels:
    helm.sh/chart: token-server-1.0.0
    app.kubernetes.io/name: token-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: release-name-token-server
  minReplicas: 1
  maxReplicas: 100
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
---
# Source: token-server/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-token-server-test-connection"
  labels:
    helm.sh/chart: token-server-1.0.0
    app.kubernetes.io/name: token-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-token-server:443']
  restartPolicy: Never
